openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Admin SDK API
  description: >-
    Admin SDK lets administrators of enterprise domains to view and manage
    resources like user, groups etc. It also provides audit and usage reports of
    domain.
  version: reports_v1
  x-discovery-doc-revision: '20230619'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/admin-sdk/
servers:
  - url: https://admin.googleapis.com
components:
  schemas:
    Activities:
      properties:
        items:
          description: Each activity record in the response.
          items:
            $ref: '#/components/schemas/Activity'
          type: array
        nextPageToken:
          description: >-
            Token for retrieving the follow-on next page of the report. The
            `nextPageToken` value is used in the request's `pageToken` query
            string.
          type: string
        kind:
          type: string
          description: >-
            The type of API resource. For an activity report, the value is
            `reports#activities`.
          default: admin#reports#activities
        etag:
          type: string
          description: ETag of the resource.
      type: object
      description: JSON template for a collection of activities.
      id: Activities
    UsageReports:
      type: object
      properties:
        usageReports:
          description: Various application parameter records.
          items:
            $ref: '#/components/schemas/UsageReport'
          type: array
        kind:
          type: string
          description: >-
            The type of API resource. For a usage report, the value is
            `admin#reports#usageReports`.
          default: admin#reports#usageReports
        nextPageToken:
          description: >-
            Token to specify next page. A report with multiple pages has a
            `nextPageToken` property in the response. For your follow-on
            requests getting all of the report's pages, enter the
            `nextPageToken` value in the `pageToken` query string.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        warnings:
          type: array
          items:
            properties:
              data:
                description: Key-value pairs to give detailed information on the warning.
                type: array
                items:
                  properties:
                    key:
                      description: >-
                        Key associated with a key-value pair to give detailed
                        information on the warning.
                      type: string
                    value:
                      description: >-
                        Value associated with a key-value pair to give detailed
                        information on the warning.
                      type: string
                  type: object
              code:
                type: string
                description: >-
                  Machine readable code or warning type. The warning code value
                  is `200`.
              message:
                description: >-
                  The human readable messages for a warning are: - Data is not
                  available warning - Sorry, data for date yyyy-mm-dd for
                  application "`application name`" is not available. - Partial
                  data is available warning - Data for date yyyy-mm-dd for
                  application "`application name`" is not available right now,
                  please try again after a few hours. 
                type: string
            type: object
          description: Warnings, if any.
      id: UsageReports
    Activity:
      description: JSON template for the activity resource.
      type: object
      properties:
        etag:
          description: ETag of the entry.
          type: string
        actor:
          type: object
          properties:
            profileId:
              type: string
              description: >-
                The unique Google Workspace profile ID of the actor. This value
                might be absent if the actor is not a Google Workspace user, or
                may be the number 105250506097979753968 which acts as a
                placeholder ID.
            email:
              type: string
              description: >-
                The primary email address of the actor. May be absent if there
                is no email address associated with the actor.
            callerType:
              type: string
              description: The type of actor.
            key:
              description: >-
                Only present when `callerType` is `KEY`. Can be the
                `consumer_key` of the requestor for OAuth 2LO API requests or an
                identifier for robot accounts.
              type: string
          description: User doing the action.
        ipAddress:
          description: >-
            IP address of the user doing the action. This is the Internet
            Protocol (IP) address of the user when logging into Google
            Workspace, which may or may not reflect the user's physical
            location. For example, the IP address can be the user's proxy
            server's address or a virtual private network (VPN) address. The API
            supports IPv4 and IPv6.
          type: string
        kind:
          description: >-
            The type of API resource. For an activity report, the value is
            `audit#activity`.
          type: string
          default: admin#reports#activity
        id:
          description: Unique identifier for each activity record.
          type: object
          properties:
            time:
              format: date-time
              description: >-
                Time of occurrence of the activity. This is in UNIX epoch time
                in seconds.
              type: string
            applicationName:
              description: >-
                Application name to which the event belongs. For possible values
                see the list of applications above in `applicationName`.
              type: string
            uniqueQualifier:
              format: int64
              type: string
              description: Unique qualifier if multiple events have the same time.
            customerId:
              description: The unique identifier for a Google Workspace account.
              type: string
        ownerDomain:
          type: string
          description: >-
            This is the domain that is affected by the report's event. For
            example domain of Admin console or the Drive application's document
            owner.
        events:
          items:
            type: object
            properties:
              parameters:
                items:
                  type: object
                  properties:
                    boolValue:
                      description: Boolean value of the parameter.
                      type: boolean
                    multiIntValue:
                      items:
                        format: int64
                        type: string
                      type: array
                      description: Integer values of the parameter.
                    value:
                      type: string
                      description: String value of the parameter.
                    messageValue:
                      type: object
                      properties:
                        parameter:
                          items:
                            $ref: '#/components/schemas/NestedParameter'
                          description: Parameter values
                          type: array
                      description: >-
                        Nested parameter value pairs associated with this
                        parameter. Complex value type for a parameter are
                        returned as a list of parameter values. For example, the
                        address parameter may have a value as `[{parameter:
                        [{name: city, value: abc}]}]`
                    intValue:
                      description: Integer value of the parameter.
                      type: string
                      format: int64
                    multiMessageValue:
                      items:
                        type: object
                        properties:
                          parameter:
                            items:
                              $ref: '#/components/schemas/NestedParameter'
                            type: array
                            description: Parameter values
                      type: array
                      description: List of `messageValue` objects.
                    name:
                      description: The name of the parameter.
                      type: string
                    multiValue:
                      description: String values of the parameter.
                      items:
                        type: string
                      type: array
                type: array
                description: >-
                  Parameter value pairs for various applications. For more
                  information about `eventName` parameters, see the list of
                  event names for various applications above in
                  `applicationName`.
              type:
                description: >-
                  Type of event. The Google Workspace service or feature that an
                  administrator changes is identified in the `type` property
                  which identifies an event using the `eventName` property. For
                  a full list of the API's `type` categories, see the list of
                  event names for various applications above in
                  `applicationName`.
                type: string
              name:
                type: string
                description: >-
                  Name of the event. This is the specific name of the activity
                  reported by the API. And each `eventName` is related to a
                  specific Google Workspace service or feature which the API
                  organizes into types of events. For `eventName` request
                  parameters in general: - If no `eventName` is given, the
                  report returns all possible instances of an `eventName`. -
                  When you request an `eventName`, the API's response returns
                  all activities which contain that `eventName`. It is possible
                  that the returned activities will have other `eventName`
                  properties in addition to the one requested. For more
                  information about `eventName` properties, see the list of
                  event names for various applications above in
                  `applicationName`.
          type: array
          description: Activity events in the report.
      id: Activity
    Channel:
      properties:
        expiration:
          format: int64
          description: >-
            Date and time of notification channel expiration, expressed as a
            Unix timestamp, in milliseconds. Optional.
          type: string
        payload:
          description: >-
            A Boolean value to indicate whether payload is wanted. A payload is
            data that is sent in the body of an HTTP POST, PUT, or PATCH message
            and contains important information about the request. Optional.
          type: boolean
        id:
          description: A UUID or similar unique string that identifies this channel.
          type: string
        params:
          additionalProperties:
            type: string
          type: object
          description: >-
            Additional parameters controlling delivery channel behavior.
            Optional.
        address:
          description: The address where notifications are delivered for this channel.
          type: string
        resourceUri:
          type: string
          description: A version-specific identifier for the watched resource.
        resourceId:
          description: >-
            An opaque ID that identifies the resource being watched on this
            channel. Stable across different API versions.
          type: string
        type:
          description: >-
            The type of delivery mechanism used for this channel. The value
            should be set to `"web_hook"`.
          type: string
        kind:
          default: api#channel
          type: string
          description: >-
            Identifies this as a notification channel used to watch for changes
            to a resource, which is "`api#channel`".
        token:
          description: >-
            An arbitrary string delivered to the target address with each
            notification delivered over this channel. Optional.
          type: string
      id: Channel
      description: A notification channel used to watch for resource changes.
      type: object
    NestedParameter:
      description: JSON template for a parameter used in various reports.
      properties:
        boolValue:
          type: boolean
          description: Boolean value of the parameter.
        multiValue:
          description: Multiple string values of the parameter.
          items:
            type: string
          type: array
        intValue:
          format: int64
          type: string
          description: Integer value of the parameter.
        multiIntValue:
          items:
            type: string
            format: int64
          description: Multiple integer values of the parameter.
          type: array
        name:
          description: The name of the parameter.
          type: string
        multiBoolValue:
          description: Multiple boolean values of the parameter.
          items:
            type: boolean
          type: array
        value:
          description: String value of the parameter.
          type: string
      type: object
      id: NestedParameter
    UsageReport:
      description: JSON template for a usage report.
      id: UsageReport
      properties:
        kind:
          type: string
          default: admin#reports#usageReport
          description: >-
            The type of API resource. For a usage report, the value is
            `admin#reports#usageReport`.
        entity:
          properties:
            customerId:
              readOnly: true
              type: string
              description: Output only. The unique identifier of the customer's account.
            userEmail:
              readOnly: true
              description: >-
                Output only. The user's email address. Only relevant if
                entity.type = "USER"
              type: string
            entityId:
              readOnly: true
              type: string
              description: >-
                Output only. Object key. Only relevant if entity.type = "OBJECT"
                Note: external-facing name of report is "Entities" rather than
                "Objects".
            type:
              type: string
              description: Output only. The type of item. The value is `user`.
              readOnly: true
            profileId:
              description: >-
                Output only. The user's immutable Google Workspace profile
                identifier.
              readOnly: true
              type: string
          type: object
          description: Output only. Information about the type of the item.
          readOnly: true
        parameters:
          readOnly: true
          items:
            properties:
              msgValue:
                readOnly: true
                description: Output only. Nested message value of the parameter.
                items:
                  type: object
                  additionalProperties:
                    description: Properties of the object.
                    type: any
                type: array
              boolValue:
                description: Output only. Boolean value of the parameter.
                readOnly: true
                type: boolean
              intValue:
                format: int64
                type: string
                readOnly: true
                description: Output only. Integer value of the parameter.
              name:
                type: string
                description: >-
                  The name of the parameter. For the User Usage Report parameter
                  names, see the User Usage parameters reference.
              stringValue:
                description: Output only. String value of the parameter.
                readOnly: true
                type: string
              datetimeValue:
                description: >-
                  The RFC 3339 formatted value of the parameter, for example
                  2010-10-28T10:26:35.000Z.
                type: string
                readOnly: true
                format: date-time
            type: object
          type: array
          description: >-
            Output only. Parameter value pairs for various applications. For the
            Entity Usage Report parameters and values, see [the Entity Usage
            parameters
            reference](/admin-sdk/reports/v1/reference/usage-ref-appendix-a/entities).
        date:
          readOnly: true
          description: Output only. The date of the report request.
          type: string
        etag:
          description: ETag of the resource.
          type: string
      type: object
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/admin.reports.usage.readonly: View usage reports for your G Suite domain
            https://www.googleapis.com/auth/admin.reports.audit.readonly: View audit reports for your G Suite domain
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /admin/reports/v1/usage/dates/{date}:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
    get:
      description: >-
        Retrieves a report which is a collection of properties and statistics
        for a specific customer's account. For more information, see the
        Customers Usage Report guide. For more information about the customer
        report's parameters, see the Customers Usage parameters reference
        guides. 
      operationId: reports.customerUsageReports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageReports'
      parameters:
        - in: path
          name: date
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: parameters
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: customer_usage_reports
      x-stackQL-verb: select
  /admin/reports/v1/activity/users/{userKey}/applications/{applicationName}/watch:
    parameters: *ref_1
    post:
      description: >-
        Start receiving notifications for account activities. For more
        information, see Receiving Push Notifications.
      operationId: reports.activities.watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: path
          name: userKey
          required: true
          schema:
            type: string
        - in: path
          name: applicationName
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: orgUnitID
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
        - in: query
          name: eventName
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: actorIpAddress
          schema:
            type: string
        - in: query
          name: groupIdFilter
          schema:
            type: string
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
      x-stackQL-resource: activities
      x-stackQL-verb: exec
  /admin/reports/v1/activity/users/{userKey}/applications/{applicationName}:
    parameters: *ref_1
    get:
      description: >-
        Retrieves a list of activities for a specific customer's account and
        application such as the Admin console application or the Google Drive
        application. For more information, see the guides for administrator and
        Google Drive activity reports. For more information about the activity
        report's parameters, see the activity parameters reference guides. 
      operationId: reports.activities.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activities'
      parameters:
        - in: path
          name: userKey
          required: true
          schema:
            type: string
        - in: path
          name: applicationName
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
        - in: query
          name: groupIdFilter
          schema:
            type: string
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: eventName
          schema:
            type: string
        - in: query
          name: orgUnitID
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: actorIpAddress
          schema:
            type: string
      x-stackQL-resource: activities
      x-stackQL-verb: select
  /admin/reports/v1/usage/{entityType}/{entityKey}/dates/{date}:
    parameters: *ref_1
    get:
      description: >-
        Retrieves a report which is a collection of properties and statistics
        for entities used by users within the account. For more information, see
        the Entities Usage Report guide. For more information about the entities
        report's parameters, see the Entities Usage parameters reference guides.
      operationId: reports.entityUsageReports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageReports'
      parameters:
        - in: path
          name: entityType
          required: true
          schema:
            type: string
        - in: path
          name: entityKey
          required: true
          schema:
            type: string
        - in: path
          name: date
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: parameters
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: entity_usage_reports
      x-stackQL-verb: select
  /admin/reports/v1/usage/users/{userKey}/dates/{date}:
    parameters: *ref_1
    get:
      description: >-
        Retrieves a report which is a collection of properties and statistics
        for a set of users with the account. For more information, see the User
        Usage Report guide. For more information about the user report's
        parameters, see the Users Usage parameters reference guides.
      operationId: reports.userUsageReport.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageReports'
      parameters:
        - in: path
          name: userKey
          required: true
          schema:
            type: string
        - in: path
          name: date
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: parameters
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
        - in: query
          name: orgUnitID
          schema:
            type: string
        - in: query
          name: groupIdFilter
          schema:
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: user_usage_report
      x-stackQL-verb: select
  /admin/reports_v1/channels/stop:
    parameters: *ref_1
    post:
      description: Stop watching resources through this channel.
      operationId: admin.channels.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
      parameters: []
      x-stackQL-resource: channels
      x-stackQL-verb: exec
