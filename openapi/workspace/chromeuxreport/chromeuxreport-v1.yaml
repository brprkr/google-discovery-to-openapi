openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Chrome UX Report API
  description: >-
    The Chrome UX Report API lets you view real user experience data for
    millions of websites. 
  version: v1
  x-discovery-doc-revision: '20230622'
  x-generated-date: '2023-06-25'
externalDocs:
  url: >-
    https://developers.google.com/web/tools/chrome-user-experience-report/api/reference
servers:
  - url: https://chromeuxreport.googleapis.com
components:
  schemas:
    Key:
      description: Key defines all the dimensions that identify this record as unique.
      id: Key
      type: object
      properties:
        formFactor:
          enum:
            - ALL_FORM_FACTORS
            - PHONE
            - DESKTOP
            - TABLET
          type: string
          enumDescriptions:
            - The default value, representing all device classes.
            - The device class representing a "mobile"/"phone" sized client.
            - >-
              The device class representing a "desktop"/"laptop" type full size
              client.
            - The device class representing a "tablet" type client.
          description: >-
            The form factor is the device class that all users used to access
            the site for this record. If the form factor is unspecified, then
            aggregated data over all form factors will be returned.
        effectiveConnectionType:
          description: >-
            The effective connection type is the general connection class that
            all users experienced for this record. This field uses the values
            ["offline", "slow-2G", "2G", "3G", "4G"] as specified in:
            https://wicg.github.io/netinfo/#effective-connection-types If the
            effective connection type is unspecified, then aggregated data over
            all effective connection types will be returned.
          type: string
        url:
          type: string
          description: >-
            Url specifies a specific url that this record is for. Note: When
            specifying a "url" only data for that specific url will be
            aggregated.
        origin:
          type: string
          description: >-
            Origin specifies the origin that this record is for. Note: When
            specifying an origin, data for loads under this origin over all
            pages are aggregated into origin level user experience data.
    HistoryKey:
      id: HistoryKey
      properties:
        origin:
          type: string
          description: >-
            Origin specifies the origin that this record is for. Note: When
            specifying an origin, data for loads under this origin over all
            pages are aggregated into origin level user experience data.
        url:
          type: string
          description: >-
            Url specifies a specific url that this record is for. This url
            should be normalized, following the normalization actions taken in
            the request to increase the chances of successful lookup. Note: When
            specifying a "url" only data for that specific url will be
            aggregated.
        formFactor:
          description: >-
            The form factor is the device class that all users used to access
            the site for this record. If the form factor is unspecified, then
            aggregated data over all form factors will be returned.
          type: string
          enum:
            - ALL_FORM_FACTORS
            - PHONE
            - DESKTOP
            - TABLET
          enumDescriptions:
            - The default value, representing all device classes.
            - The device class representing a "mobile"/"phone" sized client.
            - >-
              The device class representing a "desktop"/"laptop" type full size
              client.
            - The device class representing a "tablet" type client.
      description: Key defines all the dimensions that identify this record as unique.
      type: object
    Percentiles:
      description: >-
        Percentiles contains synthetic values of a metric at a given statistical
        percentile. These are used for estimating a metric's value as
        experienced by a percentage of users out of the total number of users.
      id: Percentiles
      type: object
      properties:
        p75:
          type: any
          description: 75% of users experienced the given metric at or below this value.
    QueryResponse:
      description: >-
        Response payload sent back to a physical web client. This response
        contains the record found based on the identiers present in a
        `QueryRequest`. The returned response will have a record, and sometimes
        details on normalization actions taken on the request that were
        necessary to make the request successful.
      properties:
        urlNormalizationDetails:
          description: >-
            These are details about automated normalization actions that were
            taken in order to make the requested `url_pattern` valid.
          $ref: '#/components/schemas/UrlNormalization'
        record:
          description: The record that was found.
          $ref: '#/components/schemas/Record'
      id: QueryResponse
      type: object
    Date:
      type: object
      id: Date
      properties:
        year:
          format: int32
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
          type: integer
        month:
          type: integer
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          format: int32
        day:
          format: int32
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
          type: integer
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
    Bin:
      id: Bin
      description: >-
        A bin is a discrete portion of data spanning from start to end, or if no
        end is given, then from start to +inf. A bin's start and end values are
        given in the value type of the metric it represents. For example, "first
        contentful paint" is measured in milliseconds and exposed as ints,
        therefore its metric bins will use int32s for its start and end types.
        However, "cumulative layout shift" is measured in unitless decimals and
        is exposed as a decimal encoded as a string, therefore its metric bins
        will use strings for its value type.
      properties:
        start:
          type: any
          description: Start is the beginning of the data bin.
        end:
          type: any
          description: >-
            End is the end of the data bin. If end is not populated, then the
            bin has no end and is valid from start to +inf.
        density:
          description: >-
            The proportion of users that experienced this bin's value for the
            given metric.
          format: double
          type: number
      type: object
    QueryRequest:
      properties:
        origin:
          description: >-
            The url pattern "origin" refers to a url pattern that is the origin
            of a website. Examples: "https://example.com",
            "https://cloud.google.com"
          type: string
        formFactor:
          enumDescriptions:
            - The default value, representing all device classes.
            - The device class representing a "mobile"/"phone" sized client.
            - >-
              The device class representing a "desktop"/"laptop" type full size
              client.
            - The device class representing a "tablet" type client.
          description: >-
            The form factor is a query dimension that specifies the device class
            that the record's data should belong to. Note: If no form factor is
            specified, then a special record with aggregated data over all form
            factors will be returned.
          type: string
          enum:
            - ALL_FORM_FACTORS
            - PHONE
            - DESKTOP
            - TABLET
        metrics:
          items:
            type: string
          description: >-
            The metrics that should be included in the response. If none are
            specified then any metrics found will be returned. Allowed values:
            ["first_contentful_paint", "first_input_delay",
            "largest_contentful_paint", "cumulative_layout_shift",
            "experimental_time_to_first_byte",
            "experimental_interaction_to_next_paint"]
          type: array
        url:
          type: string
          description: >-
            The url pattern "url" refers to a url pattern that is any arbitrary
            url. Examples: "https://example.com/",
            "https://cloud.google.com/why-google-cloud/"
        effectiveConnectionType:
          description: >-
            The effective connection type is a query dimension that specifies
            the effective network class that the record's data should belong to.
            This field uses the values ["offline", "slow-2G", "2G", "3G", "4G"]
            as specified in:
            https://wicg.github.io/netinfo/#effective-connection-types Note: If
            no effective connection type is specified, then a special record
            with aggregated data over all effective connection types will be
            returned.
          type: string
      description: >-
        Request payload sent by a physical web client. This request includes all
        necessary context to load a particular user experience record.
      id: QueryRequest
      type: object
    TimeseriesBin:
      properties:
        end:
          description: >-
            End is the end of the data bin. If end is not populated, then the
            bin has no end and is valid from start to +inf.
          type: any
        start:
          description: Start is the beginning of the data bin.
          type: any
        densities:
          items:
            format: double
            type: number
          type: array
          description: >-
            The proportion of users that experienced this bin's value for the
            given metric in a given collection period; the index for each of
            these entries corresponds to an entry in the CollectionPeriods field
            in the HistoryRecord message, which describes when the density was
            observed in the field. Thus, the length of this list of densities is
            equal to the length of the CollectionPeriods field in the
            HistoryRecord message.
      type: object
      description: >-
        A bin is a discrete portion of data spanning from start to end, or if no
        end is given, then from start to +inf. A bin's start and end values are
        given in the value type of the metric it represents. For example, "first
        contentful paint" is measured in milliseconds and exposed as ints,
        therefore its metric bins will use int32s for its start and end types.
        However, "cumulative layout shift" is measured in unitless decimals and
        is exposed as a decimal encoded as a string, therefore its metric bins
        will use strings for its value type.
      id: TimeseriesBin
    CollectionPeriod:
      type: object
      id: CollectionPeriod
      description: >-
        The collection period is a date range which includes the `first` and
        `last` day.
      properties:
        lastDate:
          $ref: '#/components/schemas/Date'
          description: The last day in the collection period, inclusive.
        firstDate:
          $ref: '#/components/schemas/Date'
          description: The first day in the collection period, inclusive.
    QueryHistoryRequest:
      description: >-
        Request payload sent by a physical web client. This request includes all
        necessary context to load a particular user experience history record.
      properties:
        metrics:
          description: >-
            The metrics that should be included in the response. If none are
            specified then any metrics found will be returned. Allowed values:
            ["first_contentful_paint", "first_input_delay",
            "largest_contentful_paint", "cumulative_layout_shift",
            "experimental_time_to_first_byte",
            "experimental_interaction_to_next_paint"]
          items:
            type: string
          type: array
        origin:
          description: >-
            The url pattern "origin" refers to a url pattern that is the origin
            of a website. Examples: "https://example.com",
            "https://cloud.google.com"
          type: string
        formFactor:
          enum:
            - ALL_FORM_FACTORS
            - PHONE
            - DESKTOP
            - TABLET
          type: string
          enumDescriptions:
            - The default value, representing all device classes.
            - The device class representing a "mobile"/"phone" sized client.
            - >-
              The device class representing a "desktop"/"laptop" type full size
              client.
            - The device class representing a "tablet" type client.
          description: >-
            The form factor is a query dimension that specifies the device class
            that the record's data should belong to. Note: If no form factor is
            specified, then a special record with aggregated data over all form
            factors will be returned.
        url:
          description: >-
            The url pattern "url" refers to a url pattern that is any arbitrary
            url. Examples: "https://example.com/",
            "https://cloud.google.com/why-google-cloud/"
          type: string
      id: QueryHistoryRequest
      type: object
    Metric:
      type: object
      id: Metric
      description: >-
        A `metric` is a set of user experience data for a single web performance
        metric, like "first contentful paint". It contains a summary histogram
        of real world Chrome usage as a series of `bins`.
      properties:
        histogram:
          description: >-
            The histogram of user experiences for a metric. The histogram will
            have at least one bin and the densities of all bins will add up to
            ~1.
          type: array
          items:
            $ref: '#/components/schemas/Bin'
        percentiles:
          description: >-
            Commonly useful percentiles of the Metric. The value type for the
            percentiles will be the same as the value types given for the
            Histogram bins.
          $ref: '#/components/schemas/Percentiles'
    TimeseriesPercentiles:
      id: TimeseriesPercentiles
      type: object
      description: >-
        Percentiles contains synthetic values of a metric at a given statistical
        percentile. These are used for estimating a metric's value as
        experienced by a percentage of users out of the total number of users.
      properties:
        p75s:
          description: >-
            75% of users experienced the given metric at or below this value.
            The length of this list of densities is equal to the length of the
            CollectionPeriods field in the HistoryRecord message, which
            describes when the density was observed in the field.
          items:
            type: any
          type: array
    MetricTimeseries:
      properties:
        percentilesTimeseries:
          $ref: '#/components/schemas/TimeseriesPercentiles'
          description: >-
            Commonly useful percentiles of the Metric. The value type for the
            percentiles will be the same as the value types given for the
            Histogram bins.
        histogramTimeseries:
          type: array
          description: >-
            The histogram of user experiences for a metric. The histogram will
            have at least one bin and the densities of all bins will add up to
            ~1, for each timeseries entry.
          items:
            $ref: '#/components/schemas/TimeseriesBin'
      type: object
      description: >-
        A `metric timeseries` is a set of user experience data for a single web
        performance metric, like "first contentful paint". It contains a summary
        histogram of real world Chrome usage as a series of `bins`, where each
        bin has density values for a particular time period.
      id: MetricTimeseries
    UrlNormalization:
      description: >-
        Object representing the normalization actions taken to normalize a url
        to achieve a higher chance of successful lookup. These are simple
        automated changes that are taken when looking up the provided
        `url_patten` would be known to fail. Complex actions like following
        redirects are not handled.
      properties:
        originalUrl:
          type: string
          description: The original requested URL prior to any normalization actions.
        normalizedUrl:
          description: >-
            The URL after any normalization actions. This is a valid user
            experience URL that could reasonably be looked up.
          type: string
      type: object
      id: UrlNormalization
    QueryHistoryResponse:
      id: QueryHistoryResponse
      type: object
      properties:
        record:
          description: The record that was found.
          $ref: '#/components/schemas/HistoryRecord'
        urlNormalizationDetails:
          description: >-
            These are details about automated normalization actions that were
            taken in order to make the requested `url_pattern` valid.
          $ref: '#/components/schemas/UrlNormalization'
      description: >-
        Response payload sent back to a physical web client. This response
        contains the record found based on the identiers present in a
        `QueryHistoryRequest`. The returned response will have a history record,
        and sometimes details on normalization actions taken on the request that
        were necessary to make the request successful.
    Record:
      properties:
        metrics:
          type: object
          description: >-
            Metrics is the map of user experience data available for the record
            defined in the key field. Metrics are keyed on the metric name.
            Allowed key values: ["first_contentful_paint", "first_input_delay",
            "largest_contentful_paint", "cumulative_layout_shift",
            "experimental_time_to_first_byte",
            "experimental_interaction_to_next_paint"]
          additionalProperties:
            $ref: '#/components/schemas/Metric'
        key:
          $ref: '#/components/schemas/Key'
          description: >-
            Key defines all of the unique querying parameters needed to look up
            a user experience record.
        collectionPeriod:
          description: >-
            The collection period indicates when the data reflected in this
            record was collected.
          $ref: '#/components/schemas/CollectionPeriod'
      description: >-
        Record is a single Chrome UX report data record. It contains use
        experience statistics for a single url pattern and set of dimensions.
      id: Record
      type: object
    HistoryRecord:
      id: HistoryRecord
      properties:
        key:
          $ref: '#/components/schemas/HistoryKey'
          description: >-
            Key defines all of the unique querying parameters needed to look up
            a user experience history record.
        collectionPeriods:
          items:
            $ref: '#/components/schemas/CollectionPeriod'
          type: array
          description: >-
            The collection periods indicate when each of the data points
            reflected in the time series data in metrics was collected. Note
            that all the time series share the same collection periods, and it
            is enforced in the CrUX pipeline that every time series has the same
            number of data points.
        metrics:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MetricTimeseries'
          description: >-
            Metrics is the map of user experience time series data available for
            the record defined in the key field. Metrics are keyed on the metric
            name. Allowed key values: ["first_contentful_paint",
            "first_input_delay", "largest_contentful_paint",
            "cumulative_layout_shift", "experimental_time_to_first_byte",
            "experimental_interaction_to_next_paint"]
      description: >-
        HistoryRecord is a timeseries of Chrome UX Report data. It contains user
        experience statistics for a single url pattern and a set of dimensions.
      type: object
  parameters:
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/chrome.management.policy.readonly: >-
              See policies applied to Chrome OS and Chrome Browsers managed
              within your organization
            https://www.googleapis.com/auth/chrome.management.policy: >-
              See, edit, create or delete policies applied to Chrome OS and
              Chrome Browsers managed within your organization
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/records:queryHistoryRecord:
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
    post:
      description: >-
        Queries the Chrome User Experience Report for a timeseries `history
        record` for a given site. Returns a `history record` that contains one
        or more `metric timeseries` corresponding to performance data about the
        requested site.
      operationId: chromeuxreport.records.queryHistoryRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryHistoryRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryHistoryResponse'
      parameters: []
      x-stackQL-resource: records
      x-stackQL-verb: exec
  /v1/records:queryRecord:
    parameters: *ref_1
    post:
      description: >-
        Queries the Chrome User Experience for a single `record` for a given
        site. Returns a `record` that contains one or more `metrics`
        corresponding to performance data about the requested site.
      operationId: chromeuxreport.records.queryRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
      parameters: []
      x-stackQL-resource: records
      x-stackQL-verb: exec
