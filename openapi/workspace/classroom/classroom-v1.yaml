openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Classroom API
  description: Manages classes, rosters, and invitations in Google Classroom.
  version: v1
  x-discovery-doc-revision: '20230620'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/classroom/
servers:
  - url: https://classroom.googleapis.com
components:
  schemas:
    Student:
      properties:
        courseId:
          description: Identifier of the course. Read-only.
          type: string
        studentWorkFolder:
          description: >-
            Information about a Drive Folder for this student's work in this
            course. Only visible to the student and domain administrators.
            Read-only.
          $ref: '#/components/schemas/DriveFolder'
        userId:
          description: >-
            Identifier of the user. When specified as a parameter of a request,
            this identifier can be one of the following: * the numeric
            identifier for the user * the email address of the user * the string
            literal `"me"`, indicating the requesting user
          type: string
        profile:
          description: Global user information for the student. Read-only.
          $ref: '#/components/schemas/UserProfile'
      id: Student
      type: object
      description: Student in a course.
    Teacher:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/UserProfile'
          description: Global user information for the teacher. Read-only.
        userId:
          type: string
          description: >-
            Identifier of the user. When specified as a parameter of a request,
            this identifier can be one of the following: * the numeric
            identifier for the user * the email address of the user * the string
            literal `"me"`, indicating the requesting user
        courseId:
          type: string
          description: Identifier of the course. Read-only.
      id: Teacher
      description: Teacher of a course.
    ReclaimStudentSubmissionRequest:
      type: object
      properties: {}
      id: ReclaimStudentSubmissionRequest
      description: Request to reclaim a student submission.
    StudentSubmission:
      type: object
      id: StudentSubmission
      properties:
        updateTime:
          description: >-
            Last update time of this submission. This may be unset if the
            student has not accessed this item. Read-only.
          format: google-datetime
          type: string
        userId:
          type: string
          description: Identifier for the student that owns this submission. Read-only.
        late:
          type: boolean
          description: Whether this submission is late. Read-only.
        courseWorkId:
          description: Identifier for the course work this corresponds to. Read-only.
          type: string
        courseWorkType:
          description: Type of course work this submission is for. Read-only.
          type: string
          enumDescriptions:
            - No work type specified. This is never returned.
            - An assignment.
            - A short answer question.
            - A multiple-choice question.
          enum:
            - COURSE_WORK_TYPE_UNSPECIFIED
            - ASSIGNMENT
            - SHORT_ANSWER_QUESTION
            - MULTIPLE_CHOICE_QUESTION
        id:
          type: string
          description: >-
            Classroom-assigned Identifier for the student submission. This is
            unique among submissions for the relevant course work. Read-only.
        assignedGrade:
          format: double
          description: >-
            Optional grade. If unset, no grade was set. This value must be
            non-negative. Decimal (that is, non-integer) values are allowed, but
            are rounded to two decimal places. This may be modified only by
            course teachers.
          type: number
        alternateLink:
          description: Absolute link to the submission in the Classroom web UI. Read-only.
          type: string
        courseId:
          type: string
          description: Identifier of the course. Read-only.
        state:
          type: string
          description: State of this submission. Read-only.
          enumDescriptions:
            - No state specified. This should never be returned.
            - >-
              The student has never accessed this submission. Attachments are
              not returned and timestamps is not set.
            - Has been created.
            - Has been turned in to the teacher.
            - Has been returned to the student.
            - Student chose to "unsubmit" the assignment.
          enum:
            - SUBMISSION_STATE_UNSPECIFIED
            - NEW
            - CREATED
            - TURNED_IN
            - RETURNED
            - RECLAIMED_BY_STUDENT
        creationTime:
          description: >-
            Creation time of this submission. This may be unset if the student
            has not accessed this item. Read-only.
          type: string
          format: google-datetime
        associatedWithDeveloper:
          type: boolean
          description: >-
            Whether this student submission is associated with the Developer
            Console project making the request. See CreateCourseWork for more
            details. Read-only.
        assignmentSubmission:
          $ref: '#/components/schemas/AssignmentSubmission'
          description: >-
            Submission content when course_work_type is ASSIGNMENT. Students can
            modify this content using ModifyAttachments.
        submissionHistory:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionHistory'
          description: >-
            The history of the submission (includes state and grade histories).
            Read-only.
        draftGrade:
          type: number
          description: >-
            Optional pending grade. If unset, no grade was set. This value must
            be non-negative. Decimal (that is, non-integer) values are allowed,
            but are rounded to two decimal places. This is only visible to and
            modifiable by course teachers.
          format: double
        shortAnswerSubmission:
          $ref: '#/components/schemas/ShortAnswerSubmission'
          description: Submission content when course_work_type is SHORT_ANSWER_QUESTION.
        multipleChoiceSubmission:
          description: >-
            Submission content when course_work_type is
            MULTIPLE_CHOICE_QUESTION.
          $ref: '#/components/schemas/MultipleChoiceSubmission'
      description: >-
        Student submission for course work. StudentSubmission items are
        generated when a CourseWork item is created. StudentSubmissions that
        have never been accessed (i.e. with `state` = NEW) may not have a
        creation time or update time.
    CourseRosterChangesInfo:
      properties:
        courseId:
          description: The `course_id` of the course to subscribe to roster changes for.
          type: string
      type: object
      description: >-
        Information about a `Feed` with a `feed_type` of
        `COURSE_ROSTER_CHANGES`.
      id: CourseRosterChangesInfo
    Date:
      properties:
        year:
          format: int32
          type: integer
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
        month:
          type: integer
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          format: int32
        day:
          format: int32
          type: integer
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
      type: object
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      id: Date
    ListInvitationsResponse:
      type: object
      properties:
        nextPageToken:
          description: >-
            Token identifying the next page of results to return. If empty, no
            further results are available.
          type: string
        invitations:
          items:
            $ref: '#/components/schemas/Invitation'
          description: Invitations that match the list request.
          type: array
      description: Response when listing invitations.
      id: ListInvitationsResponse
    Topic:
      id: Topic
      description: Topic created by a teacher for the course
      type: object
      properties:
        name:
          type: string
          description: >-
            The name of the topic, generated by the user. Leading and trailing
            whitespaces, if any, are trimmed. Also, multiple consecutive
            whitespaces are collapsed into one inside the name. The result must
            be a non-empty string. Topic names are case sensitive, and must be
            no longer than 100 characters.
        courseId:
          type: string
          description: Identifier of the course. Read-only.
        updateTime:
          format: google-datetime
          type: string
          description: The time the topic was last updated by the system. Read-only.
        topicId:
          type: string
          description: Unique identifier for the topic. Read-only.
    ModifyCourseWorkAssigneesRequest:
      type: object
      description: Request to modify assignee mode and options of a coursework.
      properties:
        assigneeMode:
          description: >-
            Mode of the coursework describing whether it will be assigned to all
            students or specified individual students.
          type: string
          enumDescriptions:
            - No mode specified. This is never returned.
            - All students can see the item. This is the default state.
            - A subset of the students can see the item.
          enum:
            - ASSIGNEE_MODE_UNSPECIFIED
            - ALL_STUDENTS
            - INDIVIDUAL_STUDENTS
        modifyIndividualStudentsOptions:
          description: >-
            Set which students are assigned or not assigned to the coursework.
            Must be specified only when `assigneeMode` is `INDIVIDUAL_STUDENTS`.
          $ref: '#/components/schemas/ModifyIndividualStudentsOptions'
      id: ModifyCourseWorkAssigneesRequest
    Material:
      id: Material
      type: object
      properties:
        form:
          $ref: '#/components/schemas/Form'
          description: Google Forms material.
        youtubeVideo:
          description: YouTube video material.
          $ref: '#/components/schemas/YouTubeVideo'
        driveFile:
          description: Google Drive file material.
          $ref: '#/components/schemas/SharedDriveFile'
        link:
          description: >-
            Link material. On creation, this is upgraded to a more appropriate
            type if possible, and this is reflected in the response.
          $ref: '#/components/schemas/Link'
      description: >-
        Material attached to course work. When creating attachments, setting the
        `form` field is not supported.
    ListAnnouncementsResponse:
      id: ListAnnouncementsResponse
      type: object
      description: Response when listing course work.
      properties:
        announcements:
          items:
            $ref: '#/components/schemas/Announcement'
          type: array
          description: Announcement items that match the request.
        nextPageToken:
          description: >-
            Token identifying the next page of results to return. If empty, no
            further results are available.
          type: string
    IndividualStudentsOptions:
      properties:
        studentIds:
          type: array
          items:
            type: string
          description: >-
            Identifiers for the students that have access to the
            coursework/announcement.
      type: object
      description: >-
        Assignee details about a coursework/announcement. This field is set if
        and only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.
      id: IndividualStudentsOptions
    Name:
      description: Details of the user's name.
      type: object
      properties:
        givenName:
          type: string
          description: The user's first name. Read-only.
        familyName:
          description: The user's last name. Read-only.
          type: string
        fullName:
          description: >-
            The user's full name formed by concatenating the first and last name
            values. Read-only.
          type: string
      id: Name
    Invitation:
      description: An invitation to join a course.
      properties:
        role:
          enumDescriptions:
            - No course role.
            - Student in the course.
            - Teacher of the course.
            - Owner of the course.
          description: >-
            Role to invite the user to have. Must not be
            `COURSE_ROLE_UNSPECIFIED`.
          enum:
            - COURSE_ROLE_UNSPECIFIED
            - STUDENT
            - TEACHER
            - OWNER
          type: string
        id:
          type: string
          description: Identifier assigned by Classroom. Read-only.
        courseId:
          description: Identifier of the course to invite the user to.
          type: string
        userId:
          type: string
          description: >-
            Identifier of the invited user. When specified as a parameter of a
            request, this identifier can be set to one of the following: * the
            numeric identifier for the user * the email address of the user *
            the string literal `"me"`, indicating the requesting user
      type: object
      id: Invitation
    CloudPubsubTopic:
      properties:
        topicName:
          type: string
          description: >-
            The `name` field of a Cloud Pub/Sub
            [Topic](https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).
      id: CloudPubsubTopic
      type: object
      description: >-
        A reference to a Cloud Pub/Sub topic. To register for notifications, the
        owner of the topic must grant
        `classroom-notifications@system.gserviceaccount.com` the
        `projects.topics.publish` permission.
    CourseMaterial:
      id: CourseMaterial
      description: A material attached to a course as part of a material set.
      properties:
        youTubeVideo:
          $ref: '#/components/schemas/YouTubeVideo'
          description: Youtube video attachment.
        form:
          $ref: '#/components/schemas/Form'
          description: Google Forms attachment.
        driveFile:
          $ref: '#/components/schemas/DriveFile'
          description: Google Drive file attachment.
        link:
          $ref: '#/components/schemas/Link'
          description: Link atatchment.
      type: object
    ShortAnswerSubmission:
      id: ShortAnswerSubmission
      type: object
      description: Student work for a short answer question.
      properties:
        answer:
          type: string
          description: Student response to a short-answer question.
    ListTeachersResponse:
      type: object
      properties:
        teachers:
          type: array
          items:
            $ref: '#/components/schemas/Teacher'
          description: Teachers who match the list request.
        nextPageToken:
          description: >-
            Token identifying the next page of results to return. If empty, no
            further results are available.
          type: string
      id: ListTeachersResponse
      description: Response when listing teachers.
    YouTubeVideo:
      properties:
        id:
          type: string
          description: YouTube API resource ID.
        thumbnailUrl:
          type: string
          description: URL of a thumbnail image of the YouTube video. Read-only.
        alternateLink:
          type: string
          description: URL that can be used to view the YouTube video. Read-only.
        title:
          type: string
          description: Title of the YouTube video. Read-only.
      id: YouTubeVideo
      type: object
      description: YouTube video item.
    ListCourseWorkResponse:
      type: object
      id: ListCourseWorkResponse
      properties:
        courseWork:
          type: array
          items:
            $ref: '#/components/schemas/CourseWork'
          description: Course work items that match the request.
        nextPageToken:
          description: >-
            Token identifying the next page of results to return. If empty, no
            further results are available.
          type: string
      description: Response when listing course work.
    CourseWorkChangesInfo:
      id: CourseWorkChangesInfo
      properties:
        courseId:
          type: string
          description: The `course_id` of the course to subscribe to work changes for.
      description: Information about a `Feed` with a `feed_type` of `COURSE_WORK_CHANGES`.
      type: object
    Assignment:
      id: Assignment
      description: Additional details for assignments.
      properties:
        studentWorkFolder:
          description: >-
            Drive folder where attachments from student submissions are placed.
            This is only populated for course teachers and administrators.
          $ref: '#/components/schemas/DriveFolder'
      type: object
    CourseMaterialSet:
      type: object
      description: >-
        A set of materials that appears on the "About" page of the course. These
        materials might include a syllabus, schedule, or other background
        information relating to the course as a whole.
      id: CourseMaterialSet
      properties:
        materials:
          type: array
          items:
            $ref: '#/components/schemas/CourseMaterial'
          description: Materials attached to this set.
        title:
          description: Title for this set.
          type: string
    ListStudentSubmissionsResponse:
      id: ListStudentSubmissionsResponse
      description: Response when listing student submissions.
      properties:
        studentSubmissions:
          items:
            $ref: '#/components/schemas/StudentSubmission'
          description: Student work that matches the request.
          type: array
        nextPageToken:
          type: string
          description: >-
            Token identifying the next page of results to return. If empty, no
            further results are available.
      type: object
    CourseAlias:
      description: >-
        Alternative identifier for a course. An alias uniquely identifies a
        course. It must be unique within one of the following scopes: * domain:
        A domain-scoped alias is visible to all users within the alias creator's
        domain and can be created only by a domain admin. A domain-scoped alias
        is often used when a course has an identifier external to Classroom. *
        project: A project-scoped alias is visible to any request from an
        application using the Developer Console project ID that created the
        alias and can be created by any project. A project-scoped alias is often
        used when an application has alternative identifiers. A random value can
        also be used to avoid duplicate courses in the event of transmission
        failures, as retrying a request will return `ALREADY_EXISTS` if a
        previous one has succeeded.
      id: CourseAlias
      type: object
      properties:
        alias:
          type: string
          description: >-
            Alias string. The format of the string indicates the desired alias
            scoping. * `d:` indicates a domain-scoped alias. Example:
            `d:math_101` * `p:` indicates a project-scoped alias. Example:
            `p:abc123` This field has a maximum length of 256 characters.
    Registration:
      type: object
      id: Registration
      description: >-
        An instruction to Classroom to send notifications from the `feed` to the
        provided destination.
      properties:
        expiryTime:
          format: google-datetime
          type: string
          description: >-
            The time until which the `Registration` is effective. This is a
            read-only field assigned by the server.
        feed:
          $ref: '#/components/schemas/Feed'
          description: >-
            Specification for the class of notifications that Classroom should
            deliver to the destination.
        cloudPubsubTopic:
          description: The Cloud Pub/Sub topic that notifications are to be sent to.
          $ref: '#/components/schemas/CloudPubsubTopic'
        registrationId:
          description: >-
            A server-generated unique identifier for this `Registration`.
            Read-only.
          type: string
    CourseWorkMaterial:
      description: Course work material created by a teacher for students of the course
      properties:
        alternateLink:
          type: string
          description: >-
            Absolute link to this course work material in the Classroom web UI.
            This is only populated if `state` is `PUBLISHED`. Read-only.
        topicId:
          type: string
          description: >-
            Identifier for the topic that this course work material is
            associated with. Must match an existing topic in the course.
        title:
          description: >-
            Title of this course work material. The title must be a valid UTF-8
            string containing between 1 and 3000 characters.
          type: string
        creationTime:
          format: google-datetime
          description: Timestamp when this course work material was created. Read-only.
          type: string
        materials:
          description: >-
            Additional materials. A course work material must have no more than
            20 material items.
          type: array
          items:
            $ref: '#/components/schemas/Material'
        creatorUserId:
          description: >-
            Identifier for the user that created the course work material.
            Read-only.
          type: string
        updateTime:
          type: string
          description: >-
            Timestamp of the most recent change to this course work material.
            Read-only.
          format: google-datetime
        courseId:
          description: Identifier of the course. Read-only.
          type: string
        description:
          description: >-
            Optional description of this course work material. The text must be
            a valid UTF-8 string containing no more than 30,000 characters.
          type: string
        assigneeMode:
          type: string
          enumDescriptions:
            - No mode specified. This is never returned.
            - All students can see the item. This is the default state.
            - A subset of the students can see the item.
          enum:
            - ASSIGNEE_MODE_UNSPECIFIED
            - ALL_STUDENTS
            - INDIVIDUAL_STUDENTS
          description: >-
            Assignee mode of the course work material. If unspecified, the
            default value is `ALL_STUDENTS`.
        state:
          type: string
          enumDescriptions:
            - No state specified. This is never returned.
            - >-
              Status for course work material that has been published. This is
              the default state.
            - >-
              Status for a course work material that is not yet published.
              Course work material in this state is visible only to course
              teachers and domain administrators.
            - >-
              Status for course work material that was published but is now
              deleted. Course work material in this state is visible only to
              course teachers and domain administrators. Course work material in
              this state is deleted after some time.
          description: >-
            Status of this course work material. If unspecified, the default
            state is `DRAFT`.
          enum:
            - COURSEWORK_MATERIAL_STATE_UNSPECIFIED
            - PUBLISHED
            - DRAFT
            - DELETED
        scheduledTime:
          format: google-datetime
          description: >-
            Optional timestamp when this course work material is scheduled to be
            published.
          type: string
        id:
          description: >-
            Classroom-assigned identifier of this course work material, unique
            per course. Read-only.
          type: string
        individualStudentsOptions:
          $ref: '#/components/schemas/IndividualStudentsOptions'
          description: >-
            Identifiers of students with access to the course work material.
            This field is set only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.
            If the `assigneeMode` is `INDIVIDUAL_STUDENTS`, then only students
            specified in this field can see the course work material.
      id: CourseWorkMaterial
      type: object
    DriveFile:
      description: Representation of a Google Drive file.
      properties:
        title:
          description: Title of the Drive item. Read-only.
          type: string
        id:
          description: Drive API resource ID.
          type: string
        alternateLink:
          type: string
          description: URL that can be used to access the Drive item. Read-only.
        thumbnailUrl:
          description: URL of a thumbnail image of the Drive item. Read-only.
          type: string
      id: DriveFile
      type: object
    MultipleChoiceQuestion:
      type: object
      id: MultipleChoiceQuestion
      description: Additional details for multiple-choice questions.
      properties:
        choices:
          description: Possible choices.
          type: array
          items:
            type: string
    ListGuardiansResponse:
      description: Response when listing guardians.
      properties:
        guardians:
          items:
            $ref: '#/components/schemas/Guardian'
          type: array
          description: >-
            Guardians on this page of results that met the criteria specified in
            the request.
        nextPageToken:
          type: string
          description: >-
            Token identifying the next page of results to return. If empty, no
            further results are available.
      id: ListGuardiansResponse
      type: object
    ListStudentsResponse:
      type: object
      description: Response when listing students.
      id: ListStudentsResponse
      properties:
        students:
          items:
            $ref: '#/components/schemas/Student'
          description: Students who match the list request.
          type: array
        nextPageToken:
          type: string
          description: >-
            Token identifying the next page of results to return. If empty, no
            further results are available.
    ListCoursesResponse:
      properties:
        courses:
          type: array
          description: Courses that match the list request.
          items:
            $ref: '#/components/schemas/Course'
        nextPageToken:
          type: string
          description: >-
            Token identifying the next page of results to return. If empty, no
            further results are available.
      description: Response when listing courses.
      id: ListCoursesResponse
      type: object
    ReturnStudentSubmissionRequest:
      properties: {}
      type: object
      id: ReturnStudentSubmissionRequest
      description: Request to return a student submission.
    UserProfile:
      properties:
        verifiedTeacher:
          type: boolean
          description: >-
            Represents whether a Google Workspace for Education user's domain
            administrator has explicitly verified them as being a teacher. This
            field is always false if the user is not a member of a Google
            Workspace for Education domain. Read-only
        name:
          $ref: '#/components/schemas/Name'
          description: Name of the user. Read-only.
        id:
          type: string
          description: Identifier of the user. Read-only.
        photoUrl:
          description: >-
            URL of user's profile photo. Must request
            `https://www.googleapis.com/auth/classroom.profile.photos` scope for
            this field to be populated in a response body. Read-only.
          type: string
        emailAddress:
          description: >-
            Email address of the user. Must request
            `https://www.googleapis.com/auth/classroom.profile.emails` scope for
            this field to be populated in a response body. Read-only.
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/GlobalPermission'
          type: array
          description: Global permissions of the user. Read-only.
      type: object
      description: Global information for a user.
      id: UserProfile
    StateHistory:
      properties:
        state:
          description: The workflow pipeline stage.
          type: string
          enumDescriptions:
            - No state specified. This should never be returned.
            - The Submission has been created.
            - >-
              The student has turned in an assigned document, which may or may
              not be a template.
            - The teacher has returned the assigned document to the student.
            - >-
              The student turned in the assigned document, and then chose to
              "unsubmit" the assignment, giving the student control again as the
              owner.
            - >-
              The student edited their submission after turning it in.
              Currently, only used by Questions, when the student edits their
              answer.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - TURNED_IN
            - RETURNED
            - RECLAIMED_BY_STUDENT
            - STUDENT_EDITED_AFTER_TURN_IN
        stateTimestamp:
          description: When the submission entered this state.
          type: string
          format: google-datetime
        actorUserId:
          type: string
          description: The teacher or student who made the change.
      type: object
      description: The history of each state this submission has been in.
      id: StateHistory
    ListCourseWorkMaterialResponse:
      type: object
      description: Response when listing course work material.
      id: ListCourseWorkMaterialResponse
      properties:
        courseWorkMaterial:
          description: Course work material items that match the request.
          items:
            $ref: '#/components/schemas/CourseWorkMaterial'
          type: array
        nextPageToken:
          type: string
          description: >-
            Token identifying the next page of results to return. If empty, no
            further results are available.
    MultipleChoiceSubmission:
      id: MultipleChoiceSubmission
      description: Student work for a multiple-choice question.
      type: object
      properties:
        answer:
          description: Student's select choice.
          type: string
    GlobalPermission:
      type: object
      id: GlobalPermission
      properties:
        permission:
          enumDescriptions:
            - >-
              No permission is specified. This is not returned and is not a
              valid value.
            - User is permitted to create a course.
          description: Permission value.
          type: string
          enum:
            - PERMISSION_UNSPECIFIED
            - CREATE_COURSE
      description: Global user permission description.
    TimeOfDay:
      id: TimeOfDay
      description: >-
        Represents a time of day. The date and time zone are either not
        significant or are specified elsewhere. An API may choose to allow leap
        seconds. Related types are google.type.Date and
        `google.protobuf.Timestamp`.
      properties:
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          format: int32
          type: integer
        minutes:
          format: int32
          type: integer
          description: Minutes of hour of day. Must be from 0 to 59.
        seconds:
          description: >-
            Seconds of minutes of the time. Must normally be from 0 to 59. An
            API may allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        hours:
          format: int32
          description: >-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may
            choose to allow the value "24:00:00" for scenarios like business
            closing time.
          type: integer
      type: object
    ListTopicResponse:
      id: ListTopicResponse
      type: object
      description: Response when listing topics.
      properties:
        nextPageToken:
          description: >-
            Token identifying the next page of results to return. If empty, no
            further results are available.
          type: string
        topic:
          items:
            $ref: '#/components/schemas/Topic'
          description: Topic items that match the request.
          type: array
    SubmissionHistory:
      description: >-
        The history of the submission. This currently includes state and grade
        histories.
      type: object
      properties:
        stateHistory:
          description: The state history information of the submission, if present.
          $ref: '#/components/schemas/StateHistory'
        gradeHistory:
          description: The grade history information of the submission, if present.
          $ref: '#/components/schemas/GradeHistory'
      id: SubmissionHistory
    Feed:
      type: object
      description: >-
        A class of notifications that an application can register to receive.
        For example: "all roster changes for a domain".
      properties:
        courseWorkChangesInfo:
          description: >-
            Information about a `Feed` with a `feed_type` of
            `COURSE_WORK_CHANGES`. This field must be specified if `feed_type`
            is `COURSE_WORK_CHANGES`.
          $ref: '#/components/schemas/CourseWorkChangesInfo'
        courseRosterChangesInfo:
          description: >-
            Information about a `Feed` with a `feed_type` of
            `COURSE_ROSTER_CHANGES`. This field must be specified if `feed_type`
            is `COURSE_ROSTER_CHANGES`.
          $ref: '#/components/schemas/CourseRosterChangesInfo'
        feedType:
          enumDescriptions:
            - Should never be returned or provided.
            - >-
              All roster changes for a particular domain. Notifications will be
              generated whenever a user joins or leaves a course. No
              notifications will be generated when an invitation is created or
              deleted, but notifications will be generated when a user joins a
              course by accepting an invitation.
            - >-
              All roster changes for a particular course. Notifications will be
              generated whenever a user joins or leaves a course. No
              notifications will be generated when an invitation is created or
              deleted, but notifications will be generated when a user joins a
              course by accepting an invitation.
            - >-
              All course work activity for a particular course. Notifications
              will be generated when a CourseWork or StudentSubmission object is
              created or modified. No notification will be generated when a
              StudentSubmission object is created in connection with the
              creation or modification of its parent CourseWork object (but a
              notification will be generated for that CourseWork object's
              creation or modification).
          type: string
          description: The type of feed.
          enum:
            - FEED_TYPE_UNSPECIFIED
            - DOMAIN_ROSTER_CHANGES
            - COURSE_ROSTER_CHANGES
            - COURSE_WORK_CHANGES
      id: Feed
    ListGuardianInvitationsResponse:
      description: Response when listing guardian invitations.
      id: ListGuardianInvitationsResponse
      type: object
      properties:
        guardianInvitations:
          description: Guardian invitations that matched the list request.
          type: array
          items:
            $ref: '#/components/schemas/GuardianInvitation'
        nextPageToken:
          type: string
          description: >-
            Token identifying the next page of results to return. If empty, no
            further results are available.
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
      id: Empty
    Link:
      properties:
        title:
          type: string
          description: Title of the target of the URL. Read-only.
        url:
          type: string
          description: >-
            URL to link to. This must be a valid UTF-8 string containing between
            1 and 2024 characters.
        thumbnailUrl:
          type: string
          description: URL of a thumbnail image of the target URL. Read-only.
      type: object
      id: Link
      description: URL item.
    Form:
      id: Form
      type: object
      properties:
        formUrl:
          type: string
          description: URL of the form.
        title:
          type: string
          description: Title of the Form. Read-only.
        responseUrl:
          type: string
          description: >-
            URL of the form responses document. Only set if responses have been
            recorded and only when the requesting user is an editor of the form.
            Read-only.
        thumbnailUrl:
          description: URL of a thumbnail image of the Form. Read-only.
          type: string
      description: Google Forms item.
    TurnInStudentSubmissionRequest:
      description: Request to turn in a student submission.
      id: TurnInStudentSubmissionRequest
      type: object
      properties: {}
    GradeCategory:
      type: object
      properties:
        name:
          type: string
          description: Name of the grade category.
        defaultGradeDenominator:
          description: >-
            Default value of denominator. Only applicable when grade calculation
            type is TOTAL_POINTS.
          format: int32
          type: integer
        weight:
          format: int32
          description: >-
            The weight of the category average as part of overall average. A
            weight of 12.34% is represented as 123400 (100% is 1,000,000). The
            last two digits should always be zero since we use two decimal
            precision. Only applicable when grade calculation type is
            WEIGHTED_CATEGORIES.
          type: integer
        id:
          type: string
          description: ID of the grade category.
      id: GradeCategory
      description: >-
        Details for a grade category in a course. Coursework may have zero or
        one grade category, and the category may be used in computing the
        overall grade. See the [help center
        article](https://support.google.com/edu/classroom/answer/9184995) for
        details.
    ListCourseAliasesResponse:
      properties:
        nextPageToken:
          description: >-
            Token identifying the next page of results to return. If empty, no
            further results are available.
          type: string
        aliases:
          items:
            $ref: '#/components/schemas/CourseAlias'
          type: array
          description: The course aliases.
      id: ListCourseAliasesResponse
      description: Response when listing course aliases.
      type: object
    GradebookSettings:
      description: >-
        The gradebook settings for a course. See the [help center
        article](https://support.google.com/edu/classroom/answer/9184995) for
        details.
      type: object
      properties:
        gradeCategories:
          description: Grade categories that are available for coursework in the course.
          items:
            $ref: '#/components/schemas/GradeCategory'
          type: array
        displaySetting:
          type: string
          description: Indicates who can see the overall grade..
          enum:
            - DISPLAY_SETTING_UNSPECIFIED
            - SHOW_OVERALL_GRADE
            - HIDE_OVERALL_GRADE
            - SHOW_TEACHERS_ONLY
          enumDescriptions:
            - No setting specified. This is never returned.
            - >-
              Shows overall grade in the gradebook and student profile to both
              teachers and students.
            - Does not show overall grade in the gradebook or student profile.
            - >-
              Shows the overall grade to teachers in the gradebook and student
              profile. Hides from students in their student profile.
        calculationType:
          description: Indicates how the overall grade is calculated.
          enum:
            - CALCULATION_TYPE_UNSPECIFIED
            - TOTAL_POINTS
            - WEIGHTED_CATEGORIES
          type: string
          enumDescriptions:
            - No method specified. This is never returned.
            - >-
              Overall grade is the sum of grades divided by the sum of total
              points regardless of category.
            - Overall grade is the weighted average by category.
      id: GradebookSettings
    ModifyIndividualStudentsOptions:
      id: ModifyIndividualStudentsOptions
      properties:
        removeStudentIds:
          items:
            type: string
          type: array
          description: >-
            IDs of students to be removed from having access to this
            coursework/announcement.
        addStudentIds:
          description: >-
            IDs of students to be added as having access to this
            coursework/announcement.
          items:
            type: string
          type: array
      description: >-
        Contains fields to add or remove students from a course work or
        announcement where the `assigneeMode` is set to `INDIVIDUAL_STUDENTS`.
      type: object
    CourseWork:
      id: CourseWork
      description: Course work created by a teacher for students of the course.
      type: object
      properties:
        assignment:
          description: >-
            Assignment details. This is populated only when `work_type` is
            `ASSIGNMENT`. Read-only.
          $ref: '#/components/schemas/Assignment'
        id:
          type: string
          description: >-
            Classroom-assigned identifier of this course work, unique per
            course. Read-only.
        gradeCategory:
          description: >-
            The category that this coursework's grade contributes to. Present
            only when a category has been chosen for the coursework. May be used
            in calculating the overall grade. Read-only.
          $ref: '#/components/schemas/GradeCategory'
        topicId:
          type: string
          description: >-
            Identifier for the topic that this coursework is associated with.
            Must match an existing topic in the course.
        courseId:
          type: string
          description: Identifier of the course. Read-only.
        multipleChoiceQuestion:
          $ref: '#/components/schemas/MultipleChoiceQuestion'
          description: >-
            Multiple choice question details. For read operations, this field is
            populated only when `work_type` is `MULTIPLE_CHOICE_QUESTION`. For
            write operations, this field must be specified when creating course
            work with a `work_type` of `MULTIPLE_CHOICE_QUESTION`, and it must
            not be set otherwise.
        associatedWithDeveloper:
          description: >-
            Whether this course work item is associated with the Developer
            Console project making the request. See CreateCourseWork for more
            details. Read-only.
          type: boolean
        updateTime:
          type: string
          format: google-datetime
          description: Timestamp of the most recent change to this course work. Read-only.
        assigneeMode:
          description: >-
            Assignee mode of the coursework. If unspecified, the default value
            is `ALL_STUDENTS`.
          enum:
            - ASSIGNEE_MODE_UNSPECIFIED
            - ALL_STUDENTS
            - INDIVIDUAL_STUDENTS
          enumDescriptions:
            - No mode specified. This is never returned.
            - All students can see the item. This is the default state.
            - A subset of the students can see the item.
          type: string
        submissionModificationMode:
          enum:
            - SUBMISSION_MODIFICATION_MODE_UNSPECIFIED
            - MODIFIABLE_UNTIL_TURNED_IN
            - MODIFIABLE
          description: >-
            Setting to determine when students are allowed to modify
            submissions. If unspecified, the default value is
            `MODIFIABLE_UNTIL_TURNED_IN`.
          type: string
          enumDescriptions:
            - No modification mode specified. This is never returned.
            - Submissions can be modified before being turned in.
            - Submissions can be modified at any time.
        creatorUserId:
          description: Identifier for the user that created the coursework. Read-only.
          type: string
        dueDate:
          description: >-
            Optional date, in UTC, that submissions for this course work are
            due. This must be specified if `due_time` is specified.
          $ref: '#/components/schemas/Date'
        scheduledTime:
          description: >-
            Optional timestamp when this course work is scheduled to be
            published.
          format: google-datetime
          type: string
        state:
          description: >-
            Status of this course work. If unspecified, the default state is
            `DRAFT`.
          enumDescriptions:
            - No state specified. This is never returned.
            - >-
              Status for work that has been published. This is the default
              state.
            - >-
              Status for work that is not yet published. Work in this state is
              visible only to course teachers and domain administrators.
            - >-
              Status for work that was published but is now deleted. Work in
              this state is visible only to course teachers and domain
              administrators. Work in this state is deleted after some time.
          enum:
            - COURSE_WORK_STATE_UNSPECIFIED
            - PUBLISHED
            - DRAFT
            - DELETED
          type: string
        maxPoints:
          description: >-
            Maximum grade for this course work. If zero or unspecified, this
            assignment is considered ungraded. This must be a non-negative
            integer value.
          type: number
          format: double
        workType:
          enumDescriptions:
            - No work type specified. This is never returned.
            - An assignment.
            - A short answer question.
            - A multiple-choice question.
          description: >-
            Type of this course work. The type is set when the course work is
            created and cannot be changed.
          enum:
            - COURSE_WORK_TYPE_UNSPECIFIED
            - ASSIGNMENT
            - SHORT_ANSWER_QUESTION
            - MULTIPLE_CHOICE_QUESTION
          type: string
        alternateLink:
          description: >-
            Absolute link to this course work in the Classroom web UI. This is
            only populated if `state` is `PUBLISHED`. Read-only.
          type: string
        individualStudentsOptions:
          description: >-
            Identifiers of students with access to the coursework. This field is
            set only if `assigneeMode` is `INDIVIDUAL_STUDENTS`. If the
            `assigneeMode` is `INDIVIDUAL_STUDENTS`, then only students
            specified in this field are assigned the coursework.
          $ref: '#/components/schemas/IndividualStudentsOptions'
        description:
          description: >-
            Optional description of this course work. If set, the description
            must be a valid UTF-8 string containing no more than 30,000
            characters.
          type: string
        materials:
          items:
            $ref: '#/components/schemas/Material'
          description: >-
            Additional materials. CourseWork must have no more than 20 material
            items.
          type: array
        creationTime:
          type: string
          format: google-datetime
          description: Timestamp when this course work was created. Read-only.
        dueTime:
          $ref: '#/components/schemas/TimeOfDay'
          description: >-
            Optional time of day, in UTC, that submissions for this course work
            are due. This must be specified if `due_date` is specified.
        title:
          type: string
          description: >-
            Title of this course work. The title must be a valid UTF-8 string
            containing between 1 and 3000 characters.
    Announcement:
      type: object
      id: Announcement
      description: Announcement created by a teacher for students of the course
      properties:
        updateTime:
          description: Timestamp of the most recent change to this announcement. Read-only.
          type: string
          format: google-datetime
        courseId:
          description: Identifier of the course. Read-only.
          type: string
        creationTime:
          format: google-datetime
          type: string
          description: Timestamp when this announcement was created. Read-only.
        text:
          description: >-
            Description of this announcement. The text must be a valid UTF-8
            string containing no more than 30,000 characters.
          type: string
        alternateLink:
          description: >-
            Absolute link to this announcement in the Classroom web UI. This is
            only populated if `state` is `PUBLISHED`. Read-only.
          type: string
        id:
          description: >-
            Classroom-assigned identifier of this announcement, unique per
            course. Read-only.
          type: string
        creatorUserId:
          description: Identifier for the user that created the announcement. Read-only.
          type: string
        assigneeMode:
          enumDescriptions:
            - No mode specified. This is never returned.
            - All students can see the item. This is the default state.
            - A subset of the students can see the item.
          description: >-
            Assignee mode of the announcement. If unspecified, the default value
            is `ALL_STUDENTS`.
          type: string
          enum:
            - ASSIGNEE_MODE_UNSPECIFIED
            - ALL_STUDENTS
            - INDIVIDUAL_STUDENTS
        individualStudentsOptions:
          description: >-
            Identifiers of students with access to the announcement. This field
            is set only if `assigneeMode` is `INDIVIDUAL_STUDENTS`. If the
            `assigneeMode` is `INDIVIDUAL_STUDENTS`, then only students
            specified in this field can see the announcement.
          $ref: '#/components/schemas/IndividualStudentsOptions'
        materials:
          type: array
          items:
            $ref: '#/components/schemas/Material'
          description: >-
            Additional materials. Announcements must have no more than 20
            material items.
        scheduledTime:
          format: google-datetime
          description: >-
            Optional timestamp when this announcement is scheduled to be
            published.
          type: string
        state:
          type: string
          enumDescriptions:
            - No state specified. This is never returned.
            - >-
              Status for announcement that has been published. This is the
              default state.
            - >-
              Status for an announcement that is not yet published. Announcement
              in this state is visible only to course teachers and domain
              administrators.
            - >-
              Status for announcement that was published but is now deleted.
              Announcement in this state is visible only to course teachers and
              domain administrators. Announcement in this state is deleted after
              some time.
          description: >-
            Status of this announcement. If unspecified, the default state is
            `DRAFT`.
          enum:
            - ANNOUNCEMENT_STATE_UNSPECIFIED
            - PUBLISHED
            - DRAFT
            - DELETED
    SharedDriveFile:
      properties:
        shareMode:
          description: Mechanism by which students access the Drive item.
          type: string
          enum:
            - UNKNOWN_SHARE_MODE
            - VIEW
            - EDIT
            - STUDENT_COPY
          enumDescriptions:
            - No sharing mode specified. This should never be returned.
            - Students can view the shared file.
            - Students can edit the shared file.
            - Students have a personal copy of the shared file.
        driveFile:
          $ref: '#/components/schemas/DriveFile'
          description: Drive file details.
      type: object
      id: SharedDriveFile
      description: Drive file that is used as material for course work.
    GradeHistory:
      type: object
      description: The history of each grade on this submission.
      properties:
        actorUserId:
          description: The teacher who made the grade change.
          type: string
        maxPoints:
          description: >-
            The denominator of the grade at this time in the submission grade
            history.
          format: double
          type: number
        gradeChangeType:
          enum:
            - UNKNOWN_GRADE_CHANGE_TYPE
            - DRAFT_GRADE_POINTS_EARNED_CHANGE
            - ASSIGNED_GRADE_POINTS_EARNED_CHANGE
            - MAX_POINTS_CHANGE
          description: >-
            The type of grade change at this time in the submission grade
            history.
          type: string
          enumDescriptions:
            - No grade change type specified. This should never be returned.
            - A change in the numerator of the draft grade.
            - A change in the numerator of the assigned grade.
            - A change in the denominator of the grade.
        gradeTimestamp:
          format: google-datetime
          description: When the grade of the submission was changed.
          type: string
        pointsEarned:
          description: >-
            The numerator of the grade at this time in the submission grade
            history.
          type: number
          format: double
      id: GradeHistory
    GuardianInvitation:
      type: object
      description: >-
        An invitation to become the guardian of a specified user, sent to a
        specified email address.
      properties:
        creationTime:
          type: string
          description: The time that this invitation was created. Read-only.
          format: google-datetime
        invitedEmailAddress:
          type: string
          description: >-
            Email address that the invitation was sent to. This field is only
            visible to domain administrators.
        studentId:
          description: ID of the student (in standard format)
          type: string
        state:
          enum:
            - GUARDIAN_INVITATION_STATE_UNSPECIFIED
            - PENDING
            - COMPLETE
          enumDescriptions:
            - Should never be returned.
            - The invitation is active and awaiting a response.
            - >-
              The invitation is no longer active. It may have been accepted,
              declined, withdrawn or it may have expired.
          description: The state that this invitation is in.
          type: string
        invitationId:
          description: Unique identifier for this invitation. Read-only.
          type: string
      id: GuardianInvitation
    Guardian:
      description: >-
        Association between a student and a guardian of that student. The
        guardian may receive information about the student's course work.
      properties:
        studentId:
          type: string
          description: >-
            Identifier for the student to whom the guardian relationship
            applies.
        guardianProfile:
          description: User profile for the guardian.
          $ref: '#/components/schemas/UserProfile'
        invitedEmailAddress:
          description: >-
            The email address to which the initial guardian invitation was sent.
            This field is only visible to domain administrators.
          type: string
        guardianId:
          type: string
          description: Identifier for the guardian.
      type: object
      id: Guardian
    Attachment:
      description: >-
        Attachment added to student assignment work. When creating attachments,
        setting the `form` field is not supported.
      id: Attachment
      properties:
        link:
          description: Link attachment.
          $ref: '#/components/schemas/Link'
        driveFile:
          description: Google Drive file attachment.
          $ref: '#/components/schemas/DriveFile'
        form:
          description: Google Forms attachment.
          $ref: '#/components/schemas/Form'
        youTubeVideo:
          description: Youtube video attachment.
          $ref: '#/components/schemas/YouTubeVideo'
      type: object
    Course:
      description: A Course in Classroom.
      properties:
        courseState:
          description: >-
            State of the course. If unspecified, the default state is
            `PROVISIONED`.
          type: string
          enumDescriptions:
            - No course state. No returned Course message will use this value.
            - The course is active.
            - >-
              The course has been archived. You cannot modify it except to
              change it to a different state.
            - >-
              The course has been created, but not yet activated. It is
              accessible by the primary teacher and domain administrators, who
              may modify it or change it to the `ACTIVE` or `DECLINED` states. A
              course may only be changed to `PROVISIONED` if it is in the
              `DECLINED` state.
            - >-
              The course has been created, but declined. It is accessible by the
              course owner and domain administrators, though it will not be
              displayed in the web UI. You cannot modify the course except to
              change it to the `PROVISIONED` state. A course may only be changed
              to `DECLINED` if it is in the `PROVISIONED` state.
            - >-
              The course has been suspended. You cannot modify the course, and
              only the user identified by the `owner_id` can view the course. A
              course may be placed in this state if it potentially violates the
              Terms of Service.
          enum:
            - COURSE_STATE_UNSPECIFIED
            - ACTIVE
            - ARCHIVED
            - PROVISIONED
            - DECLINED
            - SUSPENDED
        creationTime:
          format: google-datetime
          description: >-
            Creation time of the course. Specifying this field in a course
            update mask results in an error. Read-only.
          type: string
        descriptionHeading:
          type: string
          description: >-
            Optional heading for the description. For example, "Welcome to 10th
            Grade Biology." If set, this field must be a valid UTF-8 string and
            no longer than 3600 characters.
        courseMaterialSets:
          description: >-
            Sets of materials that appear on the "about" page of this course.
            Read-only.
          items:
            $ref: '#/components/schemas/CourseMaterialSet'
          type: array
        updateTime:
          format: google-datetime
          type: string
          description: >-
            Time of the most recent update to this course. Specifying this field
            in a course update mask results in an error. Read-only.
        description:
          type: string
          description: >-
            Optional description. For example, "We'll be learning about the
            structure of living creatures from a combination of textbooks, guest
            lectures, and lab work. Expect to be excited!" If set, this field
            must be a valid UTF-8 string and no longer than 30,000 characters.
        ownerId:
          type: string
          description: >-
            The identifier of the owner of a course. When specified as a
            parameter of a create course request, this field is required. The
            identifier can be one of the following: * the numeric identifier for
            the user * the email address of the user * the string literal
            `"me"`, indicating the requesting user This must be set in a create
            request. Admins can also specify this field in a patch course
            request to transfer ownership. In other contexts, it is read-only.
        teacherFolder:
          $ref: '#/components/schemas/DriveFolder'
          description: >-
            Information about a Drive Folder that is shared with all teachers of
            the course. This field will only be set for teachers of the course
            and domain administrators. Read-only.
        gradebookSettings:
          description: >-
            The gradebook settings that specify how a student's overall grade
            for the course will be calculated and who it will be displayed to.
            Read-only
          $ref: '#/components/schemas/GradebookSettings'
        guardiansEnabled:
          type: boolean
          description: >-
            Whether or not guardian notifications are enabled for this course.
            Read-only.
        enrollmentCode:
          type: string
          description: >-
            Enrollment code to use when joining this course. Specifying this
            field in a course update mask results in an error. Read-only.
        section:
          type: string
          description: >-
            Section of the course. For example, "Period 2". If set, this field
            must be a valid UTF-8 string and no longer than 2800 characters.
        courseGroupEmail:
          description: >-
            The email address of a Google group containing all members of the
            course. This group does not accept email and can only be used for
            permissions. Read-only.
          type: string
        alternateLink:
          description: Absolute link to this course in the Classroom web UI. Read-only.
          type: string
        calendarId:
          type: string
          description: >-
            The Calendar ID for a calendar that all course members can see, to
            which Classroom adds events for course work and announcements in the
            course. The Calendar for a course is created asynchronously when the
            course is set to `CourseState.ACTIVE` for the first time (at
            creation time or when it is updated to `ACTIVE` through the UI or
            the API). The Calendar ID will not be populated until the creation
            process is completed. Read-only.
        name:
          description: >-
            Name of the course. For example, "10th Grade Biology". The name is
            required. It must be between 1 and 750 characters and a valid UTF-8
            string.
          type: string
        room:
          description: >-
            Optional room location. For example, "301". If set, this field must
            be a valid UTF-8 string and no longer than 650 characters.
          type: string
        id:
          description: >-
            Identifier for this course assigned by Classroom. When creating a
            course, you may optionally set this identifier to an alias string in
            the request to create a corresponding alias. The `id` is still
            assigned by Classroom and cannot be updated after the course is
            created. Specifying this field in a course update mask results in an
            error.
          type: string
        teacherGroupEmail:
          type: string
          description: >-
            The email address of a Google group containing all teachers of the
            course. This group does not accept email and can only be used for
            permissions. Read-only.
      type: object
      id: Course
    AssignmentSubmission:
      type: object
      description: Student work for an assignment.
      id: AssignmentSubmission
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          description: >-
            Attachments added by the student. Drive files that correspond to
            materials with a share mode of STUDENT_COPY may not exist yet if the
            student has not accessed the assignment in Classroom. Some
            attachment metadata is only populated if the requesting user has
            permission to access it. Identifier and alternate_link fields are
            always available, but others (for example, title) may not be.
    DriveFolder:
      id: DriveFolder
      type: object
      description: Representation of a Google Drive folder.
      properties:
        title:
          type: string
          description: Title of the Drive folder. Read-only.
        id:
          type: string
          description: Drive API resource ID.
        alternateLink:
          type: string
          description: URL that can be used to access the Drive folder. Read-only.
    ModifyAttachmentsRequest:
      properties:
        addAttachments:
          description: >-
            Attachments to add. A student submission may not have more than 20
            attachments. Form attachments are not supported.
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
      description: Request to modify the attachments of a student submission.
      type: object
      id: ModifyAttachmentsRequest
    ModifyAnnouncementAssigneesRequest:
      id: ModifyAnnouncementAssigneesRequest
      properties:
        assigneeMode:
          type: string
          enumDescriptions:
            - No mode specified. This is never returned.
            - All students can see the item. This is the default state.
            - A subset of the students can see the item.
          description: >-
            Mode of the announcement describing whether it is accessible by all
            students or specified individual students.
          enum:
            - ASSIGNEE_MODE_UNSPECIFIED
            - ALL_STUDENTS
            - INDIVIDUAL_STUDENTS
        modifyIndividualStudentsOptions:
          $ref: '#/components/schemas/ModifyIndividualStudentsOptions'
          description: >-
            Set which students can view or cannot view the announcement. Must be
            specified only when `assigneeMode` is `INDIVIDUAL_STUDENTS`.
      description: Request to modify assignee mode and options of an announcement.
      type: object
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/classroom.push-notifications: Receive notifications about your Google Classroom data
            https://www.googleapis.com/auth/classroom.courseworkmaterials: See, edit, and create classwork materials in Google Classroom
            https://www.googleapis.com/auth/classroom.topics.readonly: View topics in Google Classroom
            https://www.googleapis.com/auth/classroom.guardianlinks.students: >-
              View and manage guardians for students in your Google Classroom
              classes
            https://www.googleapis.com/auth/classroom.courses: >-
              See, edit, create, and permanently delete your Google Classroom
              classes
            https://www.googleapis.com/auth/classroom.coursework.students.readonly: >-
              View course work and grades for students in the Google Classroom
              classes you teach or administer
            https://www.googleapis.com/auth/classroom.student-submissions.me.readonly: View your course work and grades in Google Classroom
            https://www.googleapis.com/auth/classroom.announcements.readonly: View announcements in Google Classroom
            https://www.googleapis.com/auth/classroom.student-submissions.students.readonly: >-
              View course work and grades for students in the Google Classroom
              classes you teach or administer
            https://www.googleapis.com/auth/classroom.announcements: View and manage announcements in Google Classroom
            https://www.googleapis.com/auth/classroom.rosters.readonly: View your Google Classroom class rosters
            https://www.googleapis.com/auth/classroom.profile.photos: View the profile photos of people in your classes
            https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly: View your Google Classroom guardians
            https://www.googleapis.com/auth/classroom.rosters: Manage your Google Classroom class rosters
            https://www.googleapis.com/auth/classroom.coursework.me.readonly: View your course work and grades in Google Classroom
            https://www.googleapis.com/auth/classroom.courseworkmaterials.readonly: See all classwork materials for your Google Classroom classes
            https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly: View guardians for students in your Google Classroom classes
            https://www.googleapis.com/auth/classroom.topics: See, create, and edit topics in Google Classroom
            https://www.googleapis.com/auth/classroom.profile.emails: View the email addresses of people in your classes
            https://www.googleapis.com/auth/classroom.coursework.me: >-
              See, create and edit coursework items including assignments,
              questions, and grades
            https://www.googleapis.com/auth/classroom.courses.readonly: View your Google Classroom classes
            https://www.googleapis.com/auth/classroom.coursework.students: >-
              Manage course work and grades for students in the Google Classroom
              classes you teach and view the course work and grades for classes
              you administer
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/registrations/{registrationId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
    delete:
      description: >-
        Deletes a `Registration`, causing Classroom to stop sending
        notifications for that `Registration`.
      operationId: classroom.registrations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.push-notifications
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.push-notifications
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: registrationId
          required: true
          schema:
            type: string
      x-stackQL-resource: registrations
      x-stackQL-verb: delete
  /v1/registrations:
    parameters: *ref_1
    post:
      description: >-
        Creates a `Registration`, causing Classroom to start sending
        notifications from the provided `feed` to the destination provided in
        `cloudPubSubTopic`. Returns the created `Registration`. Currently, this
        will be the same as the argument, but with server-assigned fields such
        as `expiry_time` and `id` filled in. Note that any value specified for
        the `expiry_time` or `id` fields will be ignored. While Classroom may
        validate the `cloudPubSubTopic` and return errors on a best effort
        basis, it is the caller's responsibility to ensure that it exists and
        that Classroom has permission to publish to it. This method may return
        the following error codes: * `PERMISSION_DENIED` if: * the authenticated
        user does not have permission to receive notifications from the
        requested field; or * the current user has not granted access to the
        current Cloud project with the appropriate scope for the requested feed.
        Note that domain-wide delegation of authority is not currently supported
        for this purpose. If the request has the appropriate scope, but no grant
        exists, a Request Errors is returned. * another access error is
        encountered. * `INVALID_ARGUMENT` if: * no `cloudPubsubTopic` is
        specified, or the specified `cloudPubsubTopic` is not valid; or * no
        `feed` is specified, or the specified `feed` is not valid. * `NOT_FOUND`
        if: * the specified `feed` cannot be located, or the requesting user
        does not have permission to determine whether or not it exists; or * the
        specified `cloudPubsubTopic` cannot be located, or Classroom has not
        been granted permission to publish to it.
      operationId: classroom.registrations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.push-notifications
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.push-notifications
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
      parameters: []
      x-stackQL-resource: registrations
      x-stackQL-verb: insert
  /v1/userProfiles/{studentId}/guardianInvitations:
    parameters: *ref_1
    get:
      description: >-
        Returns a list of guardian invitations that the requesting user is
        permitted to view, filtered by the parameters provided. This method
        returns the following error codes: * `PERMISSION_DENIED` if a
        `student_id` is specified, and the requesting user is not permitted to
        view guardian invitations for that student, if `"-"` is specified as the
        `student_id` and the user is not a domain administrator, if guardians
        are not enabled for the domain in question, or for other access errors.
        * `INVALID_ARGUMENT` if a `student_id` is specified, but its format
        cannot be recognized (it is not an email address, nor a `student_id`
        from the API, nor the literal string `me`). May also be returned if an
        invalid `page_token` or `state` is provided. * `NOT_FOUND` if a
        `student_id` is specified, and its format can be recognized, but
        Classroom has no record of that student.
      operationId: classroom.userProfiles.guardianInvitations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGuardianInvitationsResponse'
      parameters:
        - in: path
          name: studentId
          required: true
          schema:
            type: string
        - in: query
          name: states
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: invitedEmailAddress
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: guardian_invitations
      x-stackQL-verb: select
    post:
      description: >-
        Creates a guardian invitation, and sends an email to the guardian asking
        them to confirm that they are the student's guardian. Once the guardian
        accepts the invitation, their `state` will change to `COMPLETED` and
        they will start receiving guardian notifications. A `Guardian` resource
        will also be created to represent the active guardian. The request
        object must have the `student_id` and `invited_email_address` fields
        set. Failing to set these fields, or setting any other fields in the
        request, will result in an error. This method returns the following
        error codes: * `PERMISSION_DENIED` if the current user does not have
        permission to manage guardians, if the guardian in question has already
        rejected too many requests for that student, if guardians are not
        enabled for the domain in question, or for other access errors. *
        `RESOURCE_EXHAUSTED` if the student or guardian has exceeded the
        guardian link limit. * `INVALID_ARGUMENT` if the guardian email address
        is not valid (for example, if it is too long), or if the format of the
        student ID provided cannot be recognized (it is not an email address,
        nor a `user_id` from this API). This error will also be returned if
        read-only fields are set, or if the `state` field is set to to a value
        other than `PENDING`. * `NOT_FOUND` if the student ID provided is a
        valid student ID, but Classroom has no record of that student. *
        `ALREADY_EXISTS` if there is already a pending guardian invitation for
        the student and `invited_email_address` provided, or if the provided
        `invited_email_address` matches the Google account of an existing
        `Guardian` for this user.
      operationId: classroom.userProfiles.guardianInvitations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuardianInvitation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuardianInvitation'
      parameters:
        - in: path
          name: studentId
          required: true
          schema:
            type: string
      x-stackQL-resource: guardian_invitations
      x-stackQL-verb: insert
  /v1/userProfiles/{studentId}/guardianInvitations/{invitationId}:
    parameters: *ref_1
    get:
      description: >-
        Returns a specific guardian invitation. This method returns the
        following error codes: * `PERMISSION_DENIED` if the requesting user is
        not permitted to view guardian invitations for the student identified by
        the `student_id`, if guardians are not enabled for the domain in
        question, or for other access errors. * `INVALID_ARGUMENT` if a
        `student_id` is specified, but its format cannot be recognized (it is
        not an email address, nor a `student_id` from the API, nor the literal
        string `me`). * `NOT_FOUND` if Classroom cannot find any record of the
        given student or `invitation_id`. May also be returned if the student
        exists, but the requesting user does not have access to see that
        student.
      operationId: classroom.userProfiles.guardianInvitations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuardianInvitation'
      parameters:
        - in: path
          name: studentId
          required: true
          schema:
            type: string
        - in: path
          name: invitationId
          required: true
          schema:
            type: string
      x-stackQL-resource: guardian_invitations
      x-stackQL-verb: select
    patch:
      description: >-
        Modifies a guardian invitation. Currently, the only valid modification
        is to change the `state` from `PENDING` to `COMPLETE`. This has the
        effect of withdrawing the invitation. This method returns the following
        error codes: * `PERMISSION_DENIED` if the current user does not have
        permission to manage guardians, if guardians are not enabled for the
        domain in question or for other access errors. * `FAILED_PRECONDITION`
        if the guardian link is not in the `PENDING` state. * `INVALID_ARGUMENT`
        if the format of the student ID provided cannot be recognized (it is not
        an email address, nor a `user_id` from this API), or if the passed
        `GuardianInvitation` has a `state` other than `COMPLETE`, or if it
        modifies fields other than `state`. * `NOT_FOUND` if the student ID
        provided is a valid student ID, but Classroom has no record of that
        student, or if the `id` field does not refer to a guardian invitation
        known to Classroom.
      operationId: classroom.userProfiles.guardianInvitations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuardianInvitation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuardianInvitation'
      parameters:
        - in: path
          name: studentId
          required: true
          schema:
            type: string
        - in: path
          name: invitationId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: guardian_invitations
      x-stackQL-verb: exec
  /v1/userProfiles/{studentId}/guardians/{guardianId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a guardian. The guardian will no longer receive guardian
        notifications and the guardian will no longer be accessible via the API.
        This method returns the following error codes: * `PERMISSION_DENIED` if
        no user that matches the provided `student_id` is visible to the
        requesting user, if the requesting user is not permitted to manage
        guardians for the student identified by the `student_id`, if guardians
        are not enabled for the domain in question, or for other access errors.
        * `INVALID_ARGUMENT` if a `student_id` is specified, but its format
        cannot be recognized (it is not an email address, nor a `student_id`
        from the API). * `NOT_FOUND` if the requesting user is permitted to
        modify guardians for the requested `student_id`, but no `Guardian`
        record exists for that student with the provided `guardian_id`.
      operationId: classroom.userProfiles.guardians.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: studentId
          required: true
          schema:
            type: string
        - in: path
          name: guardianId
          required: true
          schema:
            type: string
      x-stackQL-resource: guardians
      x-stackQL-verb: delete
    get:
      description: >-
        Returns a specific guardian. This method returns the following error
        codes: * `PERMISSION_DENIED` if no user that matches the provided
        `student_id` is visible to the requesting user, if the requesting user
        is not permitted to view guardian information for the student identified
        by the `student_id`, if guardians are not enabled for the domain in
        question, or for other access errors. * `INVALID_ARGUMENT` if a
        `student_id` is specified, but its format cannot be recognized (it is
        not an email address, nor a `student_id` from the API, nor the literal
        string `me`). * `NOT_FOUND` if the requesting user is permitted to view
        guardians for the requested `student_id`, but no `Guardian` record
        exists for that student that matches the provided `guardian_id`.
      operationId: classroom.userProfiles.guardians.get
      security:
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guardian'
      parameters:
        - in: path
          name: studentId
          required: true
          schema:
            type: string
        - in: path
          name: guardianId
          required: true
          schema:
            type: string
      x-stackQL-resource: guardians
      x-stackQL-verb: select
  /v1/userProfiles/{studentId}/guardians:
    parameters: *ref_1
    get:
      description: >-
        Returns a list of guardians that the requesting user is permitted to
        view, restricted to those that match the request. To list guardians for
        any student that the requesting user may view guardians for, use the
        literal character `-` for the student ID. This method returns the
        following error codes: * `PERMISSION_DENIED` if a `student_id` is
        specified, and the requesting user is not permitted to view guardian
        information for that student, if `"-"` is specified as the `student_id`
        and the user is not a domain administrator, if guardians are not enabled
        for the domain in question, if the `invited_email_address` filter is set
        by a user who is not a domain administrator, or for other access errors.
        * `INVALID_ARGUMENT` if a `student_id` is specified, but its format
        cannot be recognized (it is not an email address, nor a `student_id`
        from the API, nor the literal string `me`). May also be returned if an
        invalid `page_token` is provided. * `NOT_FOUND` if a `student_id` is
        specified, and its format can be recognized, but Classroom has no record
        of that student.
      operationId: classroom.userProfiles.guardians.list
      security:
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.guardianlinks.me.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.guardianlinks.students
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.guardianlinks.students.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGuardiansResponse'
      parameters:
        - in: path
          name: studentId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: invitedEmailAddress
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: guardians
      x-stackQL-verb: select
  /v1/userProfiles/{userId}:
    parameters: *ref_1
    get:
      description: >-
        Returns a user profile. This method returns the following error codes: *
        `PERMISSION_DENIED` if the requesting user is not permitted to access
        this user profile, if no profile exists with the requested ID, or for
        access errors.
      operationId: classroom.userProfiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.emails
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.emails
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.photos
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.photos
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_profiles
      x-stackQL-verb: select
  /v1/invitations/{id}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes an invitation. This method returns the following error codes: *
        `PERMISSION_DENIED` if the requesting user is not permitted to delete
        the requested invitation or for access errors. * `NOT_FOUND` if no
        invitation exists with the requested ID.
      operationId: classroom.invitations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: invitations
      x-stackQL-verb: delete
    get:
      description: >-
        Returns an invitation. This method returns the following error codes: *
        `PERMISSION_DENIED` if the requesting user is not permitted to view the
        requested invitation or for access errors. * `NOT_FOUND` if no
        invitation exists with the requested ID.
      operationId: classroom.invitations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: invitations
      x-stackQL-verb: select
  /v1/invitations:
    parameters: *ref_1
    get:
      description: >-
        Returns a list of invitations that the requesting user is permitted to
        view, restricted to those that match the list request. *Note:* At least
        one of `user_id` or `course_id` must be supplied. Both fields can be
        supplied. This method returns the following error codes: *
        `PERMISSION_DENIED` for access errors.
      operationId: classroom.invitations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvitationsResponse'
      parameters:
        - in: query
          name: courseId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: userId
          schema:
            type: string
      x-stackQL-resource: invitations
      x-stackQL-verb: select
    post:
      description: >-
        Creates an invitation. Only one invitation for a user and course may
        exist at a time. Delete and re-create an invitation to make changes.
        This method returns the following error codes: * `PERMISSION_DENIED` if
        the requesting user is not permitted to create invitations for this
        course or for access errors. * `NOT_FOUND` if the course or the user
        does not exist. * `FAILED_PRECONDITION`: * if the requested user's
        account is disabled. * if the user already has this role or a role with
        greater permissions. * for the following request errors: *
        IneligibleOwner * `ALREADY_EXISTS` if an invitation for the specified
        user and course already exists.
      operationId: classroom.invitations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
      parameters: []
      x-stackQL-resource: invitations
      x-stackQL-verb: insert
  /v1/invitations/{id}:accept:
    parameters: *ref_1
    post:
      description: >-
        Accepts an invitation, removing it and adding the invited user to the
        teachers or students (as appropriate) of the specified course. Only the
        invited user may accept an invitation. This method returns the following
        error codes: * `PERMISSION_DENIED` if the requesting user is not
        permitted to accept the requested invitation or for access errors. *
        `FAILED_PRECONDITION` for the following request errors: *
        CourseMemberLimitReached * CourseNotModifiable *
        CourseTeacherLimitReached * UserGroupsMembershipLimitReached *
        `NOT_FOUND` if no invitation exists with the requested ID.
      operationId: classroom.invitations.accept
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: invitations
      x-stackQL-verb: exec
  /v1/courses/{courseId}/students/{userId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a student of a course. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
        delete students of this course or for access errors. * `NOT_FOUND` if no
        student of this course has the requested ID or if the course does not
        exist.
      operationId: classroom.courses.students.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: students
      x-stackQL-verb: delete
    get:
      description: >-
        Returns a student of a course. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
        view students of this course or for access errors. * `NOT_FOUND` if no
        student of this course has the requested ID or if the course does not
        exist.
      operationId: classroom.courses.students.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.emails
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.emails
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.photos
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.photos
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: students
      x-stackQL-verb: select
  /v1/courses/{courseId}/students:
    parameters: *ref_1
    get:
      description: >-
        Returns a list of students of this course that the requester is
        permitted to view. This method returns the following error codes: *
        `NOT_FOUND` if the course does not exist. * `PERMISSION_DENIED` for
        access errors.
      operationId: classroom.courses.students.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.emails
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.emails
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.photos
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.photos
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStudentsResponse'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: students
      x-stackQL-verb: select
    post:
      description: >-
        Adds a user as a student of a course. Domain administrators are
        permitted to [directly
        add](https://developers.google.com/classroom/guides/manage-users) users
        within their domain as students to courses within their domain. Students
        are permitted to add themselves to a course using an enrollment code.
        This method returns the following error codes: * `PERMISSION_DENIED` if
        the requesting user is not permitted to create students in this course
        or for access errors. * `NOT_FOUND` if the requested course ID does not
        exist. * `FAILED_PRECONDITION` if the requested user's account is
        disabled, for the following request errors: * CourseMemberLimitReached *
        CourseNotModifiable * UserGroupsMembershipLimitReached *
        InactiveCourseOwner * `ALREADY_EXISTS` if the user is already a student
        or teacher in the course.
      operationId: classroom.courses.students.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.emails
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.emails
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.photos
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.photos
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: enrollmentCode
          schema:
            type: string
      x-stackQL-resource: students
      x-stackQL-verb: insert
  /v1/courses/{courseId}/teachers/{userId}:
    parameters: *ref_1
    get:
      description: >-
        Returns a teacher of a course. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
        view teachers of this course or for access errors. * `NOT_FOUND` if no
        teacher of this course has the requested ID or if the course does not
        exist.
      operationId: classroom.courses.teachers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.emails
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.emails
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.photos
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.photos
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: teachers
      x-stackQL-verb: select
    delete:
      description: >-
        Removes the specified teacher from the specified course. This method
        returns the following error codes: * `PERMISSION_DENIED` if the
        requesting user is not permitted to delete teachers of this course or
        for access errors. * `NOT_FOUND` if no teacher of this course has the
        requested ID or if the course does not exist. * `FAILED_PRECONDITION` if
        the requested ID belongs to the primary teacher of this course. *
        `FAILED_PRECONDITION` if the requested ID belongs to the owner of the
        course Drive folder. * `FAILED_PRECONDITION` if the course no longer has
        an active owner.
      operationId: classroom.courses.teachers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: teachers
      x-stackQL-verb: delete
  /v1/courses/{courseId}/teachers:
    parameters: *ref_1
    get:
      description: >-
        Returns a list of teachers of this course that the requester is
        permitted to view. This method returns the following error codes: *
        `NOT_FOUND` if the course does not exist. * `PERMISSION_DENIED` for
        access errors.
      operationId: classroom.courses.teachers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.emails
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.emails
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.photos
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.photos
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeachersResponse'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: teachers
      x-stackQL-verb: select
    post:
      description: >-
        Creates a teacher of a course. Domain administrators are permitted to
        [directly
        add](https://developers.google.com/classroom/guides/manage-users) users
        within their domain as teachers to courses within their domain.
        Non-admin users should send an Invitation instead. This method returns
        the following error codes: * `PERMISSION_DENIED` if the requesting user
        is not permitted to create teachers in this course or for access errors.
        * `NOT_FOUND` if the requested course ID does not exist. *
        `FAILED_PRECONDITION` if the requested user's account is disabled, for
        the following request errors: * CourseMemberLimitReached *
        CourseNotModifiable * CourseTeacherLimitReached *
        UserGroupsMembershipLimitReached * InactiveCourseOwner *
        `ALREADY_EXISTS` if the user is already a teacher or student in the
        course.
      operationId: classroom.courses.teachers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.emails
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.emails
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.profile.photos
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.profile.photos
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.rosters
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.rosters
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      x-stackQL-resource: teachers
      x-stackQL-verb: insert
  /v1/courses/{courseId}/courseWorkMaterials:
    parameters: *ref_1
    post:
      description: >-
        Creates a course work material. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
        access the requested course, create course work material in the
        requested course, share a Drive attachment, or for access errors. *
        `INVALID_ARGUMENT` if the request is malformed or if more than 20 *
        materials are provided. * `NOT_FOUND` if the requested course does not
        exist. * `FAILED_PRECONDITION` for the following request error: *
        AttachmentNotVisible
      operationId: classroom.courses.courseWorkMaterials.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseWorkMaterial'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courseworkmaterials
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courseworkmaterials
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWorkMaterial'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      x-stackQL-resource: course_work_materials
      x-stackQL-verb: insert
    get:
      description: >-
        Returns a list of course work material that the requester is permitted
        to view. Course students may only view `PUBLISHED` course work material.
        Course teachers and domain administrators may view all course work
        material. This method returns the following error codes: *
        `PERMISSION_DENIED` if the requesting user is not permitted to access
        the requested course or for access errors. * `INVALID_ARGUMENT` if the
        request is malformed. * `NOT_FOUND` if the requested course does not
        exist.
      operationId: classroom.courses.courseWorkMaterials.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courseworkmaterials
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courseworkmaterials
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.courseworkmaterials.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.courseworkmaterials.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCourseWorkMaterialResponse'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: materialLink
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: materialDriveId
          schema:
            type: string
        - in: query
          name: courseWorkMaterialStates
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: course_work_materials
      x-stackQL-verb: select
  /v1/courses/{courseId}/courseWorkMaterials/{id}:
    parameters: *ref_1
    get:
      description: >-
        Returns a course work material. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
        access the requested course or course work material, or for access
        errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND`
        if the requested course or course work material does not exist.
      operationId: classroom.courses.courseWorkMaterials.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courseworkmaterials
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courseworkmaterials
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.courseworkmaterials.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.courseworkmaterials.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWorkMaterial'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: course_work_materials
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a course work material. This request must be made by the
        Developer Console project of the [OAuth client
        ID](https://support.google.com/cloud/answer/6158849) used to create the
        corresponding course work material item. This method returns the
        following error codes: * `PERMISSION_DENIED` if the requesting developer
        project did not create the corresponding course work material, if the
        requesting user is not permitted to delete the requested course or for
        access errors. * `FAILED_PRECONDITION` if the requested course work
        material has already been deleted. * `NOT_FOUND` if no course exists
        with the requested ID.
      operationId: classroom.courses.courseWorkMaterials.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courseworkmaterials
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courseworkmaterials
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: course_work_materials
      x-stackQL-verb: delete
    patch:
      description: >-
        Updates one or more fields of a course work material. This method
        returns the following error codes: * `PERMISSION_DENIED` if the
        requesting developer project for access errors. * `INVALID_ARGUMENT` if
        the request is malformed. * `FAILED_PRECONDITION` if the requested
        course work material has already been deleted. * `NOT_FOUND` if the
        requested course or course work material does not exist
      operationId: classroom.courses.courseWorkMaterials.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseWorkMaterial'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courseworkmaterials
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courseworkmaterials
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWorkMaterial'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: course_work_materials
      x-stackQL-verb: exec
  /v1/courses/{courseId}/announcements:
    parameters: *ref_1
    get:
      description: >-
        Returns a list of announcements that the requester is permitted to view.
        Course students may only view `PUBLISHED` announcements. Course teachers
        and domain administrators may view all announcements. This method
        returns the following error codes: * `PERMISSION_DENIED` if the
        requesting user is not permitted to access the requested course or for
        access errors. * `INVALID_ARGUMENT` if the request is malformed. *
        `NOT_FOUND` if the requested course does not exist.
      operationId: classroom.courses.announcements.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.announcements
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.announcements
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.announcements.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.announcements.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnnouncementsResponse'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: announcementStates
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: announcements
      x-stackQL-verb: select
    post:
      description: >-
        Creates an announcement. This method returns the following error codes:
        * `PERMISSION_DENIED` if the requesting user is not permitted to access
        the requested course, create announcements in the requested course,
        share a Drive attachment, or for access errors. * `INVALID_ARGUMENT` if
        the request is malformed. * `NOT_FOUND` if the requested course does not
        exist. * `FAILED_PRECONDITION` for the following request error: *
        AttachmentNotVisible
      operationId: classroom.courses.announcements.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.announcements
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.announcements
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      x-stackQL-resource: announcements
      x-stackQL-verb: insert
  /v1/courses/{courseId}/announcements/{id}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes an announcement. This request must be made by the Developer
        Console project of the [OAuth client
        ID](https://support.google.com/cloud/answer/6158849) used to create the
        corresponding announcement item. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting developer project did not
        create the corresponding announcement, if the requesting user is not
        permitted to delete the requested course or for access errors. *
        `FAILED_PRECONDITION` if the requested announcement has already been
        deleted. * `NOT_FOUND` if no course exists with the requested ID.
      operationId: classroom.courses.announcements.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.announcements
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.announcements
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: announcements
      x-stackQL-verb: delete
    get:
      description: >-
        Returns an announcement. This method returns the following error codes:
        * `PERMISSION_DENIED` if the requesting user is not permitted to access
        the requested course or announcement, or for access errors. *
        `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the
        requested course or announcement does not exist.
      operationId: classroom.courses.announcements.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.announcements
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.announcements
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.announcements.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.announcements.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: announcements
      x-stackQL-verb: select
    patch:
      description: >-
        Updates one or more fields of an announcement. This method returns the
        following error codes: * `PERMISSION_DENIED` if the requesting developer
        project did not create the corresponding announcement or for access
        errors. * `INVALID_ARGUMENT` if the request is malformed. *
        `FAILED_PRECONDITION` if the requested announcement has already been
        deleted. * `NOT_FOUND` if the requested course or announcement does not
        exist
      operationId: classroom.courses.announcements.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announcement'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.announcements
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.announcements
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: announcements
      x-stackQL-verb: exec
  /v1/courses/{courseId}/announcements/{id}:modifyAssignees:
    parameters: *ref_1
    post:
      description: >-
        Modifies assignee mode and options of an announcement. Only a teacher of
        the course that contains the announcement may call this method. This
        method returns the following error codes: * `PERMISSION_DENIED` if the
        requesting user is not permitted to access the requested course or
        course work or for access errors. * `INVALID_ARGUMENT` if the request is
        malformed. * `NOT_FOUND` if the requested course or course work does not
        exist.
      operationId: classroom.courses.announcements.modifyAssignees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyAnnouncementAssigneesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.announcements
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.announcements
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: announcements
      x-stackQL-verb: exec
  /v1/courses/{courseId}/courseWork/{id}:
    parameters: *ref_1
    patch:
      description: >-
        Updates one or more fields of a course work. See
        google.classroom.v1.CourseWork for details of which fields may be
        updated and who may change them. This request must be made by the
        Developer Console project of the [OAuth client
        ID](https://support.google.com/cloud/answer/6158849) used to create the
        corresponding course work item. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting developer project did not
        create the corresponding course work, if the user is not permitted to
        make the requested modification to the student submission, or for access
        errors. * `INVALID_ARGUMENT` if the request is malformed. *
        `FAILED_PRECONDITION` if the requested course work has already been
        deleted. * `NOT_FOUND` if the requested course, course work, or student
        submission does not exist.
      operationId: classroom.courses.courseWork.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseWork'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.students
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWork'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: course_work
      x-stackQL-verb: exec
    get:
      description: >-
        Returns course work. This method returns the following error codes: *
        `PERMISSION_DENIED` if the requesting user is not permitted to access
        the requested course or course work, or for access errors. *
        `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the
        requested course or course work does not exist.
      operationId: classroom.courses.courseWork.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.me
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.me
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.me.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.me.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.students
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.coursework.students.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.coursework.students.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWork'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: course_work
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a course work. This request must be made by the Developer
        Console project of the [OAuth client
        ID](https://support.google.com/cloud/answer/6158849) used to create the
        corresponding course work item. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting developer project did not
        create the corresponding course work, if the requesting user is not
        permitted to delete the requested course or for access errors. *
        `FAILED_PRECONDITION` if the requested course work has already been
        deleted. * `NOT_FOUND` if no course exists with the requested ID.
      operationId: classroom.courses.courseWork.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.students
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: course_work
      x-stackQL-verb: delete
  /v1/courses/{courseId}/courseWork:
    parameters: *ref_1
    post:
      description: >-
        Creates course work. The resulting course work (and corresponding
        student submissions) are associated with the Developer Console project
        of the [OAuth client
        ID](https://support.google.com/cloud/answer/6158849) used to make the
        request. Classroom API requests to modify course work and student
        submissions must be made with an OAuth client ID from the associated
        Developer Console project. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
        access the requested course, create course work in the requested course,
        share a Drive attachment, or for access errors. * `INVALID_ARGUMENT` if
        the request is malformed. * `NOT_FOUND` if the requested course does not
        exist. * `FAILED_PRECONDITION` for the following request error: *
        AttachmentNotVisible
      operationId: classroom.courses.courseWork.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseWork'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.students
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWork'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      x-stackQL-resource: course_work
      x-stackQL-verb: insert
    get:
      description: >-
        Returns a list of course work that the requester is permitted to view.
        Course students may only view `PUBLISHED` course work. Course teachers
        and domain administrators may view all course work. This method returns
        the following error codes: * `PERMISSION_DENIED` if the requesting user
        is not permitted to access the requested course or for access errors. *
        `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the
        requested course does not exist.
      operationId: classroom.courses.courseWork.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.me
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.me
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.me.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.me.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.students
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.coursework.students.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.coursework.students.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCourseWorkResponse'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: courseWorkStates
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: course_work
      x-stackQL-verb: select
  /v1/courses/{courseId}/courseWork/{id}:modifyAssignees:
    parameters: *ref_1
    post:
      description: >-
        Modifies assignee mode and options of a coursework. Only a teacher of
        the course that contains the coursework may call this method. This
        method returns the following error codes: * `PERMISSION_DENIED` if the
        requesting user is not permitted to access the requested course or
        course work or for access errors. * `INVALID_ARGUMENT` if the request is
        malformed. * `NOT_FOUND` if the requested course or course work does not
        exist.
      operationId: classroom.courses.courseWork.modifyAssignees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyCourseWorkAssigneesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.students
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseWork'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: course_work
      x-stackQL-verb: exec
  /v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments:
    parameters: *ref_1
    post:
      description: >-
        Modifies attachments of student submission. Attachments may only be
        added to student submissions belonging to course work objects with a
        `workType` of `ASSIGNMENT`. This request must be made by the Developer
        Console project of the [OAuth client
        ID](https://support.google.com/cloud/answer/6158849) used to create the
        corresponding course work item. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
        access the requested course or course work, if the user is not permitted
        to modify attachments on the requested student submission, or for access
        errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND`
        if the requested course, course work, or student submission does not
        exist.
      operationId: classroom.courses.courseWork.studentSubmissions.modifyAttachments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyAttachmentsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.me
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.me
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.students
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSubmission'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: courseWorkId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: student_submissions
      x-stackQL-verb: exec
  /v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn:
    parameters: *ref_1
    post:
      description: >-
        Turns in a student submission. Turning in a student submission transfers
        ownership of attached Drive files to the teacher and may also update the
        submission state. This may only be called by the student that owns the
        specified student submission. This request must be made by the Developer
        Console project of the [OAuth client
        ID](https://support.google.com/cloud/answer/6158849) used to create the
        corresponding course work item. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
        access the requested course or course work, turn in the requested
        student submission, or for access errors. * `INVALID_ARGUMENT` if the
        request is malformed. * `NOT_FOUND` if the requested course, course
        work, or student submission does not exist.
      operationId: classroom.courses.courseWork.studentSubmissions.turnIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TurnInStudentSubmissionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.me
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.me
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: courseWorkId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: student_submissions
      x-stackQL-verb: exec
  /v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return:
    parameters: *ref_1
    post:
      description: >-
        Returns a student submission. Returning a student submission transfers
        ownership of attached Drive files to the student and may also update the
        submission state. Unlike the Classroom application, returning a student
        submission does not set assignedGrade to the draftGrade value. Only a
        teacher of the course that contains the requested student submission may
        call this method. This request must be made by the Developer Console
        project of the [OAuth client
        ID](https://support.google.com/cloud/answer/6158849) used to create the
        corresponding course work item. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
        access the requested course or course work, return the requested student
        submission, or for access errors. * `INVALID_ARGUMENT` if the request is
        malformed. * `NOT_FOUND` if the requested course, course work, or
        student submission does not exist.
      operationId: classroom.courses.courseWork.studentSubmissions.return
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnStudentSubmissionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.students
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: courseWorkId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: student_submissions
      x-stackQL-verb: exec
  /v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:
    parameters: *ref_1
    get:
      description: >-
        Returns a student submission. * `PERMISSION_DENIED` if the requesting
        user is not permitted to access the requested course, course work, or
        student submission or for access errors. * `INVALID_ARGUMENT` if the
        request is malformed. * `NOT_FOUND` if the requested course, course
        work, or student submission does not exist.
      operationId: classroom.courses.courseWork.studentSubmissions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.me
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.me
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.me.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.me.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.students
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.coursework.students.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.coursework.students.readonly
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.student-submissions.me.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.student-submissions.me.readonly
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.student-submissions.students.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.student-submissions.students.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSubmission'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: courseWorkId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: student_submissions
      x-stackQL-verb: select
    patch:
      description: >-
        Updates one or more fields of a student submission. See
        google.classroom.v1.StudentSubmission for details of which fields may be
        updated and who may change them. This request must be made by the
        Developer Console project of the [OAuth client
        ID](https://support.google.com/cloud/answer/6158849) used to create the
        corresponding course work item. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting developer project did not
        create the corresponding course work, if the user is not permitted to
        make the requested modification to the student submission, or for access
        errors. * `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND`
        if the requested course, course work, or student submission does not
        exist.
      operationId: classroom.courses.courseWork.studentSubmissions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentSubmission'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.me
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.me
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.students
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSubmission'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: courseWorkId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: student_submissions
      x-stackQL-verb: exec
  /v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions:
    parameters: *ref_1
    get:
      description: >-
        Returns a list of student submissions that the requester is permitted to
        view, factoring in the OAuth scopes of the request. `-` may be specified
        as the `course_work_id` to include student submissions for multiple
        course work items. Course students may only view their own work. Course
        teachers and domain administrators may view all student submissions.
        This method returns the following error codes: * `PERMISSION_DENIED` if
        the requesting user is not permitted to access the requested course or
        course work, or for access errors. * `INVALID_ARGUMENT` if the request
        is malformed. * `NOT_FOUND` if the requested course does not exist.
      operationId: classroom.courses.courseWork.studentSubmissions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.me
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.me
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.me.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.me.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.students
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.students
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.coursework.students.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.coursework.students.readonly
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.student-submissions.me.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.student-submissions.me.readonly
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/classroom.student-submissions.students.readonly
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/classroom.student-submissions.students.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStudentSubmissionsResponse'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: courseWorkId
          required: true
          schema:
            type: string
        - in: query
          name: states
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: userId
          schema:
            type: string
        - in: query
          name: late
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: student_submissions
      x-stackQL-verb: select
  /v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim:
    parameters: *ref_1
    post:
      description: >-
        Reclaims a student submission on behalf of the student that owns it.
        Reclaiming a student submission transfers ownership of attached Drive
        files to the student and updates the submission state. Only the student
        that owns the requested student submission may call this method, and
        only for a student submission that has been turned in. This request must
        be made by the Developer Console project of the [OAuth client
        ID](https://support.google.com/cloud/answer/6158849) used to create the
        corresponding course work item. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
        access the requested course or course work, unsubmit the requested
        student submission, or for access errors. * `FAILED_PRECONDITION` if the
        student submission has not been turned in. * `INVALID_ARGUMENT` if the
        request is malformed. * `NOT_FOUND` if the requested course, course
        work, or student submission does not exist.
      operationId: classroom.courses.courseWork.studentSubmissions.reclaim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReclaimStudentSubmissionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.coursework.me
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.coursework.me
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: courseWorkId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: student_submissions
      x-stackQL-verb: exec
  /v1/courses/{courseId}/topics:
    parameters: *ref_1
    get:
      description: >-
        Returns the list of topics that the requester is permitted to view. This
        method returns the following error codes: * `PERMISSION_DENIED` if the
        requesting user is not permitted to access the requested course or for
        access errors. * `INVALID_ARGUMENT` if the request is malformed. *
        `NOT_FOUND` if the requested course does not exist.
      operationId: classroom.courses.topics.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.topics
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.topics
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.topics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.topics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicResponse'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: topics
      x-stackQL-verb: select
    post:
      description: >-
        Creates a topic. This method returns the following error codes: *
        `PERMISSION_DENIED` if the requesting user is not permitted to access
        the requested course, create a topic in the requested course, or for
        access errors. * `INVALID_ARGUMENT` if the request is malformed. *
        `NOT_FOUND` if the requested course does not exist.
      operationId: classroom.courses.topics.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.topics
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.topics
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      x-stackQL-resource: topics
      x-stackQL-verb: insert
  /v1/courses/{courseId}/topics/{id}:
    parameters: *ref_1
    patch:
      description: >-
        Updates one or more fields of a topic. This method returns the following
        error codes: * `PERMISSION_DENIED` if the requesting developer project
        did not create the corresponding topic or for access errors. *
        `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the
        requested course or topic does not exist
      operationId: classroom.courses.topics.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.topics
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.topics
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: topics
      x-stackQL-verb: exec
    get:
      description: >-
        Returns a topic. This method returns the following error codes: *
        `PERMISSION_DENIED` if the requesting user is not permitted to access
        the requested course or topic, or for access errors. *
        `INVALID_ARGUMENT` if the request is malformed. * `NOT_FOUND` if the
        requested course or topic does not exist.
      operationId: classroom.courses.topics.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.topics
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.topics
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.topics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.topics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: topics
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a topic. This method returns the following error codes: *
        `PERMISSION_DENIED` if the requesting user is not allowed to delete the
        requested topic or for access errors. * `FAILED_PRECONDITION` if the
        requested topic has already been deleted. * `NOT_FOUND` if no course or
        topic exists with the requested ID.
      operationId: classroom.courses.topics.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.topics
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.topics
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: topics
      x-stackQL-verb: delete
  /v1/courses/{courseId}/aliases:
    parameters: *ref_1
    post:
      description: >-
        Creates an alias for a course. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
        create the alias or for access errors. * `NOT_FOUND` if the course does
        not exist. * `ALREADY_EXISTS` if the alias already exists. *
        `FAILED_PRECONDITION` if the alias requested does not make sense for the
        requesting user or course (for example, if a user not in a domain
        attempts to access a domain-scoped alias).
      operationId: classroom.courses.aliases.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseAlias'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courses
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courses
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseAlias'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      x-stackQL-resource: aliases
      x-stackQL-verb: insert
    get:
      description: >-
        Returns a list of aliases for a course. This method returns the
        following error codes: * `PERMISSION_DENIED` if the requesting user is
        not permitted to access the course or for access errors. * `NOT_FOUND`
        if the course does not exist.
      operationId: classroom.courses.aliases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courses
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courses
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courses.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courses.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCourseAliasesResponse'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: aliases
      x-stackQL-verb: select
  /v1/courses/{courseId}/aliases/{alias}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes an alias of a course. This method returns the following error
        codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
        remove the alias or for access errors. * `NOT_FOUND` if the alias does
        not exist. * `FAILED_PRECONDITION` if the alias requested does not make
        sense for the requesting user or course (for example, if a user not in a
        domain attempts to delete a domain-scoped alias).
      operationId: classroom.courses.aliases.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courses
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courses
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
        - in: path
          name: alias
          required: true
          schema:
            type: string
      x-stackQL-resource: aliases
      x-stackQL-verb: delete
  /v1/courses/{id}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a course. This method returns the following error codes: *
        `PERMISSION_DENIED` if the requesting user is not permitted to delete
        the requested course or for access errors. * `NOT_FOUND` if no course
        exists with the requested ID.
      operationId: classroom.courses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courses
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courses
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: courses
      x-stackQL-verb: delete
    patch:
      description: >-
        Updates one or more fields in a course. This method returns the
        following error codes: * `PERMISSION_DENIED` if the requesting user is
        not permitted to modify the requested course or for access errors. *
        `NOT_FOUND` if no course exists with the requested ID. *
        `INVALID_ARGUMENT` if invalid fields are specified in the update mask or
        if no update mask is supplied. * `FAILED_PRECONDITION` for the following
        request errors: * CourseNotModifiable * InactiveCourseOwner *
        IneligibleOwner
      operationId: classroom.courses.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courses
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courses
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: courses
      x-stackQL-verb: exec
    get:
      description: >-
        Returns a course. This method returns the following error codes: *
        `PERMISSION_DENIED` if the requesting user is not permitted to access
        the requested course or for access errors. * `NOT_FOUND` if no course
        exists with the requested ID.
      operationId: classroom.courses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courses
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courses
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courses.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courses.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: courses
      x-stackQL-verb: select
    put:
      description: >-
        Updates a course. This method returns the following error codes: *
        `PERMISSION_DENIED` if the requesting user is not permitted to modify
        the requested course or for access errors. * `NOT_FOUND` if no course
        exists with the requested ID. * `FAILED_PRECONDITION` for the following
        request errors: * CourseNotModifiable
      operationId: classroom.courses.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courses
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courses
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: courses
      x-stackQL-verb: exec
  /v1/courses:
    parameters: *ref_1
    get:
      description: >-
        Returns a list of courses that the requesting user is permitted to view,
        restricted to those that match the request. Returned courses are ordered
        by creation time, with the most recently created coming first. This
        method returns the following error codes: * `PERMISSION_DENIED` for
        access errors. * `INVALID_ARGUMENT` if the query argument is malformed.
        * `NOT_FOUND` if any users specified in the query arguments do not
        exist.
      operationId: classroom.courses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courses
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courses
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courses.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courses.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCoursesResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: teacherId
          schema:
            type: string
        - in: query
          name: studentId
          schema:
            type: string
        - in: query
          name: courseStates
          schema:
            type: string
      x-stackQL-resource: courses
      x-stackQL-verb: select
    post:
      description: >-
        Creates a course. The user specified in `ownerId` is the owner of the
        created course and added as a teacher. A non-admin requesting user can
        only create a course with themselves as the owner. Domain admins can
        create courses owned by any user within their domain. This method
        returns the following error codes: * `PERMISSION_DENIED` if the
        requesting user is not permitted to create courses or for access errors.
        * `NOT_FOUND` if the primary teacher is not a valid user. *
        `FAILED_PRECONDITION` if the course owner's account is disabled or for
        the following request errors: * UserCannotOwnCourse *
        UserGroupsMembershipLimitReached * `ALREADY_EXISTS` if an alias was
        specified in the `id` and already exists.
      operationId: classroom.courses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/classroom.courses
          Oauth2c:
            - https://www.googleapis.com/auth/classroom.courses
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
      parameters: []
      x-stackQL-resource: courses
      x-stackQL-verb: insert
