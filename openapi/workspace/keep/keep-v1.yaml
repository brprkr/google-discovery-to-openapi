openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Keep API
  description: >-
    The Google Keep API is used in an enterprise environment to manage Google
    Keep content and resolve issues identified by cloud security software.
  version: v1
  x-discovery-doc-revision: '20230615'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/keep/api
servers:
  - url: https://keep.googleapis.com
components:
  schemas:
    Group:
      description: Describes a single Group.
      properties:
        email:
          type: string
          description: The group email.
      id: Group
      type: object
    ListItem:
      properties:
        checked:
          description: Whether this item has been checked off or not.
          type: boolean
        text:
          description: The text of this item. Length must be less than 1,000 characters.
          $ref: '#/components/schemas/TextContent'
        childListItems:
          type: array
          items:
            $ref: '#/components/schemas/ListItem'
          description: >-
            If set, list of list items nested under this list item. Only one
            level of nesting is allowed.
      id: ListItem
      type: object
      description: A single list item in a note's list.
    BatchCreatePermissionsResponse:
      description: The response for creating permissions on a note.
      id: BatchCreatePermissionsResponse
      type: object
      properties:
        permissions:
          type: array
          description: Permissions created.
          items:
            $ref: '#/components/schemas/Permission'
    TextContent:
      id: TextContent
      description: The block of text for a single text section or list item.
      properties:
        text:
          type: string
          description: >-
            The text of the note. The limits on this vary with the specific
            field using this type.
      type: object
    Section:
      id: Section
      properties:
        text:
          description: >-
            Used if this section's content is a block of text. The length of the
            text content must be less than 20,000 characters.
          $ref: '#/components/schemas/TextContent'
        list:
          description: Used if this section's content is a list.
          $ref: '#/components/schemas/ListContent'
      type: object
      description: The content of the note.
    Note:
      description: A single note.
      id: Note
      type: object
      properties:
        trashTime:
          format: google-datetime
          description: >-
            Output only. When this note was trashed. If `trashed`, the note is
            eventually deleted. If the note is not trashed, this field is not
            set (and the trashed field is `false`).
          type: string
          readOnly: true
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. When this note was created.
        trashed:
          readOnly: true
          type: boolean
          description: >-
            Output only. `true` if this note has been trashed. If trashed, the
            note is eventually deleted.
        attachments:
          readOnly: true
          items:
            $ref: '#/components/schemas/Attachment'
          description: Output only. The attachments attached to this note.
          type: array
        title:
          description: The title of the note. Length must be less than 1,000 characters.
          type: string
        permissions:
          readOnly: true
          type: array
          description: >-
            Output only. The list of permissions set on the note. Contains at
            least one entry for the note owner.
          items:
            $ref: '#/components/schemas/Permission'
        name:
          description: >-
            Output only. The resource name of this note. See general note on
            identifiers in KeepService.
          type: string
          readOnly: true
        updateTime:
          description: Output only. When this note was last modified.
          readOnly: true
          type: string
          format: google-datetime
        body:
          description: The body of the note.
          $ref: '#/components/schemas/Section'
    BatchCreatePermissionsRequest:
      type: object
      properties:
        requests:
          items:
            $ref: '#/components/schemas/CreatePermissionRequest'
          description: The request message specifying the resources to create.
          type: array
      description: >-
        The request to add one or more permissions on the note. Currently, only
        the `WRITER` role may be specified. If adding a permission fails, then
        the entire request fails and no changes are made.
      id: BatchCreatePermissionsRequest
    Attachment:
      type: object
      properties:
        name:
          type: string
          description: The resource name;
        mimeType:
          items:
            type: string
          type: array
          description: >-
            The MIME types (IANA media types) in which the attachment is
            available.
      id: Attachment
      description: An attachment to a note.
    CreatePermissionRequest:
      description: The request to add a single permission on the note.
      type: object
      properties:
        parent:
          description: >-
            Required. The parent note where this permission will be created.
            Format: `notes/{note}`
          type: string
        permission:
          description: >-
            Required. The permission to create. One of Permission.email,
            User.email or Group.email must be supplied.
          $ref: '#/components/schemas/Permission'
      id: CreatePermissionRequest
    ListContent:
      type: object
      description: The list of items for a single list note.
      id: ListContent
      properties:
        listItems:
          description: The items in the list. The number of items must be less than 1,000.
          type: array
          items:
            $ref: '#/components/schemas/ListItem'
    Permission:
      properties:
        role:
          type: string
          enum:
            - ROLE_UNSPECIFIED
            - OWNER
            - WRITER
          description: >-
            The role granted by this permission. The role determines the
            entityâ€™s ability to read, write, and share notes.
          enumDescriptions:
            - An undefined role.
            - >-
              A role granting full access. This role cannot be added or removed.
              Defined by the creator of the note.
            - >-
              A role granting the ability to contribute content and modify note
              permissions.
        family:
          description: Output only. The Google Family to which this role applies.
          $ref: '#/components/schemas/Family'
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
          readOnly: true
          description: Output only. The user to whom this role applies.
        email:
          type: string
          description: >-
            The email associated with the member. If set on create, the `email`
            field in the `User` or `Group` message must either be empty or match
            this field. On read, may be unset if the member does not have an
            associated email.
        group:
          description: Output only. The group to which this role applies.
          $ref: '#/components/schemas/Group'
          readOnly: true
        name:
          readOnly: true
          type: string
          description: Output only. The resource name.
        deleted:
          type: boolean
          readOnly: true
          description: >-
            Output only. Whether this member has been deleted. If the member is
            recovered, this value is set to false and the recovered member
            retains the role on the note.
      type: object
      id: Permission
      description: A single permission on the note. Associates a `member` with a `role`.
    Family:
      id: Family
      type: object
      properties: {}
      description: Describes a single Google Family.
    Empty:
      properties: {}
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      id: Empty
    ListNotesResponse:
      id: ListNotesResponse
      type: object
      properties:
        notes:
          description: A page of notes.
          items:
            $ref: '#/components/schemas/Note'
          type: array
        nextPageToken:
          description: Next page's `page_token` field.
          type: string
      description: The response when listing a page of notes.
    BatchDeletePermissionsRequest:
      id: BatchDeletePermissionsRequest
      type: object
      description: >-
        The request to remove one or more permissions from a note. A permission
        with the `OWNER` role can't be removed. If removing a permission fails,
        then the entire request fails and no changes are made. Returns a 400 bad
        request error if a specified permission does not exist on the note.
      properties:
        names:
          type: array
          items:
            type: string
          description: >-
            Required. The names of the permissions to delete. Format:
            `notes/{note}/permissions/{permission}`
    User:
      properties:
        email:
          type: string
          description: The user's email.
      description: Describes a single user.
      id: User
      type: object
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/keep.readonly: View all your Google Keep data
            https://www.googleapis.com/auth/keep: See, edit, create and permanently delete all your Google Keep data
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/notes/{notesId}/attachments/{attachmentsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
    get:
      description: >-
        Gets an attachment. To download attachment media via REST requires the
        alt=media query parameter. Returns a 400 bad request error if attachment
        media is not available in the requested MIME type.
      operationId: keep.media.download
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
        - Oauth2:
            - https://www.googleapis.com/auth/keep.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/keep.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
      parameters:
        - in: path
          name: notesId
          required: true
          schema:
            type: string
        - in: path
          name: attachmentsId
          required: true
          schema:
            type: string
        - in: query
          name: mimeType
          schema:
            type: string
      x-stackQL-resource: media
      x-stackQL-verb: exec
  /v1/notes:
    parameters: *ref_1
    post:
      description: Creates a new note.
      operationId: keep.notes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
      parameters: []
      x-stackQL-resource: notes
      x-stackQL-verb: insert
    get:
      description: >-
        Lists notes. Every list call returns a page of results with `page_size`
        as the upper bound of returned items. A `page_size` of zero allows the
        server to choose the upper bound. The ListNotesResponse contains at most
        `page_size` entries. If there are more things left to list, it provides
        a `next_page_token` value. (Page tokens are opaque values.) To get the
        next page of results, copy the result's `next_page_token` into the next
        request's `page_token`. Repeat until the `next_page_token` returned with
        a page of results is empty. ListNotes return consistent results in the
        face of concurrent changes, or signals that it cannot with an ABORTED
        error.
      operationId: keep.notes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
        - Oauth2:
            - https://www.googleapis.com/auth/keep.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/keep.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotesResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: notes
      x-stackQL-verb: select
  /v1/notes/{notesId}:
    parameters: *ref_1
    get:
      description: Gets a note.
      operationId: keep.notes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
        - Oauth2:
            - https://www.googleapis.com/auth/keep.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/keep.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
      parameters:
        - in: path
          name: notesId
          required: true
          schema:
            type: string
      x-stackQL-resource: notes
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a note. Caller must have the `OWNER` role on the note to delete.
        Deleting a note removes the resource immediately and cannot be undone.
        Any collaborators will lose access to the note.
      operationId: keep.notes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: notesId
          required: true
          schema:
            type: string
      x-stackQL-resource: notes
      x-stackQL-verb: delete
  /v1/notes/{notesId}/permissions:batchDelete:
    parameters: *ref_1
    post:
      description: >-
        Deletes one or more permissions on the note. The specified entities will
        immediately lose access. A permission with the `OWNER` role can't be
        removed. If removing a permission fails, then the entire request fails
        and no changes are made. Returns a 400 bad request error if a specified
        permission does not exist on the note.
      operationId: keep.notes.permissions.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeletePermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: notesId
          required: true
          schema:
            type: string
      x-stackQL-resource: permissions
      x-stackQL-verb: delete
  /v1/notes/{notesId}/permissions:batchCreate:
    parameters: *ref_1
    post:
      description: >-
        Creates one or more permissions on the note. Only permissions with the
        `WRITER` role may be created. If adding any permission fails, then the
        entire request fails and no changes are made.
      operationId: keep.notes.permissions.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreatePermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreatePermissionsResponse'
      parameters:
        - in: path
          name: notesId
          required: true
          schema:
            type: string
      x-stackQL-resource: permissions
      x-stackQL-verb: insert
