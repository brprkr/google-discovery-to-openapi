openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Drive API
  description: The Google Drive API allows clients to access resources from Google Drive.
  version: v3
  x-discovery-doc-revision: '20230621'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/drive/
servers:
  - url: https://www.googleapis.com/drive/v3
components:
  schemas:
    LabelFieldModification:
      properties:
        fieldId:
          type: string
          description: The ID of the field to be modified.
        unsetValues:
          type: boolean
          description: Unsets the values for this field.
        kind:
          description: This is always drive#labelFieldModification.
          type: string
        setDateValues:
          type: array
          items:
            format: date
            type: string
          description: >-
            Replaces the value of a dateString Field with these new values. The
            string must be in the RFC 3339 full-date format: YYYY-MM-DD.
        setSelectionValues:
          type: array
          items:
            type: string
          description: Replaces a `selection` field with these new values.
        setTextValues:
          items:
            type: string
          description: Sets the value of a `text` field.
          type: array
        setIntegerValues:
          type: array
          description: Replaces the value of an `integer` field with these new values.
          items:
            format: int64
            type: string
        setUserValues:
          description: >-
            Replaces a `user` field with these new values. The values must be
            valid email addresses.
          type: array
          items:
            type: string
      description: A modification to a label's field.
      id: LabelFieldModification
      type: object
    User:
      properties:
        me:
          description: Output only. Whether this user is the requesting user.
          type: boolean
        emailAddress:
          type: string
          description: >-
            Output only. The email address of the user. This may not be present
            in certain contexts if the user has not made their email address
            visible to the requester.
        displayName:
          type: string
          description: Output only. A plain text displayable name for this user.
        kind:
          default: drive#user
          type: string
          description: >-
            Output only. Identifies what kind of resource this is. Value: the
            fixed string `"drive#user"`.
        permissionId:
          type: string
          description: Output only. The user's ID as visible in Permission resources.
        photoLink:
          description: Output only. A link to the user's profile photo, if available.
          type: string
      type: object
      description: Information about a Drive user.
      id: User
    About:
      id: About
      type: object
      properties:
        exportFormats:
          description: >-
            A map of source MIME type to possible targets for all supported
            exports.
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        maxImportSizes:
          additionalProperties:
            type: string
            format: int64
          type: object
          description: A map of maximum import sizes by MIME type, in bytes.
        canCreateTeamDrives:
          description: 'Deprecated: Use `canCreateDrives` instead.'
          type: boolean
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#about"`.
          default: drive#about
        storageQuota:
          description: >-
            The user's storage quota limits and usage. All fields are measured
            in bytes.
          properties:
            limit:
              type: string
              format: int64
              description: >-
                The usage limit, if applicable. This will not be present if the
                user has unlimited storage.
            usageInDriveTrash:
              description: The usage by trashed files in Google Drive.
              type: string
              format: int64
            usageInDrive:
              description: The usage by all files in Google Drive.
              format: int64
              type: string
            usage:
              type: string
              description: The total usage across all services.
              format: int64
          type: object
        driveThemes:
          type: array
          items:
            properties:
              colorRgb:
                type: string
                description: The color of this theme as an RGB hex string.
              id:
                type: string
                description: The ID of the theme.
              backgroundImageLink:
                type: string
                description: A link to this theme's background image.
            type: object
          description: A list of themes that are supported for shared drives.
        maxUploadSize:
          format: int64
          description: The maximum upload size in bytes.
          type: string
        teamDriveThemes:
          type: array
          items:
            properties:
              id:
                description: 'Deprecated: Use `driveThemes/id` instead.'
                type: string
              backgroundImageLink:
                type: string
                description: 'Deprecated: Use `driveThemes/backgroundImageLink` instead.'
              colorRgb:
                description: 'Deprecated: Use `driveThemes/colorRgb` instead.'
                type: string
            type: object
          description: 'Deprecated: Use `driveThemes` instead.'
        canCreateDrives:
          type: boolean
          description: Whether the user can create shared drives.
        folderColorPalette:
          items:
            type: string
          type: array
          description: The currently supported folder colors as RGB hex strings.
        user:
          description: The authenticated user.
          $ref: '#/components/schemas/User'
        importFormats:
          type: object
          description: >-
            A map of source MIME type to possible targets for all supported
            imports.
          additionalProperties:
            type: array
            items:
              type: string
        appInstalled:
          type: boolean
          description: Whether the user has installed the requesting app.
      description: Information about the user, the user's Drive, and system capabilities.
    Change:
      type: object
      description: A change to a file or shared drive.
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#change"`.
          default: drive#change
        time:
          description: The time of this change (RFC 3339 date-time).
          format: date-time
          type: string
        teamDrive:
          description: 'Deprecated: Use `drive` instead.'
          $ref: '#/components/schemas/TeamDrive'
        file:
          description: >-
            The updated state of the file. Present if the type is file and the
            file has not been removed from this list of changes.
          $ref: '#/components/schemas/File'
        drive:
          $ref: '#/components/schemas/Drive'
          description: >-
            The updated state of the shared drive. Present if the changeType is
            drive, the user is still a member of the shared drive, and the
            shared drive has not been deleted.
        driveId:
          description: The ID of the shared drive associated with this change.
          type: string
        removed:
          description: >-
            Whether the file or shared drive has been removed from this list of
            changes, for example by deletion or loss of access.
          type: boolean
        type:
          description: 'Deprecated: Use `changeType` instead.'
          type: string
        changeType:
          type: string
          description: The type of the change. Possible values are `file` and `drive`.
        fileId:
          description: The ID of the file which has changed.
          type: string
        teamDriveId:
          type: string
          description: 'Deprecated: Use `driveId` instead.'
      id: Change
    ChangeList:
      id: ChangeList
      description: A list of changes for a user.
      properties:
        newStartPageToken:
          type: string
          description: >-
            The starting page token for future changes. This will be present
            only if the end of the current changes list has been reached. The
            page token doesn't expire.
        changes:
          description: >-
            The list of changes. If nextPageToken is populated, then this list
            may be incomplete and an additional page of results should be
            fetched.
          type: array
          items:
            $ref: '#/components/schemas/Change'
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#changeList"`.
          default: drive#changeList
        nextPageToken:
          description: >-
            The page token for the next page of changes. This will be absent if
            the end of the changes list has been reached. The page token doesn't
            expire.
          type: string
      type: object
    Comment:
      type: object
      properties:
        resolved:
          description: >-
            Output only. Whether the comment has been resolved by one of its
            replies.
          type: boolean
        author:
          $ref: '#/components/schemas/User'
          description: >-
            Output only. The author of the comment. The author's email address
            and permission ID will not be populated.
        content:
          type: string
          description: >-
            The plain text content of the comment. This field is used for
            setting the content, while `htmlContent` should be displayed.
          annotations:
            required:
              - drive.comments.create
              - drive.comments.update
        createdTime:
          description: The time at which the comment was created (RFC 3339 date-time).
          type: string
          format: date-time
        kind:
          default: drive#comment
          description: >-
            Output only. Identifies what kind of resource this is. Value: the
            fixed string `"drive#comment"`.
          type: string
        anchor:
          description: >-
            A region of the document represented as a JSON string. For details
            on defining anchor properties, refer to [Manage comments and
            replies](https://developers.google.com/drive/api/v3/manage-comments).
          type: string
        replies:
          items:
            $ref: '#/components/schemas/Reply'
          type: array
          description: >-
            Output only. The full list of replies to the comment in
            chronological order.
        deleted:
          description: >-
            Output only. Whether the comment has been deleted. A deleted comment
            has no content.
          type: boolean
        quotedFileContent:
          description: >-
            The file content to which the comment refers, typically within the
            anchor region. For a text file, for example, this would be the text
            at the location of the comment.
          properties:
            value:
              description: >-
                The quoted content itself. This is interpreted as plain text if
                set through the API.
              type: string
            mimeType:
              type: string
              description: The MIME type of the quoted content.
          type: object
        modifiedTime:
          description: >-
            The last time the comment or any of its replies was modified (RFC
            3339 date-time).
          format: date-time
          type: string
        htmlContent:
          type: string
          description: Output only. The content of the comment with HTML formatting.
        id:
          type: string
          description: Output only. The ID of the comment.
      id: Comment
      description: A comment on a file.
    File:
      id: File
      type: object
      description: The metadata for a file.
      properties:
        thumbnailVersion:
          description: >-
            Output only. The thumbnail version for use in thumbnail cache
            invalidation.
          type: string
          format: int64
        explicitlyTrashed:
          description: >-
            Output only. Whether the file has been explicitly trashed, as
            opposed to recursively trashed from a parent folder.
          type: boolean
        headRevisionId:
          type: string
          description: >-
            Output only. The ID of the file's head revision. This is currently
            only available for files with binary content in Google Drive.
        owners:
          description: >-
            Output only. The owner of this file. Only certain legacy files may
            have more than one owner. This field isn't populated for items in
            shared drives.
          type: array
          items:
            $ref: '#/components/schemas/User'
        sha1Checksum:
          type: string
          description: >-
            Output only. The SHA1 checksum associated with this file, if
            available. This field is only populated for files with content
            stored in Google Drive; it is not populated for Docs Editors or
            shortcut files.
        driveId:
          description: >-
            Output only. ID of the shared drive the file resides in. Only
            populated for items in shared drives.
          type: string
        teamDriveId:
          type: string
          description: 'Deprecated: Output only. Use `driveId` instead.'
        name:
          type: string
          description: >-
            The name of the file. This is not necessarily unique within a
            folder. Note that for immutable items such as the top level folders
            of shared drives, My Drive root folder, and Application Data folder
            the name is constant.
        fullFileExtension:
          type: string
          description: >-
            Output only. The full file extension extracted from the `name`
            field. May contain multiple concatenated extensions, such as
            "tar.gz". This is only available for files with binary content in
            Google Drive. This is automatically updated when the `name` field
            changes, however it is not cleared if the new name does not contain
            a valid extension.
        mimeType:
          type: string
          description: >-
            The MIME type of the file. Google Drive attempts to automatically
            detect an appropriate value from uploaded content, if no value is
            provided. The value cannot be changed unless a new revision is
            uploaded. If a file is created with a Google Doc MIME type, the
            uploaded content is imported, if possible. The supported import
            formats are published in the About resource.
        labelInfo:
          description: Output only. An overview of the labels on the file.
          type: object
          properties:
            labels:
              description: >-
                Output only. The set of labels on the file as requested by the
                label IDs in the `includeLabels` parameter. By default, no
                labels are returned.
              type: array
              items:
                $ref: '#/components/schemas/Label'
        parents:
          type: array
          items:
            type: string
          description: >-
            The IDs of the parent folders which contain the file. If not
            specified as part of a create request, the file is placed directly
            in the user's My Drive folder. If not specified as part of a copy
            request, the file inherits any discoverable parents of the source
            file. Update requests must use the `addParents` and `removeParents`
            parameters to modify the parents list.
        size:
          type: string
          format: int64
          description: >-
            Output only. Size in bytes of blobs and first party editor files.
            Won't be populated for files that have no size, like shortcuts and
            folders.
        fileExtension:
          type: string
          description: >-
            Output only. The final component of `fullFileExtension`. This is
            only available for files with binary content in Google Drive.
        capabilities:
          description: >-
            Output only. Capabilities the current user has on this file. Each
            capability corresponds to a fine-grained action that a user may
            take.
          type: object
          properties:
            canDelete:
              description: Output only. Whether the current user can delete this file.
              type: boolean
            canModifyLabels:
              description: >-
                Output only. Whether the current user can modify the labels on
                the file.
              type: boolean
            canDeleteChildren:
              type: boolean
              description: >-
                Output only. Whether the current user can delete children of
                this folder. This is false when the item is not a folder. Only
                populated for items in shared drives.
            canModifyContentRestriction:
              description: >-
                Output only. Whether the current user can modify restrictions on
                content of this file.
              type: boolean
            canChangeSecurityUpdateEnabled:
              description: >-
                Output only. Whether the current user can change the
                securityUpdateEnabled field on link share metadata.
              type: boolean
            canMoveItemWithinTeamDrive:
              type: boolean
              description: 'Deprecated: Output only. Use `canMoveItemWithinDrive` instead.'
            canRemoveChildren:
              type: boolean
              description: >-
                Output only. Whether the current user can remove children from
                this folder. This is always false when the item is not a folder.
                For a folder in a shared drive, use `canDeleteChildren` or
                `canTrashChildren` instead.
            canReadLabels:
              type: boolean
              description: >-
                Output only. Whether the current user can read the labels on the
                file.
            canShare:
              description: >-
                Output only. Whether the current user can modify the sharing
                settings for this file.
              type: boolean
            canComment:
              description: Output only. Whether the current user can comment on this file.
              type: boolean
            canUntrash:
              type: boolean
              description: >-
                Output only. Whether the current user can restore this file from
                trash.
            canEdit:
              description: >-
                Output only. Whether the current user can edit this file. Other
                factors may limit the type of changes a user can make to a file.
                For example, see `canChangeCopyRequiresWriterPermission` or
                `canModifyContent`.
              type: boolean
            canMoveItemIntoTeamDrive:
              description: 'Deprecated: Output only. Use `canMoveItemOutOfDrive` instead.'
              type: boolean
            canReadDrive:
              description: >-
                Output only. Whether the current user can read the shared drive
                to which this file belongs. Only populated for items in shared
                drives.
              type: boolean
            canTrash:
              description: >-
                Output only. Whether the current user can move this file to
                trash.
              type: boolean
            canReadTeamDrive:
              type: boolean
              description: 'Deprecated: Output only. Use `canReadDrive` instead.'
            canCopy:
              description: >-
                Output only. Whether the current user can copy this file. For an
                item in a shared drive, whether the current user can copy
                non-folder descendants of this item, or this item itself if it
                is not a folder.
              type: boolean
            canAddMyDriveParent:
              type: boolean
              description: >-
                Output only. Whether the current user can add a parent for the
                item without removing an existing parent in the same request.
                Not populated for shared drive files.
            canReadRevisions:
              type: boolean
              description: >-
                Output only. Whether the current user can read the revisions
                resource of this file. For a shared drive item, whether
                revisions of non-folder descendants of this item, or this item
                itself if it is not a folder, can be read.
            canRemoveMyDriveParent:
              description: >-
                Output only. Whether the current user can remove a parent from
                the item without adding another parent in the same request. Not
                populated for shared drive files.
              type: boolean
            canListChildren:
              description: >-
                Output only. Whether the current user can list the children of
                this folder. This is always false when the item is not a folder.
              type: boolean
            canMoveChildrenWithinDrive:
              description: >-
                Output only. Whether the current user can move children of this
                folder within this drive. This is false when the item is not a
                folder. Note that a request to move the child may still fail
                depending on the current user's access to the child and to the
                destination folder.
              type: boolean
            canAddChildren:
              description: >-
                Output only. Whether the current user can add children to this
                folder. This is always false when the item is not a folder.
              type: boolean
            canMoveItemWithinDrive:
              type: boolean
              description: >-
                Output only. Whether the current user can move this item within
                this drive. Note that a request to change the parent of the item
                may still fail depending on the new parent that is being added
                and the parent that is being removed.
            canModifyContent:
              description: >-
                Output only. Whether the current user can modify the content of
                this file.
              type: boolean
            canChangeCopyRequiresWriterPermission:
              type: boolean
              description: >-
                Output only. Whether the current user can change the
                `copyRequiresWriterPermission` restriction of this file.
            canDownload:
              description: Output only. Whether the current user can download this file.
              type: boolean
            canRename:
              type: boolean
              description: Output only. Whether the current user can rename this file.
            canTrashChildren:
              description: >-
                Output only. Whether the current user can trash children of this
                folder. This is false when the item is not a folder. Only
                populated for items in shared drives.
              type: boolean
            canAddFolderFromAnotherDrive:
              type: boolean
              description: >-
                Output only. Whether the current user can add a folder from
                another drive (different shared drive or My Drive) to this
                folder. This is false when the item is not a folder. Only
                populated for items in shared drives.
            canMoveItemOutOfTeamDrive:
              type: boolean
              description: 'Deprecated: Output only. Use `canMoveItemOutOfDrive` instead.'
            canMoveChildrenOutOfTeamDrive:
              description: >-
                Deprecated: Output only. Use `canMoveChildrenOutOfDrive`
                instead.
              type: boolean
            canMoveChildrenOutOfDrive:
              description: >-
                Output only. Whether the current user can move children of this
                folder outside of the shared drive. This is false when the item
                is not a folder. Only populated for items in shared drives.
              type: boolean
            canMoveChildrenWithinTeamDrive:
              type: boolean
              description: >-
                Deprecated: Output only. Use `canMoveChildrenWithinDrive`
                instead.
            canChangeViewersCanCopyContent:
              description: 'Deprecated: Output only.'
              type: boolean
            canAcceptOwnership:
              description: >-
                Output only. Whether the current user is the pending owner of
                the file. Not populated for shared drive files.
              type: boolean
            canMoveTeamDriveItem:
              description: >-
                Deprecated: Output only. Use `canMoveItemWithinDrive` or
                `canMoveItemOutOfDrive` instead.
              type: boolean
            canMoveItemOutOfDrive:
              description: >-
                Output only. Whether the current user can move this item outside
                of this drive by changing its parent. Note that a request to
                change the parent of the item may still fail depending on the
                new parent that is being added.
              type: boolean
        appProperties:
          additionalProperties:
            type: string
          description: >-
            A collection of arbitrary key-value pairs which are private to the
            requesting app.

            Entries with null values are cleared in update and copy requests.
            These properties can only be retrieved using an authenticated
            request. An authenticated request uses an access token obtained with
            a OAuth 2 client ID. You cannot use an API key to retrieve private
            properties.
          type: object
        sharingUser:
          description: >-
            Output only. The user who shared the file with the requesting user,
            if applicable.
          $ref: '#/components/schemas/User'
        resourceKey:
          type: string
          description: Output only. A key needed to access the item via a shared link.
        trashedTime:
          format: date-time
          type: string
          description: >-
            The time that the item was trashed (RFC 3339 date-time). Only
            populated for items in shared drives.
        version:
          description: >-
            Output only. A monotonically increasing version number for the file.
            This reflects every change made to the file on the server, even
            those not visible to the user.
          format: int64
          type: string
        isAppAuthorized:
          description: >-
            Output only. Whether the file was created or opened by the
            requesting app.
          type: boolean
        createdTime:
          format: date-time
          type: string
          description: The time at which the file was created (RFC 3339 date-time).
        lastModifyingUser:
          $ref: '#/components/schemas/User'
          description: Output only. The last user to modify the file.
        sha256Checksum:
          type: string
          description: >-
            Output only. The SHA256 checksum associated with this file, if
            available. This field is only populated for files with content
            stored in Google Drive; it is not populated for Docs Editors or
            shortcut files.
        starred:
          description: Whether the user has starred the file.
          type: boolean
        linkShareMetadata:
          properties:
            securityUpdateEligible:
              type: boolean
              description: Output only. Whether the file is eligible for security update.
            securityUpdateEnabled:
              type: boolean
              description: >-
                Output only. Whether the security update is enabled for this
                file.
          type: object
          description: >-
            Contains details about the link URLs that clients are using to refer
            to this item.
        folderColorRgb:
          type: string
          description: >-
            The color for a folder or a shortcut to a folder as an RGB hex
            string. The supported colors are published in the
            `folderColorPalette` field of the About resource. If an unsupported
            color is specified, the closest color in the palette is used
            instead.
        shared:
          type: boolean
          description: >-
            Output only. Whether the file has been shared. Not populated for
            items in shared drives.
        properties:
          type: object
          additionalProperties:
            type: string
          description: >-
            A collection of arbitrary key-value pairs which are visible to all
            apps.

            Entries with null values are cleared in update and copy requests.
        id:
          description: The ID of the file.
          type: string
        contentHints:
          properties:
            indexableText:
              type: string
              description: >-
                Text to be indexed for the file to improve fullText queries.
                This is limited to 128KB in length and may contain HTML
                elements.
            thumbnail:
              properties:
                image:
                  description: >-
                    The thumbnail data encoded with URL-safe Base64 (RFC 4648
                    section 5).
                  format: byte
                  type: string
                mimeType:
                  type: string
                  description: The MIME type of the thumbnail.
              type: object
              description: >-
                A thumbnail for the file. This will only be used if Google Drive
                cannot generate a standard thumbnail.
          type: object
          description: >-
            Additional information about the content of the file. These fields
            are never populated in responses.
        webContentLink:
          type: string
          description: >-
            Output only. A link for downloading the content of the file in a
            browser. This is only available for files with binary content in
            Google Drive.
        spaces:
          description: >-
            Output only. The list of spaces which contain the file. The
            currently supported values are 'drive', 'appDataFolder' and
            'photos'.
          items:
            type: string
          type: array
        sharedWithMeTime:
          description: >-
            The time at which the file was shared with the user, if applicable
            (RFC 3339 date-time).
          type: string
          format: date-time
        webViewLink:
          description: >-
            Output only. A link for opening the file in a relevant Google editor
            or viewer in a browser.
          type: string
        description:
          type: string
          description: A short description of the file.
        quotaBytesUsed:
          description: >-
            Output only. The number of storage quota bytes used by the file.
            This includes the head revision as well as previous revisions with
            `keepForever` enabled.
          format: int64
          type: string
        permissions:
          description: >-
            Output only. The full list of permissions for the file. This is only
            available if the requesting user can share the file. Not populated
            for items in shared drives.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        contentRestrictions:
          items:
            $ref: '#/components/schemas/ContentRestriction'
          type: array
          description: >-
            Restrictions for accessing the content of the file. Only populated
            if such a restriction exists.
        imageMediaMetadata:
          description: Output only. Additional metadata about image media, if available.
          type: object
          properties:
            width:
              format: int32
              description: Output only. The width of the image in pixels.
              type: integer
            flashUsed:
              type: boolean
              description: Output only. Whether a flash was used to create the photo.
            isoSpeed:
              type: integer
              description: Output only. The ISO speed used to create the photo.
              format: int32
            exposureBias:
              type: number
              description: Output only. The exposure bias of the photo (APEX value).
              format: float
            focalLength:
              format: float
              type: number
              description: >-
                Output only. The focal length used to create the photo, in
                millimeters.
            exposureTime:
              description: Output only. The length of the exposure, in seconds.
              format: float
              type: number
            meteringMode:
              description: Output only. The metering mode used to create the photo.
              type: string
            cameraModel:
              description: Output only. The model of the camera used to create the photo.
              type: string
            aperture:
              type: number
              description: Output only. The aperture used to create the photo (f-number).
              format: float
            lens:
              type: string
              description: Output only. The lens used to create the photo.
            maxApertureValue:
              description: >-
                Output only. The smallest f-number of the lens at the focal
                length used to create the photo (APEX value).
              format: float
              type: number
            time:
              description: >-
                Output only. The date and time the photo was taken (EXIF
                DateTime).
              type: string
            cameraMake:
              description: Output only. The make of the camera used to create the photo.
              type: string
            exposureMode:
              type: string
              description: Output only. The exposure mode used to create the photo.
            rotation:
              description: >-
                Output only. The number of clockwise 90 degree rotations applied
                from the image's original orientation.
              format: int32
              type: integer
            colorSpace:
              type: string
              description: Output only. The color space of the photo.
            whiteBalance:
              description: Output only. The white balance mode used to create the photo.
              type: string
            sensor:
              description: Output only. The type of sensor used to create the photo.
              type: string
            location:
              properties:
                longitude:
                  type: number
                  description: Output only. The longitude stored in the image.
                  format: double
                altitude:
                  type: number
                  description: Output only. The altitude stored in the image.
                  format: double
                latitude:
                  description: Output only. The latitude stored in the image.
                  type: number
                  format: double
              description: >-
                Output only. Geographic location information stored in the
                image.
              type: object
            height:
              description: Output only. The height of the image in pixels.
              type: integer
              format: int32
            subjectDistance:
              description: >-
                Output only. The distance to the subject of the photo, in
                meters.
              format: int32
              type: integer
        iconLink:
          description: Output only. A static, unauthenticated link to the file's icon.
          type: string
        exportLinks:
          type: object
          additionalProperties:
            type: string
          readOnly: true
          description: >-
            Output only. Links for exporting Docs Editors files to specific
            formats.
        copyRequiresWriterPermission:
          type: boolean
          description: >-
            Whether the options to copy, print, or download this file, should be
            disabled for readers and commenters.
        shortcutDetails:
          properties:
            targetResourceKey:
              type: string
              description: Output only. The ResourceKey for the target file.
            targetId:
              type: string
              description: The ID of the file that this shortcut points to.
            targetMimeType:
              description: >-
                Output only. The MIME type of the file that this shortcut points
                to. The value of this field is a snapshot of the target's MIME
                type, captured when the shortcut is created.
              type: string
          type: object
          description: >-
            Shortcut file details. Only populated for shortcut files, which have
            the mimeType field set to `application/vnd.google-apps.shortcut`.
        trashed:
          type: boolean
          description: >-
            Whether the file has been trashed, either explicitly or from a
            trashed parent folder. Only the owner may trash a file, and other
            users cannot see files in the owner's trash.
        kind:
          description: >-
            Output only. Identifies what kind of resource this is. Value: the
            fixed string `"drive#file"`.
          default: drive#file
          type: string
        trashingUser:
          $ref: '#/components/schemas/User'
          description: >-
            Output only. If the file has been explicitly trashed, the user who
            trashed it. Only populated for items in shared drives.
        md5Checksum:
          description: >-
            Output only. The MD5 checksum for the content of the file. This is
            only applicable to files with binary content in Google Drive.
          type: string
        thumbnailLink:
          type: string
          description: >-
            Output only. A short-lived link to the file's thumbnail, if
            available. Typically lasts on the order of hours. Only populated
            when the requesting app can access the file's content. If the file
            isn't shared publicly, the URL returned in `Files.thumbnailLink`
            must be fetched using a credentialed request.
        writersCanShare:
          type: boolean
          description: >-
            Whether users with only `writer` permission can modify the file's
            permissions. Not populated for items in shared drives.
        viewedByMeTime:
          type: string
          description: The last time the file was viewed by the user (RFC 3339 date-time).
          format: date-time
        hasAugmentedPermissions:
          type: boolean
          description: >-
            Output only. Whether there are permissions directly on this file.
            This field is only populated for items in shared drives.
        videoMediaMetadata:
          description: >-
            Output only. Additional metadata about video media. This may not be
            available immediately upon upload.
          type: object
          properties:
            width:
              type: integer
              format: int32
              description: Output only. The width of the video in pixels.
            durationMillis:
              format: int64
              type: string
              description: Output only. The duration of the video in milliseconds.
            height:
              description: Output only. The height of the video in pixels.
              type: integer
              format: int32
        hasThumbnail:
          type: boolean
          description: >-
            Output only. Whether this file has a thumbnail. This does not
            indicate whether the requesting app has access to the thumbnail. To
            check access, look for the presence of the thumbnailLink field.
        modifiedByMe:
          type: boolean
          description: Output only. Whether the file has been modified by this user.
        modifiedByMeTime:
          description: >-
            The last time the file was modified by the user (RFC 3339
            date-time).
          format: date-time
          type: string
        ownedByMe:
          description: >-
            Output only. Whether the user owns the file. Not populated for items
            in shared drives.
          type: boolean
        viewersCanCopyContent:
          description: 'Deprecated: Use `copyRequiresWriterPermission` instead.'
          type: boolean
        modifiedTime:
          type: string
          description: >-
            he last time the file was modified by anyone (RFC 3339 date-time).
            Note that setting modifiedTime will also update modifiedByMeTime for
            the user.
          format: date-time
        originalFilename:
          type: string
          description: >-
            The original filename of the uploaded content if available, or else
            the original value of the `name` field. This is only available for
            files with binary content in Google Drive.
        viewedByMe:
          type: boolean
          description: Output only. Whether the file has been viewed by this user.
        permissionIds:
          description: >-
            Output only. List of permission IDs for users with access to this
            file.
          type: array
          items:
            type: string
    LabelField:
      type: object
      id: LabelField
      properties:
        kind:
          description: This is always drive#labelField.
          type: string
        text:
          description: Only present if `valueType` is `text`.
          type: array
          items:
            type: string
        integer:
          items:
            type: string
            format: int64
          description: Only present if `valueType` is `integer`.
          type: array
        id:
          type: string
          description: The identifier of this label field.
        user:
          items:
            $ref: '#/components/schemas/User'
          description: Only present if `valueType` is `user`.
          type: array
        valueType:
          type: string
          description: >-
            The field type. While new values may be supported in the future, the
            following are currently allowed: * `dateString` * `integer` *
            `selection` * `text` * `user`
        dateString:
          type: array
          items:
            type: string
            format: date
          description: >-
            Only present if valueType is dateString. RFC 3339 formatted date:
            YYYY-MM-DD.
        selection:
          type: array
          description: Only present if `valueType` is `selection`
          items:
            type: string
      description: Representation of field, which is a typed key-value pair.
    Label:
      type: object
      description: Representation of label and label fields.
      properties:
        fields:
          additionalProperties:
            $ref: '#/components/schemas/LabelField'
          description: A map of the fields on the label, keyed by the field's ID.
          type: object
        kind:
          type: string
          description: This is always drive#label
        revisionId:
          type: string
          description: The revision ID of the label.
        id:
          description: The ID of the label.
          type: string
      id: Label
    LabelList:
      properties:
        nextPageToken:
          type: string
          description: >-
            The page token for the next page of labels. This field will be
            absent if the end of the list has been reached. If the token is
            rejected for any reason, it should be discarded, and pagination
            should be restarted from the first page of results. The page token
            is typically valid for several hours. However, if new items are
            added or removed, your expected results might differ.
        kind:
          description: This is always drive#labelList
          type: string
        labels:
          description: The list of labels.
          items:
            $ref: '#/components/schemas/Label'
          type: array
      type: object
      id: LabelList
      description: A list of labels applied to a file.
    RevisionList:
      description: A list of revisions of a file.
      id: RevisionList
      type: object
      properties:
        revisions:
          description: >-
            The list of revisions. If nextPageToken is populated, then this list
            may be incomplete and an additional page of results should be
            fetched.
          type: array
          items:
            $ref: '#/components/schemas/Revision'
        nextPageToken:
          description: >-
            The page token for the next page of revisions. This will be absent
            if the end of the revisions list has been reached. If the token is
            rejected for any reason, it should be discarded, and pagination
            should be restarted from the first page of results. The page token
            is typically valid for several hours. However, if new items are
            added or removed, your expected results might differ.
          type: string
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#revisionList"`.
          default: drive#revisionList
    Permission:
      type: object
      properties:
        displayName:
          type: string
          description: >-
            Output only. The "pretty" name of the value of the permission. The
            following is a list of examples for each type of permission: *
            `user` - User's full name, as defined for their Google account, such
            as "Joe Smith." * `group` - Name of the Google Group, such as "The
            Company Administrators." * `domain` - String domain name, such as
            "thecompany.com." * `anyone` - No `displayName` is present.
        id:
          description: >-
            Output only. The ID of this permission. This is a unique identifier
            for the grantee, and is published in User resources as
            `permissionId`. IDs should be treated as opaque values.
          type: string
        deleted:
          type: boolean
          description: >-
            Output only. Whether the account associated with this permission has
            been deleted. This field only pertains to user and group
            permissions.
        photoLink:
          type: string
          description: Output only. A link to the user's profile photo, if available.
        type:
          description: >-
            The type of the grantee. Valid values are: * `user` * `group` *
            `domain` * `anyone` When creating a permission, if `type` is `user`
            or `group`, you must provide an `emailAddress` for the user or
            group. When `type` is `domain`, you must provide a `domain`. There
            isn't extra information required for an `anyone` type.
          type: string
          annotations:
            required:
              - drive.permissions.create
        kind:
          type: string
          default: drive#permission
          description: >-
            Output only. Identifies what kind of resource this is. Value: the
            fixed string `"drive#permission"`.
        allowFileDiscovery:
          description: >-
            Whether the permission allows the file to be discovered through
            search. This is only applicable for permissions of type `domain` or
            `anyone`.
          type: boolean
        teamDrivePermissionDetails:
          items:
            type: object
            properties:
              teamDrivePermissionType:
                type: string
                description: >-
                  Deprecated: Output only. Use
                  `permissionDetails/permissionType` instead.
              role:
                type: string
                description: 'Deprecated: Output only. Use `permissionDetails/role` instead.'
              inheritedFrom:
                description: >-
                  Deprecated: Output only. Use `permissionDetails/inheritedFrom`
                  instead.
                type: string
              inherited:
                type: boolean
                description: >-
                  Deprecated: Output only. Use `permissionDetails/inherited`
                  instead.
          description: >-
            Output only. Deprecated: Output only. Use `permissionDetails`
            instead.
          type: array
          readOnly: true
        view:
          description: >-
            Indicates the view for this permission. Only populated for
            permissions that belong to a view. 'published' is the only supported
            value.
          type: string
        expirationTime:
          description: >-
            The time at which this permission will expire (RFC 3339 date-time).
            Expiration times have the following restrictions: - They can only be
            set on user and group permissions - The time must be in the future -
            The time cannot be more than a year in the future
          type: string
          format: date-time
        role:
          description: >-
            The role granted by this permission. While new values may be
            supported in the future, the following are currently allowed: *
            `owner` * `organizer` * `fileOrganizer` * `writer` * `commenter` *
            `reader`
          type: string
          annotations:
            required:
              - drive.permissions.create
        permissionDetails:
          items:
            properties:
              inheritedFrom:
                description: >-
                  Output only. The ID of the item from which this permission is
                  inherited. This is an output-only field.
                type: string
              permissionType:
                description: >-
                  Output only. The permission type for this user. While new
                  values may be added in future, the following are currently
                  possible: * `file` * `member`
                type: string
              role:
                description: >-
                  Output only. The primary role for this user. While new values
                  may be added in the future, the following are currently
                  possible: * `organizer` * `fileOrganizer` * `writer` *
                  `commenter` * `reader`
                type: string
              inherited:
                type: boolean
                description: >-
                  Output only. Whether this permission is inherited. This field
                  is always populated. This is an output-only field.
            type: object
          description: >-
            Output only. Details of whether the permissions on this shared drive
            item are inherited or directly on this item. This is an output-only
            field which is present only for shared drive items.
          type: array
          readOnly: true
        emailAddress:
          description: >-
            The email address of the user or group to which this permission
            refers.
          type: string
        domain:
          description: The domain to which this permission refers.
          type: string
        pendingOwner:
          description: >-
            Whether the account associated with this permission is a pending
            owner. Only populated for `user` type permissions for files that are
            not in a shared drive.
          type: boolean
      description: >-
        A permission for a file. A permission grants a user, group, domain or
        the world access to a file or a folder hierarchy.
      id: Permission
    LabelModification:
      id: LabelModification
      description: >-
        A modification to a label on a file. A LabelModification can be used to
        apply a label to a file, update an existing label on a file, or remove a
        label from a file.
      type: object
      properties:
        kind:
          description: This is always drive#labelModification.
          type: string
        labelId:
          description: The ID of the label to modify.
          annotations:
            required:
              - drive.files.modifyLabels
          type: string
        fieldModifications:
          items:
            $ref: '#/components/schemas/LabelFieldModification'
          type: array
          description: The list of modifications to this label's fields.
        removeLabel:
          type: boolean
          description: If true, the label will be removed from the file.
    TeamDriveList:
      type: object
      properties:
        nextPageToken:
          description: >-
            The page token for the next page of Team Drives. This will be absent
            if the end of the Team Drives list has been reached. If the token is
            rejected for any reason, it should be discarded, and pagination
            should be restarted from the first page of results. The page token
            is typically valid for several hours. However, if new items are
            added or removed, your expected results might differ.
          type: string
        kind:
          type: string
          default: drive#teamDriveList
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#teamDriveList"`.
        teamDrives:
          description: >-
            The list of Team Drives. If nextPageToken is populated, then this
            list may be incomplete and an additional page of results should be
            fetched.
          items:
            $ref: '#/components/schemas/TeamDrive'
          type: array
      description: A list of Team Drives.
      id: TeamDriveList
    ModifyLabelsRequest:
      id: ModifyLabelsRequest
      description: >-
        A request to modify the set of labels on a file. This request may
        contain many modifications that will either all succeed or all fail
        atomically.
      type: object
      properties:
        kind:
          type: string
          description: This is always drive#modifyLabelsRequest.
        labelModifications:
          items:
            $ref: '#/components/schemas/LabelModification'
          type: array
          description: The list of modifications to apply to the labels on the file.
    ReplyList:
      id: ReplyList
      description: A list of replies to a comment on a file.
      properties:
        replies:
          description: >-
            The list of replies. If nextPageToken is populated, then this list
            may be incomplete and an additional page of results should be
            fetched.
          type: array
          items:
            $ref: '#/components/schemas/Reply'
        nextPageToken:
          description: >-
            The page token for the next page of replies. This will be absent if
            the end of the replies list has been reached. If the token is
            rejected for any reason, it should be discarded, and pagination
            should be restarted from the first page of results. The page token
            is typically valid for several hours. However, if new items are
            added or removed, your expected results might differ.
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#replyList"`.
          default: drive#replyList
          type: string
      type: object
    Reply:
      properties:
        action:
          type: string
          description: >-
            The action the reply performed to the parent comment. Valid values
            are: * `resolve` * `reopen`
        deleted:
          description: >-
            Output only. Whether the reply has been deleted. A deleted reply has
            no content.
          type: boolean
        createdTime:
          type: string
          description: The time at which the reply was created (RFC 3339 date-time).
          format: date-time
        content:
          type: string
          annotations:
            required:
              - drive.replies.update
          description: >-
            The plain text content of the reply. This field is used for setting
            the content, while `htmlContent` should be displayed. This is
            required on creates if no `action` is specified.
        htmlContent:
          description: Output only. The content of the reply with HTML formatting.
          type: string
        id:
          description: Output only. The ID of the reply.
          type: string
        modifiedTime:
          format: date-time
          description: The last time the reply was modified (RFC 3339 date-time).
          type: string
        kind:
          default: drive#reply
          type: string
          description: >-
            Output only. Identifies what kind of resource this is. Value: the
            fixed string `"drive#reply"`.
        author:
          description: >-
            Output only. The author of the reply. The author's email address and
            permission ID will not be populated.
          $ref: '#/components/schemas/User'
      id: Reply
      description: A reply to a comment on a file.
      type: object
    Revision:
      type: object
      id: Revision
      description: The metadata for a revision to a file.
      properties:
        md5Checksum:
          description: >-
            Output only. The MD5 checksum of the revision's content. This is
            only applicable to files with binary content in Drive.
          type: string
        publishedOutsideDomain:
          description: >-
            Whether this revision is published outside the domain. This is only
            applicable to Docs Editors files.
          type: boolean
        publishAuto:
          description: >-
            Whether subsequent revisions will be automatically republished. This
            is only applicable to Docs Editors files.
          type: boolean
        size:
          description: >-
            Output only. The size of the revision's content in bytes. This is
            only applicable to files with binary content in Drive.
          type: string
          format: int64
        originalFilename:
          type: string
          description: >-
            Output only. The original filename used to create this revision.
            This is only applicable to files with binary content in Drive.
        lastModifyingUser:
          $ref: '#/components/schemas/User'
          description: Output only. The last user to modify this revision.
        id:
          type: string
          description: Output only. The ID of the revision.
        kind:
          default: drive#revision
          type: string
          description: >-
            Output only. Identifies what kind of resource this is. Value: the
            fixed string `"drive#revision"`.
        exportLinks:
          type: object
          additionalProperties:
            type: string
          description: >-
            Output only. Links for exporting Docs Editors files to specific
            formats.
        modifiedTime:
          type: string
          description: The last time the revision was modified (RFC 3339 date-time).
          format: date-time
        mimeType:
          description: Output only. The MIME type of the revision.
          type: string
        published:
          type: boolean
          description: >-
            Whether this revision is published. This is only applicable to Docs
            Editors files.
        publishedLink:
          type: string
          description: >-
            Output only. A link to the published revision. This is only
            populated for Google Sites files.
        keepForever:
          description: >-
            Whether to keep this revision forever, even if it is no longer the
            head revision. If not set, the revision will be automatically purged
            30 days after newer content is uploaded. This can be set on a
            maximum of 200 revisions for a file. This field is only applicable
            to files with binary content in Drive.
          type: boolean
    Channel:
      properties:
        token:
          description: >-
            An arbitrary string delivered to the target address with each
            notification delivered over this channel. Optional.
          type: string
        expiration:
          description: >-
            Date and time of notification channel expiration, expressed as a
            Unix timestamp, in milliseconds. Optional.
          type: string
          format: int64
        resourceId:
          type: string
          description: >-
            An opaque ID that identifies the resource being watched on this
            channel. Stable across different API versions.
        type:
          type: string
          description: The type of delivery mechanism used for this channel.
        kind:
          default: api#channel
          description: >-
            Identifies this as a notification channel used to watch for changes
            to a resource, which is `api#channel`.
          type: string
        id:
          description: A UUID or similar unique string that identifies this channel.
          type: string
        address:
          type: string
          description: The address where notifications are delivered for this channel.
        params:
          type: object
          description: >-
            Additional parameters controlling delivery channel behavior.
            Optional.
          additionalProperties:
            type: string
        resourceUri:
          description: A version-specific identifier for the watched resource.
          type: string
        payload:
          type: boolean
          description: A Boolean value to indicate whether payload is wanted. Optional.
      id: Channel
      type: object
      description: A notification channel used to watch for resource changes.
    ModifyLabelsResponse:
      properties:
        kind:
          type: string
          description: This is always drive#modifyLabelsResponse
        modifiedLabels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
          description: The list of labels which were added or updated by the request.
      id: ModifyLabelsResponse
      type: object
      description: >-
        Response to a ModifyLabels request. This contains only those labels
        which were added or updated by the request.
    TeamDrive:
      id: TeamDrive
      type: object
      description: 'Deprecated: use the drive collection instead.'
      properties:
        createdTime:
          type: string
          description: The time at which the Team Drive was created (RFC 3339 date-time).
          format: date-time
        name:
          description: The name of this Team Drive.
          type: string
        orgUnitId:
          type: string
          description: >-
            The organizational unit of this shared drive. This field is only
            populated on `drives.list` responses when the `useDomainAdminAccess`
            parameter is set to `true`.
        themeId:
          type: string
          description: >-
            The ID of the theme from which the background image and color will
            be set. The set of possible `teamDriveThemes` can be retrieved from
            a `drive.about.get` response. When not specified on a
            `drive.teamdrives.create` request, a random theme is chosen from
            which the background image and color are set. This is a write-only
            field; it can only be set on requests that don't set `colorRgb` or
            `backgroundImageFile`.
        restrictions:
          description: >-
            A set of restrictions that apply to this Team Drive or items inside
            this Team Drive.
          properties:
            adminManagedRestrictions:
              description: >-
                Whether administrative privileges on this Team Drive are
                required to modify restrictions.
              type: boolean
            copyRequiresWriterPermission:
              description: >-
                Whether the options to copy, print, or download files inside
                this Team Drive, should be disabled for readers and commenters.
                When this restriction is set to `true`, it will override the
                similarly named field to `true` for any file inside this Team
                Drive.
              type: boolean
            domainUsersOnly:
              description: >-
                Whether access to this Team Drive and items inside this Team
                Drive is restricted to users of the domain to which this Team
                Drive belongs. This restriction may be overridden by other
                sharing policies controlled outside of this Team Drive.
              type: boolean
            teamMembersOnly:
              description: >-
                Whether access to items inside this Team Drive is restricted to
                members of this Team Drive.
              type: boolean
            sharingFoldersRequiresOrganizerPermission:
              description: >-
                If true, only users with the organizer role can share folders.
                If false, users with either the organizer role or the file
                organizer role can share folders.
              type: boolean
          type: object
        backgroundImageFile:
          description: >-
            An image file and cropping parameters from which a background image
            for this Team Drive is set. This is a write only field; it can only
            be set on `drive.teamdrives.update` requests that don't set
            `themeId`. When specified, all fields of the `backgroundImageFile`
            must be set.
          properties:
            id:
              type: string
              description: >-
                The ID of an image file in Drive to use for the background
                image.
            yCoordinate:
              type: number
              description: >-
                The Y coordinate of the upper left corner of the cropping area
                in the background image. This is a value in the closed range of
                0 to 1. This value represents the vertical distance from the top
                side of the entire image to the top side of the cropping area
                divided by the height of the entire image.
              format: float
            width:
              format: float
              type: number
              description: >-
                The width of the cropped image in the closed range of 0 to 1.
                This value represents the width of the cropped image divided by
                the width of the entire image. The height is computed by
                applying a width to height aspect ratio of 80 to 9. The
                resulting image must be at least 1280 pixels wide and 144 pixels
                high.
            xCoordinate:
              type: number
              description: >-
                The X coordinate of the upper left corner of the cropping area
                in the background image. This is a value in the closed range of
                0 to 1. This value represents the horizontal distance from the
                left side of the entire image to the left side of the cropping
                area divided by the width of the entire image.
              format: float
          type: object
        backgroundImageLink:
          description: A short-lived link to this Team Drive's background image.
          type: string
        kind:
          type: string
          default: drive#teamDrive
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#teamDrive"`.
        colorRgb:
          type: string
          description: >-
            The color of this Team Drive as an RGB hex string. It can only be
            set on a `drive.teamdrives.update` request that does not set
            `themeId`.
        capabilities:
          properties:
            canCopy:
              type: boolean
              description: Whether the current user can copy files in this Team Drive.
            canDeleteChildren:
              type: boolean
              description: >-
                Whether the current user can delete children from folders in
                this Team Drive.
            canReadRevisions:
              description: >-
                Whether the current user can read the revisions resource of
                files in this Team Drive.
              type: boolean
            canTrashChildren:
              description: >-
                Whether the current user can trash children from folders in this
                Team Drive.
              type: boolean
            canChangeTeamMembersOnlyRestriction:
              description: >-
                Whether the current user can change the `teamMembersOnly`
                restriction of this Team Drive.
              type: boolean
            canRenameTeamDrive:
              type: boolean
              description: Whether the current user can rename this Team Drive.
            canChangeCopyRequiresWriterPermissionRestriction:
              type: boolean
              description: >-
                Whether the current user can change the
                `copyRequiresWriterPermission` restriction of this Team Drive.
            canResetTeamDriveRestrictions:
              type: boolean
              description: >-
                Whether the current user can reset the Team Drive restrictions
                to defaults.
            canChangeSharingFoldersRequiresOrganizerPermissionRestriction:
              description: >-
                Whether the current user can change the
                `sharingFoldersRequiresOrganizerPermission` restriction of this
                Team Drive.
              type: boolean
            canRename:
              type: boolean
              description: >-
                Whether the current user can rename files or folders in this
                Team Drive.
            canDownload:
              description: Whether the current user can download files in this Team Drive.
              type: boolean
            canDeleteTeamDrive:
              description: >-
                Whether the current user can delete this Team Drive. Attempting
                to delete the Team Drive may still fail if there are untrashed
                items inside the Team Drive.
              type: boolean
            canChangeDomainUsersOnlyRestriction:
              description: >-
                Whether the current user can change the `domainUsersOnly`
                restriction of this Team Drive.
              type: boolean
            canChangeTeamDriveBackground:
              type: boolean
              description: >-
                Whether the current user can change the background of this Team
                Drive.
            canRemoveChildren:
              description: >-
                Deprecated: Use `canDeleteChildren` or `canTrashChildren`
                instead.
              type: boolean
            canComment:
              type: boolean
              description: >-
                Whether the current user can comment on files in this Team
                Drive.
            canManageMembers:
              description: >-
                Whether the current user can add members to this Team Drive or
                remove them or change their role.
              type: boolean
            canShare:
              type: boolean
              description: >-
                Whether the current user can share files or folders in this Team
                Drive.
            canListChildren:
              description: >-
                Whether the current user can list the children of folders in
                this Team Drive.
              type: boolean
            canEdit:
              type: boolean
              description: Whether the current user can edit files in this Team Drive
            canAddChildren:
              description: >-
                Whether the current user can add children to folders in this
                Team Drive.
              type: boolean
          description: Capabilities the current user has on this Team Drive.
          type: object
        id:
          type: string
          description: >-
            The ID of this Team Drive which is also the ID of the top level
            folder of this Team Drive.
    GeneratedIds:
      description: A list of generated file IDs which can be provided in create requests.
      id: GeneratedIds
      properties:
        ids:
          type: array
          description: The IDs generated for the requesting user in the specified space.
          items:
            type: string
        space:
          description: The type of file that can be created with these IDs.
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#generatedIds"`.
          default: drive#generatedIds
          type: string
      type: object
    PermissionList:
      id: PermissionList
      description: A list of permissions for a file.
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          description: >-
            The list of permissions. If nextPageToken is populated, then this
            list may be incomplete and an additional page of results should be
            fetched.
        kind:
          default: drive#permissionList
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#permissionList"`.
        nextPageToken:
          type: string
          description: >-
            The page token for the next page of permissions. This field will be
            absent if the end of the permissions list has been reached. If the
            token is rejected for any reason, it should be discarded, and
            pagination should be restarted from the first page of results. The
            page token is typically valid for several hours. However, if new
            items are added or removed, your expected results might differ.
      type: object
    FileList:
      type: object
      id: FileList
      description: A list of files.
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#fileList"`.
          type: string
          default: drive#fileList
        files:
          items:
            $ref: '#/components/schemas/File'
          description: >-
            The list of files. If nextPageToken is populated, then this list may
            be incomplete and an additional page of results should be fetched.
          type: array
        incompleteSearch:
          type: boolean
          description: >-
            Whether the search process was incomplete. If true, then some search
            results might be missing, since all documents were not searched.
            This can occur when searching multiple drives with the 'allDrives'
            corpora, but all corpora couldn't be searched. When this happens,
            it's suggested that clients narrow their query by choosing a
            different corpus such as 'user' or 'drive'.
        nextPageToken:
          description: >-
            The page token for the next page of files. This will be absent if
            the end of the files list has been reached. If the token is rejected
            for any reason, it should be discarded, and pagination should be
            restarted from the first page of results. The page token is
            typically valid for several hours. However, if new items are added
            or removed, your expected results might differ.
          type: string
    ContentRestriction:
      properties:
        type:
          description: >-
            Output only. The type of the content restriction. Currently the only
            possible value is `globalContentRestriction`.
          type: string
        readOnly:
          type: boolean
          description: >-
            Whether the content of the file is read-only. If a file is
            read-only, a new revision of the file may not be added, comments may
            not be added or modified, and the title of the file may not be
            modified.
        reason:
          type: string
          description: >-
            Reason for why the content of the file is restricted. This is only
            mutable on requests that also set `readOnly=true`.
        restrictionTime:
          type: string
          format: date-time
          description: >-
            The time at which the content restriction was set (formatted RFC
            3339 timestamp). Only populated if readOnly is true.
        restrictingUser:
          description: >-
            Output only. The user who set the content restriction. Only
            populated if `readOnly` is true.
          $ref: '#/components/schemas/User'
      id: ContentRestriction
      type: object
      description: A restriction for accessing the content of the file.
    Drive:
      type: object
      id: Drive
      properties:
        backgroundImageFile:
          type: object
          description: >-
            An image file and cropping parameters from which a background image
            for this shared drive is set. This is a write only field; it can
            only be set on `drive.drives.update` requests that don't set
            `themeId`. When specified, all fields of the `backgroundImageFile`
            must be set.
          properties:
            xCoordinate:
              format: float
              description: >-
                The X coordinate of the upper left corner of the cropping area
                in the background image. This is a value in the closed range of
                0 to 1. This value represents the horizontal distance from the
                left side of the entire image to the left side of the cropping
                area divided by the width of the entire image.
              type: number
            width:
              description: >-
                The width of the cropped image in the closed range of 0 to 1.
                This value represents the width of the cropped image divided by
                the width of the entire image. The height is computed by
                applying a width to height aspect ratio of 80 to 9. The
                resulting image must be at least 1280 pixels wide and 144 pixels
                high.
              type: number
              format: float
            id:
              type: string
              description: >-
                The ID of an image file in Google Drive to use for the
                background image.
            yCoordinate:
              description: >-
                The Y coordinate of the upper left corner of the cropping area
                in the background image. This is a value in the closed range of
                0 to 1. This value represents the vertical distance from the top
                side of the entire image to the top side of the cropping area
                divided by the height of the entire image.
              type: number
              format: float
        themeId:
          description: >-
            The ID of the theme from which the background image and color will
            be set. The set of possible `driveThemes` can be retrieved from a
            `drive.about.get` response. When not specified on a
            `drive.drives.create` request, a random theme is chosen from which
            the background image and color are set. This is a write-only field;
            it can only be set on requests that don't set `colorRgb` or
            `backgroundImageFile`.
          type: string
        createdTime:
          description: The time at which the shared drive was created (RFC 3339 date-time).
          format: date-time
          type: string
        kind:
          type: string
          description: >-
            Output only. Identifies what kind of resource this is. Value: the
            fixed string `"drive#drive"`.
          default: drive#drive
        id:
          type: string
          description: >-
            Output only. The ID of this shared drive which is also the ID of the
            top level folder of this shared drive.
        restrictions:
          type: object
          description: >-
            A set of restrictions that apply to this shared drive or items
            inside this shared drive.
          properties:
            adminManagedRestrictions:
              type: boolean
              description: >-
                Whether administrative privileges on this shared drive are
                required to modify restrictions.
            copyRequiresWriterPermission:
              type: boolean
              description: >-
                Whether the options to copy, print, or download files inside
                this shared drive, should be disabled for readers and
                commenters. When this restriction is set to `true`, it will
                override the similarly named field to `true` for any file inside
                this shared drive.
            domainUsersOnly:
              description: >-
                Whether access to this shared drive and items inside this shared
                drive is restricted to users of the domain to which this shared
                drive belongs. This restriction may be overridden by other
                sharing policies controlled outside of this shared drive.
              type: boolean
            driveMembersOnly:
              type: boolean
              description: >-
                Whether access to items inside this shared drive is restricted
                to its members.
            sharingFoldersRequiresOrganizerPermission:
              description: >-
                If true, only users with the organizer role can share folders.
                If false, users with either the organizer role or the file
                organizer role can share folders.
              type: boolean
        backgroundImageLink:
          description: >-
            Output only. A short-lived link to this shared drive's background
            image.
          type: string
        colorRgb:
          description: >-
            The color of this shared drive as an RGB hex string. It can only be
            set on a `drive.drives.update` request that does not set `themeId`.
          type: string
        orgUnitId:
          description: >-
            Output only. The organizational unit of this shared drive. This
            field is only populated on `drives.list` responses when the
            `useDomainAdminAccess` parameter is set to `true`.
          type: string
        capabilities:
          properties:
            canReadRevisions:
              description: >-
                Output only. Whether the current user can read the revisions
                resource of files in this shared drive.
              type: boolean
            canResetDriveRestrictions:
              description: >-
                Output only. Whether the current user can reset the shared drive
                restrictions to defaults.
              type: boolean
            canAddChildren:
              description: >-
                Output only. Whether the current user can add children to
                folders in this shared drive.
              type: boolean
            canChangeDomainUsersOnlyRestriction:
              description: >-
                Output only. Whether the current user can change the
                `domainUsersOnly` restriction of this shared drive.
              type: boolean
            canTrashChildren:
              type: boolean
              description: >-
                Output only. Whether the current user can trash children from
                folders in this shared drive.
            canComment:
              description: >-
                Output only. Whether the current user can comment on files in
                this shared drive.
              type: boolean
            canEdit:
              type: boolean
              description: >-
                Output only. Whether the current user can edit files in this
                shared drive
            canRenameDrive:
              description: >-
                Output only. Whether the current user can rename this shared
                drive.
              type: boolean
            canChangeSharingFoldersRequiresOrganizerPermissionRestriction:
              type: boolean
              description: >-
                Output only. Whether the current user can change the
                `sharingFoldersRequiresOrganizerPermission` restriction of this
                shared drive.
            canDownload:
              description: >-
                Output only. Whether the current user can download files in this
                shared drive.
              type: boolean
            canCopy:
              description: >-
                Output only. Whether the current user can copy files in this
                shared drive.
              type: boolean
            canChangeCopyRequiresWriterPermissionRestriction:
              type: boolean
              description: >-
                Output only. Whether the current user can change the
                `copyRequiresWriterPermission` restriction of this shared drive.
            canChangeDriveBackground:
              type: boolean
              description: >-
                Output only. Whether the current user can change the background
                of this shared drive.
            canShare:
              description: >-
                Output only. Whether the current user can share files or folders
                in this shared drive.
              type: boolean
            canDeleteDrive:
              type: boolean
              description: >-
                Output only. Whether the current user can delete this shared
                drive. Attempting to delete the shared drive may still fail if
                there are untrashed items inside the shared drive.
            canChangeDriveMembersOnlyRestriction:
              type: boolean
              description: >-
                Output only. Whether the current user can change the
                `driveMembersOnly` restriction of this shared drive.
            canManageMembers:
              description: >-
                Output only. Whether the current user can add members to this
                shared drive or remove them or change their role.
              type: boolean
            canDeleteChildren:
              description: >-
                Output only. Whether the current user can delete children from
                folders in this shared drive.
              type: boolean
            canRename:
              description: >-
                Output only. Whether the current user can rename files or
                folders in this shared drive.
              type: boolean
            canListChildren:
              description: >-
                Output only. Whether the current user can list the children of
                folders in this shared drive.
              type: boolean
          type: object
          description: Output only. Capabilities the current user has on this shared drive.
        hidden:
          description: Whether the shared drive is hidden from default view.
          type: boolean
        name:
          description: The name of this shared drive.
          type: string
      description: Representation of a shared drive.
    StartPageToken:
      type: object
      id: StartPageToken
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#startPageToken"`.
          default: drive#startPageToken
        startPageToken:
          description: >-
            The starting page token for listing future changes. The page token
            doesn't expire.
          type: string
    CommentList:
      description: A list of comments on a file.
      properties:
        nextPageToken:
          type: string
          description: >-
            The page token for the next page of comments. This will be absent if
            the end of the comments list has been reached. If the token is
            rejected for any reason, it should be discarded, and pagination
            should be restarted from the first page of results. The page token
            is typically valid for several hours. However, if new items are
            added or removed, your expected results might differ.
        comments:
          type: array
          description: >-
            The list of comments. If nextPageToken is populated, then this list
            may be incomplete and an additional page of results should be
            fetched.
          items:
            $ref: '#/components/schemas/Comment'
        kind:
          default: drive#commentList
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#commentList"`.
      id: CommentList
      type: object
    DriveList:
      description: A list of shared drives.
      properties:
        kind:
          default: drive#driveList
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#driveList"`.
        drives:
          items:
            $ref: '#/components/schemas/Drive'
          type: array
          description: >-
            The list of shared drives. If nextPageToken is populated, then this
            list may be incomplete and an additional page of results should be
            fetched.
        nextPageToken:
          type: string
          description: >-
            The page token for the next page of shared drives. This will be
            absent if the end of the list has been reached. If the token is
            rejected for any reason, it should be discarded, and pagination
            should be restarted from the first page of results. The page token
            is typically valid for several hours. However, if new items are
            added or removed, your expected results might differ.
      type: object
      id: DriveList
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/drive.metadata: View and manage metadata of files in your Google Drive
            https://www.googleapis.com/auth/drive.metadata.readonly: See information about your Google Drive files
            https://www.googleapis.com/auth/drive.readonly: See and download all your Google Drive files
            https://www.googleapis.com/auth/drive.file: >-
              See, edit, create, and delete only the specific Google Drive files
              you use with this app
            https://www.googleapis.com/auth/drive: See, edit, create, and delete all of your Google Drive files
            https://www.googleapis.com/auth/drive.scripts: Modify your Google Apps Script scripts' behavior
            https://www.googleapis.com/auth/drive.appdata: >-
              See, create, and delete its own configuration data in your Google
              Drive
            https://www.googleapis.com/auth/drive.photos.readonly: View the photos, videos and albums in your Google Photos
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /files/{fileId}/comments/{commentId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
    delete:
      description: Deletes a comment.
      operationId: drive.comments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: delete
    patch:
      description: Updates a comment with patch semantics.
      operationId: drive.comments.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: exec
    get:
      description: Gets a comment by ID.
      operationId: drive.comments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeleted
          schema:
            type: boolean
      x-stackQL-resource: comments
      x-stackQL-verb: select
  /files/{fileId}/comments:
    parameters: *ref_1
    get:
      description: Lists a file's comments.
      operationId: drive.comments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeleted
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: startModifiedTime
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: select
    post:
      description: Creates a comment on a file.
      operationId: drive.comments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: insert
  /about:
    parameters: *ref_1
    get:
      description: >-
        Gets information about the user, the user's Drive, and system
        capabilities.
      operationId: drive.about.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/About'
      parameters: []
      x-stackQL-resource: about
      x-stackQL-verb: select
  /channels/stop:
    parameters: *ref_1
    post:
      description: Stops watching resources through this channel.
      operationId: drive.channels.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      parameters: []
      x-stackQL-resource: channels
      x-stackQL-verb: exec
  /teamdrives:
    parameters: *ref_1
    get:
      description: 'Deprecated: Use `drives.list` instead.'
      operationId: drive.teamdrives.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDriveList'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: teamdrives
      x-stackQL-verb: select
    post:
      description: 'Deprecated: Use `drives.create` instead.'
      operationId: drive.teamdrives.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamDrive'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDrive'
      parameters:
        - in: query
          name: requestId
          required: true
          schema:
            type: string
      x-stackQL-resource: teamdrives
      x-stackQL-verb: insert
  /teamdrives/{teamDriveId}:
    parameters: *ref_1
    delete:
      description: 'Deprecated: Use `drives.delete` instead.'
      operationId: drive.teamdrives.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      parameters:
        - in: path
          name: teamDriveId
          required: true
          schema:
            type: string
      x-stackQL-resource: teamdrives
      x-stackQL-verb: delete
    get:
      description: 'Deprecated: Use `drives.get` instead.'
      operationId: drive.teamdrives.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDrive'
      parameters:
        - in: path
          name: teamDriveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: teamdrives
      x-stackQL-verb: select
    patch:
      description: 'Deprecated: Use `drives.update` instead.'
      operationId: drive.teamdrives.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamDrive'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDrive'
      parameters:
        - in: path
          name: teamDriveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: teamdrives
      x-stackQL-verb: exec
  /files/{fileId}/permissions/{permissionId}:
    parameters: *ref_1
    patch:
      description: >-
        Updates a permission with patch semantics. **Warning:** Concurrent
        permissions operations on the same file are not supported; only the last
        update is applied.
      operationId: drive.permissions.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: permissionId
          required: true
          schema:
            type: string
        - in: query
          name: removeExpiration
          schema:
            type: boolean
        - in: query
          name: transferOwnership
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
      x-stackQL-resource: permissions
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes a permission. **Warning:** Concurrent permissions operations on
        the same file are not supported; only the last update is applied.
      operationId: drive.permissions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: permissionId
          required: true
          schema:
            type: string
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: permissions
      x-stackQL-verb: delete
    get:
      description: Gets a permission by ID.
      operationId: drive.permissions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: permissionId
          required: true
          schema:
            type: string
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: permissions
      x-stackQL-verb: select
  /files/{fileId}/permissions:
    parameters: *ref_1
    get:
      description: Lists a file's or shared drive's permissions.
      operationId: drive.permissions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: permissions
      x-stackQL-verb: select
    post:
      description: >-
        Creates a permission for a file or shared drive. **Warning:** Concurrent
        permissions operations on the same file are not supported; only the last
        update is applied.
      operationId: drive.permissions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: emailMessage
          schema:
            type: string
        - in: query
          name: sendNotificationEmail
          schema:
            type: boolean
        - in: query
          name: transferOwnership
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: moveToNewOwnersRoot
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: permissions
      x-stackQL-verb: insert
  /files/{fileId}/comments/{commentId}/replies/{replyId}:
    parameters: *ref_1
    delete:
      description: Deletes a reply.
      operationId: drive.replies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: path
          name: replyId
          required: true
          schema:
            type: string
      x-stackQL-resource: replies
      x-stackQL-verb: delete
    get:
      description: Gets a reply by ID.
      operationId: drive.replies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: path
          name: replyId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeleted
          schema:
            type: boolean
      x-stackQL-resource: replies
      x-stackQL-verb: select
    patch:
      description: Updates a reply with patch semantics.
      operationId: drive.replies.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reply'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: path
          name: replyId
          required: true
          schema:
            type: string
      x-stackQL-resource: replies
      x-stackQL-verb: exec
  /files/{fileId}/comments/{commentId}/replies:
    parameters: *ref_1
    get:
      description: Lists a comment's replies.
      operationId: drive.replies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: includeDeleted
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: replies
      x-stackQL-verb: select
    post:
      description: Creates a reply to a comment.
      operationId: drive.replies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reply'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      x-stackQL-resource: replies
      x-stackQL-verb: insert
  /files/{fileId}/revisions:
    parameters: *ref_1
    get:
      description: Lists a file's revisions.
      operationId: drive.revisions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevisionList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-verb: select
  /files/{fileId}/revisions/{revisionId}:
    parameters: *ref_1
    get:
      description: Gets a revision's metadata or content by ID.
      operationId: drive.revisions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: revisionId
          required: true
          schema:
            type: string
        - in: query
          name: acknowledgeAbuse
          schema:
            type: boolean
      x-stackQL-resource: revisions
      x-stackQL-verb: select
    patch:
      description: Updates a revision with patch semantics.
      operationId: drive.revisions.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Revision'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: revisionId
          required: true
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-verb: exec
    delete:
      description: >-
        Permanently deletes a file version. You can only delete revisions for
        files with binary content in Google Drive, like images or videos.
        Revisions for other files, like Google Docs or Sheets, and the last
        remaining file version can't be deleted.
      operationId: drive.revisions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: revisionId
          required: true
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-verb: delete
  /drives/{driveId}/unhide:
    parameters: *ref_1
    post:
      description: Restores a shared drive to the default view.
      operationId: drive.drives.unhide
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
      x-stackQL-resource: drives
      x-stackQL-verb: exec
  /drives/{driveId}:
    parameters: *ref_1
    get:
      description: Gets a shared drive's metadata by ID.
      operationId: drive.drives.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: drives
      x-stackQL-verb: select
    patch:
      description: Updates the metadate for a shared drive.
      operationId: drive.drives.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Drive'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: drives
      x-stackQL-verb: exec
    delete:
      description: >-
        Permanently deletes a shared drive for which the user is an organizer.
        The shared drive cannot contain any untrashed items.
      operationId: drive.drives.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
        - in: query
          name: allowItemDeletion
          schema:
            type: boolean
      x-stackQL-resource: drives
      x-stackQL-verb: delete
  /drives:
    parameters: *ref_1
    get:
      description: ' Lists the user''s shared drives. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for shared drives](/drive/api/guides/search-shareddrives) guide.'
      operationId: drive.drives.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveList'
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: drives
      x-stackQL-verb: select
    post:
      description: Creates a shared drive.
      operationId: drive.drives.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Drive'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: query
          name: requestId
          required: true
          schema:
            type: string
      x-stackQL-resource: drives
      x-stackQL-verb: insert
  /drives/{driveId}/hide:
    parameters: *ref_1
    post:
      description: Hides a shared drive from the default view.
      operationId: drive.drives.hide
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
      x-stackQL-resource: drives
      x-stackQL-verb: exec
  /changes:
    parameters: *ref_1
    get:
      description: Lists the changes for a user or shared drive.
      operationId: drive.changes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
      parameters:
        - in: query
          name: pageToken
          required: true
          schema:
            type: string
        - in: query
          name: spaces
          schema:
            type: string
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: includeTeamDriveItems
          schema:
            type: boolean
        - in: query
          name: driveId
          schema:
            type: string
        - in: query
          name: includeCorpusRemovals
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: includeItemsFromAllDrives
          schema:
            type: boolean
        - in: query
          name: teamDriveId
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: restrictToMyDrive
          schema:
            type: boolean
        - in: query
          name: includeRemoved
          schema:
            type: boolean
      x-stackQL-resource: changes
      x-stackQL-verb: select
  /changes/startPageToken:
    parameters: *ref_1
    get:
      description: Gets the starting pageToken for listing future changes.
      operationId: drive.changes.getStartPageToken
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartPageToken'
      parameters:
        - in: query
          name: driveId
          schema:
            type: string
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: teamDriveId
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
      x-stackQL-resource: changes__start_page_token
      x-stackQL-verb: select
  /changes/watch:
    parameters: *ref_1
    post:
      description: Subscribes to changes for a user.
      operationId: drive.changes.watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: query
          name: pageToken
          required: true
          schema:
            type: string
        - in: query
          name: includeCorpusRemovals
          schema:
            type: boolean
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: restrictToMyDrive
          schema:
            type: boolean
        - in: query
          name: spaces
          schema:
            type: string
        - in: query
          name: includeItemsFromAllDrives
          schema:
            type: boolean
        - in: query
          name: includeRemoved
          schema:
            type: boolean
        - in: query
          name: teamDriveId
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: driveId
          schema:
            type: string
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: includeTeamDriveItems
          schema:
            type: boolean
      x-stackQL-resource: changes
      x-stackQL-verb: exec
  /files/trash:
    parameters: *ref_1
    delete:
      description: Permanently deletes all of the user's trashed files.
      operationId: drive.files.emptyTrash
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      parameters:
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: driveId
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /files/{fileId}/modifyLabels:
    parameters: *ref_1
    post:
      description: >-
        Modifies the set of labels applied to a file. Returns a list of the
        labels that were added or modified.
      operationId: drive.files.modifyLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyLabelsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyLabelsResponse'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /files/{fileId}:
    parameters: *ref_1
    delete:
      description: >-
        Permanently deletes a file owned by the user without moving it to the
        trash. If the file belongs to a shared drive the user must be an
        organizer on the parent. If the target is a folder, all descendants
        owned by the user are also deleted.
      operationId: drive.files.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
      x-stackQL-resource: files
      x-stackQL-verb: delete
    patch:
      description: ' Updates a file''s metadata and/or content. When calling this method, only populate fields in the request that you want to modify. When updating fields, some fields might be changed automatically, such as `modifiedDate`. This method supports patch semantics. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/drive/api/guides/manage-uploads).'
      operationId: drive.files.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.scripts
          Oauth2c:
            - https://www.googleapis.com/auth/drive.scripts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: addParents
          schema:
            type: string
        - in: query
          name: keepRevisionForever
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: ocrLanguage
          schema:
            type: string
        - in: query
          name: useContentAsIndexableText
          schema:
            type: boolean
        - in: query
          name: removeParents
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: exec
    get:
      description: ' Gets a file''s metadata or content by ID. If you provide the URL parameter `alt=media`, then the response includes the file contents in the response body. Downloading content with `alt=media` only works if the file is stored in Drive. To download Google Docs, Sheets, and Slides use [`files.export`](/drive/api/reference/rest/v3/files/export) instead. For more information, see [Download & export files](/drive/api/guides/manage-downloads).'
      operationId: drive.files.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: acknowledgeAbuse
          schema:
            type: boolean
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: select
  /files/{fileId}/export:
    parameters: *ref_1
    get:
      description: >-
        Exports a Google Workspace document to the requested MIME type and
        returns exported byte content. Note that the exported content is limited
        to 10MB.
      operationId: drive.files.export
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: mimeType
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /files/{fileId}/copy:
    parameters: *ref_1
    post:
      description: >-
        Creates a copy of a file and applies any requested updates with patch
        semantics.
      operationId: drive.files.copy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: ignoreDefaultVisibility
          schema:
            type: boolean
        - in: query
          name: keepRevisionForever
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: ocrLanguage
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: includePermissionsForView
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /files/{fileId}/listLabels:
    parameters: *ref_1
    get:
      description: Lists the labels on a file.
      operationId: drive.files.listLabels
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: files__labels
      x-stackQL-verb: select
  /files/{fileId}/watch:
    parameters: *ref_1
    post:
      description: Subscribes to changes to a file.
      operationId: drive.files.watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: acknowledgeAbuse
          schema:
            type: boolean
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /files:
    parameters: *ref_1
    get:
      description: ' Lists the user''s files. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for files & folders](/drive/api/guides/search-files) guide. *Note:* This method returns *all* files by default, including trashed files. If you don''t want trashed files to appear in the list, use the `trashed=false` query parameter to remove trashed files from the results.'
      operationId: drive.files.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: corpus
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: driveId
          schema:
            type: string
        - in: query
          name: spaces
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeItemsFromAllDrives
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: includeTeamDriveItems
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: corpora
          schema:
            type: string
        - in: query
          name: teamDriveId
          schema:
            type: string
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
      x-stackQL-resource: files
      x-stackQL-verb: select
    post:
      description: ' Creates a new file. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/drive/api/guides/manage-uploads). Apps creating shortcuts with `files.create` must specify the MIME type `application/vnd.google-apps.shortcut`. Apps should specify a file extension in the `name` property when inserting files with the API. For example, an operation to insert a JPEG file should specify something like `"name": "cat.jpg"` in the metadata. Subsequent `GET` requests include the read-only `fileExtension` property populated with the extension originally specified in the `title` property. When a Google Drive user requests to download a file, or when the file is downloaded through the sync client, Drive builds a full filename (with extension) based on the title. In cases where the extension is missing, Drive attempts to determine the extension based on the file''s MIME type.'
      operationId: drive.files.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: query
          name: ocrLanguage
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: keepRevisionForever
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: useContentAsIndexableText
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: ignoreDefaultVisibility
          schema:
            type: boolean
      x-stackQL-resource: files
      x-stackQL-verb: insert
  /files/generateIds:
    parameters: *ref_1
    get:
      description: >-
        Generates a set of file IDs which can be provided in create or copy
        requests.
      operationId: drive.files.generateIds
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedIds'
      parameters:
        - in: query
          name: count
          schema:
            type: integer
        - in: query
          name: space
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: exec
