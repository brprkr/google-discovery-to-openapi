openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Workspace Alert Center API
  description: >-
    Manages alerts on issues affecting your domain. Note: The current version of
    this API (v1beta1) is available to all Google Workspace customers. 
  version: v1beta1
  x-discovery-doc-revision: '20230619'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/admin-sdk/alertcenter/
servers:
  - url: https://alertcenter.googleapis.com
components:
  schemas:
    ListAlertsResponse:
      description: Response message for an alert listing request.
      id: ListAlertsResponse
      properties:
        alerts:
          items:
            $ref: '#/components/schemas/Alert'
          type: array
          description: The list of alerts.
        nextPageToken:
          type: string
          description: >-
            The token for the next page. If not empty, indicates that there may
            be more alerts that match the listing request; this value can be
            used in a subsequent ListAlertsRequest to get alerts continuing from
            last result of the current list call.
      type: object
    PhishingSpike:
      id: PhishingSpike
      description: >-
        Alert for a spike in user reported phishing. *Warning*: This type has
        been deprecated. Use
        [MailPhishing](/admin-sdk/alertcenter/reference/rest/v1beta1/MailPhishing)
        instead.
      type: object
      properties:
        maliciousEntity:
          description: The entity whose actions triggered a Gmail phishing alert.
          $ref: '#/components/schemas/MaliciousEntity'
        isInternal:
          type: boolean
          description: If `true`, the email originated from within the organization.
        messages:
          description: The list of messages contained by this alert.
          type: array
          items:
            $ref: '#/components/schemas/GmailMessageInfo'
        domainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
    AccountWarning:
      type: object
      description: Alerts for user account warning events.
      id: AccountWarning
      properties:
        email:
          description: Required. The email of the user that this event belongs to.
          type: string
        loginDetails:
          $ref: '#/components/schemas/LoginDetails'
          description: >-
            Optional. Details of the login action associated with the warning
            event. This is only available for: * Suspicious login * Suspicious
            login (less secure app) * Suspicious programmatic login * User
            suspended (suspicious activity)
    CsvRow:
      id: CsvRow
      type: object
      properties:
        entries:
          items:
            type: string
          type: array
          description: >-
            The data entries in a CSV file row, as a string array rather than a
            single comma-separated string.
      description: A representation of a single data row in a CSV file.
    SuspiciousActivity:
      type: object
      id: SuspiciousActivity
      properties:
        events:
          items:
            $ref: '#/components/schemas/SuspiciousActivitySecurityDetail'
          description: Required. The list of security events.
          type: array
        email:
          description: The email of the user this alert was created for.
          type: string
      description: A mobile suspicious activity alert. Derived from audit logs.
    AlertFeedback:
      description: A customer feedback about an alert.
      properties:
        alertId:
          description: Output only. The alert identifier.
          type: string
        type:
          type: string
          enumDescriptions:
            - The feedback type is not specified.
            - The alert report is not useful.
            - The alert report is somewhat useful.
            - The alert report is very useful.
          enum:
            - ALERT_FEEDBACK_TYPE_UNSPECIFIED
            - NOT_USEFUL
            - SOMEWHAT_USEFUL
            - VERY_USEFUL
          description: Required. The type of the feedback.
        email:
          description: Output only. The email of the user that provided the feedback.
          type: string
        feedbackId:
          type: string
          description: Output only. The unique identifier for the feedback.
        customerId:
          type: string
          description: >-
            Output only. The unique identifier of the Google Workspace account
            of the customer.
        createTime:
          description: Output only. The time this feedback was created.
          type: string
          format: google-datetime
      type: object
      id: AlertFeedback
    VoicemailRecipientError:
      description: Issue(s) with a voicemail recipient.
      type: object
      id: VoicemailRecipientError
      properties:
        invalidReason:
          enumDescriptions:
            - Reason wasn't specified.
            - User can't receive emails due to insufficient quota.
            - All recipients were deleted.
          description: Reason for the error.
          enum:
            - EMAIL_INVALID_REASON_UNSPECIFIED
            - OUT_OF_QUOTA
            - RECIPIENT_DELETED
          type: string
        email:
          description: >-
            Email address of the invalid recipient. This may be unavailable if
            the recipient was deleted.
          type: string
    RuleInfo:
      type: object
      id: RuleInfo
      description: Proto that contains rule information.
      properties:
        resourceName:
          type: string
          description: Resource name that uniquely identifies the rule.
        displayName:
          description: User provided name of the rule.
          type: string
    LoginDetails:
      type: object
      properties:
        ipAddress:
          description: >-
            Optional. The human-readable IP address (for example, `11.22.33.44`)
            that is associated with the warning event.
          type: string
        loginTime:
          description: >-
            Optional. The successful login time that is associated with the
            warning event. This isn't present for blocked login attempts.
          type: string
          format: google-datetime
      description: The details of the login action.
      id: LoginDetails
    PrimaryAdminChangedEvent:
      properties:
        domain:
          type: string
          description: domain in which actioned occurred
        previousAdminEmail:
          type: string
          description: Email of person who was the primary admin before the action
        updatedAdminEmail:
          type: string
          description: Email of person who is the primary admin after the action
      id: PrimaryAdminChangedEvent
      type: object
      description: >-
        Event occurred when primary admin changed in customer's account. The
        event are being received from insight forwarder
    AppsOutage:
      description: An outage incident reported for a Google Workspace service.
      id: AppsOutage
      type: object
      properties:
        nextUpdateTime:
          format: google-datetime
          description: Timestamp by which the next update is expected to arrive.
          type: string
        status:
          enumDescriptions:
            - Status is unspecified.
            - The incident has just been reported.
            - The incident is ongoing.
            - The incident has been resolved.
            - Further assessment indicated no customer impact.
            - The incident has been partially resolved.
            - The incident was merged into a parent.
            - The incident has lower impact than initially anticipated.
          enum:
            - STATUS_UNSPECIFIED
            - NEW
            - ONGOING
            - RESOLVED
            - FALSE_POSITIVE
            - PARTIALLY_RESOLVED
            - MERGED
            - DOWNGRADED
          description: Current outage status.
          type: string
        products:
          items:
            type: string
          type: array
          description: List of products impacted by the outage.
        resolutionTime:
          type: string
          format: google-datetime
          description: >-
            Timestamp when the outage is expected to be resolved, or has
            confirmed resolution. Provided only when known.
        dashboardUri:
          type: string
          description: Link to the outage event in Google Workspace Status Dashboard
        mergeInfo:
          $ref: '#/components/schemas/MergeInfo'
          description: >-
            Indicates new alert details under which the outage is communicated.
            Only populated when Status is MERGED.
        incidentTrackingId:
          description: Incident tracking ID.
          type: string
    ApnsCertificateExpirationInfo:
      description: >-
        The explanation message associated with "APNS certificate is expiring
        soon" and "APNS certificate has expired" alerts.
      type: object
      id: ApnsCertificateExpirationInfo
      properties:
        appleId:
          type: string
          description: >-
            The Apple ID used to create the certificate. It may be blank if
            admins didn't enter it.
        uid:
          description: The UID of the certificate.
          type: string
        expirationTime:
          format: google-datetime
          description: The expiration date of the APNS certificate.
          type: string
    User:
      properties:
        emailAddress:
          type: string
          description: Email address of the user.
        displayName:
          type: string
          description: Display name of the user.
      description: A user.
      id: User
      type: object
    Attachment:
      type: object
      id: Attachment
      description: Attachment with application-specific information about an alert.
      properties:
        csv:
          description: A CSV file attachment.
          $ref: '#/components/schemas/Csv'
    BatchDeleteAlertsRequest:
      id: BatchDeleteAlertsRequest
      type: object
      properties:
        customerId:
          description: >-
            Optional. The unique identifier of the Google Workspace account of
            the customer the alerts are associated with. The `customer_id` must
            have the initial "C" stripped (for example, `046psxkn`). Inferred
            from the caller identity if not provided. [Find your customer
            ID](https://support.google.com/cloudidentity/answer/10070793).
          type: string
        alertId:
          description: Required. The list of alert IDs to delete.
          type: array
          items:
            type: string
      description: A request to perform batch delete on alerts.
    ReportingRule:
      description: Alerts from Reporting Rules configured by Admin.
      type: object
      properties:
        query:
          type: string
          description: >-
            Alert Rule query Sample Query query { condition { filter {
            expected_application_id: 777491262838 expected_event_name:
            "indexable_content_change" filter_op: IN } } conjunction_operator:
            OR }
          format: byte
        name:
          description: Rule name
          type: string
        alertDetails:
          format: byte
          description: Any other associated alert details, for example, AlertConfiguration.
          type: string
      id: ReportingRule
    MergeInfo:
      type: object
      id: MergeInfo
      description: New alert tracking numbers.
      properties:
        newIncidentTrackingId:
          type: string
          description: The new tracking ID from the parent incident.
        newAlertId:
          type: string
          description: >-
            Optional. New alert ID. Reference the
            [google.apps.alertcenter.Alert] with this ID for the current state.
    SensitiveAdminAction:
      properties:
        primaryAdminChangedEvent:
          description: Event occurred when primary admin changed in customer's account
          $ref: '#/components/schemas/PrimaryAdminChangedEvent'
        actorEmail:
          description: Email of person who performed the action
          type: string
        ssoProfileUpdatedEvent:
          $ref: '#/components/schemas/SSOProfileUpdatedEvent'
          description: Event occurred when SSO Profile updated in customer's account
        eventTime:
          format: google-datetime
          description: The time at which event occurred
          type: string
        ssoProfileCreatedEvent:
          $ref: '#/components/schemas/SSOProfileCreatedEvent'
          description: Event occurred when SSO Profile created in customer's account
        superAdminPasswordResetEvent:
          description: >-
            Event occurred when password was reset for super admin in customer's
            account
          $ref: '#/components/schemas/SuperAdminPasswordResetEvent'
        ssoProfileDeletedEvent:
          $ref: '#/components/schemas/SSOProfileDeletedEvent'
          description: Event occurred when SSO Profile deleted in customer's account
      description: >-
        Alert that is triggered when Sensitive Admin Action occur in customer
        account.
      id: SensitiveAdminAction
      type: object
    GmailMessageInfo:
      description: Details of a message in phishing spike alert.
      properties:
        subjectText:
          type: string
          description: The email subject text (only available for reported emails).
        sentTime:
          type: string
          description: The sent time of the email.
          format: google-datetime
        md5HashSubject:
          type: string
          description: >-
            The MD5 Hash of email's subject (only available for reported
            emails).
        recipient:
          description: The recipient of this email.
          type: string
        md5HashMessageBody:
          description: The hash of the message body text.
          type: string
        attachmentsSha256Hash:
          items:
            type: string
          type: array
          description: The `SHA256` hash of email's attachment and all MIME parts.
        messageId:
          type: string
          description: The message ID.
        messageBodySnippet:
          description: >-
            The snippet of the message body text (only available for reported
            emails).
          type: string
        date:
          type: string
          format: google-datetime
          description: The date of the event related to this email.
      type: object
      id: GmailMessageInfo
    AppSettingsChanged:
      id: AppSettingsChanged
      type: object
      description: >-
        Alerts from AppSettingsChanged bucket Rules configured by Admin which
        contain the below rules. Calendar settings changed Drive settings
        changed Email settings changed Mobile settings changed
      properties:
        alertDetails:
          format: byte
          type: string
          description: Any other associated alert details, for example, AlertConfiguration.
        name:
          type: string
          description: Rule name
    SuspiciousActivitySecurityDetail:
      properties:
        deviceType:
          type: string
          description: The type of the device.
        oldValue:
          type: string
          description: The old value of the device property before the change.
        iosVendorId:
          description: Required for iOS, empty for others.
          type: string
        resourceId:
          type: string
          description: The device resource ID.
        newValue:
          type: string
          description: The new value of the device property after the change.
        serialNumber:
          type: string
          description: The serial number of the device.
        deviceId:
          type: string
          description: Required. The device ID.
        deviceModel:
          type: string
          description: The model of the device.
        deviceProperty:
          description: The device property which was changed.
          type: string
      id: SuspiciousActivitySecurityDetail
      description: Detailed information of a single MDM suspicious activity event.
      type: object
    BatchDeleteAlertsResponse:
      properties:
        successAlertIds:
          description: The successful list of alert IDs.
          items:
            type: string
          type: array
        failedAlertStatus:
          type: object
          description: The status details for each failed `alert_id`.
          additionalProperties:
            $ref: '#/components/schemas/Status'
      type: object
      id: BatchDeleteAlertsResponse
      description: Response to batch delete operation on alerts.
    ActivityRule:
      properties:
        name:
          type: string
          description: Rule name.
        description:
          description: Description of the rule.
          type: string
        createTime:
          format: google-datetime
          description: Rule create timestamp.
          type: string
        updateTime:
          format: google-datetime
          description: The timestamp of the last update to the rule.
          type: string
        windowSize:
          description: Rule window size. Possible values are 1 hour or 24 hours.
          format: google-duration
          type: string
        query:
          description: Query that is used to get the data from the associated source.
          type: string
        supersededAlerts:
          type: array
          items:
            type: string
          description: >-
            List of alert IDs superseded by this alert. It is used to indicate
            that this alert is essentially extension of superseded alerts and we
            found the relationship after creating these alerts.
        displayName:
          type: string
          description: Alert display name.
        actionNames:
          description: List of action names associated with the rule threshold.
          items:
            type: string
          type: array
        supersedingAlert:
          type: string
          description: >-
            Alert ID superseding this alert. It is used to indicate that
            superseding alert is essentially extension of this alert and we
            found the relationship after creating both alerts.
        triggerSource:
          description: >-
            The trigger sources for this rule. * GMAIL_EVENTS * DEVICE_EVENTS *
            USER_EVENTS
          type: string
        threshold:
          type: string
          description: Alert threshold is for example “COUNT > 5”.
      id: ActivityRule
      type: object
      description: >-
        Alerts from Google Workspace Security Center rules service configured by
        an admin.
    UndeleteAlertRequest:
      description: A request to undelete a specific alert that was marked for deletion.
      id: UndeleteAlertRequest
      properties:
        customerId:
          description: >-
            Optional. The unique identifier of the Google Workspace account of
            the customer the alert is associated with. The `customer_id` must
            have the initial "C" stripped (for example, `046psxkn`). Inferred
            from the caller identity if not provided. [Find your customer
            ID](https://support.google.com/cloudidentity/answer/10070793).
          type: string
      type: object
    CloudPubsubTopic:
      description: >-
        A reference to a Cloud Pubsub topic. To register for notifications, the
        owner of the topic must grant
        `alerts-api-push-notifications@system.gserviceaccount.com` the
        `projects.topics.publish` permission.
      id: CloudPubsubTopic
      properties:
        topicName:
          description: >-
            The `name` field of a Cloud Pubsub [Topic]
            (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).
          type: string
        payloadFormat:
          description: >-
            Optional. The format of the payload that would be sent. If not
            specified the format will be JSON.
          type: string
          enum:
            - PAYLOAD_FORMAT_UNSPECIFIED
            - JSON
          enumDescriptions:
            - Payload format is not specified (will use JSON as default).
            - Use JSON.
      type: object
    ResourceInfo:
      description: Proto that contains resource information.
      properties:
        resourceTitle:
          type: string
          description: Title of the resource, for example email subject, or document title.
        documentId:
          description: Drive file ID.
          type: string
      type: object
      id: ResourceInfo
    EntityList:
      description: >-
        EntityList stores entities in a format that can be translated to a table
        in the Alert Center UI.
      type: object
      id: EntityList
      properties:
        entities:
          items:
            $ref: '#/components/schemas/Entity'
          type: array
          description: List of entities affected by the alert.
        headers:
          description: >-
            Headers of the values in entities. If no value is defined in Entity,
            this field should be empty.
          items:
            type: string
          type: array
        name:
          description: Name of the key detail used to display this entity list.
          type: string
    StateSponsoredAttack:
      description: A state-sponsored attack alert. Derived from audit logs.
      id: StateSponsoredAttack
      properties:
        email:
          description: The email of the user this incident was created for.
          type: string
      type: object
    RuleViolationInfo:
      id: RuleViolationInfo
      type: object
      properties:
        triggeredActionInfo:
          description: Metadata related to the triggered actions.
          items:
            $ref: '#/components/schemas/ActionInfo'
          type: array
        ruleInfo:
          $ref: '#/components/schemas/RuleInfo'
          description: Details of the violated rule.
        triggeringUserEmail:
          type: string
          description: >-
            Email of the user who caused the violation. Value could be empty if
            not applicable, for example, a violation found by drive continuous
            scan.
        trigger:
          enumDescriptions:
            - Trigger is unspecified.
            - A Drive file is shared.
          description: Trigger of the rule.
          enum:
            - TRIGGER_UNSPECIFIED
            - DRIVE_SHARE
          type: string
        dataSource:
          enum:
            - DATA_SOURCE_UNSPECIFIED
            - DRIVE
          type: string
          enumDescriptions:
            - Data source is unspecified.
            - Drive data source.
          description: Source of the data.
        suppressedActionTypes:
          type: array
          description: Actions suppressed due to other actions with higher priority.
          items:
            enum:
              - ACTION_TYPE_UNSPECIFIED
              - DRIVE_BLOCK_EXTERNAL_SHARING
              - DRIVE_WARN_ON_EXTERNAL_SHARING
              - DELETE_WEBPROTECT_EVIDENCE
              - ALERT
              - RULE_ACTIVATE
              - RULE_DEACTIVATE
            enumDescriptions:
              - Action type is unspecified.
              - Block sharing a file externally.
              - Show a warning message when sharing a file externally.
              - Delete web protect evidence file
              - Send alert.
              - Activate Rule Action
              - Deactivate Rule Action
            type: string
        matchInfo:
          items:
            $ref: '#/components/schemas/MatchInfo'
          type: array
          description: List of matches that were found in the resource content.
        resourceInfo:
          description: Details of the resource which violated the rule.
          $ref: '#/components/schemas/ResourceInfo'
        triggeredActionTypes:
          description: Actions applied as a consequence of the rule being triggered.
          items:
            enum:
              - ACTION_TYPE_UNSPECIFIED
              - DRIVE_BLOCK_EXTERNAL_SHARING
              - DRIVE_WARN_ON_EXTERNAL_SHARING
              - DELETE_WEBPROTECT_EVIDENCE
              - ALERT
              - RULE_ACTIVATE
              - RULE_DEACTIVATE
            enumDescriptions:
              - Action type is unspecified.
              - Block sharing a file externally.
              - Show a warning message when sharing a file externally.
              - Delete web protect evidence file
              - Send alert.
              - Activate Rule Action
              - Deactivate Rule Action
            type: string
          type: array
        recipients:
          type: array
          items:
            type: string
          description: >-
            Resource recipients. For Drive, they are grantees that the Drive
            file was shared with at the time of rule triggering. Valid values
            include user emails, group emails, domains, or 'anyone' if the file
            was publicly accessible. If the file was private the recipients list
            will be empty. For Gmail, they are emails of the users or groups
            that the Gmail message was sent to.
      description: >-
        Common alert information about violated rules that are configured by
        Google Workspace administrators.
    MatchInfo:
      type: object
      properties:
        predefinedDetector:
          $ref: '#/components/schemas/PredefinedDetectorInfo'
          description: For matched detector predefined by Google.
        userDefinedDetector:
          $ref: '#/components/schemas/UserDefinedDetectorInfo'
          description: For matched detector defined by administrators.
      description: >-
        Proto that contains match information from the condition part of the
        rule.
      id: MatchInfo
    Empty:
      id: Empty
      type: object
      properties: {}
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    Alert:
      description: An alert affecting a customer.
      type: object
      id: Alert
      properties:
        alertId:
          description: Output only. The unique identifier for the alert.
          type: string
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The time this alert was last updated.
        source:
          description: >-
            Required. A unique identifier for the system that reported the
            alert. This is output only after alert is created. Supported sources
            are any of the following: * Google Operations * Mobile device
            management * Gmail phishing * Data Loss Prevention * Domain wide
            takeout * State sponsored attack * Google identity * Apps outage
          type: string
        endTime:
          type: string
          format: google-datetime
          description: >-
            Optional. The time the event that caused this alert ceased being
            active. If provided, the end time must not be earlier than the start
            time. If not provided, it indicates an ongoing alert.
        startTime:
          description: >-
            Required. The time the event that caused this alert was started or
            detected.
          format: google-datetime
          type: string
        type:
          type: string
          description: >-
            Required. The type of the alert. This is output only after alert is
            created. For a list of available alert types see [Google Workspace
            Alert
            types](https://developers.google.com/admin-sdk/alertcenter/reference/alert-types).
        metadata:
          description: Output only. The metadata associated with this alert.
          $ref: '#/components/schemas/AlertMetadata'
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time this alert was created.
        deleted:
          type: boolean
          description: Output only. `True` if this alert is marked for deletion.
        data:
          description: >-
            Optional. The data associated with this alert, for example
            google.apps.alertcenter.type.DeviceCompromised.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        etag:
          description: >-
            Optional. `etag` is used for optimistic concurrency control as a way
            to help prevent simultaneous updates of an alert from overwriting
            each other. It is strongly suggested that systems make use of the
            `etag` in the read-modify-write cycle to perform alert updates in
            order to avoid race conditions: An `etag` is returned in the
            response which contains alerts, and systems are expected to put that
            etag in the request to update alert to ensure that their change will
            be applied to the same version of the alert. If no `etag` is
            provided in the call to update alert, then the existing alert is
            overwritten blindly.
          type: string
        customerId:
          description: >-
            Output only. The unique identifier of the Google Workspace account
            of the customer.
          type: string
        securityInvestigationToolLink:
          type: string
          description: >-
            Output only. An optional [Security Investigation
            Tool](https://support.google.com/a/answer/7575955) query for this
            alert.
    BatchUndeleteAlertsRequest:
      description: A request to perform batch undelete on alerts.
      id: BatchUndeleteAlertsRequest
      properties:
        customerId:
          description: >-
            Optional. The unique identifier of the Google Workspace account of
            the customer the alerts are associated with. The `customer_id` must
            have the initial "C" stripped (for example, `046psxkn`). Inferred
            from the caller identity if not provided. [Find your customer
            ID](https://support.google.com/cloudidentity/answer/10070793).
          type: string
        alertId:
          items:
            type: string
          type: array
          description: Required. The list of alert IDs to undelete.
      type: object
    MailPhishing:
      properties:
        isInternal:
          description: If `true`, the email originated from within the organization.
          type: boolean
        systemActionType:
          description: System actions on the messages.
          enumDescriptions:
            - System action is unspecified.
            - No operation.
            - Messages were removed from the inbox.
          enum:
            - SYSTEM_ACTION_TYPE_UNSPECIFIED
            - NO_OPERATION
            - REMOVED_FROM_INBOX
          type: string
        maliciousEntity:
          $ref: '#/components/schemas/MaliciousEntity'
          description: The entity whose actions triggered a Gmail phishing alert.
        domainId:
          description: The domain ID.
          $ref: '#/components/schemas/DomainId'
        messages:
          type: array
          items:
            $ref: '#/components/schemas/GmailMessageInfo'
          description: The list of messages contained by this alert.
      description: >-
        Proto for all phishing alerts with common payload. Supported types are
        any of the following: * User reported phishing * User reported spam
        spike * Suspicious message reported * Phishing reclassification *
        Malware reclassification * Gmail potential employee spoofing
      id: MailPhishing
      type: object
    SSOProfileDeletedEvent:
      type: object
      description: >-
        Event occurred when SSO Profile deleted in customer's account. The event
        are being received from insight forwarder
      properties:
        inboundSsoProfileName:
          type: string
          description: sso profile name which got deleted
      id: SSOProfileDeletedEvent
    AccountSuspensionWarning:
      type: object
      properties:
        suspensionDetails:
          items:
            $ref: '#/components/schemas/AccountSuspensionDetails'
          description: Details about why an account is being suspended.
          type: array
        state:
          enumDescriptions:
            - State is unspecified.
            - Customer is receiving a warning about imminent suspension.
            - Customer is being notified that their account has been suspended.
            - >-
              Customer is being notified that their suspension appeal was
              approved.
            - Customer has submitted their appeal, which is pending review.
          description: Account suspension warning state.
          enum:
            - ACCOUNT_SUSPENSION_WARNING_STATE_UNSPECIFIED
            - WARNING
            - SUSPENDED
            - APPEAL_APPROVED
            - APPEAL_SUBMITTED
          type: string
        appealWindow:
          type: string
          description: >-
            The amount of time remaining to appeal an imminent suspension. After
            this window has elapsed, the account will be suspended. Only
            populated if the account suspension is in WARNING state.
          format: google-duration
      id: AccountSuspensionWarning
      description: A warning that the customer's account is about to be suspended.
    DeviceCompromised:
      properties:
        email:
          type: string
          description: The email of the user this alert was created for.
        events:
          items:
            $ref: '#/components/schemas/DeviceCompromisedSecurityDetail'
          description: Required. The list of security events.
          type: array
      type: object
      description: A mobile device compromised alert. Derived from audit logs.
      id: DeviceCompromised
    BadWhitelist:
      type: object
      properties:
        sourceIp:
          type: string
          description: >-
            The source IP address of the malicious email, for example,
            `127.0.0.1`.
        maliciousEntity:
          $ref: '#/components/schemas/MaliciousEntity'
          description: The entity whose actions triggered a Gmail phishing alert.
        messages:
          items:
            $ref: '#/components/schemas/GmailMessageInfo'
          description: The list of messages contained by this alert.
          type: array
        domainId:
          description: The domain ID.
          $ref: '#/components/schemas/DomainId'
      id: BadWhitelist
      description: >-
        Alert for setting the domain or IP that malicious email comes from as
        whitelisted domain or IP in Gmail advanced settings.
    DeviceCompromisedSecurityDetail:
      type: object
      properties:
        deviceId:
          type: string
          description: Required. The device ID.
        deviceModel:
          description: The model of the device.
          type: string
        resourceId:
          description: The device resource ID.
          type: string
        deviceCompromisedState:
          description: >-
            The device compromised state. Possible values are "`Compromised`" or
            "`Not Compromised`".
          type: string
        iosVendorId:
          type: string
          description: Required for iOS, empty for others.
        serialNumber:
          type: string
          description: The serial number of the device.
        deviceType:
          type: string
          description: The type of the device.
      description: Detailed information of a single MDM device compromised event.
      id: DeviceCompromisedSecurityDetail
    Settings:
      properties:
        notifications:
          description: The list of notifications.
          items:
            $ref: '#/components/schemas/Notification'
          type: array
      id: Settings
      type: object
      description: Customer-level settings.
    VoiceMisconfiguration:
      description: >-
        An alert triggered when Google Voice configuration becomes invalid,
        generally due to an external entity being modified or deleted.
      properties:
        voicemailMisconfiguration:
          description: Issue(s) with sending to voicemail.
          $ref: '#/components/schemas/VoicemailMisconfiguration'
        entityType:
          enumDescriptions:
            - Entity type wasn't set.
            - Invalid auto attendant.
            - Invalid ring group.
          description: Type of the entity whose configuration is now invalid.
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - AUTO_ATTENDANT
            - RING_GROUP
          type: string
        entityName:
          description: Name of the entity whose configuration is now invalid.
          type: string
        transferMisconfiguration:
          $ref: '#/components/schemas/TransferMisconfiguration'
          description: Issue(s) with transferring or forwarding to an external entity.
        fixUri:
          description: Link that the admin can follow to fix the issue.
          type: string
        membersMisconfiguration:
          description: Issue(s) with members of a ring group.
          $ref: '#/components/schemas/TransferMisconfiguration'
      type: object
      id: VoiceMisconfiguration
    SuperAdminPasswordResetEvent:
      description: >-
        Event occurred when password was reset for super admin in customer's
        account. The event are being received from insight forwarder
      type: object
      properties:
        userEmail:
          description: email of person whose password was reset
          type: string
      id: SuperAdminPasswordResetEvent
    UserChanges:
      description: >-
        Alerts from UserChanges bucket Rules for predefined rules which contain
        the below rules. Suspended user made active New user Added User
        suspended (by admin) User granted admin privileges User admin privileges
        revoked User deleted Users password changed
      properties:
        name:
          type: string
          description: Rule name
      id: UserChanges
      type: object
    ListAlertFeedbackResponse:
      type: object
      description: Response message for an alert feedback listing request.
      id: ListAlertFeedbackResponse
      properties:
        feedback:
          items:
            $ref: '#/components/schemas/AlertFeedback'
          description: >-
            The list of alert feedback. Feedback entries for each alert are
            ordered by creation time descending.
          type: array
    DlpRuleViolation:
      type: object
      description: >-
        Alerts that get triggered on violations of Data Loss Prevention (DLP)
        rules.
      id: DlpRuleViolation
      properties:
        ruleViolationInfo:
          description: >-
            Details about the violated DLP rule. Admins can use the predefined
            detectors provided by Google Cloud DLP https://cloud.google.com/dlp/
            when setting up a DLP rule. Matched Cloud DLP detectors in this
            violation if any will be captured in the
            MatchInfo.predefined_detector.
          $ref: '#/components/schemas/RuleViolationInfo'
    DomainWideTakeoutInitiated:
      type: object
      description: >-
        A takeout operation for the entire domain was initiated by an admin.
        Derived from audit logs.
      id: DomainWideTakeoutInitiated
      properties:
        email:
          type: string
          description: The email of the admin who initiated the takeout.
        takeoutRequestId:
          description: The takeout request ID.
          type: string
    Csv:
      id: Csv
      type: object
      description: >-
        A representation of a CSV file attachment, as a list of column headers
        and a list of data rows.
      properties:
        dataRows:
          description: >-
            The list of data rows in a CSV file, as string arrays rather than as
            a single comma-separated string.
          items:
            $ref: '#/components/schemas/CsvRow'
          type: array
        headers:
          type: array
          items:
            type: string
          description: The list of headers for data columns in a CSV file.
    SSOProfileUpdatedEvent:
      description: >-
        Event occurred when SSO Profile updated in customer's account. The event
        are being received from insight forwarder
      type: object
      id: SSOProfileUpdatedEvent
      properties:
        inboundSsoProfileName:
          type: string
          description: sso profile name which got updated
        inboundSsoProfileChanges:
          type: string
          description: changes made to sso profile
    AbuseDetected:
      id: AbuseDetected
      type: object
      description: A generic alert for abusive user activity occurring with a customer.
      properties:
        product:
          description: Product that the abuse is originating from.
          type: string
        variationType:
          enumDescriptions:
            - >-
              AbuseDetected alert variation type unspecified. No alert should be
              unspecified.
            - Variation displayed for Drive abusive content alerts.
            - >-
              Variation displayed for Limited Disable alerts, when a Google
              service is disabled for a user, totally or partially, due to the
              user's abusive behavior.
          description: >-
            Variation of AbuseDetected alerts. The variation_type determines the
            texts displayed the alert details. This differs from sub_alert_id
            because each sub alert can have multiple variation_types,
            representing different stages of the alert.
          type: string
          enum:
            - ABUSE_DETECTED_VARIATION_TYPE_UNSPECIFIED
            - DRIVE_ABUSIVE_CONTENT
            - LIMITED_DISABLE
        subAlertId:
          description: Unique identifier of each sub alert that is onboarded.
          type: string
        additionalDetails:
          description: >-
            List of abusive users/entities to be displayed in a table in the
            alert.
          $ref: '#/components/schemas/EntityList'
    ActionInfo:
      description: Metadata related to the action.
      properties: {}
      type: object
      id: ActionInfo
    Status:
      properties:
        details:
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      id: Status
    Entity:
      description: Individual entity affected by, or related to, an alert.
      id: Entity
      properties:
        name:
          type: string
          description: >-
            Human-readable name of this entity, such as an email address, file
            ID, or device name.
        link:
          description: >-
            Link to a Security Investigation Tool search based on this entity,
            if available.
          type: string
        values:
          items:
            type: string
          description: >-
            Extra values beyond name. The order of values should align with
            headers in EntityList.
          type: array
      type: object
    RequestInfo:
      type: object
      description: Requests for one application that needs default SQL setup.
      properties:
        numberOfRequests:
          description: >-
            Required. Number of requests sent for this application to set up
            default SQL instance.
          type: string
          format: int64
        appDeveloperEmail:
          description: >-
            List of app developers who triggered notifications for above
            application.
          items:
            type: string
          type: array
        appKey:
          description: Required. The application that requires the SQL setup.
          type: string
      id: RequestInfo
    MandatoryServiceAnnouncement:
      properties:
        title:
          type: string
          description: One line summary of the announcement
        description:
          type: string
          description: Detailed, freeform text describing the announcement
      type: object
      id: MandatoryServiceAnnouncement
      description: >-
        Alert Created by the MSA team for communications necessary for continued
        use of Google Workspace Products.
    GoogleOperations:
      id: GoogleOperations
      description: >-
        An incident reported by Google Operations for a Google Workspace
        application.
      type: object
      properties:
        domain:
          type: string
          description: Customer domain for email template personalization.
        affectedUserEmails:
          type: array
          items:
            type: string
          description: >-
            The list of emails which correspond to the users directly affected
            by the incident.
        title:
          description: A one-line incident description.
          type: string
        header:
          type: string
          description: >-
            A header to display above the incident message. Typically used to
            attach a localized notice on the timeline for followup comms
            translations.
        attachmentData:
          $ref: '#/components/schemas/Attachment'
          description: >-
            Optional. Application-specific data for an incident, provided when
            the Google Workspace application which reported the incident cannot
            be completely restored to a valid state.
        description:
          description: A detailed, freeform incident description.
          type: string
    PredefinedDetectorInfo:
      description: Detector provided by Google.
      id: PredefinedDetectorInfo
      type: object
      properties:
        detectorName:
          type: string
          description: Name that uniquely identifies the detector.
    DomainId:
      type: object
      description: Domain ID of Gmail phishing alerts.
      id: DomainId
      properties:
        customerPrimaryDomain:
          type: string
          description: The primary domain for the customer.
    AppMakerSqlSetupNotification:
      description: Alerts from App Maker to notify admins to set up default SQL instance.
      type: object
      id: AppMakerSqlSetupNotification
      properties:
        requestInfo:
          description: List of applications with requests for default SQL set up.
          items:
            $ref: '#/components/schemas/RequestInfo'
          type: array
    VoicemailMisconfiguration:
      type: object
      properties:
        errors:
          type: array
          description: Issue(s) with voicemail recipients.
          items:
            $ref: '#/components/schemas/VoicemailRecipientError'
      description: Issue(s) with sending to voicemail.
      id: VoicemailMisconfiguration
    AlertMetadata:
      properties:
        status:
          type: string
          description: >-
            The current status of the alert. The supported values are the
            following: * NOT_STARTED * IN_PROGRESS * CLOSED
        customerId:
          description: >-
            Output only. The unique identifier of the Google Workspace account
            of the customer.
          type: string
        etag:
          description: >-
            Optional. `etag` is used for optimistic concurrency control as a way
            to help prevent simultaneous updates of an alert metadata from
            overwriting each other. It is strongly suggested that systems make
            use of the `etag` in the read-modify-write cycle to perform metadata
            updates in order to avoid race conditions: An `etag` is returned in
            the response which contains alert metadata, and systems are expected
            to put that etag in the request to update alert metadata to ensure
            that their change will be applied to the same version of the alert
            metadata. If no `etag` is provided in the call to update alert
            metadata, then the existing alert metadata is overwritten blindly.
          type: string
        assignee:
          description: The email address of the user assigned to the alert.
          type: string
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The time this metadata was last updated.
        alertId:
          description: Output only. The alert identifier.
          type: string
        severity:
          description: >-
            The severity value of the alert. Alert Center will set this field at
            alert creation time, default's to an empty string when it could not
            be determined. The supported values for update actions on this field
            are the following: * HIGH * MEDIUM * LOW
          type: string
      id: AlertMetadata
      description: An alert metadata.
      type: object
    AccountSuspensionDetails:
      type: object
      id: AccountSuspensionDetails
      description: Details about why an account is receiving an account suspension warning.
      properties:
        productName:
          description: >-
            The name of the product being abused. This is restricted to only the
            following values: "Gmail" "Google Workspace" "Payments" "Voice"
            "YouTube" "Other"
          type: string
        abuseReason:
          enum:
            - ACCOUNT_SUSPENSION_ABUSE_REASON_UNSPECIFIED
            - TOS_VIOLATION
            - SPAM
            - PHISHING
            - TRAFFIC_PUMPING
            - FRAUD
            - NUMBER_HARVESTING
            - PAYMENTS_FRAUD
            - UNWANTED_CONTENT
          enumDescriptions:
            - Abuse reason is unspecified.
            - This account is being suspended for a Terms of Service violation.
            - This account is being suspended for spam.
            - This account is being suspended for phishing.
            - >-
              This account is being suspended for artificially boosting traffic
              to a website.
            - This account is being suspended for fraud.
            - This account is being suspended for number harvesting.
            - This account is being suspended for payments fraud.
            - This account is being suspended for unwanted content.
          type: string
          description: >-
            The reason why this account is receiving an account suspension
            warning.
    UserDefinedDetectorInfo:
      type: object
      description: Detector defined by administrators.
      properties:
        displayName:
          description: Display name of the detector.
          type: string
        resourceName:
          type: string
          description: Resource name that uniquely identifies the detector.
      id: UserDefinedDetectorInfo
    TransferMisconfiguration:
      type: object
      description: Error related to transferring or forwarding a phone call.
      properties:
        errors:
          items:
            $ref: '#/components/schemas/TransferError'
          type: array
          description: Details for each invalid transfer or forward.
      id: TransferMisconfiguration
    Notification:
      type: object
      description: >-
        Settings for callback notifications. For more details see [Google
        Workspace Alert
        Notification](https://developers.google.com/admin-sdk/alertcenter/guides/notifications).
      properties:
        cloudPubsubTopic:
          description: A Google Cloud Pub/sub topic destination.
          $ref: '#/components/schemas/CloudPubsubTopic'
      id: Notification
    SSOProfileCreatedEvent:
      id: SSOProfileCreatedEvent
      description: >-
        Event occurred when SSO Profile created in customer's account. The event
        are being received from insight forwarder
      type: object
      properties:
        inboundSsoProfileName:
          description: sso profile name which got created
          type: string
    MaliciousEntity:
      type: object
      id: MaliciousEntity
      description: Entity whose actions triggered a Gmail phishing alert.
      properties:
        displayName:
          description: The header from display name.
          type: string
        fromHeader:
          type: string
          description: The sender email address.
        entity:
          description: The actor who triggered a gmail phishing alert.
          $ref: '#/components/schemas/User'
    TransferError:
      id: TransferError
      properties:
        entityType:
          enumDescriptions:
            - Entity type wasn't set.
            - Transfer to auto attendant.
            - Transfer to ring group.
            - Transfer to user.
          enum:
            - TRANSFER_ENTITY_TYPE_UNSPECIFIED
            - TRANSFER_AUTO_ATTENDANT
            - TRANSFER_RING_GROUP
            - TRANSFER_USER
          description: >-
            Type of entity being transferred to. For ring group members, this
            should always be USER.
          type: string
        name:
          type: string
          description: >-
            User's full name, or the ring group / auto attendant name. This may
            be unavailable if the entity was deleted.
        invalidReason:
          type: string
          description: Reason for the error.
          enumDescriptions:
            - Reason wasn't specified.
            - The transfer target can't be found—most likely it was deleted.
            - The user's Google Voice license was removed.
            - The user's Google Workspace account was suspended.
            - >-
              The transfer target no longer has a phone number. This reason
              should become deprecated once we support numberless transfer.
          enum:
            - TRANSFER_INVALID_REASON_UNSPECIFIED
            - TRANSFER_TARGET_DELETED
            - UNLICENSED
            - SUSPENDED
            - NO_PHONE_NUMBER
        email:
          type: string
          description: >-
            User's email address. This may be unavailable if the entity was
            deleted.
        id:
          description: Ring group or auto attendant ID. Not set for users.
          type: string
      description: Details for an invalid transfer or forward.
      type: object
    BatchUndeleteAlertsResponse:
      description: Response to batch undelete operation on alerts.
      properties:
        failedAlertStatus:
          additionalProperties:
            $ref: '#/components/schemas/Status'
          type: object
          description: The status details for each failed `alert_id`.
        successAlertIds:
          items:
            type: string
          type: array
          description: The successful list of alert IDs.
      type: object
      id: BatchUndeleteAlertsResponse
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/apps.alerts: >-
              See and delete your domain's G Suite alerts, and send alert
              feedback
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta1/settings:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: Returns customer-level settings.
      operationId: alertcenter.getSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
      parameters:
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: alertcenter__settings
      x-stackQL-verb: select
    patch:
      description: Updates the customer-level settings.
      operationId: alertcenter.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
      parameters:
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: alertcenter
      x-stackQL-verb: exec
  /v1beta1/alerts:batchUndelete:
    parameters: *ref_1
    post:
      description: Performs batch undelete operation on alerts.
      operationId: alertcenter.alerts.batchUndelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUndeleteAlertsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUndeleteAlertsResponse'
      parameters: []
      x-stackQL-resource: alerts
      x-stackQL-verb: exec
  /v1beta1/alerts/{alertId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Restores, or "undeletes", an alert that was marked for deletion within
        the past 30 days. Attempting to undelete an alert which was marked for
        deletion over 30 days ago (which has been removed from the Alert Center
        database) or a nonexistent alert returns a `NOT_FOUND` error. Attempting
        to undelete an alert which has not been marked for deletion has no
        effect.
      operationId: alertcenter.alerts.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteAlertRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
      parameters:
        - in: path
          name: alertId
          required: true
          schema:
            type: string
      x-stackQL-resource: alerts
      x-stackQL-verb: exec
  /v1beta1/alerts/{alertId}:
    parameters: *ref_1
    delete:
      description: >-
        Marks the specified alert for deletion. An alert that has been marked
        for deletion is removed from Alert Center after 30 days. Marking an
        alert for deletion has no effect on an alert which has already been
        marked for deletion. Attempting to mark a nonexistent alert for deletion
        results in a `NOT_FOUND` error.
      operationId: alertcenter.alerts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: alertId
          required: true
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: alerts
      x-stackQL-verb: delete
    get:
      description: >-
        Gets the specified alert. Attempting to get a nonexistent alert returns
        `NOT_FOUND` error.
      operationId: alertcenter.alerts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
      parameters:
        - in: path
          name: alertId
          required: true
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: alerts
      x-stackQL-verb: select
  /v1beta1/alerts:batchDelete:
    parameters: *ref_1
    post:
      description: Performs batch delete operation on alerts.
      operationId: alertcenter.alerts.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteAlertsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteAlertsResponse'
      parameters: []
      x-stackQL-resource: alerts
      x-stackQL-verb: delete
  /v1beta1/alerts:
    parameters: *ref_1
    get:
      description: Lists the alerts.
      operationId: alertcenter.alerts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlertsResponse'
      parameters:
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: alerts
      x-stackQL-verb: select
  /v1beta1/alerts/{alertId}/metadata:
    parameters: *ref_1
    get:
      description: >-
        Returns the metadata of an alert. Attempting to get metadata for a
        non-existent alert returns `NOT_FOUND` error.
      operationId: alertcenter.alerts.getMetadata
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertMetadata'
      parameters:
        - in: path
          name: alertId
          required: true
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: alerts__metadata
      x-stackQL-verb: select
  /v1beta1/alerts/{alertId}/feedback:
    parameters: *ref_1
    post:
      description: >-
        Creates new feedback for an alert. Attempting to create a feedback for a
        non-existent alert returns `NOT_FOUND` error. Attempting to create a
        feedback for an alert that is marked for deletion returns
        `FAILED_PRECONDITION' error.
      operationId: alertcenter.alerts.feedback.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertFeedback'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertFeedback'
      parameters:
        - in: path
          name: alertId
          required: true
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: feedback
      x-stackQL-verb: insert
    get:
      description: >-
        Lists all the feedback for an alert. Attempting to list feedbacks for a
        non-existent alert returns `NOT_FOUND` error.
      operationId: alertcenter.alerts.feedback.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlertFeedbackResponse'
      parameters:
        - in: path
          name: alertId
          required: true
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: feedback
      x-stackQL-verb: select
