openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Area120 Tables API
  description: ''
  version: v1alpha1
  x-discovery-doc-revision: '20230622'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://support.google.com/area120-tables/answer/10011390
servers:
  - url: https://area120tables.googleapis.com
components:
  schemas:
    Row:
      description: A single row in a table.
      id: Row
      type: object
      properties:
        createTime:
          format: google-datetime
          description: Time when the row was created.
          type: string
        name:
          type: string
          description: >-
            The resource name of the row. Row names have the form
            `tables/{table}/rows/{row}`. The name is ignored when creating a
            row.
        updateTime:
          type: string
          format: google-datetime
          description: Time when the row was last updated.
        values:
          description: >-
            The values of the row. This is a map of column key to value. Key is
            user entered name(default) or the internal column id based on the
            view in the request.
          additionalProperties:
            type: any
          type: object
    BatchUpdateRowsRequest:
      id: BatchUpdateRowsRequest
      description: Request message for TablesService.BatchUpdateRows.
      type: object
      properties:
        requests:
          items:
            $ref: '#/components/schemas/UpdateRowRequest'
          description: >-
            Required. The request messages specifying the rows to update. A
            maximum of 500 rows can be modified in a single batch.
          type: array
    ListWorkspacesResponse:
      description: Response message for TablesService.ListWorkspaces.
      type: object
      id: ListWorkspacesResponse
      properties:
        workspaces:
          items:
            $ref: '#/components/schemas/Workspace'
          description: The list of workspaces.
          type: array
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is empty, there are no subsequent pages.
          type: string
    BatchDeleteRowsRequest:
      type: object
      properties:
        names:
          type: array
          description: >-
            Required. The names of the rows to delete. All rows must belong to
            the parent table or else the entire batch will fail. A maximum of
            500 rows can be deleted in a batch. Format:
            tables/{table}/rows/{row}
          items:
            type: string
      id: BatchDeleteRowsRequest
      description: Request message for TablesService.BatchDeleteRows
    BatchCreateRowsRequest:
      id: BatchCreateRowsRequest
      description: Request message for TablesService.BatchCreateRows.
      properties:
        requests:
          items:
            $ref: '#/components/schemas/CreateRowRequest'
          type: array
          description: >-
            Required. The request message specifying the rows to create. A
            maximum of 500 rows can be created in a single batch.
      type: object
    UpdateRowRequest:
      description: Request message for TablesService.UpdateRow.
      type: object
      properties:
        row:
          $ref: '#/components/schemas/Row'
          description: Required. The row to update.
        updateMask:
          type: string
          format: google-fieldmask
          description: The list of fields to update.
        view:
          enum:
            - VIEW_UNSPECIFIED
            - COLUMN_ID_VIEW
          type: string
          description: >-
            Optional. Column key to use for values in the row. Defaults to user
            entered name.
          enumDescriptions:
            - Defaults to user entered text.
            - Uses internally generated column id to identify values.
      id: UpdateRowRequest
    Workspace:
      type: object
      id: Workspace
      properties:
        displayName:
          type: string
          description: The human readable title of the workspace.
        tables:
          description: The list of tables in the workspace.
          items:
            $ref: '#/components/schemas/Table'
          type: array
        updateTime:
          format: google-datetime
          type: string
          description: Time when the workspace was last updated.
        createTime:
          description: Time when the workspace was created.
          type: string
          format: google-datetime
        name:
          description: >-
            The resource name of the workspace. Workspace names have the form
            `workspaces/{workspace}`.
          type: string
      description: A single workspace.
    Empty:
      type: object
      id: Empty
      properties: {}
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    ListTablesResponse:
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is empty, there are no subsequent pages.
          type: string
        tables:
          description: The list of tables.
          items:
            $ref: '#/components/schemas/Table'
          type: array
      description: Response message for TablesService.ListTables.
      id: ListTablesResponse
      type: object
    ColumnDescription:
      properties:
        readonly:
          description: >-
            Optional. Indicates that values for the column cannot be set by the
            user.
          type: boolean
        id:
          description: Internal id for a column.
          type: string
        multipleValuesDisallowed:
          type: boolean
          description: >-
            Optional. Indicates whether or not multiple values are allowed for
            array types where such a restriction is possible.
        lookupDetails:
          $ref: '#/components/schemas/LookupDetails'
          description: >-
            Optional. Indicates that this is a lookup column whose value is
            derived from the relationship column specified in the details.
            Lookup columns can not be updated directly. To change the value you
            must update the associated relationship column.
        dateDetails:
          $ref: '#/components/schemas/DateDetails'
          description: Optional. Additional details about a date column.
        relationshipDetails:
          description: >-
            Optional. Additional details about a relationship column. Specified
            when data_type is relationship.
          $ref: '#/components/schemas/RelationshipDetails'
        name:
          description: column name
          type: string
        labels:
          description: >-
            Optional. Range of labeled values for the column. Some columns like
            tags and drop-downs limit the values to a set of possible values. We
            return the range of values in such cases to help clients implement
            better user data validation.
          items:
            $ref: '#/components/schemas/LabeledItem'
          type: array
        dataType:
          description: >-
            Data type of the column Supported types are auto_id, boolean,
            boolean_list, creator, create_timestamp, date, dropdown, location,
            integer, integer_list, number, number_list, person, person_list,
            tags, check_list, text, text_list, update_timestamp, updater,
            relationship, file_attachment_list. These types directly map to the
            column types supported on Tables website.
          type: string
      id: ColumnDescription
      type: object
      description: Details on a column in the table.
    BatchCreateRowsResponse:
      description: Response message for TablesService.BatchCreateRows.
      id: BatchCreateRowsResponse
      properties:
        rows:
          items:
            $ref: '#/components/schemas/Row'
          type: array
          description: The created rows.
      type: object
    DateDetails:
      id: DateDetails
      description: Details about a date column.
      properties:
        hasTime:
          type: boolean
          description: Whether the date column includes time.
      type: object
    CreateRowRequest:
      id: CreateRowRequest
      properties:
        parent:
          description: >-
            Required. The parent table where this row will be created. Format:
            tables/{table}
          type: string
        row:
          description: Required. The row to create.
          $ref: '#/components/schemas/Row'
        view:
          enumDescriptions:
            - Defaults to user entered text.
            - Uses internally generated column id to identify values.
          type: string
          description: >-
            Optional. Column key to use for values in the row. Defaults to user
            entered name.
          enum:
            - VIEW_UNSPECIFIED
            - COLUMN_ID_VIEW
      type: object
      description: Request message for TablesService.CreateRow.
    LookupDetails:
      type: object
      id: LookupDetails
      properties:
        relationshipColumnId:
          type: string
          description: The id of the relationship column.
        relationshipColumn:
          type: string
          description: The name of the relationship column associated with the lookup.
      description: >-
        Details about a lookup column whose value comes from the associated
        relationship.
    LabeledItem:
      type: object
      description: A single item in a labeled column.
      id: LabeledItem
      properties:
        id:
          description: Internal id associated with the item.
          type: string
        name:
          type: string
          description: Display string as entered by user.
    SavedView:
      properties:
        name:
          type: string
          description: Display name of the saved view.
        id:
          type: string
          description: Internal id associated with the saved view.
      type: object
      description: 'A saved view of a table. NextId: 3'
      id: SavedView
    Table:
      id: Table
      properties:
        displayName:
          description: The human readable title of the table.
          type: string
        timeZone:
          description: >-
            The time zone of the table. IANA Time Zone Database time zone, e.g.
            "America/New_York".
          type: string
        updateTime:
          description: >-
            Time when the table was last updated excluding updates to individual
            rows
          type: string
          format: google-datetime
        name:
          description: >-
            The resource name of the table. Table names have the form
            `tables/{table}`.
          type: string
        savedViews:
          type: array
          items:
            $ref: '#/components/schemas/SavedView'
          description: Saved views for this table.
        columns:
          items:
            $ref: '#/components/schemas/ColumnDescription'
          description: >-
            List of columns in this table. Order of columns matches the display
            order.
          type: array
        createTime:
          format: google-datetime
          type: string
          description: Time when the table was created.
      type: object
      description: 'A single table. NextId: 8'
    ListRowsResponse:
      type: object
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is empty, there are no subsequent pages.
          type: string
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Row'
          description: The rows from the specified table.
      description: Response message for TablesService.ListRows.
      id: ListRowsResponse
    BatchUpdateRowsResponse:
      type: object
      properties:
        rows:
          description: The updated rows.
          type: array
          items:
            $ref: '#/components/schemas/Row'
      id: BatchUpdateRowsResponse
      description: Response message for TablesService.BatchUpdateRows.
    RelationshipDetails:
      description: Details about a relationship column.
      type: object
      properties:
        linkedTable:
          type: string
          description: The name of the table this relationship is linked to.
      id: RelationshipDetails
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/spreadsheets.readonly: See all your Google Sheets spreadsheets
            https://www.googleapis.com/auth/spreadsheets: See, edit, create, and delete all your Google Sheets spreadsheets
            https://www.googleapis.com/auth/drive.file: >-
              See, edit, create, and delete only the specific Google Drive files
              you use with this app
            https://www.googleapis.com/auth/drive: See, edit, create, and delete all of your Google Drive files
            https://www.googleapis.com/auth/tables: See, edit, create, and delete your tables in Tables by Area 120
            https://www.googleapis.com/auth/drive.readonly: See and download all your Google Drive files
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1alpha1/workspaces:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
    get:
      description: Lists workspaces for the user.
      operationId: area120tables.workspaces.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: workspaces
      x-stackQL-verb: select
  /v1alpha1/workspaces/{workspacesId}:
    parameters: *ref_1
    get:
      description: Gets a workspace. Returns NOT_FOUND if the workspace does not exist.
      operationId: area120tables.workspaces.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
      parameters:
        - in: path
          name: workspacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: workspaces
      x-stackQL-verb: select
  /v1alpha1/tables/{tablesId}:
    parameters: *ref_1
    get:
      description: Gets a table. Returns NOT_FOUND if the table does not exist.
      operationId: area120tables.tables.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-verb: select
  /v1alpha1/tables:
    parameters: *ref_1
    get:
      description: Lists tables for the user.
      operationId: area120tables.tables.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTablesResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: tables
      x-stackQL-verb: select
  /v1alpha1/tables/{tablesId}/rows/{rowsId}:
    parameters: *ref_1
    delete:
      description: Deletes a row.
      operationId: area120tables.tables.rows.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: rowsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: delete
    get:
      description: Gets a row. Returns NOT_FOUND if the row does not exist in the table.
      operationId: area120tables.tables.rows.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: rowsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: select
    patch:
      description: Updates a row.
      operationId: area120tables.tables.rows.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: path
          name: rowsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: exec
  /v1alpha1/tables/{tablesId}/rows:batchUpdate:
    parameters: *ref_1
    post:
      description: Updates multiple rows.
      operationId: area120tables.tables.rows.batchUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateRowsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateRowsResponse'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: exec
  /v1alpha1/tables/{tablesId}/rows:
    parameters: *ref_1
    post:
      description: Creates a row.
      operationId: area120tables.tables.rows.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Row'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Row'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: insert
    get:
      description: Lists rows in a table. Returns NOT_FOUND if the table does not exist.
      operationId: area120tables.tables.rows.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRowsResponse'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: select
  /v1alpha1/tables/{tablesId}/rows:batchDelete:
    parameters: *ref_1
    post:
      description: Deletes multiple rows.
      operationId: area120tables.tables.rows.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteRowsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: delete
  /v1alpha1/tables/{tablesId}/rows:batchCreate:
    parameters: *ref_1
    post:
      description: Creates multiple rows.
      operationId: area120tables.tables.rows.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateRowsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/spreadsheets
          Oauth2c:
            - https://www.googleapis.com/auth/spreadsheets
        - Oauth2:
            - https://www.googleapis.com/auth/tables
          Oauth2c:
            - https://www.googleapis.com/auth/tables
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreateRowsResponse'
      parameters:
        - in: path
          name: tablesId
          required: true
          schema:
            type: string
      x-stackQL-resource: rows
      x-stackQL-verb: insert
