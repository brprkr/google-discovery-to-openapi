openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Play Developer Reporting API
  description: ''
  version: v1alpha1
  x-discovery-doc-revision: '20230622'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/play/developer/reporting
servers:
  - url: https://playdeveloperreporting.googleapis.com
components:
  schemas:
    GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetResponse:
      id: GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetResponse
      description: Error counts query response.
      properties:
        rows:
          type: array
          description: Returned rows.
          items:
            $ref: >-
              #/components/schemas/GooglePlayDeveloperReportingV1alpha1MetricsRow
        nextPageToken:
          type: string
          description: Continuation token to fetch the next page of data.
      type: object
    GooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetResponse:
      properties:
        rows:
          description: Returned rows of data.
          items:
            $ref: >-
              #/components/schemas/GooglePlayDeveloperReportingV1alpha1MetricsRow
          type: array
        nextPageToken:
          type: string
          description: Continuation token to fetch the next page of data.
      id: GooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetResponse
      type: object
      description: Response message for QuerySlowStartRateMetricSet.
    GooglePlayDeveloperReportingV1alpha1QueryExcessiveWakeupRateMetricSetResponse:
      description: Response message for QueryExcessiveWakeupRateMetricSet.
      type: object
      id: >-
        GooglePlayDeveloperReportingV1alpha1QueryExcessiveWakeupRateMetricSetResponse
      properties:
        nextPageToken:
          description: Continuation token to fetch the next page of data.
          type: string
        rows:
          items:
            $ref: >-
              #/components/schemas/GooglePlayDeveloperReportingV1alpha1MetricsRow
          type: array
          description: Returned rows of data.
    GooglePlayDeveloperReportingV1alpha1CrashRateMetricSet:
      description: >-
        Singleton resource representing the set of crashrate metrics. This
        metric set contains crashes data combined with usage data to produce a
        normalized metric independent of user counts. **Supported aggregation
        periods:** * DAILY: metrics are aggregated in calendar date intervals.
        Due to historical constraints, the only supported timezone is
        `America/Los_Angeles`. * HOURLY: metrics are aggregated in hourly
        intervals. The default and only supported timezone is `UTC`. **Supported
        metrics:** * `crashRate` (`google.type.Decimal`): Percentage of distinct
        users in the aggregation period that experienced at least one crash. *
        `crashRate7dUserWeighted` (`google.type.Decimal`): Rolling average value
        of `crashRate` in the last 7 days. The daily values are weighted by the
        count of distinct users for the day. Not supported in HOURLY
        granularity. * `crashRate28dUserWeighted` (`google.type.Decimal`):
        Rolling average value of `crashRate` in the last 28 days. The daily
        values are weighted by the count of distinct users for the day. Not
        supported in HOURLY granularity. * `userPerceivedCrashRate`
        (`google.type.Decimal`): Percentage of distinct users in the aggregation
        period that experienced at least one crash while they were actively
        using your app (a user-perceived crash). An app is considered to be in
        active use if it is displaying any activity or executing any foreground
        service. * `userPerceivedCrashRate7dUserWeighted`
        (`google.type.Decimal`): Rolling average value of
        `userPerceivedCrashRate` in the last 7 days. The daily values are
        weighted by the count of distinct users for the day. Not supported in
        HOURLY granularity. * `userPerceivedCrashRate28dUserWeighted`
        (`google.type.Decimal`): Rolling average value of
        `userPerceivedCrashRate` in the last 28 days. The daily values are
        weighted by the count of distinct users for the day. Not supported in
        HOURLY granularity. * `distinctUsers` (`google.type.Decimal`): Count of
        distinct users in the aggregation period that were used as normalization
        value for the `crashRate` and `userPerceivedCrashRate` metrics. A user
        is counted in this metric if they used the app actively during the
        aggregation period. An app is considered to be in active use if it is
        displaying any activity or executing any foreground service. Care must
        be taken not to aggregate this count further, as it may result in users
        being counted multiple times. The value is rounded to the nearest
        multiple of 10, 100, 1,000 or 1,000,000, depending on the magnitude of
        the value. **Supported dimensions:** * `apiLevel` (string): the API
        level of Android that was running on the user's device, e.g., 26. *
        `versionCode` (int64): version of the app that was running on the user's
        device. * `deviceModel` (string): unique identifier of the user's device
        model. The form of the identifier is 'deviceBrand/device', where
        deviceBrand corresponds to Build.BRAND and device corresponds to
        Build.DEVICE, e.g., google/coral. * `deviceBrand` (string): unique
        identifier of the user's device brand, e.g., google. * `deviceType`
        (string): the type (also known as form factor) of the user's device,
        e.g., PHONE. * `countryCode` (string): the country or region of the
        user's device based on their IP address, represented as a 2-letter
        ISO-3166 code (e.g. US for the United States). * `deviceRamBucket`
        (int64): RAM of the device, in MB, in buckets (3GB, 4GB, etc.). *
        `deviceSocMake` (string): Make of the device's primary system-on-chip,
        e.g., Samsung.
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
        * `deviceSocModel` (string): Model of the device's primary
        system-on-chip, e.g., "Exynos 2100".
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
        * `deviceCpuMake` (string): Make of the device's CPU, e.g., Qualcomm. *
        `deviceCpuModel` (string): Model of the device's CPU, e.g., "Kryo 240".
        * `deviceGpuMake` (string): Make of the device's GPU, e.g., ARM. *
        `deviceGpuModel` (string): Model of the device's GPU, e.g., Mali. *
        `deviceGpuVersion` (string): Version of the device's GPU, e.g., T750. *
        `deviceVulkanVersion` (string): Vulkan version of the device, e.g.,
        "4198400". * `deviceGlEsVersion` (string): OpenGL ES version of the
        device, e.g., "196610". * `deviceScreenSize` (string): Screen size of
        the device, e.g., NORMAL, LARGE. * `deviceScreenDpi` (string): Screen
        density of the device, e.g., mdpi, hdpi. **Required permissions**: to
        access this resource, the calling user needs the _View app information
        (read-only)_ permission for the app. **Related metric sets:** *
        vitals.errors contains unnormalized version (absolute counts) of
        crashes. * vitals.errors contains normalized metrics about ANRs, another
        stability metric.
      properties:
        name:
          description: 'The resource name. Format: apps/{app}/crashRateMetricSet'
          type: string
        freshnessInfo:
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1FreshnessInfo
          description: Summary about data freshness in this resource.
      type: object
      id: GooglePlayDeveloperReportingV1alpha1CrashRateMetricSet
    GooglePlayDeveloperReportingV1alpha1Release:
      type: object
      description: A representation of an app release.
      properties:
        versionCodes:
          items:
            type: string
            format: int64
          type: array
          description: The version codes contained in this release.
        displayName:
          type: string
          description: Readable identifier of the release.
      id: GooglePlayDeveloperReportingV1alpha1Release
    GooglePlayDeveloperReportingV1alpha1Track:
      description: A representation of a Play release track.
      properties:
        servingReleases:
          items:
            $ref: '#/components/schemas/GooglePlayDeveloperReportingV1alpha1Release'
          type: array
          description: Represents all active releases in the track.
        displayName:
          description: Readable identifier of the track.
          type: string
        type:
          type: string
          description: The type of the track.
      type: object
      id: GooglePlayDeveloperReportingV1alpha1Track
    GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet:
      description: >-
        Singleton resource representing the set of Slow Rendering metrics. This
        metric set contains low-level rendering data captured by SurafeFlinger.
        Sessions are evaluated based on the present-to-present histogram of
        frames handled by any SurfaceFlinger layer owned by the app. A slow
        session is a session where more than 25% of frames for the session did
        not meet the metric's target frame rate (either 20fps, or 30fps).
        *NOTE:* This metric set is only available for games. **Supported
        aggregation periods:** * DAILY: metrics are aggregated in calendar date
        intervals. Due to historical constraints, the only supported timezone is
        `America/Los_Angeles`. **Supported metrics:** * `slowRenderingRate20Fps`
        (`google.type.Decimal`): Percentage of distinct users in the aggregation
        period that had slow rendering. * `slowRenderingRate20Fps7dUserWeighted`
        (`google.type.Decimal`): Rolling average value of
        `slowRenderingRate20Fps` in the last 7 days. The daily values are
        weighted by the count of distinct users for the day. *
        `slowRenderingRate20Fps28dUserWeighted` (`google.type.Decimal`): Rolling
        average value of `slowRenderingRate20Fps` in the last 28 days. The daily
        values are weighted by the count of distinct users for the day. *
        `slowRenderingRate30Fps` (`google.type.Decimal`): Percentage of distinct
        users in the aggregation period that had slow rendering. *
        `slowRenderingRate30Fps7dUserWeighted` (`google.type.Decimal`): Rolling
        average value of `slowRenderingRate30Fps` in the last 7 days. The daily
        values are weighted by the count of distinct users for the day. *
        `slowRenderingRate30Fps28dUserWeighted` (`google.type.Decimal`): Rolling
        average value of `slowRenderingRate30Fps` in the last 28 days. The daily
        values are weighted by the count of distinct users for the day. *
        `distinctUsers` (`google.type.Decimal`): Count of distinct users in the
        aggregation period that were used as normalization value for the
        `slowRenderingRate20Fps`/`slowRenderingRate30Fps` metric. A user is
        counted in this metric if their app rendered any frames. Care must be
        taken not to aggregate this count further, as it may result in users
        being counted multiple times. The value is rounded to the nearest
        multiple of 10, 100, 1,000 or 1,000,000, depending on the magnitude of
        the value. **Supported dimensions:** * `apiLevel` (string): the API
        level of Android that was running on the user's device, e.g., 26. *
        `versionCode` (int64): version of the app that was running on the user's
        device. * `deviceModel` (string): unique identifier of the user's device
        model. The form of the identifier is 'deviceBrand/device', where
        deviceBrand corresponds to Build.BRAND and device corresponds to
        Build.DEVICE, e.g., google/coral. * `deviceBrand` (string): unique
        identifier of the user's device brand, e.g., google. * `deviceType`
        (string): the type (also known as form factor) of the user's device,
        e.g., PHONE. * `countryCode` (string): the country or region of the
        user's device based on their IP address, represented as a 2-letter
        ISO-3166 code (e.g. US for the United States). * `deviceRamBucket`
        (int64): RAM of the device, in MB, in buckets (3GB, 4GB, etc.). *
        `deviceSocMake` (string): Make of the device's primary system-on-chip,
        e.g., Samsung.
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
        * `deviceSocModel` (string): Model of the device's primary
        system-on-chip, e.g., "Exynos 2100".
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
        * `deviceCpuMake` (string): Make of the device's CPU, e.g., Qualcomm. *
        `deviceCpuModel` (string): Model of the device's CPU, e.g., "Kryo 240".
        * `deviceGpuMake` (string): Make of the device's GPU, e.g., ARM. *
        `deviceGpuModel` (string): Model of the device's GPU, e.g., Mali. *
        `deviceGpuVersion` (string): Version of the device's GPU, e.g., T750. *
        `deviceVulkanVersion` (string): Vulkan version of the device, e.g.,
        "4198400". * `deviceGlEsVersion` (string): OpenGL ES version of the
        device, e.g., "196610". * `deviceScreenSize` (string): Screen size of
        the device, e.g., NORMAL, LARGE. * `deviceScreenDpi` (string): Screen
        density of the device, e.g., mdpi, hdpi. **Required permissions**: to
        access this resource, the calling user needs the _View app information
        (read-only)_ permission for the app.
      properties:
        freshnessInfo:
          description: Summary about data freshness in this resource.
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1FreshnessInfo
        name:
          description: 'The resource name. Format: apps/{app}/slowRenderingRateMetricSet'
          type: string
      id: GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet
      type: object
    GooglePlayDeveloperReportingV1alpha1QuerySlowRenderingRateMetricSetResponse:
      description: Response message for QuerySlowRenderingRateMetricSet.
      type: object
      id: >-
        GooglePlayDeveloperReportingV1alpha1QuerySlowRenderingRateMetricSetResponse
      properties:
        rows:
          description: Returned rows of data.
          type: array
          items:
            $ref: >-
              #/components/schemas/GooglePlayDeveloperReportingV1alpha1MetricsRow
        nextPageToken:
          type: string
          description: Continuation token to fetch the next page of data.
    GooglePlayDeveloperReportingV1alpha1QuerySlowRenderingRateMetricSetRequest:
      description: Request message for QuerySlowRenderingRateMetricSet.
      type: object
      properties:
        timelineSpec:
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1TimelineSpec
          description: >-
            Specification of the timeline aggregation parameters. **Supported
            aggregation periods:** * DAILY: metrics are aggregated in calendar
            date intervals. Due to historical constraints, the only supported
            timezone is `America/Los_Angeles`.
        filter:
          type: string
          description: >-
            Filters to apply to data. The filtering expression follows
            [AIP-160](https://google.aip.dev/160) standard and supports
            filtering by equality of all breakdown dimensions.
        metrics:
          items:
            type: string
          description: >-
            Metrics to aggregate. **Supported metrics:** *
            `slowRenderingRate20Fps` (`google.type.Decimal`): Percentage of
            distinct users in the aggregation period that had a slow rendering.
            * `slowRenderingRate20Fps7dUserWeighted` (`google.type.Decimal`):
            Rolling average value of `slowRenderingRate20Fps` in the last 7
            days. The daily values are weighted by the count of distinct users
            for the day. * `slowRenderingRate20Fps28dUserWeighted`
            (`google.type.Decimal`): Rolling average value of
            `slowRenderingRate20Fps` in the last 28 days. The daily values are
            weighted by the count of distinct users for the day. *
            `slowRenderingRate30Fps` (`google.type.Decimal`): Percentage of
            distinct users in the aggregation period that had a slow rendering.
            * `slowRenderingRate30Fps7dUserWeighted` (`google.type.Decimal`):
            Rolling average value of `slowRenderingRate30Fps` in the last 7
            days. The daily values are weighted by the count of distinct users
            for the day. * `slowRenderingRate30Fps28dUserWeighted`
            (`google.type.Decimal`): Rolling average value of
            `slowRenderingRate30Fps` in the last 28 days. The daily values are
            weighted by the count of distinct users for the day. *
            `distinctUsers` (`google.type.Decimal`): Count of distinct users in
            the aggregation period that were used as normalization value for the
            `slowRenderingRate20Fps`/`slowRenderingRate30Fps` metric. A user is
            counted in this metric if their app was launched in the device. Care
            must be taken not to aggregate this count further, as it may result
            in users being counted multiple times. The value is rounded to the
            nearest multiple of 10, 100, 1,000 or 1,000,000, depending on the
            magnitude of the value.
          type: array
        dimensions:
          items:
            type: string
          type: array
          description: >-
            Dimensions to slice the data by. **Supported dimensions:** *
            `apiLevel` (string): the API level of Android that was running on
            the user's device, e.g., 26. * `versionCode` (int64): version of the
            app that was running on the user's device. * `deviceModel` (string):
            unique identifier of the user's device model. The form of the
            identifier is 'deviceBrand/device', where deviceBrand corresponds to
            Build.BRAND and device corresponds to Build.DEVICE, e.g.,
            google/coral. * `deviceBrand` (string): unique identifier of the
            user's device brand, e.g., google. * `deviceType` (string): the type
            (also known as form factor) of the user's device, e.g., PHONE. *
            `countryCode` (string): the country or region of the user's device
            based on their IP address, represented as a 2-letter ISO-3166 code
            (e.g. US for the United States). * `deviceRamBucket` (int64): RAM of
            the device, in MB, in buckets (3GB, 4GB, etc.). * `deviceSocMake`
            (string): Make of the device's primary system-on-chip, e.g.,
            Samsung.
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
            * `deviceSocModel` (string): Model of the device's primary
            system-on-chip, e.g., "Exynos 2100".
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
            * `deviceCpuMake` (string): Make of the device's CPU, e.g.,
            Qualcomm. * `deviceCpuModel` (string): Model of the device's CPU,
            e.g., "Kryo 240". * `deviceGpuMake` (string): Make of the device's
            GPU, e.g., ARM. * `deviceGpuModel` (string): Model of the device's
            GPU, e.g., Mali. * `deviceGpuVersion` (string): Version of the
            device's GPU, e.g., T750. * `deviceVulkanVersion` (string): Vulkan
            version of the device, e.g., "4198400". * `deviceGlEsVersion`
            (string): OpenGL ES version of the device, e.g., "196610". *
            `deviceScreenSize` (string): Screen size of the device, e.g.,
            NORMAL, LARGE. * `deviceScreenDpi` (string): Screen density of the
            device, e.g., mdpi, hdpi.
        pageSize:
          description: >-
            Maximum size of the returned data. If unspecified, at most 1000 rows
            will be returned. The maximum value is 100000; values above 100000
            will be coerced to 100000.
          format: int32
          type: integer
        userCohort:
          type: string
          description: >-
            User view to select. The output data will correspond to the selected
            view. **Supported values:** * `OS_PUBLIC` To select data from all
            publicly released Android versions. This is the default. Supports
            all the above dimensions. * `APP_TESTERS` To select data from users
            who have opted in to be testers. Supports all the above dimensions.
            * `OS_BETA` To select data from beta Android versions only,
            excluding data from released Android versions. Only the following
            dimensions are supported: * `versionCode` (int64): version of the
            app that was running on the user's device. * `osBuild` (string): OS
            build of the user's device, e.g., "T1B2.220916.004".
          enum:
            - USER_COHORT_UNSPECIFIED
            - OS_PUBLIC
            - OS_BETA
            - APP_TESTERS
          enumDescriptions:
            - >-
              Unspecified User cohort. This will automatically choose the
              default value.
            - >-
              This is default view. Contains data from public released android
              versions only.
            - >-
              This is the view with just android beta data excluding released OS
              version data.
            - >-
              This is the view with data only from users who have opted in to be
              testers for a given app, excluding OS beta data.
        pageToken:
          type: string
          description: >-
            A page token, received from a previous call. Provide this to
            retrieve the subsequent page. When paginating, all other parameters
            provided to the request must match the call that provided the page
            token.
      id: >-
        GooglePlayDeveloperReportingV1alpha1QuerySlowRenderingRateMetricSetRequest
    GooglePlayDeveloperReportingV1alpha1ExcessiveWakeupRateMetricSet:
      type: object
      description: >-
        Singleton resource representing the set of Excessive Weakeups metrics.
        This metric set contains AlarmManager wakeup counts data combined with
        process state data to produce a normalized metric independent of user
        counts. **Supported aggregation periods:** * DAILY: metrics are
        aggregated in calendar date intervals. Due to historical constraints,
        the only supported timezone is `America/Los_Angeles`. **Supported
        metrics:** * `excessiveWakeupRate` (`google.type.Decimal`): Percentage
        of distinct users in the aggregation period that had more than 10
        wakeups per hour. * `excessiveWakeupRate7dUserWeighted`
        (`google.type.Decimal`): Rolling average value of `excessiveWakeupRate`
        in the last 7 days. The daily values are weighted by the count of
        distinct users for the day. * `excessiveWakeupRate28dUserWeighted`
        (`google.type.Decimal`): Rolling average value of `excessiveWakeupRate`
        in the last 28 days. The daily values are weighted by the count of
        distinct users for the day. * `distinctUsers` (`google.type.Decimal`):
        Count of distinct users in the aggregation period that were used as
        normalization value for the `excessiveWakeupRate` metric. A user is
        counted in this metric if they app was doing any work on the device,
        i.e., not just active foreground usage but also background work. Care
        must be taken not to aggregate this count further, as it may result in
        users being counted multiple times. The value is rounded to the nearest
        multiple of 10, 100, 1,000 or 1,000,000, depending on the magnitude of
        the value. **Supported dimensions:** * `apiLevel` (string): the API
        level of Android that was running on the user's device, e.g., 26. *
        `versionCode` (int64): version of the app that was running on the user's
        device. * `deviceModel` (string): unique identifier of the user's device
        model. The form of the identifier is 'deviceBrand/device', where
        deviceBrand corresponds to Build.BRAND and device corresponds to
        Build.DEVICE, e.g., google/coral. * `deviceBrand` (string): unique
        identifier of the user's device brand, e.g., google. * `deviceType`
        (string): the type (also known as form factor) of the user's device,
        e.g., PHONE. * `countryCode` (string): the country or region of the
        user's device based on their IP address, represented as a 2-letter
        ISO-3166 code (e.g. US for the United States). * `deviceRamBucket`
        (int64): RAM of the device, in MB, in buckets (3GB, 4GB, etc.). *
        `deviceSocMake` (string): Make of the device's primary system-on-chip,
        e.g., Samsung.
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
        * `deviceSocModel` (string): Model of the device's primary
        system-on-chip, e.g., "Exynos 2100".
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
        * `deviceCpuMake` (string): Make of the device's CPU, e.g., Qualcomm. *
        `deviceCpuModel` (string): Model of the device's CPU, e.g., "Kryo 240".
        * `deviceGpuMake` (string): Make of the device's GPU, e.g., ARM. *
        `deviceGpuModel` (string): Model of the device's GPU, e.g., Mali. *
        `deviceGpuVersion` (string): Version of the device's GPU, e.g., T750. *
        `deviceVulkanVersion` (string): Vulkan version of the device, e.g.,
        "4198400". * `deviceGlEsVersion` (string): OpenGL ES version of the
        device, e.g., "196610". * `deviceScreenSize` (string): Screen size of
        the device, e.g., NORMAL, LARGE. * `deviceScreenDpi` (string): Screen
        density of the device, e.g., mdpi, hdpi. **Required permissions**: to
        access this resource, the calling user needs the _View app information
        (read-only)_ permission for the app.
      properties:
        freshnessInfo:
          description: Summary about data freshness in this resource.
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1FreshnessInfo
        name:
          description: 'The resource name. Format: apps/{app}/excessiveWakeupRateMetricSet'
          type: string
      id: GooglePlayDeveloperReportingV1alpha1ExcessiveWakeupRateMetricSet
    GooglePlayDeveloperReportingV1alpha1SearchAccessibleAppsResponse:
      id: GooglePlayDeveloperReportingV1alpha1SearchAccessibleAppsResponse
      description: Response message for SearchAccessibleApps.
      type: object
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        apps:
          description: The apps accessible to the user calling the endpoint.
          items:
            $ref: '#/components/schemas/GooglePlayDeveloperReportingV1alpha1App'
          type: array
    GoogleTypeDateTime:
      type: object
      id: GoogleTypeDateTime
      description: >-
        Represents civil time (or occasionally physical time). This type can
        represent a civil time in one of a few possible ways: * When utc_offset
        is set and time_zone is unset: a civil time on a calendar day with a
        particular offset from UTC. * When time_zone is set and utc_offset is
        unset: a civil time on a calendar day in a particular time zone. * When
        neither time_zone nor utc_offset is set: a civil time on a calendar day
        in local time. The date is relative to the Proleptic Gregorian Calendar.
        If year, month, or day are 0, the DateTime is considered not to have a
        specific year, month, or day respectively. This type may also be used to
        represent a physical time if all the date and time fields are set and
        either case of the `time_offset` oneof is set. Consider using
        `Timestamp` message for physical time instead. If your use case also
        would like to store the user's timezone, that can be done in another
        field. This type is more flexible than some applications may want. Make
        sure to document and validate your application's limitations.
      properties:
        day:
          description: >-
            Optional. Day of month. Must be from 1 to 31 and valid for the year
            and month, or 0 if specifying a datetime without a day.
          format: int32
          type: integer
        year:
          format: int32
          description: >-
            Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a
            datetime without a year.
          type: integer
        hours:
          type: integer
          format: int32
          description: >-
            Optional. Hours of day in 24 hour format. Should be from 0 to 23,
            defaults to 0 (midnight). An API may choose to allow the value
            "24:00:00" for scenarios like business closing time.
        seconds:
          type: integer
          description: >-
            Optional. Seconds of minutes of the time. Must normally be from 0 to
            59, defaults to 0. An API may allow the value 60 if it allows
            leap-seconds.
          format: int32
        month:
          description: >-
            Optional. Month of year. Must be from 1 to 12, or 0 if specifying a
            datetime without a month.
          type: integer
          format: int32
        utcOffset:
          format: google-duration
          description: >-
            UTC offset. Must be whole seconds, between -18 hours and +18 hours.
            For example, a UTC offset of -4:00 would be represented as {
            seconds: -14400 }.
          type: string
        minutes:
          format: int32
          type: integer
          description: >-
            Optional. Minutes of hour of day. Must be from 0 to 59, defaults to
            0.
        timeZone:
          description: Time zone.
          $ref: '#/components/schemas/GoogleTypeTimeZone'
        nanos:
          type: integer
          format: int32
          description: >-
            Optional. Fractions of seconds in nanoseconds. Must be from 0 to
            999,999,999, defaults to 0.
    GooglePlayDeveloperReportingV1alpha1QueryCrashRateMetricSetResponse:
      type: object
      id: GooglePlayDeveloperReportingV1alpha1QueryCrashRateMetricSetResponse
      properties:
        nextPageToken:
          description: Continuation token to fetch the next page of data.
          type: string
        rows:
          items:
            $ref: >-
              #/components/schemas/GooglePlayDeveloperReportingV1alpha1MetricsRow
          description: Returned rows of data.
          type: array
      description: Response message for QueryCrashRateMetricSet.
    GooglePlayDeveloperReportingV1alpha1OsVersion:
      description: Representation of an OS version.
      type: object
      id: GooglePlayDeveloperReportingV1alpha1OsVersion
      properties:
        apiLevel:
          description: Numeric version code of the OS - API level
          format: int64
          type: string
    GooglePlayDeveloperReportingV1alpha1StuckBackgroundWakelockRateMetricSet:
      properties:
        freshnessInfo:
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1FreshnessInfo
          description: Summary about data freshness in this resource.
        name:
          description: >-
            The resource name. Format:
            apps/{app}/stuckBackgroundWakelockRateMetricSet
          type: string
      id: GooglePlayDeveloperReportingV1alpha1StuckBackgroundWakelockRateMetricSet
      type: object
      description: >-
        Singleton resource representing the set of Stuck Background Wakelocks
        metrics. This metric set contains PowerManager wakelock duration data
        combined with process state data to produce a normalized metric
        independent of user counts. **Supported aggregation periods:** * DAILY:
        metrics are aggregated in calendar date intervals. Due to historical
        constraints, the only supported timezone is `America/Los_Angeles`.
        **Supported metrics:** * `stuckBgWakelockRate` (`google.type.Decimal`):
        Percentage of distinct users in the aggregation period that had a
        wakelock held in the background for longer than 1 hour. *
        `stuckBgWakelockRate7dUserWeighted` (`google.type.Decimal`): Rolling
        average value of `stuckBgWakelockRate` in the last 7 days. The daily
        values are weighted by the count of distinct users for the day. *
        `stuckBgWakelockRate28dUserWeighted` (`google.type.Decimal`): Rolling
        average value of `stuckBgWakelockRate` in the last 28 days. The daily
        values are weighted by the count of distinct users for the day. *
        `distinctUsers` (`google.type.Decimal`): Count of distinct users in the
        aggregation period that were used as normalization value for the
        `stuckBgWakelockRate` metric. A user is counted in this metric if their
        app was doing any work on the device, i.e., not just active foreground
        usage but also background work. Care must be taken not to aggregate this
        count further, as it may result in users being counted multiple times.
        The value is rounded to the nearest multiple of 10, 100, 1,000 or
        1,000,000, depending on the magnitude of the value. **Supported
        dimensions:** * `apiLevel` (string): the API level of Android that was
        running on the user's device, e.g., 26. * `versionCode` (int64): version
        of the app that was running on the user's device. * `deviceModel`
        (string): unique identifier of the user's device model. The form of the
        identifier is 'deviceBrand/device', where deviceBrand corresponds to
        Build.BRAND and device corresponds to Build.DEVICE, e.g., google/coral.
        * `deviceBrand` (string): unique identifier of the user's device brand,
        e.g., google. * `deviceType` (string): the type (also known as form
        factor) of the user's device, e.g., PHONE. * `countryCode` (string): the
        country or region of the user's device based on their IP address,
        represented as a 2-letter ISO-3166 code (e.g. US for the United States).
        * `deviceRamBucket` (int64): RAM of the device, in MB, in buckets (3GB,
        4GB, etc.). * `deviceSocMake` (string): Make of the device's primary
        system-on-chip, e.g., Samsung.
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
        * `deviceSocModel` (string): Model of the device's primary
        system-on-chip, e.g., "Exynos 2100".
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
        * `deviceCpuMake` (string): Make of the device's CPU, e.g., Qualcomm. *
        `deviceCpuModel` (string): Model of the device's CPU, e.g., "Kryo 240".
        * `deviceGpuMake` (string): Make of the device's GPU, e.g., ARM. *
        `deviceGpuModel` (string): Model of the device's GPU, e.g., Mali. *
        `deviceGpuVersion` (string): Version of the device's GPU, e.g., T750. *
        `deviceVulkanVersion` (string): Vulkan version of the device, e.g.,
        "4198400". * `deviceGlEsVersion` (string): OpenGL ES version of the
        device, e.g., "196610". * `deviceScreenSize` (string): Screen size of
        the device, e.g., NORMAL, LARGE. * `deviceScreenDpi` (string): Screen
        density of the device, e.g., mdpi, hdpi. **Required permissions**: to
        access this resource, the calling user needs the _View app information
        (read-only)_ permission for the app.
    GooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest:
      description: Request message for QuerySlowStartRateMetricSet.
      id: GooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest
      type: object
      properties:
        filter:
          description: >-
            Filters to apply to data. The filtering expression follows
            [AIP-160](https://google.aip.dev/160) standard and supports
            filtering by equality of all breakdown dimensions.
          type: string
        userCohort:
          type: string
          enum:
            - USER_COHORT_UNSPECIFIED
            - OS_PUBLIC
            - OS_BETA
            - APP_TESTERS
          enumDescriptions:
            - >-
              Unspecified User cohort. This will automatically choose the
              default value.
            - >-
              This is default view. Contains data from public released android
              versions only.
            - >-
              This is the view with just android beta data excluding released OS
              version data.
            - >-
              This is the view with data only from users who have opted in to be
              testers for a given app, excluding OS beta data.
          description: >-
            User view to select. The output data will correspond to the selected
            view. **Supported values:** * `OS_PUBLIC` To select data from all
            publicly released Android versions. This is the default. Supports
            all the above dimensions. * `APP_TESTERS` To select data from users
            who have opted in to be testers. Supports all the above dimensions.
            * `OS_BETA` To select data from beta Android versions only,
            excluding data from released Android versions. Only the following
            dimensions are supported: * `versionCode` (int64): version of the
            app that was running on the user's device. * `osBuild` (string): OS
            build of the user's device, e.g., "T1B2.220916.004".
        metrics:
          description: >-
            Metrics to aggregate. **Supported metrics:** * `slowStartRate`
            (`google.type.Decimal`): Percentage of distinct users in the
            aggregation period that had a slow start. *
            `slowStartRate7dUserWeighted` (`google.type.Decimal`): Rolling
            average value of `slowStartRate` in the last 7 days. The daily
            values are weighted by the count of distinct users for the day. *
            `slowStartRate28dUserWeighted` (`google.type.Decimal`): Rolling
            average value of `slowStartRate` in the last 28 days. The daily
            values are weighted by the count of distinct users for the day. *
            `distinctUsers` (`google.type.Decimal`): Count of distinct users in
            the aggregation period that were used as normalization value for the
            `slowStartRate` metric. A user is counted in this metric if their
            app was launched in the device. Care must be taken not to aggregate
            this count further, as it may result in users being counted multiple
            times. The value is rounded to the nearest multiple of 10, 100,
            1,000 or 1,000,000, depending on the magnitude of the value.
          type: array
          items:
            type: string
        timelineSpec:
          description: >-
            Specification of the timeline aggregation parameters. **Supported
            aggregation periods:** * DAILY: metrics are aggregated in calendar
            date intervals. Due to historical constraints, the only supported
            timezone is `America/Los_Angeles`.
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1TimelineSpec
        dimensions:
          items:
            type: string
          type: array
          description: >-
            Dimensions to slice the data by. **Supported dimensions:** *
            `apiLevel` (string): the API level of Android that was running on
            the user's device, e.g., 26. * `versionCode` (int64): version of the
            app that was running on the user's device. * `deviceModel` (string):
            unique identifier of the user's device model. The form of the
            identifier is 'deviceBrand/device', where deviceBrand corresponds to
            Build.BRAND and device corresponds to Build.DEVICE, e.g.,
            google/coral. * `deviceBrand` (string): unique identifier of the
            user's device brand, e.g., google. * `deviceType` (string): the type
            (also known as form factor) of the user's device, e.g., PHONE. *
            `countryCode` (string): the country or region of the user's device
            based on their IP address, represented as a 2-letter ISO-3166 code
            (e.g. US for the United States). * `deviceRamBucket` (int64): RAM of
            the device, in MB, in buckets (3GB, 4GB, etc.). * `deviceSocMake`
            (string): Make of the device's primary system-on-chip, e.g.,
            Samsung.
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
            * `deviceSocModel` (string): Model of the device's primary
            system-on-chip, e.g., "Exynos 2100".
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
            * `deviceCpuMake` (string): Make of the device's CPU, e.g.,
            Qualcomm. * `deviceCpuModel` (string): Model of the device's CPU,
            e.g., "Kryo 240". * `deviceGpuMake` (string): Make of the device's
            GPU, e.g., ARM. * `deviceGpuModel` (string): Model of the device's
            GPU, e.g., Mali. * `deviceGpuVersion` (string): Version of the
            device's GPU, e.g., T750. * `deviceVulkanVersion` (string): Vulkan
            version of the device, e.g., "4198400". * `deviceGlEsVersion`
            (string): OpenGL ES version of the device, e.g., "196610". *
            `deviceScreenSize` (string): Screen size of the device, e.g.,
            NORMAL, LARGE. * `deviceScreenDpi` (string): Screen density of the
            device, e.g., mdpi, hdpi.
        pageSize:
          type: integer
          format: int32
          description: >-
            Maximum size of the returned data. If unspecified, at most 1000 rows
            will be returned. The maximum value is 100000; values above 100000
            will be coerced to 100000.
        pageToken:
          description: >-
            A page token, received from a previous call. Provide this to
            retrieve the subsequent page. When paginating, all other parameters
            provided to the request must match the call that provided the page
            token.
          type: string
    GooglePlayDeveloperReportingV1alpha1ErrorIssue:
      description: >-
        A group of related ErrorReports received for an app. Similar error
        reports are grouped together into issues with a likely identical root
        cause. **Please note:** this resource is currently in Alpha. There could
        be changes to the issue grouping that would result in similar but more
        recent error reports being assigned to different issues. This could also
        cause some issues disappearing entirely and being replaced by new ones.
        **Required permissions**: to access this resource, the calling user
        needs the _View app information (read-only)_ permission for the app.
      id: GooglePlayDeveloperReportingV1alpha1ErrorIssue
      type: object
      properties:
        name:
          type: string
          description: >-
            The resource name of the issue. Format:
            apps/{app}/errorIssues/{issue}
        lastAppVersion:
          description: >-
            The latest (inclusive) app version appearing in this ErrorIssue in
            the requested time period (only considering occurrences matching the
            filters).
          $ref: '#/components/schemas/GooglePlayDeveloperReportingV1alpha1AppVersion'
        cause:
          description: >-
            Cause of the issue. Depending on the type this can be either: *
            APPLICATION_NOT_RESPONDING: the type of ANR that occurred, e.g.,
            'Input dispatching timed out'. * CRASH: for Java unhandled exception
            errors, the type of the innermost exception that was thrown, e.g.,
            IllegalArgumentException. For signals in native code, the signal
            that was raised, e.g. SIGSEGV.
          type: string
        lastErrorReportTime:
          format: google-datetime
          type: string
          description: >-
            Start of the hour during which the last error report in this issue
            occurred.
        distinctUsers:
          description: >-
            An estimate of the number of unique users who have experienced this
            issue (only considering occurrences matching the filters and within
            the requested time period).
          format: int64
          type: string
        type:
          type: string
          enum:
            - ERROR_TYPE_UNSPECIFIED
            - APPLICATION_NOT_RESPONDING
            - CRASH
          enumDescriptions:
            - Unspecified error type.
            - >-
              Application Not Responding (ANR) error. To learn more about this
              type of errors visit the corresponding Android Developers
              documentation.
            - >-
              Crash caused by an unhandled exception in Java (or Kotlin or any
              other JVM language) or a signal in native code such as SIGSEGV.
          description: Type of the errors grouped in this issue.
        lastOsVersion:
          $ref: '#/components/schemas/GooglePlayDeveloperReportingV1alpha1OsVersion'
          description: >-
            The latest OS version in which this error cluster has occurred in
            the requested time period (only considering occurrences matching the
            filters and within the requested time period).
        issueUri:
          type: string
          description: Link to the issue in Android vitals in the Play Console.
        distinctUsersPercent:
          description: >-
            An estimated percentage of users affected by any issue that are
            affected by this issue (only considering occurrences matching the
            filters and within the requested time period).
          $ref: '#/components/schemas/GoogleTypeDecimal'
        firstOsVersion:
          $ref: '#/components/schemas/GooglePlayDeveloperReportingV1alpha1OsVersion'
          description: >-
            The smallest OS version in which this error cluster has occurred in
            the requested time period (only considering occurrences matching the
            filters and within the requested time period).
        location:
          type: string
          description: >-
            Location where the issue happened. Depending on the type this can be
            either: * APPLICATION_NOT_RESPONDING: the name of the activity or
            service that stopped responding. * CRASH: the likely method name
            that caused the error.
        firstAppVersion:
          description: >-
            The earliest (inclusive) app version appearing in this ErrorIssue in
            the requested time period (only considering occurrences matching the
            filters).
          $ref: '#/components/schemas/GooglePlayDeveloperReportingV1alpha1AppVersion'
        errorReportCount:
          type: string
          format: int64
          description: >-
            The total number of error reports in this issue (only considering
            occurrences matching the filters and within the requested time
            period).
    GooglePlayDeveloperReportingV1alpha1FreshnessInfo:
      id: GooglePlayDeveloperReportingV1alpha1FreshnessInfo
      properties:
        freshnesses:
          description: >-
            Information about data freshness for every supported aggregation
            period. This field has set semantics, keyed by the
            `aggregation_period` field.
          type: array
          items:
            $ref: >-
              #/components/schemas/GooglePlayDeveloperReportingV1alpha1FreshnessInfoFreshness
      type: object
      description: >-
        Represents the latest available time that can be requested in a
        TimelineSpec. Different aggregation periods have different freshness.
        For example, `DAILY` aggregation may lag behind `HOURLY` in cases where
        such aggregation is computed only once at the end of the day.
    GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetResponse:
      id: >-
        GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetResponse
      properties:
        nextPageToken:
          description: Continuation token to fetch the next page of data.
          type: string
        rows:
          description: Returned rows of data.
          items:
            $ref: >-
              #/components/schemas/GooglePlayDeveloperReportingV1alpha1MetricsRow
          type: array
      type: object
      description: Response message for QueryStuckBackgroundWakelockRateMetricSet.
    GooglePlayDeveloperReportingV1alpha1QueryAnrRateMetricSetRequest:
      description: Request message for QueryAnrRateMetricSet.
      id: GooglePlayDeveloperReportingV1alpha1QueryAnrRateMetricSetRequest
      type: object
      properties:
        filter:
          type: string
          description: >-
            Filters to apply to data. The filtering expression follows
            [AIP-160](https://google.aip.dev/160) standard and supports
            filtering by equality of all breakdown dimensions.
        pageToken:
          type: string
          description: >-
            A page token, received from a previous call. Provide this to
            retrieve the subsequent page. When paginating, all other parameters
            provided to the request must match the call that provided the page
            token.
        timelineSpec:
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1TimelineSpec
          description: >-
            Specification of the timeline aggregation parameters. **Supported
            aggregation periods:** * DAILY: metrics are aggregated in calendar
            date intervals. Due to historical constraints, the default and only
            supported timezone is `America/Los_Angeles`. * HOURLY: metrics are
            aggregated in hourly intervals. The default and only supported
            timezone is `UTC`.
        userCohort:
          description: >-
            User view to select. The output data will correspond to the selected
            view. **Supported values:** * `OS_PUBLIC` To select data from all
            publicly released Android versions. This is the default. Supports
            all the above dimensions. * `APP_TESTERS` To select data from users
            who have opted in to be testers. Supports all the above dimensions.
            * `OS_BETA` To select data from beta android versions only,
            excluding data from released android versions. Only the following
            dimensions are supported: * `versionCode` (int64): version of the
            app that was running on the user's device. * `osBuild` (string): OS
            build of the user's device, e.g., "T1B2.220916.004".
          enum:
            - USER_COHORT_UNSPECIFIED
            - OS_PUBLIC
            - OS_BETA
            - APP_TESTERS
          type: string
          enumDescriptions:
            - >-
              Unspecified User cohort. This will automatically choose the
              default value.
            - >-
              This is default view. Contains data from public released android
              versions only.
            - >-
              This is the view with just android beta data excluding released OS
              version data.
            - >-
              This is the view with data only from users who have opted in to be
              testers for a given app, excluding OS beta data.
        dimensions:
          description: >-
            Dimensions to slice the metrics by. **Supported dimensions:** *
            `apiLevel` (string): the API level of Android that was running on
            the user's device, e.g., 26. * `versionCode` (int64): version of the
            app that was running on the user's device. * `deviceModel` (string):
            unique identifier of the user's device model. The form of the
            identifier is 'deviceBrand/device', where deviceBrand corresponds to
            Build.BRAND and device corresponds to Build.DEVICE, e.g.,
            google/coral. * `deviceBrand` (string): unique identifier of the
            user's device brand, e.g., google. * `deviceType` (string): the type
            (also known as form factor) of the user's device, e.g., PHONE. *
            `countryCode` (string): the country or region of the user's device
            based on their IP address, represented as a 2-letter ISO-3166 code
            (e.g. US for the United States). * `deviceRamBucket` (int64): RAM of
            the device, in MB, in buckets (3GB, 4GB, etc.). * `deviceSocMake`
            (string): Make of the device's primary system-on-chip, e.g.,
            Samsung.
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
            * `deviceSocModel` (string): Model of the device's primary
            system-on-chip, e.g., "Exynos 2100".
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
            * `deviceCpuMake` (string): Make of the device's CPU, e.g.,
            Qualcomm. * `deviceCpuModel` (string): Model of the device's CPU,
            e.g., "Kryo 240". * `deviceGpuMake` (string): Make of the device's
            GPU, e.g., ARM. * `deviceGpuModel` (string): Model of the device's
            GPU, e.g., Mali. * `deviceGpuVersion` (string): Version of the
            device's GPU, e.g., T750. * `deviceVulkanVersion` (string): Vulkan
            version of the device, e.g., "4198400". * `deviceGlEsVersion`
            (string): OpenGL ES version of the device, e.g., "196610". *
            `deviceScreenSize` (string): Screen size of the device, e.g.,
            NORMAL, LARGE. * `deviceScreenDpi` (string): Screen density of the
            device, e.g., mdpi, hdpi.
          items:
            type: string
          type: array
        pageSize:
          type: integer
          description: >-
            Maximum size of the returned data. If unspecified, at most 1000 rows
            will be returned. The maximum value is 100,000; values above 100,000
            will be coerced to 100,000.
          format: int32
        metrics:
          items:
            type: string
          type: array
          description: >-
            Metrics to aggregate. **Supported metrics:** * `anrRate`
            (`google.type.Decimal`): Percentage of distinct users in the
            aggregation period that experienced at least one ANR. *
            `anrRate7dUserWeighted` (`google.type.Decimal`): Rolling average
            value of `anrRate` in the last 7 days. The daily values are weighted
            by the count of distinct users for the day. Not supported in HOURLY
            granularity. * `anrRate28dUserWeighted` (`google.type.Decimal`):
            Rolling average value of `anrRate` in the last 28 days. The daily
            values are weighted by the count of distinct users for the day. Not
            supported in HOURLY granularity. * `userPerceivedAnrRate`
            (`google.type.Decimal`): Percentage of distinct users in the
            aggregation period that experienced at least one user-perceived ANR.
            User-perceived ANRs are currently those of 'Input dispatching' type.
            * `userPerceivedAnrRate7dUserWeighted` (`google.type.Decimal`):
            Rolling average value of `userPerceivedAnrRate` in the last 7 days.
            The daily values are weighted by the count of distinct users for the
            day. Not supported in HOURLY granularity. *
            `userPerceivedAnrRate28dUserWeighted` (`google.type.Decimal`):
            Rolling average value of `userPerceivedAnrRate` in the last 28 days.
            The daily values are weighted by the count of distinct users for the
            day. Not . supported in HOURLY granularity. * `distinctUsers`
            (`google.type.Decimal`): Count of distinct users in the aggregation
            period that were used as normalization value for the `anrRate` and
            `userPerceivedAnrRate` metrics. A user is counted in this metric if
            they used the app in the foreground during the aggregation period.
            Care must be taken not to aggregate this count further, as it may
            result in users being counted multiple times. The value is rounded
            to the nearest multiple of 10, 100, 1,000 or 1,000,000, depending on
            the magnitude of the value.
    GooglePlayDeveloperReportingV1alpha1TimelineSpec:
      properties:
        startTime:
          description: >-
            Starting datapoint of the timeline (inclusive). Must be aligned to
            the aggregation period as follows: * HOURLY: the 'minutes',
            'seconds' and 'nanos' fields must be unset. The time_zone can be
            left unset (defaults to UTC) or set explicitly to "UTC". Setting any
            other utc_offset or timezone id will result in a validation error. *
            DAILY: the 'hours', 'minutes', 'seconds' and 'nanos' fields must be
            unset. Different metric sets support different timezones. It can be
            left unset to use the default timezone specified by the metric set.
            The timezone of the end point must match the timezone of the start
            point.
          $ref: '#/components/schemas/GoogleTypeDateTime'
        aggregationPeriod:
          description: >-
            Type of the aggregation period of the datapoints in the timeline.
            Intervals are identified by the date and time at the start of the
            interval.
          type: string
          enum:
            - AGGREGATION_PERIOD_UNSPECIFIED
            - HOURLY
            - DAILY
            - FULL_RANGE
          enumDescriptions:
            - Unspecified granularity.
            - Data is aggregated in hourly intervals.
            - Data is aggregated in daily intervals.
            - >-
              Data is aggregated over the full timeline range. Effectively this
              produces a single value rather than a timeline.
        endTime:
          description: >-
            Ending datapoint of the timeline (exclusive). See start_time for
            restrictions. The timezone of the end point must match the timezone
            of the start point.
          $ref: '#/components/schemas/GoogleTypeDateTime'
      type: object
      id: GooglePlayDeveloperReportingV1alpha1TimelineSpec
      description: >-
        Specification of the time-related aggregation parameters of a timeline.
        Timelines have an aggregation period (`DAILY`, `HOURLY`, etc) which
        defines how events are aggregated in metrics. The points in a timeline
        are defined by the starting DateTime of the aggregation period. The
        duration is implicit in the AggregationPeriod. Hourly aggregation
        periods, when supported by a metric set, are always specified in UTC to
        avoid ambiguities around daylight saving time transitions, where an hour
        is skipped when adopting DST, and repeated when abandoning DST. For
        example, the timestamp '2021-11-07 01:00:00 America/Los_Angeles' is
        ambiguous since it can correspond to '2021-11-07 08:00:00 UTC' or
        '2021-11-07 09:00:00 UTC'. Daily aggregation periods require specifying
        a timezone which will determine the precise instants of the start and
        the end of the day. Not all metric sets support all timezones, so make
        sure to check which timezones are supported by the metric set you want
        to query.
    GooglePlayDeveloperReportingV1alpha1AnrRateMetricSet:
      description: >-
        Singleton resource representing the set of ANR (Application not
        responding) metrics. This metric set contains ANRs data combined with
        usage data to produce a normalized metric independent of user counts.
        **Supported aggregation periods:** * DAILY: metrics are aggregated in
        calendar date intervals. Due to historical constraints, the only
        supported timezone is `America/Los_Angeles`. * HOURLY: metrics are
        aggregated in hourly intervals. The default and only supported timezone
        is `UTC`. **Supported metrics:** * `anrRate` (`google.type.Decimal`):
        Percentage of distinct users in the aggregation period that experienced
        at least one ANR. * `anrRate7dUserWeighted` (`google.type.Decimal`):
        Rolling average value of `anrRate` in the last 7 days. The daily values
        are weighted by the count of distinct users for the day. Not supported
        in HOURLY granularity. * `anrRate28dUserWeighted`
        (`google.type.Decimal`): Rolling average value of `anrRate` in the last
        28 days. The daily values are weighted by the count of distinct users
        for the day. Not supported in HOURLY granularity. *
        `userPerceivedAnrRate` (`google.type.Decimal`): Percentage of distinct
        users in the aggregation period that experienced at least one
        user-perceived ANR. User-perceived ANRs are currently those of 'Input
        dispatching' type. * `userPerceivedAnrRate7dUserWeighted`
        (`google.type.Decimal`): Rolling average value of `userPerceivedAnrRate`
        in the last 7 days. The daily values are weighted by the count of
        distinct users for the day. Not supported in HOURLY granularity. *
        `userPerceivedAnrRate28dUserWeighted` (`google.type.Decimal`): Rolling
        average value of `userPerceivedAnrRate` in the last 28 days. The daily
        values are weighted by the count of distinct users for the day. *
        `distinctUsers` (`google.type.Decimal`): Count of distinct users in the
        aggregation period that were used as normalization value for the
        `anrRate` and `userPerceivedAnrRate` metrics. A user is counted in this
        metric if they used the app in the foreground during the aggregation
        period. Care must be taken not to aggregate this count further, as it
        may result in users being counted multiple times. The value is rounded
        to the nearest multiple of 10, 100, 1,000 or 1,000,000, depending on the
        magnitude of the value. **Supported dimensions:** * `apiLevel` (string):
        the API level of Android that was running on the user's device, e.g.,
        26. * `versionCode` (int64): version of the app that was running on the
        user's device. * `deviceModel` (string): unique identifier of the user's
        device model. The form of the identifier is 'deviceBrand/device', where
        deviceBrand corresponds to Build.BRAND and device corresponds to
        Build.DEVICE, e.g., google/coral. * `deviceBrand` (string): unique
        identifier of the user's device brand, e.g., google. * `deviceType`
        (string): the type (also known as form factor) of the user's device,
        e.g., PHONE. * `countryCode` (string): the country or region of the
        user's device based on their IP address, represented as a 2-letter
        ISO-3166 code (e.g. US for the United States). * `deviceRamBucket`
        (int64): RAM of the device, in MB, in buckets (3GB, 4GB, etc.). *
        `deviceSocMake` (string): Make of the device's primary system-on-chip,
        e.g., Samsung.
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
        * `deviceSocModel` (string): Model of the device's primary
        system-on-chip, e.g., "Exynos 2100".
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
        * `deviceCpuMake` (string): Make of the device's CPU, e.g., Qualcomm. *
        `deviceCpuModel` (string): Model of the device's CPU, e.g., "Kryo 240".
        * `deviceGpuMake` (string): Make of the device's GPU, e.g., ARM. *
        `deviceGpuModel` (string): Model of the device's GPU, e.g., Mali. *
        `deviceGpuVersion` (string): Version of the device's GPU, e.g., T750. *
        `deviceVulkanVersion` (string): Vulkan version of the device, e.g.,
        "4198400". * `deviceGlEsVersion` (string): OpenGL ES version of the
        device, e.g., "196610". * `deviceScreenSize` (string): Screen size of
        the device, e.g., NORMAL, LARGE. * `deviceScreenDpi` (string): Screen
        density of the device, e.g., mdpi, hdpi. **Required permissions**: to
        access this resource, the calling user needs the _View app information
        (read-only)_ permission for the app. **Related metric sets:** *
        vitals.errors contains unnormalized version (absolute counts) of
        crashes. * vitals.errors contains normalized metrics about crashes,
        another stability metric.
      id: GooglePlayDeveloperReportingV1alpha1AnrRateMetricSet
      properties:
        name:
          type: string
          description: 'The resource name. Format: apps/{app}/anrRateMetricSet'
        freshnessInfo:
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1FreshnessInfo
          description: Summary about data freshness in this resource.
      type: object
    GooglePlayDeveloperReportingV1alpha1DecimalConfidenceInterval:
      type: object
      id: GooglePlayDeveloperReportingV1alpha1DecimalConfidenceInterval
      properties:
        lowerBound:
          description: The confidence interval's lower bound.
          $ref: '#/components/schemas/GoogleTypeDecimal'
        upperBound:
          $ref: '#/components/schemas/GoogleTypeDecimal'
          description: The confidence interval's upper bound.
      description: Represents the confidence interval of a metric.
    GooglePlayDeveloperReportingV1alpha1SlowStartRateMetricSet:
      description: >-
        Singleton resource representing the set of Slow Start metrics. This
        metric set contains Activity start duration data. **Supported
        aggregation periods:** * DAILY: metrics are aggregated in calendar date
        intervals. Due to historical constraints, the only supported timezone is
        `America/Los_Angeles`. **Supported metrics:** * `slowStartRate`
        (`google.type.Decimal`): Percentage of distinct users in the aggregation
        period that had a slow start. * `slowStartRate7dUserWeighted`
        (`google.type.Decimal`): Rolling average value of `slowStartRate` in the
        last 7 days. The daily values are weighted by the count of distinct
        users for the day. * `slowStartRate28dUserWeighted`
        (`google.type.Decimal`): Rolling average value of `slowStartRate` in the
        last 28 days. The daily values are weighted by the count of distinct
        users for the day. * `distinctUsers` (`google.type.Decimal`): Count of
        distinct users in the aggregation period that were used as normalization
        value for the `slowStartRate` metric. A user is counted in this metric
        if their app was launched in the device. Care must be taken not to
        aggregate this count further, as it may result in users being counted
        multiple times. The value is rounded to the nearest multiple of 10, 100,
        1,000 or 1,000,000, depending on the magnitude of the value. **Required
        dimension:** This dimension must be specified with each request for the
        request to be valid. * `startType` (string): the type of start that was
        measured. Valid types are `HOT`, `WARM` and `COLD`. **Supported
        dimensions:** * `apiLevel` (string): the API level of Android that was
        running on the user's device, e.g., 26. * `versionCode` (int64): version
        of the app that was running on the user's device. * `deviceModel`
        (string): unique identifier of the user's device model. The form of the
        identifier is 'deviceBrand/device', where deviceBrand corresponds to
        Build.BRAND and device corresponds to Build.DEVICE, e.g., google/coral.
        * `deviceBrand` (string): unique identifier of the user's device brand,
        e.g., google. * `deviceType` (string): the type (also known as form
        factor) of the user's device, e.g., PHONE. * `countryCode` (string): the
        country or region of the user's device based on their IP address,
        represented as a 2-letter ISO-3166 code (e.g. US for the United States).
        * `deviceRamBucket` (int64): RAM of the device, in MB, in buckets (3GB,
        4GB, etc.). * `deviceSocMake` (string): Make of the device's primary
        system-on-chip, e.g., Samsung.
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
        * `deviceSocModel` (string): Model of the device's primary
        system-on-chip, e.g., "Exynos 2100".
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
        * `deviceCpuMake` (string): Make of the device's CPU, e.g., Qualcomm. *
        `deviceCpuModel` (string): Model of the device's CPU, e.g., "Kryo 240".
        * `deviceGpuMake` (string): Make of the device's GPU, e.g., ARM. *
        `deviceGpuModel` (string): Model of the device's GPU, e.g., Mali. *
        `deviceGpuVersion` (string): Version of the device's GPU, e.g., T750. *
        `deviceVulkanVersion` (string): Vulkan version of the device, e.g.,
        "4198400". * `deviceGlEsVersion` (string): OpenGL ES version of the
        device, e.g., "196610". * `deviceScreenSize` (string): Screen size of
        the device, e.g., NORMAL, LARGE. * `deviceScreenDpi` (string): Screen
        density of the device, e.g., mdpi, hdpi. **Required permissions**: to
        access this resource, the calling user needs the _View app information
        (read-only)_ permission for the app.
      id: GooglePlayDeveloperReportingV1alpha1SlowStartRateMetricSet
      type: object
      properties:
        freshnessInfo:
          description: Summary about data freshness in this resource.
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1FreshnessInfo
        name:
          type: string
          description: 'The resource name. Format: apps/{app}/slowStartRateMetricSet'
    GooglePlayDeveloperReportingV1alpha1QueryExcessiveWakeupRateMetricSetRequest:
      id: >-
        GooglePlayDeveloperReportingV1alpha1QueryExcessiveWakeupRateMetricSetRequest
      description: Request message for QueryExcessiveWakeupRateMetricSet.
      properties:
        filter:
          description: >-
            Filters to apply to data. The filtering expression follows
            [AIP-160](https://google.aip.dev/160) standard and supports
            filtering by equality of all breakdown dimensions.
          type: string
        timelineSpec:
          description: >-
            Specification of the timeline aggregation parameters. **Supported
            aggregation periods:** * DAILY: metrics are aggregated in calendar
            date intervals. Due to historical constraints, the only supported
            timezone is `America/Los_Angeles`.
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1TimelineSpec
        dimensions:
          description: >-
            Dimensions to slice the data by. **Supported dimensions:** *
            `apiLevel` (string): the API level of Android that was running on
            the user's device, e.g., 26. * `versionCode` (int64): version of the
            app that was running on the user's device. * `deviceModel` (string):
            unique identifier of the user's device model. The form of the
            identifier is 'deviceBrand/device', where deviceBrand corresponds to
            Build.BRAND and device corresponds to Build.DEVICE, e.g.,
            google/coral. * `deviceBrand` (string): unique identifier of the
            user's device brand, e.g., google. * `deviceType` (string): the type
            (also known as form factor) of the user's device, e.g., PHONE. *
            `countryCode` (string): the country or region of the user's device
            based on their IP address, represented as a 2-letter ISO-3166 code
            (e.g. US for the United States). * `deviceRamBucket` (int64): RAM of
            the device, in MB, in buckets (3GB, 4GB, etc.). * `deviceSocMake`
            (string): Make of the device's primary system-on-chip, e.g.,
            Samsung.
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
            * `deviceSocModel` (string): Model of the device's primary
            system-on-chip, e.g., "Exynos 2100".
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
            * `deviceCpuMake` (string): Make of the device's CPU, e.g.,
            Qualcomm. * `deviceCpuModel` (string): Model of the device's CPU,
            e.g., "Kryo 240". * `deviceGpuMake` (string): Make of the device's
            GPU, e.g., ARM. * `deviceGpuModel` (string): Model of the device's
            GPU, e.g., Mali. * `deviceGpuVersion` (string): Version of the
            device's GPU, e.g., T750. * `deviceVulkanVersion` (string): Vulkan
            version of the device, e.g., "4198400". * `deviceGlEsVersion`
            (string): OpenGL ES version of the device, e.g., "196610". *
            `deviceScreenSize` (string): Screen size of the device, e.g.,
            NORMAL, LARGE. * `deviceScreenDpi` (string): Screen density of the
            device, e.g., mdpi, hdpi.
          items:
            type: string
          type: array
        metrics:
          items:
            type: string
          type: array
          description: >-
            Metrics to aggregate. **Supported metrics:** * `excessiveWakeupRate`
            (`google.type.Decimal`): Percentage of distinct users in the
            aggregation period that had more than 10 wakeups per hour. *
            `excessiveWakeupRate7dUserWeighted` (`google.type.Decimal`): Rolling
            average value of `excessiveWakeupRate` in the last 7 days. The daily
            values are weighted by the count of distinct users for the day. *
            `excessiveWakeupRate28dUserWeighted` (`google.type.Decimal`):
            Rolling average value of `excessiveWakeupRate` in the last 28 days.
            The daily values are weighted by the count of distinct users for the
            day. * `distinctUsers` (`google.type.Decimal`): Count of distinct
            users in the aggregation period that were used as normalization
            value for the `excessiveWakeupRate` metric. A user is counted in
            this metric if they app was doing any work on the device, i.e., not
            just active foreground usage but also background work. Care must be
            taken not to aggregate this count further, as it may result in users
            being counted multiple times. The value is rounded to the nearest
            multiple of 10, 100, 1,000 or 1,000,000, depending on the magnitude
            of the value.
        pageToken:
          type: string
          description: >-
            A page token, received from a previous call. Provide this to
            retrieve the subsequent page. When paginating, all other parameters
            provided to the request must match the call that provided the page
            token.
        pageSize:
          type: integer
          format: int32
          description: >-
            Maximum size of the returned data. If unspecified, at most 1000 rows
            will be returned. The maximum value is 100000; values above 100000
            will be coerced to 100000.
        userCohort:
          type: string
          enumDescriptions:
            - >-
              Unspecified User cohort. This will automatically choose the
              default value.
            - >-
              This is default view. Contains data from public released android
              versions only.
            - >-
              This is the view with just android beta data excluding released OS
              version data.
            - >-
              This is the view with data only from users who have opted in to be
              testers for a given app, excluding OS beta data.
          enum:
            - USER_COHORT_UNSPECIFIED
            - OS_PUBLIC
            - OS_BETA
            - APP_TESTERS
          description: >-
            User view to select. The output data will correspond to the selected
            view. **Supported values:** * `OS_PUBLIC` To select data from all
            publicly released Android versions. This is the default. Supports
            all the above dimensions. * `APP_TESTERS` To select data from users
            who have opted in to be testers. Supports all the above dimensions.
            * `OS_BETA` To select data from beta android versions only,
            excluding data from released android versions. Only the following
            dimensions are supported: * `versionCode` (int64): version of the
            app that was running on the user's device. * `osBuild` (string): OS
            build of the user's device, e.g., "T1B2.220916.004".
      type: object
    GooglePlayDeveloperReportingV1alpha1Anomaly:
      description: >-
        Represents an anomaly detected in a dataset. Our anomaly detection
        systems flag datapoints in a time series that fall outside of and
        expected range derived from historical data. Although those expected
        ranges have an upper and a lower bound, we only flag anomalies when the
        data has become unexpectedly _worse_, which usually corresponds to the
        case where the metric crosses the upper bound. Multiple contiguous
        datapoints in a timeline outside of the expected range will be grouped
        into a single anomaly. Therefore, an anomaly represents effectively a
        segment of a metric's timeline. The information stored in the
        `timeline_spec`, `dimensions` and `metric` can be used to fetch a full
        timeline with extended ragne for context. **Required permissions**: to
        access this resource, the calling user needs the _View app information
        (read-only)_ permission for the app.
      type: object
      properties:
        name:
          type: string
          description: 'Name of the anomaly. Format: apps/{app}/anomalies/{anomaly}'
        timelineSpec:
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1TimelineSpec
          description: Timeline specification that covers the anomaly period.
        dimensions:
          items:
            $ref: >-
              #/components/schemas/GooglePlayDeveloperReportingV1alpha1DimensionValue
          description: Combination of dimensions in which the anomaly was detected.
          type: array
        metric:
          description: >-
            Metric where the anomaly was detected, together with the anomalous
            value.
          $ref: '#/components/schemas/GooglePlayDeveloperReportingV1alpha1MetricValue'
        metricSet:
          description: Metric set resource where the anomaly was detected.
          type: string
      id: GooglePlayDeveloperReportingV1alpha1Anomaly
    GooglePlayDeveloperReportingV1alpha1ErrorReport:
      id: GooglePlayDeveloperReportingV1alpha1ErrorReport
      description: >-
        An error report received for an app. There reports are produced by the
        Android platform code when a (potentially fatal) error condition is
        detected. Identical reports from many users will be deduplicated and
        coalesced into a single ErrorReport. **Required permissions**: to access
        this resource, the calling user needs the _View app information
        (read-only)_ permission for the app.
      properties:
        deviceModel:
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1DeviceModelSummary
          description: A device model on which an event in this error report occurred on.
        eventTime:
          description: >-
            Start of the hour during which the latest event in this error report
            occurred.
          format: google-datetime
          type: string
        osVersion:
          $ref: '#/components/schemas/GooglePlayDeveloperReportingV1alpha1OsVersion'
          description: The OS version on which an event in this error report occurred on.
        reportText:
          description: >-
            Textual representation of the error report. These textual reports
            are produced by the platform. The reports are then sanitized and
            filtered to remove any potentially sensitive information. Although
            their format is fairly stable, they are not entirely meant for
            machine consumption and we cannot guarantee that there won't be
            subtle changes to the formatting that may break systems trying to
            parse information out of the reports.
          type: string
        type:
          description: Type of the error for which this report was generated.
          enum:
            - ERROR_TYPE_UNSPECIFIED
            - APPLICATION_NOT_RESPONDING
            - CRASH
          enumDescriptions:
            - Unspecified error type.
            - >-
              Application Not Responding (ANR) error. To learn more about this
              type of errors visit the corresponding Android Developers
              documentation.
            - >-
              Crash caused by an unhandled exception in Java (or Kotlin or any
              other JVM language) or a signal in native code such as SIGSEGV.
          type: string
        issue:
          type: string
          description: >-
            The issue this report was associated with. **Please note:** this
            resource is currently in Alpha. There could be changes to the issue
            grouping that would result in similar but more recent error reports
            being assigned to a different issue.
        name:
          type: string
          description: >-
            The resource name of the report. Format:
            apps/{app}/errorReports/{report}
      type: object
    GooglePlayDeveloperReportingV1alpha1DimensionValue:
      id: GooglePlayDeveloperReportingV1alpha1DimensionValue
      description: Represents the value of a single dimension.
      properties:
        dimension:
          type: string
          description: Name of the dimension.
        stringValue:
          type: string
          description: Actual value, represented as a string.
        int64Value:
          description: Actual value, represented as an int64.
          format: int64
          type: string
        valueLabel:
          description: >-
            Optional. Human-friendly label for the value, always in English. For
            example, 'Spain' for the 'ES' country code. Whereas the dimension
            value is stable, this value label is subject to change. Do not
            assume that the (value, value_label) relationship is stable. For
            example, the ISO country code 'MK' changed its name recently to
            'North Macedonia'.
          type: string
      type: object
    GooglePlayDeveloperReportingV1alpha1AppVersion:
      id: GooglePlayDeveloperReportingV1alpha1AppVersion
      description: Representations of an app version.
      properties:
        versionCode:
          type: string
          format: int64
          description: >-
            Numeric version code of the app version (set by the app's
            developer).
      type: object
    GooglePlayDeveloperReportingV1alpha1SearchErrorReportsResponse:
      properties:
        errorReports:
          description: Error reports that were found.
          items:
            $ref: >-
              #/components/schemas/GooglePlayDeveloperReportingV1alpha1ErrorReport
          type: array
        nextPageToken:
          type: string
          description: Page token to fetch the next page of reports.
      description: >-
        Response with a paginated list of error reports matching the search
        query.
      id: GooglePlayDeveloperReportingV1alpha1SearchErrorReportsResponse
      type: object
    GooglePlayDeveloperReportingV1alpha1SearchErrorIssuesResponse:
      properties:
        errorIssues:
          description: ErrorIssues that were found.
          items:
            $ref: >-
              #/components/schemas/GooglePlayDeveloperReportingV1alpha1ErrorIssue
          type: array
        nextPageToken:
          type: string
          description: Continuation token to fetch the next page of data.
      description: Response with a paginated list of issues that matched the request.
      id: GooglePlayDeveloperReportingV1alpha1SearchErrorIssuesResponse
      type: object
    GooglePlayDeveloperReportingV1alpha1MetricsRow:
      type: object
      description: Represents a row of dimensions and metrics.
      id: GooglePlayDeveloperReportingV1alpha1MetricsRow
      properties:
        startTime:
          $ref: '#/components/schemas/GoogleTypeDateTime'
          description: >-
            Starting date (and time for hourly aggregation) of the period
            covered by this row.
        metrics:
          type: array
          items:
            $ref: >-
              #/components/schemas/GooglePlayDeveloperReportingV1alpha1MetricValue
          description: Metric columns in the row.
        dimensions:
          type: array
          description: Dimension columns in the row.
          items:
            $ref: >-
              #/components/schemas/GooglePlayDeveloperReportingV1alpha1DimensionValue
        aggregationPeriod:
          enumDescriptions:
            - Unspecified granularity.
            - Data is aggregated in hourly intervals.
            - Data is aggregated in daily intervals.
            - >-
              Data is aggregated over the full timeline range. Effectively this
              produces a single value rather than a timeline.
          type: string
          enum:
            - AGGREGATION_PERIOD_UNSPECIFIED
            - HOURLY
            - DAILY
            - FULL_RANGE
          description: Granularity of the aggregation period of the row.
    GooglePlayDeveloperReportingV1alpha1DeviceId:
      type: object
      properties:
        buildBrand:
          description: Value of Build.BRAND.
          type: string
        buildDevice:
          type: string
          description: Value of Build.DEVICE.
      id: GooglePlayDeveloperReportingV1alpha1DeviceId
      description: Identifier of a device.
    GooglePlayDeveloperReportingV1alpha1MetricValue:
      type: object
      properties:
        metric:
          type: string
          description: Name of the metric.
        decimalValue:
          description: Actual value, represented as a decimal number.
          $ref: '#/components/schemas/GoogleTypeDecimal'
        decimalValueConfidenceInterval:
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1DecimalConfidenceInterval
          description: Confidence interval of a value that is of type `type.Decimal`.
      description: Represents the value of a metric.
      id: GooglePlayDeveloperReportingV1alpha1MetricValue
    GoogleTypeDecimal:
      properties:
        value:
          type: string
          description: >-
            The decimal value, as a string. The string representation consists
            of an optional sign, `+` (`U+002B`) or `-` (`U+002D`), followed by a
            sequence of zero or more decimal digits ("the integer"), optionally
            followed by a fraction, optionally followed by an exponent. An empty
            string **should** be interpreted as `0`. The fraction consists of a
            decimal point followed by zero or more decimal digits. The string
            must contain at least one digit in either the integer or the
            fraction. The number formed by the sign, the integer and the
            fraction is referred to as the significand. The exponent consists of
            the character `e` (`U+0065`) or `E` (`U+0045`) followed by one or
            more decimal digits. Services **should** normalize decimal values
            before storing them by: - Removing an explicitly-provided `+` sign
            (`+2.5` -> `2.5`). - Replacing a zero-length integer value with `0`
            (`.5` -> `0.5`). - Coercing the exponent character to upper-case,
            with explicit sign (`2.5e8` -> `2.5E+8`). - Removing an
            explicitly-provided zero exponent (`2.5E0` -> `2.5`). Services
            **may** perform additional normalization based on its own needs and
            the internal decimal implementation selected, such as shifting the
            decimal point and exponent value together (example: `2.5E-1` <->
            `0.25`). Additionally, services **may** preserve trailing zeroes in
            the fraction to indicate increased precision, but are not required
            to do so. Note that only the `.` character is supported to divide
            the integer and the fraction; `,` **should not** be supported
            regardless of locale. Additionally, thousand separators **should
            not** be supported. If a service does support them, values **must**
            be normalized. The ENBF grammar is: DecimalString = '' | [Sign]
            Significand [Exponent]; Sign = '+' | '-'; Significand = Digits '.' |
            [Digits] '.' Digits; Exponent = ('e' | 'E') [Sign] Digits; Digits =
            { '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' };
            Services **should** clearly document the range of supported values,
            the maximum supported precision (total number of digits), and, if
            applicable, the scale (number of digits after the decimal point), as
            well as how it behaves when receiving out-of-bounds values. Services
            **may** choose to accept values passed as input even when the value
            has a higher precision or scale than the service supports, and
            **should** round the value to fit the supported scale.
            Alternatively, the service **may** error with `400 Bad Request`
            (`INVALID_ARGUMENT` in gRPC) if precision would be lost. Services
            **should** error with `400 Bad Request` (`INVALID_ARGUMENT` in gRPC)
            if the service receives a value outside of the supported range.
      type: object
      description: >-
        A representation of a decimal value, such as 2.5. Clients may convert
        values into language-native decimal formats, such as Java's BigDecimal
        or Python's decimal.Decimal. [BigDecimal]:
        https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html
        [decimal.Decimal]: https://docs.python.org/3/library/decimal.html
      id: GoogleTypeDecimal
    GooglePlayDeveloperReportingV1alpha1DeviceModelSummary:
      properties:
        deviceId:
          $ref: '#/components/schemas/GooglePlayDeveloperReportingV1alpha1DeviceId'
          description: Identifier of the device.
        marketingName:
          description: Display name of the device.
          type: string
        deviceUri:
          type: string
          description: Link to the device in Play Device Catalog.
      description: Summary of a device
      type: object
      id: GooglePlayDeveloperReportingV1alpha1DeviceModelSummary
    GooglePlayDeveloperReportingV1alpha1ReleaseFilterOptions:
      id: GooglePlayDeveloperReportingV1alpha1ReleaseFilterOptions
      type: object
      description: >-
        A set of filtering options for releases and version codes specific to an
        app.
      properties:
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/GooglePlayDeveloperReportingV1alpha1Track'
          description: >-
            List of tracks to filter releases over. Provides the grouping of
            version codes under releases and tracks.
    GooglePlayDeveloperReportingV1alpha1QueryCrashRateMetricSetRequest:
      type: object
      properties:
        userCohort:
          description: >-
            User view to select. The output data will correspond to the selected
            view. **Supported values:** * `OS_PUBLIC` To select data from all
            publicly released Android versions. This is the default. Supports
            all the above dimensions. * `APP_TESTERS` To select data from users
            who have opted in to be testers. Supports all the above dimensions.
            * `OS_BETA` To select data from beta android versions only,
            excluding data from released android versions. Only the following
            dimensions are supported: * `versionCode` (int64): version of the
            app that was running on the user's device. * `osBuild` (string): OS
            build of the user's device, e.g., "T1B2.220916.004".
          enumDescriptions:
            - >-
              Unspecified User cohort. This will automatically choose the
              default value.
            - >-
              This is default view. Contains data from public released android
              versions only.
            - >-
              This is the view with just android beta data excluding released OS
              version data.
            - >-
              This is the view with data only from users who have opted in to be
              testers for a given app, excluding OS beta data.
          type: string
          enum:
            - USER_COHORT_UNSPECIFIED
            - OS_PUBLIC
            - OS_BETA
            - APP_TESTERS
        pageToken:
          description: >-
            A page token, received from a previous call. Provide this to
            retrieve the subsequent page. When paginating, all other parameters
            provided to the request must match the call that provided the page
            token.
          type: string
        metrics:
          type: array
          description: >-
            Metrics to aggregate. **Supported metrics:** * `crashRate`
            (`google.type.Decimal`): Percentage of distinct users in the
            aggregation period that experienced at least one crash. *
            `crashRate7dUserWeighted` (`google.type.Decimal`): Rolling average
            value of `crashRate` in the last 7 days. The daily values are
            weighted by the count of distinct users for the day. *
            `crashRate28dUserWeighted` (`google.type.Decimal`): Rolling average
            value of `crashRate` in the last 28 days. The daily values are
            weighted by the count of distinct users for the day. Not supported
            in HOURLY granularity. * `userPerceivedCrashRate`
            (`google.type.Decimal`): Percentage of distinct users in the
            aggregation period that experienced at least one crash while they
            were actively using your app (a user-perceived crash). An app is
            considered to be in active use if it is displaying any activity or
            executing any foreground service. *
            `userPerceivedCrashRate7dUserWeighted` (`google.type.Decimal`):
            Rolling average value of `userPerceivedCrashRate` in the last 7
            days. The daily values are weighted by the count of distinct users
            for the day. Not supported in HOURLY granularity. *
            `userPerceivedCrashRate28dUserWeighted` (`google.type.Decimal`):
            Rolling average value of `userPerceivedCrashRate` in the last 28
            days. The daily values are weighted by the count of distinct users
            for the day. Not supported in HOURLY granularity. * `distinctUsers`
            (`google.type.Decimal`): Count of distinct users in the aggregation
            period that were used as normalization value for the `crashRate` and
            `userPerceivedCrashRate` metrics. A user is counted in this metric
            if they used the app actively during the aggregation period. An app
            is considered to be in active use if it is displaying any activity
            or executing any foreground service. Care must be taken not to
            aggregate this count further, as it may result in users being
            counted multiple times. The value is rounded to the nearest multiple
            of 10, 100, 1,000 or 1,000,000, depending on the magnitude of the
            value.
          items:
            type: string
        pageSize:
          format: int32
          description: >-
            Maximum size of the returned data. If unspecified, at most 1000 rows
            will be returned. The maximum value is 100,000; values above 100,000
            will be coerced to 100,000.
          type: integer
        filter:
          description: >-
            Filters to apply to data. The filtering expression follows
            [AIP-160](https://google.aip.dev/160) standard and supports
            filtering by equality of all breakdown dimensions.
          type: string
        dimensions:
          type: array
          items:
            type: string
          description: >-
            Dimensions to slice the metrics by. **Supported dimensions:** *
            `apiLevel` (string): the API level of Android that was running on
            the user's device, e.g., 26. * `versionCode` (int64): version of the
            app that was running on the user's device. * `deviceModel` (string):
            unique identifier of the user's device model. The form of the
            identifier is 'deviceBrand/device', where deviceBrand corresponds to
            Build.BRAND and device corresponds to Build.DEVICE, e.g.,
            google/coral. * `deviceBrand` (string): unique identifier of the
            user's device brand, e.g., google. * `deviceType` (string): the type
            (also known as form factor) of the user's device, e.g., PHONE. *
            `countryCode` (string): the country or region of the user's device
            based on their IP address, represented as a 2-letter ISO-3166 code
            (e.g. US for the United States). * `deviceRamBucket` (int64): RAM of
            the device, in MB, in buckets (3GB, 4GB, etc.). * `deviceSocMake`
            (string): Make of the device's primary system-on-chip, e.g.,
            Samsung.
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
            * `deviceSocModel` (string): Model of the device's primary
            system-on-chip, e.g., "Exynos 2100".
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
            * `deviceCpuMake` (string): Make of the device's CPU, e.g.,
            Qualcomm. * `deviceCpuModel` (string): Model of the device's CPU,
            e.g., "Kryo 240". * `deviceGpuMake` (string): Make of the device's
            GPU, e.g., ARM. * `deviceGpuModel` (string): Model of the device's
            GPU, e.g., Mali. * `deviceGpuVersion` (string): Version of the
            device's GPU, e.g., T750. * `deviceVulkanVersion` (string): Vulkan
            version of the device, e.g., "4198400". * `deviceGlEsVersion`
            (string): OpenGL ES version of the device, e.g., "196610". *
            `deviceScreenSize` (string): Screen size of the device, e.g.,
            NORMAL, LARGE. * `deviceScreenDpi` (string): Screen density of the
            device, e.g., mdpi, hdpi.
        timelineSpec:
          description: >-
            Specification of the timeline aggregation parameters. **Supported
            aggregation periods:** * DAILY: metrics are aggregated in calendar
            date intervals. Due to historical constraints, the default and only
            supported timezone is `America/Los_Angeles`. * HOURLY: metrics are
            aggregated in hourly intervals. The default and only supported
            timezone is `UTC`.
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1TimelineSpec
      description: Request message for QueryCrashRateMetricSet.
      id: GooglePlayDeveloperReportingV1alpha1QueryCrashRateMetricSetRequest
    GoogleTypeTimeZone:
      type: object
      id: GoogleTypeTimeZone
      properties:
        version:
          description: Optional. IANA Time Zone Database version number, e.g. "2019a".
          type: string
        id:
          description: IANA Time Zone Database time zone, e.g. "America/New_York".
          type: string
      description: >-
        Represents a time zone from the [IANA Time Zone
        Database](https://www.iana.org/time-zones).
    GooglePlayDeveloperReportingV1alpha1FreshnessInfoFreshness:
      description: Information about data freshness for a single aggregation period.
      properties:
        aggregationPeriod:
          description: Aggregation period for which data is available.
          enumDescriptions:
            - Unspecified granularity.
            - Data is aggregated in hourly intervals.
            - Data is aggregated in daily intervals.
            - >-
              Data is aggregated over the full timeline range. Effectively this
              produces a single value rather than a timeline.
          enum:
            - AGGREGATION_PERIOD_UNSPECIFIED
            - HOURLY
            - DAILY
            - FULL_RANGE
          type: string
        latestEndTime:
          description: >-
            Latest end time for which data is available, for the aggregation
            period. The time is specified in the metric set's default timezone.
            *Note:* time ranges in TimelineSpec are represented as `start_time,
            end_time)`. For example, if the latest available timeline data point
            for a `DAILY` aggregation period is `2021-06-23 00:00:00
            America/Los_Angeles`, the value of this field would be `2021-06-24
            00:00:00 America/Los_Angeles` so it can be easily reused in
            [TimelineSpec.end_time.
          $ref: '#/components/schemas/GoogleTypeDateTime'
      id: GooglePlayDeveloperReportingV1alpha1FreshnessInfoFreshness
      type: object
    GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetRequest:
      properties:
        pageSize:
          format: int32
          description: >-
            Maximum size of the returned data. If unspecified, at most 1000 rows
            will be returned. The maximum value is 100000; values above 100000
            will be coerced to 100000.
          type: integer
        metrics:
          items:
            type: string
          description: >-
            Metrics to aggregate. **Supported metrics:** * `stuckBgWakelockRate`
            (`google.type.Decimal`): Percentage of distinct users in the
            aggregation period that had a wakelock held in the background for
            longer than 1 hour. * `stuckBgWakelockRate7dUserWeighted`
            (`google.type.Decimal`): Rolling average value of
            `stuckBgWakelockRate` in the last 7 days. The daily values are
            weighted by the count of distinct users for the day. *
            `stuckBgWakelockRate28dUserWeighted` (`google.type.Decimal`):
            Rolling average value of `stuckBgWakelockRate` in the last 28 days.
            The daily values are weighted by the count of distinct users for the
            day. * `distinctUsers` (`google.type.Decimal`): Count of distinct
            users in the aggregation period that were used as normalization
            value for the `stuckBgWakelockRate` metric. A user is counted in
            this metric if they app was doing any work on the device, i.e., not
            just active foreground usage but also background work. Care must be
            taken not to aggregate this count further, as it may result in users
            being counted multiple times. The value is rounded to the nearest
            multiple of 10, 100, 1,000 or 1,000,000, depending on the magnitude
            of the value.
          type: array
        dimensions:
          description: >-
            Dimensions to slice the data by. **Supported dimensions:** *
            `apiLevel` (string): the API level of Android that was running on
            the user's device, e.g., 26. * `versionCode` (int64): version of the
            app that was running on the user's device. * `deviceModel` (string):
            unique identifier of the user's device model. The form of the
            identifier is 'deviceBrand/device', where deviceBrand corresponds to
            Build.BRAND and device corresponds to Build.DEVICE, e.g.,
            google/coral. * `deviceBrand` (string): unique identifier of the
            user's device brand, e.g., google. * `deviceType` (string): the type
            (also known as form factor) of the user's device, e.g., PHONE. *
            `countryCode` (string): the country or region of the user's device
            based on their IP address, represented as a 2-letter ISO-3166 code
            (e.g. US for the United States). * `deviceRamBucket` (int64): RAM of
            the device, in MB, in buckets (3GB, 4GB, etc.). * `deviceSocMake`
            (string): Make of the device's primary system-on-chip, e.g.,
            Samsung.
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
            * `deviceSocModel` (string): Model of the device's primary
            system-on-chip, e.g., "Exynos 2100".
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
            * `deviceCpuMake` (string): Make of the device's CPU, e.g.,
            Qualcomm. * `deviceCpuModel` (string): Model of the device's CPU,
            e.g., "Kryo 240". * `deviceGpuMake` (string): Make of the device's
            GPU, e.g., ARM. * `deviceGpuModel` (string): Model of the device's
            GPU, e.g., Mali. * `deviceGpuVersion` (string): Version of the
            device's GPU, e.g., T750. * `deviceVulkanVersion` (string): Vulkan
            version of the device, e.g., "4198400". * `deviceGlEsVersion`
            (string): OpenGL ES version of the device, e.g., "196610". *
            `deviceScreenSize` (string): Screen size of the device, e.g.,
            NORMAL, LARGE. * `deviceScreenDpi` (string): Screen density of the
            device, e.g., mdpi, hdpi.
          type: array
          items:
            type: string
        filter:
          type: string
          description: >-
            Filters to apply to data. The filtering expression follows
            [AIP-160](https://google.aip.dev/160) standard and supports
            filtering by equality of all breakdown dimensions.
        pageToken:
          type: string
          description: >-
            A page token, received from a previous call. Provide this to
            retrieve the subsequent page. When paginating, all other parameters
            provided to the request must match the call that provided the page
            token.
        timelineSpec:
          description: >-
            Specification of the timeline aggregation parameters. **Supported
            aggregation periods:** * DAILY: metrics are aggregated in calendar
            date intervals. Due to historical constraints, the only supported
            timezone is `America/Los_Angeles`.
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1TimelineSpec
        userCohort:
          description: >-
            User view to select. The output data will correspond to the selected
            view. **Supported values:** * `OS_PUBLIC` To select data from all
            publicly released Android versions. This is the default. Supports
            all the above dimensions. * `APP_TESTERS` To select data from users
            who have opted in to be testers. Supports all the above dimensions.
            * `OS_BETA` To select data from beta android versions only,
            excluding data from released android versions. Only the following
            dimensions are supported: * `versionCode` (int64): version of the
            app that was running on the user's device. * `osBuild` (string): OS
            build of the user's device, e.g., "T1B2.220916.004".
          enum:
            - USER_COHORT_UNSPECIFIED
            - OS_PUBLIC
            - OS_BETA
            - APP_TESTERS
          type: string
          enumDescriptions:
            - >-
              Unspecified User cohort. This will automatically choose the
              default value.
            - >-
              This is default view. Contains data from public released android
              versions only.
            - >-
              This is the view with just android beta data excluding released OS
              version data.
            - >-
              This is the view with data only from users who have opted in to be
              testers for a given app, excluding OS beta data.
      description: Request message for QueryStuckBackgroundWakelockRateMetricSet.
      id: >-
        GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetRequest
      type: object
    GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest:
      description: Request message for QueryErrorCountMetricSet.
      properties:
        pageSize:
          description: >-
            Maximum size of the returned data. If unspecified, at most 1000 rows
            will be returned. The maximum value is 100000; values above 100000
            will be coerced to 100000.
          type: integer
          format: int32
        metrics:
          description: >-
            Metrics to aggregate. **Supported metrics:** * `errorReportCount`
            (`google.type.Decimal`): Absolute count of individual error reports
            that have been received for an app. * `distinctUsers`
            (`google.type.Decimal`): Count of distinct users for which reports
            have been received. Care must be taken not to aggregate this count
            further, as it may result in users being counted multiple times.
            This value is not rounded, however it may be an approximation.
          type: array
          items:
            type: string
        pageToken:
          type: string
          description: >-
            A page token, received from a previous call. Provide this to
            retrieve the subsequent page. When paginating, all other parameters
            provided to the request must match the call that provided the page
            token.
        filter:
          type: string
          description: >-
            Filters to apply to data. The filtering expression follows
            [AIP-160](https://google.aip.dev/160) standard and supports
            filtering by equality of all breakdown dimensions.
        dimensions:
          description: >-
            Dimensions to slice the data by. **Supported dimensions:** *
            `apiLevel` (string): the API level of Android that was running on
            the user's device, e.g., 26. * `versionCode` (int64): unique
            identifier of the user's device model. The form of the identifier is
            'deviceBrand/device', where deviceBrand corresponds to Build.BRAND
            and device corresponds to Build.DEVICE, e.g., google/coral. *
            `deviceModel` (string): unique identifier of the user's device
            model. * `deviceType` (string): identifier of the device's form
            factor, e.g., PHONE. * `reportType` (string): the type of error. The
            value should correspond to one of the possible values in ErrorType.
            * `isUserPerceived` (string): denotes whether error is user
            perceived or not, USER_PERCEIVED or NOT_USER_PERCEIVED. * `issueId`
            (string): the id an error was assigned to. The value should
            correspond to the `{issue}` component of the issue name. *
            `deviceRamBucket` (int64): RAM of the device, in MB, in buckets
            (3GB, 4GB, etc.). * `deviceSocMake` (string): Make of the device's
            primary system-on-chip, e.g., Samsung.
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
            * `deviceSocModel` (string): Model of the device's primary
            system-on-chip, e.g., "Exynos 2100".
            [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
            * `deviceCpuMake` (string): Make of the device's CPU, e.g.,
            Qualcomm. * `deviceCpuModel` (string): Model of the device's CPU,
            e.g., "Kryo 240". * `deviceGpuMake` (string): Make of the device's
            GPU, e.g., ARM. * `deviceGpuModel` (string): Model of the device's
            GPU, e.g., Mali. * `deviceGpuVersion` (string): Version of the
            device's GPU, e.g., T750. * `deviceVulkanVersion` (string): Vulkan
            version of the device, e.g., "4198400". * `deviceGlEsVersion`
            (string): OpenGL ES version of the device, e.g., "196610". *
            `deviceScreenSize` (string): Screen size of the device, e.g.,
            NORMAL, LARGE. * `deviceScreenDpi` (string): Screen density of the
            device, e.g., mdpi, hdpi.
          items:
            type: string
          type: array
        timelineSpec:
          description: >-
            Specification of the timeline aggregation parameters. **Supported
            aggregation periods:** * DAILY: metrics are aggregated in calendar
            date intervals. The default and only supported timezone is
            `America/Los_Angeles`.
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1TimelineSpec
      id: GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest
      type: object
    GooglePlayDeveloperReportingV1alpha1QueryAnrRateMetricSetResponse:
      type: object
      description: Response message for QueryAnrRateMetricSet.
      id: GooglePlayDeveloperReportingV1alpha1QueryAnrRateMetricSetResponse
      properties:
        nextPageToken:
          description: Continuation token to fetch the next page of data.
          type: string
        rows:
          type: array
          description: Returned rows of data.
          items:
            $ref: >-
              #/components/schemas/GooglePlayDeveloperReportingV1alpha1MetricsRow
    GooglePlayDeveloperReportingV1alpha1App:
      id: GooglePlayDeveloperReportingV1alpha1App
      properties:
        displayName:
          type: string
          description: >-
            Title of the app. This is the latest title as set in the Play
            Console and may not yet have been reviewed, so might not match the
            Play Store. Example: `Google Maps`.
        name:
          type: string
          description: 'The resource name. Format: apps/{app}'
        packageName:
          description: 'Package name of the app. Example: `com.example.app123`.'
          type: string
      type: object
      description: A representation of an app in the Play Store.
    GooglePlayDeveloperReportingV1alpha1ErrorCountMetricSet:
      description: >-
        Singleton resource representing the set of error report metrics. This
        metric set contains un-normalized error report counts. **Supported
        aggregation periods:** * DAILY: metrics are aggregated in calendar date
        intervals. The default and only supported timezone is
        `America/Los_Angeles`. **Supported metrics:** * `errorReportCount`
        (`google.type.Decimal`): Absolute count of individual error reports that
        have been received for an app. * `distinctUsers`
        (`google.type.Decimal`): Count of distinct users for which reports have
        been received. Care must be taken not to aggregate this count further,
        as it may result in users being counted multiple times. This value is
        not rounded, however it may be an approximation. **Required dimension:**
        This dimension must be always specified in all requests in the
        `dimensions` field in query requests. * `reportType` (string): the type
        of error. The value should correspond to one of the possible values in
        ErrorType. **Supported dimensions:** * `apiLevel` (string): the API
        level of Android that was running on the user's device, e.g., 26. *
        `versionCode` (int64): version of the app that was running on the user's
        device. * `deviceModel` (string): unique identifier of the user's device
        model. The form of the identifier is 'deviceBrand/device', where
        deviceBrand corresponds to Build.BRAND and device corresponds to
        Build.DEVICE, e.g., google/coral. * `deviceType` (string): identifier of
        the device's form factor, e.g., PHONE. * `issueId` (string): the id an
        error was assigned to. The value should correspond to the `{issue}`
        component of the issue name. * `deviceRamBucket` (int64): RAM of the
        device, in MB, in buckets (3GB, 4GB, etc.). * `deviceSocMake` (string):
        Make of the device's primary system-on-chip, e.g., Samsung.
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MANUFACTURER)
        * `deviceSocModel` (string): Model of the device's primary
        system-on-chip, e.g., "Exynos 2100".
        [Reference](https://developer.android.com/reference/android/os/Build#SOC_MODEL)
        * `deviceCpuMake` (string): Make of the device's CPU, e.g., Qualcomm. *
        `deviceCpuModel` (string): Model of the device's CPU, e.g., "Kryo 240".
        * `deviceGpuMake` (string): Make of the device's GPU, e.g., ARM. *
        `deviceGpuModel` (string): Model of the device's GPU, e.g., Mali. *
        `deviceGpuVersion` (string): Version of the device's GPU, e.g., T750. *
        `deviceVulkanVersion` (string): Vulkan version of the device, e.g.,
        "4198400". * `deviceGlEsVersion` (string): OpenGL ES version of the
        device, e.g., "196610". * `deviceScreenSize` (string): Screen size of
        the device, e.g., NORMAL, LARGE. * `deviceScreenDpi` (string): Screen
        density of the device, e.g., mdpi, hdpi. **Required permissions**: to
        access this resource, the calling user needs the _View app information
        (read-only)_ permission for the app. **Related metric sets:** *
        vitals.errors.counts contains normalized metrics about Crashes, another
        stability metric. * vitals.errors.counts contains normalized metrics
        about ANRs, another stability metric.
      type: object
      properties:
        freshnessInfo:
          $ref: >-
            #/components/schemas/GooglePlayDeveloperReportingV1alpha1FreshnessInfo
          description: Summary about data freshness in this resource.
        name:
          type: string
          description: 'The resource name. Format: apps/{app}/errorCountMetricSet'
      id: GooglePlayDeveloperReportingV1alpha1ErrorCountMetricSet
    GooglePlayDeveloperReportingV1alpha1ListAnomaliesResponse:
      id: GooglePlayDeveloperReportingV1alpha1ListAnomaliesResponse
      description: Response with a list of anomalies in datasets.
      properties:
        anomalies:
          description: Anomalies that were found.
          items:
            $ref: '#/components/schemas/GooglePlayDeveloperReportingV1alpha1Anomaly'
          type: array
        nextPageToken:
          type: string
          description: Continuation token to fetch the next page of data.
      type: object
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/playdeveloperreporting: >-
              See metrics and data about the apps in your Google Play Developer
              account
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1alpha1/apps/{appsId}/slowRenderingRateMetricSet:
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
    get:
      description: Describes the properties of the metric set.
      operationId: playdeveloperreporting.vitals.slowrenderingrate.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1SlowRenderingRateMetricSet
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: slowrenderingrate
      x-stackQL-verb: select
  /v1alpha1/apps/{appsId}/slowRenderingRateMetricSet:query:
    parameters: *ref_1
    post:
      description: Queries the metrics in the metric set.
      operationId: playdeveloperreporting.vitals.slowrenderingrate.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GooglePlayDeveloperReportingV1alpha1QuerySlowRenderingRateMetricSetRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1QuerySlowRenderingRateMetricSetResponse
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: slowrenderingrate
      x-stackQL-verb: exec
  /v1alpha1/apps/{appsId}/excessiveWakeupRateMetricSet:query:
    parameters: *ref_1
    post:
      description: Queries the metrics in the metric set.
      operationId: playdeveloperreporting.vitals.excessivewakeuprate.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GooglePlayDeveloperReportingV1alpha1QueryExcessiveWakeupRateMetricSetRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1QueryExcessiveWakeupRateMetricSetResponse
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: excessivewakeuprate
      x-stackQL-verb: exec
  /v1alpha1/apps/{appsId}/excessiveWakeupRateMetricSet:
    parameters: *ref_1
    get:
      description: Describes the properties of the metric set.
      operationId: playdeveloperreporting.vitals.excessivewakeuprate.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1ExcessiveWakeupRateMetricSet
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: excessivewakeuprate
      x-stackQL-verb: select
  /v1alpha1/apps/{appsId}/stuckBackgroundWakelockRateMetricSet:query:
    parameters: *ref_1
    post:
      description: Queries the metrics in the metric set.
      operationId: playdeveloperreporting.vitals.stuckbackgroundwakelockrate.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1QueryStuckBackgroundWakelockRateMetricSetResponse
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: stuckbackgroundwakelockrate
      x-stackQL-verb: exec
  /v1alpha1/apps/{appsId}/stuckBackgroundWakelockRateMetricSet:
    parameters: *ref_1
    get:
      description: Describes the properties of the metric set.
      operationId: playdeveloperreporting.vitals.stuckbackgroundwakelockrate.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1StuckBackgroundWakelockRateMetricSet
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: stuckbackgroundwakelockrate
      x-stackQL-verb: select
  /v1alpha1/apps/{appsId}/crashRateMetricSet:
    parameters: *ref_1
    get:
      description: Describes the properties of the metric set.
      operationId: playdeveloperreporting.vitals.crashrate.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1CrashRateMetricSet
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: crashrate
      x-stackQL-verb: select
  /v1alpha1/apps/{appsId}/crashRateMetricSet:query:
    parameters: *ref_1
    post:
      description: Queries the metrics in the metric set.
      operationId: playdeveloperreporting.vitals.crashrate.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GooglePlayDeveloperReportingV1alpha1QueryCrashRateMetricSetRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1QueryCrashRateMetricSetResponse
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: crashrate
      x-stackQL-verb: exec
  /v1alpha1/apps/{appsId}/errorIssues:search:
    parameters: *ref_1
    get:
      description: Searches all error issues in which reports have been grouped.
      operationId: playdeveloperreporting.vitals.errors.issues.search
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1SearchErrorIssuesResponse
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: interval.startTime.timeZone.version
          schema:
            type: string
        - in: query
          name: interval.endTime.minutes
          schema:
            type: integer
        - in: query
          name: interval.endTime.hours
          schema:
            type: integer
        - in: query
          name: interval.endTime.timeZone.id
          schema:
            type: string
        - in: query
          name: interval.startTime.minutes
          schema:
            type: integer
        - in: query
          name: interval.endTime.day
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: interval.endTime.month
          schema:
            type: integer
        - in: query
          name: interval.startTime.timeZone.id
          schema:
            type: string
        - in: query
          name: interval.startTime.seconds
          schema:
            type: integer
        - in: query
          name: interval.startTime.hours
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: interval.startTime.utcOffset
          schema:
            type: string
        - in: query
          name: interval.endTime.timeZone.version
          schema:
            type: string
        - in: query
          name: interval.startTime.nanos
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: interval.endTime.utcOffset
          schema:
            type: string
        - in: query
          name: interval.endTime.nanos
          schema:
            type: integer
        - in: query
          name: interval.startTime.month
          schema:
            type: integer
        - in: query
          name: interval.startTime.year
          schema:
            type: integer
        - in: query
          name: interval.startTime.day
          schema:
            type: integer
        - in: query
          name: interval.endTime.year
          schema:
            type: integer
        - in: query
          name: interval.endTime.seconds
          schema:
            type: integer
      x-stackQL-resource: issues
      x-stackQL-verb: exec
  /v1alpha1/apps/{appsId}/errorReports:search:
    parameters: *ref_1
    get:
      description: Searches all error reports received for an app.
      operationId: playdeveloperreporting.vitals.errors.reports.search
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1SearchErrorReportsResponse
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: interval.endTime.nanos
          schema:
            type: integer
        - in: query
          name: interval.endTime.utcOffset
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: interval.endTime.year
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: interval.startTime.hours
          schema:
            type: integer
        - in: query
          name: interval.endTime.day
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: interval.startTime.minutes
          schema:
            type: integer
        - in: query
          name: interval.startTime.timeZone.id
          schema:
            type: string
        - in: query
          name: interval.startTime.nanos
          schema:
            type: integer
        - in: query
          name: interval.endTime.timeZone.version
          schema:
            type: string
        - in: query
          name: interval.endTime.timeZone.id
          schema:
            type: string
        - in: query
          name: interval.startTime.month
          schema:
            type: integer
        - in: query
          name: interval.startTime.utcOffset
          schema:
            type: string
        - in: query
          name: interval.endTime.hours
          schema:
            type: integer
        - in: query
          name: interval.startTime.seconds
          schema:
            type: integer
        - in: query
          name: interval.endTime.seconds
          schema:
            type: integer
        - in: query
          name: interval.endTime.minutes
          schema:
            type: integer
        - in: query
          name: interval.startTime.timeZone.version
          schema:
            type: string
        - in: query
          name: interval.endTime.month
          schema:
            type: integer
        - in: query
          name: interval.startTime.year
          schema:
            type: integer
        - in: query
          name: interval.startTime.day
          schema:
            type: integer
      x-stackQL-resource: reports
      x-stackQL-verb: exec
  /v1alpha1/apps/{appsId}/errorCountMetricSet:query:
    parameters: *ref_1
    post:
      description: Queries the metrics in the metrics set.
      operationId: playdeveloperreporting.vitals.errors.counts.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1QueryErrorCountMetricSetResponse
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: counts
      x-stackQL-verb: exec
  /v1alpha1/apps/{appsId}/errorCountMetricSet:
    parameters: *ref_1
    get:
      description: Describes the properties of the metrics set.
      operationId: playdeveloperreporting.vitals.errors.counts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1ErrorCountMetricSet
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: counts
      x-stackQL-verb: select
  /v1alpha1/apps/{appsId}/slowStartRateMetricSet:query:
    parameters: *ref_1
    post:
      description: Queries the metrics in the metric set.
      operationId: playdeveloperreporting.vitals.slowstartrate.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1QuerySlowStartRateMetricSetResponse
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: slowstartrate
      x-stackQL-verb: exec
  /v1alpha1/apps/{appsId}/slowStartRateMetricSet:
    parameters: *ref_1
    get:
      description: Describes the properties of the metric set.
      operationId: playdeveloperreporting.vitals.slowstartrate.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1SlowStartRateMetricSet
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: slowstartrate
      x-stackQL-verb: select
  /v1alpha1/apps/{appsId}/anrRateMetricSet:
    parameters: *ref_1
    get:
      description: Describes the properties of the metric set.
      operationId: playdeveloperreporting.vitals.anrrate.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1AnrRateMetricSet
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: anrrate
      x-stackQL-verb: select
  /v1alpha1/apps/{appsId}/anrRateMetricSet:query:
    parameters: *ref_1
    post:
      description: Queries the metrics in the metric set.
      operationId: playdeveloperreporting.vitals.anrrate.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GooglePlayDeveloperReportingV1alpha1QueryAnrRateMetricSetRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1QueryAnrRateMetricSetResponse
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: anrrate
      x-stackQL-verb: exec
  /v1alpha1/apps/{appsId}/anomalies:
    parameters: *ref_1
    get:
      description: Lists anomalies in any of the datasets.
      operationId: playdeveloperreporting.anomalies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1ListAnomaliesResponse
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: anomalies
      x-stackQL-verb: select
  /v1alpha1/apps/{appsId}:fetchReleaseFilterOptions:
    parameters: *ref_1
    get:
      description: Describes filtering options for releases.
      operationId: playdeveloperreporting.apps.fetchReleaseFilterOptions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1ReleaseFilterOptions
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps__release_filter_options
      x-stackQL-verb: select
  /v1alpha1/apps:search:
    parameters: *ref_1
    get:
      description: Searches for Apps accessible by the user.
      operationId: playdeveloperreporting.apps.search
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/playdeveloperreporting
          Oauth2c:
            - https://www.googleapis.com/auth/playdeveloperreporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GooglePlayDeveloperReportingV1alpha1SearchAccessibleAppsResponse
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
