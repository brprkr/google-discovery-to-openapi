openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Android Device Provisioning Partner API
  description: >-
    Automates Android zero-touch enrollment for device resellers, customers, and
    EMMs.
  version: v1
  x-discovery-doc-revision: '20230621'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/zero-touch/
servers:
  - url: https://androiddeviceprovisioning.googleapis.com
components:
  schemas:
    Status:
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        details:
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
    PerDeviceStatusInBatch:
      properties:
        deviceId:
          format: int64
          type: string
          description: If processing succeeds, the device ID of the device.
        errorMessage:
          description: If processing fails, a developer message explaining what went wrong.
          type: string
        errorIdentifier:
          description: If processing fails, the error type.
          type: string
        status:
          enum:
            - SINGLE_DEVICE_STATUS_UNSPECIFIED
            - SINGLE_DEVICE_STATUS_UNKNOWN_ERROR
            - SINGLE_DEVICE_STATUS_OTHER_ERROR
            - SINGLE_DEVICE_STATUS_SUCCESS
            - SINGLE_DEVICE_STATUS_PERMISSION_DENIED
            - SINGLE_DEVICE_STATUS_INVALID_DEVICE_IDENTIFIER
            - SINGLE_DEVICE_STATUS_INVALID_SECTION_TYPE
            - SINGLE_DEVICE_STATUS_SECTION_NOT_YOURS
            - SINGLE_DEVICE_STATUS_INVALID_TOKEN
            - SINGLE_DEVICE_STATUS_REVOKED_TOKEN
            - SINGLE_DEVICE_STATUS_DEVICE_LIMIT_EXCEEDED
          type: string
          description: The result status of the device after processing.
          enumDescriptions:
            - Invalid code. Shouldn't be used.
            - Unknown error. We don't expect this error to occur here.
            - >-
              Other error. We know/expect this error, but there's no defined
              error code for the error.
            - Success.
            - Permission denied.
            - Invalid device identifier.
            - Invalid section type.
            - This section is claimed by another company.
            - Invalid pre-provisioning token.
            - Revoked pre-provisioning token.
            - >-
              Status used to indicate a failure due to a device limit being
              exceeded
      description: Captures the processing status for each device in the operation.
      id: PerDeviceStatusInBatch
      type: object
    CustomerApplyConfigurationRequest:
      type: object
      description: Request message for customer to assign a configuration to device.
      properties:
        configuration:
          type: string
          description: >-
            Required. The configuration applied to the device in the format
            `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`.
        device:
          description: >-
            Required. The device the configuration is applied to. There are
            custom validations in ApplyConfigurationRequestValidator
          $ref: '#/components/schemas/DeviceReference'
      id: CustomerApplyConfigurationRequest
    CustomerListDevicesResponse:
      id: CustomerListDevicesResponse
      type: object
      description: Response message of customer's liting devices.
      properties:
        devices:
          items:
            $ref: '#/components/schemas/Device'
          type: array
          description: The customer's devices.
        nextPageToken:
          type: string
          description: >-
            A token used to access the next page of results. Omitted if no
            further results are available.
    Operation:
      type: object
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      properties:
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
        error:
          description: >-
            This field will always be not set if the operation is created by
            `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`. In this
            case, error information for each device is set in
            `response.perDeviceStatus.result.status`.
          $ref: '#/components/schemas/Status'
        metadata:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            This field will contain a `DevicesLongRunningOperationMetadata`
            object if the operation is created by `claimAsync`, `unclaimAsync`,
            or `updateMetadataAsync`.
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            This field will contain a `DevicesLongRunningOperationResponse`
            object if the operation is created by `claimAsync`, `unclaimAsync`,
            or `updateMetadataAsync`.
          type: object
    ListVendorCustomersResponse:
      description: Response message to list customers of the vendor.
      type: object
      properties:
        nextPageToken:
          description: >-
            A token to retrieve the next page of results. Omitted if no further
            results are available.
          type: string
        totalSize:
          format: int32
          type: integer
          description: The total count of items in the list irrespective of pagination.
        customers:
          description: List of customers of the vendor.
          items:
            $ref: '#/components/schemas/Company'
          type: array
      id: ListVendorCustomersResponse
    PartnerUnclaim:
      type: object
      description: Identifies one unclaim request.
      properties:
        deviceIdentifier:
          description: Required. Device identifier of the device.
          $ref: '#/components/schemas/DeviceIdentifier'
        vacationModeExpireTime:
          type: string
          format: google-datetime
          description: Optional. The expiration time of the vacation unlock.
        vacationModeDays:
          type: integer
          format: int32
          description: >-
            Optional. The duration of the vacation unlock starting from when the
            request is processed. (1 day is treated as 24 hours)
        sectionType:
          enum:
            - SECTION_TYPE_UNSPECIFIED
            - SECTION_TYPE_SIM_LOCK
            - SECTION_TYPE_ZERO_TOUCH
          description: Required. The section type of the device's provisioning record.
          enumDescriptions:
            - Unspecified section type.
            - SIM-lock section type.
            - Zero-touch enrollment section type.
          type: string
        deviceId:
          type: string
          format: int64
          description: Required. Device ID of the device.
      id: PartnerUnclaim
    CreateCustomerRequest:
      properties:
        customer:
          $ref: '#/components/schemas/Company'
          description: >-
            Required. The company data to populate the new customer. Must
            contain a value for `companyName` and at least one `owner_email`
            that's associated with a Google Account. The values for `companyId`
            and `name` must be empty.
      id: CreateCustomerRequest
      type: object
      description: Request message to create a customer.
    Configuration:
      id: Configuration
      type: object
      properties:
        customMessage:
          type: string
          description: >-
            A message, containing one or two sentences, to help device users get
            help or give them more details about whatâ€™s happening to their
            device. Zero-touch enrollment shows this message before the device
            is provisioned.
        contactEmail:
          description: >-
            Required. The email address that device users can contact to get
            help. Zero-touch enrollment shows this email address to device users
            before device provisioning. The value is validated on input.
          type: string
        dpcResourcePath:
          description: >-
            Required. The resource name of the selected DPC (device policy
            controller) in the format `customers/[CUSTOMER_ID]/dpcs/*`. To list
            the supported DPCs, call `customers.dpcs.list`.
          type: string
        contactPhone:
          type: string
          description: >-
            Required. The telephone number that device users can call, using
            another device, to get help. Zero-touch enrollment shows this number
            to device users before device provisioning. Accepts numerals,
            spaces, the plus sign, hyphens, and parentheses.
        forcedResetTime:
          description: >-
            Optional. The timeout before forcing factory reset the device if the
            device doesn't go through provisioning in the setup wizard, usually
            due to lack of network connectivity during setup wizard. Ranges from
            0-6 hours, with 2 hours being the default if unset.
          type: string
          format: google-duration
        configurationId:
          type: string
          description: Output only. The ID of the configuration. Assigned by the server.
          readOnly: true
          format: int64
        configurationName:
          type: string
          description: >-
            Required. A short name that describes the configuration's purpose.
            For example, _Sales team_ or _Temporary employees_. The zero-touch
            enrollment portal displays this name to IT admins.
        dpcExtras:
          type: string
          description: >-
            The JSON-formatted EMM provisioning extras that are passed to the
            DPC.
        companyName:
          description: >-
            Required. The name of the organization. Zero-touch enrollment shows
            this organization name to device users during device provisioning.
          type: string
        isDefault:
          description: >-
            Required. Whether this is the default configuration that zero-touch
            enrollment applies to any new devices the organization purchases in
            the future. Only one customer configuration can be the default.
            Setting this value to `true`, changes the previous default
            configuration's `isDefault` value to `false`.
          type: boolean
        name:
          type: string
          description: >-
            Output only. The API resource name in the format
            `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`.
            Assigned by the server.
          readOnly: true
      description: >-
        A configuration collects the provisioning options for Android devices.
        Each configuration combines the following: * The EMM device policy
        controller (DPC) installed on the devices. * EMM policies enforced on
        the devices. * Metadata displayed on the device to help users during
        setup. Customers can add as many configurations as they need. However,
        zero-touch enrollment works best when a customer sets a default
        configuration that's applied to any new devices the organization
        purchases.
    CustomerListDpcsResponse:
      properties:
        dpcs:
          type: array
          description: >-
            The list of DPCs available to the customer that support zero-touch
            enrollment.
          items:
            $ref: '#/components/schemas/Dpc'
      type: object
      id: CustomerListDpcsResponse
      description: Response message of customer's listing DPCs.
    FindDevicesByDeviceIdentifierResponse:
      properties:
        totalSize:
          format: int32
          type: integer
          description: The total count of items in the list irrespective of pagination.
        devices:
          description: Found devices.
          type: array
          items:
            $ref: '#/components/schemas/Device'
        nextPageToken:
          description: >-
            A token used to access the next page of results. Omitted if no
            further results are available.
          type: string
      id: FindDevicesByDeviceIdentifierResponse
      type: object
      description: Response containing found devices.
    DeviceMetadata:
      type: object
      properties:
        entries:
          type: object
          description: Metadata entries recorded as key-value pairs.
          additionalProperties:
            type: string
      description: >-
        Metadata entries that can be attached to a `Device`. To learn more, read
        [Device
        metadata](https://developers.google.com/zero-touch/guides/metadata).
      id: DeviceMetadata
    CustomerUnclaimDeviceRequest:
      properties:
        device:
          description: >-
            Required. The device to unclaim. There are custom validations in
            UnclaimDeviceRequestValidator.
          $ref: '#/components/schemas/DeviceReference'
      description: Request message for customer to unclaim a device.
      type: object
      id: CustomerUnclaimDeviceRequest
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      id: Empty
      properties: {}
      type: object
    DeviceClaim:
      type: object
      id: DeviceClaim
      properties:
        additionalService:
          description: The Additional service registered for the device.
          enumDescriptions:
            - No additional service.
            - >-
              Device protection service, also known as Android Enterprise
              Essentials. To claim a device with the device protection service
              you must enroll with the partnership team.
          enum:
            - ADDITIONAL_SERVICE_UNSPECIFIED
            - DEVICE_PROTECTION
          type: string
        resellerId:
          description: The ID of the reseller that claimed the device.
          type: string
          format: int64
        googleWorkspaceCustomerId:
          type: string
          description: >-
            The ID of the Google Workspace account that owns the Chrome OS
            device.
        vacationModeExpireTime:
          type: string
          format: google-datetime
          description: >-
            The timestamp when the device will exit â€˜vacation modeâ€™. This value
            is present iff the device is in 'vacation mode'.
        vacationModeStartTime:
          description: >-
            The timestamp when the device was put into â€˜vacation modeâ€™. This
            value is present iff the device is in 'vacation mode'.
          format: google-datetime
          type: string
        ownerCompanyId:
          type: string
          format: int64
          description: The ID of the Customer that purchased the device.
        sectionType:
          enum:
            - SECTION_TYPE_UNSPECIFIED
            - SECTION_TYPE_SIM_LOCK
            - SECTION_TYPE_ZERO_TOUCH
          readOnly: true
          description: Output only. The type of claim made on the device.
          enumDescriptions:
            - Unspecified section type.
            - SIM-lock section type.
            - Zero-touch enrollment section type.
          type: string
      description: >-
        A record of a device claimed by a reseller for a customer. Devices
        claimed for zero-touch enrollment have a claim with the type
        `SECTION_TYPE_ZERO_TOUCH`. To learn more, read [Claim devices for
        customers](/zero-touch/guides/how-it-works#claim).
    PartnerClaim:
      type: object
      description: Identifies one claim request.
      id: PartnerClaim
      properties:
        sectionType:
          enum:
            - SECTION_TYPE_UNSPECIFIED
            - SECTION_TYPE_SIM_LOCK
            - SECTION_TYPE_ZERO_TOUCH
          description: Required. The section type of the device's provisioning record.
          type: string
          enumDescriptions:
            - Unspecified section type.
            - SIM-lock section type.
            - Zero-touch enrollment section type.
        customerId:
          format: int64
          description: The ID of the customer for whom the device is being claimed.
          type: string
        googleWorkspaceCustomerId:
          type: string
          description: The Google Workspace customer ID.
        preProvisioningToken:
          description: Optional. Must and can only be set for Chrome OS devices.
          type: string
        simlockProfileId:
          format: int64
          type: string
          description: >-
            Optional. Must and can only be set when
            DeviceProvisioningSectionType is SECTION_TYPE_SIM_LOCK. The unique
            identifier of the SimLock profile.
        deviceIdentifier:
          description: Required. Required. Device identifier of the device.
          $ref: '#/components/schemas/DeviceIdentifier'
        deviceMetadata:
          description: Required. The metadata to attach to the device at claim.
          $ref: '#/components/schemas/DeviceMetadata'
    Device:
      id: Device
      type: object
      description: An Android or Chrome OS device registered for zero-touch enrollment.
      properties:
        deviceId:
          description: Output only. The ID of the device. Assigned by the server.
          readOnly: true
          type: string
          format: int64
        claims:
          items:
            $ref: '#/components/schemas/DeviceClaim'
          type: array
          description: >-
            Output only. The provisioning claims for a device. Devices claimed
            for zero-touch enrollment have a claim with the type
            `SECTION_TYPE_ZERO_TOUCH`. Call `partners.devices.unclaim` or
            `partners.devices.unclaimAsync` to remove the device from zero-touch
            enrollment.
          readOnly: true
        deviceMetadata:
          description: >-
            The metadata attached to the device. Structured as key-value pairs.
            To learn more, read [Device
            metadata](https://developers.google.com/zero-touch/guides/metadata).
          $ref: '#/components/schemas/DeviceMetadata'
        name:
          readOnly: true
          description: >-
            Output only. The API resource name in the format
            `partners/[PARTNER_ID]/devices/[DEVICE_ID]`. Assigned by the server.
          type: string
        deviceIdentifier:
          description: >-
            The hardware IDs that identify a manufactured device. To learn more,
            read
            [Identifiers](https://developers.google.com/zero-touch/guides/identifiers).
          $ref: '#/components/schemas/DeviceIdentifier'
        configuration:
          description: Not available to resellers.
          type: string
    CustomerListConfigurationsResponse:
      type: object
      id: CustomerListConfigurationsResponse
      description: Response message of customer's listing configuration.
      properties:
        configurations:
          description: The configurations.
          type: array
          items:
            $ref: '#/components/schemas/Configuration'
    Dpc:
      id: Dpc
      properties:
        dpcName:
          description: >-
            Output only. The title of the DPC app in Google Play. For example,
            _Google Apps Device Policy_. Useful in an application's user
            interface.
          readOnly: true
          type: string
        packageName:
          description: >-
            Output only. The DPC's Android application ID that looks like a Java
            package name. Zero-touch enrollment installs the DPC app onto a
            device using this identifier.
          type: string
          readOnly: true
        name:
          readOnly: true
          type: string
          description: >-
            Output only. The API resource name in the format
            `customers/[CUSTOMER_ID]/dpcs/[DPC_ID]`. Assigned by the server. To
            maintain a reference to a DPC across customer accounts, persist and
            match the last path component (`DPC_ID`).
      description: >-
        An EMM's DPC ([device policy
        controller](http://developer.android.com/work/dpc/build-dpc.html)).
        Zero-touch enrollment installs a DPC (listed in the `Configuration`) on
        a device to maintain the customer's mobile policies. All the DPCs listed
        by the API support zero-touch enrollment and are available in Google
        Play.
      type: object
    CustomerListCustomersResponse:
      id: CustomerListCustomersResponse
      properties:
        nextPageToken:
          description: >-
            A token used to access the next page of results. Omitted if no
            further results are available.
          type: string
        customers:
          description: The customer accounts the calling user is a member of.
          type: array
          items:
            $ref: '#/components/schemas/Company'
      description: Response message for listing my customers.
      type: object
    GoogleWorkspaceAccount:
      properties:
        preProvisioningTokens:
          type: array
          readOnly: true
          items:
            type: string
          description: >-
            Output only. The pre-provisioning tokens previously used to claim
            devices.
        customerId:
          type: string
          description: Required. The customer ID.
      type: object
      id: GoogleWorkspaceAccount
      description: A Google Workspace customer.
    DevicesLongRunningOperationMetadata:
      type: object
      properties:
        processingStatus:
          type: string
          description: The processing status of the operation.
          enumDescriptions:
            - Invalid code. Shouldn't be used.
            - Pending.
            - In progress.
            - >-
              Processed. This doesn't mean all items were processed
              successfully, you should check the `response` field for the result
              of every item.
          enum:
            - BATCH_PROCESS_STATUS_UNSPECIFIED
            - BATCH_PROCESS_PENDING
            - BATCH_PROCESS_IN_PROGRESS
            - BATCH_PROCESS_PROCESSED
        devicesCount:
          format: int32
          description: >-
            The number of metadata updates in the operation. This might be
            different from the number of updates in the request if the API can't
            parse some of the updates.
          type: integer
        progress:
          description: >-
            The processing progress of the operation. Measured as a number from
            0 to 100. A value of 10O doesn't always mean the operation
            completedâ€”check for the inclusion of a `done` field.
          type: integer
          format: int32
      id: DevicesLongRunningOperationMetadata
      description: >-
        Tracks the status of a long-running operation to asynchronously update a
        batch of reseller metadata attached to devices. To learn more, read
        [Longâ€‘running batch
        operations](/zero-touch/guides/how-it-works#operations).
    ListCustomersResponse:
      id: ListCustomersResponse
      properties:
        customers:
          items:
            $ref: '#/components/schemas/Company'
          type: array
          description: List of customers related to this reseller partner.
        nextPageToken:
          type: string
          description: >-
            A token to retrieve the next page of results. Omitted if no further
            results are available.
        totalSize:
          format: int32
          description: The total count of items in the list irrespective of pagination.
          type: integer
      type: object
      description: Response message of all customers related to this partner.
    Company:
      id: Company
      type: object
      description: >-
        A reseller, vendor, or customer in the zero-touch reseller and customer
        APIs.
      properties:
        languageCode:
          description: >-
            Input only. The preferred locale of the customer represented as a
            BCP47 language code. This field is validated on input and requests
            containing unsupported language codes will be rejected. Supported
            language codes: Arabic (ar) Chinese (Hong Kong) (zh-HK) Chinese
            (Simplified) (zh-CN) Chinese (Traditional) (zh-TW) Czech (cs) Danish
            (da) Dutch (nl) English (UK) (en-GB) English (US) (en-US) Filipino
            (fil) Finnish (fi) French (fr) German (de) Hebrew (iw) Hindi (hi)
            Hungarian (hu) Indonesian (id) Italian (it) Japanese (ja) Korean
            (ko) Norwegian (Bokmal) (no) Polish (pl) Portuguese (Brazil) (pt-BR)
            Portuguese (Portugal) (pt-PT) Russian (ru) Spanish (es) Spanish
            (Latin America) (es-419) Swedish (sv) Thai (th) Turkish (tr)
            Ukrainian (uk) Vietnamese (vi)
          type: string
        name:
          readOnly: true
          type: string
          description: >-
            Output only. The API resource name of the company. The resource name
            is one of the following formats: *
            `partners/[PARTNER_ID]/customers/[CUSTOMER_ID]` *
            `partners/[PARTNER_ID]/vendors/[VENDOR_ID]` *
            `partners/[PARTNER_ID]/vendors/[VENDOR_ID]/customers/[CUSTOMER_ID]`
            Assigned by the server.
        skipWelcomeEmail:
          description: >-
            Input only. If set to true, welcome email will not be sent to the
            customer. It is recommended to skip the welcome email if devices
            will be claimed with additional DEVICE_PROTECTION service, as the
            customer will receive separate emails at device claim time. This
            field is ignored if this is not a Zero-touch customer.
          type: boolean
        ownerEmails:
          description: >-
            Required. Input only. Email address of customer's users in the owner
            role. At least one `owner_email` is required. Owners share the same
            access as admins but can also add, delete, and edit your
            organization's portal users.
          items:
            type: string
          type: array
        googleWorkspaceAccount:
          $ref: '#/components/schemas/GoogleWorkspaceAccount'
          description: >-
            Output only. The Google Workspace account associated with this
            customer. Only used for customer Companies.
          readOnly: true
        companyName:
          description: >-
            Required. The name of the company. For example _XYZ Corp_. Displayed
            to the company's employees in the zero-touch enrollment portal.
          type: string
        termsStatus:
          readOnly: true
          description: >-
            Output only. Whether any user from the company has accepted the
            latest Terms of Service (ToS). See TermsStatus.
          enumDescriptions:
            - >-
              Default value. This value should never be set if the enum is
              present.
            - None of the company's users have accepted the ToS.
            - One (or more) of the company's users has accepted the ToS.
            - >-
              None of the company's users has accepted the current ToS but at
              least one user accepted a previous ToS.
          type: string
          enum:
            - TERMS_STATUS_UNSPECIFIED
            - TERMS_STATUS_NOT_ACCEPTED
            - TERMS_STATUS_ACCEPTED
            - TERMS_STATUS_STALE
        companyId:
          format: int64
          description: Output only. The ID of the company. Assigned by the server.
          readOnly: true
          type: string
        adminEmails:
          type: array
          description: >-
            Optional. Email address of customer's users in the admin role. Each
            email address must be associated with a Google Account.
          items:
            type: string
    FindDevicesByDeviceIdentifierRequest:
      type: object
      id: FindDevicesByDeviceIdentifierRequest
      description: Request to find devices.
      properties:
        pageToken:
          type: string
          description: A token specifying which result page to return.
        deviceIdentifier:
          description: Required. Required. The device identifier to search for.
          $ref: '#/components/schemas/DeviceIdentifier'
        limit:
          format: int64
          description: >-
            Required. The maximum number of devices to show in a page of
            results. Must be between 1 and 100 inclusive.
          type: string
    UnclaimDeviceRequest:
      id: UnclaimDeviceRequest
      description: Request message to unclaim a device.
      properties:
        deviceIdentifier:
          description: >-
            Required. The device identifier you used when you claimed this
            device.
          $ref: '#/components/schemas/DeviceIdentifier'
        deviceId:
          type: string
          format: int64
          description: Required. The device ID returned by `ClaimDevice`.
        vacationModeExpireTime:
          format: google-datetime
          type: string
          description: The expiration time of the vacation unlock.
        vacationModeDays:
          type: integer
          format: int32
          description: >-
            The duration of the vacation unlock starting from when the request
            is processed. (1 day is treated as 24 hours)
        sectionType:
          enumDescriptions:
            - Unspecified section type.
            - SIM-lock section type.
            - Zero-touch enrollment section type.
          type: string
          description: Required. The section type of the device's provisioning record.
          enum:
            - SECTION_TYPE_UNSPECIFIED
            - SECTION_TYPE_SIM_LOCK
            - SECTION_TYPE_ZERO_TOUCH
      type: object
    OperationPerDevice:
      type: object
      id: OperationPerDevice
      description: >-
        A task for each device in the operation. Corresponds to each device
        change in the request.
      properties:
        unclaim:
          description: >-
            A copy of the original device-unclaim request received by the
            server.
          $ref: '#/components/schemas/PartnerUnclaim'
        result:
          $ref: '#/components/schemas/PerDeviceStatusInBatch'
          description: The processing result for each device.
        claim:
          $ref: '#/components/schemas/PartnerClaim'
          description: A copy of the original device-claim request received by the server.
        updateMetadata:
          $ref: '#/components/schemas/UpdateMetadataArguments'
          description: >-
            A copy of the original metadata-update request received by the
            server.
    FindDevicesByOwnerRequest:
      properties:
        limit:
          type: string
          format: int64
          description: >-
            Required. The maximum number of devices to show in a page of
            results. Must be between 1 and 100 inclusive.
        sectionType:
          type: string
          description: Required. The section type of the device's provisioning record.
          enum:
            - SECTION_TYPE_UNSPECIFIED
            - SECTION_TYPE_SIM_LOCK
            - SECTION_TYPE_ZERO_TOUCH
          enumDescriptions:
            - Unspecified section type.
            - SIM-lock section type.
            - Zero-touch enrollment section type.
        googleWorkspaceCustomerId:
          description: The list of IDs of Google Workspace accounts to search for.
          items:
            type: string
          type: array
        pageToken:
          description: A token specifying which result page to return.
          type: string
        customerId:
          items:
            type: string
            format: int64
          type: array
          description: The list of customer IDs to search for.
      type: object
      id: FindDevicesByOwnerRequest
      description: Request to find devices by customers.
    ClaimDeviceRequest:
      id: ClaimDeviceRequest
      description: Request message to claim a device on behalf of a customer.
      properties:
        customerId:
          description: The ID of the customer for whom the device is being claimed.
          type: string
          format: int64
        googleWorkspaceCustomerId:
          type: string
          description: The Google Workspace customer ID.
        deviceMetadata:
          description: Optional. The metadata to attach to the device.
          $ref: '#/components/schemas/DeviceMetadata'
        simlockProfileId:
          format: int64
          type: string
          description: >-
            Optional. Must and can only be set when
            DeviceProvisioningSectionType is SECTION_TYPE_SIM_LOCK. The unique
            identifier of the SimLock profile.
        sectionType:
          enumDescriptions:
            - Unspecified section type.
            - SIM-lock section type.
            - Zero-touch enrollment section type.
          enum:
            - SECTION_TYPE_UNSPECIFIED
            - SECTION_TYPE_SIM_LOCK
            - SECTION_TYPE_ZERO_TOUCH
          description: Required. The section type of the device's provisioning record.
          type: string
        preProvisioningToken:
          type: string
          description: Optional. Must and can only be set for Chrome OS devices.
        deviceIdentifier:
          description: Required. Required. The device identifier of the device to claim.
          $ref: '#/components/schemas/DeviceIdentifier'
      type: object
    DeviceIdentifier:
      type: object
      id: DeviceIdentifier
      description: >-
        Encapsulates hardware and product IDs to identify a manufactured device.
        To understand requirements on identifier sets, read
        [Identifiers](https://developers.google.com/zero-touch/guides/identifiers).
      properties:
        chromeOsAttestedDeviceId:
          type: string
          description: >-
            An identifier provided by OEMs, carried through the production and
            sales process. Only applicable to Chrome OS devices.
        imei:
          type: string
          description: The deviceâ€™s IMEI number. Validated on input.
        model:
          type: string
          description: >-
            The device model's name. Allowed values are listed in [Android
            models](/zero-touch/resources/manufacturer-names#model-names) and
            [Chrome OS
            models](https://support.google.com/chrome/a/answer/10130175#identify_compatible).
        meid:
          type: string
          description: The deviceâ€™s MEID number.
        manufacturer:
          type: string
          description: >-
            The device manufacturerâ€™s name. Matches the device's built-in value
            returned from `android.os.Build.MANUFACTURER`. Allowed values are
            listed in [Android
            manufacturers](/zero-touch/resources/manufacturer-names#manufacturers-names).
        deviceType:
          description: The type of the device
          enumDescriptions:
            - Device type is not specified.
            - Android device
            - Chrome OS device
          enum:
            - DEVICE_TYPE_UNSPECIFIED
            - DEVICE_TYPE_ANDROID
            - DEVICE_TYPE_CHROME_OS
          type: string
        serialNumber:
          description: >-
            The manufacturer's serial number for the device. This value might
            not be unique across different device models.
          type: string
    UpdateDeviceMetadataInBatchRequest:
      id: UpdateDeviceMetadataInBatchRequest
      description: Request to update device metadata in batch.
      properties:
        updates:
          description: Required. The list of metadata updates.
          items:
            $ref: '#/components/schemas/UpdateMetadataArguments'
          type: array
      type: object
    FindDevicesByOwnerResponse:
      properties:
        totalSize:
          type: integer
          description: The total count of items in the list irrespective of pagination.
          format: int32
        nextPageToken:
          type: string
          description: >-
            A token used to access the next page of results. Omitted if no
            further results are available.
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
          description: The customer's devices.
      type: object
      id: FindDevicesByOwnerResponse
      description: Response containing found devices.
    UpdateMetadataArguments:
      id: UpdateMetadataArguments
      description: Identifies metadata updates to one device.
      type: object
      properties:
        deviceIdentifier:
          $ref: '#/components/schemas/DeviceIdentifier'
          description: Required. Device identifier.
        deviceMetadata:
          $ref: '#/components/schemas/DeviceMetadata'
          description: Required. The metadata to update.
        deviceId:
          type: string
          description: Required. Device ID of the device.
          format: int64
    UnclaimDevicesRequest:
      properties:
        unclaims:
          description: Required. The list of devices to unclaim.
          items:
            $ref: '#/components/schemas/PartnerUnclaim'
          type: array
      description: Request to unclaim devices asynchronously in batch.
      id: UnclaimDevicesRequest
      type: object
    DeviceReference:
      type: object
      properties:
        deviceId:
          format: int64
          description: The ID of the device.
          type: string
        deviceIdentifier:
          $ref: '#/components/schemas/DeviceIdentifier'
          description: The hardware IDs of the device.
      description: >-
        A `DeviceReference` is an API abstraction that lets you supply a
        _device_ argument to a method using one of the following identifier
        types: * A numeric API resource ID. * Real-world hardware IDs, such as
        IMEI number, belonging to the manufactured device. Methods that operate
        on devices take a `DeviceReference` as a parameter type because it's
        more flexible for the caller. To learn more about device identifiers,
        read
        [Identifiers](https://developers.google.com/zero-touch/guides/identifiers).
      id: DeviceReference
    UpdateDeviceMetadataRequest:
      description: Request to set metadata for a device.
      type: object
      id: UpdateDeviceMetadataRequest
      properties:
        deviceMetadata:
          description: Required. The metadata to attach to the device.
          $ref: '#/components/schemas/DeviceMetadata'
    ListVendorsResponse:
      description: Response message to list vendors of the partner.
      properties:
        nextPageToken:
          description: >-
            A token to retrieve the next page of results. Omitted if no further
            results are available.
          type: string
        vendors:
          items:
            $ref: '#/components/schemas/Company'
          type: array
          description: >-
            List of vendors of the reseller partner. Fields `name`, `companyId`
            and `companyName` are populated to the Company object.
        totalSize:
          type: integer
          format: int32
          description: The total count of items in the list irrespective of pagination.
      id: ListVendorsResponse
      type: object
    ClaimDeviceResponse:
      id: ClaimDeviceResponse
      type: object
      description: Response message containing device id of the claim.
      properties:
        deviceName:
          type: string
          description: >-
            The resource name of the device in the format
            `partners/[PARTNER_ID]/devices/[DEVICE_ID]`.
        deviceId:
          format: int64
          description: The device ID of the claimed device.
          type: string
    ClaimDevicesRequest:
      description: >-
        Request to claim devices asynchronously in batch. Claiming a device adds
        the device to zero-touch enrollment and shows the device in the
        customer's view of the portal.
      type: object
      properties:
        claims:
          items:
            $ref: '#/components/schemas/PartnerClaim'
          description: Required. A list of device claims.
          type: array
      id: ClaimDevicesRequest
    DevicesLongRunningOperationResponse:
      description: >-
        Tracks the status of a long-running operation to claim, unclaim, or
        attach metadata to devices. To learn more, read [Longâ€‘running batch
        operations](/zero-touch/guides/how-it-works#operations).
      id: DevicesLongRunningOperationResponse
      type: object
      properties:
        successCount:
          type: integer
          format: int32
          description: >-
            A summary of how many items in the operation the server processed
            successfully. Updated as the operation progresses.
        perDeviceStatus:
          type: array
          items:
            $ref: '#/components/schemas/OperationPerDevice'
          description: >-
            The processing status for each device in the operation. One
            `PerDeviceStatus` per device. The list order matches the items in
            the original request.
    CustomerRemoveConfigurationRequest:
      id: CustomerRemoveConfigurationRequest
      type: object
      properties:
        device:
          description: >-
            Required. The device to remove the configuration from. There are
            custom validations in RemoveConfigurationRequestValidator
          $ref: '#/components/schemas/DeviceReference'
      description: Request message for customer to remove the configuration from device.
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/analytics: View and manage your Google Analytics data
            https://www.googleapis.com/auth/analytics.readonly: See and download your Google Analytics data
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/partners/{partnersId}/customers:
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
    post:
      description: >-
        Creates a customer for zero-touch enrollment. After the method returns
        successfully, admin and owner roles can manage devices and EMM configs
        by calling API methods or using their zero-touch enrollment portal. The
        customer receives an email that welcomes them to zero-touch enrollment
        and explains how to sign into the portal.
      operationId: androiddeviceprovisioning.partners.customers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
      parameters:
        - in: path
          name: partnersId
          required: true
          schema:
            type: string
      x-stackQL-resource: customers
      x-stackQL-verb: insert
    get:
      description: >-
        Lists the customers that are enrolled to the reseller identified by the
        `partnerId` argument. This list includes customers that the reseller
        created and customers that enrolled themselves using the portal.
      operationId: androiddeviceprovisioning.partners.customers.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomersResponse'
      parameters:
        - in: path
          name: partnersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: customers
      x-stackQL-verb: select
  /v1/partners/{partnersId}/vendors:
    parameters: *ref_1
    get:
      description: Lists the vendors of the partner.
      operationId: androiddeviceprovisioning.partners.vendors.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVendorsResponse'
      parameters:
        - in: path
          name: partnersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: vendors
      x-stackQL-verb: select
  /v1/partners/{partnersId}/vendors/{vendorsId}/customers:
    parameters: *ref_1
    get:
      description: Lists the customers of the vendor.
      operationId: androiddeviceprovisioning.partners.vendors.customers.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVendorCustomersResponse'
      parameters:
        - in: path
          name: partnersId
          required: true
          schema:
            type: string
        - in: path
          name: vendorsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: customers
      x-stackQL-verb: select
  /v1/partners/{partnersId}/devices:unclaimAsync:
    parameters: *ref_1
    post:
      description: >-
        Unclaims a batch of devices for a customer asynchronously. Removes the
        devices from zero-touch enrollment. To learn more, read [Longâ€‘running
        batch operations](/zero-touch/guides/how-it-works#operations).
      operationId: androiddeviceprovisioning.partners.devices.unclaimAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnclaimDevicesRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: partnersId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/partners/{partnersId}/devices:findByIdentifier:
    parameters: *ref_1
    post:
      description: Finds devices by hardware identifiers, such as IMEI.
      operationId: androiddeviceprovisioning.partners.devices.findByIdentifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindDevicesByDeviceIdentifierRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindDevicesByDeviceIdentifierResponse'
      parameters:
        - in: path
          name: partnersId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/partners/{partnersId}/devices/{devicesId}/metadata:
    parameters: *ref_1
    post:
      description: >-
        Updates reseller metadata associated with the device. Android devices
        only.
      operationId: androiddeviceprovisioning.partners.devices.metadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceMetadataRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceMetadata'
      parameters:
        - in: path
          name: partnersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/partners/{partnersId}/devices:findByOwner:
    parameters: *ref_1
    post:
      description: >-
        Finds devices claimed for customers. The results only contain devices
        registered to the reseller that's identified by the `partnerId`
        argument. The customer's devices purchased from other resellers don't
        appear in the results.
      operationId: androiddeviceprovisioning.partners.devices.findByOwner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindDevicesByOwnerRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindDevicesByOwnerResponse'
      parameters:
        - in: path
          name: partnersId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/partners/{partnersId}/devices:updateMetadataAsync:
    parameters: *ref_1
    post:
      description: >-
        Updates the reseller metadata attached to a batch of devices. This
        method updates devices asynchronously and returns an `Operation` that
        can be used to track progress. Read [Longâ€‘running batch
        operations](/zero-touch/guides/how-it-works#operations). Android Devices
        only.
      operationId: androiddeviceprovisioning.partners.devices.updateMetadataAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceMetadataInBatchRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: partnersId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/partners/{partnersId}/devices:unclaim:
    parameters: *ref_1
    post:
      description: >-
        Unclaims a device from a customer and removes it from zero-touch
        enrollment.
      operationId: androiddeviceprovisioning.partners.devices.unclaim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnclaimDeviceRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: partnersId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/partners/{partnersId}/devices:claimAsync:
    parameters: *ref_1
    post:
      description: >-
        Claims a batch of devices for a customer asynchronously. Adds the
        devices to zero-touch enrollment. To learn more, read [Longâ€‘running
        batch operations](/zero-touch/guides/how-it-works#operations).
      operationId: androiddeviceprovisioning.partners.devices.claimAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimDevicesRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: partnersId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/partners/{partnersId}/devices:claim:
    parameters: *ref_1
    post:
      description: >-
        Claims a device for a customer and adds it to zero-touch enrollment. If
        the device is already claimed by another customer, the call returns an
        error.
      operationId: androiddeviceprovisioning.partners.devices.claim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimDeviceRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimDeviceResponse'
      parameters:
        - in: path
          name: partnersId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/partners/{partnersId}/devices/{devicesId}:
    parameters: *ref_1
    get:
      description: Gets a device.
      operationId: androiddeviceprovisioning.partners.devices.get
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      parameters:
        - in: path
          name: partnersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: select
  /v1/customers:
    parameters: *ref_1
    get:
      description: Lists the user's customer accounts.
      operationId: androiddeviceprovisioning.customers.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerListCustomersResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: customers
      x-stackQL-verb: select
  /v1/customers/{customersId}/dpcs:
    parameters: *ref_1
    get:
      description: >-
        Lists the DPCs (device policy controllers) that support zero-touch
        enrollment.
      operationId: androiddeviceprovisioning.customers.dpcs.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerListDpcsResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: dpcs
      x-stackQL-verb: select
  /v1/customers/{customersId}/configurations:
    parameters: *ref_1
    get:
      description: Lists a customer's configurations.
      operationId: androiddeviceprovisioning.customers.configurations.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerListConfigurationsResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: configurations
      x-stackQL-verb: select
    post:
      description: >-
        Creates a new configuration. Once created, a customer can apply the
        configuration to devices.
      operationId: androiddeviceprovisioning.customers.configurations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: configurations
      x-stackQL-verb: insert
  /v1/customers/{customersId}/configurations/{configurationsId}:
    parameters: *ref_1
    get:
      description: Gets the details of a configuration.
      operationId: androiddeviceprovisioning.customers.configurations.get
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: configurationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: configurations
      x-stackQL-verb: select
    patch:
      description: Updates a configuration's field values.
      operationId: androiddeviceprovisioning.customers.configurations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: configurationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: configurations
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes an unused configuration. The API call fails if the customer has
        devices with the configuration applied.
      operationId: androiddeviceprovisioning.customers.configurations.delete
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: configurationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: configurations
      x-stackQL-verb: delete
  /v1/customers/{customersId}/devices:
    parameters: *ref_1
    get:
      description: Lists a customer's devices.
      operationId: androiddeviceprovisioning.customers.devices.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerListDevicesResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: select
  /v1/customers/{customersId}/devices/{devicesId}:
    parameters: *ref_1
    get:
      description: Gets the details of a device.
      operationId: androiddeviceprovisioning.customers.devices.get
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: select
  /v1/customers/{customersId}/devices:removeConfiguration:
    parameters: *ref_1
    post:
      description: Removes a configuration from device.
      operationId: androiddeviceprovisioning.customers.devices.removeConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRemoveConfigurationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices__configuration
      x-stackQL-verb: delete
  /v1/customers/{customersId}/devices:applyConfiguration:
    parameters: *ref_1
    post:
      description: >-
        Applies a Configuration to the device to register the device for
        zero-touch enrollment. After applying a configuration to a device, the
        device automatically provisions itself on first boot, or next factory
        reset.
      operationId: androiddeviceprovisioning.customers.devices.applyConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerApplyConfigurationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/customers/{customersId}/devices:unclaim:
    parameters: *ref_1
    post:
      description: >-
        Unclaims a device from a customer and removes it from zero-touch
        enrollment. After removing a device, a customer must contact their
        reseller to register the device into zero-touch enrollment again.
      operationId: androiddeviceprovisioning.customers.devices.unclaim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUnclaimDeviceRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: androiddeviceprovisioning.operations.get
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
