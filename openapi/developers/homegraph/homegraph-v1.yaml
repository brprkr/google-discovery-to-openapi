openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: HomeGraph API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230526'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.home.google.com/cloud-to-cloud/get-started
servers:
  - url: https://homegraph.googleapis.com
components:
  schemas:
    DeviceInfo:
      id: DeviceInfo
      description: Device information.
      type: object
      properties:
        swVersion:
          description: Device software version.
          type: string
        manufacturer:
          description: Device manufacturer.
          type: string
        hwVersion:
          description: Device hardware version.
          type: string
        model:
          type: string
          description: Device model.
    ReportStateAndNotificationResponse:
      id: ReportStateAndNotificationResponse
      description: >-
        Response type for the
        [`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)
        call.
      type: object
      properties:
        requestId:
          type: string
          description: Request ID copied from ReportStateAndNotificationRequest.
    SyncRequest:
      type: object
      description: >-
        Request type for the
        [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync) call.
      properties:
        requestId:
          type: string
          description: Request ID used for debugging.
        agentUserId:
          type: string
          description: Required. Third-party user ID.
      id: SyncRequest
    AgentOtherDeviceId:
      properties:
        deviceId:
          description: Unique third-party device ID.
          type: string
        agentId:
          type: string
          description: Project ID for your smart home Action.
      description: Alternate third-party device ID.
      id: AgentOtherDeviceId
      type: object
    SyncResponsePayload:
      id: SyncResponsePayload
      type: object
      description: Payload containing device information.
      properties:
        devices:
          type: array
          description: Devices associated with the third-party user.
          items:
            $ref: '#/components/schemas/Device'
        agentUserId:
          type: string
          description: Third-party user ID
    QueryResponsePayload:
      description: Payload containing device states information.
      type: object
      properties:
        devices:
          type: object
          description: >-
            States of the devices. Map of third-party device ID to struct of
            device states.
          additionalProperties:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object.
      id: QueryResponsePayload
    Device:
      type: object
      id: Device
      description: Third-party device definition.
      properties:
        attributes:
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
          description: Attributes for the traits supported by the device.
        customData:
          type: object
          description: >-
            Custom device attributes stored in Home Graph and provided to your
            smart home Action in each
            [QUERY](https://developers.home.google.com/cloud-to-cloud/intents/query)
            and
            [EXECUTE](https://developers.home.google.com/cloud-to-cloud/intents/execute)
            intent. Data in this object has a few constraints: No sensitive
            information, including but not limited to Personally Identifiable
            Information.
          additionalProperties:
            description: Properties of the object.
            type: any
        deviceInfo:
          description: Device manufacturer, model, hardware version, and software version.
          $ref: '#/components/schemas/DeviceInfo'
        traits:
          type: array
          items:
            type: string
          description: >-
            Traits supported by the device. See [device
            traits](https://developers.home.google.com/cloud-to-cloud/traits).
        structureHint:
          type: string
          description: >-
            Suggested name for the structure where this device is installed.
            Google attempts to use this value during user setup.
        type:
          description: >-
            Hardware type of the device. See [device
            types](https://developers.home.google.com/cloud-to-cloud/guides).
          type: string
        willReportState:
          type: boolean
          description: >-
            Indicates whether your smart home Action will report state of this
            device to Google via ReportStateAndNotification.
        id:
          description: Third-party device ID.
          type: string
        notificationSupportedByAgent:
          type: boolean
          description: >-
            Indicates whether your smart home Action will report notifications
            to Google for this device via ReportStateAndNotification. If your
            smart home Action enables users to control device notifications, you
            should update this field and call RequestSyncDevices.
        otherDeviceIds:
          description: >-
            Alternate IDs associated with this device. This is used to identify
            cloud synced devices enabled for [local
            fulfillment](https://developers.home.google.com/local-home/overview).
          type: array
          items:
            $ref: '#/components/schemas/AgentOtherDeviceId'
        roomHint:
          description: >-
            Suggested name for the room where this device is installed. Google
            attempts to use this value during user setup.
          type: string
        name:
          $ref: '#/components/schemas/DeviceNames'
          description: Names given to this device by your smart home Action.
    ReportStateAndNotificationRequest:
      type: object
      description: >-
        Request type for the
        [`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)
        call. It may include states, notifications, or both. States and
        notifications are defined per `device_id` (for example, "123" and "456"
        in the following example). Example: ```json { "requestId":
        "ff36a3cc-ec34-11e6-b1a0-64510650abcf", "agentUserId": "1234",
        "payload": { "devices": { "states": { "123": { "on": true }, "456": {
        "on": true, "brightness": 10 } }, } } } ```
      id: ReportStateAndNotificationRequest
      properties:
        followUpToken:
          description: Deprecated.
          type: string
        agentUserId:
          description: Required. Third-party user ID.
          type: string
        requestId:
          description: Request ID used for debugging.
          type: string
        eventId:
          description: Unique identifier per event (for example, a doorbell press).
          type: string
        payload:
          description: >-
            Required. State of devices to update and notification metadata for
            devices.
          $ref: '#/components/schemas/StateAndNotificationPayload'
    RequestSyncDevicesRequest:
      description: >-
        Request type for the
        [`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)
        call.
      id: RequestSyncDevicesRequest
      properties:
        agentUserId:
          type: string
          description: Required. Third-party user ID.
        async:
          type: boolean
          description: >-
            Optional. If set, the request will be added to a queue and a
            response will be returned immediately. This enables concurrent
            requests for the given `agent_user_id`, but the caller will not
            receive any error responses.
      type: object
    StateAndNotificationPayload:
      id: StateAndNotificationPayload
      properties:
        devices:
          description: The devices for updating state and sending notifications.
          $ref: '#/components/schemas/ReportStateAndNotificationDevice'
      type: object
      description: Payload containing the state and notification information for devices.
    AgentDeviceId:
      properties:
        id:
          type: string
          description: Third-party device ID.
      id: AgentDeviceId
      type: object
      description: Third-party device ID for one device.
    DeviceNames:
      id: DeviceNames
      properties:
        defaultNames:
          type: array
          description: >-
            List of names provided by the manufacturer rather than the user,
            such as serial numbers, SKUs, etc.
          items:
            type: string
        nicknames:
          items:
            type: string
          description: Additional names provided by the user for the device.
          type: array
        name:
          type: string
          description: Primary name of the device, generally provided by the user.
      type: object
      description: Identifiers used to describe the device.
    RequestSyncDevicesResponse:
      id: RequestSyncDevicesResponse
      type: object
      description: >-
        Response type for the
        [`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)
        call. Intentionally empty upon success. An HTTP response code is
        returned with more details upon failure.
      properties: {}
    SyncResponse:
      id: SyncResponse
      description: >-
        Response type for the
        [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync) call. This
        should follow the same format as the Google smart home
        `action.devices.SYNC`
        [response](https://developers.home.google.com/cloud-to-cloud/intents/sync).
        Example: ```json { "requestId": "ff36a3cc-ec34-11e6-b1a0-64510650abcf",
        "payload": { "agentUserId": "1836.15267389", "devices": [{ "id": "123",
        "type": "action.devices.types.OUTLET", "traits": [
        "action.devices.traits.OnOff" ], "name": { "defaultNames": ["My Outlet
        1234"], "name": "Night light", "nicknames": ["wall plug"] },
        "willReportState": false, "deviceInfo": { "manufacturer":
        "lights-out-inc", "model": "hs1234", "hwVersion": "3.2", "swVersion":
        "11.4" }, "customData": { "fooValue": 74, "barValue": true, "bazValue":
        "foo" } }] } } ```
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/SyncResponsePayload'
          description: Devices associated with the third-party user.
        requestId:
          type: string
          description: Request ID used for debugging. Copied from the request.
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
      id: Empty
      type: object
    ReportStateAndNotificationDevice:
      id: ReportStateAndNotificationDevice
      properties:
        notifications:
          description: >-
            Notifications metadata for devices. See the **Device NOTIFICATIONS**
            section of the individual trait [reference
            guides](https://developers.home.google.com/cloud-to-cloud/traits).
          additionalProperties:
            description: Properties of the object.
            type: any
          type: object
        states:
          additionalProperties:
            description: Properties of the object.
            type: any
          description: >-
            States of devices to update. See the **Device STATES** section of
            the individual trait [reference
            guides](https://developers.home.google.com/cloud-to-cloud/traits).
          type: object
      type: object
      description: The states and notifications specific to a device.
    QueryRequestPayload:
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AgentDeviceId'
          description: Third-party device IDs for which to get the device states.
      id: QueryRequestPayload
      description: Payload containing device IDs.
    QueryRequest:
      type: object
      properties:
        inputs:
          description: >-
            Required. Inputs containing third-party device IDs for which to get
            the device states.
          type: array
          items:
            $ref: '#/components/schemas/QueryRequestInput'
        agentUserId:
          type: string
          description: Required. Third-party user ID.
        requestId:
          description: Request ID used for debugging.
          type: string
      description: >-
        Request type for the
        [`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call.
      id: QueryRequest
    QueryResponse:
      type: object
      description: >-
        Response type for the
        [`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call. This
        should follow the same format as the Google smart home
        `action.devices.QUERY`
        [response](https://developers.home.google.com/cloud-to-cloud/intents/query).
        Example: ```json { "requestId": "ff36a3cc-ec34-11e6-b1a0-64510650abcf",
        "payload": { "devices": { "123": { "on": true, "online": true }, "456":
        { "on": true, "online": true, "brightness": 80, "color": { "name":
        "cerulean", "spectrumRGB": 31655 } } } } } ```
      properties:
        requestId:
          description: Request ID used for debugging. Copied from the request.
          type: string
        payload:
          $ref: '#/components/schemas/QueryResponsePayload'
          description: Device states for the devices given in the request.
      id: QueryResponse
    QueryRequestInput:
      properties:
        payload:
          description: Payload containing third-party device IDs.
          $ref: '#/components/schemas/QueryRequestPayload'
      id: QueryRequestInput
      type: object
      description: Device ID inputs to QueryRequest.
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/homegraph: 'Private Service: https://www.googleapis.com/auth/homegraph'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/agentUsers/{agentUsersId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
    delete:
      description: >-
        Unlinks the given third-party user from your smart home Action. All data
        related to this user will be deleted. For more details on how users link
        their accounts, see [fulfillment and
        authentication](https://developers.home.google.com/cloud-to-cloud/primer/fulfillment).
        The third-party user's identity is passed in via the `agent_user_id`
        (see DeleteAgentUserRequest). This request must be authorized using
        service account credentials from your Actions console project.
      operationId: homegraph.agentUsers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/homegraph
          Oauth2c:
            - https://www.googleapis.com/auth/homegraph
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: agentUsersId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: agent_users
      x-stackQL-verb: delete
  /v1/devices:requestSync:
    parameters: *ref_1
    post:
      description: >-
        Requests Google to send an `action.devices.SYNC`
        [intent](https://developers.home.google.com/cloud-to-cloud/intents/sync)
        to your smart home Action to update device metadata for the given user.
        The third-party user's identity is passed via the `agent_user_id` (see
        RequestSyncDevicesRequest). This request must be authorized using
        service account credentials from your Actions console project.
      operationId: homegraph.devices.requestSync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSyncDevicesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/homegraph
          Oauth2c:
            - https://www.googleapis.com/auth/homegraph
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestSyncDevicesResponse'
      parameters: []
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/devices:sync:
    parameters: *ref_1
    post:
      description: >-
        Gets all the devices associated with the given third-party user. The
        third-party user's identity is passed in via the `agent_user_id` (see
        SyncRequest). This request must be authorized using service account
        credentials from your Actions console project.
      operationId: homegraph.devices.sync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/homegraph
          Oauth2c:
            - https://www.googleapis.com/auth/homegraph
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResponse'
      parameters: []
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/devices:query:
    parameters: *ref_1
    post:
      description: >-
        Gets the current states in Home Graph for the given set of the
        third-party user's devices. The third-party user's identity is passed in
        via the `agent_user_id` (see QueryRequest). This request must be
        authorized using service account credentials from your Actions console
        project.
      operationId: homegraph.devices.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/homegraph
          Oauth2c:
            - https://www.googleapis.com/auth/homegraph
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
      parameters: []
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1/devices:reportStateAndNotification:
    parameters: *ref_1
    post:
      description: >-
        Reports device state and optionally sends device notifications. Called
        by your smart home Action when the state of a third-party device changes
        or you need to send a notification about the device. See [Implement
        Report
        State](https://developers.home.google.com/cloud-to-cloud/integration/report-state)
        for more information. This method updates the device state according to
        its declared
        [traits](https://developers.home.google.com/cloud-to-cloud/primer/device-types-and-traits).
        Publishing a new state value outside of these traits will result in an
        `INVALID_ARGUMENT` error response. The third-party user's identity is
        passed in via the `agent_user_id` (see
        ReportStateAndNotificationRequest). This request must be authorized
        using service account credentials from your Actions console project.
      operationId: homegraph.devices.reportStateAndNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportStateAndNotificationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/homegraph
          Oauth2c:
            - https://www.googleapis.com/auth/homegraph
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportStateAndNotificationResponse'
      parameters: []
      x-stackQL-resource: devices
      x-stackQL-verb: exec
