openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Content API for Shopping
  description: Manage your product listings and accounts for Google Shopping
  version: v2.1
  x-discovery-doc-revision: '20230613'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/shopping-content/v2/
servers:
  - url: https://shoppingcontent.googleapis.com/content/v2.1
components:
  schemas:
    BuyOnGoogleProgramStatus:
      properties:
        customerServiceVerifiedEmail:
          description: Output only. The customer service verified email.
          readOnly: true
          type: string
        participationStage:
          enum:
            - PROGRAM_PARTICIPATION_STAGE_UNSPECIFIED
            - NOT_ELIGIBLE
            - ELIGIBLE
            - ONBOARDING
            - ELIGIBLE_FOR_REVIEW
            - PENDING_REVIEW
            - REVIEW_DISAPPROVED
            - ACTIVE
            - PAUSED
          enumDescriptions:
            - Default value when participation stage is not set.
            - >-
              Merchant is not eligible for onboarding to a given program in a
              specific region code.
            - >-
              Merchant is eligible for onboarding to a given program in a
              specific region code.
            - >-
              Merchant is onboarding to a given program in a specific region
              code.
            - >-
              Merchant fulfilled all the requirements and is ready to request
              review in a specific region code.
            - >-
              Merchant is waiting for the review to be completed in a specific
              region code.
            - >-
              The review for a merchant has been rejected in a specific region
              code.
            - >-
              Merchant's program participation is active for a specific region
              code.
            - Participation has been paused.
          type: string
          description: Output only. The current participation stage for the program.
          readOnly: true
        customerServicePendingPhoneRegionCode:
          type: string
          description: >-
            Two letter country code for the pending phone number, for example
            `CA` for Canadian numbers. See the [ISO 3166-1
            alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements)
            officially assigned codes. In order to update this field the
            customer_service_pending_phone_number must also be set. After
            verification this field becomes empty.
        customerServicePendingPhoneNumber:
          type: string
          description: >-
            The pending phone number specified for BuyOnGoogle program. It might
            be different than account level phone number. In order to update
            this field the customer_service_pending_phone_region_code must also
            be set. After verification this field becomes empty.
        customerServiceVerifiedPhoneNumber:
          type: string
          description: >-
            Output only. The verified phone number specified for BuyOnGoogle
            program. It might be different than account level phone number.
          readOnly: true
        customerServiceVerifiedPhoneRegionCode:
          description: >-
            Output only. Two letter country code for the verified phone number,
            for example `CA` for Canadian numbers. See the [ISO 3166-1
            alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements)
            officially assigned codes.
          type: string
          readOnly: true
        onlineSalesChannel:
          enumDescriptions:
            - Default value when online sales channel is not set.
            - Merchant is selling exclusively on Google.
            - Merchant is selling on Google and other websites.
          enum:
            - ONLINE_SALES_CHANNEL_UNSPECIFIED
            - GOOGLE_EXCLUSIVE
            - GOOGLE_AND_OTHER_WEBSITES
          type: string
          description: The channels through which the merchant is selling.
        businessModel:
          description: The business models in which merchant participates.
          type: array
          items:
            enumDescriptions:
              - Default value when business model is not set.
              - Merchant is a manufacturer.
              - Merchant is an importer.
              - Merchant is a reseller.
              - Merchant has a different business model.
            enum:
              - BUSINESS_MODEL_UNSPECIFIED
              - MANUFACTURER
              - IMPORTER
              - RESELLER
              - OTHER
            type: string
        customerServicePendingEmail:
          type: string
          description: >-
            The customer service pending email. After verification this field
            becomes empty.
      type: object
      description: Response message for the GetProgramStatus method.
      id: BuyOnGoogleProgramStatus
    OrdersRefundOrderResponse:
      id: OrdersRefundOrderResponse
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersRefundOrderResponse`".
        executionStatus:
          type: string
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
      type: object
    ListCollectionStatusesResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        resources:
          type: array
          description: The collectionstatuses listed.
          items:
            $ref: '#/components/schemas/CollectionStatus'
      type: object
      id: ListCollectionStatusesResponse
      description: Response message for the ListCollectionStatuses method.
    AccountsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          type: array
          items:
            $ref: '#/components/schemas/AccountsCustomBatchRequestEntry'
      type: object
      id: AccountsCustomBatchRequest
    SettlementTransactionIdentifiers:
      id: SettlementTransactionIdentifiers
      type: object
      properties:
        merchantOrderId:
          type: string
          description: The merchant provided order ID.
        orderItemId:
          type: string
          description: The identifier of the item.
        transactionId:
          type: string
          description: The Google transaction ID.
        adjustmentId:
          description: The identifier of the adjustments, if it's available.
          type: string
        shipmentIds:
          items:
            type: string
          description: The shipment ids for the item.
          type: array
        settlementEntryId:
          type: string
          description: The unique ID of the settlement transaction entry.
    ProductShippingWeight:
      type: object
      properties:
        value:
          description: >-
            The weight of the product used to calculate the shipping cost of the
            item.
          format: double
          type: number
        unit:
          type: string
          description: The unit of value.
      id: ProductShippingWeight
    ShippingsettingsGetSupportedCarriersResponse:
      properties:
        carriers:
          description: A list of supported carriers. May be empty.
          type: array
          items:
            $ref: '#/components/schemas/CarriersCarrier'
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#shippingsettingsGetSupportedCarriersResponse`".
          type: string
      id: ShippingsettingsGetSupportedCarriersResponse
      type: object
    DatafeedsCustomBatchRequest:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/DatafeedsCustomBatchRequestEntry'
          description: The request entries to be processed in the batch.
          type: array
      type: object
      id: DatafeedsCustomBatchRequest
    AccountYouTubeChannelLink:
      properties:
        status:
          description: >-
            Status of the link between this Merchant Center account and the
            YouTube channel. Upon retrieval, it represents the actual status of
            the link and can be either `active` if it was approved in YT Creator
            Studio or `pending` if it's pending approval. Upon insertion, it
            represents the *intended* status of the link. Re-uploading a link
            with status `active` when it's still pending or with status
            `pending` when it's already active will have no effect: the status
            will remain unchanged. Re-uploading a link with deprecated status
            `inactive` is equivalent to not submitting the link at all and will
            delete the link if it was active or cancel the link request if it
            was pending.
          type: string
        channelId:
          type: string
          description: Channel ID.
      id: AccountYouTubeChannelLink
      type: object
    ListCollectionsResponse:
      type: object
      id: ListCollectionsResponse
      description: Response message for the ListCollections method.
      properties:
        resources:
          type: array
          description: The collections listed.
          items:
            $ref: '#/components/schemas/Collection'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    VerifyPhoneNumberResponse:
      id: VerifyPhoneNumberResponse
      description: Response message for the VerifyPhoneNumber method.
      properties:
        verifiedPhoneNumber:
          description: >-
            Verified phone number if verification is successful. This phone
            number can only be replaced by another verified phone number.
          type: string
      type: object
    InvoiceSummary:
      properties:
        productTotal:
          description: '[required] Total price for the product.'
          $ref: '#/components/schemas/Amount'
        additionalChargeSummaries:
          items:
            $ref: '#/components/schemas/InvoiceSummaryAdditionalChargeSummary'
          description: Summary of the total amounts of the additional charges.
          type: array
      id: InvoiceSummary
      type: object
    PosCustomBatchResponse:
      id: PosCustomBatchResponse
      type: object
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#posCustomBatchResponse`".
        entries:
          items:
            $ref: '#/components/schemas/PosCustomBatchResponseEntry'
          description: The result of the execution of the batch requests.
          type: array
    DatafeedstatusesListResponse:
      type: object
      id: DatafeedstatusesListResponse
      properties:
        resources:
          items:
            $ref: '#/components/schemas/DatafeedStatus'
          type: array
        nextPageToken:
          description: The token for the retrieval of the next page of datafeed statuses.
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#datafeedstatusesListResponse`".
          type: string
    LiasettingsListPosDataProvidersResponse:
      properties:
        posDataProviders:
          items:
            $ref: '#/components/schemas/PosDataProviders'
          description: The list of POS data providers for each eligible country
          type: array
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#liasettingsListPosDataProvidersResponse`".
          type: string
      type: object
      id: LiasettingsListPosDataProvidersResponse
    OrdersGetTestOrderTemplateResponse:
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersGetTestOrderTemplateResponse`".
        template:
          description: The requested test order template.
          $ref: '#/components/schemas/TestOrder'
      type: object
      id: OrdersGetTestOrderTemplateResponse
    ListAccountReturnCarrierResponse:
      properties:
        accountReturnCarriers:
          type: array
          items:
            $ref: '#/components/schemas/AccountReturnCarrier'
          description: List of all available account return carriers for the merchant.
      description: Response for listing account return carriers.
      id: ListAccountReturnCarrierResponse
      type: object
    ProductWeight:
      id: ProductWeight
      properties:
        value:
          type: number
          format: double
          description: >-
            Required. The weight represented as a number. The weight can have a
            maximum precision of four decimal places.
        unit:
          type: string
          description: >-
            Required. The weight unit. Acceptable values are: - "`g`" - "`kg`" -
            "`oz`" - "`lb`" 
      type: object
    AccountstatusesCustomBatchResponse:
      id: AccountstatusesCustomBatchResponse
      properties:
        entries:
          items:
            $ref: '#/components/schemas/AccountstatusesCustomBatchResponseEntry'
          description: The result of the execution of the batch requests.
          type: array
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accountstatusesCustomBatchResponse`".
          type: string
      type: object
    Address:
      id: Address
      type: object
      properties:
        streetAddress:
          description: Street-level part of the address. Use `\n` to add a second line.
          type: string
        country:
          type: string
          description: >-
            Required. [CLDR country
            code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml)
            (for example, "US").
        city:
          type: string
          description: >-
            Required. City, town or commune. May also include dependent
            localities or sublocalities (for example, neighborhoods or suburbs).
        administrativeArea:
          description: >-
            Required. Top-level administrative subdivision of the country. For
            example, a state like California ("CA") or a province like Quebec
            ("QC").
          type: string
        postalCode:
          type: string
          description: Required. Postal code or ZIP (for example, "94043").
    PosInventoryRequest:
      type: object
      id: PosInventoryRequest
      properties:
        quantity:
          type: string
          format: int64
          description: Required. The available quantity of the item.
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        contentLanguage:
          type: string
          description: Required. The two-letter ISO 639-1 language code for the item.
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        gtin:
          type: string
          description: Global Trade Item Number.
        timestamp:
          type: string
          description: Required. The inventory timestamp, in ISO 8601 format.
        storeCode:
          type: string
          description: >-
            Required. The identifier of the merchant's store. Either a
            `storeCode` inserted through the API or the code of the store in a
            Business Profile.
        price:
          $ref: '#/components/schemas/Price'
          description: Required. The current price of the item.
    ConversionSource:
      properties:
        expireTime:
          format: google-datetime
          readOnly: true
          description: >-
            Output only. The time when an archived conversion source becomes
            permanently deleted and is no longer available to undelete.
          type: string
        googleAnalyticsLink:
          $ref: '#/components/schemas/GoogleAnalyticsLink'
          description: >-
            Immutable. Conversion Source of type "Link to Google Analytics
            Property".
        merchantCenterDestination:
          description: Conversion Source of type "Merchant Center Tag Destination".
          $ref: '#/components/schemas/MerchantCenterDestination'
        state:
          readOnly: true
          enumDescriptions:
            - ''
            - Conversion source is fully functional.
            - >-
              Conversion source has been archived in the last 30 days and not
              currently functional. Can be restored using the undelete method.
            - Conversion source creation has started but not fully finished yet.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - ARCHIVED
            - PENDING
          description: >-
            Output only. Current state of this conversion source. Can't be
            edited through the API.
          type: string
        conversionSourceId:
          type: string
          description: >-
            Output only. Generated by the Content API upon creation of a new
            `ConversionSource`. Format: [a-z]{4}:.+ The four characters before
            the colon represent the type of conversio source. Content after the
            colon represents the ID of the conversion source within that type.
            The ID of two different conversion sources might be the same across
            different types. The following type prefixes are supported: - galk:
            For GoogleAnalyticsLink sources. - mcdn: For
            MerchantCenterDestination sources.
          readOnly: true
      id: ConversionSource
      type: object
      description: >-
        Represents a conversion source owned by a Merchant account. A merchant
        account can have up to 200 conversion sources.
    ProductDimension:
      id: ProductDimension
      type: object
      properties:
        value:
          format: double
          description: >-
            Required. The length value represented as a number. The value can
            have a maximum precision of four decimal places.
          type: number
        unit:
          type: string
          description: >-
            Required. The length units. Acceptable values are: - "`in`" -
            "`cm`" 
    OrderinvoicesCreateChargeInvoiceResponse:
      type: object
      id: OrderinvoicesCreateChargeInvoiceResponse
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#orderinvoicesCreateChargeInvoiceResponse`".
        executionStatus:
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
          type: string
    PriceAmount:
      properties:
        value:
          type: string
          description: The price represented as a number.
        currency:
          type: string
          description: The currency of the price.
      description: The price represented as a number and currency.
      id: PriceAmount
      type: object
    AccountAutomaticImprovements:
      id: AccountAutomaticImprovements
      description: >-
        The automatic improvements of the account can be used to automatically
        update items, improve images and shipping.
      type: object
      properties:
        imageImprovements:
          description: >-
            This improvement will attempt to automatically correct submitted
            images if they don't meet the [image
            requirements](https://support.google.com/merchants/answer/6324350),
            for example, removing overlays. If successful, the image will be
            replaced and approved. This improvement is only applied to images of
            disapproved offers. For more information see: [Automatic image
            improvements](https://support.google.com/merchants/answer/9242973)
            This field is only updated (cleared) if provided.
          $ref: '#/components/schemas/AccountImageImprovements'
        shippingImprovements:
          description: >-
            Not available for MCAs
            [accounts](https://support.google.com/merchants/answer/188487). By
            turning on [automatic shipping
            improvements](https://support.google.com/merchants/answer/10027038),
            you are allowing Google to improve the accuracy of your delivery
            times shown to shoppers using Google. More accurate delivery times,
            especially when faster, typically lead to better conversion rates.
            Google will improve your estimated delivery times based on various
            factors: - Delivery address of an order - Current handling time and
            shipping time settings - Estimated weekdays or business days -
            Parcel tracking data This field is only updated (cleared) if
            provided.
          $ref: '#/components/schemas/AccountShippingImprovements'
        itemUpdates:
          $ref: '#/components/schemas/AccountItemUpdates'
          description: >-
            Turning on [item
            updates](https://support.google.com/merchants/answer/3246284) allows
            Google to automatically update items for you. When item updates are
            on, Google uses the structured data markup on the website and
            advanced data extractors to update the price and availability of the
            items. When the item updates are off, items with mismatched data
            aren't shown. This field is only updated (cleared) if provided.
    LocalinventoryCustomBatchResponse:
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#localinventoryCustomBatchResponse`".
        entries:
          type: array
          items:
            $ref: '#/components/schemas/LocalinventoryCustomBatchResponseEntry'
          description: The result of the execution of the batch requests.
      type: object
      id: LocalinventoryCustomBatchResponse
    OrdersCancelRequest:
      type: object
      properties:
        operationId:
          type: string
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
        reason:
          description: >-
            The reason for the cancellation. Acceptable values are: -
            "`customerInitiatedCancel`" - "`invalidCoupon`" -
            "`malformedShippingAddress`" - "`noInventory`" - "`other`" -
            "`priceError`" - "`shippingPriceError`" - "`taxError`" -
            "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" -
            "`failedToCaptureFunds`" 
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      id: OrdersCancelRequest
    OrdersInStoreRefundLineItemRequest:
      id: OrdersInStoreRefundLineItemRequest
      type: object
      properties:
        productId:
          type: string
          description: >-
            The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
        operationId:
          type: string
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
        lineItemId:
          type: string
          description: >-
            The ID of the line item to return. Either lineItemId or productId is
            required.
        quantity:
          type: integer
          format: uint32
          description: The quantity to return and refund.
        reasonText:
          type: string
          description: The explanation of the reason.
        taxAmount:
          description: The amount of tax to be refunded. Required.
          $ref: '#/components/schemas/Price'
        reason:
          description: >-
            The reason for the return. Acceptable values are: -
            "`customerDiscretionaryReturn`" -
            "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" -
            "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" -
            "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" -
            "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" -
            "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" 
          type: string
        priceAmount:
          $ref: '#/components/schemas/Price'
          description: >-
            The amount to be refunded. This may be pre-tax or post-tax depending
            on the location of the order. Required.
    ReturnPolicyOnline:
      description: >-
        Return policy online object. This is currently used to represent return
        policies for ads and free listings programs.
      properties:
        returnPolicyUri:
          description: >-
            The return policy uri. This can used by Google to do a sanity check
            for the policy.
          type: string
        policy:
          description: The return policy.
          $ref: '#/components/schemas/ReturnPolicyOnlinePolicy'
        countries:
          items:
            type: string
          description: >-
            The countries of sale where the return policy is applicable. The
            values must be a valid 2 letter ISO 3166 code, e.g. "US".
          type: array
        itemConditions:
          items:
            enumDescriptions:
              - Default value. This value is unused.
              - New.
              - Used.
            type: string
            enum:
              - ITEM_CONDITION_UNSPECIFIED
              - NEW
              - USED
          type: array
          description: >-
            The item conditions that are accepted for returns. This is required
            to not be empty unless the type of return policy is noReturns.
        restockingFee:
          description: >-
            The restocking fee that applies to all return reason categories.
            This would be treated as a free restocking fee if the value is not
            set.
          $ref: '#/components/schemas/ReturnPolicyOnlineRestockingFee'
        returnMethods:
          description: >-
            The return methods of how customers can return an item. This value
            is required to not be empty unless the type of return policy is
            noReturns.
          type: array
          items:
            type: string
            enum:
              - RETURN_METHOD_UNSPECIFIED
              - BY_MAIL
              - IN_STORE
              - AT_A_KIOSK
            enumDescriptions:
              - Default value. This value is unused.
              - By mail.
              - In store.
              - At a kiosk.
        label:
          type: string
          description: >-
            The unique user-defined label of the return policy. The same label
            cannot be used in different return policies for the same country.
            Policies with the label 'default' will apply to all products, unless
            a product specifies a return_policy_label attribute.
        returnPolicyId:
          readOnly: true
          description: Output only. Return policy ID generated by Google.
          type: string
        name:
          description: The name of the policy as shown in Merchant Center.
          type: string
        returnReasonCategoryInfo:
          description: >-
            The return reason category information. This required to not be
            empty unless the type of return policy is noReturns.
          type: array
          items:
            $ref: '#/components/schemas/ReturnPolicyOnlineReturnReasonCategoryInfo'
      id: ReturnPolicyOnline
      type: object
    PosDataProviders:
      properties:
        posDataProviders:
          items:
            $ref: '#/components/schemas/PosDataProvidersPosDataProvider'
          description: A list of POS data providers.
          type: array
        country:
          type: string
          description: Country code.
      id: PosDataProviders
      type: object
    AccountAddress:
      properties:
        streetAddress:
          description: Street-level part of the address. Use `\n` to add a second line.
          type: string
        country:
          description: >-
            CLDR country code (for example, "US"). All MCA sub-accounts inherit
            the country of their parent MCA by default, however the country can
            be updated for individual sub-accounts.
          type: string
        locality:
          type: string
          description: >-
            City, town or commune. May also include dependent localities or
            sublocalities (for example, neighborhoods or suburbs).
        region:
          type: string
          description: >-
            Top-level administrative subdivision of the country. For example, a
            state like California ("CA") or a province like Quebec ("QC").
        postalCode:
          description: Postal code or ZIP (for example, "94043").
          type: string
      id: AccountAddress
      type: object
    DatafeedStatusError:
      properties:
        examples:
          items:
            $ref: '#/components/schemas/DatafeedStatusExample'
          type: array
          description: A list of example occurrences of the error, grouped by product.
        count:
          format: uint64
          type: string
          description: The number of occurrences of the error in the feed.
        message:
          description: The error message, for example, "Invalid price".
          type: string
        code:
          description: The code of the error, for example, "validation/invalid_value".
          type: string
      description: An error occurring in the feed, like "invalid price".
      id: DatafeedStatusError
      type: object
    PosSale:
      id: PosSale
      type: object
      properties:
        price:
          $ref: '#/components/schemas/Price'
          description: Required. The price of the item.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#posSale`"
          type: string
        quantity:
          type: string
          description: >-
            Required. The relative change of the available quantity. Negative
            for items returned.
          format: int64
        gtin:
          description: Global Trade Item Number.
          type: string
        saleId:
          description: A unique ID to group items from the same sale event.
          type: string
        storeCode:
          type: string
          description: >-
            Required. The identifier of the merchant's store. Either a
            `storeCode` inserted through the API or the code of the store in a
            Business Profile.
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        timestamp:
          type: string
          description: Required. The inventory timestamp, in ISO 8601 format.
      description: The change of the available quantity of an item at the given store.
    AccountsListLinksResponse:
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accountsListLinksResponse`".
          type: string
        nextPageToken:
          type: string
          description: The token for the retrieval of the next page of links.
        links:
          type: array
          description: The list of available links.
          items:
            $ref: '#/components/schemas/LinkedAccount'
      id: AccountsListLinksResponse
      type: object
    ReturnShippingLabel:
      description: Return shipping label for a Buy on Google merchant-managed return.
      id: ReturnShippingLabel
      properties:
        labelUri:
          type: string
          description: The URL for the return shipping label in PDF format
        trackingId:
          description: The tracking id of this return label.
          type: string
        carrier:
          type: string
          description: Name of the carrier.
      type: object
    ProductstatusesCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch productstatuses request.
      id: ProductstatusesCustomBatchRequestEntry
      type: object
      properties:
        includeAttributes:
          description: >-
            Deprecated: Setting this field has no effect and attributes are
            never included.
          type: boolean
        productId:
          description: The ID of the product whose status to get.
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" '
          type: string
        destinations:
          items:
            type: string
          type: array
          description: >-
            If set, only issues for the specified destinations are returned,
            otherwise only issues for the Shopping destination.
        merchantId:
          format: uint64
          type: string
          description: The ID of the managing account.
        batchId:
          type: integer
          format: uint32
          description: An entry ID, unique within the batch request.
    OrderMerchantProvidedAnnotation:
      properties:
        key:
          description: >-
            Key for additional merchant provided (as key-value pairs) annotation
            about the line item.
          type: string
        value:
          type: string
          description: >-
            Value for additional merchant provided (as key-value pairs)
            annotation about the line item.
      type: object
      id: OrderMerchantProvidedAnnotation
    OrdersSetLineItemMetadataRequest:
      type: object
      properties:
        productId:
          type: string
          description: >-
            The ID of the product to set metadata. This is the REST ID used in
            the products service. Either lineItemId or productId is required.
        lineItemId:
          description: >-
            The ID of the line item to set metadata. Either lineItemId or
            productId is required.
          type: string
        annotations:
          items:
            $ref: '#/components/schemas/OrderMerchantProvidedAnnotation'
          type: array
        operationId:
          type: string
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
      id: OrdersSetLineItemMetadataRequest
    ProductView:
      type: object
      description: >-
        Product fields. Values are only set for fields requested explicitly in
        the request's search query.
      id: ProductView
      properties:
        aggregatedDestinationStatus:
          enumDescriptions:
            - Undefined aggregated status.
            - Offer isn't eligible, or is disapproved for all destinations.
            - Offer's status is pending in all destinations.
            - Offer is eligible for some (but not all) destinations.
            - Offer is eligible for all destinations.
          enum:
            - AGGREGATED_STATUS_UNSPECIFIED
            - NOT_ELIGIBLE_OR_DISAPPROVED
            - PENDING
            - ELIGIBLE_LIMITED
            - ELIGIBLE
          description: Aggregated destination status.
          type: string
        itemIssues:
          type: array
          description: List of item issues for the product.
          items:
            $ref: '#/components/schemas/ProductViewItemIssue'
        currencyCode:
          type: string
          description: >-
            Product price currency code (for example, ISO 4217). Absent if
            product price is not available.
        productTypeL5:
          description: >-
            Fifth level of the product type in merchant's own [product
            taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        brand:
          description: Brand of the product.
          type: string
        categoryL5:
          description: >-
            Fifth level of the product category in [Google's product
            taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        availability:
          type: string
          description: Availability of the product.
        productTypeL2:
          type: string
          description: >-
            Second level of the product type in merchant's own [product
            taxonomy](https://support.google.com/merchants/answer/6324436).
        offerId:
          description: Merchant-provided id of the product.
          type: string
        id:
          type: string
          description: >-
            The REST ID of the product, in the form of
            channel:contentLanguage:targetCountry:offerId. Content API methods
            that operate on products take this as their productId parameter.
            Should always be included in the SELECT clause.
        shippingLabel:
          description: The normalized shipping label specified in the feed
          type: string
        productTypeL4:
          description: >-
            Fourth level of the product type in merchant's own [product
            taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        categoryL1:
          description: >-
            First level of the product category in [Google's product
            taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        productTypeL3:
          description: >-
            Third level of the product type in merchant's own [product
            taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        categoryL3:
          type: string
          description: >-
            Third level of the product category in [Google's product
            taxonomy](https://support.google.com/merchants/answer/6324436).
        title:
          description: Title of the product.
          type: string
        creationTime:
          description: The time the merchant created the product in timestamp seconds.
          type: string
          format: google-datetime
        languageCode:
          description: Language code of the product in BCP 47 format.
          type: string
        categoryL4:
          type: string
          description: >-
            Fourth level of the product category in [Google's product
            taxonomy](https://support.google.com/merchants/answer/6324436).
        priceMicros:
          format: int64
          type: string
          description: >-
            Product price specified as micros (1 millionth of a standard unit, 1
            USD = 1000000 micros) in the product currency. Absent in case the
            information about the price of the product is not available.
        channel:
          type: string
          enum:
            - CHANNEL_UNSPECIFIED
            - LOCAL
            - ONLINE
          enumDescriptions:
            - Indicates that the channel is unspecified.
            - Indicates that the channel is local.
            - Indicates that the channel is online.
          description: Channel of the product (online versus local).
        gtin:
          items:
            type: string
          type: array
          description: GTIN of the product.
        condition:
          type: string
          description: Condition of the product.
        itemGroupId:
          description: >-
            Item group ID provided by the merchant for grouping variants
            together.
          type: string
        productTypeL1:
          description: >-
            First level of the product type in merchant's own [product
            taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        expirationDate:
          description: Expiration date for the product. Specified on insertion.
          $ref: '#/components/schemas/Date'
        categoryL2:
          description: >-
            Second level of the product category in [Google's product
            taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
    AccountsCustomBatchRequestEntryLinkRequest:
      type: object
      id: AccountsCustomBatchRequestEntryLinkRequest
      properties:
        linkType:
          type: string
          description: >-
            Type of the link between the two accounts. Acceptable values are: -
            "`channelPartner`" - "`eCommercePlatform`" -
            "`paymentServiceProvider`" 
        services:
          type: array
          items:
            type: string
          description: >-
            Provided services. Acceptable values are: -
            "`shoppingAdsProductManagement`" -
            "`shoppingActionsProductManagement`" -
            "`shoppingActionsOrderManagement`" - "`paymentProcessing`" 
        action:
          type: string
          description: >-
            Action to perform for this link. The `"request"` action is only
            available to select merchants. Acceptable values are: - "`approve`"
            - "`remove`" - "`request`" 
        linkedAccountId:
          type: string
          description: The ID of the linked account.
    AccountTaxTaxRule:
      id: AccountTaxTaxRule
      description: Tax calculation rule to apply in a state or province (US only).
      type: object
      properties:
        ratePercent:
          type: string
          description: >-
            Explicit tax rate in percent, represented as a floating point number
            without the percentage character. Must not be negative.
        useGlobalRate:
          type: boolean
          description: >-
            Whether the tax rate is taken from a global tax table or specified
            explicitly.
        locationId:
          description: >-
            Required. State (or province) is which the tax is applicable,
            described by its location ID (also called criteria ID).
          format: uint64
          type: string
        shippingTaxed:
          type: boolean
          description: If true, shipping charges are also taxed.
        country:
          type: string
          description: Country code in which tax is applicable.
    ReturnPolicy:
      type: object
      properties:
        country:
          description: Required. The country of sale where the return policy is applicable.
          type: string
        seasonalOverrides:
          items:
            $ref: '#/components/schemas/ReturnPolicySeasonalOverride'
          type: array
          description: An optional list of seasonal overrides.
        policy:
          description: Required. The policy.
          $ref: '#/components/schemas/ReturnPolicyPolicy'
        returnShippingFee:
          $ref: '#/components/schemas/Price'
          description: The return shipping fee that will apply to non free return reasons.
        name:
          description: Required. The name of the policy as shown in Merchant Center.
          type: string
        returnPolicyId:
          type: string
          description: Return policy ID generated by Google.
        nonFreeReturnReasons:
          type: array
          description: Return reasons that will incur return fees.
          items:
            type: string
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#returnPolicy`"
        label:
          description: >-
            Required. The user-defined label of the return policy. For the
            default policy, use the label "default".
          type: string
      description: Return policy resource.
      id: ReturnPolicy
    OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails:
      description: ScheduledDeliveryDetails used to update the scheduled delivery order.
      id: OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails
      type: object
      properties:
        carrierPhoneNumber:
          description: >-
            The phone number of the carrier fulfilling the delivery. The phone
            number should be formatted as the international notation in
          type: string
        scheduledDate:
          type: string
          description: The date a shipment is scheduled for delivery, in ISO 8601 format.
    OrdersShipLineItemsResponse:
      id: OrdersShipLineItemsResponse
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersShipLineItemsResponse`".
          type: string
        executionStatus:
          type: string
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
      type: object
    ReportInteractionRequest:
      properties:
        responseToken:
          description: Required. Token of the response when recommendation was returned.
          type: string
        subtype:
          description: >-
            Optional. Subtype of the recommendations this interaction happened
            on. This field must be set only to the value that is returned by
            {@link `RecommendationsService.GenerateRecommendations`} call.
          type: string
        interactionType:
          type: string
          enumDescriptions:
            - >-
              Default value. If provided, the service will throw ApiError with
              description "Required parameter: interactionType".
            - When a recommendation is dismissed.
            - When a recommendation is clicked.
          enum:
            - INTERACTION_TYPE_UNSPECIFIED
            - INTERACTION_DISMISS
            - INTERACTION_CLICK
          description: >-
            Required. Type of the interaction that is reported, for example
            INTERACTION_CLICK.
        type:
          description: >-
            Required. Type of the recommendations on which this interaction
            happened. This field must be set only to the value that is returned
            by {@link `GenerateRecommendationsResponse`} call.
          type: string
      id: ReportInteractionRequest
      description: Request to report interactions on a recommendation.
      type: object
    ReturnPolicyOnlineRestockingFee:
      description: The restocking fee. This can either be a fixed fee or a micro percent.
      id: ReturnPolicyOnlineRestockingFee
      type: object
      properties:
        fixedFee:
          $ref: '#/components/schemas/PriceAmount'
          description: Fixed restocking fee.
        microPercent:
          description: >-
            Percent of total price in micros. 15,000,000 means 15% of the total
            price would be charged.
          type: integer
          format: int32
    ListRepricingRuleReportsResponse:
      properties:
        repricingRuleReports:
          type: array
          items:
            $ref: '#/components/schemas/RepricingRuleReport'
          description: Daily reports for the given Repricing rule.
        nextPageToken:
          type: string
          description: >-
            A token for retrieving the next page. Its absence means there is no
            subsequent page.
      description: Response message for the ListRepricingRuleReports method.
      type: object
      id: ListRepricingRuleReportsResponse
    OrderreportsListTransactionsResponse:
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#orderreportsListTransactionsResponse`".
        transactions:
          items:
            $ref: '#/components/schemas/OrderReportTransaction'
          description: The list of transactions.
          type: array
        nextPageToken:
          description: The token for the retrieval of the next page of transactions.
          type: string
      type: object
      id: OrderreportsListTransactionsResponse
    ReturnaddressCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/ReturnaddressCustomBatchRequestEntry'
          type: array
      id: ReturnaddressCustomBatchRequest
      type: object
    ProductstatusesCustomBatchResponse:
      type: object
      properties:
        entries:
          description: The result of the execution of the batch requests.
          type: array
          items:
            $ref: '#/components/schemas/ProductstatusesCustomBatchResponseEntry'
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#productstatusesCustomBatchResponse`".
          type: string
      id: ProductstatusesCustomBatchResponse
    ReturnAddress:
      description: Return address resource.
      id: ReturnAddress
      properties:
        returnAddressId:
          description: Return address ID generated by Google.
          type: string
        phoneNumber:
          type: string
          description: Required. The merchant's contact phone number regarding the return.
        label:
          description: >-
            Required. The user-defined label of the return address. For the
            default address, use the label "default".
          type: string
        address:
          description: Required. The address.
          $ref: '#/components/schemas/ReturnAddressAddress'
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#returnAddress`"
        country:
          type: string
          description: >-
            Required. The country of sale where the return address is
            applicable.
      type: object
    Value:
      properties:
        pricePercentage:
          type: string
          description: >-
            A percentage of the price represented as a number in decimal
            notation (for example, `"5.4"`). Can only be set if all other fields
            are not set.
        carrierRateName:
          description: >-
            The name of a carrier rate referring to a carrier rate defined in
            the same rate group. Can only be set if all other fields are not
            set.
          type: string
        noShipping:
          description: >-
            If true, then the product can't ship. Must be true when set, can
            only be set if all other fields are not set.
          type: boolean
        subtableName:
          description: >-
            The name of a subtable. Can only be set in table cells (not for
            single values), and only if all other fields are not set.
          type: string
        flatRate:
          $ref: '#/components/schemas/Price'
          description: A flat rate. Can only be set if all other fields are not set.
      type: object
      id: Value
      description: >-
        The single value of a rate group or the value of a rate group table's
        cell. Exactly one of `noShipping`, `flatRate`, `pricePercentage`,
        `carrierRateName`, `subtableName` must be set.
    LiaOnDisplayToOrderSettings:
      type: object
      properties:
        shippingCostPolicyUrl:
          type: string
          description: Shipping cost and policy URL.
        status:
          type: string
          description: >-
            The status of the ?On display to order? feature. Acceptable values
            are: - "`active`" - "`inactive`" - "`pending`" 
      id: LiaOnDisplayToOrderSettings
    LiasettingsCustomBatchRequestEntry:
      id: LiasettingsCustomBatchRequestEntry
      properties:
        accountId:
          type: string
          format: uint64
          description: The ID of the account for which to get/update account LIA settings.
        posExternalAccountId:
          type: string
          description: The account ID by which this merchant is known to the POS provider.
        gmbEmail:
          description: The Business Profile. Required only for RequestGmbAccess.
          type: string
        country:
          description: The country code. Required only for RequestInventoryVerification.
          type: string
        method:
          description: >-
            The method of the batch entry. Acceptable values are: - "`get`" -
            "`getAccessibleGmbAccounts`" - "`requestGmbAccess`" -
            "`requestInventoryVerification`" -
            "`setInventoryVerificationContact`" - "`update`" 
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        posDataProviderId:
          type: string
          format: uint64
          description: The ID of POS data provider. Required only for SetPosProvider.
        contactName:
          type: string
          description: >-
            Inventory validation contact name. Required only for
            SetInventoryValidationContact.
        contactEmail:
          type: string
          description: >-
            Inventory validation contact email. Required only for
            SetInventoryValidationContact.
        liaSettings:
          description: >-
            The account Lia settings to update. Only defined if the method is
            `update`.
          $ref: '#/components/schemas/LiaSettings'
        batchId:
          format: uint32
          description: An entry ID, unique within the batch request.
          type: integer
      type: object
    OrdersUpdateMerchantOrderIdResponse:
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersUpdateMerchantOrderIdResponse`".
        executionStatus:
          type: string
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
      id: OrdersUpdateMerchantOrderIdResponse
      type: object
    AccounttaxCustomBatchResponse:
      type: object
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accounttaxCustomBatchResponse`".
        entries:
          items:
            $ref: '#/components/schemas/AccounttaxCustomBatchResponseEntry'
          description: The result of the execution of the batch requests.
          type: array
      id: AccounttaxCustomBatchResponse
    LiasettingsCustomBatchResponseEntry:
      id: LiasettingsCustomBatchResponseEntry
      type: object
      properties:
        errors:
          description: A list of errors defined if, and only if, the request failed.
          $ref: '#/components/schemas/Errors'
        gmbAccounts:
          description: The list of accessible Business Profiles.
          $ref: '#/components/schemas/GmbAccounts'
        posDataProviders:
          type: array
          items:
            $ref: '#/components/schemas/PosDataProviders'
          description: The list of POS data providers.
        liaSettings:
          $ref: '#/components/schemas/LiaSettings'
          description: The retrieved or updated Lia settings.
        batchId:
          type: integer
          format: uint32
          description: The ID of the request entry to which this entry responds.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#liasettingsCustomBatchResponseEntry`"
          type: string
    Collection:
      description: The collection message.
      type: object
      properties:
        language:
          description: >-
            The language of a collection and the language of any featured
            products linked to the collection. [language
            attribute](https://support.google.com/merchants/answer/9673781)
          type: string
        mobileLink:
          type: string
          description: >-
            A collection’s mobile-optimized landing page when you have a
            different URL for mobile and desktop traffic. [mobile_link
            attribute](https://support.google.com/merchants/answer/9646123)
        imageLink:
          description: >-
            The URL of a collection’s image. [image_link
            attribute](https://support.google.com/merchants/answer/9703236)
          type: array
          items:
            type: string
        productCountry:
          description: >-
            [product_country
            attribute](https://support.google.com/merchants/answer/9674155)
          type: string
        customLabel1:
          type: string
          description: >-
            Label that you assign to a collection to help organize bidding and
            reporting in Shopping campaigns.
        customLabel2:
          description: >-
            Label that you assign to a collection to help organize bidding and
            reporting in Shopping campaigns.
          type: string
        headline:
          description: >-
            Your collection's name. [headline
            attribute](https://support.google.com/merchants/answer/9673580)
          items:
            type: string
          type: array
        customLabel0:
          type: string
          description: >-
            Label that you assign to a collection to help organize bidding and
            reporting in Shopping campaigns. [Custom
            label](https://support.google.com/merchants/answer/9674217)
        featuredProduct:
          items:
            $ref: '#/components/schemas/CollectionFeaturedProduct'
          type: array
          description: >-
            This identifies one or more products associated with the collection.
            Used as a lookup to the corresponding product ID in your product
            feeds. Provide a maximum of 100 featuredProduct (for collections).
            Provide up to 10 featuredProduct (for Shoppable Images only) with ID
            and X and Y coordinates. [featured_product
            attribute](https://support.google.com/merchants/answer/9703736)
        link:
          type: string
          description: >-
            A collection’s landing page. URL directly linking to your
            collection's page on your website. [link
            attribute](https://support.google.com/merchants/answer/9673983)
        customLabel4:
          type: string
          description: >-
            Label that you assign to a collection to help organize bidding and
            reporting in Shopping campaigns.
        customLabel3:
          description: >-
            Label that you assign to a collection to help organize bidding and
            reporting in Shopping campaigns.
          type: string
        id:
          description: >-
            Required. The REST ID of the collection. Content API methods that
            operate on collections take this as their collectionId parameter.
            The REST ID for a collection is of the form collectionId. [id
            attribute](https://support.google.com/merchants/answer/9649290)
          type: string
      id: Collection
    WarehouseCutoffTime:
      type: object
      id: WarehouseCutoffTime
      properties:
        minute:
          format: int32
          type: integer
          description: >-
            Required. Minute of the cutoff time until which an order has to be
            placed to be processed in the same day by the warehouse. Minute is
            based on the timezone of warehouse.
        hour:
          description: >-
            Required. Hour (24-hour clock) of the cutoff time until which an
            order has to be placed to be processed in the same day by the
            warehouse. Hour is based on the timezone of warehouse.
          type: integer
          format: int32
    OnboardBuyOnGoogleProgramRequest:
      properties:
        customerServiceEmail:
          type: string
          description: The customer service email.
      description: Request message for the OnboardProgram method.
      type: object
      id: OnboardBuyOnGoogleProgramRequest
    PromotionPromotionStatusDestinationStatus:
      description: The destination status of the promotion.
      id: PromotionPromotionStatusDestinationStatus
      type: object
      properties:
        status:
          enumDescriptions:
            - Unknown promotion state.
            - The promotion is under review.
            - The promotion is disapproved
            - The promotion is approved and active.
            - The promotion is stopped by merchant.
            - The promotion is no longer active.
            - >-
              The promotion is not stopped, and all reviews are approved, but
              the active date is in the future.
          type: string
          description: The status for the specified destination.
          enum:
            - STATE_UNSPECIFIED
            - IN_REVIEW
            - REJECTED
            - LIVE
            - STOPPED
            - EXPIRED
            - PENDING
        destination:
          type: string
          description: The name of the destination.
    CutoffTime:
      type: object
      id: CutoffTime
      properties:
        hour:
          type: integer
          format: uint32
          description: >-
            Hour of the cutoff time until which an order has to be placed to be
            processed in the same day. Required.
        minute:
          description: >-
            Minute of the cutoff time until which an order has to be placed to
            be processed in the same day. Required.
          format: uint32
          type: integer
        timezone:
          description: >-
            Timezone identifier for the cutoff time (for example,
            "Europe/Zurich"). List of identifiers. Required.
          type: string
    ReturnaddressCustomBatchResponse:
      id: ReturnaddressCustomBatchResponse
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#returnaddressCustomBatchResponse`".
          type: string
        entries:
          description: The result of the execution of the batch requests.
          type: array
          items:
            $ref: '#/components/schemas/ReturnaddressCustomBatchResponseEntry'
      type: object
    DatafeedsListResponse:
      properties:
        resources:
          items:
            $ref: '#/components/schemas/Datafeed'
          type: array
        nextPageToken:
          description: The token for the retrieval of the next page of datafeeds.
          type: string
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#datafeedsListResponse`".
      type: object
      id: DatafeedsListResponse
    ShippingsettingsCustomBatchResponseEntry:
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#shippingsettingsCustomBatchResponseEntry`"
        shippingSettings:
          $ref: '#/components/schemas/ShippingSettings'
          description: The retrieved or updated account shipping settings.
        batchId:
          description: The ID of the request entry to which this entry responds.
          type: integer
          format: uint32
        errors:
          $ref: '#/components/schemas/Errors'
          description: >-
            A list of errors for failed custombatch entries. *Note:* Schema
            errors fail the whole request.
      id: ShippingsettingsCustomBatchResponseEntry
      description: A batch entry encoding a single non-batch shipping settings response.
      type: object
    LiaPosDataProvider:
      properties:
        posExternalAccountId:
          type: string
          description: >-
            The account ID by which this merchant is known to the POS data
            provider.
        posDataProviderId:
          type: string
          format: uint64
          description: The ID of the POS data provider.
      type: object
      id: LiaPosDataProvider
    RepricingRuleReport:
      properties:
        totalGmv:
          description: >-
            Total GMV generated by impacted products while the rule was active
            on the date of the report. This value includes all orders that were
            started while the rule was active, even if the rule was no longer
            active when the order was completed.
          $ref: '#/components/schemas/PriceAmount'
        date:
          $ref: '#/components/schemas/Date'
          description: >-
            Date of the stats in this report. The report starts and ends
            according to the merchant's timezone.
        ruleId:
          type: string
          description: Id of the Repricing rule for this report.
        buyboxWinningRuleStats:
          description: Stats specific to buybox winning rules for rule report (deprecated).
          $ref: '#/components/schemas/RepricingRuleReportBuyboxWinningRuleStats'
        type:
          description: Type of the rule.
          enum:
            - REPRICING_RULE_TYPE_UNSPECIFIED
            - TYPE_STATS_BASED
            - TYPE_COGS_BASED
            - TYPE_SALES_VOLUME_BASED
            - TYPE_COMPETITIVE_PRICE
          type: string
          enumDescriptions:
            - Unused.
            - >-
              Statistical measurement based rules among Google SA merchants. If
              this rule is chosen, repricer will adjust the offer price based on
              statistical metrics (currently only min is available) among other
              merchants who sell the same product. Details need to be provdided
              in the RuleDefinition.
            - >-
              Cost of goods sale based rule. Repricer will adjust the offer
              price based on the offer's sale cost which is provided by the
              merchant.
            - >-
              Sales volume based rule. Repricer will adjust the offer price
              based on the offer's sales volume in the past period of time
              defined within the rule.
            - >-
              Competitive price rule. Repricer will adjust the offer price based
              on the min price from a list of unnamed big competitors.
        inapplicabilityDetails:
          type: array
          description: >-
            List of all reasons the rule did not apply to the inapplicable
            products during the specified reporting period.
          items:
            $ref: '#/components/schemas/InapplicabilityDetails'
        impactedProducts:
          items:
            type: string
          type: array
          description: >-
            List of product ids that are impacted by this rule during this
            reporting period. Out of stock products and products not searched
            for by customers are examples of non-impacted products.
        orderItemCount:
          format: int32
          type: integer
          description: >-
            Total unit count of impacted products ordered while the rule was
            active on the date of the report. This count includes all orders
            that were started while the rule was active, even if the rule was no
            longer active when the order was completed.
        inapplicableProducts:
          type: array
          items:
            type: string
          description: >-
            List of product ids that are inapplicable to this rule during this
            reporting period. To get the inapplicable reason for a specific
            product, see RepricingProductReport.
      type: object
      id: RepricingRuleReport
      description: 'Resource that represents a daily Repricing rule report. Next ID: 11'
    DatafeedstatusesCustomBatchResponseEntry:
      type: object
      description: A batch entry encoding a single non-batch datafeedstatuses response.
      id: DatafeedstatusesCustomBatchResponseEntry
      properties:
        batchId:
          type: integer
          format: uint32
          description: The ID of the request entry this entry responds to.
        errors:
          $ref: '#/components/schemas/Errors'
          description: >-
            A list of errors for failed custombatch entries. *Note:* Schema
            errors fail the whole request.
        datafeedStatus:
          $ref: '#/components/schemas/DatafeedStatus'
          description: >-
            The requested data feed status. Defined if and only if the request
            was successful.
    MerchantOrderReturn:
      properties:
        orderId:
          description: Google order ID.
          type: string
        merchantOrderId:
          description: Merchant defined order ID.
          type: string
        returnPricingInfo:
          $ref: '#/components/schemas/ReturnPricingInfo'
          description: Information about shipping costs.
        creationDate:
          description: The date of creation of the return, in ISO 8601 format.
          type: string
        orderReturnId:
          description: Order return ID generated by Google.
          type: string
        returnShipments:
          items:
            $ref: '#/components/schemas/ReturnShipment'
          description: Shipments of the return.
          type: array
        returnItems:
          description: Items of the return.
          items:
            $ref: '#/components/schemas/MerchantOrderReturnItem'
          type: array
      type: object
      description: >-
        Order return. Production access (all methods) requires the order manager
        role. Sandbox access does not.
      id: MerchantOrderReturn
    ShipmentInvoiceLineItemInvoice:
      type: object
      properties:
        lineItemId:
          description: ID of the line item. Either lineItemId or productId must be set.
          type: string
        productId:
          type: string
          description: >-
            ID of the product. This is the REST ID used in the products service.
            Either lineItemId or productId must be set.
        unitInvoice:
          description: '[required] Invoice details for a single unit.'
          $ref: '#/components/schemas/UnitInvoice'
        shipmentUnitIds:
          items:
            type: string
          description: >-
            [required] The shipment unit ID is assigned by the merchant and
            defines individual quantities within a line item. The same ID can be
            assigned to units that are the same while units that differ must be
            assigned a different ID (for example: free or promotional units).
          type: array
      id: ShipmentInvoiceLineItemInvoice
    ListMethodQuotasResponse:
      description: Response message for the ListMethodQuotas method.
      id: ListMethodQuotasResponse
      properties:
        methodQuotas:
          type: array
          items:
            $ref: '#/components/schemas/MethodQuota'
          description: The current quota usage and limits per each method.
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
      type: object
    AccountCredentials:
      properties:
        accessToken:
          type: string
          description: An OAuth access token.
        purpose:
          description: Indicates to Google how Google should use these OAuth tokens.
          type: string
          enum:
            - ACCOUNT_CREDENTIALS_PURPOSE_UNSPECIFIED
            - SHOPIFY_ORDER_MANAGEMENT
            - SHOPIFY_INTEGRATION
          enumDescriptions:
            - Unknown purpose.
            - >-
              The credentials allow Google to manage Shopify orders on behalf of
              the merchant (deprecated).
            - >-
              The credentials allow Google to manage Shopify integration on
              behalf of the merchant.
        expiresIn:
          format: int64
          description: >-
            The amount of time, in seconds, after which the access token is no
            longer valid.
          type: string
      type: object
      id: AccountCredentials
      description: >-
        Credentials allowing Google to call a partner's API on behalf of a
        merchant.
    OrderShipmentLineItemShipment:
      type: object
      id: OrderShipmentLineItemShipment
      properties:
        lineItemId:
          description: >-
            The ID of the line item that is shipped. This value is assigned by
            Google when an order is created. Either lineItemId or productId is
            required.
          type: string
        quantity:
          format: uint32
          description: The quantity that is shipped.
          type: integer
        productId:
          type: string
          description: >-
            The ID of the product to ship. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
    PosCustomBatchRequest:
      id: PosCustomBatchRequest
      type: object
      properties:
        entries:
          items:
            $ref: '#/components/schemas/PosCustomBatchRequestEntry'
          description: The request entries to be processed in the batch.
          type: array
    DatafeedTarget:
      properties:
        includedDestinations:
          items:
            type: string
          description: >-
            The list of destinations to include for this target (corresponds to
            checked check boxes in Merchant Center). Default destinations are
            always included unless provided in `excludedDestinations`.
          type: array
        language:
          type: string
          description: >-
            The two-letter ISO 639-1 language of the items in the feed. Must be
            a valid language for `targets[].country`.
        targetCountries:
          items:
            type: string
          type: array
          description: >-
            The countries where the items may be displayed. Represented as a
            CLDR territory code. Will be ignored for "product inventory" feeds.
        excludedDestinations:
          description: >-
            The list of destinations to exclude for this target (corresponds to
            cleared check boxes in Merchant Center). Products that are excluded
            from all destinations for more than 7 days are automatically
            deleted.
          items:
            type: string
          type: array
        country:
          description: >-
            Deprecated. Use `feedLabel` instead. The country where the items in
            the feed will be included in the search index, represented as a CLDR
            territory code.
          type: string
        feedLabel:
          description: >-
            Feed label for the DatafeedTarget. Either `country` or `feedLabel`
            is required. If both `feedLabel` and `country` is specified, the
            values must match. Must be less than or equal to 20 uppercase
            letters (A-Z), numbers (0-9), and dashes (-).
          type: string
      type: object
      id: DatafeedTarget
    RepricingRuleRestrictionBoundary:
      id: RepricingRuleRestrictionBoundary
      properties:
        priceDelta:
          description: >-
            The price micros relative to the offer selling price. This field is
            signed. It must be negative in floor. For example, if an offer is
            selling at $10 and this field is -$2 in floor, the repricing rule
            only applies if the calculated new price is >= $8.
          type: string
        percentageDelta:
          format: int32
          description: >-
            The percentage delta relative to the offer selling price. This field
            is signed. It must be negative in floor. When it is used in floor,
            it should be > -100. For example, if an offer is selling at $10 and
            this field is -30 in floor, the repricing rule only applies if the
            calculated new price is >= $7.
          type: integer
      type: object
      description: Definition of a boundary.
    DeliveryArea:
      id: DeliveryArea
      description: >-
        A delivery area for the product. Only one of `countryCode` or
        `postalCodeRange` must be set.
      properties:
        regionCode:
          type: string
          description: >-
            A state, territory, or prefecture. This is supported for the United
            States, Australia, and Japan. Provide a subdivision code from the
            ISO 3166-2 code tables
            ([US](https://en.wikipedia.org/wiki/ISO_3166-2:US),
            [AU](https://en.wikipedia.org/wiki/ISO_3166-2:AU), or
            [JP](https://en.wikipedia.org/wiki/ISO_3166-2:JP)) without country
            prefix (for example, `"NY"`, `"NSW"`, `"03"`).
        countryCode:
          description: >-
            Required. The country that the product can be delivered to. Submit a
            [unicode CLDR
            region](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml)
            such as `US` or `CH`.
          type: string
        postalCodeRange:
          $ref: '#/components/schemas/DeliveryAreaPostalCodeRange'
          description: >-
            A postal code, postal code range or postal code prefix that defines
            this area. Limited to US and AUS.
      type: object
    RegionPostalCodeArea:
      description: >-
        A list of postal codes that defines the region area. Note: All regions
        defined using postal codes are accessible via the account's
        `ShippingSettings.postalCodeGroups` resource.
      id: RegionPostalCodeArea
      type: object
      properties:
        regionCode:
          description: >-
            Required. CLDR territory code or the country the postal code group
            applies to.
          type: string
        postalCodes:
          type: array
          description: Required. A range of postal codes.
          items:
            $ref: '#/components/schemas/RegionPostalCodeAreaPostalCodeRange'
    OrdersUpdateMerchantOrderIdRequest:
      type: object
      properties:
        operationId:
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
          type: string
        merchantOrderId:
          type: string
          description: >-
            The merchant order id to be assigned to the order. Must be unique
            per merchant.
      id: OrdersUpdateMerchantOrderIdRequest
    PosSaleRequest:
      id: PosSaleRequest
      properties:
        timestamp:
          type: string
          description: Required. The inventory timestamp, in ISO 8601 format.
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        saleId:
          description: A unique ID to group items from the same sale event.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        targetCountry:
          type: string
          description: Required. The CLDR territory code for the item.
        price:
          description: Required. The price of the item.
          $ref: '#/components/schemas/Price'
        itemId:
          type: string
          description: Required. A unique identifier for the item.
        storeCode:
          description: >-
            Required. The identifier of the merchant's store. Either a
            `storeCode` inserted through the API or the code of the store in a
            Business Profile.
          type: string
        quantity:
          format: int64
          type: string
          description: >-
            Required. The relative change of the available quantity. Negative
            for items returned.
      type: object
    SearchRequest:
      description: Request message for the ReportService.Search method.
      properties:
        query:
          description: >-
            Required. Query that defines performance metrics to retrieve and
            dimensions according to which the metrics are to be segmented. For
            details on how to construct your query, see the [Query Language
            guide](https://developers.google.com/shopping-content/guides/reports/query-language/overview).
          type: string
        pageSize:
          format: int32
          description: >-
            Number of ReportRows to retrieve in a single page. Defaults to the
            maximum of 1000. Values above 1000 are coerced to 1000.
          type: integer
        pageToken:
          type: string
          description: >-
            Token of the page to retrieve. If not specified, the first page of
            results is returned. In order to request the next page of results,
            the value obtained from `next_page_token` in the previous response
            should be used.
      type: object
      id: SearchRequest
    OrderinvoicesCreateRefundInvoiceResponse:
      properties:
        executionStatus:
          type: string
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#orderinvoicesCreateRefundInvoiceResponse`".
      type: object
      id: OrderinvoicesCreateRefundInvoiceResponse
    TransitTableTransitTimeRowTransitTimeValue:
      id: TransitTableTransitTimeRowTransitTimeValue
      properties:
        maxTransitTimeInDays:
          type: integer
          description: Must be greater than or equal to `minTransitTimeInDays`.
          format: uint32
        minTransitTimeInDays:
          type: integer
          format: uint32
          description: >-
            Transit time range (min-max) in business days. 0 means same day
            delivery, 1 means next day delivery.
      type: object
    CollectionStatusItemLevelIssue:
      id: CollectionStatusItemLevelIssue
      properties:
        detail:
          description: A detailed issue description in English.
          type: string
        applicableCountries:
          items:
            type: string
          description: Country codes (ISO 3166-1 alpha-2) where issue applies to the offer.
          type: array
        servability:
          type: string
          description: How this issue affects the serving of the collection.
        attributeName:
          description: The attribute's name, if the issue is caused by a single attribute.
          type: string
        description:
          description: A short issue description in English.
          type: string
        documentation:
          description: The URL of a web page to help with resolving this issue.
          type: string
        resolution:
          type: string
          description: Whether the issue can be resolved by the merchant.
        destination:
          type: string
          description: The destination the issue applies to.
        code:
          description: The error code of the issue.
          type: string
      description: Issue associated with the collection.
      type: object
    OrderreturnsAcknowledgeResponse:
      type: object
      properties:
        executionStatus:
          type: string
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#orderreturnsAcknowledgeResponse`".
          type: string
      id: OrderreturnsAcknowledgeResponse
    OrderinvoicesCreateRefundInvoiceRequest:
      id: OrderinvoicesCreateRefundInvoiceRequest
      properties:
        shipmentInvoices:
          items:
            $ref: '#/components/schemas/ShipmentInvoice'
          description: Invoice details for different shipment groups.
          type: array
        returnOption:
          $ref: >-
            #/components/schemas/OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption
          description: >-
            Option to create an invoice for a refund and mark all items within
            the invoice as returned. Exactly one of `refundOnlyOption` or
            `returnOption` must be provided.
        operationId:
          description: >-
            [required] The ID of the operation, unique across all operations for
            a given order.
          type: string
        invoiceId:
          type: string
          description: '[required] The ID of the invoice.'
        refundOnlyOption:
          $ref: >-
            #/components/schemas/OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption
          description: >-
            Option to create a refund-only invoice. Exactly one of
            `refundOnlyOption` or `returnOption` must be provided.
      type: object
    TestOrderDeliveryDetails:
      properties:
        isScheduledDelivery:
          type: boolean
          description: Whether the order is scheduled delivery order.
        phoneNumber:
          type: string
          description: The phone number of the person receiving the delivery.
        address:
          $ref: '#/components/schemas/TestOrderAddress'
          description: The delivery address
      type: object
      id: TestOrderDeliveryDetails
    PickupServicesPickupService:
      type: object
      id: PickupServicesPickupService
      properties:
        country:
          type: string
          description: >-
            The CLDR country code of the carrier (for example, "US"). Always
            present.
        carrierName:
          description: The name of the carrier (for example, `"UPS"`). Always present.
          type: string
        serviceName:
          type: string
          description: >-
            The name of the pickup service (for example, `"Access point"`).
            Always present.
    OrderreturnsProcessResponse:
      properties:
        executionStatus:
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#orderreturnsProcessResponse`".
          type: string
      id: OrderreturnsProcessResponse
      type: object
    AccountStatusAccountLevelIssue:
      id: AccountStatusAccountLevelIssue
      properties:
        severity:
          description: >-
            Severity of the issue. Acceptable values are: - "`critical`" -
            "`error`" - "`suggestion`" 
          type: string
        detail:
          type: string
          description: Additional details about the issue.
        id:
          description: Issue identifier.
          type: string
        documentation:
          description: The URL of a web page to help resolving this issue.
          type: string
        title:
          type: string
          description: Short description of the issue.
        country:
          description: Country for which this issue is reported.
          type: string
        destination:
          type: string
          description: >-
            The destination the issue applies to. If this field is empty then
            the issue applies to all available destinations.
      type: object
    AccountUser:
      type: object
      properties:
        admin:
          description: Whether user is an admin.
          type: boolean
        paymentsAnalyst:
          type: boolean
          description: Whether user can access payment statements.
        paymentsManager:
          description: Whether user can manage payment settings.
          type: boolean
        emailAddress:
          type: string
          description: User's email address.
        orderManager:
          type: boolean
          description: Whether user is an order manager.
        reportingManager:
          description: Whether user is a reporting manager.
          type: boolean
      id: AccountUser
    OrdersShipLineItemsRequest:
      properties:
        shipmentGroupId:
          type: string
          description: >-
            ID of the shipment group. Required for orders that use the
            orderinvoices service.
        operationId:
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
          type: string
        shipmentInfos:
          items:
            $ref: >-
              #/components/schemas/OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo
          type: array
          description: >-
            Shipment information. This field is repeated because a single line
            item can be shipped in several packages (and have several tracking
            IDs).
        lineItems:
          description: Line items to ship.
          type: array
          items:
            $ref: '#/components/schemas/OrderShipmentLineItemShipment'
      type: object
      id: OrdersShipLineItemsRequest
    OrderReturn:
      properties:
        actor:
          description: >-
            The actor that created the refund. Acceptable values are: -
            "`customer`" - "`googleBot`" - "`googleCustomerService`" -
            "`googlePayments`" - "`googleSabre`" - "`merchant`" 
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
        reason:
          description: >-
            The reason for the return. Acceptable values are: -
            "`customerDiscretionaryReturn`" -
            "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" -
            "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" -
            "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" -
            "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" -
            "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" 
          type: string
        quantity:
          format: uint32
          description: Quantity that is returned.
          type: integer
        creationDate:
          type: string
          description: Date on which the item has been created, in ISO 8601 format.
      type: object
      id: OrderReturn
    ProductProductDetail:
      type: object
      id: ProductProductDetail
      properties:
        sectionName:
          description: The section header used to group a set of product details.
          type: string
        attributeName:
          description: The name of the product detail.
          type: string
        attributeValue:
          type: string
          description: The value of the product detail.
    AccountsCustomBatchResponseEntry:
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accountsCustomBatchResponseEntry`"
          type: string
        errors:
          description: >-
            A list of errors for failed custombatch entries. *Note:* Schema
            errors fail the whole request.
          $ref: '#/components/schemas/Errors'
        batchId:
          format: uint32
          type: integer
          description: The ID of the request entry this entry responds to.
        account:
          description: >-
            The retrieved, created, or updated account. Not defined if the
            method was `delete`, `claimwebsite` or `link`.
          $ref: '#/components/schemas/Account'
      type: object
      description: A batch entry encoding a single non-batch accounts response.
      id: AccountsCustomBatchResponseEntry
    LiasettingsGetAccessibleGmbAccountsResponse:
      id: LiasettingsGetAccessibleGmbAccountsResponse
      type: object
      properties:
        gmbAccounts:
          type: array
          description: A list of Business Profiles which are available to the merchant.
          items:
            $ref: '#/components/schemas/GmbAccountsGmbAccount'
        accountId:
          description: The ID of the Merchant Center account.
          format: uint64
          type: string
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#liasettingsGetAccessibleGmbAccountsResponse`".
    PickupCarrierService:
      type: object
      id: PickupCarrierService
      properties:
        serviceName:
          description: >-
            The name of the pickup service (for example, `"Access point"`).
            Required.
          type: string
        carrierName:
          type: string
          description: The name of the pickup carrier (for example, `"UPS"`). Required.
    Css:
      properties:
        cssDomainId:
          type: string
          readOnly: true
          format: int64
          description: Output only. Immutable. The CSS domain ID.
        fullName:
          readOnly: true
          type: string
          description: Output only. Immutable. The CSS domain's full name.
        homepageUri:
          description: Output only. Immutable. The CSS domain's homepage.
          readOnly: true
          type: string
        displayName:
          description: >-
            Output only. Immutable. The CSS domain's display name, used when
            space is constrained.
          readOnly: true
          type: string
        cssGroupId:
          format: int64
          readOnly: true
          type: string
          description: >-
            Output only. Immutable. The ID of the CSS group this CSS domain is
            affiliated with. Only populated for CSS group users.
        labelIds:
          items:
            format: int64
            type: string
          description: >-
            A list of label IDs that are assigned to this CSS domain by its CSS
            group. Only populated for CSS group users.
          type: array
      type: object
      id: Css
      description: Information about CSS domain.
    OrderinvoicesCreateChargeInvoiceRequest:
      properties:
        lineItemInvoices:
          description: '[required] Invoice details per line item.'
          items:
            $ref: '#/components/schemas/ShipmentInvoiceLineItemInvoice'
          type: array
        invoiceId:
          description: '[required] The ID of the invoice.'
          type: string
        shipmentGroupId:
          description: >-
            [required] ID of the shipment group. It is assigned by the merchant
            in the `shipLineItems` method and is used to group multiple line
            items that have the same kind of shipping charges.
          type: string
        operationId:
          type: string
          description: >-
            [required] The ID of the operation, unique across all operations for
            a given order.
        invoiceSummary:
          $ref: '#/components/schemas/InvoiceSummary'
          description: '[required] Invoice summary.'
      id: OrderinvoicesCreateChargeInvoiceRequest
      type: object
    AccountStatus:
      id: AccountStatus
      description: >-
        The status of an account, that is, information about its products, which
        is computed offline and not returned immediately at insertion time.
      type: object
      properties:
        accountId:
          description: The ID of the account for which the status is reported.
          type: string
        websiteClaimed:
          description: Whether the account's website is claimed or not.
          type: boolean
        accountLevelIssues:
          items:
            $ref: '#/components/schemas/AccountStatusAccountLevelIssue'
          description: A list of account level issues.
          type: array
        products:
          description: >-
            List of product-related data by channel, destination, and country.
            Data in this field may be delayed by up to 30 minutes.
          items:
            $ref: '#/components/schemas/AccountStatusProducts'
          type: array
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accountStatus`"
          type: string
        accountManagement:
          type: string
          description: >-
            How the account is managed. Acceptable values are: - "`manual`" -
            "`automatic`" 
    ProductUnitPricingBaseMeasure:
      id: ProductUnitPricingBaseMeasure
      type: object
      properties:
        value:
          format: int64
          type: string
          description: The denominator of the unit price.
        unit:
          type: string
          description: The unit of the denominator.
    OrderReportDisbursement:
      description: Order disbursement. All methods require the payment analyst role.
      type: object
      id: OrderReportDisbursement
      properties:
        disbursementId:
          description: The ID of the disbursement.
          type: string
        disbursementAmount:
          description: The disbursement amount.
          $ref: '#/components/schemas/Price'
        disbursementDate:
          description: The date the disbursement was initiated, in ISO 8601 format.
          type: string
        disbursementCreationDate:
          description: The disbursement date, in ISO 8601 format.
          type: string
        merchantId:
          format: uint64
          type: string
          description: The ID of the managing account.
    LoyaltyPoints:
      id: LoyaltyPoints
      properties:
        ratio:
          format: double
          type: number
          description: >-
            The ratio of a point when converted to currency. Google assumes
            currency based on Merchant Center settings. If ratio is left out, it
            defaults to 1.0.
        pointsValue:
          format: int64
          description: The retailer's loyalty points in absolute value.
          type: string
        name:
          description: >-
            Name of loyalty points program. It is recommended to limit the name
            to 12 full-width characters or 24 Roman characters.
          type: string
      type: object
    TestOrderPickupDetails:
      type: object
      properties:
        pickupLocationAddress:
          $ref: '#/components/schemas/TestOrderAddress'
          description: Required. Pickup location address.
        pickupLocationType:
          type: string
          description: >-
            Pickup location type. Acceptable values are: - "`locker`" -
            "`store`" - "`curbside`" 
        locationCode:
          type: string
          description: Required. Code of the location defined by provider or merchant.
        pickupPersons:
          description: Required. all pickup persons set by users.
          items:
            $ref: '#/components/schemas/TestOrderPickupDetailsPickupPerson'
          type: array
      id: TestOrderPickupDetails
    Weight:
      properties:
        unit:
          description: 'Required. The weight unit. Acceptable values are: - "`kg`" - "`lb`" '
          type: string
        value:
          description: >-
            Required. The weight represented as a number. The weight can have a
            maximum precision of four decimal places.
          type: string
      id: Weight
      type: object
    RegionPostalCodeAreaPostalCodeRange:
      description: A range of postal codes that defines the region area.
      properties:
        begin:
          description: >-
            Required. A postal code or a pattern of the form prefix* denoting
            the inclusive lower bound of the range defining the area. Examples
            values: "94108", "9410*", "9*".
          type: string
        end:
          type: string
          description: >-
            Optional. A postal code or a pattern of the form prefix* denoting
            the inclusive upper bound of the range defining the area. It must
            have the same length as postalCodeRangeBegin: if
            postalCodeRangeBegin is a postal code then postalCodeRangeEnd must
            be a postal code too; if postalCodeRangeBegin is a pattern then
            postalCodeRangeEnd must be a pattern with the same prefix length.
            Optional: if not set, then the area is defined as being all the
            postal codes matching postalCodeRangeBegin.
      type: object
      id: RegionPostalCodeAreaPostalCodeRange
    LinkedAccount:
      type: object
      id: LinkedAccount
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/LinkService'
          description: List of provided services.
        linkedAccountId:
          description: The ID of the linked account.
          type: string
    RequestReviewFreeListingsRequest:
      description: Request message for the RequestReviewFreeListings Program method.
      properties:
        regionCode:
          description: >-
            The code [ISO 3166-1
            alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the
            country for which review is to be requested.
          type: string
      type: object
      id: RequestReviewFreeListingsRequest
    Account:
      id: Account
      type: object
      properties:
        businessInformation:
          description: The business information of the account.
          $ref: '#/components/schemas/AccountBusinessInformation'
        adsLinks:
          type: array
          description: >-
            Linked Ads accounts that are active or pending approval. To create a
            new link request, add a new link with status `active` to the list.
            It will remain in a `pending` state until approved or rejected
            either in the Ads interface or through the Google Ads API. To delete
            an active link, or to cancel a link request, remove it from the
            list.
          items:
            $ref: '#/components/schemas/AccountAdsLink'
        labelIds:
          items:
            type: string
            format: uint64
          description: Manually created label IDs that are assigned to the account by CSS.
          type: array
        adultContent:
          description: Indicates whether the merchant sells adult content.
          type: boolean
        automaticLabelIds:
          description: >-
            Automatically created label IDs that are assigned to the account by
            CSS Center.
          items:
            type: string
            format: uint64
          type: array
        id:
          format: uint64
          description: Required. 64-bit Merchant Center account ID.
          type: string
        cssId:
          type: string
          description: ID of CSS the account belongs to.
          format: uint64
        youtubeChannelLinks:
          type: array
          items:
            $ref: '#/components/schemas/AccountYouTubeChannelLink'
          description: >-
            Linked YouTube channels that are active or pending approval. To
            create a new link request, add a new link with status `active` to
            the list. It will remain in a `pending` state until approved or
            rejected in the YT Creator Studio interface. To delete an active
            link, or to cancel a link request, remove it from the list.
        automaticImprovements:
          $ref: '#/components/schemas/AccountAutomaticImprovements'
          description: >-
            The automatic improvements of the account can be used to
            automatically update items, improve images and shipping. Each
            section inside AutomaticImprovements is updated separately.
        websiteUrl:
          description: The merchant's website.
          type: string
        sellerId:
          description: Client-specific, locally-unique, internal ID for the child account.
          type: string
        conversionSettings:
          description: Settings for conversion tracking.
          $ref: '#/components/schemas/AccountConversionSettings'
        users:
          items:
            $ref: '#/components/schemas/AccountUser'
          type: array
          description: >-
            Users with access to the account. Every account (except for
            subaccounts) must have at least one admin user.
        accountManagement:
          description: >-
            Output only. How the account is managed. Acceptable values are: -
            "`manual`" - "`automatic`" 
          readOnly: true
          type: string
        googleMyBusinessLink:
          description: >-
            The Business Profile which is linked or in the process of being
            linked with the Merchant Center account.
          $ref: '#/components/schemas/AccountGoogleMyBusinessLink'
        name:
          description: Required. Display name for the account.
          type: string
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#account`".
      description: >-
        Account data. After the creation of a new account it may take a few
        minutes before it's fully operational. The methods delete, insert, and
        update require the admin role.
    TransitTableTransitTimeRow:
      type: object
      id: TransitTableTransitTimeRow
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/TransitTableTransitTimeRowTransitTimeValue'
    FreeListingsProgramStatusRegionStatus:
      properties:
        regionCodes:
          type: array
          items:
            type: string
          description: >-
            The two-letter [ISO 3166-1
            alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for
            all the regions with the same `eligibilityStatus` and
            `reviewEligibility`.
        reviewIneligibilityReasonDetails:
          $ref: >-
            #/components/schemas/FreeListingsProgramStatusReviewIneligibilityReasonDetails
          description: >-
            Additional information for ineligibility. If
            `reviewIneligibilityReason` is `IN_COOLDOWN_PERIOD`, a timestamp for
            the end of the cooldown period is provided.
        reviewIssues:
          description: >-
            Issues evaluated in the review process. Fix all issues before
            requesting a review.
          items:
            type: string
          type: array
        reviewIneligibilityReason:
          description: Review ineligibility reason if account is not eligible for review.
          enumDescriptions:
            - Requesting a review from Google is not possible.
            - All onboarding issues needs to be fixed.
            - Not enough offers uploaded for this country.
            - Cooldown period applies. Wait until cooldown period ends.
            - Account is already under review.
            - No issues available to review.
            - >-
              Account will be automatically reviewed at the end of the grace
              period.
            - Account is retired. Should not appear in MC.
            - Account was already reviewd.
          enum:
            - REVIEW_INELIGIBILITY_REASON_UNSPECIFIED
            - ONBOARDING_ISSUES
            - NOT_ENOUGH_OFFERS
            - IN_COOLDOWN_PERIOD
            - ALREADY_UNDER_REVIEW
            - NO_REVIEW_REQUIRED
            - WILL_BE_REVIEWED_AUTOMATICALLY
            - IS_RETIRED
            - ALREADY_REVIEWED
          type: string
        disapprovalDate:
          description: >-
            Date by which eligibilityStatus will go from `WARNING` to
            `DISAPPROVED`. Only visible when your eligibilityStatus is WARNING.
            In [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
            `YYYY-MM-DD`.
          type: string
        onboardingIssues:
          description: Issues that must be fixed to be eligible for review.
          type: array
          items:
            type: string
        reviewEligibilityStatus:
          enum:
            - REVIEW_ELIGIBILITY_UNSPECIFIED
            - ELIGIBLE
            - INELIGIBLE
          type: string
          description: >-
            If a program is eligible for review in a specific region. Only
            visible if `eligibilityStatus` is `DISAPPROVED`.
          enumDescriptions:
            - Review eligibility state is unknown.
            - Account is eligible for review for a specified region code.
            - Account is not eligible for review for a specified region code.
        eligibilityStatus:
          description: Eligibility status of the standard free listing program.
          enumDescriptions:
            - State is not known.
            - If the account has no issues and review is completed successfully.
            - >-
              There are one or more issues that needs to be resolved for account
              to be active for the program. Detailed list of account issues are
              available in
              [accountstatuses](https://developers.google.com/shopping-content/reference/rest/v2.1/accountstatuses)
              API.
            - >-
              If account has issues but offers are servable. Some of the issue
              can make account DISAPPROVED after a certain deadline.
            - Account is under review.
            - Account is waiting for review to start.
            - >-
              Program is currently onboarding. Upload valid offers to complete
              onboarding.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - APPROVED
            - DISAPPROVED
            - WARNING
            - UNDER_REVIEW
            - PENDING_REVIEW
            - ONBOARDING
        reviewIneligibilityReasonDescription:
          type: string
          description: >-
            Reason a program in a specific region isn’t eligible for review.
            Only visible if `reviewEligibilityStatus` is `INELIGIBLE`.
      id: FreeListingsProgramStatusRegionStatus
      description: Status of program and region.
      type: object
    AccountstatusesListResponse:
      type: object
      properties:
        resources:
          items:
            $ref: '#/components/schemas/AccountStatus'
          type: array
        nextPageToken:
          type: string
          description: The token for the retrieval of the next page of account statuses.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accountstatusesListResponse`".
          type: string
      id: AccountstatusesListResponse
    ListReturnPolicyOnlineResponse:
      type: object
      description: Response message for the `ListReturnPolicyOnline` method.
      id: ListReturnPolicyOnlineResponse
      properties:
        returnPolicies:
          items:
            $ref: '#/components/schemas/ReturnPolicyOnline'
          description: The retrieved return policies.
          type: array
    RequestReviewBuyOnGoogleProgramRequest:
      description: Request message for the RequestReviewProgram method.
      type: object
      id: RequestReviewBuyOnGoogleProgramRequest
      properties: {}
    PostalCodeGroup:
      id: PostalCodeGroup
      type: object
      properties:
        postalCodeRanges:
          items:
            $ref: '#/components/schemas/PostalCodeRange'
          description: A range of postal codes. Required.
          type: array
        country:
          type: string
          description: >-
            The CLDR territory code of the country the postal code group applies
            to. Required.
        name:
          type: string
          description: The name of the postal code group, referred to in headers. Required.
    SettlementTransactionAmountCommission:
      properties:
        category:
          type: string
          description: >-
            The category of the commission. Acceptable values are: -
            "`animalsAndPetSupplies`" - "`dogCatFoodAndCatLitter`" -
            "`apparelAndAccessories`" - "`shoesHandbagsAndSunglasses`" -
            "`costumesAndAccessories`" - "`jewelry`" - "`watches`" -
            "`hobbiesArtsAndCrafts`" - "`homeAndGarden`" -
            "`entertainmentCollectibles`" - "`collectibleCoins`" -
            "`sportsCollectibles`" - "`sportingGoods`" - "`toysAndGames`" -
            "`musicalInstruments`" - "`giftCards`" - "`babyAndToddler`" -
            "`babyFoodWipesAndDiapers`" - "`businessAndIndustrial`" -
            "`camerasOpticsAndPhotography`" - "`consumerElectronics`" -
            "`electronicsAccessories`" - "`personalComputers`" -
            "`videoGameConsoles`" - "`foodAndGrocery`" - "`beverages`" -
            "`tobaccoProducts`" - "`furniture`" - "`hardware`" -
            "`buildingMaterials`" - "`tools`" - "`healthAndPersonalCare`" -
            "`beauty`" - "`householdSupplies`" - "`kitchenAndDining`" -
            "`majorAppliances`" - "`luggageAndBags`" - "`media`" -
            "`officeSupplies`" - "`softwareAndVideoGames`" -
            "`vehiclePartsAndAccessories`" - "`vehicleTiresAndWheels`" -
            "`vehicles`" - "`everythingElse`" 
        rate:
          type: string
          description: Rate of the commission in percentage.
      id: SettlementTransactionAmountCommission
      type: object
    OrderreturnsLineItem:
      properties:
        productId:
          type: string
          description: >-
            The ID of the product to cancel. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
        quantity:
          description: The quantity of this line item.
          type: integer
          format: uint32
        lineItemId:
          description: >-
            The ID of the line item. This value is assigned by Google when an
            order is created. Either lineItemId or productId is required.
          type: string
      type: object
      id: OrderreturnsLineItem
    Errors:
      properties:
        code:
          type: integer
          description: The HTTP status of the first error in `errors`.
          format: uint32
        errors:
          description: A list of errors.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: The message of the first error in `errors`.
          type: string
      description: A list of errors returned by a failed batch entry.
      type: object
      id: Errors
    ShipmentInvoice:
      properties:
        invoiceSummary:
          $ref: '#/components/schemas/InvoiceSummary'
          description: '[required] Invoice summary.'
        lineItemInvoices:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentInvoiceLineItemInvoice'
          description: '[required] Invoice details per line item.'
        shipmentGroupId:
          type: string
          description: >-
            [required] ID of the shipment group. It is assigned by the merchant
            in the `shipLineItems` method and is used to group multiple line
            items that have the same kind of shipping charges.
      id: ShipmentInvoice
      type: object
    LiaCountrySettings:
      properties:
        country:
          description: Required. CLDR country code (for example, "US").
          type: string
        posDataProvider:
          description: The POS data provider linked with this country.
          $ref: '#/components/schemas/LiaPosDataProvider'
        storePickupActive:
          description: The status of the "Store pickup" feature.
          type: boolean
        hostedLocalStorefrontActive:
          type: boolean
          description: The status of the "Merchant hosted local storefront" feature.
        inventory:
          $ref: '#/components/schemas/LiaInventorySettings'
          description: LIA inventory verification settings.
        onDisplayToOrder:
          $ref: '#/components/schemas/LiaOnDisplayToOrderSettings'
          description: LIA "On Display To Order" settings.
        about:
          $ref: '#/components/schemas/LiaAboutPageSettings'
          description: The settings for the About page.
      id: LiaCountrySettings
      type: object
    AccountsLinkRequest:
      id: AccountsLinkRequest
      type: object
      properties:
        linkType:
          type: string
          description: >-
            Type of the link between the two accounts. Acceptable values are: -
            "`channelPartner`" - "`eCommercePlatform`" -
            "`paymentServiceProvider`" 
        paymentServiceProviderLinkInfo:
          $ref: '#/components/schemas/PaymentServiceProviderLinkInfo'
          description: >-
            Additional information required for `paymentServiceProvider` link
            type.
        eCommercePlatformLinkInfo:
          $ref: '#/components/schemas/ECommercePlatformLinkInfo'
          description: Additional information required for `eCommercePlatform` link type.
        linkedAccountId:
          type: string
          description: The ID of the linked account.
        action:
          type: string
          description: >-
            Action to perform for this link. The `"request"` action is only
            available to select merchants. Acceptable values are: - "`approve`"
            - "`remove`" - "`request`" 
        services:
          type: array
          items:
            type: string
          description: ' Acceptable values are: - "`shoppingAdsProductManagement`" - "`shoppingActionsProductManagement`" - "`shoppingActionsOrderManagement`" - "`paymentProcessing`" '
    LiaInventorySettings:
      properties:
        status:
          type: string
          description: >-
            The status of the inventory verification process. Acceptable values
            are: - "`active`" - "`inactive`" - "`pending`" 
        inventoryVerificationContactName:
          type: string
          description: The name of the contact for the inventory verification process.
        inventoryVerificationContactStatus:
          description: >-
            The status of the verification contact. Acceptable values are: -
            "`active`" - "`inactive`" - "`pending`" 
          type: string
        inventoryVerificationContactEmail:
          type: string
          description: The email of the contact for the inventory verification process.
      type: object
      id: LiaInventorySettings
    AccounttaxListResponse:
      id: AccounttaxListResponse
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/AccountTax'
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accounttaxListResponse`".
        nextPageToken:
          type: string
          description: >-
            The token for the retrieval of the next page of account tax
            settings.
    ShipmentTrackingInfo:
      properties:
        carrier:
          type: string
          description: >-
            The shipping carrier that handles the package. Acceptable values
            are: - "`boxtal`" - "`bpost`" - "`chronopost`" - "`colisPrive`" -
            "`colissimo`" - "`cxt`" - "`deliv`" - "`dhl`" - "`dpd`" -
            "`dynamex`" - "`eCourier`" - "`easypost`" - "`efw`" - "`fedex`" -
            "`fedexSmartpost`" - "`geodis`" - "`gls`" - "`googleCourier`" -
            "`gsx`" - "`jdLogistics`" - "`laPoste`" - "`lasership`" - "`manual`"
            - "`mpx`" - "`onTrac`" - "`other`" - "`tnt`" - "`uds`" - "`ups`" -
            "`usps`" 
        trackingNumber:
          description: The tracking number for the package.
          type: string
      type: object
      id: ShipmentTrackingInfo
    AccounttaxCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accounttax response.
      type: object
      id: AccounttaxCustomBatchResponseEntry
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          type: integer
          format: uint32
        errors:
          $ref: '#/components/schemas/Errors'
          description: >-
            A list of errors for failed custombatch entries. *Note:* Schema
            errors fail the whole request.
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accounttaxCustomBatchResponseEntry`"
        accountTax:
          description: The retrieved or updated account tax settings.
          $ref: '#/components/schemas/AccountTax'
    GmbAccounts:
      properties:
        accountId:
          type: string
          description: The ID of the Merchant Center account.
          format: uint64
        gmbAccounts:
          items:
            $ref: '#/components/schemas/GmbAccountsGmbAccount'
          description: A list of Business Profiles which are available to the merchant.
          type: array
      type: object
      id: GmbAccounts
    RegionalinventoryCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch regional inventory response.
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#regionalinventoryCustomBatchResponseEntry`".
          type: string
        regionalInventory:
          $ref: '#/components/schemas/RegionalInventory'
          description: Price and availability of the product.
        errors:
          description: >-
            A list of errors for failed custombatch entries. *Note:* Schema
            errors fail the whole request.
          $ref: '#/components/schemas/Errors'
        batchId:
          type: integer
          description: The ID of the request entry this entry responds to.
          format: uint32
      type: object
      id: RegionalinventoryCustomBatchResponseEntry
    UnitInvoiceAdditionalCharge:
      properties:
        additionalChargeAmount:
          description: >-
            [required] Amount of the additional charge per unit. *Note:*
            Invoicing works on a per unit bases. The `additionalChargeAmount` is
            the amount charged per unit, and will be multiplied by the number of
            entries in `shipmentUnitID`.
          $ref: '#/components/schemas/Amount'
        type:
          description: >-
            [required] Type of the additional charge. Acceptable values are: -
            "`shipping`" 
          type: string
      type: object
      id: UnitInvoiceAdditionalCharge
    OrdersListResponse:
      type: object
      properties:
        nextPageToken:
          description: The token for the retrieval of the next page of orders.
          type: string
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersListResponse`".
        resources:
          items:
            $ref: '#/components/schemas/Order'
          type: array
      id: OrdersListResponse
    HolidayCutoff:
      id: HolidayCutoff
      properties:
        deadlineDate:
          description: >-
            Date of the order deadline, in ISO 8601 format. For example,
            "2016-11-29" for 29th November 2016. Required.
          type: string
        deadlineTimezone:
          description: >-
            Timezone identifier for the deadline hour (for example,
            "Europe/Zurich"). List of identifiers. Required.
          type: string
        visibleFromDate:
          description: >-
            Date on which the deadline will become visible to consumers in ISO
            8601 format. For example, "2016-10-31" for 31st October 2016.
            Required.
          type: string
        holidayId:
          description: Unique identifier for the holiday. Required.
          type: string
        deadlineHour:
          format: uint32
          description: >-
            Hour of the day on the deadline date until which the order has to be
            placed to qualify for the delivery guarantee. Possible values are: 0
            (midnight), 1, ..., 12 (noon), 13, ..., 23. Required.
          type: integer
      type: object
    ReturnpolicyCustomBatchRequest:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ReturnpolicyCustomBatchRequestEntry'
          description: The request entries to be processed in the batch.
      id: ReturnpolicyCustomBatchRequest
    Row:
      properties:
        cells:
          items:
            $ref: '#/components/schemas/Value'
          type: array
          description: >-
            The list of cells that constitute the row. Must have the same length
            as `columnHeaders` for two-dimensional tables, a length of 1 for
            one-dimensional tables. Required.
      id: Row
      type: object
    LocalinventoryCustomBatchResponseEntry:
      description: Batch entry encoding a single local inventory update response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          type: integer
          format: uint32
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#localinventoryCustomBatchResponseEntry`"
          type: string
        errors:
          $ref: '#/components/schemas/Errors'
          description: >-
            A list of errors for failed custombatch entries. *Note:* Schema
            errors fail the whole request.
      type: object
      id: LocalinventoryCustomBatchResponseEntry
    ProductId:
      properties:
        productId:
          type: string
          description: >-
            The Content API ID of the product, in the form
            `channel:contentLanguage:targetCountry:offerId`.
      id: ProductId
      description: The Content API ID of the product.
      type: object
    OrdersCancelLineItemResponse:
      type: object
      properties:
        executionStatus:
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
          type: string
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersCancelLineItemResponse`".
      id: OrdersCancelLineItemResponse
    RepricingProductReport:
      properties:
        date:
          $ref: '#/components/schemas/Date'
          description: >-
            Date of the stats in this report. The report starts and ends
            according to the merchant's timezone.
        type:
          enum:
            - REPRICING_RULE_TYPE_UNSPECIFIED
            - TYPE_STATS_BASED
            - TYPE_COGS_BASED
            - TYPE_SALES_VOLUME_BASED
            - TYPE_COMPETITIVE_PRICE
          type: string
          description: Type of the rule.
          enumDescriptions:
            - Unused.
            - >-
              Statistical measurement based rules among Google SA merchants. If
              this rule is chosen, repricer will adjust the offer price based on
              statistical metrics (currently only min is available) among other
              merchants who sell the same product. Details need to be provdided
              in the RuleDefinition.
            - >-
              Cost of goods sale based rule. Repricer will adjust the offer
              price based on the offer's sale cost which is provided by the
              merchant.
            - >-
              Sales volume based rule. Repricer will adjust the offer price
              based on the offer's sales volume in the past period of time
              defined within the rule.
            - >-
              Competitive price rule. Repricer will adjust the offer price based
              on the min price from a list of unnamed big competitors.
        orderItemCount:
          description: >-
            Total unit count of impacted products ordered while the rule was
            active on the date of the report. This count includes all orders
            that were started while the rule was active, even if the rule was no
            longer active when the order was completed.
          format: int32
          type: integer
        highWatermark:
          $ref: '#/components/schemas/PriceAmount'
          description: Maximum displayed price after repriced during this reporting period.
        inapplicabilityDetails:
          description: >-
            List of all reasons the rule did not apply to the product during the
            specified reporting period.
          type: array
          items:
            $ref: '#/components/schemas/InapplicabilityDetails'
        lowWatermark:
          $ref: '#/components/schemas/PriceAmount'
          description: Minimum displayed price after repriced during this reporting period.
        applicationCount:
          type: string
          description: >-
            Total count of Repricer applications. This value captures how many
            times the rule of this type was applied to this product during this
            reporting period.
          format: int64
        ruleIds:
          items:
            type: string
          description: Ids of the Repricing rule for this report.
          type: array
        buyboxWinningProductStats:
          description: >-
            Stats specific to buybox winning rules for product report
            (deprecated).
          $ref: '#/components/schemas/RepricingProductReportBuyboxWinningProductStats'
        totalGmv:
          $ref: '#/components/schemas/PriceAmount'
          description: >-
            Total GMV generated by impacted products while the rule was active
            on the date of the report. This value includes all orders that were
            started while the rule was active, even if the rule was no longer
            active when the order was completed.
      id: RepricingProductReport
      description: >-
        Resource that represents a daily Repricing product report. Each report
        contains stats for a single type of Repricing rule for a single product
        on a given day. If there are multiple rules of the same type for the
        product on that day, the report lists all the rules by rule ids,
        combines the stats, and paginates the results by date. To retrieve the
        stats of a particular rule, provide the rule_id in the request.
      type: object
    PubsubNotificationSettings:
      description: >-
        Settings for Pub/Sub notifications, all methods require that the caller
        is a direct user of the merchant center account.
      type: object
      id: PubsubNotificationSettings
      properties:
        cloudTopicName:
          type: string
          description: Cloud pub/sub topic to which notifications are sent (read-only).
        registeredEvents:
          type: array
          items:
            type: string
          description: >-
            List of event types. Acceptable values are: -
            "`orderPendingShipment`" 
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#pubsubNotificationSettings`"
    ListConversionSourcesResponse:
      type: object
      properties:
        conversionSources:
          type: array
          items:
            $ref: '#/components/schemas/ConversionSource'
          description: List of conversion sources.
        nextPageToken:
          type: string
          description: Token to be used to fetch the next results page.
      description: Response message for the ListConversionSources method.
      id: ListConversionSourcesResponse
    Datafeed:
      description: Datafeed configuration data.
      properties:
        targets:
          description: >-
            The targets this feed should apply to (country, language,
            destinations).
          type: array
          items:
            $ref: '#/components/schemas/DatafeedTarget'
        attributeLanguage:
          description: >-
            The two-letter ISO 639-1 language in which the attributes are
            defined in the data feed.
          type: string
        fileName:
          type: string
          description: >-
            Required. The filename of the feed. All feeds must have a unique
            file name.
        id:
          format: int64
          type: string
          description: Required for update. The ID of the data feed.
        name:
          type: string
          description: Required for insert. A descriptive name of the data feed.
        format:
          $ref: '#/components/schemas/DatafeedFormat'
          description: Format of the feed file.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#datafeed`"
          type: string
        contentType:
          type: string
          description: >-
            Required. The type of data feed. For product inventory feeds, only
            feeds for local stores, not online stores, are supported. Acceptable
            values are: - "`local products`" - "`product inventory`" -
            "`products`" 
        fetchSchedule:
          $ref: '#/components/schemas/DatafeedFetchSchedule'
          description: Fetch schedule for the feed file.
      type: object
      id: Datafeed
    AttributionSettings:
      description: >-
        Represents attribution settings for conversion sources receiving
        pre-attribution data.
      properties:
        attributionModel:
          enumDescriptions:
            - ''
            - Cross-channel Last Click model.
            - Ads-preferred Last Click model.
            - Cross-channel Data Driven model.
            - Cross-channel First Click model.
            - Cross-channel Linear model.
            - Cross-channel Position Based model.
            - Cross-channel Time Decay model.
          description: Required. Attribution model.
          type: string
          enum:
            - ATTRIBUTION_MODEL_UNSPECIFIED
            - CROSS_CHANNEL_LAST_CLICK
            - ADS_PREFERRED_LAST_CLICK
            - CROSS_CHANNEL_DATA_DRIVEN
            - CROSS_CHANNEL_FIRST_CLICK
            - CROSS_CHANNEL_LINEAR
            - CROSS_CHANNEL_POSITION_BASED
            - CROSS_CHANNEL_TIME_DECAY
        conversionType:
          type: array
          description: >-
            Immutable. Unordered list. List of different conversion types a
            conversion event can be classified as. A standard "purchase" type
            will be automatically created if this list is empty at creation
            time.
          items:
            $ref: '#/components/schemas/AttributionSettingsConversionType'
        attributionLookbackWindowInDays:
          format: int32
          description: >-
            Required. Lookback windows (in days) used for attribution in this
            source. Supported values are 7, 30, 60, 90.
          type: integer
      id: AttributionSettings
      type: object
    DatafeedstatusesCustomBatchRequestEntry:
      id: DatafeedstatusesCustomBatchRequestEntry
      type: object
      properties:
        feedLabel:
          type: string
          description: >-
            The feed label to get the datafeed status for. If this parameter is
            provided, then `language` must also be provided. Note that for
            multi-target datafeeds this parameter is required.
        batchId:
          format: uint32
          type: integer
          description: An entry ID, unique within the batch request.
        datafeedId:
          description: The ID of the data feed to get.
          type: string
          format: uint64
        language:
          description: >-
            The language to get the datafeed status for. If this parameter is
            provided then `country` must also be provided. Note that for
            multi-target datafeeds this parameter is required.
          type: string
        country:
          description: >-
            Deprecated. Use `feedLabel` instead. The country to get the datafeed
            status for. If this parameter is provided, then `language` must also
            be provided. Note that for multi-target datafeeds this parameter is
            required.
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
          description: 'The method of the batch entry. Acceptable values are: - "`get`" '
      description: A batch entry encoding a single non-batch datafeedstatuses request.
    RateGroup:
      id: RateGroup
      type: object
      properties:
        mainTable:
          description: >-
            A table defining the rate group, when `singleValue` is not
            expressive enough. Can only be set if `singleValue` is not set.
          $ref: '#/components/schemas/Table'
        subtables:
          type: array
          description: >-
            A list of subtables referred to by `mainTable`. Can only be set if
            `mainTable` is set.
          items:
            $ref: '#/components/schemas/Table'
        carrierRates:
          items:
            $ref: '#/components/schemas/CarrierRate'
          type: array
          description: >-
            A list of carrier rates that can be referred to by `mainTable` or
            `singleValue`.
        singleValue:
          description: >-
            The value of the rate group (for example, flat rate $10). Can only
            be set if `mainTable` and `subtables` are not set.
          $ref: '#/components/schemas/Value'
        name:
          type: string
          description: >-
            Name of the rate group. Optional. If set has to be unique within
            shipping service.
        applicableShippingLabels:
          items:
            type: string
          description: >-
            A list of shipping labels defining the products to which this rate
            group applies to. This is a disjunction: only one of the labels has
            to match for the rate group to apply. May only be empty for the last
            rate group of a service. Required.
          type: array
    DeliveryAreaPostalCodeRange:
      properties:
        firstPostalCode:
          description: >-
            Required. A postal code or a pattern of the form prefix* denoting
            the inclusive lower bound of the range defining the area. Examples
            values: `"94108"`, `"9410*"`, `"9*"`.
          type: string
        lastPostalCode:
          type: string
          description: >-
            A postal code or a pattern of the form prefix* denoting the
            inclusive upper bound of the range defining the area (for example
            [070* - 078*] results in the range [07000 - 07899]). It must have
            the same length as `firstPostalCode`: if `firstPostalCode` is a
            postal code then `lastPostalCode` must be a postal code too; if
            firstPostalCode is a pattern then `lastPostalCode` must be a pattern
            with the same prefix length. Ignored if not set, then the area is
            defined as being all the postal codes matching `firstPostalCode`.
      type: object
      description: >-
        A range of postal codes that defines the delivery area. Only set
        `firstPostalCode` when specifying a single postal code.
      id: DeliveryAreaPostalCodeRange
    OrderTrackingSignalLineItemDetails:
      type: object
      properties:
        brand:
          type: string
          description: Brand of the product.
        sku:
          type: string
          description: Merchant SKU for this item (deprecated).
        productDescription:
          description: >-
            Plain text description of this product (deprecated: Please use
            product_title instead).
          type: string
        lineItemId:
          type: string
          description: Required. The ID for this line item.
        quantity:
          type: string
          description: The quantity of the line item in the order.
          format: int64
        productTitle:
          description: Plain text title of this product.
          type: string
        productId:
          type: string
          description: >-
            Required. The Content API REST ID of the product, in the form
            channel:contentLanguage:targetCountry:offerId.
        upc:
          type: string
          description: >-
            Universal product code for this item (deprecated: Please use GTIN
            instead).
        mpn:
          type: string
          description: The manufacturer part number.
        gtin:
          description: The Global Trade Item Number.
          type: string
      description: The line items of the order.
      id: OrderTrackingSignalLineItemDetails
    OrdersSetLineItemMetadataResponse:
      id: OrdersSetLineItemMetadataResponse
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersSetLineItemMetadataResponse`".
          type: string
        executionStatus:
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
          type: string
      type: object
    ProductUnitPricingMeasure:
      type: object
      properties:
        value:
          description: The measure of an item.
          format: double
          type: number
        unit:
          description: The unit of the measure.
          type: string
      id: ProductUnitPricingMeasure
    ListRepricingProductReportsResponse:
      id: ListRepricingProductReportsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A token for retrieving the next page. Its absence means there is no
            subsequent page.
        repricingProductReports:
          type: array
          items:
            $ref: '#/components/schemas/RepricingProductReport'
          description: Periodic reports for the given Repricing product.
      description: Response message for the ListRepricingProductReports method.
    Service:
      type: object
      properties:
        currency:
          description: >-
            The CLDR code of the currency to which this service applies. Must
            match that of the prices in rate groups.
          type: string
        eligibility:
          type: string
          description: >-
            Eligibility for this service. Acceptable values are: - "`All
            scenarios`" - "`All scenarios except Shopping Actions`" - "`Shopping
            Actions`" 
        name:
          type: string
          description: >-
            Free-form name of the service. Must be unique within target account.
            Required.
        deliveryTime:
          description: >-
            Time spent in various aspects from order to the delivery of the
            product. Required.
          $ref: '#/components/schemas/DeliveryTime'
        rateGroups:
          description: >-
            Shipping rate group definitions. Only the last one is allowed to
            have an empty `applicableShippingLabels`, which means "everything
            else". The other `applicableShippingLabels` must not overlap.
          type: array
          items:
            $ref: '#/components/schemas/RateGroup'
        minimumOrderValueTable:
          $ref: '#/components/schemas/MinimumOrderValueTable'
          description: >-
            Table of per store minimum order values for the pickup fulfillment
            type. Cannot be set together with minimum_order_value.
        pickupService:
          $ref: '#/components/schemas/PickupCarrierService'
          description: >-
            The carrier-service pair delivering items to collection points. The
            list of supported pickup services can be retrieved through the
            `getSupportedPickupServices` method. Required if and only if the
            service delivery type is `pickup`.
        deliveryCountry:
          type: string
          description: >-
            The CLDR territory code of the country to which the service applies.
            Required.
        shipmentType:
          type: string
          description: >-
            Type of locations this service ships orders to. Acceptable values
            are: - "`delivery`" - "`pickup`" - "`local_delivery`" 
        storeConfig:
          description: >-
            A list of stores your products are delivered from. This is only
            available for the local delivery shipment type.
          $ref: '#/components/schemas/ServiceStoreConfig'
        minimumOrderValue:
          description: >-
            Minimum order value for this service. If set, indicates that
            customers will have to spend at least this amount. All prices within
            a service must have the same currency. Cannot be set together with
            minimum_order_value_table.
          $ref: '#/components/schemas/Price'
        active:
          description: >-
            A boolean exposing the active status of the shipping service.
            Required.
          type: boolean
      id: Service
    TestOrderLineItemProduct:
      type: object
      id: TestOrderLineItemProduct
      properties:
        title:
          type: string
          description: Required. The title of the product.
        imageLink:
          description: Required. URL of an image of the item.
          type: string
        contentLanguage:
          description: >-
            Required. The two-letter ISO 639-1 language code for the item.
            Acceptable values are: - "`en`" - "`fr`" 
          type: string
        offerId:
          type: string
          description: Required. An identifier of the item.
        variantAttributes:
          description: Variant attributes for the item. Optional.
          type: array
          items:
            $ref: '#/components/schemas/OrderLineItemProductVariantAttribute'
        itemGroupId:
          description: Shared identifier for all variants of the same product. Optional.
          type: string
        gtin:
          description: Global Trade Item Number (GTIN) of the item. Optional.
          type: string
        price:
          description: >-
            Required. The price for the product. Tax is automatically calculated
            for orders where marketplace facilitator tax laws are applicable.
            Otherwise, tax settings from Merchant Center are applied.
          $ref: '#/components/schemas/Price'
        condition:
          description: >-
            Required. Condition or state of the item. Acceptable values are: -
            "`new`" 
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item. Optional.
          type: string
        targetCountry:
          type: string
          description: >-
            Required. The CLDR territory code of the target country of the
            product.
        fees:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineItemProductFee'
          description: Fees for the item. Optional.
        brand:
          type: string
          description: Required. Brand of the item.
    RecommendationCallToAction:
      description: >-
        Call to action (CTA) that explains how a merchant can implement this
        recommendation
      id: RecommendationCallToAction
      type: object
      properties:
        uri:
          description: >-
            Optional. URL of the CTA. This field will only be set for some
            recommendations where there is a suggested landing URL. Otherwise it
            will be set to an empty string. We recommend developers to use their
            own custom landing page according to the description of the intent
            field above when this uri field is empty.
          type: string
        localizedText:
          readOnly: true
          type: string
          description: Output only. Localized text of the CTA. Optional.
        intent:
          type: string
          description: >-
            Output only. Intent of the action. This value describes the intent
            (for example, `OPEN_CREATE_EMAIL_CAMPAIGN_FLOW`) and can vary from
            recommendation to recommendation. This value can change over time
            for the same recommendation. Currently available intent values: -
            OPEN_CREATE_EMAIL_CAMPAIGN_FLOW: Opens a user journey where they can
            create a marketing email campaign. (No default URL) -
            OPEN_CREATE_COLLECTION_TAB: Opens a user journey where they can
            [create a
            collection](https://support.google.com/merchants/answer/9703228) for
            their Merchant account. (No default URL)
          readOnly: true
    LocationIdSet:
      properties:
        locationIds:
          description: >-
            A non-empty list of location IDs. They must all be of the same
            location type (for example, state).
          type: array
          items:
            type: string
      type: object
      id: LocationIdSet
    OrderPickupDetails:
      id: OrderPickupDetails
      type: object
      properties:
        pickupType:
          type: string
          description: >-
            The pickup type of this order. Acceptable values are: -
            "`merchantStore`" - "`merchantStoreCurbside`" -
            "`merchantStoreLocker`" - "`thirdPartyPickupPoint`" -
            "`thirdPartyLocker`" 
        address:
          description: >-
            Address of the pickup location where the shipment should be sent.
            Note that `recipientName` in the address is the name of the business
            at the pickup location.
          $ref: '#/components/schemas/OrderAddress'
        collectors:
          items:
            $ref: '#/components/schemas/OrderPickupDetailsCollector'
          description: Collectors authorized to pick up shipment from the pickup location.
          type: array
        locationId:
          type: string
          description: ID of the pickup location.
    OrdersInStoreRefundLineItemResponse:
      id: OrdersInStoreRefundLineItemResponse
      properties:
        executionStatus:
          type: string
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersInStoreRefundLineItemResponse`".
      type: object
    PosCustomBatchResponseEntry:
      type: object
      id: PosCustomBatchResponseEntry
      properties:
        sale:
          description: The updated sale information.
          $ref: '#/components/schemas/PosSale'
        batchId:
          type: integer
          description: The ID of the request entry to which this entry responds.
          format: uint32
        errors:
          $ref: '#/components/schemas/Errors'
          description: A list of errors defined if, and only if, the request failed.
        store:
          description: The retrieved or updated store information.
          $ref: '#/components/schemas/PosStore'
        inventory:
          $ref: '#/components/schemas/PosInventory'
          description: The updated inventory information.
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#posCustomBatchResponseEntry`"
    ListCssesResponse:
      type: object
      description: The response message for the `ListCsses` method
      properties:
        csses:
          description: The CSS domains affiliated with the specified CSS group.
          items:
            $ref: '#/components/schemas/Css'
          type: array
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
      id: ListCssesResponse
    OrdersCustomBatchRequestEntryCreateTestReturnReturnItem:
      properties:
        quantity:
          format: uint32
          description: Quantity that is returned.
          type: integer
        lineItemId:
          description: The ID of the line item to return.
          type: string
      type: object
      id: OrdersCustomBatchRequestEntryCreateTestReturnReturnItem
    ProductViewItemIssue:
      properties:
        resolution:
          description: Item issue resolution.
          type: string
          enumDescriptions:
            - Unknown resolution type.
            - The merchant has to fix the issue.
            - >-
              The issue will be resolved automatically (for example, image
              crawl), or Google review. No merchant action is required now.
              Resolution might lead to another issue (for example, if crawl
              fails).
          enum:
            - UNKNOWN
            - MERCHANT_ACTION
            - PENDING_PROCESSING
        issueType:
          description: Item issue type.
          $ref: '#/components/schemas/ProductViewItemIssueItemIssueType'
        severity:
          description: Item issue severity.
          $ref: '#/components/schemas/ProductViewItemIssueItemIssueSeverity'
      id: ProductViewItemIssue
      type: object
      description: Item issue associated with the product.
    ProductstatusesCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          type: array
          items:
            $ref: '#/components/schemas/ProductstatusesCustomBatchRequestEntry'
      type: object
      id: ProductstatusesCustomBatchRequest
    OrderPickupDetailsCollector:
      properties:
        phoneNumber:
          description: Phone number of the person picking up the shipment.
          type: string
        name:
          description: Name of the person picking up the shipment.
          type: string
      type: object
      id: OrderPickupDetailsCollector
    OrderLineItemProductVariantAttribute:
      id: OrderLineItemProductVariantAttribute
      properties:
        dimension:
          description: The dimension of the variant.
          type: string
        value:
          description: The value for the dimension.
          type: string
      type: object
    ProductsCustomBatchRequest:
      id: ProductsCustomBatchRequest
      properties:
        entries:
          description: The request entries to be processed in the batch.
          type: array
          items:
            $ref: '#/components/schemas/ProductsCustomBatchRequestEntry'
      type: object
    AccountImageImprovements:
      description: >-
        This improvement will attempt to automatically correct submitted images
        if they don't meet the [image
        requirements](https://support.google.com/merchants/answer/6324350), for
        example, removing overlays. If successful, the image will be replaced
        and approved. This improvement is only applied to images of disapproved
        offers. For more information see: [Automatic image
        improvements](https://support.google.com/merchants/answer/9242973)
      id: AccountImageImprovements
      type: object
      properties:
        accountImageImprovementsSettings:
          description: >-
            Determines how the images should be automatically updated. If this
            field is not present, then the settings will be deleted. If there
            are no settings for subaccount, they are inherited from aggregator.
          $ref: '#/components/schemas/AccountImageImprovementsSettings'
        effectiveAllowAutomaticImageImprovements:
          type: boolean
          description: >-
            Output only. The effective value of
            allow_automatic_image_improvements. If
            account_image_improvements_settings is present, then this value is
            the same. Otherwise, it represents the inherited value of the parent
            account. Read-only.
          readOnly: true
    OrdersUpdateShipmentResponse:
      id: OrdersUpdateShipmentResponse
      type: object
      properties:
        executionStatus:
          type: string
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersUpdateShipmentResponse`".
          type: string
    OrdersCreateTestReturnRequest:
      id: OrdersCreateTestReturnRequest
      type: object
      properties:
        items:
          description: Returned items.
          items:
            $ref: >-
              #/components/schemas/OrdersCustomBatchRequestEntryCreateTestReturnReturnItem
          type: array
    Region:
      type: object
      id: Region
      properties:
        postalCodeArea:
          $ref: '#/components/schemas/RegionPostalCodeArea'
          description: A list of postal codes that defines the region area.
        regionalInventoryEligible:
          description: >-
            Output only. Indicates if the region is eligible to use in the
            Regional Inventory configuration.
          readOnly: true
          type: boolean
        regionId:
          readOnly: true
          description: Output only. Immutable. The ID uniquely identifying each region.
          type: string
        displayName:
          type: string
          description: The display name of the region.
        shippingEligible:
          description: >-
            Output only. Indicates if the region is eligible to use in the
            Shipping Services configuration.
          readOnly: true
          type: boolean
        merchantId:
          type: string
          description: Output only. Immutable. Merchant that owns the region.
          format: int64
          readOnly: true
        geotargetArea:
          $ref: '#/components/schemas/RegionGeoTargetArea'
          description: A list of geotargets that defines the region area.
      description: >-
        Represents a geographic region that you can use as a target with both
        the `RegionalInventory` and `ShippingSettings` services. You can define
        regions as collections of either postal codes or, in some countries,
        using predefined geotargets.
    ShippingsettingsListResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: The token for the retrieval of the next page of shipping settings.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#shippingsettingsListResponse`".
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ShippingSettings'
          type: array
      id: ShippingsettingsListResponse
    LiasettingsRequestGmbAccessResponse:
      type: object
      id: LiasettingsRequestGmbAccessResponse
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#liasettingsRequestGmbAccessResponse`".
    PauseBuyOnGoogleProgramRequest:
      type: object
      description: Request message for the PauseProgram method.
      properties: {}
      id: PauseBuyOnGoogleProgramRequest
    OrdersAcknowledgeRequest:
      properties:
        operationId:
          type: string
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
      type: object
      id: OrdersAcknowledgeRequest
    PosInventory:
      description: The absolute quantity of an item available at the given store.
      id: PosInventory
      properties:
        storeCode:
          description: >-
            Required. The identifier of the merchant's store. Either a
            `storeCode` inserted through the API or the code of the store in a
            Business Profile.
          type: string
        gtin:
          type: string
          description: Global Trade Item Number.
        quantity:
          description: Required. The available quantity of the item.
          type: string
          format: int64
        contentLanguage:
          type: string
          description: Required. The two-letter ISO 639-1 language code for the item.
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        timestamp:
          type: string
          description: Required. The inventory timestamp, in ISO 8601 format.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#posInventory`"
          type: string
        price:
          description: Required. The current price of the item.
          $ref: '#/components/schemas/Price'
      type: object
    RequestPhoneVerificationResponse:
      type: object
      description: Response message for the RequestPhoneVerification method.
      properties:
        verificationId:
          type: string
          description: >-
            The verification ID to use in subsequent calls to
            `verifyphonenumber`.
      id: RequestPhoneVerificationResponse
    OrdersCustomBatchRequestEntryRefundItemItem:
      type: object
      properties:
        quantity:
          format: int32
          type: integer
          description: The number of products that are refunded.
        productId:
          description: >-
            The ID of the product. This is the REST ID used in the products
            service. Either lineItemId or productId is required.
          type: string
        lineItemId:
          description: The ID of the line item. Either lineItemId or productId is required.
          type: string
        fullRefund:
          type: boolean
          description: >-
            If true, the full item will be refunded. If this is true, amount
            shouldn't be provided and will be ignored.
        amount:
          description: >-
            The total amount that is refunded. (for example, refunding $5 each
            for 2 products should be done by setting quantity to 2 and amount to
            10$) In case of multiple refunds, this should be the amount you
            currently want to refund to the customer.
          $ref: '#/components/schemas/MonetaryAmount'
      id: OrdersCustomBatchRequestEntryRefundItemItem
    CollectionFeaturedProduct:
      description: >-
        The message for FeaturedProduct.
        [FeaturedProduct](https://support.google.com/merchants/answer/9703736)
      type: object
      id: CollectionFeaturedProduct
      properties:
        x:
          type: number
          description: >-
            Required. X-coordinate of the product callout on the Shoppable
            Image.
          format: float
        'y':
          type: number
          description: >-
            Required. Y-coordinate of the product callout on the Shoppable
            Image.
          format: float
        offerId:
          description: The unique identifier for the product item.
          type: string
    ProductDeliveryTime:
      id: ProductDeliveryTime
      description: >-
        The estimated days to deliver a product after an order is placed. Only
        authorized shipping signals partners working with a merchant can use
        this resource. Merchants should use the
        [`products`](https://developers.google.com/shopping-content/reference/rest/v2.1/products#productshipping)
        resource instead.
      type: object
      properties:
        productId:
          $ref: '#/components/schemas/ProductId'
          description: Required. The `id` of the product.
        areaDeliveryTimes:
          type: array
          description: >-
            Required. A set of associations between `DeliveryArea` and
            `DeliveryTime` entries. The total number of `areaDeliveryTimes` can
            be at most 100.
          items:
            $ref: '#/components/schemas/ProductDeliveryTimeAreaDeliveryTime'
    ReturnpolicyCustomBatchResponse:
      id: ReturnpolicyCustomBatchResponse
      properties:
        entries:
          items:
            $ref: '#/components/schemas/ReturnpolicyCustomBatchResponseEntry'
          type: array
          description: The result of the execution of the batch requests.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#returnpolicyCustomBatchResponse`".
          type: string
      type: object
    Distance:
      description: Distance represented by an integer and unit.
      id: Distance
      properties:
        unit:
          description: >-
            The distance unit. Acceptable values are `None`, `Miles`, and
            `Kilometers`.
          type: string
        value:
          type: string
          description: The distance represented as a number.
          format: int64
      type: object
    ShippingsettingsGetSupportedPickupServicesResponse:
      id: ShippingsettingsGetSupportedPickupServicesResponse
      type: object
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#shippingsettingsGetSupportedPickupServicesResponse`".
          type: string
        pickupServices:
          description: A list of supported pickup services. May be empty.
          items:
            $ref: '#/components/schemas/PickupServicesPickupService'
          type: array
    RepricingRule:
      id: RepricingRule
      properties:
        countryCode:
          type: string
          description: >-
            Required. Immutable. [CLDR country
            code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml)
            (e.g. "US").
        statsBasedRule:
          description: >-
            The rule definition for TYPE_STATS_BASED. Required when the rule
            type is TYPE_STATS_BASED.
          $ref: '#/components/schemas/RepricingRuleStatsBasedRule'
        merchantId:
          description: Output only. Immutable. Merchant that owns the repricing rule.
          format: int64
          readOnly: true
          type: string
        effectiveTimePeriod:
          description: Required. Time period when the rule should take effect.
          $ref: '#/components/schemas/RepricingRuleEffectiveTime'
        restriction:
          description: Required. Restriction of the rule appliance.
          $ref: '#/components/schemas/RepricingRuleRestriction'
        eligibleOfferMatcher:
          description: Required. Match criteria for the eligible offers.
          $ref: '#/components/schemas/RepricingRuleEligibleOfferMatcher'
        paused:
          description: >-
            Represents whether a rule is paused. A paused rule will behave like
            a non-paused rule within CRUD operations, with the major difference
            that a paused rule will not be evaluated and will have no effect on
            offers.
          type: boolean
        ruleId:
          type: string
          readOnly: true
          description: >-
            Output only. Immutable. The ID to uniquely identify each repricing
            rule.
        languageCode:
          description: >-
            Required. Immutable. The two-letter ISO 639-1 language code
            associated with the repricing rule.
          type: string
        title:
          description: The title for the rule.
          type: string
        type:
          enum:
            - REPRICING_RULE_TYPE_UNSPECIFIED
            - TYPE_STATS_BASED
            - TYPE_COGS_BASED
            - TYPE_SALES_VOLUME_BASED
            - TYPE_COMPETITIVE_PRICE
          enumDescriptions:
            - Unused.
            - >-
              Statistical measurement based rules among Google SA merchants. If
              this rule is chosen, repricer will adjust the offer price based on
              statistical metrics (currently only min is available) among other
              merchants who sell the same product. Details need to be provdided
              in the RuleDefinition.
            - >-
              Cost of goods sale based rule. Repricer will adjust the offer
              price based on the offer's sale cost which is provided by the
              merchant.
            - >-
              Sales volume based rule. Repricer will adjust the offer price
              based on the offer's sales volume in the past period of time
              defined within the rule.
            - >-
              Competitive price rule. Repricer will adjust the offer price based
              on the min price from a list of unnamed big competitors.
          description: Required. Immutable. The type of the rule.
          type: string
        cogsBasedRule:
          description: >-
            The rule definition for TYPE_COGS_BASED. Required when the rule type
            is TYPE_COGS_BASED.
          $ref: '#/components/schemas/RepricingRuleCostOfGoodsSaleRule'
      description: >-
        Represents a repricing rule. A repricing rule is used by shopping
        serving to adjust transactable offer prices if conditions are met.
      type: object
    Amount:
      properties:
        priceAmount:
          description: >-
            [required] The pre-tax or post-tax price depending on the location
            of the order.
          $ref: '#/components/schemas/Price'
        taxAmount:
          $ref: '#/components/schemas/Price'
          description: '[required] Tax value.'
      id: Amount
      type: object
    ProductStatusDestinationStatus:
      type: object
      id: ProductStatusDestinationStatus
      properties:
        pendingCountries:
          type: array
          description: >-
            List of country codes (ISO 3166-1 alpha-2) where the offer is
            pending approval.
          items:
            type: string
        destination:
          description: The name of the destination
          type: string
        approvedCountries:
          items:
            type: string
          description: >-
            List of country codes (ISO 3166-1 alpha-2) where the offer is
            approved.
          type: array
        status:
          type: string
          description: >-
            Deprecated. Destination approval status in `targetCountry` of the
            offer.
        disapprovedCountries:
          type: array
          items:
            type: string
          description: >-
            List of country codes (ISO 3166-1 alpha-2) where the offer is
            disapproved.
    ReturnPolicyOnlineReturnShippingFee:
      properties:
        type:
          description: Type of return shipping fee.
          enum:
            - TYPE_UNSPECIFIED
            - FIXED
            - CUSTOMER_PAYING_ACTUAL_FEE
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The return shipping fee is a fixed value.
            - Customer will pay the actual return shipping fee.
        fixedFee:
          description: >-
            Fixed return shipping fee amount. This value is only applicable when
            type is FIXED. We will treat the return shipping fee as free if type
            is FIXED and this value is not set.
          $ref: '#/components/schemas/PriceAmount'
      description: >-
        The return shipping fee. This can either be a fixed fee or a boolean to
        indicate that the customer pays the actual shipping cost.
      id: ReturnPolicyOnlineReturnShippingFee
      type: object
    OrdersUpdateLineItemShippingDetailsRequest:
      properties:
        lineItemId:
          type: string
          description: >-
            The ID of the line item to set metadata. Either lineItemId or
            productId is required.
        operationId:
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
          type: string
        shipByDate:
          description: >-
            Updated ship by date, in ISO 8601 format. If not specified only
            deliver by date is updated. Provided date should be within 1 year
            timeframe and can't be a date in the past.
          type: string
        productId:
          type: string
          description: >-
            The ID of the product to set metadata. This is the REST ID used in
            the products service. Either lineItemId or productId is required.
        deliverByDate:
          description: >-
            Updated delivery by date, in ISO 8601 format. If not specified only
            ship by date is updated. Provided date should be within 1 year
            timeframe and can't be a date in the past.
          type: string
      type: object
      id: OrdersUpdateLineItemShippingDetailsRequest
    OrdersCustomBatchRequestEntryRefundItemShipping:
      properties:
        amount:
          $ref: '#/components/schemas/Price'
          description: >-
            The amount that is refunded. If this is not the first refund for the
            shipment, this should be the newly refunded amount.
        fullRefund:
          description: >-
            If set to true, all shipping costs for the order will be refunded.
            If this is true, amount shouldn't be provided and will be ignored.
            If set to false, submit the amount of the partial shipping refund,
            excluding the shipping tax. The shipping tax is calculated and
            handled on Google's side.
          type: boolean
      type: object
      id: OrdersCustomBatchRequestEntryRefundItemShipping
    PosSaleResponse:
      properties:
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
        quantity:
          format: int64
          description: >-
            Required. The relative change of the available quantity. Negative
            for items returned.
          type: string
        itemId:
          type: string
          description: Required. A unique identifier for the item.
        gtin:
          description: Global Trade Item Number.
          type: string
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        saleId:
          description: A unique ID to group items from the same sale event.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        storeCode:
          description: >-
            Required. The identifier of the merchant's store. Either a
            `storeCode` inserted through the API or the code of the store in a
            Business Profile.
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#posSaleResponse`".
          type: string
        price:
          description: Required. The price of the item.
          $ref: '#/components/schemas/Price'
      id: PosSaleResponse
      type: object
    AccounttaxCustomBatchRequest:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/AccounttaxCustomBatchRequestEntry'
          type: array
          description: The request entries to be processed in the batch.
      type: object
      id: AccounttaxCustomBatchRequest
    OrderLineItemProduct:
      type: object
      id: OrderLineItemProduct
      properties:
        id:
          type: string
          description: The REST ID of the product.
        brand:
          description: Brand of the item.
          type: string
        condition:
          type: string
          description: >-
            Condition or state of the item. Acceptable values are: - "`new`" -
            "`refurbished`" - "`used`" 
        offerId:
          type: string
          description: An identifier of the item.
        title:
          description: The title of the product.
          type: string
        imageLink:
          type: string
          description: URL of an image of the item.
        targetCountry:
          description: The CLDR territory code of the target country of the product.
          type: string
        price:
          $ref: '#/components/schemas/Price'
          description: Price of the item.
        variantAttributes:
          items:
            $ref: '#/components/schemas/OrderLineItemProductVariantAttribute'
          description: >-
            Variant attributes for the item. These are dimensions of the
            product, such as color, gender, material, pattern, and size. You can
            find a comprehensive list of variant attributes here.
          type: array
        mpn:
          description: Manufacturer Part Number (MPN) of the item.
          type: string
        gtin:
          type: string
          description: Global Trade Item Number (GTIN) of the item.
        fees:
          type: array
          description: Associated fees at order creation time.
          items:
            $ref: '#/components/schemas/OrderLineItemProductFee'
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        shownImage:
          description: URL to the cached image shown to the user when order was placed.
          type: string
        itemGroupId:
          type: string
          description: Shared identifier for all variants of the same product.
    DatafeedsCustomBatchResponseEntry:
      id: DatafeedsCustomBatchResponseEntry
      type: object
      description: A batch entry encoding a single non-batch datafeeds response.
      properties:
        errors:
          description: >-
            A list of errors for failed custombatch entries. *Note:* Schema
            errors fail the whole request.
          $ref: '#/components/schemas/Errors'
        datafeed:
          description: >-
            The requested data feed. Defined if and only if the request was
            successful.
          $ref: '#/components/schemas/Datafeed'
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
    DatafeedFormat:
      id: DatafeedFormat
      type: object
      properties:
        columnDelimiter:
          description: >-
            Delimiter for the separation of values in a delimiter-separated
            values feed. If not specified, the delimiter will be auto-detected.
            Ignored for non-DSV data feeds. Acceptable values are: - "`pipe`" -
            "`tab`" - "`tilde`" 
          type: string
        quotingMode:
          type: string
          description: >-
            Specifies how double quotes are interpreted. If not specified, the
            mode will be auto-detected. Ignored for non-DSV data feeds.
            Acceptable values are: - "`normal character`" - "`value quoting`" 
        fileEncoding:
          type: string
          description: >-
            Character encoding scheme of the data feed. If not specified, the
            encoding will be auto-detected. Acceptable values are: - "`latin-1`"
            - "`utf-16be`" - "`utf-16le`" - "`utf-8`" - "`windows-1252`" 
    ShippingsettingsGetSupportedHolidaysResponse:
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#shippingsettingsGetSupportedHolidaysResponse`".
          type: string
        holidays:
          description: A list of holidays applicable for delivery guarantees. May be empty.
          type: array
          items:
            $ref: '#/components/schemas/HolidaysHoliday'
      type: object
      id: ShippingsettingsGetSupportedHolidaysResponse
    ActivateBuyOnGoogleProgramRequest:
      description: Request message for the ActivateProgram method.
      properties: {}
      type: object
      id: ActivateBuyOnGoogleProgramRequest
    PosDataProvidersPosDataProvider:
      type: object
      id: PosDataProvidersPosDataProvider
      properties:
        fullName:
          type: string
          description: The full name of this POS data Provider.
        displayName:
          type: string
          description: The display name of Pos data Provider.
        providerId:
          type: string
          format: uint64
          description: The ID of the account.
    ReturnpolicyListResponse:
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#returnpolicyListResponse`".
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ReturnPolicy'
          type: array
      type: object
      id: ReturnpolicyListResponse
    PosCustomBatchRequestEntry:
      properties:
        method:
          description: >-
            The method of the batch entry. Acceptable values are: - "`delete`" -
            "`get`" - "`insert`" - "`inventory`" - "`sale`" 
          type: string
        store:
          description: >-
            The store information to submit. This should be set only if the
            method is `insert`.
          $ref: '#/components/schemas/PosStore'
        targetMerchantId:
          format: uint64
          type: string
          description: The ID of the account for which to get/submit data.
        merchantId:
          description: The ID of the POS data provider.
          type: string
          format: uint64
        storeCode:
          type: string
          description: >-
            The store code. This should be set only if the method is `delete` or
            `get`.
        sale:
          $ref: '#/components/schemas/PosSale'
          description: >-
            The sale information to submit. This should be set only if the
            method is `sale`.
        inventory:
          description: >-
            The inventory to submit. This should be set only if the method is
            `inventory`.
          $ref: '#/components/schemas/PosInventory'
        batchId:
          format: uint32
          type: integer
          description: An entry ID, unique within the batch request.
      id: PosCustomBatchRequestEntry
      type: object
    SettlementTransactionAmount:
      type: object
      id: SettlementTransactionAmount
      properties:
        type:
          description: >-
            The type of the amount. Acceptable values are: - "`itemPrice`" -
            "`orderPrice`" - "`refund`" - "`earlyRefund`" - "`courtesyRefund`" -
            "`returnRefund`" - "`returnLabelShippingFeeAmount`" -
            "`lumpSumCorrectionAmount`" 
          type: string
        transactionAmount:
          $ref: '#/components/schemas/Price'
          description: The amount that contributes to the line item price.
        description:
          description: >-
            The description of the event. Acceptable values are: -
            "`taxWithhold`" - "`principal`" - "`principalAdjustment`" -
            "`shippingFee`" - "`merchantRemittedSalesTax`" -
            "`googleRemittedSalesTax`" - "`merchantCoupon`" -
            "`merchantCouponTax`" - "`merchantRemittedDisposalTax`" -
            "`googleRemittedDisposalTax`" - "`merchantRemittedRedemptionFee`" -
            "`googleRemittedRedemptionFee`" - "`eeeEcoFee`" -
            "`furnitureEcoFee`" - "`copyPrivateFee`" - "`eeeEcoFeeCommission`" -
            "`furnitureEcoFeeCommission`" - "`copyPrivateFeeCommission`" -
            "`principalRefund`" - "`principalRefundTax`" - "`itemCommission`" -
            "`adjustmentCommission`" - "`shippingFeeCommission`" -
            "`commissionRefund`" - "`damaged`" - "`damagedOrDefectiveItem`" -
            "`expiredItem`" - "`faultyItem`" - "`incorrectItemReceived`" -
            "`itemMissing`" - "`qualityNotExpected`" - "`receivedTooLate`" -
            "`storePackageMissing`" - "`transitPackageMissing`" -
            "`unsuccessfulDeliveryUndeliverable`" - "`wrongChargeInStore`" -
            "`wrongItem`" - "`returns`" - "`undeliverable`" -
            "`issueRelatedRefundAndReplacementAmountDescription`" -
            "`refundFromMerchant`" - "`returnLabelShippingFee`" -
            "`lumpSumCorrection`" - "`pspFee`" - "`principalRefundDoesNotFit`" -
            "`principalRefundOrderedWrongItem`" -
            "`principalRefundQualityNotExpected`" -
            "`principalRefundBetterPriceFound`" -
            "`principalRefundNoLongerNeeded`" - "`principalRefundChangedMind`" -
            "`principalRefundReceivedTooLate`" -
            "`principalRefundIncorrectItemReceived`" -
            "`principalRefundDamagedOrDefectiveItem`" -
            "`principalRefundDidNotMatchDescription`" -
            "`principalRefundExpiredItem`" 
          type: string
        commission:
          $ref: '#/components/schemas/SettlementTransactionAmountCommission'
    ProductCluster:
      id: ProductCluster
      type: object
      properties:
        categoryL1:
          type: string
          description: >-
            Product category (1st level) of the product cluster, represented in
            Google's product taxonomy.
        categoryL3:
          type: string
          description: >-
            Product category (3rd level) of the product cluster, represented in
            Google's product taxonomy.
        categoryL2:
          description: >-
            Product category (2nd level) of the product cluster, represented in
            Google's product taxonomy.
          type: string
        brand:
          type: string
          description: Brand of the product cluster.
        variantGtins:
          items:
            type: string
          description: GTINs of example variants of the product cluster.
          type: array
        title:
          description: Title of the product cluster.
          type: string
        categoryL4:
          type: string
          description: >-
            Product category (4th level) of the product cluster, represented in
            Google's product taxonomy.
        inventoryStatus:
          enumDescriptions:
            - Inventory status is unknown.
            - Merchant has a product for this product cluster or brand in stock.
            - >-
              Merchant has a product for this product cluster or brand in
              inventory but it is currently out of stock.
            - >-
              Merchant does not have a product for this product cluster or brand
              in inventory.
          type: string
          enum:
            - INVENTORY_STATUS_UNSPECIFIED
            - IN_STOCK
            - OUT_OF_STOCK
            - NOT_IN_INVENTORY
          description: >-
            Tells whether the product cluster is `IN_STOCK` in your product feed
            across multiple countries, `OUT_OF_STOCK` in your product feed, or
            `NOT_IN_INVENTORY` at all. The field doesn't take the Best Sellers
            report country filter into account.
        categoryL5:
          type: string
          description: >-
            Product category (5th level) of the product cluster, represented in
            Google's product taxonomy.
        brandInventoryStatus:
          description: >-
            Tells if there is at least one product of the brand currently
            `IN_STOCK` in your product feed across multiple countries, all
            products are `OUT_OF_STOCK` in your product feed, or
            `NOT_IN_INVENTORY`. The field doesn't take the Best Sellers report
            country filter into account.
          enum:
            - INVENTORY_STATUS_UNSPECIFIED
            - IN_STOCK
            - OUT_OF_STOCK
            - NOT_IN_INVENTORY
          enumDescriptions:
            - Inventory status is unknown.
            - Merchant has a product for this product cluster or brand in stock.
            - >-
              Merchant has a product for this product cluster or brand in
              inventory but it is currently out of stock.
            - >-
              Merchant does not have a product for this product cluster or brand
              in inventory.
          type: string
      description: >-
        Product cluster fields. A product cluster is a grouping for different
        offers that represent the same product. Values are only set for fields
        requested explicitly in the request's search query.
    OrderTrackingSignalShipmentLineItemMapping:
      properties:
        shipmentId:
          type: string
          description: >-
            Required. The shipment ID. This field will be hashed in returned
            OrderTrackingSignal creation response.
        lineItemId:
          type: string
          description: Required. The line item ID.
        quantity:
          description: The line item quantity in the shipment.
          type: string
          format: int64
      id: OrderTrackingSignalShipmentLineItemMapping
      type: object
      description: >-
        Represents how many items are in the shipment for the given shipment_id
        and line_item_id.
    RepricingRuleStatsBasedRule:
      type: object
      properties:
        percentageDelta:
          type: integer
          description: >-
            The percent change against the price target. Valid from 0 to 100
            inclusively.
          format: int32
        priceDelta:
          description: >-
            The price delta against the above price target. A positive value
            means the price should be adjusted to be above statistical measure,
            and a negative value means below. Currency code must not be
            included.
          type: string
      description: Definition of stats based rule.
      id: RepricingRuleStatsBasedRule
    AccountsUpdateLabelsResponse:
      type: object
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accountsUpdateLabelsResponse`".
      id: AccountsUpdateLabelsResponse
    MerchantOrderReturnItem:
      properties:
        state:
          description: >-
            State of the item. Acceptable values are: - "`canceled`" - "`new`" -
            "`received`" - "`refunded`" - "`rejected`" 
          type: string
        customerReturnReason:
          description: The reason that the customer chooses to return an item.
          $ref: '#/components/schemas/CustomerReturnReason'
        itemId:
          description: >-
            Product level item ID. If the returned items are of the same
            product, they will have the same ID.
          type: string
        returnItemId:
          description: >-
            Unit level ID for the return item. Different units of the same
            product will have different IDs.
          type: string
        shipmentGroupId:
          description: >-
            ID of the original shipment group. Provided for shipments with
            invoice support.
          type: string
        merchantReturnReason:
          $ref: '#/components/schemas/RefundReason'
          description: The reason that merchant chooses to accept a return item.
        refundableAmount:
          description: Maximum amount that can be refunded for this return item.
          $ref: '#/components/schemas/MonetaryAmount'
        returnShipmentIds:
          description: IDs of the return shipments that this return item belongs to.
          type: array
          items:
            type: string
        merchantRejectionReason:
          description: The reason that the merchant chose to reject an item return.
          $ref: '#/components/schemas/MerchantRejectionReason'
        product:
          description: Product data from the time of the order placement.
          $ref: '#/components/schemas/OrderLineItemProduct'
        shipmentUnitId:
          description: >-
            ID of the shipment unit assigned by the merchant. Provided for
            shipments with invoice support.
          type: string
      id: MerchantOrderReturnItem
      type: object
    ProductsCustomBatchRequestEntry:
      id: ProductsCustomBatchRequestEntry
      properties:
        method:
          description: >-
            The method of the batch entry. Acceptable values are: - "`delete`" -
            "`get`" - "`insert`" - "`update`" 
          type: string
        productId:
          description: >-
            The ID of the product to get or mutate. Only defined if the method
            is `get`, `delete`, or `update`.
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        feedId:
          type: string
          format: uint64
          description: >-
            The Content API Supplemental Feed ID. If present then product
            insertion or deletion applies to a supplemental feed instead of
            primary Content API feed.
        updateMask:
          format: google-fieldmask
          description: >-
            The comma-separated list of product attributes to be updated.
            Example: `"title,salePrice"`. Attributes specified in the update
            mask without a value specified in the body will be deleted from the
            product. *You must specify the update mask to delete attributes.*
            Only top-level product attributes can be updated. If not defined,
            product attributes with set values will be updated and other
            attributes will stay unchanged. Only defined if the method is
            `update`.
          type: string
        product:
          description: >-
            The product to insert or update. Only required if the method is
            `insert` or `update`. If the `update` method is used with
            `updateMask` only to delete a field, then this isn't required. For
            example, setting `salePrice` on the `updateMask` and not providing a
            `product` will result in an existing sale price on the product
            specified by `productId` being deleted.
          $ref: '#/components/schemas/Product'
        batchId:
          format: uint32
          description: An entry ID, unique within the batch request.
          type: integer
      type: object
      description: A batch entry encoding a single non-batch products request.
    CaptureOrderRequest:
      description: Request message for the CaptureOrder method.
      type: object
      properties: {}
      id: CaptureOrderRequest
    ProductsCustomBatchResponseEntry:
      id: ProductsCustomBatchResponseEntry
      properties:
        batchId:
          format: uint32
          type: integer
          description: The ID of the request entry this entry responds to.
        errors:
          $ref: '#/components/schemas/Errors'
          description: >-
            A list of errors for failed custombatch entries. *Note:* Schema
            errors fail the whole request.
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#productsCustomBatchResponseEntry`"
        product:
          $ref: '#/components/schemas/Product'
          description: >-
            The inserted product. Only defined if the method is `insert` and if
            the request was successful.
      description: A batch entry encoding a single non-batch products response.
      type: object
    OrderCustomer:
      type: object
      properties:
        fullName:
          description: Full name of the customer.
          type: string
        invoiceReceivingEmail:
          type: string
          description: >-
            Email address for the merchant to send value-added tax or invoice
            documentation of the order. Only the last document sent is made
            available to the customer. For more information, see About automated
            VAT invoicing for Buy on Google.
        loyaltyInfo:
          description: Loyalty program information.
          $ref: '#/components/schemas/OrderCustomerLoyaltyInfo'
        marketingRightsInfo:
          description: >-
            Customer's marketing preferences. Contains the marketing opt-in
            information that is current at the time that the merchant call. User
            preference selections can change from one order to the next so
            preferences must be checked with every order.
          $ref: '#/components/schemas/OrderCustomerMarketingRightsInfo'
      id: OrderCustomer
    PriceInsights:
      description: >-
        Price insights fields requested by the merchant in the query. Field
        values are only set if the merchant queries `PriceInsightsProductView`.
        https://support.google.com/merchants/answer/11916926
      properties:
        suggestedPriceMicros:
          description: >-
            The latest suggested price in micros (1 millionth of a standard
            unit, 1 USD = 1000000 micros) for the product.
          format: int64
          type: string
        predictedClicksChangeFraction:
          description: >-
            The predicted change in clicks as a fraction after introducing the
            suggested price compared to current active price. For example, 0.05
            is a 5% predicted increase in clicks.
          format: double
          type: number
        predictedConversionsChangeFraction:
          format: double
          description: >-
            The predicted change in conversions as a fraction after introducing
            the suggested price compared to current active price. For example,
            0.05 is a 5% predicted increase in conversions).
          type: number
        predictedImpressionsChangeFraction:
          description: >-
            The predicted change in impressions as a fraction after introducing
            the suggested price compared to current active price. For example,
            0.05 is a 5% predicted increase in impressions.
          type: number
          format: double
        predictedMonthlyGrossProfitChangeCurrencyCode:
          type: string
          description: The predicted monthly gross profit change currency (ISO 4217 code).
        suggestedPriceCurrencyCode:
          description: The suggested price currency (ISO 4217 code).
          type: string
        predictedGrossProfitChangeFraction:
          description: >-
            The predicted change in gross profit as a fraction after introducing
            the suggested price compared to current active price. For example,
            0.05 is a 5% predicted increase in gross profit.
          format: double
          type: number
        predictedMonthlyGrossProfitChangeMicros:
          type: string
          format: int64
          description: >-
            The predicted change in gross profit in micros (1 millionth of a
            standard unit, 1 USD = 1000000 micros) after introducing the
            suggested price for a month compared to current active price.
      id: PriceInsights
      type: object
    OrderLineItemAdjustment:
      type: object
      properties:
        type:
          type: string
          description: 'Type of this adjustment. Acceptable values are: - "`promotion`" '
        taxAdjustment:
          description: Adjustment for total tax of the line item.
          $ref: '#/components/schemas/Price'
        priceAdjustment:
          description: Adjustment for total price of the line item.
          $ref: '#/components/schemas/Price'
      id: OrderLineItemAdjustment
    TestOrderLineItem:
      id: TestOrderLineItem
      properties:
        returnInfo:
          $ref: '#/components/schemas/OrderLineItemReturnInfo'
          description: Required. Details of the return policy for the line item.
        quantityOrdered:
          type: integer
          description: Required. Number of items ordered.
          format: uint32
        product:
          description: Required. Product data from the time of the order placement.
          $ref: '#/components/schemas/TestOrderLineItemProduct'
        shippingDetails:
          $ref: '#/components/schemas/OrderLineItemShippingDetails'
          description: Required. Details of the requested shipping for the line item.
      type: object
    RequestPhoneVerificationRequest:
      id: RequestPhoneVerificationRequest
      type: object
      description: Request message for the RequestPhoneVerification method.
      properties:
        languageCode:
          type: string
          description: >-
            Language code [IETF BCP 47
            syntax](https://tools.ietf.org/html/bcp47) (for example, en-US).
            Language code is used to provide localized `SMS` and `PHONE_CALL`.
            Default language used is en-US if not provided.
        phoneRegionCode:
          description: >-
            Required. Two letter country code for the phone number, for example
            `CA` for Canadian numbers. See the [ISO 3166-1
            alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements)
            officially assigned codes.
          type: string
        phoneNumber:
          type: string
          description: Phone number to be verified.
        phoneVerificationMethod:
          enumDescriptions:
            - Unknown method.
            - Receive verification code by SMS.
            - Receive verification code by phone call.
          enum:
            - PHONE_VERIFICATION_METHOD_UNSPECIFIED
            - SMS
            - PHONE_CALL
          description: Verification method to receive verification code.
          type: string
    SearchResponse:
      description: Response message for the ReportService.Search method.
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            Token which can be sent as `page_token` to retrieve the next page.
            If omitted, there are no subsequent pages.
        results:
          description: Rows that matched the search query.
          type: array
          items:
            $ref: '#/components/schemas/ReportRow'
      id: SearchResponse
    AccountGoogleMyBusinessLink:
      type: object
      properties:
        gmbEmail:
          description: >-
            The Business Profile email address of a specific account within a
            Business Profile. A sample account within a Business Profile could
            be a business account with set of locations, managed under the
            Business Profile.
          type: string
        status:
          description: >-
            Status of the link between this Merchant Center account and the
            Business Profile. Acceptable values are: - "`active`" - "`pending`" 
          type: string
        gmbAccountId:
          type: string
          description: >-
            The ID of the Business Profile. If this is provided, then `gmbEmail`
            is ignored. The value of this field should match the `accountId`
            used by the Business Profile API.
      id: AccountGoogleMyBusinessLink
    HolidaysHoliday:
      type: object
      id: HolidaysHoliday
      properties:
        deliveryGuaranteeDate:
          description: >-
            Date on which the order has to arrive at the customer's, in ISO 8601
            format. For example, "2016-12-24" for 24th December 2016. Always
            present.
          type: string
        date:
          description: >-
            Date of the holiday, in ISO 8601 format. For example, "2016-12-25"
            for Christmas 2016. Always present.
          type: string
        deliveryGuaranteeHour:
          description: >-
            Hour of the day in the delivery location's timezone on the
            guaranteed delivery date by which the order has to arrive at the
            customer's. Possible values are: 0 (midnight), 1, ..., 12 (noon),
            13, ..., 23. Always present.
          format: uint64
          type: string
        countryCode:
          description: >-
            The CLDR territory code of the country in which the holiday is
            available. For example, "US", "DE", "GB". A holiday cutoff can only
            be configured in a shipping settings service with matching delivery
            country. Always present.
          type: string
        id:
          description: >-
            Unique identifier for the holiday to be used when configuring
            holiday cutoffs. Always present.
          type: string
        type:
          type: string
          description: >-
            The holiday type. Always present. Acceptable values are: -
            "`Christmas`" - "`Easter`" - "`Father's Day`" - "`Halloween`" -
            "`Independence Day (USA)`" - "`Mother's Day`" - "`Thanksgiving`" -
            "`Valentine's Day`" 
    OrderLineItem:
      properties:
        returns:
          items:
            $ref: '#/components/schemas/OrderReturn'
          description: Returns of the line item.
          type: array
        quantityPending:
          description: Number of items pending.
          format: uint32
          type: integer
        quantityReturned:
          description: Number of items returned.
          format: uint32
          type: integer
        cancellations:
          items:
            $ref: '#/components/schemas/OrderCancellation'
          description: Cancellations of the line item.
          type: array
        quantityShipped:
          format: uint32
          type: integer
          description: Number of items shipped.
        quantityCanceled:
          type: integer
          description: Number of items canceled.
          format: uint32
        annotations:
          description: Annotations that are attached to the line item.
          type: array
          items:
            $ref: '#/components/schemas/OrderMerchantProvidedAnnotation'
        quantityDelivered:
          type: integer
          description: Number of items delivered.
          format: uint32
        tax:
          $ref: '#/components/schemas/Price'
          description: >-
            Total tax amount for the line item. For example, if two items are
            purchased, and each have a cost tax of $2, the total tax amount will
            be $4.
        shippingDetails:
          description: Details of the requested shipping for the line item.
          $ref: '#/components/schemas/OrderLineItemShippingDetails'
        quantityOrdered:
          type: integer
          description: Number of items ordered.
          format: uint32
        quantityReadyForPickup:
          type: integer
          format: uint32
          description: Number of items ready for pickup.
        adjustments:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineItemAdjustment'
          description: Price and tax adjustments applied on the line item.
        product:
          description: >-
            Product data as seen by customer from the time of the order
            placement. Note that certain attributes values (for example, title
            or gtin) might be reformatted and no longer match values submitted
            through product feed.
          $ref: '#/components/schemas/OrderLineItemProduct'
        id:
          type: string
          description: The ID of the line item.
        price:
          $ref: '#/components/schemas/Price'
          description: >-
            Total price for the line item. For example, if two items for $10 are
            purchased, the total price will be $20.
        quantityUndeliverable:
          format: uint32
          type: integer
          description: Number of items undeliverable.
        returnInfo:
          description: Details of the return policy for the line item.
          $ref: '#/components/schemas/OrderLineItemReturnInfo'
      type: object
      id: OrderLineItem
    OrderLineItemShippingDetails:
      type: object
      properties:
        shipByDate:
          type: string
          description: Required. The ship by date, in ISO 8601 format.
        type:
          description: >-
            Type of shipment. Indicates whether `deliveryDetails` or
            `pickupDetails` is applicable for this shipment. Acceptable values
            are: - "`delivery`" - "`pickup`" 
          type: string
        deliverByDate:
          description: Required. The delivery by date, in ISO 8601 format.
          type: string
        pickupPromiseInMinutes:
          format: uint32
          type: integer
          description: >-
            The promised time in minutes in which the order will be ready for
            pickup. This only applies to buy-online-pickup-in-store same-day
            order.
        method:
          $ref: '#/components/schemas/OrderLineItemShippingDetailsMethod'
          description: Required. Details of the shipping method.
      id: OrderLineItemShippingDetails
    BestSellers:
      type: object
      description: >-
        Fields related to the [Best sellers
        reports](https://support.google.com/merchants/answer/9488679).
      id: BestSellers
      properties:
        previousRank:
          description: Popularity rank in the previous week or month.
          type: string
          format: int64
        countryCode:
          description: >-
            Country where the ranking is calculated. A `WHERE` condition on
            `best_sellers.country_code` is required in the query.
          type: string
        relativeDemand:
          enumDescriptions:
            - Relative demand is unknown.
            - >-
              Demand is 0-5% of the demand of the highest ranked product
              clusters or brands.
            - >-
              Demand is 6-10% of the demand of the highest ranked product
              clusters or brands.
            - >-
              Demand is 11-20% of the demand of the highest ranked product
              clusters or brands.
            - >-
              Demand is 21-50% of the demand of the highest ranked product
              clusters or brands.
            - >-
              Demand is 51-100% of the demand of the highest ranked product
              clusters or brands.
          enum:
            - RELATIVE_DEMAND_UNSPECIFIED
            - VERY_LOW
            - LOW
            - MEDIUM
            - HIGH
            - VERY_HIGH
          type: string
          description: >-
            Estimated demand in relation to the item with the highest popularity
            rank in the same category and country.
        categoryId:
          format: int64
          type: string
          description: >-
            Google product category ID to calculate the ranking for, represented
            in [Google's product
            taxonomy](https://support.google.com/merchants/answer/6324436). If a
            `WHERE` condition on `best_sellers.category_id` is not specified in
            the query, rankings for all top-level categories are returned.
        rank:
          type: string
          format: int64
          description: >-
            Popularity on Shopping ads and free listings, in the selected
            category and country, based on the estimated number of units sold.
        reportDate:
          description: >-
            Report date. The value of this field can only be one of the
            following: * The first day of the week (Monday) for weekly reports.
            * The first day of the month for monthly reports. If a `WHERE`
            condition on `best_sellers.report_date` is not specified in the
            query, the latest available weekly or monthly report is returned.
          $ref: '#/components/schemas/Date'
        reportGranularity:
          type: string
          enum:
            - REPORT_GRANULARITY_UNSPECIFIED
            - WEEKLY
            - MONTHLY
          description: >-
            Granularity of the report. The ranking can be done over a week or a
            month timeframe. A `WHERE` condition on
            `best_sellers.report_granularity` is required in the query.
          enumDescriptions:
            - Report granularity is unknown.
            - Ranking is done over a week timeframe.
            - Ranking is done over a month timeframe.
        previousRelativeDemand:
          enumDescriptions:
            - Relative demand is unknown.
            - >-
              Demand is 0-5% of the demand of the highest ranked product
              clusters or brands.
            - >-
              Demand is 6-10% of the demand of the highest ranked product
              clusters or brands.
            - >-
              Demand is 11-20% of the demand of the highest ranked product
              clusters or brands.
            - >-
              Demand is 21-50% of the demand of the highest ranked product
              clusters or brands.
            - >-
              Demand is 51-100% of the demand of the highest ranked product
              clusters or brands.
          type: string
          description: >-
            Estimated demand in relation to the item with the highest popularity
            rank in the same category and country in the previous week or month.
          enum:
            - RELATIVE_DEMAND_UNSPECIFIED
            - VERY_LOW
            - LOW
            - MEDIUM
            - HIGH
            - VERY_HIGH
        relativeDemandChange:
          type: string
          enumDescriptions:
            - Relative demand change is unknown.
            - Relative demand is lower than previous time period.
            - Relative demand is equal to previous time period.
            - Relative demand is higher than the previous time period.
          enum:
            - RELATIVE_DEMAND_CHANGE_TYPE_UNSPECIFIED
            - SINKER
            - FLAT
            - RISER
          description: >-
            Change in the estimated demand. Whether it rose, sank or remained
            flat.
    RegionalInventory:
      id: RegionalInventory
      type: object
      properties:
        salePriceEffectiveDate:
          description: >-
            A date range represented by a pair of ISO 8601 dates separated by a
            space, comma, or slash. Both dates might be specified as 'null' if
            undecided.
          type: string
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
          description: >-
            A list of custom (merchant-provided) attributes. It can also be used
            for submitting any attribute of the feed specification in its
            generic form.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#regionalInventory`".
          type: string
        availability:
          type: string
          description: The availability of the product.
        price:
          $ref: '#/components/schemas/Price'
          description: The price of the product.
        regionId:
          description: The ID uniquely identifying each region.
          type: string
        salePrice:
          description: >-
            The sale price of the product. Mandatory if
            `sale_price_effective_date` is defined.
          $ref: '#/components/schemas/Price'
      description: >-
        Regional inventory resource. contains the regional name and all
        attributes which are overridden for the specified region.
    Error:
      type: object
      properties:
        domain:
          description: The domain of the error.
          type: string
        message:
          description: A description of the error.
          type: string
        reason:
          description: The error code.
          type: string
      description: An error returned by the API.
      id: Error
    AccountShippingImprovements:
      type: object
      id: AccountShippingImprovements
      description: >-
        Not available for MCAs
        [accounts](https://support.google.com/merchants/answer/188487). By
        turning on [automatic shipping
        improvements](https://support.google.com/merchants/answer/10027038), you
        are allowing Google to improve the accuracy of your delivery times shown
        to shoppers using Google. More accurate delivery times, especially when
        faster, typically lead to better conversion rates. Google will improve
        your estimated delivery times based on various factors: * Delivery
        address of an order * Current handling time and shipping time settings *
        Estimated weekdays or business days * Parcel tracking data
      properties:
        allowShippingImprovements:
          description: Enables automatic shipping improvements.
          type: boolean
    InvoiceSummaryAdditionalChargeSummary:
      id: InvoiceSummaryAdditionalChargeSummary
      type: object
      properties:
        type:
          description: >-
            [required] Type of the additional charge. Acceptable values are: -
            "`shipping`" 
          type: string
        totalAmount:
          $ref: '#/components/schemas/Amount'
          description: '[required] Total additional charge for this type.'
    TestOrderPickupDetailsPickupPerson:
      type: object
      properties:
        phoneNumber:
          type: string
          description: Required. The phone number of the person picking up the items.
        name:
          type: string
          description: Required. Full name of the pickup person.
      id: TestOrderPickupDetailsPickupPerson
    OrdersRejectReturnLineItemRequest:
      properties:
        quantity:
          description: The quantity to return and refund.
          type: integer
          format: uint32
        operationId:
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
          type: string
        reason:
          type: string
          description: >-
            The reason for the return. Acceptable values are: -
            "`damagedOrUsed`" - "`missingComponent`" - "`notEligible`" -
            "`other`" - "`outOfReturnWindow`" 
        reasonText:
          type: string
          description: The explanation of the reason.
        productId:
          type: string
          description: >-
            The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
        lineItemId:
          description: >-
            The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
      id: OrdersRejectReturnLineItemRequest
      type: object
    Product:
      description: ' Required product attributes are primarily defined by the product data specification. See the Product Data Specification Help Center article for information. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect.'
      id: Product
      type: object
      properties:
        energyEfficiencyClass:
          description: The energy efficiency class as defined in EU directive 2010/30/EU.
          type: string
        minHandlingTime:
          format: int64
          description: Minimal product handling time (in business days).
          type: string
        salePrice:
          $ref: '#/components/schemas/Price'
          description: Advertised sale price of the item.
        shippingLabel:
          description: >-
            The shipping label of the product, used to group product in
            account-level shipping rules.
          type: string
        mobileLink:
          type: string
          description: URL for the mobile-optimized version of your item's landing page.
        ageGroup:
          description: Target age group of the item.
          type: string
        material:
          type: string
          description: The material of which the item is made.
        adsGrouping:
          description: >-
            Used to group items in an arbitrary way. Only for CPA%, discouraged
            otherwise.
          type: string
        loyaltyPoints:
          description: >-
            Loyalty points that users receive after purchasing the item. Japan
            only.
          $ref: '#/components/schemas/LoyaltyPoints'
        unitPricingBaseMeasure:
          description: The preference of the denominator of the unit price.
          $ref: '#/components/schemas/ProductUnitPricingBaseMeasure'
        sellOnGoogleQuantity:
          format: int64
          description: >-
            The quantity of the product that is available for selling on Google.
            Supported only for online products.
          type: string
        gtin:
          type: string
          description: Global Trade Item Number (GTIN) of the item.
        shippingWeight:
          description: Weight of the item for shipping.
          $ref: '#/components/schemas/ProductShippingWeight'
        displayAdsLink:
          description: >-
            URL directly to your item's landing page for dynamic remarketing
            campaigns.
          type: string
        customLabel2:
          type: string
          description: Custom label 2 for custom grouping of items in a Shopping campaign.
        maxHandlingTime:
          description: Maximal product handling time (in business days).
          format: int64
          type: string
        brand:
          type: string
          description: Brand of the item.
        additionalSizeType:
          type: string
          description: >-
            Additional cut of the item. Used together with size_type to
            represent combined size types for apparel items.
        salePriceEffectiveDate:
          type: string
          description: >-
            Date range during which the item is on sale (see product data
            specification ).
        contentLanguage:
          type: string
          description: Required. The two-letter ISO 639-1 language code for the item.
        maxEnergyEfficiencyClass:
          type: string
          description: The energy efficiency class as defined in EU directive 2010/30/EU.
        shippingLength:
          $ref: '#/components/schemas/ProductShippingDimension'
          description: Length of the item for shipping.
        targetCountry:
          description: Required. The CLDR territory code for the item's country of sale.
          type: string
        pause:
          type: string
          description: >-
            Publication of this item should be temporarily paused. Acceptable
            values are: - "`ads`" 
        itemGroupId:
          description: Shared identifier for all variants of the same product.
          type: string
        id:
          type: string
          description: >-
            The REST ID of the product. Content API methods that operate on
            products take this as their `productId` parameter. The REST ID for a
            product has one of the 2 forms channel:contentLanguage:
            targetCountry: offerId or channel:contentLanguage:feedLabel:
            offerId.
        shipping:
          items:
            $ref: '#/components/schemas/ProductShipping'
          type: array
          description: Shipping rules.
        adsLabels:
          type: array
          items:
            type: string
          description: Similar to ads_grouping, but only works on CPC.
        promotionIds:
          type: array
          description: The unique ID of a promotion.
          items:
            type: string
        adult:
          description: Should be set to true if the item is targeted towards adults.
          type: boolean
        externalSellerId:
          type: string
          description: >-
            Required for multi-seller accounts. Use this attribute if you're a
            marketplace uploading products for various sellers to your
            multi-seller account.
        disclosureDate:
          type: string
          description: >-
            The date time when an offer becomes visible in search results across
            Google’s YouTube surfaces, in [ISO
            8601](http://en.wikipedia.org/wiki/ISO_8601) format. See [Disclosure
            date](https://support.google.com/merchants/answer/13034208) for more
            information.
        shippingHeight:
          description: Height of the item for shipping.
          $ref: '#/components/schemas/ProductShippingDimension'
        pattern:
          type: string
          description: The item's pattern (for example, polka dots).
        feedLabel:
          description: >-
            Feed label for the item. Either `targetCountry` or `feedLabel` is
            required. Must be less than or equal to 20 uppercase letters (A-Z),
            numbers (0-9), and dashes (-).
          type: string
        displayAdsTitle:
          type: string
          description: Title of an item for dynamic remarketing campaigns.
        costOfGoodsSold:
          description: Cost of goods sold. Used for gross profit reporting.
          $ref: '#/components/schemas/Price'
        expirationDate:
          description: >-
            Date on which the item should expire, as specified upon insertion,
            in ISO 8601 format. The actual expiration date in Google Shopping is
            exposed in `productstatuses` as `googleExpirationDate` and might be
            earlier if `expirationDate` is too far in the future.
          type: string
        sizes:
          description: >-
            Size of the item. Only one value is allowed. For variants with
            different sizes, insert a separate product for each size with the
            same `itemGroupId` value (see size definition).
          items:
            type: string
          type: array
        link:
          type: string
          description: URL directly linking to your item's page on your website.
        title:
          type: string
          description: Title of the item.
        channel:
          type: string
          description: >-
            Required. The item's channel (online or local). Acceptable values
            are: - "`local`" - "`online`" 
        price:
          $ref: '#/components/schemas/Price'
          description: Price of the item.
        taxCategory:
          type: string
          description: >-
            The tax category of the product, used to configure detailed tax
            nexus in account-level tax settings.
        mpn:
          description: Manufacturer Part Number (MPN) of the item.
          type: string
        availabilityDate:
          description: >-
            The day a pre-ordered product becomes available for delivery, in ISO
            8601 format.
          type: string
        displayAdsSimilarIds:
          description: Advertiser-specified recommendations.
          type: array
          items:
            type: string
        excludedDestinations:
          items:
            type: string
          type: array
          description: >-
            The list of destinations to exclude for this target (corresponds to
            cleared check boxes in Merchant Center). Products that are excluded
            from all destinations for more than 7 days are automatically
            deleted.
        adsRedirect:
          description: >-
            Allows advertisers to override the item URL when the product is
            shown within the context of Product Ads.
          type: string
        customLabel3:
          description: Custom label 3 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel0:
          type: string
          description: Custom label 0 for custom grouping of items in a Shopping campaign.
        shoppingAdsExcludedCountries:
          type: array
          items:
            type: string
          description: >-
            List of country codes (ISO 3166-1 alpha-2) to exclude the offer from
            Shopping Ads destination. Countries from this list are removed from
            countries configured in MC feed settings.
        cloudExportAdditionalProperties:
          items:
            $ref: '#/components/schemas/CloudExportAdditionalProperties'
          type: array
          description: Extra fields to export to the Cloud Retail program.
        description:
          type: string
          description: Description of the item.
        productHeight:
          description: >-
            The height of the product in the units provided. The value must be
            between 0 (exclusive) and 3000 (inclusive).
          $ref: '#/components/schemas/ProductDimension'
        productHighlights:
          items:
            type: string
          description: Bullet points describing the most relevant highlights of a product.
          type: array
        includedDestinations:
          description: >-
            The list of destinations to include for this target (corresponds to
            checked check boxes in Merchant Center). Default destinations are
            always included unless provided in `excludedDestinations`.
          type: array
          items:
            type: string
        imageLink:
          type: string
          description: URL of an image of the item.
        identifierExists:
          type: boolean
          description: >-
            False when the item does not have unique product identifiers
            appropriate to its category, such as GTIN, MPN, and brand. Required
            according to the Unique Product Identifier Rules for all target
            countries except for Canada.
        pickupMethod:
          description: >-
            The pick up option for the item. Acceptable values are: - "`buy`" -
            "`reserve`" - "`ship to store`" - "`not supported`" 
          type: string
        minEnergyEfficiencyClass:
          type: string
          description: The energy efficiency class as defined in EU directive 2010/30/EU.
        isBundle:
          type: boolean
          description: >-
            Whether the item is a merchant-defined bundle. A bundle is a custom
            grouping of different products sold by a merchant for a single
            price.
        canonicalLink:
          type: string
          description: URL for the canonical version of your item's landing page.
        productDetails:
          type: array
          items:
            $ref: '#/components/schemas/ProductProductDetail'
          description: Technical specification or additional product details.
        lifestyleImageLinks:
          items:
            type: string
          type: array
          description: >-
            Additional URLs of lifestyle images of the item. Used to explicitly
            identify images that showcase your item in a real-world context. See
            the Help Center article for more information.
        displayAdsId:
          description: An identifier for an item for dynamic remarketing campaigns.
          type: string
        transitTimeLabel:
          type: string
          description: >-
            The transit time label of the product, used to group product in
            account-level transit time tables.
        googleProductCategory:
          description: >-
            Google's category of the item (see [Google product
            taxonomy](https://support.google.com/merchants/answer/1705911)).
            When querying products, this field will contain the user provided
            value. There is currently no way to get back the auto assigned
            google product categories through the API.
          type: string
        subscriptionCost:
          description: >-
            Number of periods (months or years) and amount of payment per period
            for an item with an associated subscription contract.
          $ref: '#/components/schemas/ProductSubscriptionCost'
        condition:
          description: Condition or state of the item.
          type: string
        unitPricingMeasure:
          $ref: '#/components/schemas/ProductUnitPricingMeasure'
          description: The measure and dimension of an item.
        gender:
          description: Target gender of the item.
          type: string
        pickupSla:
          description: >-
            Item store pickup timeline. Acceptable values are: - "`same day`" -
            "`next day`" - "`2-day`" - "`3-day`" - "`4-day`" - "`5-day`" -
            "`6-day`" - "`7-day`" - "`multi-week`" 
          type: string
        taxes:
          items:
            $ref: '#/components/schemas/ProductTax'
          type: array
          description: Tax information.
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#product`"
        linkTemplate:
          description: URL template for merchant hosted local storefront.
          type: string
        productLength:
          description: >-
            The length of the product in the units provided. The value must be
            between 0 (exclusive) and 3000 (inclusive).
          $ref: '#/components/schemas/ProductDimension'
        displayAdsValue:
          type: number
          format: double
          description: Offer margin for dynamic remarketing campaigns.
        customLabel4:
          type: string
          description: Custom label 4 for custom grouping of items in a Shopping campaign.
        color:
          description: Color of the item.
          type: string
        sizeType:
          description: The cut of the item. Recommended for apparel items.
          type: string
        offerId:
          description: >-
            Required. A unique identifier for the item. Leading and trailing
            whitespaces are stripped and multiple whitespaces are replaced by a
            single whitespace upon submission. Only valid unicode characters are
            accepted. See the products feed specification for details. *Note:*
            Content API methods that operate on products take the REST ID of the
            product, *not* this identifier.
          type: string
        customLabel1:
          type: string
          description: Custom label 1 for custom grouping of items in a Shopping campaign.
        additionalImageLinks:
          description: Additional URLs of images of the item.
          items:
            type: string
          type: array
        productWidth:
          description: >-
            The width of the product in the units provided. The value must be
            between 0 (exclusive) and 3000 (inclusive).
          $ref: '#/components/schemas/ProductDimension'
        installment:
          description: Number and amount of installments to pay for an item.
          $ref: '#/components/schemas/Installment'
        mobileLinkTemplate:
          description: >-
            URL template for merchant hosted local storefront optimized for
            mobile devices.
          type: string
        source:
          description: >-
            The source of the offer, that is, how the offer was created.
            Acceptable values are: - "`api`" - "`crawl`" - "`feed`" 
          type: string
        productTypes:
          type: array
          items:
            type: string
          description: Categories of the item (formatted as in product data specification).
        shippingWidth:
          $ref: '#/components/schemas/ProductShippingDimension'
          description: Width of the item for shipping.
        availability:
          type: string
          description: Availability status of the item.
        productWeight:
          $ref: '#/components/schemas/ProductWeight'
          description: >-
            The weight of the product in the units provided. The value must be
            between 0 (exclusive) and 2000 (inclusive).
        sizeSystem:
          description: >-
            System in which the size is specified. Recommended for apparel
            items.
          type: string
        multipack:
          format: int64
          type: string
          description: The number of identical products in a merchant-defined multipack.
        customAttributes:
          items:
            $ref: '#/components/schemas/CustomAttribute'
          description: >-
            A list of custom (merchant-provided) attributes. It can also be used
            for submitting any attribute of the feed specification in its
            generic form (for example, `{ "name": "size type", "value":
            "regular" }`). This is useful for submitting attributes not
            explicitly exposed by the API, such as additional attributes used
            for Buy on Google (formerly known as Shopping Actions).
          type: array
    ProductAmount:
      properties:
        taxAmount:
          description: Tax value.
          $ref: '#/components/schemas/Price'
        remittedTaxAmount:
          $ref: '#/components/schemas/Price'
          description: Remitted tax value.
        priceAmount:
          description: >-
            The pre-tax or post-tax price depending on the location of the
            order.
          $ref: '#/components/schemas/Price'
      type: object
      id: ProductAmount
    AccountsUpdateLabelsRequest:
      properties:
        labelIds:
          items:
            format: uint64
            type: string
          type: array
          description: The IDs of labels that should be assigned to the account.
      id: AccountsUpdateLabelsRequest
      type: object
    PosStore:
      type: object
      properties:
        storeCode:
          description: Required. A store identifier that is unique for the given merchant.
          type: string
        websiteUrl:
          type: string
          description: The website url for the store or merchant.
        phoneNumber:
          description: The store phone number.
          type: string
        storeName:
          description: The merchant or store name.
          type: string
        storeAddress:
          type: string
          description: Required. The street address of the store.
        gcidCategory:
          description: The business type of the store.
          items:
            type: string
          type: array
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#posStore`"
        placeId:
          description: The Google Place Id of the store location.
          type: string
      id: PosStore
      description: Store resource.
    CollectionStatus:
      description: The collectionstatus message.
      id: CollectionStatus
      type: object
      properties:
        destinationStatuses:
          description: The intended destinations for the collection.
          items:
            $ref: '#/components/schemas/CollectionStatusDestinationStatus'
          type: array
        collectionLevelIssuses:
          items:
            $ref: '#/components/schemas/CollectionStatusItemLevelIssue'
          type: array
          description: A list of all issues associated with the collection.
        creationDate:
          description: >-
            Date on which the collection has been created in [ISO
            8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and
            offset, for example "2020-01-02T09:00:00+01:00" or
            "2020-01-02T09:00:00Z"
          type: string
        id:
          type: string
          description: Required. The ID of the collection for which status is reported.
        lastUpdateDate:
          type: string
          description: >-
            Date on which the collection has been last updated in [ISO
            8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and
            offset, for example "2020-01-02T09:00:00+01:00" or
            "2020-01-02T09:00:00Z"
    AccountStatusItemLevelIssue:
      properties:
        code:
          type: string
          description: The error code of the issue.
        resolution:
          type: string
          description: Whether the issue can be resolved by the merchant.
        documentation:
          type: string
          description: The URL of a web page to help with resolving this issue.
        numItems:
          type: string
          description: Number of items with this issue.
          format: int64
        attributeName:
          description: The attribute's name, if the issue is caused by a single attribute.
          type: string
        description:
          description: A short issue description in English.
          type: string
        servability:
          type: string
          description: How this issue affects serving of the offer.
        detail:
          description: A detailed issue description in English.
          type: string
      id: AccountStatusItemLevelIssue
      type: object
    AccountItemUpdates:
      properties:
        effectiveAllowConditionUpdates:
          readOnly: true
          type: boolean
          description: >-
            Output only. The effective value of allow_condition_updates. If
            account_item_updates_settings is present, then this value is the
            same. Otherwise, it represents the inherited value of the parent
            account. Read-only.
        accountItemUpdatesSettings:
          description: >-
            Determines which attributes of the items should be automatically
            updated. If this field is not present, then the settings will be
            deleted. If there are no settings for subaccount, they are inherited
            from aggregator.
          $ref: '#/components/schemas/AccountItemUpdatesSettings'
        effectiveAllowAvailabilityUpdates:
          readOnly: true
          type: boolean
          description: >-
            Output only. The effective value of allow_availability_updates. If
            account_item_updates_settings is present, then this value is the
            same. Otherwise, it represents the inherited value of the parent
            account. Read-only.
        effectiveAllowStrictAvailabilityUpdates:
          description: >-
            Output only. The effective value of
            allow_strict_availability_updates. If account_item_updates_settings
            is present, then this value is the same. Otherwise, it represents
            the inherited value of the parent account. Read-only.
          type: boolean
          readOnly: true
        effectiveAllowPriceUpdates:
          description: >-
            Output only. The effective value of allow_price_updates. If
            account_item_updates_settings is present, then this value is the
            same. Otherwise, it represents the inherited value of the parent
            account. Read-only.
          readOnly: true
          type: boolean
      type: object
      id: AccountItemUpdates
      description: >-
        Turning on [item
        updates](https://support.google.com/merchants/answer/3246284) allows
        Google to automatically update items for you. When item updates are on,
        Google uses the structured data markup on the website and advanced data
        extractors to update the price and availability of the items. When the
        item updates are off, items with mismatched data aren't shown.
    ProductstatusesCustomBatchResponseEntry:
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#productstatusesCustomBatchResponseEntry`"
        productStatus:
          $ref: '#/components/schemas/ProductStatus'
          description: >-
            The requested product status. Only defined if the request was
            successful.
        errors:
          description: >-
            A list of errors for failed custombatch entries. *Note:* Schema
            errors fail the whole request.
          $ref: '#/components/schemas/Errors'
        batchId:
          format: uint32
          description: The ID of the request entry this entry responds to.
          type: integer
      description: A batch entry encoding a single non-batch productstatuses response.
      type: object
      id: ProductstatusesCustomBatchResponseEntry
    OrdersAdvanceTestOrderResponse:
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersAdvanceTestOrderResponse`".
      type: object
      id: OrdersAdvanceTestOrderResponse
    ProductstatusesListResponse:
      properties:
        nextPageToken:
          description: The token for the retrieval of the next page of products statuses.
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ProductStatus'
          type: array
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#productstatusesListResponse`".
          type: string
      type: object
      id: ProductstatusesListResponse
    UndeleteConversionSourceRequest:
      description: Request message for the UndeleteConversionSource method.
      type: object
      properties: {}
      id: UndeleteConversionSourceRequest
    LocalInventory:
      type: object
      id: LocalInventory
      description: >-
        Local inventory resource. For accepted attribute values, see the local
        product inventory feed specification.
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#localInventory`"
          type: string
        quantity:
          description: Quantity of the product. Must be nonnegative.
          format: uint32
          type: integer
        storeCode:
          description: Required. Store code of this local inventory resource.
          type: string
        customAttributes:
          description: >-
            A list of custom (merchant-provided) attributes. Can also be used to
            submit any attribute of the feed specification in its generic form,
            for example, `{ "name": "size type", "value": "regular" }`.
          items:
            $ref: '#/components/schemas/CustomAttribute'
          type: array
        salePrice:
          description: >-
            Sale price of the product. Mandatory if `sale_price_effective_date`
            is defined.
          $ref: '#/components/schemas/Price'
        pickupSla:
          type: string
          description: >-
            Expected date that an order will be ready for pickup relative to the
            order date. Must be submitted together with `pickupMethod`. For
            accepted attribute values, see the local product inventory feed
            specification.
        availability:
          description: >-
            Availability of the product. For accepted attribute values, see the
            local product inventory feed specification.
          type: string
        price:
          description: Price of the product.
          $ref: '#/components/schemas/Price'
        instoreProductLocation:
          type: string
          description: In-store product location.
        salePriceEffectiveDate:
          description: >-
            A date range represented by a pair of ISO 8601 dates separated by a
            space, comma, or slash. Both dates may be specified as 'null' if
            undecided.
          type: string
        pickupMethod:
          description: >-
            Supported pickup method for this offer. Unless the value is "not
            supported", this field must be submitted together with `pickupSla`.
            For accepted attribute values, see the local product inventory feed
            specification.
          type: string
    OrdersRefundItemRequest:
      properties:
        operationId:
          type: string
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrdersCustomBatchRequestEntryRefundItemItem'
          description: >-
            The items that are refunded. Either Item or Shipping must be
            provided in the request.
        reasonText:
          description: The explanation of the reason.
          type: string
        reason:
          description: >-
            The reason for the refund. Acceptable values are: -
            "`shippingCostAdjustment`" - "`priceAdjustment`" - "`taxAdjustment`"
            - "`feeAdjustment`" - "`courtesyAdjustment`" - "`adjustment`" -
            "`customerCancelled`" - "`noInventory`" - "`productNotAsDescribed`"
            - "`undeliverableShippingAddress`" - "`wrongProductShipped`" -
            "`lateShipmentCredit`" - "`deliveredLateByCarrier`" -
            "`productArrivedDamaged`" 
          type: string
        shipping:
          description: >-
            The refund on shipping. Optional, but either Item or Shipping must
            be provided in the request.
          $ref: '#/components/schemas/OrdersCustomBatchRequestEntryRefundItemShipping'
      type: object
      id: OrdersRefundItemRequest
    DatafeedstatusesCustomBatchRequest:
      type: object
      id: DatafeedstatusesCustomBatchRequest
      properties:
        entries:
          description: The request entries to be processed in the batch.
          type: array
          items:
            $ref: '#/components/schemas/DatafeedstatusesCustomBatchRequestEntry'
    RepricingRuleEligibleOfferMatcherStringMatcher:
      properties:
        strAttributes:
          items:
            type: string
          description: >-
            String attributes, as long as such attribute of an offer is one of
            the string attribute values, the offer is considered as passing the
            matcher. The string matcher checks an offer for inclusivity in the
            string attributes, not equality. Only literal string matching is
            supported, no regex.
          type: array
      description: Matcher by string attributes.
      id: RepricingRuleEligibleOfferMatcherStringMatcher
      type: object
    AccountLabel:
      id: AccountLabel
      type: object
      properties:
        accountId:
          type: string
          format: int64
          description: Immutable. The ID of account this label belongs to.
        name:
          type: string
          description: The display name of this label.
        labelType:
          enumDescriptions:
            - Unknown label type.
            - Indicates that the label was created manually.
            - Indicates that the label was created automatically by CSS Center.
          type: string
          readOnly: true
          enum:
            - LABEL_TYPE_UNSPECIFIED
            - MANUAL
            - AUTOMATIC
          description: Output only. The type of this label.
        description:
          type: string
          description: The description of this label.
        labelId:
          description: Output only. The ID of the label.
          readOnly: true
          format: int64
          type: string
      description: Label assigned by CSS domain or CSS group to one of its sub-accounts.
    DatafeedsCustomBatchResponse:
      id: DatafeedsCustomBatchResponse
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#datafeedsCustomBatchResponse`".
        entries:
          items:
            $ref: '#/components/schemas/DatafeedsCustomBatchResponseEntry'
          description: The result of the execution of the batch requests.
          type: array
      type: object
    LiasettingsListResponse:
      properties:
        nextPageToken:
          type: string
          description: The token for the retrieval of the next page of LIA settings.
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#liasettingsListResponse`".
        resources:
          items:
            $ref: '#/components/schemas/LiaSettings'
          type: array
      id: LiasettingsListResponse
      type: object
    InapplicabilityDetails:
      type: object
      description: Map of inapplicability details.
      id: InapplicabilityDetails
      properties:
        inapplicableCount:
          format: int64
          description: Count of this inapplicable reason code.
          type: string
        inapplicableReason:
          type: string
          description: Reason code this rule was not applicable.
          enumDescriptions:
            - Default value. Should not be used.
            - The rule set for this product cannot beat the buybox winner.
            - This product can already win the buybox without rule.
            - Another rule of the same type takes precedence over this one.
            - Another rule of a different type takes precedence over this one.
            - >-
              The rule restrictions are not met. For example, this may be the
              case if the calculated rule price is lower than floor price in the
              restriction.
            - The reason is not categorized to any known reason.
            - >-
              The auto_pricing_min_price is invalid. For example, it is missing
              or < 0.
            - >-
              The floor defined in the rule is invalid. For example, it has the
              wrong sign which results in a floor < 0.
          enum:
            - INAPPLICABLE_REASON_UNSPECIFIED
            - CANNOT_BEAT_BUYBOX_WINNER
            - ALREADY_WINNING_BUYBOX
            - TRIUMPHED_OVER_BY_SAME_TYPE_RULE
            - TRIUMPHED_OVER_BY_OTHER_RULE_ON_OFFER
            - RESTRICTIONS_NOT_MET
            - UNCATEGORIZED
            - INVALID_AUTO_PRICE_MIN
            - INVALID_FLOOR_CONFIG
    OrdersCancelTestOrderByCustomerRequest:
      type: object
      id: OrdersCancelTestOrderByCustomerRequest
      properties:
        reason:
          type: string
          description: >-
            The reason for the cancellation. Acceptable values are: -
            "`changedMind`" - "`orderedWrongItem`" - "`other`" 
    AccountReturnCarrier:
      id: AccountReturnCarrier
      properties:
        carrierAccountNumber:
          description: Number of the carrier account.
          type: string
        carrierAccountId:
          readOnly: true
          type: string
          description: >-
            Output only. Immutable. The Google-provided unique carrier ID, used
            to update the resource.
          format: int64
        carrierAccountName:
          description: Name of the carrier account.
          type: string
        carrierCode:
          type: string
          enumDescriptions:
            - Carrier not specified
            - FedEx carrier
            - UPS carrier
          description: The carrier code enum. Accepts the values FEDEX or UPS.
          enum:
            - CARRIER_CODE_UNSPECIFIED
            - FEDEX
            - UPS
      type: object
      description: ' The return carrier information. This service is designed for merchants enrolled in the Buy on Google program. '
    OrderLineItemProductFee:
      id: OrderLineItemProductFee
      type: object
      properties:
        name:
          type: string
          description: Name of the fee.
        amount:
          description: Amount of the fee.
          $ref: '#/components/schemas/Price'
    Price:
      id: Price
      type: object
      properties:
        value:
          type: string
          description: The price represented as a number.
        currency:
          description: The currency of the price.
          type: string
    OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption:
      properties:
        description:
          description: Optional description of the return reason.
          type: string
        reason:
          description: >-
            [required] Reason for the return. Acceptable values are: -
            "`customerDiscretionaryReturn`" -
            "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" -
            "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" -
            "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" -
            "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" -
            "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" 
          type: string
      id: OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption
      type: object
    ProductDeliveryTimeAreaDeliveryTimeDeliveryTime:
      description: A delivery time for this product.
      id: ProductDeliveryTimeAreaDeliveryTimeDeliveryTime
      type: object
      properties:
        minHandlingTimeDays:
          format: int32
          type: integer
          description: >-
            Required. The minimum number of business days (inclusive) between
            when an order is placed and when the product ships. If a product
            ships in the same day, set this value to 0.
        maxHandlingTimeDays:
          description: >-
            Required. The maximum number of business days (inclusive) between
            when an order is placed and when the product ships. If a product
            ships in the same day, set this value to 0.
          type: integer
          format: int32
        maxTransitTimeDays:
          type: integer
          description: >-
            Required. The maximum number of business days (inclusive) between
            when the product ships and when the product is delivered.
          format: int32
        minTransitTimeDays:
          description: >-
            Required. The minimum number of business days (inclusive) between
            when the product ships and when the product is delivered.
          format: int32
          type: integer
    GmbAccountsGmbAccount:
      properties:
        type:
          type: string
          description: The type of the Business Profile (User or Business).
        email:
          description: The email which identifies the Business Profile.
          type: string
        listingCount:
          format: uint64
          type: string
          description: Number of listings under this account.
        name:
          type: string
          description: The name of the Business Profile.
      type: object
      id: GmbAccountsGmbAccount
    SettlementtransactionsListResponse:
      id: SettlementtransactionsListResponse
      type: object
      properties:
        nextPageToken:
          description: The token for the retrieval of the next page of returns.
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#settlementtransactionsListResponse`".
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/SettlementTransaction'
    OrdersCreateTestOrderRequest:
      properties:
        templateName:
          description: >-
            The test order template to use. Specify as an alternative to
            `testOrder` as a shortcut for retrieving a template and then
            creating an order using that template. Acceptable values are: -
            "`template1`" - "`template1a`" - "`template1b`" - "`template2`" -
            "`template3`" 
          type: string
        testOrder:
          $ref: '#/components/schemas/TestOrder'
          description: The test order to create.
        country:
          type: string
          description: >-
            The CLDR territory code of the country of the test order to create.
            Affects the currency and addresses of orders created through
            `template_name`, or the addresses of orders created through
            `test_order`. Acceptable values are: - "`US`" - "`FR`" Defaults to
            "`US`".
      id: OrdersCreateTestOrderRequest
      type: object
    OrdersAcknowledgeResponse:
      type: object
      id: OrdersAcknowledgeResponse
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersAcknowledgeResponse`".
          type: string
        executionStatus:
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
          type: string
    AccountCustomerService:
      properties:
        phoneNumber:
          type: string
          description: Customer service phone number.
        email:
          type: string
          description: Customer service email.
        url:
          type: string
          description: Customer service URL.
      id: AccountCustomerService
      type: object
    MerchantCenterDestination:
      type: object
      properties:
        attributionSettings:
          description: >-
            Required. Attribution settings being used for the Merchant Center
            Destination.
          $ref: '#/components/schemas/AttributionSettings'
        currencyCode:
          description: >-
            Required. Three-letter currency code (ISO 4217). The currency code
            defines in which currency the conversions sent to this destination
            will be reported in Merchant Center.
          type: string
        destinationId:
          readOnly: true
          description: Output only. Merchant Center Destination ID.
          type: string
        displayName:
          type: string
          description: >-
            Required. Merchant-specified display name for the destination. This
            is the name that identifies the conversion source within the
            Merchant Center UI. Limited to 64 characters.
      description: >-
        "Merchant Center Destination" sources can be used to send conversion
        events from a website using a Google tag directly to a Merchant Center
        account where the source is created.
      id: MerchantCenterDestination
    ShippingSettings:
      description: >-
        The merchant account's shipping settings. All methods except
        getsupportedcarriers and getsupportedholidays require the admin role.
      type: object
      id: ShippingSettings
      properties:
        services:
          description: The target account's list of services. Optional.
          items:
            $ref: '#/components/schemas/Service'
          type: array
        postalCodeGroups:
          type: array
          items:
            $ref: '#/components/schemas/PostalCodeGroup'
          description: >-
            A list of postal code groups that can be referred to in `services`.
            Optional.
        accountId:
          format: uint64
          description: >-
            The ID of the account to which these account shipping settings
            belong. Ignored upon update, always present in get request
            responses.
          type: string
        warehouses:
          description: >-
            Optional. A list of warehouses which can be referred to in
            `services`.
          items:
            $ref: '#/components/schemas/Warehouse'
          type: array
    OrderOrderAnnotation:
      type: object
      id: OrderOrderAnnotation
      properties:
        value:
          description: >-
            Value for additional google provided (as key-value pairs)
            annotation.
          type: string
        key:
          type: string
          description: Key for additional google provided (as key-value pairs) annotation.
    UnitInvoice:
      properties:
        unitPrice:
          $ref: '#/components/schemas/Price'
          description: >-
            [required] Pre-tax or post-tax price of one unit depending on the
            locality of the order. *Note:* Invoicing works on a per unit basis.
            The `unitPrice` is the price of a single unit, and will be
            multiplied by the number of entries in `shipmentUnitId`.
        unitPriceTaxes:
          type: array
          description: Tax amounts to apply to the unit price.
          items:
            $ref: '#/components/schemas/UnitInvoiceTaxLine'
        additionalCharges:
          type: array
          items:
            $ref: '#/components/schemas/UnitInvoiceAdditionalCharge'
          description: Additional charges for a unit, for example, shipping costs.
      type: object
      id: UnitInvoice
    ReturnaddressCustomBatchRequestEntry:
      type: object
      id: ReturnaddressCustomBatchRequestEntry
      properties:
        batchId:
          type: integer
          format: uint32
          description: An entry ID, unique within the batch request.
        merchantId:
          description: The Merchant Center account ID.
          format: uint64
          type: string
        returnAddressId:
          description: >-
            The return address ID. This should be set only if the method is
            `delete` or `get`.
          type: string
        method:
          type: string
          description: >-
            Method of the batch request entry. Acceptable values are: -
            "`delete`" - "`get`" - "`insert`" 
        returnAddress:
          description: >-
            The return address to submit. This should be set only if the method
            is `insert`.
          $ref: '#/components/schemas/ReturnAddress'
    UnitInvoiceTaxLine:
      properties:
        taxName:
          description: >-
            Optional name of the tax type. This should only be provided if
            `taxType` is `otherFeeTax`.
          type: string
        taxAmount:
          $ref: '#/components/schemas/Price'
          description: '[required] Tax amount for the tax type.'
        taxType:
          type: string
          description: >-
            [required] Type of the tax. Acceptable values are: - "`otherFee`" -
            "`otherFeeTax`" - "`sales`" 
      type: object
      id: UnitInvoiceTaxLine
    ServiceStoreConfigCutoffConfig:
      id: ServiceStoreConfigCutoffConfig
      properties:
        localCutoffTime:
          description: >-
            Time in hours and minutes in the local timezone when local delivery
            ends.
          $ref: '#/components/schemas/ServiceStoreConfigCutoffConfigLocalCutoffTime'
        storeCloseOffsetHours:
          type: string
          description: >-
            Represents cutoff time as the number of hours before store closing.
            Mutually exclusive with other fields (hour and minute).
          format: int64
      type: object
      description: >-
        Time local delivery ends for the day based on the local timezone of the
        store. `local_cutoff_time` and `store_close_offset_hours` are mutually
        exclusive.
    DatafeedStatusExample:
      properties:
        lineNumber:
          type: string
          description: Line number in the data feed where the example is found.
          format: uint64
        itemId:
          description: The ID of the example item.
          type: string
        value:
          description: The problematic value.
          type: string
      type: object
      id: DatafeedStatusExample
      description: An example occurrence for a particular error.
    PromotionPromotionStatusPromotionIssue:
      description: The issue associated with the promotion.
      properties:
        detail:
          type: string
          description: Explanation of the issue.
        code:
          description: Code of the issue.
          type: string
      type: object
      id: PromotionPromotionStatusPromotionIssue
    OrdersUpdateLineItemShippingDetailsResponse:
      id: OrdersUpdateLineItemShippingDetailsResponse
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersUpdateLineItemShippingDetailsResponse`".
          type: string
        executionStatus:
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
          type: string
      type: object
    TestOrder:
      type: object
      properties:
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/TestOrderLineItem'
          description: >-
            Required. Line items that are ordered. At least one line item must
            be provided.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#testOrder`"
          type: string
        predefinedDeliveryAddress:
          type: string
          description: >-
            Required. Identifier of one of the predefined delivery addresses for
            the delivery. Acceptable values are: - "`dwight`" - "`jim`" -
            "`pam`" 
        promotions:
          items:
            $ref: '#/components/schemas/OrderPromotion'
          type: array
          description: Promotions associated with the order.
        predefinedPickupDetails:
          type: string
          description: >-
            Identifier of one of the predefined pickup details. Required for
            orders containing line items with shipping type `pickup`. Acceptable
            values are: - "`dwight`" - "`jim`" - "`pam`" 
        shippingCost:
          $ref: '#/components/schemas/Price'
          description: >-
            Required. The price of shipping for all items. Shipping tax is
            automatically calculated for orders where marketplace facilitator
            tax laws are applicable. Otherwise, tax settings from Merchant
            Center are applied. Note that shipping is not taxed in certain
            states.
        pickupDetails:
          $ref: '#/components/schemas/TestOrderPickupDetails'
          description: Overrides the predefined pickup details if provided.
        predefinedEmail:
          type: string
          description: >-
            Required. Email address of the customer. Acceptable values are: -
            "`pog.dwight.schrute@gmail.com`" - "`pog.jim.halpert@gmail.com`" -
            "`penpog.pam.beesly@gmail.comding`" 
        shippingOption:
          type: string
          description: >-
            Required. The requested shipping option. Acceptable values are: -
            "`economy`" - "`expedited`" - "`oneDay`" - "`sameDay`" -
            "`standard`" - "`twoDay`" 
        enableOrderinvoices:
          description: Whether the orderinvoices service should support this order.
          type: boolean
        predefinedBillingAddress:
          type: string
          description: >-
            Required. The billing address. Acceptable values are: - "`dwight`" -
            "`jim`" - "`pam`" 
        notificationMode:
          type: string
          description: Restricted. Do not use.
        deliveryDetails:
          description: Overrides the predefined delivery details if provided.
          $ref: '#/components/schemas/TestOrderDeliveryDetails'
      id: TestOrder
    RepricingRuleCostOfGoodsSaleRule:
      type: object
      properties:
        priceDelta:
          description: The price delta against the COGS. E.g. 2 means $2 more of the COGS.
          type: string
        percentageDelta:
          format: int32
          type: integer
          description: >-
            The percent change against the COGS. Ex: 20 would mean to set the
            adjusted price 1.2X of the COGS data.
      description: >-
        A repricing rule that changes the sale price based on cost of goods
        sale.
      id: RepricingRuleCostOfGoodsSaleRule
    Brand:
      id: Brand
      properties:
        name:
          type: string
          description: Name of the brand.
      type: object
      description: >-
        Brand fields. Values are only set for fields requested explicitly in the
        request's search query.
    Warehouse:
      id: Warehouse
      type: object
      description: A fulfillment warehouse, which stores and handles inventory.
      properties:
        cutoffTime:
          description: >-
            Required. The latest time of day that an order can be accepted and
            begin processing. Later orders will be processed in the next day.
            The time is based on the warehouse postal code.
          $ref: '#/components/schemas/WarehouseCutoffTime'
        shippingAddress:
          description: Required. Shipping address of the warehouse.
          $ref: '#/components/schemas/Address'
        name:
          description: Required. The name of the warehouse. Must be unique within account.
          type: string
        handlingDays:
          format: int64
          type: string
          description: >-
            Required. The number of days it takes for this warehouse to pack up
            and ship an item. This is on the warehouse level, but can be
            overridden on the offer level based on the attributes of an item.
        businessDayConfig:
          description: >-
            Business days of the warehouse. If not set, will be Monday to Friday
            by default.
          $ref: '#/components/schemas/BusinessDayConfig'
    ReturnShipment:
      id: ReturnShipment
      properties:
        deliveryDate:
          type: string
          description: The date of delivery of the shipment, in ISO 8601 format.
        shipmentTrackingInfos:
          type: array
          description: >-
            Tracking information of the shipment. One return shipment might be
            handled by several shipping carriers sequentially.
          items:
            $ref: '#/components/schemas/ShipmentTrackingInfo'
        creationDate:
          description: The date of creation of the shipment, in ISO 8601 format.
          type: string
        returnMethodType:
          description: >-
            Type of the return method. Acceptable values are: - "`byMail`" -
            "`contactCustomerSupport`" - "`returnless`" - "`inStore`" 
          type: string
        state:
          type: string
          description: >-
            State of the shipment. Acceptable values are: - "`completed`" -
            "`new`" - "`shipped`" - "`undeliverable`" - "`pending`" 
        shipmentId:
          description: Shipment ID generated by Google.
          type: string
        shippingDate:
          description: The date of shipping of the shipment, in ISO 8601 format.
          type: string
      type: object
    CloudExportAdditionalProperties:
      description: >-
        Product property for the Cloud Retail API. For example, properties for a
        TV product could be "Screen-Resolution" or "Screen-Size".
      type: object
      properties:
        unitCode:
          description: >-
            Unit of the given property. For example, "Pixels" for a TV product.
            Maximum string size is 256 bytes.
          type: string
        minValue:
          type: number
          format: float
          description: >-
            Minimum float value of the given property. For example for a TV
            product 1.00.
        propertyName:
          type: string
          description: >-
            Name of the given property. For example, "Screen-Resolution" for a
            TV product. Maximum string size is 256 characters.
        textValue:
          type: array
          items:
            type: string
          description: >-
            Text value of the given property. For example, "8K(UHD)" could be a
            text value for a TV product. Maximum number of specified values for
            this field is 400. Values are stored in an arbitrary but consistent
            order. Maximum string size is 256 characters.
        boolValue:
          description: >-
            Boolean value of the given property. For example for a TV product,
            "True" or "False" if the screen is UHD.
          type: boolean
        floatValue:
          type: array
          description: >-
            Float values of the given property. For example for a TV product
            1.2345. Maximum number of specified values for this field is 400.
            Values are stored in an arbitrary but consistent order.
          items:
            type: number
            format: float
        maxValue:
          type: number
          format: float
          description: >-
            Maximum float value of the given property. For example for a TV
            product 100.00.
        intValue:
          items:
            type: string
            format: int64
          type: array
          description: >-
            Integer values of the given property. For example, 1080 for a screen
            resolution of a TV product. Maximum number of specified values for
            this field is 400. Values are stored in an arbitrary but consistent
            order.
      id: CloudExportAdditionalProperties
    ReturnPolicyOnlineReturnReasonCategoryInfo:
      id: ReturnPolicyOnlineReturnReasonCategoryInfo
      description: The return reason category info wrapper.
      type: object
      properties:
        returnReasonCategory:
          description: The return reason category.
          enumDescriptions:
            - Default value. This value is unused.
            - Buyer remorse.
            - Item defect.
          type: string
          enum:
            - RETURN_REASON_CATEGORY_UNSPECIFIED
            - BUYER_REMORSE
            - ITEM_DEFECT
        returnLabelSource:
          enum:
            - RETURN_LABEL_SOURCE_UNSPECIFIED
            - DOWNLOAD_AND_PRINT
            - IN_THE_BOX
            - CUSTOMER_RESPONSIBILITY
          description: The corresponding return label source.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Download and print the label.
            - Label in the box.
            - Customers' responsibility to get the label.
        returnShippingFee:
          $ref: '#/components/schemas/ReturnPolicyOnlineReturnShippingFee'
          description: >-
            The corresponding return shipping fee. This is only applicable when
            returnLabelSource is not the customer's responsibility.
    DeliveryTime:
      properties:
        warehouseBasedDeliveryTimes:
          type: array
          description: >-
            Indicates that the delivery time should be calculated per warehouse
            (shipping origin location) based on the settings of the selected
            carrier. When set, no other transit time related field in
            DeliveryTime should be set.
          items:
            $ref: '#/components/schemas/WarehouseBasedDeliveryTime'
        minHandlingTimeInDays:
          format: uint32
          type: integer
          description: >-
            Minimum number of business days spent before an order is shipped. 0
            means same day shipped, 1 means next day shipped.
        maxHandlingTimeInDays:
          type: integer
          description: >-
            Maximum number of business days spent before an order is shipped. 0
            means same day shipped, 1 means next day shipped. Must be greater
            than or equal to `minHandlingTimeInDays`.
          format: uint32
        cutoffTime:
          $ref: '#/components/schemas/CutoffTime'
          description: >-
            Business days cutoff time definition. If not configured, the cutoff
            time will be defaulted to 8AM PST. If local delivery, use
            Service.StoreConfig.CutoffConfig.
        holidayCutoffs:
          items:
            $ref: '#/components/schemas/HolidayCutoff'
          type: array
          description: >-
            Holiday cutoff definitions. If configured, they specify order cutoff
            times for holiday-specific shipping.
        minTransitTimeInDays:
          description: >-
            Minimum number of business days that are spent in transit. 0 means
            same day delivery, 1 means next day delivery. Either
            `{min,max}TransitTimeInDays` or `transitTimeTable` must be set, but
            not both.
          type: integer
          format: uint32
        maxTransitTimeInDays:
          description: >-
            Maximum number of business days that are spent in transit. 0 means
            same day delivery, 1 means next day delivery. Must be greater than
            or equal to `minTransitTimeInDays`.
          type: integer
          format: uint32
        transitBusinessDayConfig:
          description: >-
            The business days during which orders can be in-transit. If not
            provided, Monday to Friday business days will be assumed.
          $ref: '#/components/schemas/BusinessDayConfig'
        handlingBusinessDayConfig:
          description: >-
            The business days during which orders can be handled. If not
            provided, Monday to Friday business days will be assumed.
          $ref: '#/components/schemas/BusinessDayConfig'
        transitTimeTable:
          description: >-
            Transit time table, number of business days spent in transit based
            on row and column dimensions. Either `{min,max}TransitTimeInDays` or
            `transitTimeTable` can be set, but not both.
          $ref: '#/components/schemas/TransitTable'
      type: object
      id: DeliveryTime
    OrderTrackingSignal:
      id: OrderTrackingSignal
      type: object
      properties:
        orderTrackingSignalId:
          readOnly: true
          format: int64
          type: string
          description: >-
            Output only. The ID that uniquely identifies this order tracking
            signal.
        merchantId:
          description: >-
            The Google merchant ID of this order tracking signal. This value is
            optional. If left unset, the caller's merchant ID is used. You must
            request access in order to provide data on behalf of another
            merchant. For more information, see [Submitting Order Tracking
            Signals](/shopping-content/guides/order-tracking-signals).
          type: string
          format: int64
        deliveryRegionCode:
          description: >-
            Required. The [CLDR territory code]
            (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml)
            for the shipping destination.
          type: string
        shippingInfo:
          type: array
          items:
            $ref: '#/components/schemas/OrderTrackingSignalShippingInfo'
          description: The shipping information for the order.
        lineItems:
          description: Information about line items in the order.
          items:
            $ref: '#/components/schemas/OrderTrackingSignalLineItemDetails'
          type: array
        deliveryPostalCode:
          type: string
          description: >-
            Required. The delivery postal code, as a continuous string without
            spaces or dashes, e.g. "95016". This field will be anonymized in
            returned OrderTrackingSignal creation response.
        customerShippingFee:
          description: >-
            The shipping fee of the order; this value should be set to zero in
            the case of free shipping.
          $ref: '#/components/schemas/PriceAmount'
        orderCreatedTime:
          description: >-
            Required. The time when the order was created on the merchant side.
            Include the year and timezone string, if available.
          $ref: '#/components/schemas/DateTime'
        shipmentLineItemMapping:
          description: The mapping of the line items to the shipment information.
          type: array
          items:
            $ref: '#/components/schemas/OrderTrackingSignalShipmentLineItemMapping'
        orderId:
          type: string
          description: >-
            Required. The ID of the order on the merchant side. This field will
            be hashed in returned OrderTrackingSignal creation response.
      description: >-
        Represents a merchant trade from which signals are extracted, e.g.
        shipping.
    MonetaryAmount:
      properties:
        priceAmount:
          description: >-
            The pre-tax or post-tax price depends on the location of the order.
            - For countries (for example, "US". where price attribute excludes
            tax, this field corresponds to the pre-tax value. - For coutries
            (for example, "France") where price attribute includes tax, this
            field corresponds to the post-tax value .
          $ref: '#/components/schemas/Price'
        taxAmount:
          $ref: '#/components/schemas/Price'
          description: >-
            Tax value, present only for countries where price attribute excludes
            tax (for example, "US". No tax is referenced as 0 value with the
            corresponding `currency`.
      id: MonetaryAmount
      type: object
    CaptureOrderResponse:
      id: CaptureOrderResponse
      description: Response message for the CaptureOrder method.
      type: object
      properties:
        executionStatus:
          description: >-
            The status of the execution. Only defined if the request was
            successful. Acceptable values are: * "duplicate" * "executed"
          enum:
            - EXECUTION_STATUS_UNSPECIFIED
            - EXECUTED
            - DUPLICATE
          enumDescriptions:
            - Default value. This value is unused.
            - The request was completed successfully.
            - >-
              The request was not performed because it already executed once
              successfully.
          type: string
    TransitTable:
      type: object
      id: TransitTable
      properties:
        rows:
          items:
            $ref: '#/components/schemas/TransitTableTransitTimeRow'
          type: array
        transitTimeLabels:
          description: >-
            A list of transit time labels. The last value can be `"all other
            labels"`. Example: `["food", "electronics", "all other labels"]`.
          type: array
          items:
            type: string
        postalCodeGroupNames:
          items:
            type: string
          type: array
          description: >-
            A list of postal group names. The last value can be `"all other
            locations"`. Example: `["zone 1", "zone 2", "all other locations"]`.
            The referred postal code groups must match the delivery country of
            the service.
    ShoppingAdsProgramStatus:
      type: object
      id: ShoppingAdsProgramStatus
      properties:
        globalState:
          enumDescriptions:
            - State is unknown.
            - Program is not enabled for any country.
            - >-
              No products have been uploaded for any region. Upload products to
              Merchant Center.
            - >-
              Program is enabled and offers are uploaded for at least one
              country.
          enum:
            - PROGRAM_STATE_UNSPECIFIED
            - NOT_ENABLED
            - NO_OFFERS_UPLOADED
            - ENABLED
          description: >-
            State of the program. `ENABLED` if there are offers for at least one
            region.
          type: string
        regionStatuses:
          type: array
          description: >-
            Status of the program in each region. Regions with the same status
            and review eligibility are grouped together in `regionCodes`.
          items:
            $ref: '#/components/schemas/ShoppingAdsProgramStatusRegionStatus'
      description: Response message for GetShoppingAdsProgramStatus.
    OrderReportTransaction:
      properties:
        merchantOrderId:
          type: string
          description: Merchant-provided ID of the order.
        disbursementDate:
          type: string
          description: The date the disbursement was initiated, in ISO 8601 format.
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        orderId:
          description: The ID of the order.
          type: string
        disbursementCreationDate:
          type: string
          description: The date the disbursement was created, in ISO 8601 format.
        disbursementAmount:
          description: The disbursement amount.
          $ref: '#/components/schemas/Price'
        transactionDate:
          type: string
          description: The date of the transaction, in ISO 8601 format.
        disbursementId:
          description: The ID of the disbursement.
          type: string
        productAmount:
          $ref: '#/components/schemas/ProductAmount'
          description: Total amount for the items.
      type: object
      id: OrderReportTransaction
    BusinessDayConfig:
      type: object
      id: BusinessDayConfig
      properties:
        businessDays:
          type: array
          items:
            type: string
          description: Regular business days, such as '"monday"'. May not be empty.
    SettlementTransaction:
      id: SettlementTransaction
      properties:
        identifiers:
          description: Identifiers of the transaction.
          $ref: '#/components/schemas/SettlementTransactionIdentifiers'
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#settlementTransaction`"
          type: string
        transaction:
          $ref: '#/components/schemas/SettlementTransactionTransaction'
          description: Details of the transaction.
        amount:
          description: The amount for the transaction.
          $ref: '#/components/schemas/SettlementTransactionAmount'
      type: object
      description: >-
        Settlement transactions give a detailed breakdown of the settlement
        report.
    Table:
      id: Table
      properties:
        columnHeaders:
          $ref: '#/components/schemas/Headers'
          description: >-
            Headers of the table's columns. Optional: if not set then the table
            has only one dimension.
        name:
          type: string
          description: >-
            Name of the table. Required for subtables, ignored for the main
            table.
        rows:
          items:
            $ref: '#/components/schemas/Row'
          type: array
          description: >-
            The list of rows that constitute the table. Must have the same
            length as `rowHeaders`. Required.
        rowHeaders:
          $ref: '#/components/schemas/Headers'
          description: Headers of the table's rows. Required.
      type: object
    DatafeedstatusesCustomBatchResponse:
      id: DatafeedstatusesCustomBatchResponse
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#datafeedstatusesCustomBatchResponse`".
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/DatafeedstatusesCustomBatchResponseEntry'
          type: array
      type: object
    Date:
      type: object
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      properties:
        day:
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
          type: integer
          format: int32
        year:
          type: integer
          format: int32
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
        month:
          type: integer
          format: int32
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
      id: Date
    AccountsCustomBatchResponse:
      id: AccountsCustomBatchResponse
      properties:
        entries:
          items:
            $ref: '#/components/schemas/AccountsCustomBatchResponseEntry'
          type: array
          description: The result of the execution of the batch requests.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accountsCustomBatchResponse`".
          type: string
      type: object
    PosInventoryResponse:
      id: PosInventoryResponse
      type: object
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#posInventoryResponse`".
          type: string
        price:
          $ref: '#/components/schemas/Price'
          description: Required. The current price of the item.
        gtin:
          description: Global Trade Item Number.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        storeCode:
          description: >-
            Required. The identifier of the merchant's store. Either a
            `storeCode` inserted through the API or the code of the store in a
            Business Profile.
          type: string
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
        quantity:
          format: int64
          type: string
          description: Required. The available quantity of the item.
        itemId:
          type: string
          description: Required. A unique identifier for the item.
    ProductShippingDimension:
      id: ProductShippingDimension
      properties:
        unit:
          description: The unit of value.
          type: string
        value:
          format: double
          description: >-
            The dimension of the product used to calculate the shipping cost of
            the item.
          type: number
      type: object
    LabelIds:
      id: LabelIds
      type: object
      description: The IDs of labels that should be assigned to the CSS domain.
      properties:
        labelIds:
          items:
            type: string
            format: int64
          description: The list of label IDs.
          type: array
    OrdersCancelLineItemRequest:
      id: OrdersCancelLineItemRequest
      properties:
        reason:
          description: >-
            The reason for the cancellation. Acceptable values are: -
            "`customerInitiatedCancel`" - "`invalidCoupon`" -
            "`malformedShippingAddress`" - "`noInventory`" - "`other`" -
            "`priceError`" - "`shippingPriceError`" - "`taxError`" -
            "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" -
            "`failedToCaptureFunds`" 
          type: string
        operationId:
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
        lineItemId:
          description: >-
            The ID of the line item to cancel. Either lineItemId or productId is
            required.
          type: string
        productId:
          description: >-
            The ID of the product to cancel. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          type: integer
          description: The quantity to cancel.
          format: uint32
      type: object
    RegionalinventoryCustomBatchRequestEntry:
      id: RegionalinventoryCustomBatchRequestEntry
      properties:
        merchantId:
          format: uint64
          type: string
          description: The ID of the managing account.
        productId:
          description: The ID of the product for which to update price and availability.
          type: string
        batchId:
          format: uint32
          type: integer
          description: An entry ID, unique within the batch request.
        regionalInventory:
          description: Price and availability of the product.
          $ref: '#/components/schemas/RegionalInventory'
        method:
          type: string
          description: >-
            Method of the batch request entry. Acceptable values are: -
            "`insert`" 
      description: A batch entry encoding a single non-batch regional inventory request.
      type: object
    OrderAddress:
      properties:
        region:
          description: >-
            Top-level administrative subdivision of the country. For example, a
            state like California ("CA") or a province like Quebec ("QC").
          type: string
        streetAddress:
          type: array
          items:
            type: string
          description: Street-level part of the address. Use `\n` to add a second line.
        fullAddress:
          type: array
          items:
            type: string
          description: >-
            Strings representing the lines of the printed label for mailing the
            order, for example: John Smith 1600 Amphitheatre Parkway Mountain
            View, CA, 94043 United States 
        postalCode:
          description: Postal Code or ZIP (for example, "94043").
          type: string
        country:
          type: string
          description: CLDR country code (for example, "US").
        isPostOfficeBox:
          type: boolean
          description: Whether the address is a post office box.
        recipientName:
          type: string
          description: Name of the recipient.
        locality:
          description: >-
            City, town or commune. May also include dependent localities or
            sublocalities (for example, neighborhoods or suburbs).
          type: string
      id: OrderAddress
      type: object
    CustomerReturnReason:
      id: CustomerReturnReason
      properties:
        description:
          description: Description of the reason.
          type: string
        reasonCode:
          description: >-
            Code of the return reason. Acceptable values are: -
            "`betterPriceFound`" - "`changedMind`" - "`damagedOrDefectiveItem`"
            - "`didNotMatchDescription`" - "`doesNotFit`" - "`expiredItem`" -
            "`incorrectItemReceived`" - "`noLongerNeeded`" - "`notSpecified`" -
            "`orderedWrongItem`" - "`other`" - "`qualityNotExpected`" -
            "`receivedTooLate`" - "`undeliverable`" 
          type: string
      type: object
    OrderreportsListDisbursementsResponse:
      id: OrderreportsListDisbursementsResponse
      type: object
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#orderreportsListDisbursementsResponse`".
        nextPageToken:
          type: string
          description: The token for the retrieval of the next page of disbursements.
        disbursements:
          description: The list of disbursements.
          items:
            $ref: '#/components/schemas/OrderReportDisbursement'
          type: array
    AttributionSettingsConversionType:
      properties:
        name:
          description: >-
            Output only. Conversion event name, as it'll be reported by the
            client.
          readOnly: true
          type: string
        includeInReporting:
          readOnly: true
          type: boolean
          description: >-
            Output only. Option indicating if the type should be included in
            Merchant Center reporting.
      id: AttributionSettingsConversionType
      type: object
      description: Message representing a types of conversion events
    WarehouseBasedDeliveryTime:
      type: object
      properties:
        carrierService:
          description: >-
            Required. Carrier service, such as `"ground"` or `"2 days"`. The
            list of supported services for a carrier can be retrieved through
            the `listSupportedCarriers` method. The name of the service must be
            in the eddSupportedServices list.
          type: string
        warehouseName:
          type: string
          description: >-
            The name of the warehouse. Warehouse name need to be matched with
            name. If warehouseName is set, the below fields will be ignored. The
            warehouse info will be read from warehouse.
        carrier:
          type: string
          description: >-
            Required. Carrier, such as `"UPS"` or `"Fedex"`. The list of
            supported carriers can be retrieved through the
            `listSupportedCarriers` method.
        originPostalCode:
          description: Shipping origin.
          type: string
        originCity:
          type: string
          description: Shipping origin's city.
        originAdministrativeArea:
          description: Shipping origin's state.
          type: string
        originStreetAddress:
          description: Shipping origin's street address.
          type: string
        originCountry:
          description: >-
            Shipping origin's country represented as a [CLDR territory
            code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml).
          type: string
      id: WarehouseBasedDeliveryTime
    LiaAboutPageSettings:
      id: LiaAboutPageSettings
      properties:
        status:
          type: string
          description: >-
            The status of the verification process for the About page.
            Acceptable values are: - "`active`" - "`inactive`" - "`pending`" 
        url:
          description: The URL for the About page.
          type: string
      type: object
    OrderCancellation:
      id: OrderCancellation
      properties:
        reason:
          description: >-
            The reason for the cancellation. Orders that are canceled with a
            noInventory reason will lead to the removal of the product from Buy
            on Google until you make an update to that product. This won't
            affect your Shopping ads. Acceptable values are: -
            "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" -
            "`autoPostNoInventory`" - "`autoPostPriceError`" -
            "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" -
            "`customerCanceled`" - "`customerInitiatedCancel`" -
            "`customerSupportRequested`" - "`failToPushOrderGoogleError`" -
            "`failToPushOrderMerchantError`" -
            "`failToPushOrderMerchantFulfillmentError`" -
            "`failToPushOrderToMerchant`" -
            "`failToPushOrderToMerchantOutOfStock`" - "`invalidCoupon`" -
            "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" -
            "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" -
            "`paymentDeclined`" - "`priceError`" - "`returnRefundAbuse`" -
            "`shippingPriceError`" - "`taxError`" -
            "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" -
            "`failedToCaptureFunds`" 
          type: string
        actor:
          description: >-
            The actor that created the cancellation. Acceptable values are: -
            "`customer`" - "`googleBot`" - "`googleCustomerService`" -
            "`googlePayments`" - "`googleSabre`" - "`merchant`" 
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
        quantity:
          format: uint32
          type: integer
          description: The quantity that was canceled.
        creationDate:
          description: Date on which the cancellation has been created, in ISO 8601 format.
          type: string
      type: object
    ReturnaddressListResponse:
      id: ReturnaddressListResponse
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#returnaddressListResponse`".
        nextPageToken:
          description: The token for the retrieval of the next page of addresses.
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ReturnAddress'
      type: object
    MinimumOrderValueTableStoreCodeSetWithMov:
      type: object
      id: MinimumOrderValueTableStoreCodeSetWithMov
      description: >-
        A list of store code sets sharing the same minimum order value. At least
        two sets are required and the last one must be empty, which signifies
        'MOV for all other stores'. Each store code can only appear once across
        all the sets. All prices within a service must have the same currency.
      properties:
        value:
          description: The minimum order value for the given stores.
          $ref: '#/components/schemas/Price'
        storeCodes:
          description: A list of unique store codes or empty for the catch all.
          items:
            type: string
          type: array
    OrderreturnsRejectOperation:
      properties:
        reason:
          type: string
          description: The reason for the return.
        reasonText:
          description: The explanation of the reason.
          type: string
      id: OrderreturnsRejectOperation
      type: object
    RegionGeoTargetArea:
      properties:
        geotargetCriteriaIds:
          type: array
          description: >-
            Required. A non-empty list of [location
            IDs](https://developers.google.com/adwords/api/docs/appendix/geotargeting).
            They must all be of the same location type (e.g., state).
          items:
            type: string
            format: int64
      description: A list of geotargets that defines the region area.
      type: object
      id: RegionGeoTargetArea
    OrdersCancelResponse:
      id: OrdersCancelResponse
      type: object
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersCancelResponse`".
        executionStatus:
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
          type: string
    CarrierRate:
      properties:
        carrierService:
          description: >-
            Carrier service, such as `"ground"` or `"2 days"`. The list of
            supported services for a carrier can be retrieved through the
            `getSupportedCarriers` method. Required.
          type: string
        carrierName:
          description: >-
            Carrier service, such as `"UPS"` or `"Fedex"`. The list of supported
            carriers can be retrieved through the `getSupportedCarriers` method.
            Required.
          type: string
        percentageAdjustment:
          type: string
          description: >-
            Multiplicative shipping rate modifier as a number in decimal
            notation. Can be negative. For example `"5.4"` increases the rate by
            5.4%, `"-3"` decreases the rate by 3%. Optional.
        flatAdjustment:
          description: >-
            Additive shipping rate modifier. Can be negative. For example `{
            "value": "1", "currency" : "USD" }` adds $1 to the rate, `{ "value":
            "-3", "currency" : "USD" }` removes $3 from the rate. Optional.
          $ref: '#/components/schemas/Price'
        originPostalCode:
          description: Shipping origin for this carrier rate. Required.
          type: string
        name:
          description: Name of the carrier rate. Must be unique per rate group. Required.
          type: string
      type: object
      id: CarrierRate
    OrdersCreateTestOrderResponse:
      type: object
      properties:
        orderId:
          description: The ID of the newly created test order.
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersCreateTestOrderResponse`".
          type: string
      id: OrdersCreateTestOrderResponse
    OrderDeliveryDetails:
      id: OrderDeliveryDetails
      properties:
        phoneNumber:
          type: string
          description: The phone number of the person receiving the delivery.
        address:
          $ref: '#/components/schemas/OrderAddress'
          description: The delivery address
      type: object
    OrderreturnsCreateOrderReturnResponse:
      type: object
      id: OrderreturnsCreateOrderReturnResponse
      properties:
        executionStatus:
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
          type: string
        orderReturn:
          description: Created order return.
          $ref: '#/components/schemas/MerchantOrderReturn'
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#orderreturnsCreateOrderReturnResponse`".
          type: string
    ShippingsettingsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch shippingsettings request.
      id: ShippingsettingsCustomBatchRequestEntry
      type: object
      properties:
        accountId:
          description: >-
            The ID of the account for which to get/update account shipping
            settings.
          type: string
          format: uint64
        method:
          description: >-
            The method of the batch entry. Acceptable values are: - "`get`" -
            "`update`" 
          type: string
        merchantId:
          format: uint64
          type: string
          description: The ID of the managing account.
        shippingSettings:
          description: >-
            The account shipping settings to update. Only defined if the method
            is `update`.
          $ref: '#/components/schemas/ShippingSettings'
        batchId:
          format: uint32
          description: An entry ID, unique within the batch request.
          type: integer
    AccountConversionSettings:
      id: AccountConversionSettings
      description: Settings for conversion tracking.
      type: object
      properties:
        freeListingsAutoTaggingEnabled:
          type: boolean
          description: >-
            When enabled, free listing URLs have a parameter to enable
            conversion tracking for products owned by the current merchant
            account. See
            [auto-tagging](https://support.google.com/merchants/answer/11127659).
    AccountsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accounts request.
      type: object
      id: AccountsCustomBatchRequestEntry
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        linkRequest:
          $ref: '#/components/schemas/AccountsCustomBatchRequestEntryLinkRequest'
          description: Details about the `link` request.
        merchantId:
          format: uint64
          type: string
          description: The ID of the managing account.
        force:
          type: boolean
          description: >-
            Whether the account should be deleted if the account has offers.
            Only applicable if the method is `delete`.
        accountId:
          format: uint64
          description: >-
            The ID of the targeted account. Only defined if the method is not
            `insert`.
          type: string
        account:
          description: >-
            The account to create or update. Only defined if the method is
            `insert` or `update`.
          $ref: '#/components/schemas/Account'
        overwrite:
          type: boolean
          description: >-
            Only applicable if the method is `claimwebsite`. Indicates whether
            or not to take the claim from another account in case there is a
            conflict.
        method:
          type: string
          description: >-
            The method of the batch entry. Acceptable values are: -
            "`claimWebsite`" - "`delete`" - "`get`" - "`insert`" - "`link`" -
            "`update`" 
        view:
          type: string
          description: >-
            Controls which fields are visible. Only applicable if the method is
            'get'.
        labelIds:
          description: Label IDs for the 'updatelabels' request.
          items:
            type: string
            format: uint64
          type: array
    RecommendationDescription:
      type: object
      id: RecommendationDescription
      description: Google-provided description for the recommendation.
      properties:
        text:
          description: Output only. Text of the description.
          type: string
          readOnly: true
        type:
          enum:
            - DESCRIPTION_TYPE_UNSPECIFIED
            - SHORT
            - LONG
          type: string
          description: Output only. Type of the description.
          readOnly: true
          enumDescriptions:
            - Default value. Will never be provided by the API.
            - Short description.
            - Long description.
    ReturnpolicyCustomBatchRequestEntry:
      id: ReturnpolicyCustomBatchRequestEntry
      type: object
      properties:
        returnPolicyId:
          type: string
          description: >-
            The return policy ID. This should be set only if the method is
            `delete` or `get`.
        method:
          description: >-
            Method of the batch request entry. Acceptable values are: -
            "`delete`" - "`get`" - "`insert`" 
          type: string
        merchantId:
          type: string
          description: The Merchant Center account ID.
          format: uint64
        returnPolicy:
          $ref: '#/components/schemas/ReturnPolicy'
          description: >-
            The return policy to submit. This should be set only if the method
            is `insert`.
        batchId:
          format: uint32
          type: integer
          description: An entry ID, unique within the batch request.
    RefundReason:
      properties:
        reasonCode:
          description: >-
            Code of the refund reason. Acceptable values are: - "`adjustment`" -
            "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" -
            "`autoPostNoInventory`" - "`autoPostPriceError`" -
            "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" -
            "`courtesyAdjustment`" - "`customerCanceled`" -
            "`customerDiscretionaryReturn`" -
            "`customerInitiatedMerchantCancel`" - "`customerSupportRequested`" -
            "`deliveredLateByCarrier`" - "`deliveredTooLate`" - "`expiredItem`"
            - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`"
            - "`failToPushOrderMerchantFulfillmentError`" -
            "`failToPushOrderToMerchant`" -
            "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" -
            "`invalidCoupon`" - "`lateShipmentCredit`" -
            "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" -
            "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" -
            "`paymentDeclined`" - "`priceAdjustment`" - "`priceError`" -
            "`productArrivedDamaged`" - "`productNotAsDescribed`" -
            "`promoReallocation`" - "`qualityNotAsExpected`" -
            "`returnRefundAbuse`" - "`shippingCostAdjustment`" -
            "`shippingPriceError`" - "`taxAdjustment`" - "`taxError`" -
            "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" -
            "`wrongProductShipped`" 
          type: string
        description:
          description: Description of the reason.
          type: string
      type: object
      id: RefundReason
    RepricingRuleEligibleOfferMatcher:
      id: RepricingRuleEligibleOfferMatcher
      description: >-
        Matcher that specifies eligible offers. When the USE_FEED_ATTRIBUTE
        option is selected, only the repricing_rule_id attribute on the product
        feed is used to specify offer-rule mapping. When the CUSTOM_FILTER
        option is selected, only the *_matcher fields are used to filter the
        offers for offer-rule mapping. If the CUSTOM_FILTER option is selected,
        an offer needs to satisfy each custom filter matcher to be eligible for
        a rule. Size limit: the sum of the number of entries in all the matchers
        should not exceed 20. For example, there can be 15 product ids and 5
        brands, but not 10 product ids and 11 brands.
      type: object
      properties:
        matcherOption:
          enum:
            - MATCHER_OPTION_UNSPECIFIED
            - MATCHER_OPTION_CUSTOM_FILTER
            - MATCHER_OPTION_USE_FEED_ATTRIBUTE
            - MATCHER_OPTION_ALL_PRODUCTS
          type: string
          enumDescriptions:
            - Unused.
            - Use custom filters.
            - >-
              Use repricing_rule_id feed attribute on the product resource to
              specify offer-rule mapping.
            - Matching all products.
          description: >-
            Determines whether to use the custom matchers or the product feed
            attribute "repricing_rule_id" to specify offer-rule mapping.
        offerIdMatcher:
          $ref: '#/components/schemas/RepricingRuleEligibleOfferMatcherStringMatcher'
          description: Filter by the offer id.
        skipWhenOnPromotion:
          type: boolean
          description: >-
            When true, the rule won't be applied to offers with active
            promotions.
        itemGroupIdMatcher:
          description: Filter by the item group id.
          $ref: '#/components/schemas/RepricingRuleEligibleOfferMatcherStringMatcher'
        brandMatcher:
          description: Filter by the brand.
          $ref: '#/components/schemas/RepricingRuleEligibleOfferMatcherStringMatcher'
    OrdersRefundOrderRequest:
      id: OrdersRefundOrderRequest
      properties:
        reason:
          description: >-
            The reason for the refund. Acceptable values are: -
            "`courtesyAdjustment`" - "`other`" 
          type: string
        operationId:
          type: string
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
        amount:
          description: >-
            The amount that is refunded. If this is not the first refund for the
            order, this should be the newly refunded amount.
          $ref: '#/components/schemas/MonetaryAmount'
        reasonText:
          description: The explanation of the reason.
          type: string
        fullRefund:
          description: >-
            If true, the full order will be refunded, including shipping. If
            this is true, amount shouldn't be provided and will be ignored.
          type: boolean
      type: object
    OrdersCreateTestReturnResponse:
      properties:
        returnId:
          description: The ID of the newly created test order return.
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersCreateTestReturnResponse`".
          type: string
      type: object
      id: OrdersCreateTestReturnResponse
    OrderShipment:
      properties:
        status:
          description: >-
            The status of the shipment. Acceptable values are: - "`delivered`" -
            "`readyForPickup`" - "`shipped`" - "`undeliverable`" 
          type: string
        lineItems:
          type: array
          description: The line items that are shipped.
          items:
            $ref: '#/components/schemas/OrderShipmentLineItemShipment'
        creationDate:
          description: Date on which the shipment has been created, in ISO 8601 format.
          type: string
        shipmentGroupId:
          description: >-
            The shipment group ID of the shipment. This is set in shiplineitems
            request.
          type: string
        id:
          description: The ID of the shipment.
          type: string
        carrier:
          description: >-
            The carrier handling the shipment. For supported carriers, Google
            includes the carrier name and tracking URL in emails to customers.
            For select supported carriers, Google also automatically updates the
            shipment status based on the provided shipment ID. *Note:* You can
            also use unsupported carriers, but emails to customers won't include
            the carrier name or tracking URL, and there will be no automatic
            order status updates. Supported carriers for "US" are: - "`ups`"
            (United Parcel Service) *automatic status updates* - "`usps`"
            (United States Postal Service) *automatic status updates* -
            "`fedex`" (FedEx) *automatic status updates * - "`dhl`" (DHL
            eCommerce) *automatic status updates* (US only) - "`ontrac`"
            (OnTrac) *automatic status updates * - "`dhl express`" (DHL Express)
            - "`deliv`" (Deliv) - "`dynamex`" (TForce) - "`lasership`"
            (LaserShip) - "`mpx`" (Military Parcel Xpress) - "`uds`" (United
            Delivery Service) - "`efw`" (Estes Forwarding Worldwide) - "`jd
            logistics`" (JD Logistics) - "`yunexpress`" (YunExpress) - "`china
            post`" (China Post) - "`china ems`" (China Post Express Mail
            Service) - "`singapore post`" (Singapore Post) - "`pos malaysia`"
            (Pos Malaysia) - "`postnl`" (PostNL) - "`ptt`" (PTT Turkish Post) -
            "`eub`" (ePacket) - "`chukou1`" (Chukou1 Logistics) - "`bestex`"
            (Best Express) - "`canada post`" (Canada Post) - "`purolator`"
            (Purolator) - "`canpar`" (Canpar) - "`india post`" (India Post) -
            "`blue dart`" (Blue Dart) - "`delhivery`" (Delhivery) - "`dtdc`"
            (DTDC) - "`tpc india`" (TPC India) - "`lso`" (Lone Star Overnight) -
            "`tww`" (Team Worldwide) - "`deliver-it`" (Deliver-IT) - "`cdl last
            mile`" (CDL Last Mile) Supported carriers for FR are: - "`la poste`"
            (La Poste) *automatic status updates * - "`colissimo`" (Colissimo by
            La Poste) *automatic status updates* - "`ups`" (United Parcel
            Service) *automatic status updates * - "`chronopost`" (Chronopost by
            La Poste) - "`gls`" (General Logistics Systems France) - "`dpd`"
            (DPD Group by GeoPost) - "`bpost`" (Belgian Post Group) - "`colis
            prive`" (Colis Privé) - "`boxtal`" (Boxtal) - "`geodis`" (GEODIS) -
            "`tnt`" (TNT) - "`db schenker`" (DB Schenker) - "`aramex`" (Aramex) 
          type: string
        deliveryDate:
          description: >-
            Date on which the shipment has been delivered, in ISO 8601 format.
            Present only if `status` is `delivered`
          type: string
        trackingId:
          description: The tracking ID for the shipment.
          type: string
        scheduledDeliveryDetails:
          $ref: '#/components/schemas/OrderShipmentScheduledDeliveryDetails'
          description: Delivery details of the shipment if scheduling is needed.
      type: object
      id: OrderShipment
    ListPromotionResponse:
      description: Response message for Promotions.List method.
      properties:
        promotions:
          type: array
          description: List of all available promotions for the merchant.
          items:
            $ref: '#/components/schemas/Promotion'
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
      type: object
      id: ListPromotionResponse
    ReturnAddressAddress:
      type: object
      properties:
        postalCode:
          description: Postal code or ZIP (for example, "94043").
          type: string
        streetAddress:
          items:
            type: string
          description: >-
            Street-level part of the address. May be up to two lines, each line
            specified as an array element.
          type: array
        recipientName:
          type: string
          description: Name of the recipient to address returns to.
        locality:
          type: string
          description: >-
            City, town or commune. May also include dependent localities or
            sublocalities (for example, neighborhoods or suburbs).
        country:
          type: string
          description: CLDR country code (for example, "US").
        region:
          description: >-
            Top-level administrative subdivision of the country. For example, a
            state like California ("CA") or a province like Quebec ("QC").
          type: string
      id: ReturnAddressAddress
    AccountBusinessInformation:
      id: AccountBusinessInformation
      type: object
      properties:
        phoneNumber:
          type: string
          description: >-
            The phone number of the business in
            [E.164](https://en.wikipedia.org/wiki/E.164) format. This can only
            be updated if a verified phone number is not already set. To replace
            a verified phone number use the `Accounts.requestphoneverification`
            and `Accounts.verifyphonenumber`.
        address:
          $ref: '#/components/schemas/AccountAddress'
          description: The address of the business. Use `\n` to add a second address line.
        customerService:
          $ref: '#/components/schemas/AccountCustomerService'
          description: The customer service information of the business.
        phoneVerificationStatus:
          description: >-
            Verification status of the phone number of the business. This status
            is read only and can be updated only by successful phone
            verification. Acceptable values are: - "`verified`" -
            "`unverified`" 
          type: string
        koreanBusinessRegistrationNumber:
          description: >-
            The 10-digit [Korean business registration
            number](https://support.google.com/merchants/answer/9037766)
            separated with dashes in the format: XXX-XX-XXXXX. This field will
            only be updated if explicitly set.
          type: string
    LocalinventoryCustomBatchRequestEntry:
      id: LocalinventoryCustomBatchRequestEntry
      properties:
        localInventory:
          $ref: '#/components/schemas/LocalInventory'
          description: Local inventory of the product.
        merchantId:
          format: uint64
          description: The ID of the managing account.
          type: string
        batchId:
          type: integer
          description: An entry ID, unique within the batch request.
          format: uint32
        productId:
          type: string
          description: The ID of the product for which to update local inventory.
        method:
          type: string
          description: >-
            Method of the batch request entry. Acceptable values are: -
            "`insert`" 
      description: Batch entry encoding a single local inventory update request.
      type: object
    DatafeedsFetchNowResponse:
      type: object
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#datafeedsFetchNowResponse`".
      id: DatafeedsFetchNowResponse
    LiasettingsCustomBatchResponse:
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#liasettingsCustomBatchResponse`".
        entries:
          items:
            $ref: '#/components/schemas/LiasettingsCustomBatchResponseEntry'
          description: The result of the execution of the batch requests.
          type: array
      id: LiasettingsCustomBatchResponse
      type: object
    PaymentServiceProviderLinkInfo:
      properties:
        externalAccountBusinessCountry:
          description: >-
            The business country of the merchant account as identified by the
            third party service provider.
          type: string
        externalAccountId:
          type: string
          description: >-
            The id used by the third party service provider to identify the
            merchant.
      id: PaymentServiceProviderLinkInfo
      description: Additional information required for PAYMENT_SERVICE_PROVIDER link type.
      type: object
    RegionalinventoryCustomBatchResponse:
      type: object
      properties:
        entries:
          type: array
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/RegionalinventoryCustomBatchResponseEntry'
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#regionalinventoryCustomBatchResponse`".
          type: string
      id: RegionalinventoryCustomBatchResponse
    OrderRefund:
      id: OrderRefund
      type: object
      properties:
        reasonText:
          type: string
          description: The explanation of the reason.
        actor:
          description: >-
            The actor that created the refund. Acceptable values are: -
            "`customer`" - "`googleBot`" - "`googleCustomerService`" -
            "`googlePayments`" - "`googleSabre`" - "`merchant`" 
          type: string
        amount:
          $ref: '#/components/schemas/Price'
          description: The amount that is refunded.
        reason:
          description: >-
            The reason for the refund. Acceptable values are: - "`adjustment`" -
            "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" -
            "`autoPostNoInventory`" - "`autoPostPriceError`" -
            "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" -
            "`courtesyAdjustment`" - "`customerCanceled`" -
            "`customerDiscretionaryReturn`" -
            "`customerInitiatedMerchantCancel`" - "`customerSupportRequested`" -
            "`deliveredLateByCarrier`" - "`deliveredTooLate`" - "`expiredItem`"
            - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`"
            - "`failToPushOrderMerchantFulfillmentError`" -
            "`failToPushOrderToMerchant`" -
            "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" -
            "`invalidCoupon`" - "`lateShipmentCredit`" -
            "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" -
            "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" -
            "`paymentDeclined`" - "`priceAdjustment`" - "`priceError`" -
            "`productArrivedDamaged`" - "`productNotAsDescribed`" -
            "`promoReallocation`" - "`qualityNotAsExpected`" -
            "`returnRefundAbuse`" - "`shippingCostAdjustment`" -
            "`shippingPriceError`" - "`taxAdjustment`" - "`taxError`" -
            "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" -
            "`wrongProductShipped`" 
          type: string
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
    ReturnPolicySeasonalOverride:
      properties:
        startDate:
          description: >-
            Required. First day on which the override applies. In ISO 8601
            format.
          type: string
        name:
          type: string
          description: >-
            Required. The name of the seasonal override as shown in Merchant
            Center.
        endDate:
          type: string
          description: >-
            Required. Last day on which the override applies. In ISO 8601
            format.
        policy:
          description: Required. The policy which is in effect during that time.
          $ref: '#/components/schemas/ReturnPolicyPolicy'
      id: ReturnPolicySeasonalOverride
      type: object
    AccountStatusStatistics:
      properties:
        pending:
          description: Number of pending offers.
          type: string
          format: int64
        expiring:
          format: int64
          type: string
          description: Number of expiring offers.
        disapproved:
          format: int64
          type: string
          description: Number of disapproved offers.
        active:
          format: int64
          description: Number of active offers.
          type: string
      type: object
      id: AccountStatusStatistics
    DateTime:
      description: >-
        Represents civil time (or occasionally physical time). This type can
        represent a civil time in one of a few possible ways: * When utc_offset
        is set and time_zone is unset: a civil time on a calendar day with a
        particular offset from UTC. * When time_zone is set and utc_offset is
        unset: a civil time on a calendar day in a particular time zone. * When
        neither time_zone nor utc_offset is set: a civil time on a calendar day
        in local time. The date is relative to the Proleptic Gregorian Calendar.
        If year, month, or day are 0, the DateTime is considered not to have a
        specific year, month, or day respectively. This type may also be used to
        represent a physical time if all the date and time fields are set and
        either case of the `time_offset` oneof is set. Consider using
        `Timestamp` message for physical time instead. If your use case also
        would like to store the user's timezone, that can be done in another
        field. This type is more flexible than some applications may want. Make
        sure to document and validate your application's limitations.
      properties:
        minutes:
          description: >-
            Optional. Minutes of hour of day. Must be from 0 to 59, defaults to
            0.
          format: int32
          type: integer
        nanos:
          type: integer
          format: int32
          description: >-
            Optional. Fractions of seconds in nanoseconds. Must be from 0 to
            999,999,999, defaults to 0.
        timeZone:
          description: Time zone.
          $ref: '#/components/schemas/TimeZone'
        month:
          format: int32
          type: integer
          description: >-
            Optional. Month of year. Must be from 1 to 12, or 0 if specifying a
            datetime without a month.
        seconds:
          format: int32
          type: integer
          description: >-
            Optional. Seconds of minutes of the time. Must normally be from 0 to
            59, defaults to 0. An API may allow the value 60 if it allows
            leap-seconds.
        utcOffset:
          type: string
          format: google-duration
          description: >-
            UTC offset. Must be whole seconds, between -18 hours and +18 hours.
            For example, a UTC offset of -4:00 would be represented as {
            seconds: -14400 }.
        hours:
          format: int32
          description: >-
            Optional. Hours of day in 24 hour format. Should be from 0 to 23,
            defaults to 0 (midnight). An API may choose to allow the value
            "24:00:00" for scenarios like business closing time.
          type: integer
        year:
          type: integer
          description: >-
            Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a
            datetime without a year.
          format: int32
        day:
          type: integer
          format: int32
          description: >-
            Optional. Day of month. Must be from 1 to 31 and valid for the year
            and month, or 0 if specifying a datetime without a day.
      type: object
      id: DateTime
    Order:
      properties:
        acknowledged:
          description: Whether the order was acknowledged.
          type: boolean
        placedDate:
          description: The date when the order was placed, in ISO 8601 format.
          type: string
        netPriceAmount:
          $ref: '#/components/schemas/Price'
          description: >-
            The net amount for the order (price part). For example, if an order
            was originally for $100 and a refund was issued for $20, the net
            amount will be $80.
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#order`"
        shippingCost:
          description: The total cost of shipping for all items.
          $ref: '#/components/schemas/Price'
        paymentStatus:
          type: string
          description: >-
            The status of the payment. Acceptable values are: -
            "`paymentCaptured`" - "`paymentRejected`" - "`paymentSecured`" -
            "`pendingAuthorization`" 
        merchantOrderId:
          description: Merchant-provided ID of the order.
          type: string
        status:
          description: >-
            The status of the order. Acceptable values are: - "`canceled`" -
            "`delivered`" - "`inProgress`" - "`partiallyDelivered`" -
            "`partiallyReturned`" - "`partiallyShipped`" - "`pendingShipment`" -
            "`returned`" - "`shipped`" 
          type: string
        merchantId:
          format: uint64
          type: string
        pickupDetails:
          description: Pickup details for shipments of type `pickup`.
          $ref: '#/components/schemas/OrderPickupDetails'
        shipments:
          items:
            $ref: '#/components/schemas/OrderShipment'
          description: Shipments of the order.
          type: array
        netTaxAmount:
          description: >-
            The net amount for the order (tax part). Note that in certain cases
            due to taxable base adjustment `netTaxAmount` might not match to a
            sum of tax field across all lineItems and refunds.
          $ref: '#/components/schemas/Price'
        billingAddress:
          $ref: '#/components/schemas/OrderAddress'
          description: The billing address.
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/OrderRefund'
          description: Refunds for the order.
        id:
          type: string
          description: The REST ID of the order. Globally unique.
        deliveryDetails:
          $ref: '#/components/schemas/OrderDeliveryDetails'
          description: Delivery details for shipments of type `delivery`.
        lineItems:
          description: Line items that are ordered.
          items:
            $ref: '#/components/schemas/OrderLineItem'
          type: array
        customer:
          $ref: '#/components/schemas/OrderCustomer'
          description: The details of the customer who placed the order.
        promotions:
          description: >-
            Promotions associated with the order. To determine which promotions
            apply to which products, check the
            `Promotions[].appliedItems[].lineItemId` field against the
            `LineItems[].id` field for each promotion. If a promotion is applied
            to more than 1 offerId, divide the discount value by the number of
            affected offers to determine how much discount to apply to each
            offerId. Examples: 1. To calculate price paid by the customer for a
            single line item including the discount: For each promotion,
            subtract the `LineItems[].adjustments[].priceAdjustment.value`
            amount from the `LineItems[].Price.value`. 2. To calculate price
            paid by the customer for a single line item including the discount
            in case of multiple quantity: For each promotion, divide the
            `LineItems[].adjustments[].priceAdjustment.value` by the quantity of
            products then subtract the resulting value from the
            `LineItems[].Product.Price.value` for each quantity item. Only 1
            promotion can be applied to an offerId in a given order. To refund
            an item which had a promotion applied to it, make sure to refund the
            amount after first subtracting the promotion discount from the item
            price. More details about the program are here.
          items:
            $ref: '#/components/schemas/OrderPromotion'
          type: array
        taxCollector:
          description: >-
            The party responsible for collecting and remitting taxes. Acceptable
            values are: - "`marketplaceFacilitator`" - "`merchant`" 
          type: string
        annotations:
          description: List of key-value pairs that are attached to a given order.
          items:
            $ref: '#/components/schemas/OrderOrderAnnotation'
          type: array
        shippingCostTax:
          description: The tax for the total shipping cost.
          $ref: '#/components/schemas/Price'
      type: object
      id: Order
      description: >-
        Order. Production access (all methods) requires the order manager role.
        Sandbox access does not.
    ProductViewItemIssueItemIssueSeverity:
      properties:
        severityPerDestination:
          items:
            $ref: >-
              #/components/schemas/ProductViewItemIssueIssueSeverityPerDestination
          description: Item issue severity for every destination.
          type: array
        aggregatedSeverity:
          type: string
          enumDescriptions:
            - Undefined Issue severity.
            - >-
              Issue disapproves the product in at least one of the selected
              destinations.
            - Issue demotes the product in all selected destinations it affects.
            - Issue resolution is `PENDING_PROCESSING`.
          description: Severity of an issue aggregated for destination.
          enum:
            - AGGREGATED_ISSUE_SEVERITY_UNSPECIFIED
            - DISAPPROVED
            - DEMOTED
            - PENDING
      type: object
      description: >-
        Severity of an issue per destination in a region, and aggregated
        severity.
      id: ProductViewItemIssueItemIssueSeverity
    OrdersUpdateShipmentRequest:
      properties:
        undeliveredDate:
          type: string
          description: >-
            Date on which the shipment has been undeliverable, in ISO 8601
            format. Optional and can be provided only if `status` is
            `undeliverable`.
        carrier:
          type: string
          description: >-
            The carrier handling the shipment. Not updated if missing. See
            `shipments[].carrier` in the Orders resource representation for a
            list of acceptable values.
        operationId:
          type: string
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
        scheduledDeliveryDetails:
          description: Delivery details of the shipment if scheduling is needed.
          $ref: >-
            #/components/schemas/OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails
        status:
          type: string
          description: >-
            New status for the shipment. Not updated if missing. Acceptable
            values are: - "`delivered`" - "`undeliverable`" -
            "`readyForPickup`" 
        shipmentId:
          description: The ID of the shipment.
          type: string
        readyPickupDate:
          description: >-
            Date on which the shipment has been ready for pickup, in ISO 8601
            format. Optional and can be provided only if `status` is `ready for
            pickup`.
          type: string
        deliveryDate:
          type: string
          description: >-
            Date on which the shipment has been delivered, in ISO 8601 format.
            Optional and can be provided only if `status` is `delivered`.
        lastPickupDate:
          description: >-
            Date after which the pickup will expire, in ISO 8601 format.
            Required only when order is buy-online-pickup-in-store(BOPIS) and
            `status` is `ready for pickup`.
          type: string
        trackingId:
          type: string
          description: The tracking ID for the shipment. Not updated if missing.
      type: object
      id: OrdersUpdateShipmentRequest
    RepricingRuleReportBuyboxWinningRuleStats:
      properties:
        buyboxWonProductCount:
          type: integer
          description: >-
            Number of unique products that won the buybox with this rule during
            this period of time.
          format: int32
      type: object
      description: Stats specific to buybox winning rules for rule report.
      id: RepricingRuleReportBuyboxWinningRuleStats
    OrderPromotionItem:
      properties:
        offerId:
          description: Required. Offer ID of a product. Only for `orders.createtestorder`.
          type: string
        lineItemId:
          description: >-
            The line item ID of a product. Do not provide for
            `orders.createtestorder`.
          type: string
        productId:
          description: '`orders.createtestorder`.'
          type: string
        quantity:
          format: int32
          description: >-
            The quantity of the associated product. Do not provide for
            `orders.createtestorder`.
          type: integer
      id: OrderPromotionItem
      type: object
    OrderTrackingSignalShippingInfo:
      properties:
        trackingId:
          description: >-
            The tracking ID of the shipment. This field is required if one of
            the following fields is absent: earliest_delivery_promise_time,
            latest_delivery_promise_time, and actual_delivery_time.
          type: string
        shipmentId:
          type: string
          description: >-
            Required. The shipment ID. This field will be hashed in returned
            OrderTrackingSignal creation response.
        actualDeliveryTime:
          description: >-
            The time when the shipment was actually delivered. Include the year
            and timezone string, if available. This field is required, if one of
            the following fields is absent: tracking_id or carrier_name.
          $ref: '#/components/schemas/DateTime'
        shippedTime:
          description: >-
            The time when the shipment was shipped. Include the year and
            timezone string, if available.
          $ref: '#/components/schemas/DateTime'
        shippingStatus:
          description: The status of the shipment.
          enumDescriptions:
            - The shipping status is not known to merchant.
            - All items are shipped.
            - The shipment is already delivered.
          enum:
            - SHIPPING_STATE_UNSPECIFIED
            - SHIPPED
            - DELIVERED
          type: string
        earliestDeliveryPromiseTime:
          description: >-
            The earliest delivery promised time. Include the year and timezone
            string, if available. This field is required, if one of the
            following fields is absent: tracking_id or carrier_name.
          $ref: '#/components/schemas/DateTime'
        carrierName:
          type: string
          description: >-
            The name of the shipping carrier for the delivery. This field is
            required if one of the following fields is absent:
            earliest_delivery_promise_time, latest_delivery_promise_time, and
            actual_delivery_time.
        carrierServiceName:
          description: The service type for fulfillment, e.g., GROUND, FIRST_CLASS, etc.
          type: string
        latestDeliveryPromiseTime:
          description: >-
            The latest delivery promised time. Include the year and timezone
            string, if available. This field is required, if one of the
            following fields is absent: tracking_id or carrier_name.
          $ref: '#/components/schemas/DateTime'
        originPostalCode:
          description: >-
            The origin postal code, as a continuous string without spaces or
            dashes, e.g. "95016". This field will be anonymized in returned
            OrderTrackingSignal creation response.
          type: string
        originRegionCode:
          type: string
          description: >-
            The [CLDR territory code]
            (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml)
            for the shipping origin.
      id: OrderTrackingSignalShippingInfo
      type: object
      description: The shipping information for the order.
    ProductsCustomBatchResponse:
      properties:
        entries:
          type: array
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/ProductsCustomBatchResponseEntry'
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#productsCustomBatchResponse`".
          type: string
      id: ProductsCustomBatchResponse
      type: object
    DatafeedStatus:
      type: object
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#datafeedStatus`"
        itemsTotal:
          description: The number of items in the feed that were processed.
          type: string
          format: uint64
        warnings:
          items:
            $ref: '#/components/schemas/DatafeedStatusError'
          type: array
          description: The list of errors occurring in the feed.
        itemsValid:
          format: uint64
          description: The number of items in the feed that were valid.
          type: string
        datafeedId:
          type: string
          format: uint64
          description: The ID of the feed for which the status is reported.
        country:
          description: >-
            The country for which the status is reported, represented as a CLDR
            territory code.
          type: string
        language:
          type: string
          description: The two-letter ISO 639-1 language for which the status is reported.
        lastUploadDate:
          type: string
          description: The last date at which the feed was uploaded.
        errors:
          type: array
          description: The list of errors occurring in the feed.
          items:
            $ref: '#/components/schemas/DatafeedStatusError'
        feedLabel:
          description: The feed label status is reported for.
          type: string
        processingStatus:
          description: >-
            The processing status of the feed. Acceptable values are: -
            "`"`failure`": The feed could not be processed or all items had
            errors.`" - "`in progress`": The feed is being processed. -
            "`none`": The feed has not yet been processed. For example, a feed
            that has never been uploaded will have this processing status. -
            "`success`": The feed was processed successfully, though some items
            might have had errors. 
          type: string
      id: DatafeedStatus
      description: >-
        The status of a datafeed, that is, the result of the last retrieval of
        the datafeed computed asynchronously when the feed processing is
        finished.
    ProductStatusItemLevelIssue:
      id: ProductStatusItemLevelIssue
      properties:
        attributeName:
          type: string
          description: The attribute's name, if the issue is caused by a single attribute.
        resolution:
          type: string
          description: Whether the issue can be resolved by the merchant.
        destination:
          type: string
          description: The destination the issue applies to.
        documentation:
          type: string
          description: The URL of a web page to help with resolving this issue.
        code:
          description: The error code of the issue.
          type: string
        applicableCountries:
          type: array
          description: >-
            List of country codes (ISO 3166-1 alpha-2) where issue applies to
            the offer.
          items:
            type: string
        servability:
          type: string
          description: How this issue affects serving of the offer.
        description:
          description: A short issue description in English.
          type: string
        detail:
          description: A detailed issue description in English.
          type: string
      type: object
    SettlementreportsListResponse:
      properties:
        nextPageToken:
          type: string
          description: The token for the retrieval of the next page of returns.
        resources:
          type: array
          items:
            $ref: '#/components/schemas/SettlementReport'
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#settlementreportsListResponse`".
          type: string
      type: object
      id: SettlementreportsListResponse
    ReturnaddressCustomBatchResponseEntry:
      type: object
      id: ReturnaddressCustomBatchResponseEntry
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#returnaddressCustomBatchResponseEntry`"
          type: string
        returnAddress:
          description: The retrieved return address.
          $ref: '#/components/schemas/ReturnAddress'
        batchId:
          type: integer
          format: uint32
          description: The ID of the request entry to which this entry responds.
        errors:
          $ref: '#/components/schemas/Errors'
          description: A list of errors defined if, and only if, the request failed.
    SettlementTransactionTransaction:
      type: object
      id: SettlementTransactionTransaction
      properties:
        postDate:
          type: string
          description: The time on which the event occurred in ISO 8601 format.
        type:
          description: >-
            The type of the transaction that occurred. Acceptable values are: -
            "`order`" - "`reversal`" - "`orderRefund`" - "`reversalRefund`" -
            "`issueRelatedRefundAndReplacement`" -
            "`returnLabelShippingFeeTransaction`" -
            "`reversalIssueRelatedRefundAndReplacement`" -
            "`reversalReturnLabelShippingFeeTransaction`" -
            "`lumpSumCorrectionTransaction`" 
          type: string
    GenerateRecommendationsResponse:
      id: GenerateRecommendationsResponse
      type: object
      description: Response containing generated recommendations.
      properties:
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/Recommendation'
          description: Recommendations generated for a request.
        responseToken:
          readOnly: true
          description: >-
            Output only. Response token is a string created for each
            `GenerateRecommendationsResponse`. This token doesn't expire, and is
            globally unique. This token must be used when reporting interactions
            for recommendations.
          type: string
    OrderShipmentScheduledDeliveryDetails:
      id: OrderShipmentScheduledDeliveryDetails
      properties:
        scheduledDate:
          type: string
          description: The date a shipment is scheduled for delivery, in ISO 8601 format.
        carrierPhoneNumber:
          description: >-
            The phone number of the carrier fulfilling the delivery. The phone
            number is formatted as the international notation in ITU-T
            Recommendation E.123 (for example, "+41 44 668 1800").
          type: string
      type: object
    Recommendation:
      properties:
        recommendationName:
          description: >-
            Optional. Localized recommendation name. The localization uses the
            {@link `GenerateRecommendationsRequest.language_code`} field in
            {@link `GenerateRecommendationsRequest`} requests.
          type: string
        type:
          type: string
          readOnly: true
          description: >-
            Output only. Type of the recommendation. List of currently available
            recommendation types: - OPPORTUNITY_CREATE_NEW_COLLECTION -
            OPPORTUNITY_CREATE_EMAIL_CAMPAIGN
        additionalCallToAction:
          items:
            $ref: '#/components/schemas/RecommendationCallToAction'
          description: Output only. CTAs of this recommendation. Repeated.
          type: array
          readOnly: true
        defaultDescription:
          description: >-
            Optional. Localized recommendation description. The localization the
            {@link `GenerateRecommendationsRequest.language_code`} field in
            {@link `GenerateRecommendationsRequest`} requests.
          type: string
        numericalImpact:
          type: integer
          description: >-
            Optional. A numerical score of the impact from the recommendation's
            description. For example, a recommendation might suggest an upward
            trend in sales for a certain product. Higher number means larger
            impact.
          format: int32
        defaultCallToAction:
          $ref: '#/components/schemas/RecommendationCallToAction'
          description: Optional. Default CTA of the recommendation.
        additionalDescriptions:
          description: >-
            Output only. List of additional localized descriptions for a
            recommendation. Localication uses the `languageCode` field in
            `GenerateRecommendations` requests. Not all description types are
            guaranteed to be present and we recommend to rely on default
            description.
          type: array
          items:
            $ref: '#/components/schemas/RecommendationDescription'
          readOnly: true
        paid:
          type: boolean
          description: >-
            Optional. Indicates whether a user needs to pay when they complete
            the user journey suggested by the recommendation.
        creative:
          items:
            $ref: '#/components/schemas/RecommendationCreative'
          type: array
          readOnly: true
          description: Output only. Any creatives attached to the recommendation. Repeated.
        title:
          type: string
          description: >-
            Optional. Localized Recommendation Title. Localization uses the
            {@link `GenerateRecommendationsRequest.language_code`} field in
            {@link `GenerateRecommendationsRequest`} requests.
        subType:
          description: >-
            Optional. Subtype of the recommendations. Only applicable when
            multiple recommendations can be generated per type, and is used as
            an identifier of recommendation under the same recommendation type.
          type: string
      id: Recommendation
      type: object
      description: >-
        Recommendations are suggested ways to improve your merchant account's
        performance. For example, to engage with a feature, or start using a new
        Google product.
    AccountstatusesCustomBatchRequest:
      type: object
      properties:
        entries:
          type: array
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/AccountstatusesCustomBatchRequestEntry'
      id: AccountstatusesCustomBatchRequest
    Installment:
      type: object
      id: Installment
      properties:
        amount:
          description: The amount the buyer has to pay per month.
          $ref: '#/components/schemas/Price'
        months:
          description: The number of installments the buyer has to pay.
          format: int64
          type: string
    ProductSubscriptionCost:
      properties:
        periodLength:
          format: int64
          type: string
          description: The number of subscription periods the buyer has to pay.
        period:
          description: The type of subscription period.
          type: string
        amount:
          $ref: '#/components/schemas/Price'
          description: The amount the buyer has to pay per subscription period.
      type: object
      id: ProductSubscriptionCost
    OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo:
      id: OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo
      properties:
        carrier:
          description: >-
            The carrier handling the shipment. See `shipments[].carrier` in the
            Orders resource representation for a list of acceptable values.
          type: string
        shipmentId:
          description: >-
            Required. The ID of the shipment. This is assigned by the merchant
            and is unique to each shipment.
          type: string
        trackingId:
          type: string
          description: The tracking ID for the shipment.
      type: object
    DatafeedsCustomBatchRequestEntry:
      properties:
        method:
          type: string
          description: >-
            The method of the batch entry. Acceptable values are: - "`delete`" -
            "`fetchNow`" - "`get`" - "`insert`" - "`update`" 
        datafeed:
          description: The data feed to insert.
          $ref: '#/components/schemas/Datafeed'
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        datafeedId:
          format: uint64
          type: string
          description: The ID of the data feed to get, delete or fetch.
        merchantId:
          format: uint64
          description: The ID of the managing account.
          type: string
      id: DatafeedsCustomBatchRequestEntry
      description: A batch entry encoding a single non-batch datafeeds request.
      type: object
    ProductsListResponse:
      id: ProductsListResponse
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        nextPageToken:
          description: The token for the retrieval of the next page of products.
          type: string
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#productsListResponse`".
    ProductViewItemIssueItemIssueType:
      id: ProductViewItemIssueItemIssueType
      properties:
        canonicalAttribute:
          description: Canonical attribute name for attribute-specific issues.
          type: string
        code:
          type: string
          description: Error code of the issue.
      description: Type of the item issue.
      type: object
    ReturnpolicyCustomBatchResponseEntry:
      id: ReturnpolicyCustomBatchResponseEntry
      properties:
        errors:
          description: A list of errors defined if, and only if, the request failed.
          $ref: '#/components/schemas/Errors'
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#returnpolicyCustomBatchResponseEntry`"
        returnPolicy:
          description: The retrieved return policy.
          $ref: '#/components/schemas/ReturnPolicy'
        batchId:
          format: uint32
          description: The ID of the request entry to which this entry responds.
          type: integer
      type: object
    OrdersReturnRefundLineItemRequest:
      properties:
        lineItemId:
          type: string
          description: >-
            The ID of the line item to return. Either lineItemId or productId is
            required.
        priceAmount:
          $ref: '#/components/schemas/Price'
          description: >-
            The amount to be refunded. This may be pre-tax or post-tax depending
            on the location of the order. If omitted, refundless return is
            assumed.
        productId:
          description: >-
            The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund. Quantity is required.
          type: integer
          format: uint32
        reasonText:
          description: The explanation of the reason.
          type: string
        operationId:
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
          type: string
        reason:
          type: string
          description: >-
            The reason for the return. Acceptable values are: -
            "`customerDiscretionaryReturn`" -
            "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" -
            "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" -
            "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" -
            "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" -
            "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" 
        taxAmount:
          description: >-
            The amount of tax to be refunded. Optional, but if filled, then
            priceAmount must be set. Calculated automatically if not provided.
          $ref: '#/components/schemas/Price'
      type: object
      id: OrdersReturnRefundLineItemRequest
    FreeListingsProgramStatus:
      properties:
        globalState:
          enum:
            - PROGRAM_STATE_UNSPECIFIED
            - NOT_ENABLED
            - NO_OFFERS_UPLOADED
            - ENABLED
          description: >-
            State of the program. `ENABLED` if there are offers for at least one
            region.
          type: string
          enumDescriptions:
            - State is unknown.
            - Program is not enabled for any country.
            - >-
              No products have been uploaded for any region. Upload products to
              Merchant Center.
            - >-
              Program is enabled and offers are uploaded for at least one
              country.
        regionStatuses:
          items:
            $ref: '#/components/schemas/FreeListingsProgramStatusRegionStatus'
          description: >-
            Status of the program in each region. Regions with the same status
            and review eligibility are grouped together in `regionCodes`.
          type: array
      id: FreeListingsProgramStatus
      description: Response message for GetFreeListingsProgramStatus.
      type: object
    ReturnPolicyPolicy:
      type: object
      id: ReturnPolicyPolicy
      properties:
        numberOfDays:
          description: >-
            The number of days items can be returned after delivery, where one
            day is defined to be 24 hours after the delivery timestamp. When
            specifying the return window like this, set the policy type to
            "numberOfDaysAfterDelivery". Acceptable values are 30, 45, 60, 90,
            100, 180, 270 and 365 for the default policy. Additional policies
            further allow 14, 15, 21 and 28 days, but note that for most items a
            minimum of 30 days is required for returns. Exceptions may be made
            for electronics. A policy of less than 30 days can only be applied
            to those items.
          format: int64
          type: string
        lastReturnDate:
          description: >-
            Required. Last day for returning the items. In ISO 8601 format. When
            specifying the return window like this, set the policy type to
            "lastReturnDate". Use this for seasonal overrides only.
          type: string
        type:
          description: >-
            Policy type. Use "lastReturnDate" for seasonal overrides only. Note
            that for most items a minimum of 30 days is required for returns.
            Exceptions may be made for electronics or non-returnable items such
            as food, perishables, and living things. A policy of less than 30
            days can only be applied to those items. Acceptable values are: -
            "`lastReturnDate`" - "`lifetimeReturns`" - "`noReturns`" -
            "`numberOfDaysAfterDelivery`" 
          type: string
    PosListResponse:
      id: PosListResponse
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/PosStore'
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#posListResponse`".
    DatafeedFetchSchedule:
      description: >-
        The required fields vary based on the frequency of fetching. For a
        monthly fetch schedule, day_of_month and hour are required. For a weekly
        fetch schedule, weekday and hour are required. For a daily fetch
        schedule, only hour is required.
      id: DatafeedFetchSchedule
      properties:
        dayOfMonth:
          description: The day of the month the feed file should be fetched (1-31).
          type: integer
          format: uint32
        hour:
          type: integer
          description: The hour of the day the feed file should be fetched (0-23).
          format: uint32
        username:
          description: An optional user name for fetch_url.
          type: string
        minuteOfHour:
          format: uint32
          type: integer
          description: >-
            The minute of the hour the feed file should be fetched (0-59).
            Read-only.
        fetchUrl:
          description: >-
            The URL where the feed file can be fetched. Google Merchant Center
            will support automatic scheduled uploads using the HTTP, HTTPS, FTP,
            or SFTP protocols, so the value will need to be a valid link using
            one of those four protocols.
          type: string
        paused:
          description: Whether the scheduled fetch is paused or not.
          type: boolean
        weekday:
          description: >-
            The day of the week the feed file should be fetched. Acceptable
            values are: - "`monday`" - "`tuesday`" - "`wednesday`" -
            "`thursday`" - "`friday`" - "`saturday`" - "`sunday`" 
          type: string
        timeZone:
          description: >-
            Time zone used for schedule. UTC by default. For example,
            "America/Los_Angeles".
          type: string
        password:
          description: An optional password for fetch_url.
          type: string
      type: object
    ListRepricingRulesResponse:
      description: Response message for the `ListRepricingRules` method.
      type: object
      properties:
        repricingRules:
          description: The rules from the specified merchant.
          items:
            $ref: '#/components/schemas/RepricingRule'
          type: array
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
      id: ListRepricingRulesResponse
    PromotionPromotionStatus:
      id: PromotionPromotionStatus
      description: The status of the promotion.
      type: object
      properties:
        lastUpdateDate:
          description: >-
            Date on which the promotion status has been last updated in [ISO
            8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and
            offset, for example "2020-01-02T09:00:00+01:00" or
            "2020-01-02T09:00:00Z"
          type: string
        creationDate:
          description: >-
            Date on which the promotion has been created in [ISO
            8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and
            offset, for example "2020-01-02T09:00:00+01:00" or
            "2020-01-02T09:00:00Z"
          type: string
        promotionIssue:
          items:
            $ref: '#/components/schemas/PromotionPromotionStatusPromotionIssue'
          description: A list of issues associated with the promotion.
          type: array
        destinationStatuses:
          description: The intended destinations for the promotion.
          items:
            $ref: '#/components/schemas/PromotionPromotionStatusDestinationStatus'
          type: array
    LiasettingsSetInventoryVerificationContactResponse:
      id: LiasettingsSetInventoryVerificationContactResponse
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#liasettingsSetInventoryVerificationContactResponse`".
      type: object
    CollectionStatusDestinationStatus:
      id: CollectionStatusDestinationStatus
      properties:
        pendingCountries:
          type: array
          items:
            type: string
          description: >-
            Country codes (ISO 3166-1 alpha-2) where the collection is pending
            approval.
        approvedCountries:
          items:
            type: string
          description: Country codes (ISO 3166-1 alpha-2) where the collection is approved.
          type: array
        disapprovedCountries:
          description: >-
            Country codes (ISO 3166-1 alpha-2) where the collection is
            disapproved.
          type: array
          items:
            type: string
        status:
          type: string
          description: >-
            The status for the specified destination in the collections target
            country.
        destination:
          type: string
          description: The name of the destination
      description: Destination status message.
      type: object
    MerchantRejectionReason:
      properties:
        reasonCode:
          description: Code of the rejection reason.
          type: string
        description:
          type: string
          description: Description of the reason.
      type: object
      id: MerchantRejectionReason
    LinkService:
      type: object
      id: LinkService
      properties:
        service:
          type: string
          description: >-
            Service provided to or by the linked account. Acceptable values are:
            - "`shoppingActionsOrderManagement`" -
            "`shoppingActionsProductManagement`" -
            "`shoppingAdsProductManagement`" - "`paymentProcessing`" 
        status:
          description: >-
            Status of the link Acceptable values are: - "`active`" -
            "`inactive`" - "`pending`" 
          type: string
    OrdersGetByMerchantOrderIdResponse:
      properties:
        order:
          description: The requested order.
          $ref: '#/components/schemas/Order'
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersGetByMerchantOrderIdResponse`".
          type: string
      id: OrdersGetByMerchantOrderIdResponse
      type: object
    LiasettingsSetPosDataProviderResponse:
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#liasettingsSetPosDataProviderResponse`".
      id: LiasettingsSetPosDataProviderResponse
      type: object
    AccountItemUpdatesSettings:
      id: AccountItemUpdatesSettings
      description: Settings for the Automatic Item Updates.
      type: object
      properties:
        allowStrictAvailabilityUpdates:
          type: boolean
          description: >-
            If allow_availability_updates is enabled, items are automatically
            updated in all your Shopping target countries. By default,
            availability updates will only be applied to items that are 'out of
            stock' on your website but 'in stock' on Shopping. Set this to true
            to also update items that are 'in stock' on your website, but 'out
            of stock' on Google Shopping. In order for this field to have an
            effect, you must also allow availability updates.
        allowAvailabilityUpdates:
          type: boolean
          description: >-
            If availability updates are enabled, any previous availability
            values get overwritten if Google finds an out-of-stock annotation on
            the offer's page. If additionally `allow_availability_updates` field
            is set to true, values get overwritten if Google finds an in-stock
            annotation on the offer’s page.
        allowConditionUpdates:
          description: >-
            If condition updates are enabled, Google always updates item
            condition with the condition detected from the details of your
            product.
          type: boolean
        allowPriceUpdates:
          type: boolean
          description: >-
            If price updates are enabled, Google always updates the active price
            with the crawled information.
    OrderCustomerLoyaltyInfo:
      type: object
      id: OrderCustomerLoyaltyInfo
      properties:
        name:
          type: string
          description: Name of card/membership holder, this field will be populated when
        loyaltyNumber:
          description: The loyalty card/membership number.
          type: string
    ShoppingAdsProgramStatusReviewIneligibilityReasonDetails:
      description: Additional details for review ineligibility reasons.
      properties:
        cooldownTime:
          type: string
          format: google-datetime
          description: >-
            This timestamp represents end of cooldown period for review
            ineligbility reason `IN_COOLDOWN_PERIOD`.
      type: object
      id: ShoppingAdsProgramStatusReviewIneligibilityReasonDetails
    ReturnPolicyOnlinePolicy:
      id: ReturnPolicyOnlinePolicy
      properties:
        days:
          format: int64
          description: >-
            The number of days items can be returned after delivery, where one
            day is defined to be 24 hours after the delivery timestamp. Required
            for `numberOfDaysAfterDelivery` returns.
          type: string
        type:
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Number of days after a return is delivered.
            - No returns.
            - Life time returns.
          enum:
            - TYPE_UNSPECIFIED
            - NUMBER_OF_DAYS_AFTER_DELIVERY
            - NO_RETURNS
            - LIFETIME_RETURNS
          description: Policy type.
      type: object
      description: The available policies.
    ProductStatus:
      id: ProductStatus
      description: >-
        The status of a product, that is, information about a product computed
        asynchronously.
      properties:
        googleExpirationDate:
          type: string
          description: >-
            Date on which the item expires in Google Shopping, in ISO 8601
            format.
        productId:
          type: string
          description: The ID of the product for which status is reported.
        destinationStatuses:
          description: The intended destinations for the product.
          type: array
          items:
            $ref: '#/components/schemas/ProductStatusDestinationStatus'
        creationDate:
          type: string
          description: Date on which the item has been created, in ISO 8601 format.
        itemLevelIssues:
          description: A list of all issues associated with the product.
          items:
            $ref: '#/components/schemas/ProductStatusItemLevelIssue'
          type: array
        lastUpdateDate:
          description: Date on which the item has been last updated, in ISO 8601 format.
          type: string
        link:
          type: string
          description: The link to the product.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#productStatus`"
          type: string
        title:
          description: The title of the product.
          type: string
      type: object
    GoogleAnalyticsLink:
      description: >-
        "Google Analytics Link" sources can be used to get conversion data from
        an existing Google Analytics property into the linked Merchant Center
        account.
      type: object
      id: GoogleAnalyticsLink
      properties:
        propertyName:
          readOnly: true
          description: >-
            Output only. Name of the Google Analytics property the merchant is
            linked to.
          type: string
        attributionSettings:
          readOnly: true
          $ref: '#/components/schemas/AttributionSettings'
          description: >-
            Output only. Attribution settings for the linked Google Analytics
            property.
        propertyId:
          type: string
          format: int64
          description: >-
            Required. Immutable. ID of the Google Analytics property the
            merchant is linked to.
    OrdersReturnRefundLineItemResponse:
      type: object
      id: OrdersReturnRefundLineItemResponse
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersReturnRefundLineItemResponse`".
          type: string
        executionStatus:
          type: string
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
    ReturnPricingInfo:
      type: object
      id: ReturnPricingInfo
      properties:
        refundableItemsTotalAmount:
          description: >-
            Total amount that can be refunded for the items in this return. It
            represents the total amount received by the merchant for the items,
            after applying merchant coupons.
          $ref: '#/components/schemas/MonetaryAmount'
        refundableShippingAmount:
          $ref: '#/components/schemas/MonetaryAmount'
          description: Maximum amount that can be refunded for the original shipping fee.
        totalRefundedAmount:
          description: >-
            Total amount already refunded by the merchant. It includes all types
            of refunds (items, shipping, etc.) Not provided if no refund has
            been applied yet.
          $ref: '#/components/schemas/MonetaryAmount'
        maxReturnShippingFee:
          description: >-
            Maximum return shipping costs that may be charged to the customer
            depending on merchant's assessment of the return reason and the
            merchant's return policy for the items being returned.
          $ref: '#/components/schemas/MonetaryAmount'
        chargeReturnShippingFee:
          description: >-
            Default option for whether merchant should charge the customer for
            return shipping costs, based on customer selected return reason and
            merchant's return policy for the items being returned.
          type: boolean
    SettlementReport:
      id: SettlementReport
      description: ' Settlement reports detail order-level and item-level credits and debits between you and Google.'
      type: object
      properties:
        previousBalance:
          description: >-
            The residual amount from the previous invoice. This is set only if
            the previous invoices are not paid because of negative balance.
          $ref: '#/components/schemas/Price'
        settlementId:
          description: The ID of the settlement report.
          type: string
        transferIds:
          description: >-
            The list of bank identifiers used for the transfer. For example,
            Trace ID for Federal Automated Clearing House (ACH). This may also
            be known as the Wire ID.
          items:
            type: string
          type: array
        startDate:
          type: string
          description: >-
            The start date on which all transactions are included in the report,
            in ISO 8601 format.
        transferAmount:
          description: The money due to the merchant.
          $ref: '#/components/schemas/Price'
        endDate:
          type: string
          description: >-
            The end date on which all transactions are included in the report,
            in ISO 8601 format.
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#settlementReport`"
        transferDate:
          type: string
          description: >-
            Date on which transfer for this payment was initiated by Google, in
            ISO 8601 format.
    OrderreturnsRefundOperation:
      id: OrderreturnsRefundOperation
      properties:
        paymentType:
          type: string
          description: >-
            The payment way of issuing refund. Default value is ORIGINAL_FOP if
            not set.
        partialRefund:
          $ref: '#/components/schemas/OrderreturnsPartialRefund'
          description: >-
            If this is set, the item will be partially refunded. Merchant can
            choose this refund option to specify the customized amount that to
            be refunded to the customer.
        fullRefund:
          description: >-
            If true, the item will be fully refunded. Allowed only when
            payment_type is FOP. Merchant can choose this refund option to
            indicate the full remaining amount of corresponding object to be
            refunded to the customer through FOP.
          type: boolean
        returnRefundReason:
          type: string
          description: Code of the refund reason.
        reasonText:
          type: string
          description: The explanation of the reason.
      type: object
    Promotion:
      type: object
      id: Promotion
      description: >-
        Represents a promotion. See the following articles for more details. *
        [Promotions feed
        specification](https://support.google.com/merchants/answer/2906014) *
        [Local promotions feed
        specification](https://support.google.com/merchants/answer/10146130) *
        [Promotions on Buy on Google product data
        specification](https://support.google.com/merchants/answer/9173673)
      properties:
        orderLimit:
          format: int32
          description: Order limit for the promotion.
          type: integer
        targetCountry:
          description: >-
            Required. The target country used as part of the unique identifier.
            Can be `AU`, `CA`, `DE`, `FR`, `GB`, `IN`, `US`, `BR`, `ES`, `NL`,
            `JP`, `IT` or `KR`.
          type: string
        longTitle:
          description: Required. Long title for the promotion.
          type: string
        promotionUrl:
          description: >-
            URL to the page on the merchant's site where the promotion shows.
            Local Inventory ads promotions throw an error if no promo url is
            included. URL is used to confirm that the promotion is valid and can
            be redeemed.
          type: string
        brand:
          type: array
          items:
            type: string
          description: Product filter by brand for the promotion.
        minimumPurchaseAmount:
          $ref: '#/components/schemas/PriceAmount'
          description: Minimum purchase amount for the promotion.
        promotionId:
          description: >-
            Required. The user provided promotion ID to uniquely identify the
            promotion.
          type: string
        contentLanguage:
          type: string
          description: >-
            Required. The content language used as part of the unique
            identifier. `en` content language is available for all target
            countries. `fr` content language is available for `CA` and `FR`
            target countries. `de` content language is available for `DE` target
            country. `nl` content language is available for `NL` target country.
            `it` content language is available for `IT` target country. `pt`
            content language is available for `BR` target country. `ja` content
            language is available for `JP` target country. `ko` content language
            is available for `KR` target country.
        itemGroupId:
          items:
            type: string
          description: Product filter by item group ID for the promotion.
          type: array
        limitValue:
          description: Maximum purchase value for the promotion.
          $ref: '#/components/schemas/PriceAmount'
        couponValueType:
          type: string
          enum:
            - COUPON_VALUE_TYPE_UNSPECIFIED
            - MONEY_OFF
            - PERCENT_OFF
            - BUY_M_GET_N_MONEY_OFF
            - BUY_M_GET_N_PERCENT_OFF
            - BUY_M_GET_MONEY_OFF
            - BUY_M_GET_PERCENT_OFF
            - FREE_GIFT
            - FREE_GIFT_WITH_VALUE
            - FREE_GIFT_WITH_ITEM_ID
            - FREE_SHIPPING_STANDARD
            - FREE_SHIPPING_OVERNIGHT
            - FREE_SHIPPING_TWO_DAY
          enumDescriptions:
            - Indicates that the coupon value type is unspecified.
            - Money off coupon value type.
            - Percent off coupon value type.
            - >-
              Buy M quantity, get N money off coupon value type.
              `buy_this_quantity` and `get_this_quantity` must be present.
              `money_off_amount` must also be present.
            - >-
              Buy M quantity, get N percent off coupon value type.
              `buy_this_quantity` and `get_this_quantity` must be present.
              `percent_off_percentage` must also be present.
            - >-
              Buy M quantity, get money off. `buy_this_quantity` and
              `money_off_amount` must be present.
            - >-
              Buy M quantity, get money off. `buy_this_quantity` and
              `percent_off_percentage` must be present.
            - Free gift with description only.
            - Free gift with value (description is optional).
            - Free gift with item ID (description is optional).
            - Standard free shipping coupon value type.
            - Overnight free shipping coupon value type.
            - Two day free shipping coupon value type.
          description: Required. Coupon value type for the promotion.
        limitQuantity:
          format: int32
          type: integer
          description: Maximum purchase quantity for the promotion.
        shippingServiceNames:
          items:
            type: string
          description: Shipping service names for the promotion.
          type: array
        genericRedemptionCode:
          description: >-
            Generic redemption code for the promotion. To be used with the
            `offerType` field.
          type: string
        promotionEffectiveTimePeriod:
          description: >-
            Required. `TimePeriod` representation of the promotion's effective
            dates.
          $ref: '#/components/schemas/TimePeriod'
        productTypeExclusion:
          items:
            type: string
          description: Product filter by product type exclusion for the promotion.
          type: array
        minimumPurchaseQuantity:
          description: Minimum purchase quantity for the promotion.
          format: int32
          type: integer
        promotionDisplayTimePeriod:
          $ref: '#/components/schemas/TimePeriod'
          description: '`TimePeriod` representation of the promotion''s display dates.'
        freeGiftItemId:
          description: Free gift item ID for the promotion.
          type: string
        offerType:
          enumDescriptions:
            - Unknown offer type.
            - Offer type without a code.
            - Offer type with a code.
          description: Required. Type of the promotion.
          enum:
            - OFFER_TYPE_UNSPECIFIED
            - NO_CODE
            - GENERIC_CODE
          type: string
        promotionEffectiveDates:
          type: string
          description: >-
            String representation of the promotion effective dates. Deprecated.
            Use `promotion_effective_time_period` instead.
        productApplicability:
          enumDescriptions:
            - Which products the promotion applies to is unknown.
            - Applicable to all products.
            - Applicable to only a single product or list of products.
          description: >-
            Required. Applicability of the promotion to either all products or
            only specific products.
          enum:
            - PRODUCT_APPLICABILITY_UNSPECIFIED
            - ALL_PRODUCTS
            - SPECIFIC_PRODUCTS
          type: string
        promotionStatus:
          description: Output only. The current status of the promotion.
          $ref: '#/components/schemas/PromotionPromotionStatus'
          readOnly: true
        storeCode:
          description: Store codes to include for the promotion.
          items:
            type: string
          type: array
        id:
          description: >-
            Required. Output only. The REST promotion ID to uniquely identify
            the promotion. Content API methods that operate on promotions take
            this as their `promotionId` parameter. The REST ID for a promotion
            is of the form channel:contentLanguage:targetCountry:promotionId The
            `channel` field has a value of `"online"`, `"in_store"`, or
            `"online_in_store"`.
          readOnly: true
          type: string
        moneyBudget:
          $ref: '#/components/schemas/PriceAmount'
          description: Cost cap for the promotion.
        promotionDestinationIds:
          items:
            type: string
          description: Destination ID for the promotion.
          type: array
        productType:
          type: array
          items:
            type: string
          description: Product filter by product type for the promotion.
        promotionDisplayDates:
          type: string
          description: >-
            String representation of the promotion display dates. Deprecated.
            Use `promotion_display_time_period` instead.
        redemptionChannel:
          items:
            enum:
              - REDEMPTION_CHANNEL_UNSPECIFIED
              - IN_STORE
              - ONLINE
            enumDescriptions:
              - Indicates that the channel is unspecified.
              - Indicates that the channel is in store.
              - Indicates that the channel is online.
            type: string
          type: array
          description: >-
            Required. Redemption channel for the promotion. At least one channel
            is required.
        brandExclusion:
          type: array
          items:
            type: string
          description: Product filter by brand exclusion for the promotion.
        itemGroupIdExclusion:
          description: Product filter by item group ID exclusion for the promotion.
          type: array
          items:
            type: string
        itemIdExclusion:
          items:
            type: string
          type: array
          description: Product filter by item ID exclusion for the promotion.
        itemId:
          items:
            type: string
          type: array
          description: Product filter by item ID for the promotion.
        storeCodeExclusion:
          items:
            type: string
          description: Store codes to exclude for the promotion.
          type: array
        percentOff:
          type: integer
          format: int32
          description: The percentage discount offered in the promotion.
        freeGiftValue:
          description: Free gift value for the promotion.
          $ref: '#/components/schemas/PriceAmount'
        moneyOffAmount:
          description: The money off amount offered in the promotion.
          $ref: '#/components/schemas/PriceAmount'
        storeApplicability:
          enum:
            - STORE_APPLICABILITY_UNSPECIFIED
            - ALL_STORES
            - SPECIFIC_STORES
          description: >-
            Whether the promotion applies to all stores, or only specified
            stores. Local Inventory ads promotions throw an error if no store
            applicability is included. An INVALID_ARGUMENT error is thrown if
            store_applicability is set to ALL_STORES and store_code or
            score_code_exclusion is set to a value.
          type: string
          enumDescriptions:
            - Which store codes the promotion applies to is unknown.
            - Promotion applies to all stores.
            - Promotion applies to only the specified stores.
        getThisQuantityDiscounted:
          description: The number of items discounted in the promotion.
          type: integer
          format: int32
        freeGiftDescription:
          description: Free gift description for the promotion.
          type: string
    TestOrderAddress:
      properties:
        country:
          description: CLDR country code (for example, "US").
          type: string
        locality:
          description: >-
            City, town or commune. May also include dependent localities or
            sublocalities (for example, neighborhoods or suburbs).
          type: string
        isPostOfficeBox:
          description: Whether the address is a post office box.
          type: boolean
        region:
          type: string
          description: >-
            Top-level administrative subdivision of the country. For example, a
            state like California ("CA") or a province like Quebec ("QC").
        recipientName:
          type: string
          description: Name of the recipient.
        streetAddress:
          items:
            type: string
          type: array
          description: Street-level part of the address. Use `\n` to add a second line.
        postalCode:
          type: string
          description: Postal Code or ZIP (for example, "94043").
        fullAddress:
          type: array
          items:
            type: string
          description: >-
            Strings representing the lines of the printed label for mailing the
            order, for example: John Smith 1600 Amphitheatre Parkway Mountain
            View, CA, 94043 United States 
      id: TestOrderAddress
      type: object
    Metrics:
      type: object
      description: >-
        Performance metrics. Values are only set for metrics requested
        explicitly in the request's search query.
      properties:
        orderedItems:
          type: string
          description: >-
            Number of ordered items. Excludes customer cancellations that
            happened within 30 minutes of placing the order. **This metric
            cannot be segmented by customer_country_code.**
          format: int64
        daysToShip:
          description: >-
            Average number of days between an order being placed and the order
            being fully shipped, reported on the last shipment date. **This
            metric cannot be segmented by product dimensions and
            customer_country_code.**
          type: number
          format: double
        itemFillRate:
          type: number
          format: double
          description: >-
            Percentage of shipped items in relation to all finalized items
            (shipped or rejected by the merchant; unshipped items are not taken
            into account), reported on the order date. Item fill rate is lowered
            by merchant rejections. **This metric cannot be segmented by
            customer_country_code.**
        returnsMicros:
          description: >-
            Total price of ordered items sent back for return in micros (1
            millionth of a standard unit, 1 USD = 1000000 micros), reported on
            the date when the merchant accepted the return. The currency of the
            returned value is stored in the currency_code segment. If this
            metric is selected, 'segments.currency_code' is automatically added
            to the SELECT clause in the search query (unless it is explicitly
            selected by the user) and the currency_code segment is populated in
            the response. **This metric cannot be segmented by
            customer_country_code.**
          format: int64
          type: string
        aovMicros:
          type: number
          description: >-
            Average order value in micros (1 millionth of a standard unit, 1 USD
            = 1000000 micros) - the average value (total price of items) of all
            placed orders. The currency of the returned value is stored in the
            currency_code segment. If this metric is selected,
            'segments.currency_code' is automatically added to the SELECT clause
            in the search query (unless it is explicitly selected by the user)
            and the currency_code segment is populated in the response. **This
            metric cannot be segmented by product dimensions and
            customer_country_code.**
          format: double
        shippedItems:
          type: string
          description: >-
            Number of shipped items, reported on the shipment date. **This
            metric cannot be segmented by customer_country_code.**
          format: int64
        shippedItemSalesMicros:
          description: >-
            Total price of shipped items in micros (1 millionth of a standard
            unit, 1 USD = 1000000 micros), reported on the order date. Excludes
            shipping and taxes (US only). The currency of the returned value is
            stored in the currency_code segment. If this metric is selected,
            'segments.currency_code' is automatically added to the SELECT clause
            in the search query (unless it is explicitly selected by the user)
            and the currency_code segment is populated in the response. **This
            metric cannot be segmented by customer_country_code.**
          format: int64
          type: string
        itemDaysToShip:
          description: >-
            Average number of days between an item being ordered and the item
            being **This metric cannot be segmented by customer_country_code.**
          format: double
          type: number
        ctr:
          type: number
          description: >-
            Click-through rate - the number of clicks merchant's products
            receive (clicks) divided by the number of times the products are
            shown (impressions).
          format: double
        impressions:
          format: int64
          description: Number of times merchant's products are shown.
          type: string
        returnedItems:
          description: >-
            Number of ordered items sent back for return, reported on the date
            when the merchant accepted the return. **This metric cannot be
            segmented by customer_country_code.**
          type: string
          format: int64
        shippedOrders:
          type: string
          format: int64
          description: >-
            Number of fully shipped orders, reported on the last shipment date.
            **This metric cannot be segmented by product dimensions and
            customer_country_code.**
        returnRate:
          format: double
          type: number
          description: >-
            Total price of returned items divided by the total price of shipped
            items, reported on the order date. If this metric is selected,
            'segments.currency_code' is automatically added to the SELECT clause
            in the search query (unless it is explicitly selected by the user)
            and the currency_code segment is populated in the response. **This
            metric cannot be segmented by customer_country_code.**
        rejectedItems:
          format: int64
          type: string
          description: >-
            Number of ordered items canceled by the merchant, reported on the
            order date. **This metric cannot be segmented by
            customer_country_code.**
        conversions:
          description: >-
            Number of conversions attributed to the product, reported on the
            conversion date. Depending on the attribution model, a conversion
            might be distributed across multiple clicks, where each click gets
            its own credit assigned. This metric is a sum of all such credits.
            The metric is currently available only for the FREE_PRODUCT_LISTING
            program.
          type: number
          format: double
        unshippedItems:
          format: double
          description: >-
            Number of ordered items not shipped up until the end of the queried
            day. If a multi-day period is specified in the search query, the
            returned value is the average number of unshipped items over the
            days in the queried period. **This metric cannot be segmented by
            customer_country_code.**
          type: number
        orderedItemSalesMicros:
          format: int64
          type: string
          description: >-
            Total price of ordered items in micros (1 millionth of a standard
            unit, 1 USD = 1000000 micros). Excludes shipping, taxes (US only),
            and customer cancellations that happened within 30 minutes of
            placing the order. The currency of the returned value is stored in
            the currency_code segment. If this metric is selected,
            'segments.currency_code' is automatically added to the SELECT clause
            in the search query (unless it is explicitly selected by the user)
            and the currency_code segment is populated in the response. **This
            metric cannot be segmented by customer_country_code.**
        clicks:
          type: string
          format: int64
          description: Number of clicks.
        orders:
          type: string
          format: int64
          description: >-
            Number of placed orders. Excludes customer cancellations that
            happened within 30 minutes of placing the order. **This metric
            cannot be segmented by product dimensions and
            customer_country_code.**
        unshippedOrders:
          format: double
          type: number
          description: >-
            Number of orders not shipped or partially shipped up until the end
            of the queried day. If a multi-day period is specified in the search
            query, the returned value is the average number of unshipped orders
            over the days in the queried period. **This metric cannot be
            segmented by product dimensions and customer_country_code.**
        aos:
          type: number
          format: double
          description: >-
            Average order size - the average number of items in an order. **This
            metric cannot be segmented by product dimensions and
            customer_country_code.**
        conversionValueMicros:
          description: >-
            Value of conversions in micros (1 millionth of a standard unit, 1
            USD = 1000000 micros) attributed to the product, reported on the
            conversion date. The metric is currently available only for the
            FREE_PRODUCT_LISTING program. The currency of the returned value is
            stored in the currency_code segment. If this metric is selected,
            'segments.currency_code' is automatically added to the SELECT clause
            in the search query (unless it is explicitly selected by the user)
            and the currency_code segment is populated in the response.
          format: int64
          type: string
        conversionRate:
          description: >-
            Number of conversions divided by the number of clicks, reported on
            the impression date. The metric is currently available only for the
            FREE_PRODUCT_LISTING program.
          type: number
          format: double
      id: Metrics
    CarriersCarrier:
      properties:
        name:
          description: The name of the carrier (for example, `"UPS"`). Always present.
          type: string
        services:
          type: array
          items:
            type: string
          description: >-
            A list of supported services (for example, `"ground"`) for that
            carrier. Contains at least one service. This is the list of valid
            values for CarrierRate.carrierService.
        eddServices:
          description: >-
            A list of services supported for EDD (Estimated Delivery Date)
            calculation. This is the list of valid values for
            WarehouseBasedDeliveryTime.carrierService.
          type: array
          items:
            type: string
        country:
          description: >-
            The CLDR country code of the carrier (for example, "US"). Always
            present.
          type: string
      id: CarriersCarrier
      type: object
    ECommercePlatformLinkInfo:
      type: object
      id: ECommercePlatformLinkInfo
      description: Additional information required for E_COMMERCE_PLATFORM link type.
      properties:
        externalAccountId:
          description: >-
            The id used by the third party service provider to identify the
            merchant.
          type: string
    RecommendationCreative:
      id: RecommendationCreative
      properties:
        uri:
          type: string
          description: URL of the creative.
        type:
          type: string
          enumDescriptions:
            - Default value. If provided, shall be considered invalid.
            - Video creatives.
            - Photo creatives.
          description: Type of the creative.
          enum:
            - CREATIVE_TYPE_UNSPECIFIED
            - VIDEO
            - PHOTO
      type: object
      description: >-
        Creative is a multimedia attachment to recommendation that can be used
        on the frontend.
    ReportRow:
      properties:
        productCluster:
          description: >-
            Product cluster fields requested by the merchant in the query. Field
            values are only set if the merchant queries
            `BestSellersProductClusterView`.
          $ref: '#/components/schemas/ProductCluster'
        segments:
          $ref: '#/components/schemas/Segments'
          description: >-
            Segmentation dimensions requested by the merchant in the query.
            Dimension values are only set for dimensions requested explicitly in
            the query.
        priceInsights:
          description: >-
            Price insights fields requested by the merchant in the query. Field
            values are only set if the merchant queries
            `PriceInsightsProductView`.
          $ref: '#/components/schemas/PriceInsights'
        priceCompetitiveness:
          $ref: '#/components/schemas/PriceCompetitiveness'
          description: >-
            Price competitiveness fields requested by the merchant in the query.
            Field values are only set if the merchant queries
            `PriceCompetitivenessProductView`.
        brand:
          description: >-
            Brand fields requested by the merchant in the query. Field values
            are only set if the merchant queries `BestSellersBrandView`.
          $ref: '#/components/schemas/Brand'
        productView:
          description: >-
            Product fields requested by the merchant in the query. Field values
            are only set if the merchant queries `ProductView`.
          $ref: '#/components/schemas/ProductView'
        metrics:
          description: >-
            Metrics requested by the merchant in the query. Metric values are
            only set for metrics requested explicitly in the query.
          $ref: '#/components/schemas/Metrics'
        bestSellers:
          description: >-
            Best sellers fields requested by the merchant in the query. Field
            values are only set if the merchant queries
            `BestSellersProductClusterView` or `BestSellersBrandView`.
          $ref: '#/components/schemas/BestSellers'
      type: object
      description: Result row returned from the search query.
      id: ReportRow
    MinimumOrderValueTable:
      properties:
        storeCodeSetWithMovs:
          type: array
          items:
            $ref: '#/components/schemas/MinimumOrderValueTableStoreCodeSetWithMov'
      id: MinimumOrderValueTable
      type: object
    Segments:
      properties:
        productTypeL1:
          description: >-
            [Product type (1st
            level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
            in merchant's own product taxonomy.
          type: string
        date:
          $ref: '#/components/schemas/Date'
          description: Date in the merchant timezone to which metrics apply.
        customLabel1:
          description: Custom label 1 for custom grouping of products.
          type: string
        currencyCode:
          type: string
          description: >-
            Currency in which price metrics are represented, for example, if you
            select `ordered_item_sales_micros`, the returned value will be
            represented by this currency.
        title:
          type: string
          description: Title of the product.
        customerCountryCode:
          type: string
          description: >-
            Code of the country where the customer is located at the time of the
            event. Represented in the ISO 3166 format. If the customer country
            cannot be determined, a special 'ZZ' code is returned.
        productTypeL3:
          description: >-
            [Product type (3rd
            level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
            in merchant's own product taxonomy.
          type: string
        productTypeL4:
          description: >-
            [Product type (4th
            level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
            in merchant's own product taxonomy.
          type: string
        productTypeL5:
          type: string
          description: >-
            [Product type (5th
            level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
            in merchant's own product taxonomy.
        offerId:
          description: Merchant-provided id of the product.
          type: string
        customLabel3:
          type: string
          description: Custom label 3 for custom grouping of products.
        categoryL3:
          type: string
          description: >-
            [Product category (3rd
            level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
            in Google's product taxonomy.
        customLabel2:
          type: string
          description: Custom label 2 for custom grouping of products.
        productTypeL2:
          description: >-
            [Product type (2nd
            level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
            in merchant's own product taxonomy.
          type: string
        customLabel0:
          description: Custom label 0 for custom grouping of products.
          type: string
        categoryL4:
          description: >-
            [Product category (4th
            level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
            in Google's product taxonomy.
          type: string
        categoryL2:
          type: string
          description: >-
            [Product category (2nd
            level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
            in Google's product taxonomy.
        brand:
          description: Brand of the product.
          type: string
        categoryL5:
          description: >-
            [Product category (5th
            level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
            in Google's product taxonomy.
          type: string
        program:
          enumDescriptions:
            - Not specified.
            - Shopping Ads.
            - Free Product Listing.
            - Free Local Product Listing.
            - Buy on Google Listing.
          enum:
            - PROGRAM_UNSPECIFIED
            - SHOPPING_ADS
            - FREE_PRODUCT_LISTING
            - FREE_LOCAL_PRODUCT_LISTING
            - BUY_ON_GOOGLE_LISTING
          description: Program to which metrics apply, for example, Free Product Listing.
          type: string
        week:
          $ref: '#/components/schemas/Date'
          description: >-
            First day of the week (Monday) of the metrics date in the merchant
            timezone.
        customLabel4:
          type: string
          description: Custom label 4 for custom grouping of products.
        categoryL1:
          description: >-
            [Product category (1st
            level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
            in Google's product taxonomy.
          type: string
      id: Segments
      type: object
      description: >-
        Dimensions according to which metrics are segmented in the response.
        Values of product dimensions, such as `offer_id`, reflect the state of a
        product at the time of the corresponding event, for example, impression
        or order. Segment fields cannot be selected in queries without also
        selecting at least one metric field. Values are only set for dimensions
        requested explicitly in the request's search query.
    OrderCustomerMarketingRightsInfo:
      id: OrderCustomerMarketingRightsInfo
      properties:
        marketingEmailAddress:
          description: >-
            Email address that can be used for marketing purposes. The field may
            be empty even if `explicitMarketingPreference` is 'granted'. This
            happens when retrieving an old order from the customer who deleted
            their account.
          type: string
        lastUpdatedTimestamp:
          type: string
          description: >-
            Timestamp when last time marketing preference was updated. Could be
            empty, if user wasn't offered a selection yet.
        explicitMarketingPreference:
          type: string
          description: >-
            Last known customer selection regarding marketing preferences. In
            certain cases this selection might not be known, so this field would
            be empty. If a customer selected `granted` in their most recent
            order, they can be subscribed to marketing emails. Customers who
            have chosen `denied` must not be subscribed, or must be unsubscribed
            if already opted-in. Acceptable values are: - "`denied`" -
            "`granted`" 
      type: object
    AccountstatusesCustomBatchResponseEntry:
      type: object
      id: AccountstatusesCustomBatchResponseEntry
      properties:
        errors:
          description: >-
            A list of errors for failed custombatch entries. *Note:* Schema
            errors fail the whole request.
          $ref: '#/components/schemas/Errors'
        accountStatus:
          description: >-
            The requested account status. Defined if and only if the request was
            successful.
          $ref: '#/components/schemas/AccountStatus'
        batchId:
          format: uint32
          type: integer
          description: The ID of the request entry this entry responds to.
      description: A batch entry encoding a single non-batch accountstatuses response.
    AccountIdentifier:
      properties:
        aggregatorId:
          type: string
          description: >-
            The aggregator ID, set for aggregators and subaccounts (in that
            case, it represents the aggregator of the subaccount).
          format: uint64
        merchantId:
          format: uint64
          type: string
          description: >-
            The merchant account ID, set for individual accounts and
            subaccounts.
      id: AccountIdentifier
      type: object
    TimePeriod:
      id: TimePeriod
      description: A message that represents a time period.
      type: object
      properties:
        startTime:
          format: google-datetime
          type: string
          description: The starting timestamp.
        endTime:
          description: The ending timestamp.
          type: string
          format: google-datetime
    LiaSettings:
      id: LiaSettings
      properties:
        countrySettings:
          items:
            $ref: '#/components/schemas/LiaCountrySettings'
          type: array
          description: The LIA settings for each country.
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#liaSettings`"
        accountId:
          type: string
          description: >-
            The ID of the account to which these LIA settings belong. Ignored
            upon update, always present in get request responses.
          format: uint64
      type: object
      description: >-
        Local Inventory ads (LIA) settings. All methods except
        listposdataproviders require the admin role.
    RegionalinventoryCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/RegionalinventoryCustomBatchRequestEntry'
          type: array
      id: RegionalinventoryCustomBatchRequest
      type: object
    OrderLineItemShippingDetailsMethod:
      type: object
      id: OrderLineItemShippingDetailsMethod
      properties:
        minDaysInTransit:
          format: uint32
          type: integer
          description: Required. Minimum transit time.
        maxDaysInTransit:
          description: Required. Maximum transit time.
          type: integer
          format: uint32
        carrier:
          description: >-
            The carrier for the shipping. Optional. See `shipments[].carrier`
            for a list of acceptable values.
          type: string
        methodName:
          type: string
          description: Required. The name of the shipping method.
    AccountAdsLink:
      id: AccountAdsLink
      properties:
        status:
          type: string
          description: >-
            Status of the link between this Merchant Center account and the Ads
            account. Upon retrieval, it represents the actual status of the link
            and can be either `active` if it was approved in Google Ads or
            `pending` if it's pending approval. Upon insertion, it represents
            the *intended* status of the link. Re-uploading a link with status
            `active` when it's still pending or with status `pending` when it's
            already active will have no effect: the status will remain
            unchanged. Re-uploading a link with deprecated status `inactive` is
            equivalent to not submitting the link at all and will delete the
            link if it was active or cancel the link request if it was pending.
            Acceptable values are: - "`active`" - "`pending`" 
        adsId:
          format: uint64
          type: string
          description: Customer ID of the Ads account.
      type: object
    AccountsClaimWebsiteResponse:
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accountsClaimWebsiteResponse`".
      id: AccountsClaimWebsiteResponse
      type: object
    OrderLineItemReturnInfo:
      type: object
      properties:
        isReturnable:
          type: boolean
          description: Required. Whether the item is returnable.
        policyUrl:
          type: string
          description: Required. URL of the item return policy.
        daysToReturn:
          type: integer
          format: int32
          description: Required. How many days later the item can be returned.
      id: OrderLineItemReturnInfo
    ShippingsettingsCustomBatchRequest:
      id: ShippingsettingsCustomBatchRequest
      type: object
      properties:
        entries:
          description: The request entries to be processed in the batch.
          type: array
          items:
            $ref: '#/components/schemas/ShippingsettingsCustomBatchRequestEntry'
    OrderreturnsProcessRequest:
      type: object
      id: OrderreturnsProcessRequest
      properties:
        returnItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderreturnsReturnItem'
          description: The list of items to return.
        refundShippingFee:
          $ref: '#/components/schemas/OrderreturnsRefundOperation'
          description: Refunds for original shipping fee.
        operationId:
          type: string
          description: >-
            [required] The ID of the operation, unique across all operations for
            a given order return.
        fullChargeReturnShippingCost:
          type: boolean
          description: Option to charge the customer return shipping cost.
    OrdersCancelTestOrderByCustomerResponse:
      type: object
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersCancelTestOrderByCustomerResponse`".
          type: string
      id: OrdersCancelTestOrderByCustomerResponse
    ProductViewItemIssueIssueSeverityPerDestination:
      properties:
        destination:
          description: Issue destination.
          type: string
        demotedCountries:
          description: List of demoted countries in the destination.
          type: array
          items:
            type: string
        disapprovedCountries:
          description: List of disapproved countries in the destination.
          items:
            type: string
          type: array
      description: Issue severity for all affected regions in a destination.
      type: object
      id: ProductViewItemIssueIssueSeverityPerDestination
    LiasettingsRequestInventoryVerificationResponse:
      id: LiasettingsRequestInventoryVerificationResponse
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#liasettingsRequestInventoryVerificationResponse`".
          type: string
      type: object
    OrderreturnsPartialRefund:
      properties:
        taxAmount:
          description: >-
            Tax amount to be refunded. Note: This has different meaning
            depending on the location of the order.
          $ref: '#/components/schemas/Price'
        priceAmount:
          description: >-
            The pre-tax or post-tax amount to be refunded, depending on the
            location of the order.
          $ref: '#/components/schemas/Price'
      type: object
      id: OrderreturnsPartialRefund
    AccountstatusesCustomBatchRequestEntry:
      id: AccountstatusesCustomBatchRequestEntry
      type: object
      description: A batch entry encoding a single non-batch accountstatuses request.
      properties:
        accountId:
          type: string
          description: The ID of the (sub-)account whose status to get.
          format: uint64
        method:
          type: string
          description: 'The method of the batch entry. Acceptable values are: - "`get`" '
        batchId:
          description: An entry ID, unique within the batch request.
          type: integer
          format: uint32
        destinations:
          items:
            type: string
          description: >-
            If set, only issues for the specified destinations are returned,
            otherwise only issues for the Shopping destination.
          type: array
        merchantId:
          type: string
          description: The ID of the managing account.
          format: uint64
    ServiceStoreConfigCutoffConfigLocalCutoffTime:
      description: >-
        Time in hours and minutes in the local timezone when local delivery
        ends.
      type: object
      properties:
        minute:
          description: >-
            Minute local delivery orders must be placed by to process the same
            day.
          type: string
          format: int64
        hour:
          description: >-
            Hour local delivery orders must be placed by to process the same
            day.
          type: string
          format: int64
      id: ServiceStoreConfigCutoffConfigLocalCutoffTime
    AccountImageImprovementsSettings:
      description: Settings for the Automatic Image Improvements.
      properties:
        allowAutomaticImageImprovements:
          type: boolean
          description: Enables automatic image improvements.
      id: AccountImageImprovementsSettings
      type: object
    ListRegionsResponse:
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        regions:
          type: array
          items:
            $ref: '#/components/schemas/Region'
          description: The regions from the specified merchant.
      id: ListRegionsResponse
      type: object
      description: Response message for the `ListRegions` method.
    ShippingsettingsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/ShippingsettingsCustomBatchResponseEntry'
          type: array
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#shippingsettingsCustomBatchResponse`".
      type: object
      id: ShippingsettingsCustomBatchResponse
    OrderreturnsListResponse:
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/MerchantOrderReturn'
        nextPageToken:
          description: The token for the retrieval of the next page of returns.
          type: string
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#orderreturnsListResponse`".
      type: object
      id: OrderreturnsListResponse
    LocalinventoryCustomBatchRequest:
      id: LocalinventoryCustomBatchRequest
      type: object
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/LocalinventoryCustomBatchRequestEntry'
          type: array
    ProductShipping:
      type: object
      id: ProductShipping
      properties:
        maxTransitTime:
          description: >-
            Maximum transit time (inclusive) between when the order has shipped
            and when it's delivered in business days. 0 means that the order is
            delivered on the same day as it ships. Both maxHandlingTime and
            maxTransitTime are required if providing shipping speeds.
          type: string
          format: int64
        locationGroupName:
          type: string
          description: >-
            The location where the shipping is applicable, represented by a
            location group name.
        price:
          description: Fixed shipping price, represented as a number.
          $ref: '#/components/schemas/Price'
        minTransitTime:
          description: >-
            Minimum transit time (inclusive) between when the order has shipped
            and when it's delivered in business days. 0 means that the order is
            delivered on the same day as it ships. minTransitTime can only be
            present together with maxTransitTime; but it's not required if
            maxTransitTime is present.
          format: int64
          type: string
        region:
          description: The geographic region to which a shipping rate applies.
          type: string
        minHandlingTime:
          description: >-
            Minimum handling time (inclusive) between when the order is received
            and shipped in business days. 0 means that the order is shipped on
            the same day as it's received if it happens before the cut-off time.
            minHandlingTime can only be present together with maxHandlingTime;
            but it's not required if maxHandlingTime is present.
          type: string
          format: int64
        locationId:
          type: string
          description: >-
            The numeric ID of a location that the shipping rate applies to as
            defined in the Google Ads API.
          format: int64
        service:
          type: string
          description: A free-form description of the service class or delivery speed.
        maxHandlingTime:
          format: int64
          type: string
          description: >-
            Maximum handling time (inclusive) between when the order is received
            and shipped in business days. 0 means that the order is shipped on
            the same day as it's received if it happens before the cut-off time.
            Both maxHandlingTime and maxTransitTime are required if providing
            shipping speeds.
        country:
          type: string
          description: The CLDR territory code of the country to which an item will ship.
        postalCode:
          type: string
          description: >-
            The postal code range that the shipping rate applies to, represented
            by a postal code, a postal code prefix followed by a * wildcard, a
            range between two postal codes or two postal code prefixes of equal
            length.
    RepricingRuleEffectiveTimeFixedTimePeriod:
      properties:
        endTime:
          type: string
          description: >-
            The end time (exclusive) of the period. It can only be hour
            granularity.
          format: google-datetime
        startTime:
          format: google-datetime
          type: string
          description: >-
            The start time (inclusive) of the period. It can only be hour
            granularity.
      id: RepricingRuleEffectiveTimeFixedTimePeriod
      description: Definition of a fixed time period.
      type: object
    AccountTax:
      properties:
        rules:
          description: >-
            Tax rules. Updating the tax rules will enable "US" taxes (not
            reversible). Defining no rules is equivalent to not charging tax at
            all.
          items:
            $ref: '#/components/schemas/AccountTaxTaxRule'
          type: array
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accountTax`".
          type: string
        accountId:
          type: string
          format: uint64
          description: >-
            Required. The ID of the account to which these account tax settings
            belong.
      id: AccountTax
      type: object
      description: >-
        The tax settings of a merchant account. All methods require the admin
        role.
    ListAccountLabelsResponse:
      id: ListAccountLabelsResponse
      description: Response message for the `ListAccountLabels` method.
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        accountLabels:
          description: The labels from the specified account.
          type: array
          items:
            $ref: '#/components/schemas/AccountLabel'
      type: object
    Headers:
      description: >-
        A non-empty list of row or column headers for a table. Exactly one of
        `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location`
        must be set.
      id: Headers
      properties:
        prices:
          type: array
          description: >-
            A list of inclusive order price upper bounds. The last price's value
            can be `"infinity"`. For example `[{"value": "10", "currency":
            "USD"}, {"value": "500", "currency": "USD"}, {"value": "infinity",
            "currency": "USD"}]` represents the headers "<= $10", "<= $500", and
            "> $500". All prices within a service must have the same currency.
            Must be non-empty. Can only be set if all other fields are not set.
          items:
            $ref: '#/components/schemas/Price'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/LocationIdSet'
          description: >-
            A list of location ID sets. Must be non-empty. Can only be set if
            all other fields are not set.
        weights:
          type: array
          description: >-
            A list of inclusive order weight upper bounds. The last weight's
            value can be `"infinity"`. For example `[{"value": "10", "unit":
            "kg"}, {"value": "50", "unit": "kg"}, {"value": "infinity", "unit":
            "kg"}]` represents the headers "<= 10kg", "<= 50kg", and "> 50kg".
            All weights within a service must have the same unit. Must be
            non-empty. Can only be set if all other fields are not set.
          items:
            $ref: '#/components/schemas/Weight'
        postalCodeGroupNames:
          items:
            type: string
          description: >-
            A list of postal group names. The last value can be `"all other
            locations"`. Example: `["zone 1", "zone 2", "all other locations"]`.
            The referred postal code groups must match the delivery country of
            the service. Must be non-empty. Can only be set if all other fields
            are not set.
          type: array
        numberOfItems:
          items:
            type: string
          description: >-
            A list of inclusive number of items upper bounds. The last value can
            be `"infinity"`. For example `["10", "50", "infinity"]` represents
            the headers "<= 10 items", "<= 50 items", and "> 50 items". Must be
            non-empty. Can only be set if all other fields are not set.
          type: array
      type: object
    TimeZone:
      description: >-
        Represents a time zone from the [IANA Time Zone
        Database](https://www.iana.org/time-zones).
      properties:
        id:
          description: IANA Time Zone Database time zone, e.g. "America/New_York".
          type: string
        version:
          type: string
          description: Optional. IANA Time Zone Database version number, e.g. "2019a".
      id: TimeZone
      type: object
    OrdersRejectReturnLineItemResponse:
      id: OrdersRejectReturnLineItemResponse
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersRejectReturnLineItemResponse`".
        executionStatus:
          type: string
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
      type: object
    AccountStatusProducts:
      type: object
      properties:
        statistics:
          $ref: '#/components/schemas/AccountStatusStatistics'
          description: Aggregated product statistics.
        country:
          type: string
          description: The country the data applies to.
        itemLevelIssues:
          description: List of item-level issues.
          type: array
          items:
            $ref: '#/components/schemas/AccountStatusItemLevelIssue'
        channel:
          description: >-
            The channel the data applies to. Acceptable values are: - "`local`"
            - "`online`" 
          type: string
        destination:
          type: string
          description: The destination the data applies to.
      id: AccountStatusProducts
    CustomAttribute:
      id: CustomAttribute
      type: object
      properties:
        name:
          description: >-
            The name of the attribute. Underscores will be replaced by spaces
            upon insertion.
          type: string
        groupValues:
          description: >-
            Subattributes within this attribute group. Exactly one of value or
            groupValues must be provided.
          items:
            $ref: '#/components/schemas/CustomAttribute'
          type: array
        value:
          type: string
          description: The value of the attribute.
    RepricingRuleRestriction:
      type: object
      description: >-
        Definition of a rule restriction. At least one of the following needs to
        be true: (1) use_auto_pricing_min_price is true (2) floor.price_delta
        exists (3) floor.percentage_delta exists If floor.price_delta and
        floor.percentage_delta are both set on a rule, the highest value will be
        chosen by the Repricer. In other words, for a product with a price of
        $50, if the `floor.percentage_delta` is "-10" and the floor.price_delta
        is "-12", the offer price will only be lowered $5 (10% lower than the
        original offer price).
      id: RepricingRuleRestriction
      properties:
        useAutoPricingMinPrice:
          type: boolean
          description: >-
            If true, use the AUTO_PRICING_MIN_PRICE offer attribute as the lower
            bound of the rule. If use_auto_pricing_min_price is true, then only
            offers with `AUTO_PRICING_MIN_PRICE` existing on the offer will get
            Repricer treatment, even if a floor value is set on the rule. Also,
            if use_auto_pricing_min_price is true, the floor restriction will be
            ignored.
        floor:
          description: >-
            The inclusive floor lower bound. The repricing rule only applies
            when new price >= floor.
          $ref: '#/components/schemas/RepricingRuleRestrictionBoundary'
    PriceCompetitiveness:
      type: object
      description: >-
        Price competitiveness fields requested by the merchant in the query.
        Field values are only set if the merchant queries
        `PriceCompetitivenessProductView`.
        https://support.google.com/merchants/answer/9626903
      id: PriceCompetitiveness
      properties:
        benchmarkPriceCurrencyCode:
          type: string
          description: The price benchmark currency (ISO 4217 code).
        countryCode:
          description: The country of the price benchmark (ISO 3166 code).
          type: string
        benchmarkPriceMicros:
          type: string
          format: int64
          description: >-
            The latest available price benchmark in micros (1 millionth of a
            standard unit, 1 USD = 1000000 micros) for the product's catalog in
            the benchmark country.
    ProductTax:
      properties:
        rate:
          description: The percentage of tax rate that applies to the item price.
          format: double
          type: number
        postalCode:
          description: >-
            The postal code range that the tax rate applies to, represented by a
            ZIP code, a ZIP code prefix using * wildcard, a range between two
            ZIP codes or two ZIP code prefixes of equal length. Examples: 94114,
            94*, 94002-95460, 94*-95*.
          type: string
        region:
          description: The geographic region to which the tax rate applies.
          type: string
        taxShip:
          type: boolean
          description: Should be set to true if tax is charged on shipping.
        country:
          description: >-
            The country within which the item is taxed, specified as a CLDR
            territory code.
          type: string
        locationId:
          format: int64
          description: >-
            The numeric ID of a location that the tax rate applies to as defined
            in the Google Ads API.
          type: string
      id: ProductTax
      type: object
    AccountsAuthInfoResponse:
      properties:
        accountIdentifiers:
          items:
            $ref: '#/components/schemas/AccountIdentifier'
          description: >-
            The account identifiers corresponding to the authenticated user. -
            For an individual account: only the merchant ID is defined - For an
            aggregator: only the aggregator ID is defined - For a subaccount of
            an MCA: both the merchant ID and the aggregator ID are defined. 
          type: array
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accountsAuthInfoResponse`".
          type: string
      type: object
      id: AccountsAuthInfoResponse
    ServiceStoreConfig:
      id: ServiceStoreConfig
      properties:
        cutoffConfig:
          $ref: '#/components/schemas/ServiceStoreConfigCutoffConfig'
          description: >-
            Time local delivery ends for the day. This can be either
            `local_cutoff_time` or `store_close_offset_hours`, if both are
            provided an error is thrown.
        serviceRadius:
          description: >-
            Maximum delivery radius. Only needed for local delivery fulfillment
            type.
          $ref: '#/components/schemas/Distance'
        storeCodes:
          type: array
          items:
            type: string
          description: >-
            A list of store codes that provide local delivery. If empty, then
            `store_service_type` must be `all_stores`, or an error is thrown. If
            not empty, then `store_service_type` must be `selected_stores`, or
            an error is thrown.
        storeServiceType:
          description: >-
            Indicates whether all stores listed by this merchant provide local
            delivery or not. Acceptable values are `all stores` and `selected
            stores`
          type: string
      type: object
      description: >-
        Stores that provide local delivery. Only valid with local delivery
        fulfillment.
    RepricingRuleEffectiveTime:
      properties:
        fixedTimePeriods:
          description: >-
            A list of fixed time periods combined with OR. The maximum number of
            entries is limited to 5.
          type: array
          items:
            $ref: '#/components/schemas/RepricingRuleEffectiveTimeFixedTimePeriod'
      type: object
      id: RepricingRuleEffectiveTime
    ShoppingAdsProgramStatusRegionStatus:
      properties:
        reviewIneligibilityReasonDetails:
          description: >-
            Additional information for ineligibility. If
            `reviewIneligibilityReason` is `IN_COOLDOWN_PERIOD`, a timestamp for
            the end of the cooldown period is provided.
          $ref: >-
            #/components/schemas/ShoppingAdsProgramStatusReviewIneligibilityReasonDetails
        reviewIneligibilityReason:
          type: string
          enum:
            - REVIEW_INELIGIBILITY_REASON_UNSPECIFIED
            - ONBOARDING_ISSUES
            - NOT_ENOUGH_OFFERS
            - IN_COOLDOWN_PERIOD
            - ALREADY_UNDER_REVIEW
            - NO_REVIEW_REQUIRED
            - WILL_BE_REVIEWED_AUTOMATICALLY
            - IS_RETIRED
            - ALREADY_REVIEWED
          description: Review ineligibility reason if account is not eligible for review.
          enumDescriptions:
            - Requesting a review from Google is not possible.
            - All onboarding issues needs to be fixed.
            - Not enough offers uploaded for this country.
            - Cooldown period applies. Wait until cooldown period ends.
            - Account is already under review.
            - No issues available to review.
            - >-
              Account will be automatically reviewed at the end of the grace
              period.
            - Account is retired. Should not appear in MC.
            - Account was already reviewd.
        reviewEligibilityStatus:
          description: >-
            If a program is eligible for review in a specific region. Only
            visible if `eligibilityStatus` is `DISAPPROVED`.
          enum:
            - REVIEW_ELIGIBILITY_UNSPECIFIED
            - ELIGIBLE
            - INELIGIBLE
          enumDescriptions:
            - Review eligibility state is unknown.
            - Account is eligible for review for a specified region code.
            - Account is not eligible for review for a specified region code.
          type: string
        regionCodes:
          items:
            type: string
          description: >-
            The two-letter [ISO 3166-1
            alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for
            all the regions with the same `eligibilityStatus` and
            `reviewEligibility`.
          type: array
        disapprovalDate:
          type: string
          description: >-
            Date by which eligibilityStatus will go from `WARNING` to
            `DISAPPROVED`. Only visible when your eligibilityStatus is WARNING.
            In [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:
            `YYYY-MM-DD`.
        onboardingIssues:
          type: array
          items:
            type: string
          description: Issues that must be fixed to be eligible for review.
        reviewIneligibilityReasonDescription:
          description: >-
            Reason a program in a specific region isn’t eligible for review.
            Only visible if `reviewEligibilityStatus` is `INELIGIBLE`.
          type: string
        eligibilityStatus:
          enumDescriptions:
            - State is not known.
            - If the account has no issues and review is completed successfully.
            - >-
              There are one or more issues that needs to be resolved for account
              to be active for the program. Detailed list of account issues are
              available in
              [accountstatuses](https://developers.google.com/shopping-content/reference/rest/v2.1/accountstatuses)
              API.
            - >-
              If account has issues but offers are servable. Some of the issue
              can make account DISAPPROVED after a certain deadline.
            - Account is under review.
            - Account is waiting for review to start.
            - >-
              Program is currently onboarding. Upload valid offers to complete
              onboarding.
          enum:
            - STATE_UNSPECIFIED
            - APPROVED
            - DISAPPROVED
            - WARNING
            - UNDER_REVIEW
            - PENDING_REVIEW
            - ONBOARDING
          description: Eligibility status of the Shopping Ads program.
          type: string
        reviewIssues:
          type: array
          items:
            type: string
          description: >-
            Issues evaluated in the review process. Fix all issues before
            requesting a review.
      type: object
      description: Status of program and region.
      id: ShoppingAdsProgramStatusRegionStatus
    ProductDeliveryTimeAreaDeliveryTime:
      type: object
      description: >-
        A pairing of `DeliveryArea` associated with a `DeliveryTime` for this
        product.
      properties:
        deliveryArea:
          description: >-
            Required. The delivery area associated with `deliveryTime` for this
            product.
          $ref: '#/components/schemas/DeliveryArea'
        deliveryTime:
          $ref: '#/components/schemas/ProductDeliveryTimeAreaDeliveryTimeDeliveryTime'
          description: >-
            Required. The delivery time associated with `deliveryArea` for this
            product.
      id: ProductDeliveryTimeAreaDeliveryTime
    PostalCodeRange:
      id: PostalCodeRange
      properties:
        postalCodeRangeBegin:
          type: string
          description: >-
            A postal code or a pattern of the form `prefix*` denoting the
            inclusive lower bound of the range defining the area. Examples
            values: `"94108"`, `"9410*"`, `"9*"`. Required.
        postalCodeRangeEnd:
          type: string
          description: >-
            A postal code or a pattern of the form `prefix*` denoting the
            inclusive upper bound of the range defining the area. It must have
            the same length as `postalCodeRangeBegin`: if `postalCodeRangeBegin`
            is a postal code then `postalCodeRangeEnd` must be a postal code
            too; if `postalCodeRangeBegin` is a pattern then
            `postalCodeRangeEnd` must be a pattern with the same prefix length.
            Optional: if not set, then the area is defined as being all the
            postal codes matching `postalCodeRangeBegin`.
      type: object
    AccountsListResponse:
      id: AccountsListResponse
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accountsListResponse`".
        nextPageToken:
          type: string
          description: The token for the retrieval of the next page of accounts.
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Account'
      type: object
    VerifyPhoneNumberRequest:
      type: object
      description: Request message for the VerifyPhoneNumber method.
      id: VerifyPhoneNumberRequest
      properties:
        phoneVerificationMethod:
          description: Verification method used to receive verification code.
          enum:
            - PHONE_VERIFICATION_METHOD_UNSPECIFIED
            - SMS
            - PHONE_CALL
          enumDescriptions:
            - Unknown method.
            - Receive verification code by SMS.
            - Receive verification code by phone call.
          type: string
        verificationId:
          type: string
          description: The verification ID returned by `requestphoneverification`.
        verificationCode:
          type: string
          description: >-
            The verification code that was sent to the phone number for
            validation.
    LiasettingsCustomBatchRequest:
      id: LiasettingsCustomBatchRequest
      properties:
        entries:
          items:
            $ref: '#/components/schemas/LiasettingsCustomBatchRequestEntry'
          description: The request entries to be processed in the batch.
          type: array
      type: object
    MethodQuota:
      description: The quota information per method in the Content API.
      type: object
      id: MethodQuota
      properties:
        quotaUsage:
          description: >-
            The current quota usage, meaning the number of calls already made to
            the method.
          format: int64
          type: string
        method:
          type: string
          description: >-
            The method name, for example `products.list`. Method name does not
            contain version because quota can be shared between different API
            versions of the same method.
        quotaLimit:
          description: >-
            The current quota limit per day, meaning the maximum number of calls
            for the method.
          type: string
          format: int64
    OrderreturnsReturnItem:
      id: OrderreturnsReturnItem
      properties:
        returnItemId:
          type: string
          description: >-
            Unit level ID for the return item. Different units of the same
            product will have different IDs.
        reject:
          $ref: '#/components/schemas/OrderreturnsRejectOperation'
          description: Rejects the item.
        refund:
          description: Refunds the item.
          $ref: '#/components/schemas/OrderreturnsRefundOperation'
      type: object
    OrderreturnsCreateOrderReturnRequest:
      properties:
        operationId:
          type: string
          description: >-
            The ID of the operation. Unique across all operations for a given
            order.
        orderId:
          type: string
          description: The ID of the order.
        returnMethodType:
          type: string
          description: The way of the package being returned.
        lineItems:
          type: array
          description: The list of line items to return.
          items:
            $ref: '#/components/schemas/OrderreturnsLineItem'
      id: OrderreturnsCreateOrderReturnRequest
      type: object
    RepricingProductReportBuyboxWinningProductStats:
      properties:
        buyboxWinsCount:
          format: int32
          type: integer
          description: >-
            Number of times this product won the buybox with these rules during
            this time period.
      description: Stats specific to buybox winning rules for product report.
      type: object
      id: RepricingProductReportBuyboxWinningProductStats
    OrderreturnsAcknowledgeRequest:
      properties:
        operationId:
          description: >-
            [required] The ID of the operation, unique across all operations for
            a given order return.
          type: string
      type: object
      id: OrderreturnsAcknowledgeRequest
    RequestReviewShoppingAdsRequest:
      type: object
      id: RequestReviewShoppingAdsRequest
      description: Request message for the RequestReviewShoppingAds program method.
      properties:
        regionCode:
          type: string
          description: >-
            The code [ISO 3166-1
            alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the
            country for which review is to be requested.
    OrderPromotion:
      properties:
        shortTitle:
          description: >-
            A short title of the promotion to be shown on the checkout page. Do
            not provide for `orders.createtestorder`.
          type: string
        startTime:
          type: string
          description: >-
            Promotion start time in ISO 8601 format. Date, time, and offset
            required, for example, "2020-01-02T09:00:00+01:00" or
            "2020-01-02T09:00:00Z".
        priceValue:
          description: >-
            Estimated discount applied to price. Amount is pre-tax or post-tax
            depending on location of order.
          $ref: '#/components/schemas/Price'
        title:
          type: string
          description: Required. The title of the promotion.
        endTime:
          description: >-
            Promotion end time in ISO 8601 format. Date, time, and offset
            required, for example, "2020-01-02T09:00:00+01:00" or
            "2020-01-02T09:00:00Z".
          type: string
        subtype:
          type: string
          description: >-
            Required. The category of the promotion. Only `moneyOff` is
            supported for `orders.createtestorder`. Acceptable values are: -
            "`buyMGetMoneyOff`" - "`buyMGetNMoneyOff`" - "`buyMGetNPercentOff`"
            - "`buyMGetPercentOff`" - "`freeGift`" - "`freeGiftWithItemId`" -
            "`freeGiftWithValue`" - "`freeShippingOvernight`" -
            "`freeShippingStandard`" - "`freeShippingTwoDay`" - "`moneyOff`" -
            "`percentOff`" - "`rewardPoints`" - "`salePrice`" 
        merchantPromotionId:
          type: string
          description: >-
            Required. This field is used to identify promotions within
            merchants' own systems.
        appliedItems:
          type: array
          description: >-
            Items that this promotion have been applied to. Do not provide for
            `orders.createtestorder`. This field will be empty for shipping
            promotions because shipping is not tied to any specific item.
          items:
            $ref: '#/components/schemas/OrderPromotionItem'
        applicableItems:
          items:
            $ref: '#/components/schemas/OrderPromotionItem'
          type: array
          description: >-
            Items that this promotion may be applied to. If empty, there are no
            restrictions on applicable items and quantity. This field will also
            be empty for shipping promotions because shipping is not tied to any
            specific item.
        funder:
          type: string
          description: >-
            Required. The party funding the promotion. Only `merchant` is
            supported for `orders.createtestorder`. Acceptable values are: -
            "`google`" - "`merchant`" 
        type:
          description: >-
            Required. The scope of the promotion. Only `product` is supported
            for `orders.createtestorder`. Acceptable values are: - "`product`" -
            "`shipping`" 
          type: string
        taxValue:
          $ref: '#/components/schemas/Price'
          description: >-
            Estimated discount applied to tax (if allowed by law). Do not
            provide for `orders.createtestorder`.
      id: OrderPromotion
      type: object
    OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption:
      id: OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption
      properties:
        description:
          type: string
          description: Optional description of the refund reason.
        reason:
          type: string
          description: >-
            [required] Reason for the refund. Acceptable values are: -
            "`adjustment`" - "`autoPostInternal`" -
            "`autoPostInvalidBillingAddress`" - "`autoPostNoInventory`" -
            "`autoPostPriceError`" - "`autoPostUndeliverableShippingAddress`" -
            "`couponAbuse`" - "`courtesyAdjustment`" - "`customerCanceled`" -
            "`customerDiscretionaryReturn`" -
            "`customerInitiatedMerchantCancel`" - "`customerSupportRequested`" -
            "`deliveredLateByCarrier`" - "`deliveredTooLate`" - "`expiredItem`"
            - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`"
            - "`failToPushOrderMerchantFulfillmentError`" -
            "`failToPushOrderToMerchant`" -
            "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" -
            "`invalidCoupon`" - "`lateShipmentCredit`" -
            "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" -
            "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" -
            "`paymentDeclined`" - "`priceAdjustment`" - "`priceError`" -
            "`productArrivedDamaged`" - "`productNotAsDescribed`" -
            "`promoReallocation`" - "`qualityNotAsExpected`" -
            "`returnRefundAbuse`" - "`shippingCostAdjustment`" -
            "`shippingPriceError`" - "`taxAdjustment`" - "`taxError`" -
            "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" -
            "`wrongProductShipped`" 
      type: object
    AccounttaxCustomBatchRequestEntry:
      properties:
        batchId:
          type: integer
          format: uint32
          description: An entry ID, unique within the batch request.
        accountTax:
          description: >-
            The account tax settings to update. Only defined if the method is
            `update`.
          $ref: '#/components/schemas/AccountTax'
        method:
          description: >-
            The method of the batch entry. Acceptable values are: - "`get`" -
            "`update`" 
          type: string
        accountId:
          type: string
          description: The ID of the account for which to get/update account tax settings.
          format: uint64
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
      id: AccounttaxCustomBatchRequestEntry
      type: object
      description: A batch entry encoding a single non-batch accounttax request.
    AccountsLinkResponse:
      id: AccountsLinkResponse
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#accountsLinkResponse`".
      type: object
    OrdersRefundItemResponse:
      id: OrdersRefundItemResponse
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "`content#ordersRefundItemResponse`".
          type: string
        executionStatus:
          description: >-
            The status of the execution. Acceptable values are: - "`duplicate`"
            - "`executed`" 
          type: string
      type: object
    FreeListingsProgramStatusReviewIneligibilityReasonDetails:
      properties:
        cooldownTime:
          description: >-
            This timestamp represents end of cooldown period for review
            ineligbility reason `IN_COOLDOWN_PERIOD`.
          format: google-datetime
          type: string
      description: Additional details for review ineligibility reasons.
      id: FreeListingsProgramStatusReviewIneligibilityReasonDetails
      type: object
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/content: Manage your product listings and accounts for Google Shopping
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /{merchantId}/reports/search:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
    post:
      description: >-
        Retrieves merchant performance mertrics matching the search query and
        optionally segmented by selected dimensions.
      operationId: content.reports.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: exec
  /accountstatuses/batch:
    parameters: *ref_1
    post:
      description: Retrieves multiple Merchant Center account statuses in a single request.
      operationId: content.accountstatuses.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountstatusesCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountstatusesCustomBatchResponse'
      parameters: []
      x-stackQL-resource: accountstatuses
      x-stackQL-verb: exec
  /{merchantId}/accountstatuses/{accountId}:
    parameters: *ref_1
    get:
      description: >-
        Retrieves the status of a Merchant Center account. No itemLevelIssues
        are returned for multi-client accounts.
      operationId: content.accountstatuses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: destinations
          schema:
            type: string
      x-stackQL-resource: accountstatuses
      x-stackQL-verb: select
  /{merchantId}/accountstatuses:
    parameters: *ref_1
    get:
      description: Lists the statuses of the sub-accounts in your Merchant Center account.
      operationId: content.accountstatuses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountstatusesListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: destinations
          schema:
            type: string
      x-stackQL-resource: accountstatuses
      x-stackQL-verb: select
  /{merchantId}/freelistingsprogram/requestreview:
    parameters: *ref_1
    post:
      description: >-
        Requests a review of free listings in a specific region. This method is
        only available to selected merchants.
      operationId: content.freelistingsprogram.requestreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestReviewFreeListingsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: freelistingsprogram
      x-stackQL-verb: exec
  /{merchantId}/freelistingsprogram:
    parameters: *ref_1
    get:
      description: >-
        Retrieves the status and review eligibility for the free listing
        program. Returns errors and warnings if they require action to resolve,
        will become disapprovals, or impact impressions. Use `accountstatuses`
        to view all issues for an account.
      operationId: content.freelistingsprogram.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeListingsProgramStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: freelistingsprogram
      x-stackQL-verb: select
  /accounts/{accountId}/returncarrier:
    parameters: *ref_1
    post:
      description: Links return carrier to a merchant account.
      operationId: content.accounts.returncarrier.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountReturnCarrier'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountReturnCarrier'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: returncarrier
      x-stackQL-verb: insert
    get:
      description: Lists available return carriers in the merchant account.
      operationId: content.accounts.returncarrier.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountReturnCarrierResponse'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: returncarrier
      x-stackQL-verb: select
  /accounts/{accountId}/returncarrier/{carrierAccountId}:
    parameters: *ref_1
    delete:
      description: Delete a return carrier in the merchant account.
      operationId: content.accounts.returncarrier.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: carrierAccountId
          required: true
          schema:
            type: string
      x-stackQL-resource: returncarrier
      x-stackQL-verb: delete
    patch:
      description: Updates a return carrier in the merchant account.
      operationId: content.accounts.returncarrier.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountReturnCarrier'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountReturnCarrier'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: carrierAccountId
          required: true
          schema:
            type: string
      x-stackQL-resource: returncarrier
      x-stackQL-verb: exec
  /accounts/{accountId}/labels:
    parameters: *ref_1
    post:
      description: Creates a new label, not assigned to any account.
      operationId: content.accounts.labels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLabel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLabel'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: insert
    get:
      description: Lists the labels assigned to an account.
      operationId: content.accounts.labels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountLabelsResponse'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: select
  /accounts/{accountId}/labels/{labelId}:
    parameters: *ref_1
    patch:
      description: Updates a label.
      operationId: content.accounts.labels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLabel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLabel'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: labelId
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes a label and removes it from all accounts to which it was
        assigned.
      operationId: content.accounts.labels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: labelId
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: delete
  /accounts/{accountId}/credentials:
    parameters: *ref_1
    post:
      description: >-
        Uploads credentials for the Merchant Center account. If credentials
        already exist for this Merchant Center account and purpose, this method
        updates them.
      operationId: content.accounts.credentials.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCredentials'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCredentials'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: credentials
      x-stackQL-verb: insert
  /{merchantId}/accounts/{accountId}/link:
    parameters: *ref_1
    post:
      description: >-
        Performs an action on a link between two Merchant Center accounts,
        namely accountId and linkedAccountId.
      operationId: content.accounts.link
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountsLinkRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsLinkResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /{merchantId}/accounts/{accountId}:
    parameters: *ref_1
    get:
      description: Retrieves a Merchant Center account.
      operationId: content.accounts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: select
    delete:
      description: Deletes a Merchant Center sub-account.
      operationId: content.accounts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: accounts
      x-stackQL-verb: delete
    put:
      description: >-
        Updates a Merchant Center account. Any fields that are not provided are
        deleted from the resource.
      operationId: content.accounts.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /{merchantId}/accounts/{accountId}/requestphoneverification:
    parameters: *ref_1
    post:
      description: Request verification code to start phone verification.
      operationId: content.accounts.requestphoneverification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPhoneVerificationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPhoneVerificationResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /{merchantId}/accounts:
    parameters: *ref_1
    get:
      description: Lists the sub-accounts in your Merchant Center account.
      operationId: content.accounts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: label
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: select
    post:
      description: Creates a Merchant Center sub-account.
      operationId: content.accounts.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: insert
  /{merchantId}/accounts/{accountId}/verifyphonenumber:
    parameters: *ref_1
    post:
      description: >-
        Validates verification code to verify phone number for the account. If
        successful this will overwrite the value of
        `accounts.businessinformation.phoneNumber`. Only verified phone number
        will replace an existing verified phone number.
      operationId: content.accounts.verifyphonenumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPhoneNumberRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPhoneNumberResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /{merchantId}/accounts/{accountId}/updatelabels:
    parameters: *ref_1
    post:
      description: >-
        Updates labels that are assigned to the Merchant Center account by CSS
        user.
      operationId: content.accounts.updatelabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountsUpdateLabelsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsUpdateLabelsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /{merchantId}/accounts/{accountId}/listlinks:
    parameters: *ref_1
    get:
      description: Returns the list of accounts linked to your Merchant Center account.
      operationId: content.accounts.listlinks
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsListLinksResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: accounts_links
      x-stackQL-verb: select
  /accounts/batch:
    parameters: *ref_1
    post:
      description: >-
        Retrieves, inserts, updates, and deletes multiple Merchant Center
        (sub-)accounts in a single request.
      operationId: content.accounts.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountsCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsCustomBatchResponse'
      parameters: []
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /accounts/authinfo:
    parameters: *ref_1
    get:
      description: Returns information about the authenticated user.
      operationId: content.accounts.authinfo
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAuthInfoResponse'
      parameters: []
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /{merchantId}/accounts/{accountId}/claimwebsite:
    parameters: *ref_1
    post:
      description: >-
        Claims the website of a Merchant Center sub-account. Merchant accounts
        with approved third-party CSSs aren't required to claim a website.
      operationId: content.accounts.claimwebsite
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsClaimWebsiteResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: overwrite
          schema:
            type: boolean
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /{merchantId}/orderinvoices/{orderId}/createRefundInvoice:
    parameters: *ref_1
    post:
      description: >-
        Creates a refund invoice for one or more shipment groups, and triggers a
        refund for orderinvoice enabled orders. This can only be used for line
        items that have previously been charged using `createChargeInvoice`. All
        amounts (except for the summary) are incremental with respect to the
        previous invoice.
      operationId: content.orderinvoices.createrefundinvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderinvoicesCreateRefundInvoiceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderinvoicesCreateRefundInvoiceResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orderinvoices_refundinvoice
      x-stackQL-verb: insert
  /{merchantId}/orderinvoices/{orderId}/createChargeInvoice:
    parameters: *ref_1
    post:
      description: >-
        Creates a charge invoice for a shipment group, and triggers a charge
        capture for orderinvoice enabled orders.
      operationId: content.orderinvoices.createchargeinvoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderinvoicesCreateChargeInvoiceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderinvoicesCreateChargeInvoiceResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orderinvoices_chargeinvoice
      x-stackQL-verb: insert
  /{merchantId}/buyongoogleprograms/{regionCode}/pause:
    parameters: *ref_1
    post:
      description: >-
        Pauses the BoG program in your Merchant Center account. This method is
        only available to selected merchants.
      operationId: content.buyongoogleprograms.pause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseBuyOnGoogleProgramRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionCode
          required: true
          schema:
            type: string
      x-stackQL-resource: buyongoogleprograms
      x-stackQL-verb: exec
  /{merchantId}/buyongoogleprograms/{regionCode}/onboard:
    parameters: *ref_1
    post:
      description: >-
        Onboards the BoG program in your Merchant Center account. By using this
        method, you agree to the [Terms of
        Service](https://merchants.google.com/mc/termsofservice/transactions/US/latest).
        Calling this method is only possible if the authenticated account is the
        same as the merchant id in the request. Calling this method multiple
        times will only accept Terms of Service if the latest version is not
        currently signed.
      operationId: content.buyongoogleprograms.onboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardBuyOnGoogleProgramRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionCode
          required: true
          schema:
            type: string
      x-stackQL-resource: buyongoogleprograms
      x-stackQL-verb: exec
  /{merchantId}/buyongoogleprograms/{regionCode}/activate:
    parameters: *ref_1
    post:
      description: >-
        Reactivates the BoG program in your Merchant Center account. Moves the
        program to the active state when allowed, for example, when paused. This
        method is only available to selected merchants.
      operationId: content.buyongoogleprograms.activate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateBuyOnGoogleProgramRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionCode
          required: true
          schema:
            type: string
      x-stackQL-resource: buyongoogleprograms
      x-stackQL-verb: exec
  /{merchantId}/buyongoogleprograms/{regionCode}:
    parameters: *ref_1
    patch:
      description: Updates the status of the BoG program for your Merchant Center account.
      operationId: content.buyongoogleprograms.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyOnGoogleProgramStatus'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyOnGoogleProgramStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionCode
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: buyongoogleprograms
      x-stackQL-verb: exec
    get:
      description: Retrieves a status of the BoG program for your Merchant Center account.
      operationId: content.buyongoogleprograms.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyOnGoogleProgramStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionCode
          required: true
          schema:
            type: string
      x-stackQL-resource: buyongoogleprograms
      x-stackQL-verb: select
  /{merchantId}/buyongoogleprograms/{regionCode}/requestreview:
    parameters: *ref_1
    post:
      description: >-
        Requests review and then activates the BoG program in your Merchant
        Center account for the first time. Moves the program to the
        REVIEW_PENDING state. This method is only available to selected
        merchants.
      operationId: content.buyongoogleprograms.requestreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestReviewBuyOnGoogleProgramRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionCode
          required: true
          schema:
            type: string
      x-stackQL-resource: buyongoogleprograms
      x-stackQL-verb: exec
  /{merchantId}/accounttax/{accountId}:
    parameters: *ref_1
    get:
      description: Retrieves the tax settings of the account.
      operationId: content.accounttax.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTax'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounttax
      x-stackQL-verb: select
    put:
      description: >-
        Updates the tax settings of the account. Any fields that are not
        provided are deleted from the resource.
      operationId: content.accounttax.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountTax'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTax'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounttax
      x-stackQL-verb: exec
  /accounttax/batch:
    parameters: *ref_1
    post:
      description: >-
        Retrieves and updates tax settings of multiple accounts in a single
        request.
      operationId: content.accounttax.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccounttaxCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccounttaxCustomBatchResponse'
      parameters: []
      x-stackQL-resource: accounttax
      x-stackQL-verb: exec
  /{merchantId}/accounttax:
    parameters: *ref_1
    get:
      description: >-
        Lists the tax settings of the sub-accounts in your Merchant Center
        account.
      operationId: content.accounttax.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccounttaxListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: accounttax
      x-stackQL-verb: select
  /{cssGroupId}/csses/{cssDomainId}:
    parameters: *ref_1
    get:
      description: Retrieves a single CSS domain by ID.
      operationId: content.csses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Css'
      parameters:
        - in: path
          name: cssGroupId
          required: true
          schema:
            type: string
        - in: path
          name: cssDomainId
          required: true
          schema:
            type: string
      x-stackQL-resource: csses
      x-stackQL-verb: select
  /{cssGroupId}/csses/{cssDomainId}/updatelabels:
    parameters: *ref_1
    post:
      description: Updates labels that are assigned to a CSS domain by its CSS group.
      operationId: content.csses.updatelabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelIds'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Css'
      parameters:
        - in: path
          name: cssGroupId
          required: true
          schema:
            type: string
        - in: path
          name: cssDomainId
          required: true
          schema:
            type: string
      x-stackQL-resource: csses
      x-stackQL-verb: exec
  /{cssGroupId}/csses:
    parameters: *ref_1
    get:
      description: Lists CSS domains affiliated with a CSS group.
      operationId: content.csses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCssesResponse'
      parameters:
        - in: path
          name: cssGroupId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: csses
      x-stackQL-verb: select
  /{merchantId}/regions/{regionId}:
    parameters: *ref_1
    patch:
      description: Updates a region definition in your Merchant Center account.
      operationId: content.regions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: regions
      x-stackQL-verb: exec
    delete:
      description: Deletes a region definition from your Merchant Center account.
      operationId: content.regions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionId
          required: true
          schema:
            type: string
      x-stackQL-resource: regions
      x-stackQL-verb: delete
    get:
      description: Retrieves a region defined in your Merchant Center account.
      operationId: content.regions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: regionId
          required: true
          schema:
            type: string
      x-stackQL-resource: regions
      x-stackQL-verb: select
  /{merchantId}/regions:
    parameters: *ref_1
    post:
      description: Creates a region definition in your Merchant Center account.
      operationId: content.regions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: regionId
          schema:
            type: string
      x-stackQL-resource: regions
      x-stackQL-verb: insert
    get:
      description: Lists the regions in your Merchant Center account.
      operationId: content.regions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegionsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: regions
      x-stackQL-verb: select
  /{merchantId}/orderreports/disbursements:
    parameters: *ref_1
    get:
      description: Retrieves a report for disbursements from your Merchant Center account.
      operationId: content.orderreports.listdisbursements
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderreportsListDisbursementsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: disbursementEndDate
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: disbursementStartDate
          schema:
            type: string
      x-stackQL-resource: orderreports_disbursements
      x-stackQL-verb: select
  /{merchantId}/orderreports/disbursements/{disbursementId}/transactions:
    parameters: *ref_1
    get:
      description: >-
        Retrieves a list of transactions for a disbursement from your Merchant
        Center account.
      operationId: content.orderreports.listtransactions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderreportsListTransactionsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: disbursementId
          required: true
          schema:
            type: string
        - in: query
          name: transactionEndDate
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: transactionStartDate
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: orderreports_transactions
      x-stackQL-verb: select
  /{merchantId}/pubsubnotificationsettings:
    parameters: *ref_1
    put:
      description: >-
        Register a Merchant Center account for pubsub notifications. Note that
        cloud topic name shouldn't be provided as part of the request.
      operationId: content.pubsubnotificationsettings.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PubsubNotificationSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PubsubNotificationSettings'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: pubsubnotificationsettings
      x-stackQL-verb: exec
    get:
      description: Retrieves a Merchant Center account's pubsub notification settings.
      operationId: content.pubsubnotificationsettings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PubsubNotificationSettings'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: pubsubnotificationsettings
      x-stackQL-verb: select
  /{merchantId}/returnpolicyonline:
    parameters: *ref_1
    post:
      description: Creates a new return policy.
      operationId: content.returnpolicyonline.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnPolicyOnline'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicyOnline'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicyonline
      x-stackQL-verb: insert
    get:
      description: Lists all existing return policies.
      operationId: content.returnpolicyonline.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReturnPolicyOnlineResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicyonline
      x-stackQL-verb: select
  /{merchantId}/returnpolicyonline/{returnPolicyId}:
    parameters: *ref_1
    patch:
      description: Updates an existing return policy.
      operationId: content.returnpolicyonline.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnPolicyOnline'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicyOnline'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicyonline
      x-stackQL-verb: exec
    get:
      description: Gets an existing return policy.
      operationId: content.returnpolicyonline.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicyOnline'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicyonline
      x-stackQL-verb: select
    delete:
      description: Deletes an existing return policy.
      operationId: content.returnpolicyonline.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicyonline
      x-stackQL-verb: delete
  /{merchantId}/conversionsources/{conversionSourceId}:
    parameters: *ref_1
    delete:
      description: >-
        Archives an existing conversion source. It will be recoverable for 30
        days. This archiving behavior is not typical in the Content API and
        unique to this service.
      operationId: content.conversionsources.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: conversionSourceId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversionsources
      x-stackQL-verb: delete
    get:
      description: Fetches a conversion source.
      operationId: content.conversionsources.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionSource'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: conversionSourceId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversionsources
      x-stackQL-verb: select
    patch:
      description: Updates information of an existing conversion source.
      operationId: content.conversionsources.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionSource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionSource'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: conversionSourceId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: conversionsources
      x-stackQL-verb: exec
  /{merchantId}/conversionsources:
    parameters: *ref_1
    get:
      description: Retrieves the list of conversion sources the caller has access to.
      operationId: content.conversionsources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConversionSourcesResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: conversionsources
      x-stackQL-verb: select
    post:
      description: Creates a new conversion source.
      operationId: content.conversionsources.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionSource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionSource'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversionsources
      x-stackQL-verb: insert
  /{merchantId}/conversionsources/{conversionSourceId}:undelete:
    parameters: *ref_1
    post:
      description: Re-enables an archived conversion source.
      operationId: content.conversionsources.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteConversionSourceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: conversionSourceId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversionsources
      x-stackQL-verb: exec
  /{merchantId}/products/{productId}:
    parameters: *ref_1
    patch:
      description: >-
        Updates an existing product in your Merchant Center account. Only
        updates attributes provided in the request.
      operationId: content.products.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: exec
    get:
      description: Retrieves a product from your Merchant Center account.
      operationId: content.products.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: select
    delete:
      description: Deletes a product from your Merchant Center account.
      operationId: content.products.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
        - in: query
          name: feedId
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: delete
  /products/batch:
    parameters: *ref_1
    post:
      description: Retrieves, inserts, and deletes multiple products in a single request.
      operationId: content.products.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsCustomBatchResponse'
      parameters: []
      x-stackQL-resource: products
      x-stackQL-verb: exec
  /{merchantId}/products:
    parameters: *ref_1
    post:
      description: >-
        Uploads a product to your Merchant Center account. If an item with the
        same channel, contentLanguage, offerId, and targetCountry already
        exists, this method updates that entry.
      operationId: content.products.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: feedId
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: insert
    get:
      description: >-
        Lists the products in your Merchant Center account. The response might
        contain fewer items than specified by maxResults. Rely on nextPageToken
        to determine if there are more items to be requested.
      operationId: content.products.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: products
      x-stackQL-verb: select
  /{merchantId}/returnaddress/{returnAddressId}:
    parameters: *ref_1
    get:
      description: Gets a return address of the Merchant Center account.
      operationId: content.returnaddress.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnAddress'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnAddressId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnaddress
      x-stackQL-verb: select
    delete:
      description: Deletes a return address for the given Merchant Center account.
      operationId: content.returnaddress.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnAddressId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnaddress
      x-stackQL-verb: delete
  /{merchantId}/returnaddress:
    parameters: *ref_1
    get:
      description: Lists the return addresses of the Merchant Center account.
      operationId: content.returnaddress.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnaddressListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: returnaddress
      x-stackQL-verb: select
    post:
      description: Inserts a return address for the Merchant Center account.
      operationId: content.returnaddress.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnAddress'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnAddress'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnaddress
      x-stackQL-verb: insert
  /returnaddress/batch:
    parameters: *ref_1
    post:
      description: Batches multiple return address related calls in a single request.
      operationId: content.returnaddress.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnaddressCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnaddressCustomBatchResponse'
      parameters: []
      x-stackQL-resource: returnaddress
      x-stackQL-verb: exec
  /{merchantId}/promotions:
    parameters: *ref_1
    post:
      description: >-
        Inserts a promotion for your Merchant Center account. If the promotion
        already exists, then it updates the promotion instead. To [end or
        delete]
        (https://developers.google.com/shopping-content/guides/promotions#end_a_promotion)
        a promotion update the time period of the promotion to a time that has
        already passed.
      operationId: content.promotions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Promotion'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: promotions
      x-stackQL-verb: insert
    get:
      description: List all promotions from your Merchant Center account.
      operationId: content.promotions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPromotionResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: countryCode
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: promotions
      x-stackQL-verb: select
  /{merchantId}/promotions/{id}:
    parameters: *ref_1
    get:
      description: Retrieves a promotion from your Merchant Center account.
      operationId: content.promotions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: promotions
      x-stackQL-verb: select
  /{merchantId}/products/{productId}/localinventory:
    parameters: *ref_1
    post:
      description: >-
        Updates the local inventory of a product in your Merchant Center
        account.
      operationId: content.localinventory.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalInventory'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalInventory'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
      x-stackQL-resource: localinventory
      x-stackQL-verb: insert
  /localinventory/batch:
    parameters: *ref_1
    post:
      description: >-
        Updates local inventory for multiple products or stores in a single
        request.
      operationId: content.localinventory.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocalinventoryCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalinventoryCustomBatchResponse'
      parameters: []
      x-stackQL-resource: localinventory
      x-stackQL-verb: exec
  /{merchantId}/liasettings:
    parameters: *ref_1
    get:
      description: >-
        Lists the LIA settings of the sub-accounts in your Merchant Center
        account.
      operationId: content.liasettings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiasettingsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: liasettings
      x-stackQL-verb: select
  /liasettings/posdataproviders:
    parameters: *ref_1
    get:
      description: >-
        Retrieves the list of POS data providers that have active settings for
        the all eiligible countries.
      operationId: content.liasettings.listposdataproviders
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiasettingsListPosDataProvidersResponse'
      parameters: []
      x-stackQL-resource: liasettings_posdataproviders
      x-stackQL-verb: select
  /{merchantId}/liasettings/{accountId}/requestgmbaccess:
    parameters: *ref_1
    post:
      description: Requests access to a specified Business Profile.
      operationId: content.liasettings.requestgmbaccess
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiasettingsRequestGmbAccessResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: gmbEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: liasettings
      x-stackQL-verb: exec
  /{merchantId}/liasettings/{accountId}:
    parameters: *ref_1
    get:
      description: Retrieves the LIA settings of the account.
      operationId: content.liasettings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiaSettings'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: liasettings
      x-stackQL-verb: select
    put:
      description: >-
        Updates the LIA settings of the account. Any fields that are not
        provided are deleted from the resource.
      operationId: content.liasettings.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiaSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiaSettings'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: liasettings
      x-stackQL-verb: exec
  /{merchantId}/liasettings/{accountId}/setinventoryverificationcontact:
    parameters: *ref_1
    post:
      description: Sets the inventory verification contract for the specified country.
      operationId: content.liasettings.setinventoryverificationcontact
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LiasettingsSetInventoryVerificationContactResponse
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: country
          required: true
          schema:
            type: string
        - in: query
          name: language
          required: true
          schema:
            type: string
        - in: query
          name: contactName
          required: true
          schema:
            type: string
        - in: query
          name: contactEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: liasettings
      x-stackQL-verb: exec
  /{merchantId}/liasettings/{accountId}/accessiblegmbaccounts:
    parameters: *ref_1
    get:
      description: Retrieves the list of accessible Business Profiles.
      operationId: content.liasettings.getaccessiblegmbaccounts
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LiasettingsGetAccessibleGmbAccountsResponse
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: liasettings_accessiblegmbaccounts
      x-stackQL-verb: select
  /liasettings/batch:
    parameters: *ref_1
    post:
      description: >-
        Retrieves and/or updates the LIA settings of multiple accounts in a
        single request.
      operationId: content.liasettings.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiasettingsCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiasettingsCustomBatchResponse'
      parameters: []
      x-stackQL-resource: liasettings
      x-stackQL-verb: exec
  /{merchantId}/liasettings/{accountId}/setposdataprovider:
    parameters: *ref_1
    post:
      description: Sets the POS data provider for the specified country.
      operationId: content.liasettings.setposdataprovider
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiasettingsSetPosDataProviderResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: country
          required: true
          schema:
            type: string
        - in: query
          name: posExternalAccountId
          schema:
            type: string
        - in: query
          name: posDataProviderId
          schema:
            type: string
      x-stackQL-resource: liasettings
      x-stackQL-verb: exec
  /{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}:
    parameters: *ref_1
    post:
      description: Requests inventory validation for the specified country.
      operationId: content.liasettings.requestinventoryverification
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LiasettingsRequestInventoryVerificationResponse
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: country
          required: true
          schema:
            type: string
      x-stackQL-resource: liasettings
      x-stackQL-verb: exec
  /{merchantId}/settlementreports:
    parameters: *ref_1
    get:
      description: >-
        Retrieves a list of settlement reports from your Merchant Center
        account.
      operationId: content.settlementreports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettlementreportsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: transferStartDate
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: transferEndDate
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: settlementreports
      x-stackQL-verb: select
  /{merchantId}/settlementreports/{settlementId}:
    parameters: *ref_1
    get:
      description: Retrieves a settlement report from your Merchant Center account.
      operationId: content.settlementreports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettlementReport'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: settlementId
          required: true
          schema:
            type: string
      x-stackQL-resource: settlementreports
      x-stackQL-verb: select
  /{merchantId}/orderreturns/{returnId}/acknowledge:
    parameters: *ref_1
    post:
      description: Acks an order return in your Merchant Center account.
      operationId: content.orderreturns.acknowledge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderreturnsAcknowledgeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderreturnsAcknowledgeResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnId
          required: true
          schema:
            type: string
      x-stackQL-resource: orderreturns
      x-stackQL-verb: exec
  /{merchantId}/orderreturns/{returnId}:
    parameters: *ref_1
    get:
      description: Retrieves an order return from your Merchant Center account.
      operationId: content.orderreturns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantOrderReturn'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnId
          required: true
          schema:
            type: string
      x-stackQL-resource: orderreturns
      x-stackQL-verb: select
  /{merchantId}/orderreturns:
    parameters: *ref_1
    get:
      description: Lists order returns in your Merchant Center account.
      operationId: content.orderreturns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderreturnsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: shipmentStatus
          schema:
            type: string
        - in: query
          name: shipmentStates
          schema:
            type: string
        - in: query
          name: acknowledged
          schema:
            type: boolean
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: googleOrderIds
          schema:
            type: string
        - in: query
          name: createdStartDate
          schema:
            type: string
        - in: query
          name: createdEndDate
          schema:
            type: string
        - in: query
          name: shipmentTrackingNumbers
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: shipmentTypes
          schema:
            type: string
      x-stackQL-resource: orderreturns
      x-stackQL-verb: select
  /{merchantId}/orderreturns/{returnId}/process:
    parameters: *ref_1
    post:
      description: Processes return in your Merchant Center account.
      operationId: content.orderreturns.process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderreturnsProcessRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderreturnsProcessResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnId
          required: true
          schema:
            type: string
      x-stackQL-resource: orderreturns
      x-stackQL-verb: exec
  /{merchantId}/orderreturns/createOrderReturn:
    parameters: *ref_1
    post:
      description: Create return in your Merchant Center account.
      operationId: content.orderreturns.createorderreturn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderreturnsCreateOrderReturnRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderreturnsCreateOrderReturnResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: orderreturns_orderreturn
      x-stackQL-verb: insert
  /{merchantId}/orderreturns/{returnId}/labels:
    parameters: *ref_1
    post:
      description: >-
        Links a return shipping label to a return id. You can only create one
        return label per return id. Since the label is sent to the buyer, the
        linked return label cannot be updated or deleted. If you try to create
        multiple return shipping labels for a single return id, every create
        request except the first will fail.
      operationId: content.orderreturns.labels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnShippingLabel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnShippingLabel'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnId
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: insert
  /{merchantId}/productdeliverytime/{productId}:
    parameters: *ref_1
    get:
      description: Gets `productDeliveryTime` by `productId`.
      operationId: content.productdeliverytime.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDeliveryTime'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
      x-stackQL-resource: productdeliverytime
      x-stackQL-verb: select
    delete:
      description: Deletes the delivery time of a product.
      operationId: content.productdeliverytime.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
      x-stackQL-resource: productdeliverytime
      x-stackQL-verb: delete
  /{merchantId}/productdeliverytime:
    parameters: *ref_1
    post:
      description: Creates or updates the delivery time of a product.
      operationId: content.productdeliverytime.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDeliveryTime'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDeliveryTime'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: productdeliverytime
      x-stackQL-verb: insert
  /{merchantId}/recommendations/generate:
    parameters: *ref_1
    get:
      description: Generates recommendations for a merchant.
      operationId: content.recommendations.generate
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateRecommendationsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: allowedTag
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-verb: exec
  /{merchantId}/recommendations/reportInteraction:
    parameters: *ref_1
    post:
      description: Reports an interaction on a recommendation for a merchant.
      operationId: content.recommendations.reportInteraction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportInteractionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: recommendations
      x-stackQL-verb: exec
  /{merchantId}/settlementreports/{settlementId}/transactions:
    parameters: *ref_1
    get:
      description: Retrieves a list of transactions for the settlement.
      operationId: content.settlementtransactions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettlementtransactionsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: settlementId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: transactionIds
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: settlementtransactions
      x-stackQL-verb: select
  /{merchantId}/collections/{collectionId}:
    parameters: *ref_1
    delete:
      description: Deletes a collection from your Merchant Center account.
      operationId: content.collections.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: collectionId
          required: true
          schema:
            type: string
      x-stackQL-resource: collections
      x-stackQL-verb: delete
    get:
      description: Retrieves a collection from your Merchant Center account.
      operationId: content.collections.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: collectionId
          required: true
          schema:
            type: string
      x-stackQL-resource: collections
      x-stackQL-verb: select
  /{merchantId}/collections:
    parameters: *ref_1
    get:
      description: >-
        Lists the collections in your Merchant Center account. The response
        might contain fewer items than specified by page_size. Rely on
        next_page_token to determine if there are more items to be requested.
      operationId: content.collections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCollectionsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: collections
      x-stackQL-verb: select
    post:
      description: >-
        Uploads a collection to your Merchant Center account. If a collection
        with the same collectionId already exists, this method updates that
        entry. In each update, the collection is completely replaced by the
        fields in the body of the update request.
      operationId: content.collections.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: collections
      x-stackQL-verb: insert
  /{merchantId}/datafeeds/{datafeedId}/fetchNow:
    parameters: *ref_1
    post:
      description: >-
        Invokes a fetch for the datafeed in your Merchant Center account. If you
        need to call this method more than once per day, we recommend you use
        the [Products
        service](https://developers.google.com/shopping-content/reference/rest/v2.1/products)
        to update your product data.
      operationId: content.datafeeds.fetchnow
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatafeedsFetchNowResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
      x-stackQL-resource: datafeeds_now
      x-stackQL-verb: select
  /{merchantId}/datafeeds/{datafeedId}:
    parameters: *ref_1
    get:
      description: Retrieves a datafeed configuration from your Merchant Center account.
      operationId: content.datafeeds.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datafeed'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
      x-stackQL-resource: datafeeds
      x-stackQL-verb: select
    delete:
      description: Deletes a datafeed configuration from your Merchant Center account.
      operationId: content.datafeeds.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
      x-stackQL-resource: datafeeds
      x-stackQL-verb: delete
    put:
      description: >-
        Updates a datafeed configuration of your Merchant Center account. Any
        fields that are not provided are deleted from the resource.
      operationId: content.datafeeds.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datafeed'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datafeed'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
      x-stackQL-resource: datafeeds
      x-stackQL-verb: exec
  /{merchantId}/datafeeds:
    parameters: *ref_1
    post:
      description: Registers a datafeed configuration with your Merchant Center account.
      operationId: content.datafeeds.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datafeed'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datafeed'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: datafeeds
      x-stackQL-verb: insert
    get:
      description: Lists the configurations for datafeeds in your Merchant Center account.
      operationId: content.datafeeds.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatafeedsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: datafeeds
      x-stackQL-verb: select
  /datafeeds/batch:
    parameters: *ref_1
    post:
      description: >-
        Deletes, fetches, gets, inserts and updates multiple datafeeds in a
        single request.
      operationId: content.datafeeds.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatafeedsCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatafeedsCustomBatchResponse'
      parameters: []
      x-stackQL-resource: datafeeds
      x-stackQL-verb: exec
  /shippingsettings/batch:
    parameters: *ref_1
    post:
      description: >-
        Retrieves and updates the shipping settings of multiple accounts in a
        single request.
      operationId: content.shippingsettings.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingsettingsCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingsettingsCustomBatchResponse'
      parameters: []
      x-stackQL-resource: shippingsettings
      x-stackQL-verb: exec
  /{merchantId}/supportedHolidays:
    parameters: *ref_1
    get:
      description: Retrieves supported holidays for an account.
      operationId: content.shippingsettings.getsupportedholidays
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ShippingsettingsGetSupportedHolidaysResponse
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: shippingsettings_supportedholidays
      x-stackQL-verb: select
  /{merchantId}/shippingsettings/{accountId}:
    parameters: *ref_1
    get:
      description: Retrieves the shipping settings of the account.
      operationId: content.shippingsettings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingSettings'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: shippingsettings
      x-stackQL-verb: select
    put:
      description: >-
        Updates the shipping settings of the account. Any fields that are not
        provided are deleted from the resource.
      operationId: content.shippingsettings.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingSettings'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: shippingsettings
      x-stackQL-verb: exec
  /{merchantId}/shippingsettings:
    parameters: *ref_1
    get:
      description: >-
        Lists the shipping settings of the sub-accounts in your Merchant Center
        account.
      operationId: content.shippingsettings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingsettingsListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: shippingsettings
      x-stackQL-verb: select
  /{merchantId}/supportedCarriers:
    parameters: *ref_1
    get:
      description: Retrieves supported carriers and carrier services for an account.
      operationId: content.shippingsettings.getsupportedcarriers
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ShippingsettingsGetSupportedCarriersResponse
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: shippingsettings_supportedcarriers
      x-stackQL-verb: select
  /{merchantId}/supportedPickupServices:
    parameters: *ref_1
    get:
      description: Retrieves supported pickup services for an account.
      operationId: content.shippingsettings.getsupportedpickupservices
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ShippingsettingsGetSupportedPickupServicesResponse
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: shippingsettings_supportedpickupservices
      x-stackQL-verb: select
  /{merchantId}/ordertrackingsignals:
    parameters: *ref_1
    post:
      description: Creates new order tracking signal.
      operationId: content.ordertrackingsignals.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTrackingSignal'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTrackingSignal'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: ordertrackingsignals
      x-stackQL-verb: insert
  /productstatuses/batch:
    parameters: *ref_1
    post:
      description: Gets the statuses of multiple products in a single request.
      operationId: content.productstatuses.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductstatusesCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductstatusesCustomBatchResponse'
      parameters: []
      x-stackQL-resource: productstatuses
      x-stackQL-verb: exec
  /{merchantId}/productstatuses:
    parameters: *ref_1
    get:
      description: Lists the statuses of the products in your Merchant Center account.
      operationId: content.productstatuses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductstatusesListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: destinations
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: productstatuses
      x-stackQL-verb: select
  /{merchantId}/productstatuses/{productId}:
    parameters: *ref_1
    get:
      description: Gets the status of a product from your Merchant Center account.
      operationId: content.productstatuses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
        - in: query
          name: destinations
          schema:
            type: string
      x-stackQL-resource: productstatuses
      x-stackQL-verb: select
  /{merchantId}/productstatuses/{productId}/repricingreports:
    parameters: *ref_1
    get:
      description: Lists the metrics report for a given Repricing product.
      operationId: content.productstatuses.repricingreports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepricingProductReportsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
        - in: query
          name: ruleId
          schema:
            type: string
        - in: query
          name: endDate
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: startDate
          schema:
            type: string
      x-stackQL-resource: repricingreports
      x-stackQL-verb: select
  /{merchantId}/repricingrules/{ruleId}:
    parameters: *ref_1
    delete:
      description: Deletes a repricing rule in your Merchant Center account.
      operationId: content.repricingrules.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: ruleId
          required: true
          schema:
            type: string
      x-stackQL-resource: repricingrules
      x-stackQL-verb: delete
    get:
      description: Retrieves a repricing rule from your Merchant Center account.
      operationId: content.repricingrules.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepricingRule'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: ruleId
          required: true
          schema:
            type: string
      x-stackQL-resource: repricingrules
      x-stackQL-verb: select
    patch:
      description: >-
        Updates a repricing rule in your Merchant Center account. All mutable
        fields will be overwritten in each update request. In each update, you
        must provide all required mutable fields, or an error will be thrown. If
        you do not provide an optional field in the update request, if that
        field currently exists, it will be deleted from the rule.
      operationId: content.repricingrules.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepricingRule'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepricingRule'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: ruleId
          required: true
          schema:
            type: string
      x-stackQL-resource: repricingrules
      x-stackQL-verb: exec
  /{merchantId}/repricingrules:
    parameters: *ref_1
    post:
      description: Creates a repricing rule for your Merchant Center account.
      operationId: content.repricingrules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepricingRule'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepricingRule'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: ruleId
          schema:
            type: string
      x-stackQL-resource: repricingrules
      x-stackQL-verb: insert
    get:
      description: Lists the repricing rules in your Merchant Center account.
      operationId: content.repricingrules.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepricingRulesResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: countryCode
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: repricingrules
      x-stackQL-verb: select
  /{merchantId}/repricingrules/{ruleId}/repricingreports:
    parameters: *ref_1
    get:
      description: Lists the metrics report for a given Repricing rule.
      operationId: content.repricingrules.repricingreports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepricingRuleReportsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: ruleId
          required: true
          schema:
            type: string
        - in: query
          name: endDate
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: startDate
          schema:
            type: string
      x-stackQL-resource: repricingreports
      x-stackQL-verb: select
  /{merchantId}/orders/{orderId}/testreturn:
    parameters: *ref_1
    post:
      description: Sandbox only. Creates a test return.
      operationId: content.orders.createtestreturn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCreateTestReturnRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCreateTestReturnResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders_testreturn
      x-stackQL-verb: insert
  /{merchantId}/orders/{orderId}/rejectReturnLineItem:
    parameters: *ref_1
    post:
      description: Rejects return on an line item.
      operationId: content.orders.rejectreturnlineitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersRejectReturnLineItemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersRejectReturnLineItemResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/captureOrder:
    parameters: *ref_1
    post:
      description: >-
        Capture funds from the customer for the current order total. This method
        should be called after the merchant verifies that they are able and
        ready to start shipping the order. This method blocks until a response
        is received from the payment processsor. If this method succeeds, the
        merchant is guaranteed to receive funds for the order after shipment. If
        the request fails, it can be retried or the order may be cancelled. This
        method cannot be called after the entire order is already shipped. A
        rejected error code is returned when the payment service provider has
        declined the charge. This indicates a problem between the PSP and either
        the merchant's or customer's account. Sometimes this error will be
        resolved by the customer. We recommend retrying these errors once per
        day or cancelling the order with reason `failedToCaptureFunds` if the
        items cannot be held.
      operationId: content.orders.captureOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaptureOrderRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptureOrderResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/returnRefundLineItem:
    parameters: *ref_1
    post:
      description: >-
        Returns and refunds a line item. Note that this method can only be
        called on fully shipped orders. The Orderreturns API is the preferred
        way to handle returns after you receive a return from a customer. You
        can use Orderreturns.list or Orderreturns.get to search for the return,
        and then use Orderreturns.processreturn to issue the refund. If the
        return cannot be found, then we recommend using this API to issue a
        refund.
      operationId: content.orders.returnrefundlineitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersReturnRefundLineItemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersReturnRefundLineItemResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders:
    parameters: *ref_1
    get:
      description: Lists the orders in your Merchant Center account.
      operationId: content.orders.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: acknowledged
          schema:
            type: boolean
        - in: query
          name: placedDateStart
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: placedDateEnd
          schema:
            type: string
        - in: query
          name: statuses
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: select
  /{merchantId}/orders/{orderId}/updateLineItemShippingDetails:
    parameters: *ref_1
    post:
      description: Updates ship by and delivery by dates for a line item.
      operationId: content.orders.updatelineitemshippingdetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersUpdateLineItemShippingDetailsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrdersUpdateLineItemShippingDetailsResponse
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/updateShipment:
    parameters: *ref_1
    post:
      description: Updates a shipment's status, carrier, and/or tracking ID.
      operationId: content.orders.updateshipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersUpdateShipmentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersUpdateShipmentResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/shipLineItems:
    parameters: *ref_1
    post:
      description: Marks line item(s) as shipped.
      operationId: content.orders.shiplineitems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersShipLineItemsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersShipLineItemsResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/testorders/{orderId}/advance:
    parameters: *ref_1
    post:
      description: >-
        Sandbox only. Moves a test order from state "`inProgress`" to state
        "`pendingShipment`".
      operationId: content.orders.advancetestorder
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersAdvanceTestOrderResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/refunditem:
    parameters: *ref_1
    post:
      description: Issues a partial or total refund for items and shipment.
      operationId: content.orders.refunditem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersRefundItemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersRefundItemResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}:
    parameters: *ref_1
    get:
      description: Retrieves an order from your Merchant Center account.
      operationId: content.orders.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: select
  /{merchantId}/ordersbymerchantid/{merchantOrderId}:
    parameters: *ref_1
    get:
      description: Retrieves an order using merchant order ID.
      operationId: content.orders.getbymerchantorderid
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetByMerchantOrderIdResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: merchantOrderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders_bymerchantorderid
      x-stackQL-verb: select
  /{merchantId}/testorders/{orderId}/cancelByCustomer:
    parameters: *ref_1
    post:
      description: Sandbox only. Cancels a test order for customer-initiated cancellation.
      operationId: content.orders.canceltestorderbycustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCancelTestOrderByCustomerRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCancelTestOrderByCustomerResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/testorders:
    parameters: *ref_1
    post:
      description: Sandbox only. Creates a test order.
      operationId: content.orders.createtestorder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCreateTestOrderRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCreateTestOrderResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders_testorder
      x-stackQL-verb: insert
  /{merchantId}/testordertemplates/{templateName}:
    parameters: *ref_1
    get:
      description: >-
        Sandbox only. Retrieves an order template that can be used to quickly
        create a new order in sandbox.
      operationId: content.orders.gettestordertemplate
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetTestOrderTemplateResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: templateName
          required: true
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
      x-stackQL-resource: orders_testordertemplate
      x-stackQL-verb: select
  /{merchantId}/orders/{orderId}/acknowledge:
    parameters: *ref_1
    post:
      description: Marks an order as acknowledged.
      operationId: content.orders.acknowledge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersAcknowledgeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersAcknowledgeResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/inStoreRefundLineItem:
    parameters: *ref_1
    post:
      description: >-
        Deprecated. Notifies that item return and refund was handled directly by
        merchant outside of Google payments processing (for example, cash refund
        done in store). Note: We recommend calling the returnrefundlineitem
        method to refund in-store returns. We will issue the refund directly to
        the customer. This helps to prevent possible differences arising between
        merchant and Google transaction records. We also recommend having the
        point of sale system communicate with Google to ensure that customers do
        not receive a double refund by first refunding through Google then
        through an in-store return.
      operationId: content.orders.instorerefundlineitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersInStoreRefundLineItemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersInStoreRefundLineItemResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/updateMerchantOrderId:
    parameters: *ref_1
    post:
      description: Updates the merchant order ID for a given order.
      operationId: content.orders.updatemerchantorderid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersUpdateMerchantOrderIdRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersUpdateMerchantOrderIdResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/refundorder:
    parameters: *ref_1
    post:
      description: Issues a partial or total refund for an order.
      operationId: content.orders.refundorder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersRefundOrderRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersRefundOrderResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/cancelLineItem:
    parameters: *ref_1
    post:
      description: Cancels a line item, making a full refund.
      operationId: content.orders.cancellineitem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCancelLineItemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCancelLineItemResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/setLineItemMetadata:
    parameters: *ref_1
    post:
      description: >-
        Sets (or overrides if it already exists) merchant provided annotations
        in the form of key-value pairs. A common use case would be to supply us
        with additional structured information about a line item that cannot be
        provided through other methods. Submitted key-value pairs can be
        retrieved as part of the orders resource.
      operationId: content.orders.setlineitemmetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersSetLineItemMetadataRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersSetLineItemMetadataResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/orders/{orderId}/cancel:
    parameters: *ref_1
    post:
      description: Cancels all line items in an order, making a full refund.
      operationId: content.orders.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCancelRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersCancelResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: exec
  /{merchantId}/shoppingadsprogram/requestreview:
    parameters: *ref_1
    post:
      description: >-
        Requests a review of Shopping ads in a specific region. This method is
        only available to selected merchants.
      operationId: content.shoppingadsprogram.requestreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestReviewShoppingAdsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: shoppingadsprogram
      x-stackQL-verb: exec
  /{merchantId}/shoppingadsprogram:
    parameters: *ref_1
    get:
      description: >-
        Retrieves the status and review eligibility for the Shopping Ads
        program. Returns errors and warnings if they require action to resolve,
        will become disapprovals, or impact impressions. Use `accountstatuses`
        to view all issues for an account.
      operationId: content.shoppingadsprogram.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingAdsProgramStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: shoppingadsprogram
      x-stackQL-verb: select
  /datafeedstatuses/batch:
    parameters: *ref_1
    post:
      description: Gets multiple Merchant Center datafeed statuses in a single request.
      operationId: content.datafeedstatuses.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatafeedstatusesCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatafeedstatusesCustomBatchResponse'
      parameters: []
      x-stackQL-resource: datafeedstatuses
      x-stackQL-verb: exec
  /{merchantId}/datafeedstatuses/{datafeedId}:
    parameters: *ref_1
    get:
      description: Retrieves the status of a datafeed from your Merchant Center account.
      operationId: content.datafeedstatuses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatafeedStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: feedLabel
          schema:
            type: string
        - in: query
          name: language
          schema:
            type: string
      x-stackQL-resource: datafeedstatuses
      x-stackQL-verb: select
  /{merchantId}/datafeedstatuses:
    parameters: *ref_1
    get:
      description: Lists the statuses of the datafeeds in your Merchant Center account.
      operationId: content.datafeedstatuses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatafeedstatusesListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: datafeedstatuses
      x-stackQL-verb: select
  /{merchantId}/returnpolicy/{returnPolicyId}:
    parameters: *ref_1
    get:
      description: Gets a return policy of the Merchant Center account.
      operationId: content.returnpolicy.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicy'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicy
      x-stackQL-verb: select
    delete:
      description: Deletes a return policy for the given Merchant Center account.
      operationId: content.returnpolicy.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicy
      x-stackQL-verb: delete
  /returnpolicy/batch:
    parameters: *ref_1
    post:
      description: Batches multiple return policy related calls in a single request.
      operationId: content.returnpolicy.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnpolicyCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnpolicyCustomBatchResponse'
      parameters: []
      x-stackQL-resource: returnpolicy
      x-stackQL-verb: exec
  /{merchantId}/returnpolicy:
    parameters: *ref_1
    get:
      description: Lists the return policies of the Merchant Center account.
      operationId: content.returnpolicy.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnpolicyListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicy
      x-stackQL-verb: select
    post:
      description: Inserts a return policy for the Merchant Center account.
      operationId: content.returnpolicy.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPolicy'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: returnpolicy
      x-stackQL-verb: insert
  /{merchantId}/collectionstatuses/{collectionId}:
    parameters: *ref_1
    get:
      description: Gets the status of a collection from your Merchant Center account.
      operationId: content.collectionstatuses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionStatus'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: collectionId
          required: true
          schema:
            type: string
      x-stackQL-resource: collectionstatuses
      x-stackQL-verb: select
  /{merchantId}/collectionstatuses:
    parameters: *ref_1
    get:
      description: Lists the statuses of the collections in your Merchant Center account.
      operationId: content.collectionstatuses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCollectionStatusesResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: collectionstatuses
      x-stackQL-verb: select
  /{merchantId}/products/{productId}/regionalinventory:
    parameters: *ref_1
    post:
      description: >-
        Updates the regional inventory of a product in your Merchant Center
        account. If a regional inventory with the same region ID already exists,
        this method updates that entry.
      operationId: content.regionalinventory.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionalInventory'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionalInventory'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
      x-stackQL-resource: regionalinventory
      x-stackQL-verb: insert
  /regionalinventory/batch:
    parameters: *ref_1
    post:
      description: >-
        Updates regional inventory for multiple products or regions in a single
        request.
      operationId: content.regionalinventory.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionalinventoryCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionalinventoryCustomBatchResponse'
      parameters: []
      x-stackQL-resource: regionalinventory
      x-stackQL-verb: exec
  /{merchantId}/pos/{targetMerchantId}/inventory:
    parameters: *ref_1
    post:
      description: Submit inventory for the given merchant.
      operationId: content.pos.inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PosInventoryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosInventoryResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: pos
      x-stackQL-verb: exec
  /{merchantId}/pos/{targetMerchantId}/store/{storeCode}:
    parameters: *ref_1
    delete:
      description: Deletes a store for the given merchant.
      operationId: content.pos.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
        - in: path
          name: storeCode
          required: true
          schema:
            type: string
      x-stackQL-resource: pos
      x-stackQL-verb: delete
    get:
      description: Retrieves information about the given store.
      operationId: content.pos.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosStore'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
        - in: path
          name: storeCode
          required: true
          schema:
            type: string
      x-stackQL-resource: pos
      x-stackQL-verb: select
  /{merchantId}/pos/{targetMerchantId}/sale:
    parameters: *ref_1
    post:
      description: Submit a sale event for the given merchant.
      operationId: content.pos.sale
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PosSaleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosSaleResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: pos
      x-stackQL-verb: exec
  /{merchantId}/pos/{targetMerchantId}/store:
    parameters: *ref_1
    get:
      description: Lists the stores of the target merchant.
      operationId: content.pos.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosListResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: pos
      x-stackQL-verb: select
    post:
      description: Creates a store for the given merchant.
      operationId: content.pos.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PosStore'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosStore'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      x-stackQL-resource: pos
      x-stackQL-verb: insert
  /pos/batch:
    parameters: *ref_1
    post:
      description: Batches multiple POS-related calls in a single request.
      operationId: content.pos.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PosCustomBatchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosCustomBatchResponse'
      parameters: []
      x-stackQL-resource: pos
      x-stackQL-verb: exec
  /{merchantId}/quotas:
    parameters: *ref_1
    get:
      description: >-
        Lists the daily call quota and usage per method for your Merchant Center
        account.
      operationId: content.quotas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMethodQuotasResponse'
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: quotas
      x-stackQL-verb: select
