openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Books API
  description: The Google Books API allows clients to access the Google Books repository.
  version: v1
  x-discovery-doc-revision: '20230620'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://code.google.com/apis/books/docs/v1/getting_started.html
servers:
  - url: https://books.googleapis.com
components:
  schemas:
    Offers:
      id: Offers
      properties:
        items:
          description: A list of offers.
          type: array
          items:
            properties:
              id:
                type: string
              artUrl:
                type: string
              items:
                items:
                  type: object
                  properties:
                    title:
                      type: string
                    volumeId:
                      type: string
                    coverUrl:
                      type: string
                    description:
                      type: string
                    canonicalVolumeLink:
                      type: string
                    author:
                      type: string
                type: array
              gservicesKey:
                type: string
            type: object
        kind:
          description: Resource type.
          type: string
      type: object
    Annotations:
      type: object
      properties:
        totalItems:
          format: int32
          description: >-
            Total number of annotations found. This may be greater than the
            number of notes returned in this response if results have been
            paginated.
          type: integer
        nextPageToken:
          description: >-
            Token to pass in for pagination for the next page. This will not be
            present if this request does not have more results.
          type: string
        kind:
          type: string
          description: Resource type.
        items:
          items:
            $ref: '#/components/schemas/Annotation'
          description: A list of annotations.
          type: array
      id: Annotations
    Volume:
      id: Volume
      properties:
        searchInfo:
          properties:
            textSnippet:
              description: A text snippet containing the search query.
              type: string
          type: object
          description: Search result information related to this volume.
        saleInfo:
          type: object
          properties:
            offers:
              description: Offers available for this volume (sales and rentals).
              items:
                type: object
                properties:
                  retailPrice:
                    type: object
                    properties:
                      amountInMicros:
                        type: number
                        format: double
                      currencyCode:
                        type: string
                    description: Offer retail (=discounted) price in Micros
                  rentalDuration:
                    type: object
                    properties:
                      unit:
                        type: string
                      count:
                        format: double
                        type: number
                    description: The rental duration (for rental offers only).
                  finskyOfferType:
                    type: integer
                    format: int32
                    description: The finsky offer type (e.g., PURCHASE=0 RENTAL=3)
                  giftable:
                    type: boolean
                    description: Indicates whether the offer is giftable.
                  listPrice:
                    properties:
                      currencyCode:
                        type: string
                      amountInMicros:
                        format: double
                        type: number
                    type: object
                    description: Offer list (=undiscounted) price in Micros.
              type: array
            isEbook:
              type: boolean
              description: >-
                Whether or not this volume is an eBook (can be added to the My
                eBooks shelf).
            listPrice:
              properties:
                currencyCode:
                  description: >-
                    An ISO 4217, three-letter currency code. (In LITE
                    projection.)
                  type: string
                amount:
                  description: Amount in the currency listed below. (In LITE projection.)
                  format: double
                  type: number
              type: object
              description: Suggested retail price. (In LITE projection.)
            retailPrice:
              type: object
              properties:
                amount:
                  type: number
                  description: Amount in the currency listed below. (In LITE projection.)
                  format: double
                currencyCode:
                  type: string
                  description: >-
                    An ISO 4217, three-letter currency code. (In LITE
                    projection.)
              description: >-
                The actual selling price of the book. This is the same as the
                suggested retail or list price unless there are offers or
                discounts on this volume. (In LITE projection.)
            buyLink:
              description: >-
                URL to purchase this volume on the Google Books site. (In LITE
                projection)
              type: string
            country:
              type: string
              description: >-
                The two-letter ISO_3166-1 country code for which this sale
                information is valid. (In LITE projection.)
            onSaleDate:
              type: string
              description: The date on which this book is available for sale.
            saleability:
              type: string
              description: >-
                Whether or not this book is available for sale or offered for
                free in the Google eBookstore for the country listed above.
                Possible values are FOR_SALE, FOR_RENTAL_ONLY,
                FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER.
          description: >-
            Any information about a volume related to the eBookstore and/or
            purchaseability. This information can depend on the country where
            the request originates from (i.e. books may not be for sale in
            certain countries).
        id:
          type: string
          description: Unique identifier for a volume. (In LITE projection.)
        selfLink:
          type: string
          description: URL to this resource. (In LITE projection.)
        userInfo:
          type: object
          properties:
            isPurchased:
              type: boolean
              description: >-
                Whether or not this volume was purchased by the authenticated
                user making the request. (In LITE projection.)
            userUploadedVolumeInfo:
              properties:
                processingState:
                  type: string
              type: object
            isPreordered:
              description: >-
                Whether or not this volume was pre-ordered by the authenticated
                user making the request. (In LITE projection.)
              type: boolean
            review:
              description: This user's review of this volume, if one exists.
              $ref: '#/components/schemas/Review'
            familySharing:
              type: object
              description: Information on the ability to share with the family.
              properties:
                familyRole:
                  description: The role of the user in the family.
                  type: string
                isSharingAllowed:
                  description: >-
                    Whether or not this volume can be shared with the family by
                    the user. This includes sharing eligibility of both the
                    volume and the user. If the value is true, the user can
                    initiate a family sharing action.
                  type: boolean
                isSharingDisabledByFop:
                  description: >-
                    Whether or not sharing this volume is temporarily disabled
                    due to issues with the Family Wallet.
                  type: boolean
            isFamilySharingAllowed:
              type: boolean
              description: 'Deprecated: Replaced by familySharing.'
            entitlementType:
              type: integer
              format: int32
              description: Whether this volume is purchased, sample, pd download etc.
            readingPosition:
              $ref: '#/components/schemas/ReadingPosition'
              description: >-
                The user's current reading position in the volume, if one is
                available. (In LITE projection.)
            acquiredTime:
              description: >-
                Timestamp when this volume was acquired by the user. (RFC 3339
                UTC date-time format) Acquiring includes purchase, user upload,
                receiving family sharing, etc.
              type: string
            rentalPeriod:
              properties:
                startUtcSec:
                  format: int64
                  type: string
                endUtcSec:
                  type: string
                  format: int64
              type: object
              description: Period during this book is/was a valid rental.
            updated:
              type: string
              description: >-
                Timestamp when this volume was last modified by a user action,
                such as a reading position update, volume purchase or writing a
                review. (RFC 3339 UTC date-time format).
            isUploaded:
              type: boolean
              description: Whether or not this volume was user uploaded.
            isInMyBooks:
              description: Whether or not this volume is currently in "my books."
              type: boolean
            isFamilySharedToUser:
              description: >-
                Whether or not the user received this volume through family
                sharing.
              type: boolean
            isFamilySharedFromUser:
              type: boolean
              description: Whether or not the user shared this volume with the family.
            rentalState:
              type: string
              description: Whether this book is an active or an expired rental.
            copy:
              properties:
                remainingCharacterCount:
                  type: integer
                  format: int32
                updated:
                  type: string
                allowedCharacterCount:
                  type: integer
                  format: int32
                limitType:
                  type: string
              type: object
              description: Copy/Paste accounting information.
            acquisitionType:
              format: int32
              description: How this volume was acquired.
              type: integer
            isFamilySharingDisabledByFop:
              description: 'Deprecated: Replaced by familySharing.'
              type: boolean
          description: >-
            User specific information related to this volume. (e.g. page this
            user last read or whether they purchased this book)
        accessInfo:
          type: object
          properties:
            publicDomain:
              type: boolean
              description: >-
                Whether or not this book is public domain in the country listed
                above.
            quoteSharingAllowed:
              type: boolean
              description: Whether quote sharing is allowed for this volume.
            epub:
              type: object
              properties:
                isAvailable:
                  type: boolean
                  description: >-
                    Is a flowing text epub available either as public domain or
                    for purchase. (In LITE projection.)
                acsTokenLink:
                  type: string
                  description: >-
                    URL to retrieve ACS token for epub download. (In LITE
                    projection.)
                downloadLink:
                  type: string
                  description: URL to download epub. (In LITE projection.)
              description: Information about epub content. (In LITE projection.)
            viewability:
              type: string
              description: >-
                The read access of a volume. Possible values are PARTIAL,
                ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the
                country listed above. A value of PARTIAL means that the
                publisher has allowed some portion of the volume to be viewed
                publicly, without purchase. This can apply to eBooks as well as
                non-eBooks. Public domain books will always have a value of
                ALL_PAGES.
            accessViewStatus:
              description: >-
                Combines the access and viewability of this volume into a single
                status field for this user. Values can be FULL_PURCHASED,
                FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)
              type: string
            embeddable:
              type: boolean
              description: >-
                Whether this volume can be embedded in a viewport using the
                Embedded Viewer API.
            driveImportedContentLink:
              type: string
              description: >-
                URL to the Google Drive viewer if this volume is uploaded by the
                user by selecting the file from Google Drive.
            pdf:
              properties:
                acsTokenLink:
                  description: >-
                    URL to retrieve ACS token for pdf download. (In LITE
                    projection.)
                  type: string
                downloadLink:
                  description: URL to download pdf. (In LITE projection.)
                  type: string
                isAvailable:
                  description: >-
                    Is a scanned image pdf available either as public domain or
                    for purchase. (In LITE projection.)
                  type: boolean
              type: object
              description: Information about pdf content. (In LITE projection.)
            downloadAccess:
              $ref: '#/components/schemas/DownloadAccessRestriction'
              description: >-
                Information about a volume's download license access
                restrictions.
            country:
              description: >-
                The two-letter ISO_3166-1 country code for which this access
                information is valid. (In LITE projection.)
              type: string
            webReaderLink:
              description: >-
                URL to read this volume on the Google Books site. Link will not
                allow users to read non-viewable volumes.
              type: string
            viewOrderUrl:
              type: string
              description: >-
                For ordered but not yet processed orders, we give a URL that can
                be used to go to the appropriate Google Wallet page.
            explicitOfflineLicenseManagement:
              type: boolean
              description: >-
                Whether this volume requires that the client explicitly request
                offline download license rather than have it done automatically
                when loading the content, if the client supports it.
            textToSpeechPermission:
              description: >-
                Whether text-to-speech is permitted for this volume. Values can
                be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.
              type: string
          description: >-
            Any information about a volume related to reading or obtaining that
            volume text. This information can depend on country (books may be
            public domain in one country but not in another, e.g.).
        layerInfo:
          type: object
          properties:
            layers:
              type: array
              items:
                properties:
                  volumeAnnotationsVersion:
                    description: >-
                      The current version of this layer's volume annotations.
                      Note that this version applies only to the data in the
                      books.layers.volumeAnnotations.* responses. The actual
                      annotation data is versioned separately.
                    type: string
                  layerId:
                    description: The layer id of this layer (e.g. "geo").
                    type: string
                type: object
              description: >-
                A layer should appear here if and only if the layer exists for
                this book.
          description: >-
            What layers exist in this volume and high level information about
            them.
        volumeInfo:
          type: object
          description: General volume information.
          properties:
            comicsContent:
              description: Whether the volume has comics content.
              type: boolean
            description:
              type: string
              description: >-
                A synopsis of the volume. The text of the description is
                formatted in HTML and includes simple formatting elements, such
                as b, i, and br tags. (In LITE projection.)
            allowAnonLogging:
              description: Whether anonymous logging should be allowed.
              type: boolean
            mainCategory:
              type: string
              description: >-
                The main category to which this volume belongs. It will be the
                category from the categories list returned below that has the
                highest weight.
            maturityRating:
              type: string
            previewLink:
              description: URL to preview this volume on the Google Books site.
              type: string
            contentVersion:
              type: string
              description: >-
                An identifier for the version of the volume content (text &
                images). (In LITE projection)
            averageRating:
              type: number
              format: double
              description: The mean review rating for this volume. (min = 1.0, max = 5.0)
            seriesInfo:
              $ref: '#/components/schemas/Volumeseriesinfo'
            readingModes:
              description: The reading modes available for this volume.
              properties:
                image:
                  type: boolean
                text:
                  type: boolean
              type: object
            title:
              type: string
              description: Volume title. (In LITE projection.)
            imageLinks:
              type: object
              properties:
                small:
                  type: string
                  description: >-
                    Image link for small size (width of ~300 pixels). (In LITE
                    projection)
                smallThumbnail:
                  type: string
                  description: >-
                    Image link for small thumbnail size (width of ~80 pixels).
                    (In LITE projection)
                medium:
                  description: >-
                    Image link for medium size (width of ~575 pixels). (In LITE
                    projection)
                  type: string
                thumbnail:
                  description: >-
                    Image link for thumbnail size (width of ~128 pixels). (In
                    LITE projection)
                  type: string
                extraLarge:
                  type: string
                  description: >-
                    Image link for extra large size (width of ~1280 pixels). (In
                    LITE projection)
                large:
                  description: >-
                    Image link for large size (width of ~800 pixels). (In LITE
                    projection)
                  type: string
              description: >-
                A list of image links for all the sizes that are available. (In
                LITE projection.)
            ratingsCount:
              format: int32
              description: The number of review ratings for this volume.
              type: integer
            industryIdentifiers:
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: >-
                      Identifier type. Possible values are ISBN_10, ISBN_13,
                      ISSN and OTHER.
                  identifier:
                    type: string
                    description: Industry specific volume identifier.
              description: Industry standard identifiers for this volume.
              type: array
            language:
              type: string
              description: >-
                Best language for this volume (based on content). It is the
                two-letter ISO 639-1 code such as 'fr', 'en', etc.
            infoLink:
              type: string
              description: >-
                URL to view information about this volume on the Google Books
                site. (In LITE projection)
            samplePageCount:
              description: Total number of sample pages as per publisher metadata.
              type: integer
              format: int32
            pageCount:
              description: Total number of pages as per publisher metadata.
              type: integer
              format: int32
            categories:
              type: array
              items:
                type: string
              description: >-
                A list of subject categories, such as "Fiction", "Suspense",
                etc.
            canonicalVolumeLink:
              description: Canonical URL for a volume. (In LITE projection.)
              type: string
            authors:
              type: array
              items:
                type: string
              description: >-
                The names of the authors and/or editors for this volume. (In
                LITE projection)
            subtitle:
              description: Volume subtitle. (In LITE projection.)
              type: string
            dimensions:
              description: Physical dimensions of this volume.
              type: object
              properties:
                height:
                  description: Height or length of this volume (in cm).
                  type: string
                thickness:
                  type: string
                  description: Thickness of this volume (in cm).
                width:
                  type: string
                  description: Width of this volume (in cm).
            printType:
              type: string
              description: >-
                Type of publication of this volume. Possible values are BOOK or
                MAGAZINE.
            publishedDate:
              type: string
              description: Date of publication. (In LITE projection.)
            panelizationSummary:
              type: object
              description: A top-level summary of the panelization info in this volume.
              properties:
                containsImageBubbles:
                  type: boolean
                imageBubbleVersion:
                  type: string
                epubBubbleVersion:
                  type: string
                containsEpubBubbles:
                  type: boolean
            publisher:
              description: Publisher of this volume. (In LITE projection.)
              type: string
            printedPageCount:
              description: Total number of printed pages in generated pdf representation.
              type: integer
              format: int32
        kind:
          type: string
          description: Resource type for a volume. (In LITE projection.)
        recommendedInfo:
          properties:
            explanation:
              type: string
              description: A text explaining why this volume is recommended.
          description: Recommendation related information for this volume.
          type: object
        etag:
          type: string
          description: >-
            Opaque identifier for a specific version of a volume resource. (In
            LITE projection)
      type: object
    Volumeseriesinfo:
      properties:
        shortSeriesBookTitle:
          description: Short book title in the context of the series.
          type: string
        volumeSeries:
          items:
            properties:
              seriesId:
                type: string
                description: The series id.
              issue:
                type: array
                items:
                  properties:
                    issueDisplayNumber:
                      type: string
                    issueOrderNumber:
                      format: int32
                      type: integer
                  type: object
                description: >-
                  List of issues. Applicable only for Collection Edition and
                  Omnibus.
              seriesBookType:
                type: string
                description: >-
                  The book type in the context of series. Examples - Single
                  Issue, Collection Edition, etc.
              orderNumber:
                description: The book order number in the series.
                format: int32
                type: integer
            type: object
          type: array
        bookDisplayNumber:
          description: >-
            The display number string. This should be used only for display
            purposes and the actual sequence should be inferred from the below
            orderNumber.
          type: string
        kind:
          type: string
          description: Resource type.
      type: object
      id: Volumeseriesinfo
    Layersummaries:
      id: Layersummaries
      properties:
        kind:
          description: Resource type.
          type: string
        items:
          items:
            $ref: '#/components/schemas/Layersummary'
          description: A list of layer summary items.
          type: array
        totalItems:
          format: int32
          type: integer
          description: The total number of layer summaries found.
      type: object
    DictionaryAnnotationdata:
      properties:
        updated:
          type: string
          description: >-
            Timestamp for the last time this data was updated. (RFC 3339 UTC
            date-time format).
        selfLink:
          type: string
          description: URL for this resource. *
        id:
          type: string
          description: Unique id for this annotation data.
        layerId:
          type: string
          description: The Layer id for this data. *
        annotationType:
          description: The type of annotation this data is for.
          type: string
        kind:
          type: string
          description: Resource Type
        volumeId:
          type: string
          description: The volume id for this data. *
        data:
          description: >-
            JSON encoded data for this dictionary annotation data. Emitted with
            name 'data' in JSON output. Either this or geo_data will be
            populated.
          $ref: '#/components/schemas/Dictlayerdata'
        encodedData:
          description: Base64 encoded data for this annotation data.
          type: string
          format: byte
      id: DictionaryAnnotationdata
      type: object
    Bookshelves:
      properties:
        kind:
          type: string
          description: Resource type.
        items:
          description: A list of bookshelves.
          type: array
          items:
            $ref: '#/components/schemas/Bookshelf'
      id: Bookshelves
      type: object
    Volumeannotation:
      id: Volumeannotation
      type: object
      properties:
        deleted:
          type: boolean
          description: Indicates that this annotation is deleted.
        updated:
          description: >-
            Timestamp for the last time this anntoation was updated. (RFC 3339
            UTC date-time format).
          type: string
        contentRanges:
          type: object
          description: The content ranges to identify the selected text.
          properties:
            gbImageRange:
              description: Range in GB image format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
            gbTextRange:
              description: Range in GB text format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
            contentVersion:
              type: string
              description: Content version applicable to ranges below.
            cfiRange:
              description: Range in CFI format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
        volumeId:
          type: string
          description: The Volume this annotation is for.
        kind:
          type: string
          description: Resource Type
        selectedText:
          description: Excerpt from the volume.
          type: string
        annotationType:
          type: string
          description: The type of annotation this is.
        annotationDataLink:
          description: Link to get data for this annotation.
          type: string
        id:
          description: Unique id of this volume annotation.
          type: string
        pageIds:
          items:
            type: string
          description: Pages the annotation spans.
          type: array
        layerId:
          type: string
          description: The Layer this annotation is for.
        selfLink:
          type: string
          description: URL to this resource.
        annotationDataId:
          type: string
          description: The annotation data id for this volume annotation.
        data:
          description: Data for this annotation.
          type: string
    Annotation:
      type: object
      properties:
        deleted:
          description: Indicates that this annotation is deleted.
          type: boolean
        selectedText:
          description: Excerpt from the volume.
          type: string
        layerId:
          type: string
          description: The layer this annotation is for.
        layerSummary:
          properties:
            remainingCharacterCount:
              description: >-
                Remaining allowed characters on this layer, especially for the
                "copy" layer.
              format: int32
              type: integer
            allowedCharacterCount:
              type: integer
              format: int32
              description: >-
                Maximum allowed characters on this layer, especially for the
                "copy" layer.
            limitType:
              type: string
              description: >-
                Type of limitation on this layer. "limited" or "unlimited" for
                the "copy" layer.
          type: object
        selfLink:
          description: URL to this resource.
          type: string
        pageIds:
          type: array
          description: Pages that this annotation spans.
          items:
            type: string
        clientVersionRanges:
          type: object
          properties:
            gbTextRange:
              description: Range in GB text format for this annotation sent by client.
              $ref: '#/components/schemas/BooksAnnotationsRange'
            gbImageRange:
              description: Range in GB image format for this annotation sent by client.
              $ref: '#/components/schemas/BooksAnnotationsRange'
            cfiRange:
              $ref: '#/components/schemas/BooksAnnotationsRange'
              description: Range in CFI format for this annotation sent by client.
            imageCfiRange:
              $ref: '#/components/schemas/BooksAnnotationsRange'
              description: Range in image CFI format for this annotation sent by client.
            contentVersion:
              type: string
              description: Content version the client sent in.
          description: Selection ranges sent from the client.
        afterSelectedText:
          type: string
          description: >-
            Anchor text after excerpt. For requests, if the user bookmarked a
            screen that has no flowing text on it, then this field should be
            empty.
        id:
          type: string
          description: Id of this annotation, in the form of a GUID.
        created:
          description: Timestamp for the created time of this annotation.
          type: string
        highlightStyle:
          description: The highlight style for this annotation.
          type: string
        currentVersionRanges:
          type: object
          properties:
            gbImageRange:
              $ref: '#/components/schemas/BooksAnnotationsRange'
              description: Range in GB image format for this annotation for version above.
            contentVersion:
              description: Content version applicable to ranges below.
              type: string
            imageCfiRange:
              description: Range in image CFI format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
            cfiRange:
              $ref: '#/components/schemas/BooksAnnotationsRange'
              description: Range in CFI format for this annotation for version above.
            gbTextRange:
              description: Range in GB text format for this annotation for version above.
              $ref: '#/components/schemas/BooksAnnotationsRange'
          description: Selection ranges for the most recent content version.
        kind:
          type: string
          description: Resource type.
        volumeId:
          description: The volume that this annotation belongs to.
          type: string
        updated:
          description: Timestamp for the last time this annotation was modified.
          type: string
        data:
          type: string
          description: User-created data for this annotation.
        beforeSelectedText:
          type: string
          description: >-
            Anchor text before excerpt. For requests, if the user bookmarked a
            screen that has no flowing text on it, then this field should be
            empty.
      id: Annotation
    Metadata:
      type: object
      properties:
        kind:
          description: Resource type.
          type: string
        items:
          type: array
          description: A list of offline dictionary metadata.
          items:
            properties:
              size:
                format: int64
                type: string
              download_url:
                type: string
              language:
                type: string
              encrypted_key:
                type: string
              version:
                format: int64
                type: string
            type: object
      id: Metadata
    AnnotationsSummary:
      type: object
      properties:
        layers:
          type: array
          items:
            type: object
            properties:
              remainingCharacterCount:
                type: integer
                format: int32
              allowedCharacterCount:
                format: int32
                type: integer
              limitType:
                type: string
              layerId:
                type: string
              updated:
                type: string
        kind:
          type: string
      id: AnnotationsSummary
    Volumeannotations:
      properties:
        version:
          type: string
          description: >-
            The version string for all of the volume annotations in this layer
            (not just the ones in this response). Note: the version string
            doesn't apply to the annotation data, just the information in this
            response (e.g. the location of annotations in the book).
        items:
          description: A list of volume annotations.
          type: array
          items:
            $ref: '#/components/schemas/Volumeannotation'
        totalItems:
          description: The total number of volume annotations found.
          type: integer
          format: int32
        nextPageToken:
          description: >-
            Token to pass in for pagination for the next page. This will not be
            present if this request does not have more results.
          type: string
        kind:
          type: string
          description: Resource type
      type: object
      id: Volumeannotations
    Bookshelf:
      type: object
      id: Bookshelf
      properties:
        kind:
          type: string
          description: Resource type for bookshelf metadata.
        updated:
          type: string
          description: >-
            Last modified time of this bookshelf (formatted UTC timestamp with
            millisecond resolution).
        volumeCount:
          description: Number of volumes in this bookshelf.
          type: integer
          format: int32
        description:
          type: string
          description: Description of this bookshelf.
        access:
          type: string
          description: Whether this bookshelf is PUBLIC or PRIVATE.
        volumesLastUpdated:
          type: string
          description: >-
            Last time a volume was added or removed from this bookshelf
            (formatted UTC timestamp with millisecond resolution).
        selfLink:
          description: URL to this resource.
          type: string
        title:
          description: Title of this bookshelf.
          type: string
        created:
          type: string
          description: >-
            Created time for this bookshelf (formatted UTC timestamp with
            millisecond resolution).
        id:
          format: int32
          type: integer
          description: Id of this bookshelf, only unique by user.
    ConcurrentAccessRestriction:
      id: ConcurrentAccessRestriction
      type: object
      properties:
        signature:
          type: string
          description: Response signature.
        maxConcurrentDevices:
          format: int32
          type: integer
          description: The maximum number of concurrent access licenses for this volume.
        source:
          description: >-
            Client app identifier for verification. Download access and
            client-validation only.
          type: string
        message:
          description: Error/warning message.
          type: string
        volumeId:
          type: string
          description: Identifies the volume for which this entry applies.
        reasonCode:
          description: Error/warning reason code.
          type: string
        kind:
          type: string
          description: Resource type.
        deviceAllowed:
          description: Whether access is granted for this (user, device, volume).
          type: boolean
        nonce:
          description: >-
            Client nonce for verification. Download access and client-validation
            only.
          type: string
        timeWindowSeconds:
          description: Time in seconds for license auto-expiration.
          format: int32
          type: integer
        restricted:
          type: boolean
          description: Whether this volume has any concurrent access restrictions.
    Usersettings:
      properties:
        kind:
          type: string
          description: Resource type.
        notesExport:
          description: User settings in sub-objects, each for different purposes.
          type: object
          properties:
            isEnabled:
              type: boolean
            folderName:
              type: string
        notification:
          properties:
            moreFromAuthors:
              properties:
                opted_state:
                  type: string
              type: object
            rewardExpirations:
              type: object
              properties:
                opted_state:
                  type: string
            priceDrop:
              properties:
                opted_state:
                  type: string
              type: object
            matchMyInterests:
              properties:
                opted_state:
                  type: string
              type: object
            moreFromSeries:
              properties:
                opted_state:
                  type: string
              type: object
          type: object
      id: Usersettings
      type: object
    Notification:
      id: Notification
      type: object
      properties:
        pcampaign_id:
          type: string
        notificationGroup:
          type: string
        doc_type:
          type: string
        is_document_mature:
          type: boolean
        iconUrl:
          type: string
        reason:
          type: string
        kind:
          type: string
          description: Resource type.
        notification_type:
          type: string
        timeToExpireMs:
          format: int64
          type: string
        title:
          type: string
        dont_show_notification:
          type: boolean
        crmExperimentIds:
          description: The list of crm experiment ids.
          items:
            type: string
            format: int64
          type: array
        body:
          type: string
        targetUrl:
          type: string
        doc_id:
          type: string
        show_notification_settings_action:
          type: boolean
    DownloadAccessRestriction:
      type: object
      properties:
        nonce:
          description: >-
            Client nonce for verification. Download access and client-validation
            only.
          type: string
        source:
          description: >-
            Client app identifier for verification. Download access and
            client-validation only.
          type: string
        signature:
          description: Response signature.
          type: string
        volumeId:
          type: string
          description: Identifies the volume for which this entry applies.
        message:
          type: string
          description: Error/warning message.
        reasonCode:
          description: >-
            Error/warning reason code. Additional codes may be added in the
            future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101
            ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS
          type: string
        maxDownloadDevices:
          format: int32
          type: integer
          description: >-
            If restricted, the maximum number of content download licenses for
            this volume.
        justAcquired:
          type: boolean
          description: >-
            If deviceAllowed, whether access was just acquired with this
            request.
        restricted:
          description: Whether this volume has any download access restrictions.
          type: boolean
        downloadsAcquired:
          format: int32
          type: integer
          description: >-
            If restricted, the number of content download licenses already
            acquired (including the requesting client, if licensed).
        kind:
          description: Resource type.
          type: string
        deviceAllowed:
          description: >-
            If restricted, whether access is granted for this (user, device,
            volume).
          type: boolean
      id: DownloadAccessRestriction
    Series:
      type: object
      id: Series
      properties:
        kind:
          description: Resource type.
          type: string
        series:
          items:
            properties:
              title:
                type: string
              eligibleForSubscription:
                type: boolean
              bannerImageUrl:
                type: string
              seriesType:
                type: string
              seriesId:
                type: string
              seriesSubscriptionReleaseInfo:
                properties:
                  nextReleaseInfo:
                    properties:
                      currencyCode:
                        type: string
                      releaseTime:
                        type: string
                      amountInMicros:
                        format: double
                        type: number
                      releaseNumber:
                        type: string
                    type: object
                  currentReleaseInfo:
                    properties:
                      releaseNumber:
                        type: string
                      currencyCode:
                        type: string
                      amountInMicros:
                        format: double
                        type: number
                      releaseTime:
                        type: string
                    type: object
                  seriesSubscriptionType:
                    type: string
                  cancelTime:
                    type: string
                type: object
              subscriptionId:
                type: string
              seriesFormatType:
                type: string
              isComplete:
                type: boolean
              imageUrl:
                type: string
            type: object
          type: array
    Dictlayerdata:
      type: object
      properties:
        kind:
          type: string
        common:
          properties:
            title:
              description: >-
                The display title and localized canonical name to use when
                searching for this entity on Google search.
              type: string
          type: object
        dict:
          properties:
            words:
              items:
                type: object
                properties:
                  source:
                    type: object
                    description: >-
                      The words with different meanings but not related words,
                      e.g. "go" (game) and "go" (verb).
                    properties:
                      url:
                        type: string
                      attribution:
                        type: string
                  examples:
                    type: array
                    items:
                      properties:
                        text:
                          type: string
                        source:
                          type: object
                          properties:
                            url:
                              type: string
                            attribution:
                              type: string
                      type: object
                  senses:
                    items:
                      type: object
                      properties:
                        definitions:
                          type: array
                          items:
                            properties:
                              examples:
                                items:
                                  properties:
                                    source:
                                      type: object
                                      properties:
                                        attribution:
                                          type: string
                                        url:
                                          type: string
                                    text:
                                      type: string
                                  type: object
                                type: array
                              definition:
                                type: string
                            type: object
                        source:
                          properties:
                            attribution:
                              type: string
                            url:
                              type: string
                          type: object
                        syllabification:
                          type: string
                        partOfSpeech:
                          type: string
                        synonyms:
                          type: array
                          items:
                            properties:
                              text:
                                type: string
                              source:
                                properties:
                                  url:
                                    type: string
                                  attribution:
                                    type: string
                                type: object
                            type: object
                        pronunciationUrl:
                          type: string
                        pronunciation:
                          type: string
                        conjugations:
                          type: array
                          items:
                            type: object
                            properties:
                              value:
                                type: string
                              type:
                                type: string
                    type: array
                  derivatives:
                    type: array
                    items:
                      type: object
                      properties:
                        text:
                          type: string
                        source:
                          properties:
                            url:
                              type: string
                            attribution:
                              type: string
                          type: object
              type: array
            source:
              type: object
              description: The source, url and attribution for this dictionary data.
              properties:
                attribution:
                  type: string
                url:
                  type: string
          type: object
      id: Dictlayerdata
    RequestAccessData:
      id: RequestAccessData
      type: object
      properties:
        concurrentAccess:
          description: A concurrent access response.
          $ref: '#/components/schemas/ConcurrentAccessRestriction'
        downloadAccess:
          $ref: '#/components/schemas/DownloadAccessRestriction'
          description: A download access response.
        kind:
          description: Resource type.
          type: string
    Volumes:
      type: object
      properties:
        kind:
          type: string
          description: Resource type.
        items:
          description: A list of volumes.
          items:
            $ref: '#/components/schemas/Volume'
          type: array
        totalItems:
          description: >-
            Total number of volumes found. This might be greater than the number
            of volumes returned in this response if results have been paginated.
          format: int32
          type: integer
      id: Volumes
    FamilyInfo:
      id: FamilyInfo
      properties:
        membership:
          description: Family membership info of the user that made the request.
          type: object
          properties:
            ageGroup:
              description: The age group of the user.
              type: string
            allowedMaturityRating:
              description: The maximum allowed maturity rating for the user.
              type: string
            acquirePermission:
              description: Restrictions on user buying and acquiring content.
              type: string
            isInFamily:
              type: boolean
            role:
              description: The role of the user in the family.
              type: string
        kind:
          description: Resource type.
          type: string
      type: object
    Annotationsdata:
      properties:
        nextPageToken:
          description: >-
            Token to pass in for pagination for the next page. This will not be
            present if this request does not have more results.
          type: string
        totalItems:
          type: integer
          description: The total number of volume annotations found.
          format: int32
        kind:
          description: Resource type
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/GeoAnnotationdata'
          description: A list of Annotation Data.
      type: object
      id: Annotationsdata
    Layersummary:
      id: Layersummary
      properties:
        dataCount:
          type: integer
          description: The number of data items for this layer.
          format: int32
        selfLink:
          description: URL to this resource.
          type: string
        kind:
          description: Resource Type
          type: string
        volumeId:
          type: string
          description: The volume id this resource is for.
        annotationsLink:
          type: string
          description: The link to get the annotations for this layer.
        updated:
          description: >-
            Timestamp for the last time an item in this layer was updated. (RFC
            3339 UTC date-time format).
          type: string
        volumeAnnotationsVersion:
          type: string
          description: >-
            The current version of this layer's volume annotations. Note that
            this version applies only to the data in the
            books.layers.volumeAnnotations.* responses. The actual annotation
            data is versioned separately.
        annotationCount:
          type: integer
          format: int32
          description: The number of annotations for this layer.
        annotationsDataLink:
          type: string
          description: Link to get data for this annotation.
        annotationTypes:
          type: array
          description: The list of annotation types contained for this layer.
          items:
            type: string
        layerId:
          type: string
          description: The layer id for this summary.
        contentVersion:
          description: The content version this resource is for.
          type: string
        id:
          type: string
          description: Unique id of this layer summary.
      type: object
    Volume2:
      properties:
        nextPageToken:
          type: string
        items:
          description: A list of volumes.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
        kind:
          type: string
          description: Resource type.
      type: object
      id: Volume2
    GeoAnnotationdata:
      properties:
        annotationType:
          type: string
          description: The type of annotation this data is for.
        encodedData:
          format: byte
          type: string
          description: Base64 encoded data for this annotation data.
        updated:
          description: >-
            Timestamp for the last time this data was updated. (RFC 3339 UTC
            date-time format).
          type: string
        kind:
          type: string
          description: Resource Type
        id:
          description: Unique id for this annotation data.
          type: string
        layerId:
          description: The Layer id for this data. *
          type: string
        volumeId:
          type: string
          description: The volume id for this data. *
        selfLink:
          description: URL for this resource. *
          type: string
        data:
          description: >-
            JSON encoded data for this geo annotation data. Emitted with name
            'data' in JSON output. Either this or dict_data will be populated.
          $ref: '#/components/schemas/Geolayerdata'
      type: object
      id: GeoAnnotationdata
    Geolayerdata:
      type: object
      properties:
        common:
          properties:
            previewImageUrl:
              type: string
              description: The URL for the preview image information.
            title:
              description: >-
                The display title and localized canonical name to use when
                searching for this entity on Google search.
              type: string
            snippet:
              description: The description for this location.
              type: string
            lang:
              type: string
              description: The language of the information url and description.
            snippetUrl:
              type: string
              description: 'The URL for information for this location. Ex: wikipedia link.'
          type: object
        kind:
          type: string
        geo:
          type: object
          properties:
            mapType:
              description: >-
                The type of map that should be used for this location. EX:
                HYBRID, ROADMAP, SATELLITE, TERRAIN
              type: string
            longitude:
              description: The longitude of the location.
              format: double
              type: number
            boundary:
              items:
                type: string
              type: array
              description: >-
                The boundary of the location as a set of loops containing pairs
                of latitude, longitude coordinates.
            viewport:
              type: object
              properties:
                hi:
                  properties:
                    longitude:
                      type: number
                      format: double
                    latitude:
                      type: number
                      format: double
                  type: object
                lo:
                  properties:
                    longitude:
                      format: double
                      type: number
                    latitude:
                      format: double
                      type: number
                  type: object
              description: >-
                The viewport for showing this location. This is a latitude,
                longitude rectangle.
            zoom:
              type: integer
              format: int32
              description: >-
                The Zoom level to use for the map. Zoom levels between 0 (the
                lowest zoom level, in which the entire world can be seen on one
                map) to 21+ (down to individual buildings). See: https:
                //developers.google.com/maps/documentation/staticmaps/#Zoomlevels
            latitude:
              format: double
              description: The latitude of the location.
              type: number
            cachePolicy:
              type: string
              description: >-
                The cache policy active for this data. EX: UNRESTRICTED,
                RESTRICTED, NEVER
            countryCode:
              description: The country code of the location.
              type: string
      id: Geolayerdata
    Category:
      type: object
      properties:
        kind:
          description: Resource type.
          type: string
        items:
          items:
            properties:
              name:
                type: string
              categoryId:
                type: string
              badgeUrl:
                type: string
            type: object
          type: array
          description: A list of onboarding categories.
      id: Category
    Review:
      properties:
        kind:
          description: Resource type for a review.
          type: string
        title:
          type: string
          description: Title for this review.
        date:
          description: Date of this review.
          type: string
        rating:
          description: >-
            Star rating for this review. Possible values are ONE, TWO, THREE,
            FOUR, FIVE or NOT_RATED.
          type: string
        content:
          description: Review text.
          type: string
        type:
          type: string
          description: >-
            Source type for this review. Possible values are EDITORIAL, WEB_USER
            or GOOGLE_USER.
        source:
          properties:
            extraDescription:
              type: string
              description: Extra text about the source of the review.
            url:
              description: URL of the source of the review.
              type: string
            description:
              type: string
              description: Name of the source.
          description: >-
            Information regarding the source of this review, when the review is
            not from a Google Books user.
          type: object
        volumeId:
          description: Volume that this review is for.
          type: string
        fullTextUrl:
          type: string
          description: URL for the full review text, for reviews gathered from the web.
        author:
          properties:
            displayName:
              type: string
              description: Name of this person.
          type: object
          description: Author of this review.
      type: object
      id: Review
    DownloadAccesses:
      properties:
        kind:
          type: string
          description: Resource type.
        downloadAccessList:
          description: A list of download access responses.
          type: array
          items:
            $ref: '#/components/schemas/DownloadAccessRestriction'
      id: DownloadAccesses
      type: object
    BooksCloudloadingResource:
      properties:
        volumeId:
          type: string
        processingState:
          type: string
        title:
          type: string
        author:
          type: string
      id: BooksCloudloadingResource
      type: object
    BooksVolumesRecommendedRateResponse:
      id: BooksVolumesRecommendedRateResponse
      properties:
        consistency_token:
          type: string
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      id: Empty
      properties: {}
      type: object
    Discoveryclusters:
      id: Discoveryclusters
      type: object
      properties:
        kind:
          type: string
          description: Resorce type.
        totalClusters:
          format: int32
          type: integer
        clusters:
          type: array
          items:
            properties:
              uid:
                type: string
              subTitle:
                type: string
              totalVolumes:
                format: int32
                type: integer
              banner_with_content_container:
                properties:
                  textColorArgb:
                    type: string
                  maskColorArgb:
                    type: string
                  moreButtonUrl:
                    type: string
                  imageUrl:
                    type: string
                  moreButtonText:
                    type: string
                  fillColorArgb:
                    type: string
                type: object
              title:
                type: string
              volumes:
                items:
                  $ref: '#/components/schemas/Volume'
                type: array
            type: object
    Seriesmembership:
      type: object
      id: Seriesmembership
      properties:
        nextPageToken:
          type: string
        member:
          items:
            $ref: '#/components/schemas/Volume'
          type: array
        kind:
          description: Resorce type.
          type: string
    BooksAnnotationsRange:
      properties:
        endPosition:
          type: string
          description: The ending position for the range.
        startOffset:
          description: The offset from the starting position.
          type: string
        endOffset:
          type: string
          description: The offset from the ending position.
        startPosition:
          type: string
          description: The starting position for the range.
      id: BooksAnnotationsRange
      type: object
    ReadingPosition:
      id: ReadingPosition
      type: object
      properties:
        kind:
          description: Resource type for a reading position.
          type: string
        updated:
          description: >-
            Timestamp when this reading position was last updated (formatted UTC
            timestamp with millisecond resolution).
          type: string
        pdfPosition:
          description: Position in a PDF file.
          type: string
        volumeId:
          type: string
          description: Volume id associated with this reading position.
        gbImagePosition:
          type: string
          description: Position in a volume for image-based content.
        epubCfiPosition:
          type: string
          description: Position in an EPUB as a CFI.
        gbTextPosition:
          description: Position in a volume for text-based content.
          type: string
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/books: Manage your books
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /books/v1/onboarding/listCategories:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
    get:
      description: List categories for onboarding experience.
      operationId: books.onboarding.listCategories
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      parameters:
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: onboarding__categories
      x-stackQL-verb: select
  /books/v1/onboarding/listCategoryVolumes:
    parameters: *ref_1
    get:
      description: List available volumes under categories for onboarding experience.
      operationId: books.onboarding.listCategoryVolumes
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume2'
      parameters:
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: categoryId
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: onboarding__category_volumes
      x-stackQL-verb: select
  /books/v1/cloudloading/deleteBook:
    parameters: *ref_1
    post:
      description: Remove the book and its contents
      operationId: books.cloudloading.deleteBook
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
      x-stackQL-resource: cloudloading__book
      x-stackQL-verb: delete
  /books/v1/cloudloading/updateBook:
    parameters: *ref_1
    post:
      description: Updates a user-upload volume.
      operationId: books.cloudloading.updateBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BooksCloudloadingResource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooksCloudloadingResource'
      parameters: []
      x-stackQL-resource: cloudloading
      x-stackQL-verb: exec
  /books/v1/cloudloading/addBook:
    parameters: *ref_1
    post:
      description: Add a user-upload volume and triggers processing.
      operationId: books.cloudloading.addBook
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooksCloudloadingResource'
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: drive_document_id
          schema:
            type: string
        - in: query
          name: upload_client_token
          schema:
            type: string
        - in: query
          name: mime_type
          schema:
            type: string
      x-stackQL-resource: cloudloading__book
      x-stackQL-verb: insert
  /books/v1/users/{userId}/bookshelves/{shelf}/volumes:
    parameters: *ref_1
    get:
      description: Retrieves volumes in a specific bookshelf for the specified user.
      operationId: books.bookshelves.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: showPreorders
          schema:
            type: boolean
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /books/v1/users/{userId}/bookshelves/{shelf}:
    parameters: *ref_1
    get:
      description: Retrieves metadata for a specific bookshelf for the specified user.
      operationId: books.bookshelves.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookshelf'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: select
  /books/v1/users/{userId}/bookshelves:
    parameters: *ref_1
    get:
      description: Retrieves a list of public bookshelves for the specified user.
      operationId: books.bookshelves.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookshelves'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: select
  /books/v1/dictionary/listOfflineMetadata:
    parameters: *ref_1
    get:
      description: Returns a list of offline dictionary metadata available
      operationId: books.dictionary.listOfflineMetadata
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
      parameters:
        - in: query
          name: cpksver
          required: true
          schema:
            type: string
      x-stackQL-resource: dictionary__offline_metadata
      x-stackQL-verb: select
  /books/v1/volumes:
    parameters: *ref_1
    get:
      description: Performs a book search.
      operationId: books.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: showPreorders
          schema:
            type: boolean
        - in: query
          name: printType
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
        - in: query
          name: libraryRestrict
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: langRestrict
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: partner
          schema:
            type: string
        - in: query
          name: download
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}:
    parameters: *ref_1
    get:
      description: Gets volume information for a single volume.
      operationId: books.volumes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: partner
          schema:
            type: string
        - in: query
          name: user_library_consistent_read
          schema:
            type: boolean
        - in: query
          name: includeNonComicsSeries
          schema:
            type: boolean
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /books/v1/volumes/mybooks:
    parameters: *ref_1
    get:
      description: Return a list of books in My Library.
      operationId: books.volumes.mybooks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: processingState
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: acquireMethod
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
      x-stackQL-resource: mybooks
      x-stackQL-verb: select
  /books/v1/volumes/useruploaded:
    parameters: *ref_1
    get:
      description: Return a list of books uploaded by the current user.
      operationId: books.volumes.useruploaded.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
        - in: query
          name: processingState
          schema:
            type: string
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: useruploaded
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/associated:
    parameters: *ref_1
    get:
      description: Return a list of associated books.
      operationId: books.volumes.associated.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: association
          schema:
            type: string
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
      x-stackQL-resource: associated
      x-stackQL-verb: select
  /books/v1/volumes/recommended:
    parameters: *ref_1
    get:
      description: Return a list of recommended books for the current user.
      operationId: books.volumes.recommended.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
      x-stackQL-resource: recommended
      x-stackQL-verb: select
  /books/v1/volumes/recommended/rate:
    parameters: *ref_1
    post:
      description: Rate a recommended book for the current user.
      operationId: books.volumes.recommended.rate
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooksVolumesRecommendedRateResponse'
      parameters:
        - in: query
          name: rating
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: recommended
      x-stackQL-verb: exec
  /books/v1/personalizedstream/get:
    parameters: *ref_1
    get:
      description: Returns a stream of personalized book clusters
      operationId: books.personalizedstream.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discoveryclusters'
      parameters:
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: maxAllowedMaturityRating
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: personalizedstream
      x-stackQL-verb: select
  /books/v1/notification/get:
    parameters: *ref_1
    get:
      description: Returns notification details for a given notification id.
      operationId: books.notification.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
      parameters:
        - in: query
          name: notification_id
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: notification
      x-stackQL-verb: select
  /books/v1/promooffer/get:
    parameters: *ref_1
    get:
      description: Returns a list of promo offers available to the user
      operationId: books.promooffer.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offers'
      parameters:
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: device
          schema:
            type: string
        - in: query
          name: product
          schema:
            type: string
        - in: query
          name: androidId
          schema:
            type: string
        - in: query
          name: serial
          schema:
            type: string
        - in: query
          name: manufacturer
          schema:
            type: string
      x-stackQL-resource: promooffer
      x-stackQL-verb: select
  /books/v1/promooffer/accept:
    parameters: *ref_1
    post:
      description: Accepts the promo offer.
      operationId: books.promooffer.accept
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: androidId
          schema:
            type: string
        - in: query
          name: serial
          schema:
            type: string
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: manufacturer
          schema:
            type: string
        - in: query
          name: product
          schema:
            type: string
        - in: query
          name: offerId
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: device
          schema:
            type: string
      x-stackQL-resource: promooffer
      x-stackQL-verb: exec
  /books/v1/promooffer/dismiss:
    parameters: *ref_1
    post:
      description: Marks the promo offer as dismissed.
      operationId: books.promooffer.dismiss
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: device
          schema:
            type: string
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: offerId
          schema:
            type: string
        - in: query
          name: product
          schema:
            type: string
        - in: query
          name: manufacturer
          schema:
            type: string
        - in: query
          name: androidId
          schema:
            type: string
        - in: query
          name: serial
          schema:
            type: string
      x-stackQL-resource: promooffer
      x-stackQL-verb: exec
  /books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}:
    parameters: *ref_1
    get:
      description: Gets the volume annotation.
      operationId: books.layers.volumeAnnotations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumeannotation'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: layerId
          required: true
          schema:
            type: string
        - in: path
          name: annotationId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: volume_annotations
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layers/{layerId}:
    parameters: *ref_1
    get:
      description: Gets the volume annotations for a volume and layer.
      operationId: books.layers.volumeAnnotations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumeannotations'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: layerId
          required: true
          schema:
            type: string
        - in: query
          name: contentVersion
          required: true
          schema:
            type: string
        - in: query
          name: updatedMax
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: startOffset
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: volumeAnnotationsVersion
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: updatedMin
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: endOffset
          schema:
            type: string
        - in: query
          name: endPosition
          schema:
            type: string
        - in: query
          name: startPosition
          schema:
            type: string
      x-stackQL-resource: volume_annotations
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layers/{layerId}/data:
    parameters: *ref_1
    get:
      description: Gets the annotation data for a volume and layer.
      operationId: books.layers.annotationData.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotationsdata'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: layerId
          required: true
          schema:
            type: string
        - in: query
          name: contentVersion
          required: true
          schema:
            type: string
        - in: query
          name: updatedMin
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: annotationDataId
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: w
          schema:
            type: integer
        - in: query
          name: h
          schema:
            type: integer
        - in: query
          name: updatedMax
          schema:
            type: string
        - in: query
          name: scale
          schema:
            type: integer
      x-stackQL-resource: annotation_data
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}:
    parameters: *ref_1
    get:
      description: Gets the annotation data.
      operationId: books.layers.annotationData.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryAnnotationdata'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: layerId
          required: true
          schema:
            type: string
        - in: path
          name: annotationDataId
          required: true
          schema:
            type: string
        - in: query
          name: contentVersion
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: scale
          schema:
            type: integer
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: h
          schema:
            type: integer
        - in: query
          name: w
          schema:
            type: integer
        - in: query
          name: allowWebDefinitions
          schema:
            type: boolean
      x-stackQL-resource: annotation_data
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layersummary:
    parameters: *ref_1
    get:
      description: List the layer summaries for a volume.
      operationId: books.layers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layersummaries'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: contentVersion
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: layers
      x-stackQL-verb: select
  /books/v1/volumes/{volumeId}/layersummary/{summaryId}:
    parameters: *ref_1
    get:
      description: Gets the layer summary for a volume.
      operationId: books.layers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Layersummary'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: path
          name: summaryId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: contentVersion
          schema:
            type: string
      x-stackQL-resource: layers
      x-stackQL-verb: select
  /books/v1/myconfig/syncVolumeLicenses:
    parameters: *ref_1
    post:
      description: >-
        Request downloaded content access for specified volumes on the My eBooks
        shelf.
      operationId: books.myconfig.syncVolumeLicenses
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: query
          name: cpksver
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          required: true
          schema:
            type: string
        - in: query
          name: source
          required: true
          schema:
            type: string
        - in: query
          name: features
          schema:
            type: string
        - in: query
          name: showPreorders
          schema:
            type: boolean
        - in: query
          name: volumeIds
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: includeNonComicsSeries
          schema:
            type: boolean
      x-stackQL-resource: myconfig
      x-stackQL-verb: exec
  /books/v1/myconfig/updateUserSettings:
    parameters: *ref_1
    post:
      description: >-
        Sets the settings for the user. If a sub-object is specified, it will
        overwrite the existing sub-object stored in the server. Unspecified
        sub-objects will retain the existing value.
      operationId: books.myconfig.updateUserSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usersettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usersettings'
      parameters: []
      x-stackQL-resource: myconfig
      x-stackQL-verb: exec
  /books/v1/myconfig/getUserSettings:
    parameters: *ref_1
    get:
      description: Gets the current settings for the user.
      operationId: books.myconfig.getUserSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usersettings'
      parameters:
        - in: query
          name: country
          schema:
            type: string
      x-stackQL-resource: myconfig__user_settings
      x-stackQL-verb: select
  /books/v1/myconfig/releaseDownloadAccess:
    parameters: *ref_1
    post:
      description: Release downloaded content access restriction.
      operationId: books.myconfig.releaseDownloadAccess
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccesses'
      parameters:
        - in: query
          name: cpksver
          required: true
          schema:
            type: string
        - in: query
          name: volumeIds
          required: true
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: myconfig
      x-stackQL-verb: exec
  /books/v1/myconfig/requestAccess:
    parameters: *ref_1
    post:
      description: Request concurrent and download access restrictions.
      operationId: books.myconfig.requestAccess
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestAccessData'
      parameters:
        - in: query
          name: cpksver
          required: true
          schema:
            type: string
        - in: query
          name: nonce
          required: true
          schema:
            type: string
        - in: query
          name: source
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: licenseTypes
          schema:
            type: string
      x-stackQL-resource: myconfig
      x-stackQL-verb: exec
  /books/v1/mylibrary/readingpositions/{volumeId}/setPosition:
    parameters: *ref_1
    post:
      description: Sets my reading position information for a volume.
      operationId: books.mylibrary.readingpositions.setPosition
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: position
          required: true
          schema:
            type: string
        - in: query
          name: timestamp
          required: true
          schema:
            type: string
        - in: query
          name: deviceCookie
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: contentVersion
          schema:
            type: string
        - in: query
          name: action
          schema:
            type: string
      x-stackQL-resource: readingpositions
      x-stackQL-verb: exec
  /books/v1/mylibrary/readingpositions/{volumeId}:
    parameters: *ref_1
    get:
      description: Retrieves my reading position information for a volume.
      operationId: books.mylibrary.readingpositions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadingPosition'
      parameters:
        - in: path
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: contentVersion
          schema:
            type: string
      x-stackQL-resource: readingpositions
      x-stackQL-verb: select
  /books/v1/mylibrary/bookshelves/{shelf}/volumes:
    parameters: *ref_1
    get:
      description: Gets volume information for volumes on a bookshelf.
      operationId: books.mylibrary.bookshelves.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: showPreorders
          schema:
            type: boolean
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /books/v1/mylibrary/bookshelves/{shelf}/clearVolumes:
    parameters: *ref_1
    post:
      description: Clears all volumes from a bookshelf.
      operationId: books.mylibrary.bookshelves.clearVolumes
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: exec
  /books/v1/mylibrary/bookshelves/{shelf}:
    parameters: *ref_1
    get:
      description: >-
        Retrieves metadata for a specific bookshelf belonging to the
        authenticated user.
      operationId: books.mylibrary.bookshelves.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookshelf'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: select
  /books/v1/mylibrary/bookshelves/{shelf}/moveVolume:
    parameters: *ref_1
    post:
      description: Moves a volume within a bookshelf.
      operationId: books.mylibrary.bookshelves.moveVolume
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: volumePosition
          required: true
          schema:
            type: integer
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: exec
  /books/v1/mylibrary/bookshelves/{shelf}/removeVolume:
    parameters: *ref_1
    post:
      description: Removes a volume from a bookshelf.
      operationId: books.mylibrary.bookshelves.removeVolume
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: reason
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves__volume
      x-stackQL-verb: delete
  /books/v1/mylibrary/bookshelves/{shelf}/addVolume:
    parameters: *ref_1
    post:
      description: Adds a volume to a bookshelf.
      operationId: books.mylibrary.bookshelves.addVolume
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: shelf
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
        - in: query
          name: reason
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves__volume
      x-stackQL-verb: insert
  /books/v1/mylibrary/bookshelves:
    parameters: *ref_1
    get:
      description: Retrieves a list of bookshelves belonging to the authenticated user.
      operationId: books.mylibrary.bookshelves.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookshelves'
      parameters:
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: bookshelves
      x-stackQL-verb: select
  /books/v1/mylibrary/annotations/{annotationId}:
    parameters: *ref_1
    delete:
      description: Deletes an annotation.
      operationId: books.mylibrary.annotations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: annotationId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: delete
    put:
      description: Updates an existing annotation.
      operationId: books.mylibrary.annotations.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
      parameters:
        - in: path
          name: annotationId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: exec
  /books/v1/mylibrary/annotations:
    parameters: *ref_1
    get:
      description: Retrieves a list of annotations, possibly filtered.
      operationId: books.mylibrary.annotations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotations'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: layerId
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: contentVersion
          schema:
            type: string
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: updatedMax
          schema:
            type: string
        - in: query
          name: updatedMin
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: layerIds
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: select
    post:
      description: Inserts a new annotation.
      operationId: books.mylibrary.annotations.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
      parameters:
        - in: query
          name: country
          schema:
            type: string
        - in: query
          name: showOnlySummaryInResponse
          schema:
            type: boolean
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: annotationId
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: insert
  /books/v1/mylibrary/annotations/summary:
    parameters: *ref_1
    post:
      description: Gets the summary of specified layers.
      operationId: books.mylibrary.annotations.summary
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationsSummary'
      parameters:
        - in: query
          name: layerIds
          required: true
          schema:
            type: string
        - in: query
          name: volumeId
          required: true
          schema:
            type: string
      x-stackQL-resource: annotations
      x-stackQL-verb: exec
  /books/v1/familysharing/share:
    parameters: *ref_1
    post:
      description: >-
        Initiates sharing of the content with the user's family. Empty response
        indicates success.
      operationId: books.familysharing.share
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: docId
          schema:
            type: string
      x-stackQL-resource: familysharing
      x-stackQL-verb: exec
  /books/v1/familysharing/unshare:
    parameters: *ref_1
    post:
      description: >-
        Initiates revoking content that has already been shared with the user's
        family. Empty response indicates success.
      operationId: books.familysharing.unshare
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: volumeId
          schema:
            type: string
        - in: query
          name: docId
          schema:
            type: string
      x-stackQL-resource: familysharing
      x-stackQL-verb: exec
  /books/v1/familysharing/getFamilyInfo:
    parameters: *ref_1
    get:
      description: Gets information regarding the family that the user is part of.
      operationId: books.familysharing.getFamilyInfo
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyInfo'
      parameters:
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: familysharing__family_info
      x-stackQL-verb: select
  /books/v1/series/get:
    parameters: *ref_1
    get:
      description: Returns Series metadata for the given series ids.
      operationId: books.series.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Series'
      parameters:
        - in: query
          name: series_id
          required: true
          schema:
            type: string
      x-stackQL-resource: series
      x-stackQL-verb: select
  /books/v1/series/membership/get:
    parameters: *ref_1
    get:
      description: Returns Series membership data given the series id.
      operationId: books.series.membership.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seriesmembership'
      parameters:
        - in: query
          name: series_id
          required: true
          schema:
            type: string
        - in: query
          name: page_size
          schema:
            type: integer
        - in: query
          name: page_token
          schema:
            type: string
      x-stackQL-resource: membership
      x-stackQL-verb: select
