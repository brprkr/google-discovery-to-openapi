openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Travel Impact Model API
  description: Travel Impact Model API lets you query travel carbon emission estimates.
  version: v1
  x-discovery-doc-revision: '20230622'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/travel/impact-model
servers:
  - url: https://travelimpactmodel.googleapis.com
components:
  schemas:
    ModelVersion:
      properties:
        dated:
          type: string
          description: >-
            Dated versions: Model datasets are recreated with refreshed input
            data but no change to the algorithms regularly.
        minor:
          format: int32
          type: integer
          description: >-
            Minor versions: Changes to the model that, while being consistent
            across schema versions, change the model parameters or
            implementation.
        major:
          type: integer
          description: >-
            Major versions: Major changes to methodology (e.g. adding new data
            sources to the model that lead to major output changes). Such
            changes will be infrequent and announced well in advance. Might
            involve API version changes, which will respect guidelines in
            https://cloud.google.com/endpoints/docs/openapi/versioning-an-api#backwards-incompatible
          format: int32
        patch:
          description: >-
            Patch versions: Implementation changes meant to address bugs or
            inaccuracies in the model implementation.
          format: int32
          type: integer
      id: ModelVersion
      description: >-
        Travel Impact Model version. For more information about the model
        versioning see
        https://github.com/google/travel-impact-model/#versioning.
      type: object
    ComputeFlightEmissionsResponse:
      description: Output definition for the ComputeFlightEmissions response.
      properties:
        modelVersion:
          description: >-
            The model version under which emission estimates for all flights in
            this response were computed.
          $ref: '#/components/schemas/ModelVersion'
        flightEmissions:
          type: array
          description: List of flight legs with emission estimates.
          items:
            $ref: '#/components/schemas/FlightWithEmissions'
      id: ComputeFlightEmissionsResponse
      type: object
    Flight:
      description: >-
        All details related to a single request item for a direct flight
        emission estimates.
      properties:
        operatingCarrierCode:
          type: string
          description: Required. IATA carrier code, e.g. "AA".
        destination:
          type: string
          description: Required. IATA airport code for flight destination, e.g. "JFK".
        departureDate:
          $ref: '#/components/schemas/Date'
          description: >-
            Required. Date of the flight in the time zone of the origin airport.
            Must be a date in the present or future.
        flightNumber:
          type: integer
          format: int32
          description: Required. Flight number, e.g. 324.
        origin:
          type: string
          description: Required. IATA airport code for flight origin, e.g. "LHR".
      id: Flight
      type: object
    ComputeFlightEmissionsRequest:
      description: Input definition for the ComputeFlightEmissions request.
      type: object
      id: ComputeFlightEmissionsRequest
      properties:
        flights:
          description: Required. Direct flights to return emission estimates for.
          type: array
          items:
            $ref: '#/components/schemas/Flight'
    Date:
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      type: object
      properties:
        month:
          format: int32
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          type: integer
        day:
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
          format: int32
          type: integer
        year:
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
          format: int32
          type: integer
      id: Date
    FlightWithEmissions:
      description: Direct flight with emission estimates.
      properties:
        flight:
          description: >-
            Required. Matches the flight identifiers in the request. Note: all
            IATA codes are capitalized.
          $ref: '#/components/schemas/Flight'
        emissionsGramsPerPax:
          $ref: '#/components/schemas/EmissionsGramsPerPax'
          description: >-
            Optional. Per-passenger emission estimate numbers. Will not be
            present if emissions could not be computed. For the list of reasons
            why emissions could not be computed, see ComputeFlightEmissions.
      type: object
      id: FlightWithEmissions
    EmissionsGramsPerPax:
      description: Grouped emissions per seating class results.
      properties:
        economy:
          description: >-
            Emissions for one passenger in economy class in grams. This field is
            always computed and populated, regardless of whether the aircraft
            has economy class seats or not.
          type: integer
          format: int32
        business:
          format: int32
          type: integer
          description: >-
            Emissions for one passenger in business class in grams. This field
            is always computed and populated, regardless of whether the aircraft
            has business class seats or not.
        first:
          description: >-
            Emissions for one passenger in first class in grams. This field is
            always computed and populated, regardless of whether the aircraft
            has first class seats or not.
          format: int32
          type: integer
        premiumEconomy:
          format: int32
          type: integer
          description: >-
            Emissions for one passenger in premium economy class in grams. This
            field is always computed and populated, regardless of whether the
            aircraft has premium economy class seats or not.
      id: EmissionsGramsPerPax
      type: object
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-translation: Translate text from one language to another using Google Translate
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/flights:computeFlightEmissions:
    parameters:
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
    post:
      description: >-
        Stateless method to retrieve emission estimates. Details on how emission
        estimates are computed: https://github.com/google/travel-impact-model
        The response will contain all entries that match the input flight legs,
        in the same order. If there are no estimates available for a certain
        flight leg, the response will return the flight leg object with empty
        emission fields. The request will still be considered successful.
        Reasons for missing emission estimates include: - The flight is unknown
        to the server. - The input flight leg is missing one or more
        identifiers. - The flight date is in the past. - The aircraft type is
        not supported by the model. - Missing seat configuration. The request
        can contain up to 1000 flight legs. If the request has more than 1000
        direct flights, if will fail with an INVALID_ARGUMENT error.
      operationId: travelimpactmodel.flights.computeFlightEmissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputeFlightEmissionsRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeFlightEmissionsResponse'
      parameters: []
      x-stackQL-resource: flights
      x-stackQL-verb: exec
