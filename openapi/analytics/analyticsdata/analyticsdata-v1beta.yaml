openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Analytics Data API
  description: Accesses report data in Google Analytics.
  version: v1beta
  x-discovery-doc-revision: '20230621'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/analytics/devguides/reporting/data/v1/
servers:
  - url: https://analyticsdata.googleapis.com
components:
  schemas:
    CaseExpression:
      id: CaseExpression
      description: Used to convert a dimension value to a single case.
      type: object
      properties:
        dimensionName:
          description: >-
            Name of a dimension. The name must refer back to a name in
            dimensions field of the request.
          type: string
    DimensionValue:
      description: The value of a dimension.
      type: object
      properties:
        value:
          type: string
          description: Value as a string if the dimension type is a string.
      id: DimensionValue
    BatchRunReportsRequest:
      id: BatchRunReportsRequest
      description: The batch request containing multiple report requests.
      properties:
        requests:
          description: >-
            Individual requests. Each request has a separate report response.
            Each batch request is allowed up to 5 requests.
          type: array
          items:
            $ref: '#/components/schemas/RunReportRequest'
      type: object
    PivotSelection:
      properties:
        dimensionValue:
          description: Order by only when the named dimension is this value.
          type: string
        dimensionName:
          type: string
          description: Must be a dimension name from the request.
      type: object
      id: PivotSelection
      description: >-
        A pair of dimension names and values. Rows with this dimension pivot
        pair are ordered by the metric's value. For example if pivots =
        {{"browser", "Chrome"}} and metric_name = "Sessions", then the rows will
        be sorted based on Sessions in Chrome.
        ---------|----------|----------------|----------|---------------- |
        Chrome | Chrome | Safari | Safari
        ---------|----------|----------------|----------|----------------
        Country | Sessions | Pages/Sessions | Sessions | Pages/Sessions
        ---------|----------|----------------|----------|---------------- US | 2
        | 2 | 3 | 1
        ---------|----------|----------------|----------|---------------- Canada
        | 3 | 1 | 4 | 1
        ---------|----------|----------------|----------|----------------
    BatchRunPivotReportsResponse:
      id: BatchRunPivotReportsResponse
      description: The batch response containing multiple pivot reports.
      properties:
        kind:
          description: >-
            Identifies what kind of resource this message is. This `kind` is
            always the fixed string "analyticsData#batchRunPivotReports". Useful
            to distinguish between response types in JSON.
          type: string
        pivotReports:
          description: >-
            Individual responses. Each response has a separate pivot report
            request.
          type: array
          items:
            $ref: '#/components/schemas/RunPivotReportResponse'
      type: object
    MetricMetadata:
      description: Explains a metric.
      id: MetricMetadata
      type: object
      properties:
        description:
          type: string
          description: Description of how this metric is used and calculated.
        customDefinition:
          description: True if the metric is a custom metric for this property.
          type: boolean
        category:
          description: >-
            The display name of the category that this metrics belongs to.
            Similar dimensions and metrics are categorized together.
          type: string
        deprecatedApiNames:
          type: array
          description: >-
            Still usable but deprecated names for this metric. If populated,
            this metric is available by either `apiName` or one of
            `deprecatedApiNames` for a period of time. After the deprecation
            period, the metric will be available only by `apiName`.
          items:
            type: string
        expression:
          description: >-
            The mathematical expression for this derived metric. Can be used in
            [Metric](#Metric)'s `expression` field for equivalent reports. Most
            metrics are not expressions, and for non-expressions, this field is
            empty.
          type: string
        type:
          description: The type of this metric.
          enumDescriptions:
            - Unspecified type.
            - Integer type.
            - Floating point type.
            - A duration of seconds; a special floating point type.
            - A duration in milliseconds; a special floating point type.
            - A duration in minutes; a special floating point type.
            - A duration in hours; a special floating point type.
            - A custom metric of standard type; a special floating point type.
            - An amount of money; a special floating point type.
            - A length in feet; a special floating point type.
            - A length in miles; a special floating point type.
            - A length in meters; a special floating point type.
            - A length in kilometers; a special floating point type.
          enum:
            - METRIC_TYPE_UNSPECIFIED
            - TYPE_INTEGER
            - TYPE_FLOAT
            - TYPE_SECONDS
            - TYPE_MILLISECONDS
            - TYPE_MINUTES
            - TYPE_HOURS
            - TYPE_STANDARD
            - TYPE_CURRENCY
            - TYPE_FEET
            - TYPE_MILES
            - TYPE_METERS
            - TYPE_KILOMETERS
          type: string
        blockedReasons:
          items:
            type: string
            enumDescriptions:
              - Will never be specified in API response.
              - >-
                If present, your access is blocked to revenue related metrics
                for this property, and this metric is revenue related.
              - >-
                If present, your access is blocked to cost related metrics for
                this property, and this metric is cost related.
            enum:
              - BLOCKED_REASON_UNSPECIFIED
              - NO_REVENUE_METRICS
              - NO_COST_METRICS
          type: array
          description: >-
            If reasons are specified, your access is blocked to this metric for
            this property. API requests from you to this property for this
            metric will succeed; however, the report will contain only zeros for
            this metric. API requests with metric filters on blocked metrics
            will fail. If reasons are empty, you have access to this metric. To
            learn more, see [Access and data-restriction
            management](https://support.google.com/analytics/answer/10851388).
        uiName:
          type: string
          description: >-
            This metric's name within the Google Analytics user interface. For
            example, `Event count`.
        apiName:
          type: string
          description: >-
            A metric name. Useable in [Metric](#Metric)'s `name`. For example,
            `eventCount`.
    CohortsRange:
      id: CohortsRange
      type: object
      description: >-
        Configures the extended reporting date range for a cohort report.
        Specifies an offset duration to follow the cohorts over.
      properties:
        granularity:
          enum:
            - GRANULARITY_UNSPECIFIED
            - DAILY
            - WEEKLY
            - MONTHLY
          type: string
          description: >-
            Required. The granularity used to interpret the `startOffset` and
            `endOffset` for the extended reporting date range for a cohort
            report.
          enumDescriptions:
            - Should never be specified.
            - >-
              Daily granularity. Commonly used if the cohort's `dateRange` is a
              single day and the request contains `cohortNthDay`.
            - >-
              Weekly granularity. Commonly used if the cohort's `dateRange` is a
              week in duration (starting on Sunday and ending on Saturday) and
              the request contains `cohortNthWeek`.
            - >-
              Monthly granularity. Commonly used if the cohort's `dateRange` is
              a month in duration and the request contains `cohortNthMonth`.
        startOffset:
          description: >-
            `startOffset` specifies the start date of the extended reporting
            date range for a cohort report. `startOffset` is commonly set to 0
            so that reports contain data from the acquisition of the cohort
            forward. If `granularity` is `DAILY`, the `startDate` of the
            extended reporting date range is `startDate` of the cohort plus
            `startOffset` days. If `granularity` is `WEEKLY`, the `startDate` of
            the extended reporting date range is `startDate` of the cohort plus
            `startOffset * 7` days. If `granularity` is `MONTHLY`, the
            `startDate` of the extended reporting date range is `startDate` of
            the cohort plus `startOffset * 30` days.
          format: int32
          type: integer
        endOffset:
          format: int32
          description: >-
            Required. `endOffset` specifies the end date of the extended
            reporting date range for a cohort report. `endOffset` can be any
            positive integer but is commonly set to 5 to 10 so that reports
            contain data on the cohort for the next several granularity time
            periods. If `granularity` is `DAILY`, the `endDate` of the extended
            reporting date range is `endDate` of the cohort plus `endOffset`
            days. If `granularity` is `WEEKLY`, the `endDate` of the extended
            reporting date range is `endDate` of the cohort plus `endOffset * 7`
            days. If `granularity` is `MONTHLY`, the `endDate` of the extended
            reporting date range is `endDate` of the cohort plus `endOffset *
            30` days.
          type: integer
    MetricValue:
      type: object
      id: MetricValue
      properties:
        value:
          type: string
          description: Measurement value. See MetricHeader for type.
      description: The value of a metric.
    InListFilter:
      type: object
      id: InListFilter
      description: The result needs to be in a list of string values.
      properties:
        caseSensitive:
          description: If true, the string value is case sensitive.
          type: boolean
        values:
          type: array
          description: The list of string values. Must be non-empty.
          items:
            type: string
    FilterExpression:
      id: FilterExpression
      type: object
      description: >-
        To express dimension or metric filters. The fields in the same
        FilterExpression need to be either all dimensions or all metrics.
      properties:
        orGroup:
          $ref: '#/components/schemas/FilterExpressionList'
          description: The FilterExpressions in or_group have an OR relationship.
        filter:
          description: >-
            A primitive filter. In the same FilterExpression, all of the
            filter's field names need to be either all dimensions or all
            metrics.
          $ref: '#/components/schemas/Filter'
        notExpression:
          $ref: '#/components/schemas/FilterExpression'
          description: The FilterExpression is NOT of not_expression.
        andGroup:
          $ref: '#/components/schemas/FilterExpressionList'
          description: The FilterExpressions in and_group have an AND relationship.
    RunReportRequest:
      type: object
      description: The request to generate a report.
      properties:
        dimensionFilter:
          $ref: '#/components/schemas/FilterExpression'
          description: >-
            Dimension filters let you ask for only specific dimension values in
            the report. To learn more, see [Fundamentals of Dimension
            Filters](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#dimension_filters)
            for examples. Metrics cannot be used in this filter.
        metricFilter:
          description: >-
            The filter clause of metrics. Applied after aggregating the report's
            rows, similar to SQL having-clause. Dimensions cannot be used in
            this filter.
          $ref: '#/components/schemas/FilterExpression'
        offset:
          description: >-
            The row count of the start row. The first row is counted as row 0.
            When paging, the first request does not specify offset; or
            equivalently, sets offset to 0; the first request returns the first
            `limit` of rows. The second request sets offset to the `limit` of
            the first request; the second request returns the second `limit` of
            rows. To learn more about this pagination parameter, see
            [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
          format: int64
          type: string
        limit:
          description: >-
            The number of rows to return. If unspecified, 10,000 rows are
            returned. The API returns a maximum of 250,000 rows per request, no
            matter how many you ask for. `limit` must be positive. The API can
            also return fewer rows than the requested `limit`, if there aren't
            as many dimension values as the `limit`. For instance, there are
            fewer than 300 possible values for the dimension `country`, so when
            reporting on only `country`, you can't get more than 300 rows, even
            if you set `limit` to a higher value. To learn more about this
            pagination parameter, see
            [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
          format: int64
          type: string
        orderBys:
          description: Specifies how rows are ordered in the response.
          type: array
          items:
            $ref: '#/components/schemas/OrderBy'
        property:
          type: string
          description: >-
            A Google Analytics GA4 property identifier whose events are tracked.
            Specified in the URL path and not the body. To learn more, see
            [where to find your Property
            ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id).
            Within a batch request, this property should either be unspecified
            or consistent with the batch-level property. Example:
            properties/1234
        currencyCode:
          type: string
          description: >-
            A currency code in ISO4217 format, such as "AED", "USD", "JPY". If
            the field is empty, the report uses the property's default currency.
        keepEmptyRows:
          description: >-
            If false or unspecified, each row with all metrics equal to 0 will
            not be returned. If true, these rows will be returned if they are
            not separately removed by a filter. Regardless of this
            `keep_empty_rows` setting, only data recorded by the Google
            Analytics (GA4) property can be displayed in a report. For example
            if a property never logs a `purchase` event, then a query for the
            `eventName` dimension and `eventCount` metric will not have a row
            eventName: "purchase" and eventCount: 0.
          type: boolean
        cohortSpec:
          $ref: '#/components/schemas/CohortSpec'
          description: >-
            Cohort group associated with this request. If there is a cohort
            group in the request the 'cohort' dimension must be present.
        dateRanges:
          description: >-
            Date ranges of data to read. If multiple date ranges are requested,
            each response row will contain a zero based date range index. If two
            date ranges overlap, the event data for the overlapping days is
            included in the response rows for both date ranges. In a cohort
            request, this `dateRanges` must be unspecified.
          items:
            $ref: '#/components/schemas/DateRange'
          type: array
        metrics:
          items:
            $ref: '#/components/schemas/Metric'
          type: array
          description: The metrics requested and displayed.
        dimensions:
          description: The dimensions requested and displayed.
          items:
            $ref: '#/components/schemas/Dimension'
          type: array
        metricAggregations:
          type: array
          description: >-
            Aggregation of metrics. Aggregated metric values will be shown in
            rows where the dimension_values are set to
            "RESERVED_(MetricAggregation)".
          items:
            enum:
              - METRIC_AGGREGATION_UNSPECIFIED
              - TOTAL
              - MINIMUM
              - MAXIMUM
              - COUNT
            type: string
            enumDescriptions:
              - Unspecified operator.
              - SUM operator.
              - Minimum operator.
              - Maximum operator.
              - Count operator.
        returnPropertyQuota:
          description: >-
            Toggles whether to return the current state of this Analytics
            Property's quota. Quota is returned in
            [PropertyQuota](#PropertyQuota).
          type: boolean
      id: RunReportRequest
    RunPivotReportRequest:
      id: RunPivotReportRequest
      description: The request to generate a pivot report.
      properties:
        cohortSpec:
          description: >-
            Cohort group associated with this request. If there is a cohort
            group in the request the 'cohort' dimension must be present.
          $ref: '#/components/schemas/CohortSpec'
        dateRanges:
          type: array
          items:
            $ref: '#/components/schemas/DateRange'
          description: >-
            The date range to retrieve event data for the report. If multiple
            date ranges are specified, event data from each date range is used
            in the report. A special dimension with field name "dateRange" can
            be included in a Pivot's field names; if included, the report
            compares between date ranges. In a cohort request, this `dateRanges`
            must be unspecified.
        dimensionFilter:
          $ref: '#/components/schemas/FilterExpression'
          description: >-
            The filter clause of dimensions. Dimensions must be requested to be
            used in this filter. Metrics cannot be used in this filter.
        dimensions:
          items:
            $ref: '#/components/schemas/Dimension'
          description: >-
            The dimensions requested. All defined dimensions must be used by one
            of the following: dimension_expression, dimension_filter, pivots,
            order_bys.
          type: array
        metricFilter:
          description: >-
            The filter clause of metrics. Applied at post aggregation phase,
            similar to SQL having-clause. Metrics must be requested to be used
            in this filter. Dimensions cannot be used in this filter.
          $ref: '#/components/schemas/FilterExpression'
        property:
          description: >-
            A Google Analytics GA4 property identifier whose events are tracked.
            Specified in the URL path and not the body. To learn more, see
            [where to find your Property
            ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id).
            Within a batch request, this property should either be unspecified
            or consistent with the batch-level property. Example:
            properties/1234
          type: string
        keepEmptyRows:
          description: >-
            If false or unspecified, each row with all metrics equal to 0 will
            not be returned. If true, these rows will be returned if they are
            not separately removed by a filter. Regardless of this
            `keep_empty_rows` setting, only data recorded by the Google
            Analytics (GA4) property can be displayed in a report. For example
            if a property never logs a `purchase` event, then a query for the
            `eventName` dimension and `eventCount` metric will not have a row
            eventName: "purchase" and eventCount: 0.
          type: boolean
        currencyCode:
          description: >-
            A currency code in ISO4217 format, such as "AED", "USD", "JPY". If
            the field is empty, the report uses the property's default currency.
          type: string
        metrics:
          description: >-
            The metrics requested, at least one metric needs to be specified.
            All defined metrics must be used by one of the following:
            metric_expression, metric_filter, order_bys.
          items:
            $ref: '#/components/schemas/Metric'
          type: array
        pivots:
          description: >-
            Describes the visual format of the report's dimensions in columns or
            rows. The union of the fieldNames (dimension names) in all pivots
            must be a subset of dimension names defined in Dimensions. No two
            pivots can share a dimension. A dimension is only visible if it
            appears in a pivot.
          type: array
          items:
            $ref: '#/components/schemas/Pivot'
        returnPropertyQuota:
          description: >-
            Toggles whether to return the current state of this Analytics
            Property's quota. Quota is returned in
            [PropertyQuota](#PropertyQuota).
          type: boolean
      type: object
    Pivot:
      type: object
      description: Describes the visible dimension columns and rows in the report response.
      id: Pivot
      properties:
        offset:
          type: string
          description: The row count of the start row. The first row is counted as row 0.
          format: int64
        fieldNames:
          type: array
          items:
            type: string
          description: >-
            Dimension names for visible columns in the report response.
            Including "dateRange" produces a date range column; for each row in
            the response, dimension values in the date range column will
            indicate the corresponding date range from the request.
        orderBys:
          items:
            $ref: '#/components/schemas/OrderBy'
          type: array
          description: >-
            Specifies how dimensions are ordered in the pivot. In the first
            Pivot, the OrderBys determine Row and PivotDimensionHeader ordering;
            in subsequent Pivots, the OrderBys determine only
            PivotDimensionHeader ordering. Dimensions specified in these
            OrderBys must be a subset of Pivot.field_names.
        limit:
          description: >-
            The number of unique combinations of dimension values to return in
            this pivot. The `limit` parameter is required. A `limit` of 10,000
            is common for single pivot requests. The product of the `limit` for
            each `pivot` in a `RunPivotReportRequest` must not exceed 250,000.
            For example, a two pivot request with `limit: 1000` in each pivot
            will fail because the product is `1,000,000`.
          type: string
          format: int64
        metricAggregations:
          items:
            enumDescriptions:
              - Unspecified operator.
              - SUM operator.
              - Minimum operator.
              - Maximum operator.
              - Count operator.
            enum:
              - METRIC_AGGREGATION_UNSPECIFIED
              - TOTAL
              - MINIMUM
              - MAXIMUM
              - COUNT
            type: string
          type: array
          description: >-
            Aggregate the metrics by dimensions in this pivot using the
            specified metric_aggregations.
    DimensionExpression:
      type: object
      description: >-
        Used to express a dimension which is the result of a formula of multiple
        dimensions. Example usages: 1) lower_case(dimension) 2)
        concatenate(dimension1, symbol, dimension2).
      id: DimensionExpression
      properties:
        lowerCase:
          description: Used to convert a dimension value to lower case.
          $ref: '#/components/schemas/CaseExpression'
        upperCase:
          description: Used to convert a dimension value to upper case.
          $ref: '#/components/schemas/CaseExpression'
        concatenate:
          $ref: '#/components/schemas/ConcatenateExpression'
          description: >-
            Used to combine dimension values to a single dimension. For example,
            dimension "country, city": concatenate(country, ", ", city).
    DimensionOrderBy:
      description: Sorts by dimension values.
      id: DimensionOrderBy
      properties:
        orderType:
          type: string
          enum:
            - ORDER_TYPE_UNSPECIFIED
            - ALPHANUMERIC
            - CASE_INSENSITIVE_ALPHANUMERIC
            - NUMERIC
          enumDescriptions:
            - Unspecified.
            - >-
              Alphanumeric sort by Unicode code point. For example, "2" < "A" <
              "X" < "b" < "z".
            - >-
              Case insensitive alphanumeric sort by lower case Unicode code
              point. For example, "2" < "A" < "b" < "X" < "z".
            - >-
              Dimension values are converted to numbers before sorting. For
              example in NUMERIC sort, "25" < "100", and in `ALPHANUMERIC` sort,
              "100" < "25". Non-numeric dimension values all have equal ordering
              value below all numeric values.
          description: Controls the rule for dimension value ordering.
        dimensionName:
          type: string
          description: A dimension name in the request to order by.
      type: object
    Metric:
      id: Metric
      type: object
      properties:
        expression:
          description: >-
            A mathematical expression for derived metrics. For example, the
            metric Event count per user is `eventCount/totalUsers`.
          type: string
        invisible:
          type: boolean
          description: >-
            Indicates if a metric is invisible in the report response. If a
            metric is invisible, the metric will not produce a column in the
            response, but can be used in `metricFilter`, `orderBys`, or a metric
            `expression`.
        name:
          description: >-
            The name of the metric. See the [API
            Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#metrics)
            for the list of metric names. If `expression` is specified, `name`
            can be any string that you would like within the allowed character
            set. For example if `expression` is `screenPageViews/sessions`, you
            could call that metric's name = `viewsPerSession`. Metric names that
            you choose must match the regular expression `^[a-zA-Z0-9_]$`.
            Metrics are referenced by `name` in `metricFilter`, `orderBys`, and
            metric `expression`.
          type: string
      description: >-
        The quantitative measurements of a report. For example, the metric
        `eventCount` is the total number of events. Requests are allowed up to
        10 metrics.
    MetricCompatibility:
      id: MetricCompatibility
      type: object
      properties:
        compatibility:
          enum:
            - COMPATIBILITY_UNSPECIFIED
            - COMPATIBLE
            - INCOMPATIBLE
          description: >-
            The compatibility of this metric. If the compatibility is
            COMPATIBLE, this metric can be successfully added to the report.
          type: string
          enumDescriptions:
            - Unspecified compatibility.
            - >-
              The dimension or metric is compatible. This dimension or metric
              can be successfully added to a report.
            - >-
              The dimension or metric is incompatible. This dimension or metric
              cannot be successfully added to a report.
        metricMetadata:
          description: >-
            The metric metadata contains the API name for this compatibility
            information. The metric metadata also contains other helpful
            information like the UI name and description.
          $ref: '#/components/schemas/MetricMetadata'
      description: The compatibility for a single metric.
    MetricHeader:
      id: MetricHeader
      properties:
        type:
          enum:
            - METRIC_TYPE_UNSPECIFIED
            - TYPE_INTEGER
            - TYPE_FLOAT
            - TYPE_SECONDS
            - TYPE_MILLISECONDS
            - TYPE_MINUTES
            - TYPE_HOURS
            - TYPE_STANDARD
            - TYPE_CURRENCY
            - TYPE_FEET
            - TYPE_MILES
            - TYPE_METERS
            - TYPE_KILOMETERS
          enumDescriptions:
            - Unspecified type.
            - Integer type.
            - Floating point type.
            - A duration of seconds; a special floating point type.
            - A duration in milliseconds; a special floating point type.
            - A duration in minutes; a special floating point type.
            - A duration in hours; a special floating point type.
            - A custom metric of standard type; a special floating point type.
            - An amount of money; a special floating point type.
            - A length in feet; a special floating point type.
            - A length in miles; a special floating point type.
            - A length in meters; a special floating point type.
            - A length in kilometers; a special floating point type.
          type: string
          description: The metric's data type.
        name:
          description: The metric's name.
          type: string
      description: >-
        Describes a metric column in the report. Visible metrics requested in a
        report produce column entries within rows and MetricHeaders. However,
        metrics used exclusively within filters or expressions do not produce
        columns in a report; correspondingly, those metrics do not produce
        headers.
      type: object
    DateRange:
      type: object
      id: DateRange
      description: >-
        A contiguous set of days: startDate, startDate + 1, ..., endDate.
        Requests are allowed up to 4 date ranges.
      properties:
        name:
          type: string
          description: >-
            Assigns a name to this date range. The dimension `dateRange` is
            valued to this name in a report response. If set, cannot begin with
            `date_range_` or `RESERVED_`. If not set, date ranges are named by
            their zero based index in the request: `date_range_0`,
            `date_range_1`, etc.
        startDate:
          description: >-
            The inclusive start date for the query in the format `YYYY-MM-DD`.
            Cannot be after `end_date`. The format `NdaysAgo`, `yesterday`, or
            `today` is also accepted, and in that case, the date is inferred
            based on the property's reporting time zone.
          type: string
        endDate:
          type: string
          description: >-
            The inclusive end date for the query in the format `YYYY-MM-DD`.
            Cannot be before `start_date`. The format `NdaysAgo`, `yesterday`,
            or `today` is also accepted, and in that case, the date is inferred
            based on the property's reporting time zone.
    DimensionMetadata:
      description: Explains a dimension.
      type: object
      properties:
        apiName:
          type: string
          description: >-
            This dimension's name. Useable in [Dimension](#Dimension)'s `name`.
            For example, `eventName`.
        description:
          type: string
          description: Description of how this dimension is used and calculated.
        customDefinition:
          type: boolean
          description: True if the dimension is a custom dimension for this property.
        deprecatedApiNames:
          items:
            type: string
          type: array
          description: >-
            Still usable but deprecated names for this dimension. If populated,
            this dimension is available by either `apiName` or one of
            `deprecatedApiNames` for a period of time. After the deprecation
            period, the dimension will be available only by `apiName`.
        uiName:
          type: string
          description: >-
            This dimension's name within the Google Analytics user interface.
            For example, `Event name`.
        category:
          description: >-
            The display name of the category that this dimension belongs to.
            Similar dimensions and metrics are categorized together.
          type: string
      id: DimensionMetadata
    NumericValue:
      description: To represent a number.
      properties:
        doubleValue:
          description: Double value
          format: double
          type: number
        int64Value:
          type: string
          format: int64
          description: Integer value
      id: NumericValue
      type: object
    OrderBy:
      description: >-
        Order bys define how rows will be sorted in the response. For example,
        ordering rows by descending event count is one ordering, and ordering
        rows by the event name string is a different ordering.
      type: object
      properties:
        desc:
          type: boolean
          description: If true, sorts by descending order.
        dimension:
          $ref: '#/components/schemas/DimensionOrderBy'
          description: Sorts results by a dimension's values.
        metric:
          $ref: '#/components/schemas/MetricOrderBy'
          description: Sorts results by a metric's values.
        pivot:
          description: Sorts results by a metric's values within a pivot column group.
          $ref: '#/components/schemas/PivotOrderBy'
      id: OrderBy
    FilterExpressionList:
      properties:
        expressions:
          items:
            $ref: '#/components/schemas/FilterExpression'
          description: A list of filter expressions.
          type: array
      type: object
      description: A list of filter expressions.
      id: FilterExpressionList
    MetricOrderBy:
      properties:
        metricName:
          type: string
          description: A metric name in the request to order by.
      type: object
      description: Sorts by metric values.
      id: MetricOrderBy
    BatchRunReportsResponse:
      id: BatchRunReportsResponse
      description: The batch response containing multiple reports.
      type: object
      properties:
        kind:
          description: >-
            Identifies what kind of resource this message is. This `kind` is
            always the fixed string "analyticsData#batchRunReports". Useful to
            distinguish between response types in JSON.
          type: string
        reports:
          description: Individual responses. Each response has a separate report request.
          items:
            $ref: '#/components/schemas/RunReportResponse'
          type: array
    RunPivotReportResponse:
      id: RunPivotReportResponse
      properties:
        metricHeaders:
          items:
            $ref: '#/components/schemas/MetricHeader'
          type: array
          description: >-
            Describes metric columns. The number of MetricHeaders and ordering
            of MetricHeaders matches the metrics present in rows.
        rows:
          items:
            $ref: '#/components/schemas/Row'
          type: array
          description: >-
            Rows of dimension value combinations and metric values in the
            report.
        propertyQuota:
          $ref: '#/components/schemas/PropertyQuota'
          description: This Analytics Property's quota state including this request.
        aggregates:
          description: >-
            Aggregation of metric values. Can be totals, minimums, or maximums.
            The returned aggregations are controlled by the metric_aggregations
            in the pivot. The type of aggregation returned in each row is shown
            by the dimension_values which are set to "RESERVED_".
          type: array
          items:
            $ref: '#/components/schemas/Row'
        pivotHeaders:
          items:
            $ref: '#/components/schemas/PivotHeader'
          description: >-
            Summarizes the columns and rows created by a pivot. Each pivot in
            the request produces one header in the response. If we have a
            request like this: "pivots": [{ "fieldNames": ["country", "city"] },
            { "fieldNames": "eventName" }] We will have the following
            `pivotHeaders` in the response: "pivotHeaders" : [{
            "dimensionHeaders": [{ "dimensionValues": [ { "value": "United
            Kingdom" }, { "value": "London" } ] }, { "dimensionValues": [ {
            "value": "Japan" }, { "value": "Osaka" } ] }] }, {
            "dimensionHeaders": [{ "dimensionValues": [{ "value":
            "session_start" }] }, { "dimensionValues": [{ "value": "scroll" }]
            }] }]
          type: array
        kind:
          type: string
          description: >-
            Identifies what kind of resource this message is. This `kind` is
            always the fixed string "analyticsData#runPivotReport". Useful to
            distinguish between response types in JSON.
        metadata:
          $ref: '#/components/schemas/ResponseMetaData'
          description: Metadata for the report.
        dimensionHeaders:
          items:
            $ref: '#/components/schemas/DimensionHeader'
          type: array
          description: >-
            Describes dimension columns. The number of DimensionHeaders and
            ordering of DimensionHeaders matches the dimensions present in rows.
      description: The response pivot report table corresponding to a pivot request.
      type: object
    MinuteRange:
      type: object
      description: >-
        A contiguous set of minutes: startMinutesAgo, startMinutesAgo + 1, ...,
        endMinutesAgo. Requests are allowed up to 2 minute ranges.
      properties:
        endMinutesAgo:
          type: integer
          format: int32
          description: >-
            The inclusive end minute for the query as a number of minutes before
            now. Cannot be before `startMinutesAgo`. For example,
            `"endMinutesAgo": 15` specifies the report should include event data
            from prior to 15 minutes ago. If unspecified, `endMinutesAgo` is
            defaulted to 0. Standard Analytics properties can request any minute
            in the last 30 minutes of event data (`endMinutesAgo <= 29`), and
            360 Analytics properties can request any minute in the last 60
            minutes of event data (`endMinutesAgo <= 59`).
        name:
          description: >-
            Assigns a name to this minute range. The dimension `dateRange` is
            valued to this name in a report response. If set, cannot begin with
            `date_range_` or `RESERVED_`. If not set, minute ranges are named by
            their zero based index in the request: `date_range_0`,
            `date_range_1`, etc.
          type: string
        startMinutesAgo:
          type: integer
          format: int32
          description: >-
            The inclusive start minute for the query as a number of minutes
            before now. For example, `"startMinutesAgo": 29` specifies the
            report should include event data from 29 minutes ago and after.
            Cannot be after `endMinutesAgo`. If unspecified, `startMinutesAgo`
            is defaulted to 29. Standard Analytics properties can request up to
            the last 30 minutes of event data (`startMinutesAgo <= 29`), and 360
            Analytics properties can request up to the last 60 minutes of event
            data (`startMinutesAgo <= 59`).
      id: MinuteRange
    Metadata:
      id: Metadata
      properties:
        name:
          description: Resource name of this metadata.
          type: string
        metrics:
          type: array
          description: The metric descriptions.
          items:
            $ref: '#/components/schemas/MetricMetadata'
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/DimensionMetadata'
          description: The dimension descriptions.
      type: object
      description: The dimensions and metrics currently accepted in reporting methods.
    PivotHeader:
      id: PivotHeader
      properties:
        rowCount:
          format: int32
          description: >-
            The cardinality of the pivot. The total number of rows for this
            pivot's fields regardless of how the parameters `offset` and `limit`
            are specified in the request.
          type: integer
        pivotDimensionHeaders:
          type: array
          description: >-
            The size is the same as the cardinality of the corresponding
            dimension combinations.
          items:
            $ref: '#/components/schemas/PivotDimensionHeader'
      description: Dimensions' values in a single pivot.
      type: object
    PivotDimensionHeader:
      properties:
        dimensionValues:
          description: Values of multiple dimensions in a pivot.
          items:
            $ref: '#/components/schemas/DimensionValue'
          type: array
      description: Summarizes dimension values from a row for this pivot.
      id: PivotDimensionHeader
      type: object
    PivotOrderBy:
      description: Sorts by a pivot column group.
      properties:
        metricName:
          description: >-
            In the response to order by, order rows by this column. Must be a
            metric name from the request.
          type: string
        pivotSelections:
          description: >-
            Used to select a dimension name and value pivot. If multiple pivot
            selections are given, the sort occurs on rows where all pivot
            selection dimension name and value pairs match the row's dimension
            name and value pair.
          type: array
          items:
            $ref: '#/components/schemas/PivotSelection'
      id: PivotOrderBy
      type: object
    ResponseMetaData:
      id: ResponseMetaData
      properties:
        schemaRestrictionResponse:
          description: >-
            Describes the schema restrictions actively enforced in creating this
            report. To learn more, see [Access and data-restriction
            management](https://support.google.com/analytics/answer/10851388).
          $ref: '#/components/schemas/SchemaRestrictionResponse'
        subjectToThresholding:
          type: boolean
          description: >-
            If `subjectToThresholding` is true, this report is subject to
            thresholding and only returns data that meets the minimum
            aggregation thresholds. It is possible for a request to be subject
            to thresholding thresholding and no data is absent from the report,
            and this happens when all data is above the thresholds. To learn
            more, see [Data
            thresholds](https://support.google.com/analytics/answer/9383630) and
            [About Demographics and
            Interests](https://support.google.com/analytics/answer/2799357).
        currencyCode:
          type: string
          description: >-
            The currency code used in this report. Intended to be used in
            formatting currency metrics like `purchaseRevenue` for
            visualization. If currency_code was specified in the request, this
            response parameter will echo the request parameter; otherwise, this
            response parameter is the property's current currency_code. Currency
            codes are string encodings of currency types from the ISO 4217
            standard (https://en.wikipedia.org/wiki/ISO_4217); for example
            "USD", "EUR", "JPY". To learn more, see
            https://support.google.com/analytics/answer/9796179.
        timeZone:
          type: string
          description: >-
            The property's current timezone. Intended to be used to interpret
            time-based dimensions like `hour` and `minute`. Formatted as strings
            from the IANA Time Zone database (https://www.iana.org/time-zones);
            for example "America/New_York" or "Asia/Tokyo".
        dataLossFromOtherRow:
          type: boolean
          description: >-
            If true, indicates some buckets of dimension combinations are rolled
            into "(other)" row. This can happen for high cardinality reports.
            The metadata parameter dataLossFromOtherRow is populated based on
            the aggregated data table used in the report. The parameter will be
            accurately populated regardless of the filters and limits in the
            report. For example, the (other) row could be dropped from the
            report because the request contains a filter on sessionSource =
            google. This parameter will still be populated if data loss from
            other row was present in the input aggregate data used to generate
            this report. To learn more, see [About the (other) row and data
            sampling](https://support.google.com/analytics/answer/13208658#reports).
        emptyReason:
          description: If empty reason is specified, the report is empty for this reason.
          type: string
      description: >-
        Response's metadata carrying additional information about the report
        content.
      type: object
    SchemaRestrictionResponse:
      id: SchemaRestrictionResponse
      properties:
        activeMetricRestrictions:
          items:
            $ref: '#/components/schemas/ActiveMetricRestriction'
          description: >-
            All restrictions actively enforced in creating the report. For
            example, `purchaseRevenue` always has the restriction type
            `REVENUE_DATA`. However, this active response restriction is only
            populated if the user's custom role disallows access to
            `REVENUE_DATA`.
          type: array
      description: >-
        The schema restrictions actively enforced in creating this report. To
        learn more, see [Access and data-restriction
        management](https://support.google.com/analytics/answer/10851388).
      type: object
    DimensionCompatibility:
      type: object
      properties:
        dimensionMetadata:
          description: >-
            The dimension metadata contains the API name for this compatibility
            information. The dimension metadata also contains other helpful
            information like the UI name and description.
          $ref: '#/components/schemas/DimensionMetadata'
        compatibility:
          enum:
            - COMPATIBILITY_UNSPECIFIED
            - COMPATIBLE
            - INCOMPATIBLE
          description: >-
            The compatibility of this dimension. If the compatibility is
            COMPATIBLE, this dimension can be successfully added to the report.
          type: string
          enumDescriptions:
            - Unspecified compatibility.
            - >-
              The dimension or metric is compatible. This dimension or metric
              can be successfully added to a report.
            - >-
              The dimension or metric is incompatible. This dimension or metric
              cannot be successfully added to a report.
      id: DimensionCompatibility
      description: The compatibility for a single dimension.
    Dimension:
      description: >-
        Dimensions are attributes of your data. For example, the dimension city
        indicates the city from which an event originates. Dimension values in
        report responses are strings; for example, the city could be "Paris" or
        "New York". Requests are allowed up to 9 dimensions.
      type: object
      properties:
        name:
          type: string
          description: >-
            The name of the dimension. See the [API
            Dimensions](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#dimensions)
            for the list of dimension names. If `dimensionExpression` is
            specified, `name` can be any string that you would like within the
            allowed character set. For example if a `dimensionExpression`
            concatenates `country` and `city`, you could call that dimension
            `countryAndCity`. Dimension names that you choose must match the
            regular expression `^[a-zA-Z0-9_]$`. Dimensions are referenced by
            `name` in `dimensionFilter`, `orderBys`, `dimensionExpression`, and
            `pivots`.
        dimensionExpression:
          $ref: '#/components/schemas/DimensionExpression'
          description: >-
            One dimension can be the result of an expression of multiple
            dimensions. For example, dimension "country, city":
            concatenate(country, ", ", city).
      id: Dimension
    CohortReportSettings:
      id: CohortReportSettings
      type: object
      properties:
        accumulate:
          description: >-
            If true, accumulates the result from first touch day to the end day.
            Not supported in `RunReportRequest`.
          type: boolean
      description: Optional settings of a cohort report.
    QuotaStatus:
      description: Current state for a particular quota group.
      id: QuotaStatus
      properties:
        consumed:
          description: Quota consumed by this request.
          format: int32
          type: integer
        remaining:
          type: integer
          format: int32
          description: Quota remaining after this request.
      type: object
    ConcatenateExpression:
      properties:
        dimensionNames:
          items:
            type: string
          description: >-
            Names of dimensions. The names must refer back to names in the
            dimensions field of the request.
          type: array
        delimiter:
          type: string
          description: >-
            The delimiter placed between dimension names. Delimiters are often
            single characters such as "|" or "," but can be longer strings. If a
            dimension value contains the delimiter, both will be present in
            response with no distinction. For example if dimension 1 value =
            "US,FR", dimension 2 value = "JP", and delimiter = ",", then the
            response will contain "US,FR,JP".
      type: object
      id: ConcatenateExpression
      description: Used to combine dimension values to a single dimension.
    RunReportResponse:
      type: object
      properties:
        minimums:
          description: If requested, the minimum values of metrics.
          type: array
          items:
            $ref: '#/components/schemas/Row'
        kind:
          description: >-
            Identifies what kind of resource this message is. This `kind` is
            always the fixed string "analyticsData#runReport". Useful to
            distinguish between response types in JSON.
          type: string
        rowCount:
          description: >-
            The total number of rows in the query result. `rowCount` is
            independent of the number of rows returned in the response, the
            `limit` request parameter, and the `offset` request parameter. For
            example if a query returns 175 rows and includes `limit` of 50 in
            the API request, the response will contain `rowCount` of 175 but
            only 50 rows. To learn more about this pagination parameter, see
            [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
          type: integer
          format: int32
        metricHeaders:
          type: array
          description: >-
            Describes metric columns. The number of MetricHeaders and ordering
            of MetricHeaders matches the metrics present in rows.
          items:
            $ref: '#/components/schemas/MetricHeader'
        rows:
          type: array
          description: >-
            Rows of dimension value combinations and metric values in the
            report.
          items:
            $ref: '#/components/schemas/Row'
        dimensionHeaders:
          type: array
          description: >-
            Describes dimension columns. The number of DimensionHeaders and
            ordering of DimensionHeaders matches the dimensions present in rows.
          items:
            $ref: '#/components/schemas/DimensionHeader'
        totals:
          description: If requested, the totaled values of metrics.
          items:
            $ref: '#/components/schemas/Row'
          type: array
        metadata:
          description: Metadata for the report.
          $ref: '#/components/schemas/ResponseMetaData'
        maximums:
          description: If requested, the maximum values of metrics.
          items:
            $ref: '#/components/schemas/Row'
          type: array
        propertyQuota:
          description: This Analytics Property's quota state including this request.
          $ref: '#/components/schemas/PropertyQuota'
      description: The response report table corresponding to a request.
      id: RunReportResponse
    BetweenFilter:
      id: BetweenFilter
      type: object
      properties:
        toValue:
          description: Ends with this number.
          $ref: '#/components/schemas/NumericValue'
        fromValue:
          description: Begins with this number.
          $ref: '#/components/schemas/NumericValue'
      description: To express that the result needs to be between two numbers (inclusive).
    DimensionHeader:
      type: object
      description: >-
        Describes a dimension column in the report. Dimensions requested in a
        report produce column entries within rows and DimensionHeaders. However,
        dimensions used exclusively within filters or expressions do not produce
        columns in a report; correspondingly, those dimensions do not produce
        headers.
      properties:
        name:
          description: The dimension's name.
          type: string
      id: DimensionHeader
    Filter:
      properties:
        inListFilter:
          $ref: '#/components/schemas/InListFilter'
          description: A filter for in list values.
        stringFilter:
          $ref: '#/components/schemas/StringFilter'
          description: Strings related filter.
        betweenFilter:
          $ref: '#/components/schemas/BetweenFilter'
          description: A filter for two values.
        fieldName:
          type: string
          description: >-
            The dimension name or metric name. In most methods, dimensions &
            metrics can be used for the first time in this field. However in a
            RunPivotReportRequest, this field must be additionally specified by
            name in the RunPivotReportRequest's dimensions or metrics.
        numericFilter:
          $ref: '#/components/schemas/NumericFilter'
          description: A filter for numeric or date values.
      id: Filter
      description: An expression to filter dimension or metric values.
      type: object
    StringFilter:
      properties:
        matchType:
          enum:
            - MATCH_TYPE_UNSPECIFIED
            - EXACT
            - BEGINS_WITH
            - ENDS_WITH
            - CONTAINS
            - FULL_REGEXP
            - PARTIAL_REGEXP
          description: The match type for this filter.
          enumDescriptions:
            - Unspecified
            - Exact match of the string value.
            - Begins with the string value.
            - Ends with the string value.
            - Contains the string value.
            - Full match for the regular expression with the string value.
            - Partial match for the regular expression with the string value.
          type: string
        caseSensitive:
          description: If true, the string value is case sensitive.
          type: boolean
        value:
          type: string
          description: The string value used for the matching.
      type: object
      description: The filter for string
      id: StringFilter
    CohortSpec:
      description: >-
        The specification of cohorts for a cohort report. Cohort reports create
        a time series of user retention for the cohort. For example, you could
        select the cohort of users that were acquired in the first week of
        September and follow that cohort for the next six weeks. Selecting the
        users acquired in the first week of September cohort is specified in the
        `cohort` object. Following that cohort for the next six weeks is
        specified in the `cohortsRange` object. For examples, see [Cohort Report
        Examples](https://developers.google.com/analytics/devguides/reporting/data/v1/advanced#cohort_report_examples).
        The report response could show a weekly time series where say your app
        has retained 60% of this cohort after three weeks and 25% of this cohort
        after six weeks. These two percentages can be calculated by the metric
        `cohortActiveUsers/cohortTotalUsers` and will be separate rows in the
        report.
      type: object
      properties:
        cohorts:
          type: array
          description: >-
            Defines the selection criteria to group users into cohorts. Most
            cohort reports define only a single cohort. If multiple cohorts are
            specified, each cohort can be recognized in the report by their
            name.
          items:
            $ref: '#/components/schemas/Cohort'
        cohortsRange:
          $ref: '#/components/schemas/CohortsRange'
          description: >-
            Cohort reports follow cohorts over an extended reporting date range.
            This range specifies an offset duration to follow the cohorts over.
        cohortReportSettings:
          $ref: '#/components/schemas/CohortReportSettings'
          description: Optional settings for a cohort report.
      id: CohortSpec
    RunRealtimeReportRequest:
      description: The request to generate a realtime report.
      id: RunRealtimeReportRequest
      properties:
        limit:
          type: string
          format: int64
          description: >-
            The number of rows to return. If unspecified, 10,000 rows are
            returned. The API returns a maximum of 250,000 rows per request, no
            matter how many you ask for. `limit` must be positive. The API can
            also return fewer rows than the requested `limit`, if there aren't
            as many dimension values as the `limit`. For instance, there are
            fewer than 300 possible values for the dimension `country`, so when
            reporting on only `country`, you can't get more than 300 rows, even
            if you set `limit` to a higher value.
        returnPropertyQuota:
          description: >-
            Toggles whether to return the current state of this Analytics
            Property's Realtime quota. Quota is returned in
            [PropertyQuota](#PropertyQuota).
          type: boolean
        metricAggregations:
          items:
            type: string
            enum:
              - METRIC_AGGREGATION_UNSPECIFIED
              - TOTAL
              - MINIMUM
              - MAXIMUM
              - COUNT
            enumDescriptions:
              - Unspecified operator.
              - SUM operator.
              - Minimum operator.
              - Maximum operator.
              - Count operator.
          description: >-
            Aggregation of metrics. Aggregated metric values will be shown in
            rows where the dimension_values are set to
            "RESERVED_(MetricAggregation)".
          type: array
        orderBys:
          description: Specifies how rows are ordered in the response.
          type: array
          items:
            $ref: '#/components/schemas/OrderBy'
        minuteRanges:
          type: array
          description: >-
            The minute ranges of event data to read. If unspecified, one minute
            range for the last 30 minutes will be used. If multiple minute
            ranges are requested, each response row will contain a zero based
            minute range index. If two minute ranges overlap, the event data for
            the overlapping minutes is included in the response rows for both
            minute ranges.
          items:
            $ref: '#/components/schemas/MinuteRange'
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
          description: The dimensions requested and displayed.
        metrics:
          description: The metrics requested and displayed.
          items:
            $ref: '#/components/schemas/Metric'
          type: array
        metricFilter:
          description: >-
            The filter clause of metrics. Applied at post aggregation phase,
            similar to SQL having-clause. Dimensions cannot be used in this
            filter.
          $ref: '#/components/schemas/FilterExpression'
        dimensionFilter:
          description: >-
            The filter clause of dimensions. Metrics cannot be used in this
            filter.
          $ref: '#/components/schemas/FilterExpression'
      type: object
    CheckCompatibilityRequest:
      description: >-
        The request for compatibility information for a report's dimensions and
        metrics. Check compatibility provides a preview of the compatibility of
        a report; fields shared with the `runReport` request should be the same
        values as in your `runReport` request.
      id: CheckCompatibilityRequest
      properties:
        metricFilter:
          $ref: '#/components/schemas/FilterExpression'
          description: >-
            The filter clause of metrics. `metricFilter` should be the same
            value as in your `runReport` request
        dimensions:
          items:
            $ref: '#/components/schemas/Dimension'
          type: array
          description: >-
            The dimensions in this report. `dimensions` should be the same value
            as in your `runReport` request.
        compatibilityFilter:
          enumDescriptions:
            - Unspecified compatibility.
            - >-
              The dimension or metric is compatible. This dimension or metric
              can be successfully added to a report.
            - >-
              The dimension or metric is incompatible. This dimension or metric
              cannot be successfully added to a report.
          description: >-
            Filters the dimensions and metrics in the response to just this
            compatibility. Commonly used as `”compatibilityFilter”:
            “COMPATIBLE”` to only return compatible dimensions & metrics.
          type: string
          enum:
            - COMPATIBILITY_UNSPECIFIED
            - COMPATIBLE
            - INCOMPATIBLE
        metrics:
          description: >-
            The metrics in this report. `metrics` should be the same value as in
            your `runReport` request.
          type: array
          items:
            $ref: '#/components/schemas/Metric'
        dimensionFilter:
          $ref: '#/components/schemas/FilterExpression'
          description: >-
            The filter clause of dimensions. `dimensionFilter` should be the
            same value as in your `runReport` request.
      type: object
    Row:
      properties:
        dimensionValues:
          items:
            $ref: '#/components/schemas/DimensionValue'
          description: >-
            List of requested dimension values. In a PivotReport,
            dimension_values are only listed for dimensions included in a pivot.
          type: array
        metricValues:
          type: array
          description: List of requested visible metric values.
          items:
            $ref: '#/components/schemas/MetricValue'
      id: Row
      description: >-
        Report data for each row. For example if RunReportRequest contains:
        ```none "dimensions": [ { "name": "eventName" }, { "name": "countryId" }
        ], "metrics": [ { "name": "eventCount" } ] ``` One row with
        'in_app_purchase' as the eventName, 'JP' as the countryId, and 15 as the
        eventCount, would be: ```none "dimensionValues": [ { "value":
        "in_app_purchase" }, { "value": "JP" } ], "metricValues": [ { "value":
        "15" } ] ```
      type: object
    BatchRunPivotReportsRequest:
      id: BatchRunPivotReportsRequest
      type: object
      description: The batch request containing multiple pivot report requests.
      properties:
        requests:
          items:
            $ref: '#/components/schemas/RunPivotReportRequest'
          description: >-
            Individual requests. Each request has a separate pivot report
            response. Each batch request is allowed up to 5 requests.
          type: array
    CheckCompatibilityResponse:
      description: >-
        The compatibility response with the compatibility of each dimension &
        metric.
      properties:
        dimensionCompatibilities:
          items:
            $ref: '#/components/schemas/DimensionCompatibility'
          description: The compatibility of each dimension.
          type: array
        metricCompatibilities:
          description: The compatibility of each metric.
          type: array
          items:
            $ref: '#/components/schemas/MetricCompatibility'
      id: CheckCompatibilityResponse
      type: object
    NumericFilter:
      properties:
        value:
          description: A numeric value or a date value.
          $ref: '#/components/schemas/NumericValue'
        operation:
          type: string
          enumDescriptions:
            - Unspecified.
            - Equal
            - Less than
            - Less than or equal
            - Greater than
            - Greater than or equal
          description: The operation type for this filter.
          enum:
            - OPERATION_UNSPECIFIED
            - EQUAL
            - LESS_THAN
            - LESS_THAN_OR_EQUAL
            - GREATER_THAN
            - GREATER_THAN_OR_EQUAL
      id: NumericFilter
      type: object
      description: Filters for numeric or date values.
    RunRealtimeReportResponse:
      id: RunRealtimeReportResponse
      type: object
      description: The response realtime report table corresponding to a request.
      properties:
        totals:
          description: If requested, the totaled values of metrics.
          items:
            $ref: '#/components/schemas/Row'
          type: array
        propertyQuota:
          description: >-
            This Analytics Property's Realtime quota state including this
            request.
          $ref: '#/components/schemas/PropertyQuota'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Row'
          description: >-
            Rows of dimension value combinations and metric values in the
            report.
        metricHeaders:
          items:
            $ref: '#/components/schemas/MetricHeader'
          type: array
          description: >-
            Describes metric columns. The number of MetricHeaders and ordering
            of MetricHeaders matches the metrics present in rows.
        maximums:
          items:
            $ref: '#/components/schemas/Row'
          type: array
          description: If requested, the maximum values of metrics.
        minimums:
          items:
            $ref: '#/components/schemas/Row'
          type: array
          description: If requested, the minimum values of metrics.
        rowCount:
          type: integer
          description: >-
            The total number of rows in the query result. `rowCount` is
            independent of the number of rows returned in the response and the
            `limit` request parameter. For example if a query returns 175 rows
            and includes `limit` of 50 in the API request, the response will
            contain `rowCount` of 175 but only 50 rows.
          format: int32
        dimensionHeaders:
          description: >-
            Describes dimension columns. The number of DimensionHeaders and
            ordering of DimensionHeaders matches the dimensions present in rows.
          items:
            $ref: '#/components/schemas/DimensionHeader'
          type: array
        kind:
          type: string
          description: >-
            Identifies what kind of resource this message is. This `kind` is
            always the fixed string "analyticsData#runRealtimeReport". Useful to
            distinguish between response types in JSON.
    PropertyQuota:
      properties:
        concurrentRequests:
          $ref: '#/components/schemas/QuotaStatus'
          description: >-
            Standard Analytics Properties can send up to 10 concurrent requests;
            Analytics 360 Properties can use up to 50 concurrent requests.
        tokensPerDay:
          $ref: '#/components/schemas/QuotaStatus'
          description: >-
            Standard Analytics Properties can use up to 200,000 tokens per day;
            Analytics 360 Properties can use 2,000,000 tokens per day. Most
            requests consume fewer than 10 tokens.
        tokensPerProjectPerHour:
          $ref: '#/components/schemas/QuotaStatus'
          description: >-
            Analytics Properties can use up to 35% of their tokens per project
            per hour. This amounts to standard Analytics Properties can use up
            to 14,000 tokens per project per hour, and Analytics 360 Properties
            can use 140,000 tokens per project per hour. An API request consumes
            a single number of tokens, and that number is deducted from all of
            the hourly, daily, and per project hourly quotas.
        potentiallyThresholdedRequestsPerHour:
          description: >-
            Analytics Properties can send up to 120 requests with potentially
            thresholded dimensions per hour. In a batch request, each report
            request is individually counted for this quota if the request
            contains potentially thresholded dimensions.
          $ref: '#/components/schemas/QuotaStatus'
        serverErrorsPerProjectPerHour:
          description: >-
            Standard Analytics Properties and cloud project pairs can have up to
            10 server errors per hour; Analytics 360 Properties and cloud
            project pairs can have up to 50 server errors per hour.
          $ref: '#/components/schemas/QuotaStatus'
        tokensPerHour:
          description: >-
            Standard Analytics Properties can use up to 40,000 tokens per hour;
            Analytics 360 Properties can use 400,000 tokens per hour. An API
            request consumes a single number of tokens, and that number is
            deducted from all of the hourly, daily, and per project hourly
            quotas.
          $ref: '#/components/schemas/QuotaStatus'
      id: PropertyQuota
      description: >-
        Current state of all quotas for this Analytics Property. If any quota
        for a property is exhausted, all requests to that property will return
        Resource Exhausted errors.
      type: object
    Cohort:
      properties:
        name:
          description: >-
            Assigns a name to this cohort. The dimension `cohort` is valued to
            this name in a report response. If set, cannot begin with `cohort_`
            or `RESERVED_`. If not set, cohorts are named by their zero based
            index `cohort_0`, `cohort_1`, etc.
          type: string
        dateRange:
          description: >-
            The cohort selects users whose first touch date is between start
            date and end date defined in the `dateRange`. This `dateRange` does
            not specify the full date range of event data that is present in a
            cohort report. In a cohort report, this `dateRange` is extended by
            the granularity and offset present in the `cohortsRange`; event data
            for the extended reporting date range is present in a cohort report.
            In a cohort request, this `dateRange` is required and the
            `dateRanges` in the `RunReportRequest` or `RunPivotReportRequest`
            must be unspecified. This `dateRange` should generally be aligned
            with the cohort's granularity. If `CohortsRange` uses daily
            granularity, this `dateRange` can be a single day. If `CohortsRange`
            uses weekly granularity, this `dateRange` can be aligned to a week
            boundary, starting at Sunday and ending Saturday. If `CohortsRange`
            uses monthly granularity, this `dateRange` can be aligned to a
            month, starting at the first and ending on the last day of the
            month.
          $ref: '#/components/schemas/DateRange'
        dimension:
          description: >-
            Dimension used by the cohort. Required and only supports
            `firstSessionDate`.
          type: string
      type: object
      id: Cohort
      description: >-
        Defines a cohort selection criteria. A cohort is a group of users who
        share a common characteristic. For example, users with the same
        `firstSessionDate` belong to the same cohort.
    ActiveMetricRestriction:
      id: ActiveMetricRestriction
      properties:
        restrictedMetricTypes:
          description: The reason for this metric's restriction.
          type: array
          items:
            enumDescriptions:
              - Unspecified type.
              - Cost metrics such as `adCost`.
              - Revenue metrics such as `purchaseRevenue`.
            enum:
              - RESTRICTED_METRIC_TYPE_UNSPECIFIED
              - COST_DATA
              - REVENUE_DATA
            type: string
        metricName:
          description: The name of the restricted metric.
          type: string
      description: A metric actively restricted in creating the report.
      type: object
  parameters:
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/analytics.readonly: See and download your Google Analytics data
            https://www.googleapis.com/auth/analytics: View and manage your Google Analytics data
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta/properties/{propertiesId}:runPivotReport:
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
    post:
      description: >-
        Returns a customized pivot report of your Google Analytics event data.
        Pivot reports are more advanced and expressive formats than regular
        reports. In a pivot report, dimensions are only visible if they are
        included in a pivot. Multiple pivots can be specified to further dissect
        your data.
      operationId: analyticsdata.properties.runPivotReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunPivotReportRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunPivotReportResponse'
      parameters:
        - in: path
          name: propertiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: properties
      x-stackQL-verb: exec
  /v1beta/properties/{propertiesId}:batchRunReports:
    parameters: *ref_1
    post:
      description: >-
        Returns multiple reports in a batch. All reports must be for the same
        GA4 Property.
      operationId: analyticsdata.properties.batchRunReports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRunReportsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRunReportsResponse'
      parameters:
        - in: path
          name: propertiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: properties
      x-stackQL-verb: exec
  /v1beta/properties/{propertiesId}:runReport:
    parameters: *ref_1
    post:
      description: >-
        Returns a customized report of your Google Analytics event data. Reports
        contain statistics derived from data collected by the Google Analytics
        tracking code. The data returned from the API is as a table with columns
        for the requested dimensions and metrics. Metrics are individual
        measurements of user activity on your property, such as active users or
        event count. Dimensions break down metrics across some common criteria,
        such as country or event name. For a guide to constructing requests &
        understanding responses, see [Creating a
        Report](https://developers.google.com/analytics/devguides/reporting/data/v1/basics).
      operationId: analyticsdata.properties.runReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunReportRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunReportResponse'
      parameters:
        - in: path
          name: propertiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: properties
      x-stackQL-verb: exec
  /v1beta/properties/{propertiesId}/metadata:
    parameters: *ref_1
    get:
      description: >-
        Returns metadata for dimensions and metrics available in reporting
        methods. Used to explore the dimensions and metrics. In this method, a
        Google Analytics GA4 Property Identifier is specified in the request,
        and the metadata response includes Custom dimensions and metrics as well
        as Universal metadata. For example if a custom metric with parameter
        name `levels_unlocked` is registered to a property, the Metadata
        response will contain `customEvent:levels_unlocked`. Universal metadata
        are dimensions and metrics applicable to any property such as `country`
        and `totalUsers`.
      operationId: analyticsdata.properties.getMetadata
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
      parameters:
        - in: path
          name: propertiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: properties__metadata
      x-stackQL-verb: select
  /v1beta/properties/{propertiesId}:batchRunPivotReports:
    parameters: *ref_1
    post:
      description: >-
        Returns multiple pivot reports in a batch. All reports must be for the
        same GA4 Property.
      operationId: analyticsdata.properties.batchRunPivotReports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRunPivotReportsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRunPivotReportsResponse'
      parameters:
        - in: path
          name: propertiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: properties
      x-stackQL-verb: exec
  /v1beta/properties/{propertiesId}:checkCompatibility:
    parameters: *ref_1
    post:
      description: >-
        This compatibility method lists dimensions and metrics that can be added
        to a report request and maintain compatibility. This method fails if the
        request's dimensions and metrics are incompatible. In Google Analytics,
        reports fail if they request incompatible dimensions and/or metrics; in
        that case, you will need to remove dimensions and/or metrics from the
        incompatible report until the report is compatible. The Realtime and
        Core reports have different compatibility rules. This method checks
        compatibility for Core reports.
      operationId: analyticsdata.properties.checkCompatibility
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckCompatibilityRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckCompatibilityResponse'
      parameters:
        - in: path
          name: propertiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: properties
      x-stackQL-verb: exec
  /v1beta/properties/{propertiesId}:runRealtimeReport:
    parameters: *ref_1
    post:
      description: >-
        Returns a customized report of realtime event data for your property.
        Events appear in realtime reports seconds after they have been sent to
        the Google Analytics. Realtime reports show events and usage data for
        the periods of time ranging from the present moment to 30 minutes ago
        (up to 60 minutes for Google Analytics 360 properties). For a guide to
        constructing realtime requests & understanding responses, see [Creating
        a Realtime
        Report](https://developers.google.com/analytics/devguides/reporting/data/v1/realtime-basics).
      operationId: analyticsdata.properties.runRealtimeReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunRealtimeReportRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/analytics
          Oauth2c:
            - https://www.googleapis.com/auth/analytics
        - Oauth2:
            - https://www.googleapis.com/auth/analytics.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/analytics.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunRealtimeReportResponse'
      parameters:
        - in: path
          name: propertiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: properties
      x-stackQL-verb: exec
