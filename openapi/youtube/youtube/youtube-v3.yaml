openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: YouTube Data API v3
  description: >-
    The YouTube Data API v3 is an API that provides access to YouTube data, such
    as videos, playlists, and channels.
  version: v3
  x-discovery-doc-revision: '20230614'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/youtube/
servers:
  - url: https://youtube.googleapis.com
components:
  schemas:
    LiveStream:
      properties:
        contentDetails:
          description: >-
            The content_details object contains information about the stream,
            including the closed captions ingestion URL.
          $ref: '#/components/schemas/LiveStreamContentDetails'
        id:
          annotations:
            required:
              - youtube.liveStreams.update
          type: string
          description: The ID that YouTube assigns to uniquely identify the stream.
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#liveStream".
          default: youtube#liveStream
        snippet:
          $ref: '#/components/schemas/LiveStreamSnippet'
          description: >-
            The snippet object contains basic details about the stream,
            including its channel, title, and description.
        status:
          description: The status object contains information about live stream's status.
          $ref: '#/components/schemas/LiveStreamStatus'
        etag:
          description: Etag of this resource.
          type: string
        cdn:
          description: >-
            The cdn object defines the live stream's content delivery network
            (CDN) settings. These settings provide details about the manner in
            which you stream your content to YouTube.
          $ref: '#/components/schemas/CdnSettings'
      description: A live stream describes a live ingestion point.
      id: LiveStream
      type: object
    ChannelSection:
      type: object
      id: ChannelSection
      properties:
        contentDetails:
          description: >-
            The contentDetails object contains details about the channel section
            content, such as a list of playlists or channels featured in the
            section.
          $ref: '#/components/schemas/ChannelSectionContentDetails'
        snippet:
          $ref: '#/components/schemas/ChannelSectionSnippet'
          description: >-
            The snippet object contains basic details about the channel section,
            such as its type, style and title.
        targeting:
          description: >-
            The targeting object contains basic targeting settings about the
            channel section.
          $ref: '#/components/schemas/ChannelSectionTargeting'
        kind:
          type: string
          default: youtube#channelSection
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#channelSection".
        localizations:
          description: Localizations for different languages
          additionalProperties:
            $ref: '#/components/schemas/ChannelSectionLocalization'
          type: object
        etag:
          type: string
          description: Etag of this resource.
        id:
          description: The ID that YouTube uses to uniquely identify the channel section.
          type: string
    ImageSettings:
      description: Branding properties for images associated with the channel.
      properties:
        bannerTvMediumImageUrl:
          description: Banner image. TV size medium resolution (1280x720).
          type: string
        trackingImageUrl:
          description: >-
            The URL for a 1px by 1px tracking pixel that can be used to collect
            statistics for views of the channel or video pages.
          type: string
        bannerMobileHdImageUrl:
          type: string
          description: Banner image. Mobile size high resolution (1280x360).
        bannerTabletLowImageUrl:
          type: string
          description: Banner image. Tablet size low resolution (1138x188).
        bannerMobileExtraHdImageUrl:
          description: Banner image. Mobile size high resolution (1440x395).
          type: string
        smallBrandedBannerImageImapScript:
          description: The image map script for the small banner image.
          $ref: '#/components/schemas/LocalizedProperty'
        bannerTvHighImageUrl:
          type: string
          description: Banner image. TV size high resolution (1920x1080).
        bannerTvImageUrl:
          description: Banner image. TV size extra high resolution (2120x1192).
          type: string
        bannerTvLowImageUrl:
          description: Banner image. TV size low resolution (854x480).
          type: string
        smallBrandedBannerImageUrl:
          description: >-
            The URL for the 640px by 70px banner image that appears below the
            video player in the default view of the video watch page. The URL
            for the image that appears above the top-left corner of the video
            player. This is a 25-pixel-high image with a flexible width that
            cannot exceed 170 pixels.
          $ref: '#/components/schemas/LocalizedProperty'
        watchIconImageUrl:
          type: string
        largeBrandedBannerImageImapScript:
          description: The image map script for the large banner image.
          $ref: '#/components/schemas/LocalizedProperty'
        bannerMobileMediumHdImageUrl:
          type: string
          description: Banner image. Mobile size medium/high resolution (960x263).
        bannerTabletImageUrl:
          description: Banner image. Tablet size (1707x283).
          type: string
        largeBrandedBannerImageUrl:
          $ref: '#/components/schemas/LocalizedProperty'
          description: >-
            The URL for the 854px by 70px image that appears below the video
            player in the expanded video view of the video watch page.
        bannerExternalUrl:
          type: string
          description: >-
            This is generated when a ChannelBanner.Insert request has succeeded
            for the given channel.
        bannerTabletHdImageUrl:
          type: string
          description: Banner image. Tablet size high resolution (2276x377).
        backgroundImageUrl:
          description: >-
            The URL for the background image shown on the video watch page. The
            image should be 1200px by 615px, with a maximum file size of 128k.
          $ref: '#/components/schemas/LocalizedProperty'
        bannerTabletExtraHdImageUrl:
          type: string
          description: Banner image. Tablet size extra high resolution (2560x424).
        bannerImageUrl:
          description: Banner image. Desktop size (1060x175).
          type: string
        bannerMobileLowImageUrl:
          description: Banner image. Mobile size low resolution (320x88).
          type: string
        bannerMobileImageUrl:
          type: string
          description: Banner image. Mobile size (640x175).
      id: ImageSettings
      type: object
    LiveChatGiftMembershipReceivedDetails:
      id: LiveChatGiftMembershipReceivedDetails
      properties:
        gifterChannelId:
          type: string
          description: >-
            The ID of the user that made the membership gifting purchase. This
            matches the `snippet.authorChannelId` of the associated membership
            gifting message.
        memberLevelName:
          description: >-
            The name of the Level at which the viewer is a member. This matches
            the `snippet.membershipGiftingDetails.giftMembershipsLevelName` of
            the associated membership gifting message. The Level names are
            defined by the YouTube channel offering the Membership. In some
            situations this field isn't filled.
          type: string
        associatedMembershipGiftingMessageId:
          type: string
          description: >-
            The ID of the membership gifting message that is related to this
            gift membership. This ID will always refer to a message whose type
            is 'membershipGiftingEvent'.
      type: object
    VideoAbuseReport:
      type: object
      properties:
        secondaryReasonId:
          type: string
          description: >-
            The specific, or secondary, reason that this content is abusive (if
            available). The value is an abuse report reason ID that is a valid
            secondary reason for the primary reason.
        reasonId:
          type: string
          description: >-
            The high-level, or primary, reason that the content is abusive. The
            value is an abuse report reason ID.
        videoId:
          description: The ID that YouTube uses to uniquely identify the video.
          type: string
        comments:
          type: string
          description: Additional comments regarding the abuse report.
        language:
          type: string
          description: The language that the content was viewed in.
      id: VideoAbuseReport
    VideoTopicDetails:
      properties:
        topicCategories:
          items:
            type: string
          type: array
          description: >-
            A list of Wikipedia URLs that provide a high-level description of
            the video's content.
        relevantTopicIds:
          items:
            type: string
          description: >-
            Similar to topic_id, except that these topics are merely relevant to
            the video. These are topics that may be mentioned in, or appear in
            the video. You can retrieve information about each topic using
            Freebase Topic API.
          type: array
        topicIds:
          description: >-
            A list of Freebase topic IDs that are centrally associated with the
            video. These are topics that are centrally featured in the video,
            and it can be said that the video is mainly about each of these. You
            can retrieve information about each topic using the < a
            href="http://wiki.freebase.com/wiki/Topic_API">Freebase Topic API.
          type: array
          items:
            type: string
      id: VideoTopicDetails
      description: Freebase topic information related to the video.
      type: object
    I18nLanguage:
      description: >-
        An *i18nLanguage* resource identifies a UI language currently supported
        by YouTube.
      type: object
      properties:
        id:
          description: The ID that YouTube uses to uniquely identify the i18n language.
          type: string
        snippet:
          $ref: '#/components/schemas/I18nLanguageSnippet'
          description: >-
            The snippet object contains basic details about the i18n language,
            such as language code and human-readable name.
        kind:
          type: string
          default: youtube#i18nLanguage
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#i18nLanguage".
        etag:
          description: Etag of this resource.
          type: string
      id: I18nLanguage
    PlaylistItemContentDetails:
      id: PlaylistItemContentDetails
      properties:
        videoPublishedAt:
          type: string
          format: date-time
          description: The date and time that the video was published to YouTube.
        videoId:
          type: string
          description: >-
            The ID that YouTube uses to uniquely identify a video. To retrieve
            the video resource, set the id query parameter to this value in your
            API request.
        startAt:
          description: >-
            The time, measured in seconds from the start of the video, when the
            video should start playing. (The playlist owner can specify the
            times when the video should start and stop playing when the video is
            played in the context of the playlist.) The default value is 0.
          type: string
        endAt:
          type: string
          description: >-
            The time, measured in seconds from the start of the video, when the
            video should stop playing. (The playlist owner can specify the times
            when the video should start and stop playing when the video is
            played in the context of the playlist.) By default, assume that the
            video.endTime is the end of the video.
        note:
          type: string
          description: A user-generated note for this item.
      type: object
    InvideoBranding:
      id: InvideoBranding
      type: object
      properties:
        imageUrl:
          type: string
          description: >-
            The url of the uploaded image. Only used in apiary to api
            communication.
        timing:
          description: >-
            The temporal position within the video where watermark will be
            displayed.
          $ref: '#/components/schemas/InvideoTiming'
        imageBytes:
          description: >-
            The bytes the uploaded image. Only used in api to youtube
            communication.
          type: string
          format: byte
        position:
          $ref: '#/components/schemas/InvideoPosition'
          description: >-
            The spatial position within the video where the branding watermark
            will be displayed.
        targetChannelId:
          type: string
          description: >-
            The channel to which this branding links. If not present it defaults
            to the current channel.
      description: LINT.IfChange Describes an invideo branding.
    LiveBroadcastStatistics:
      description: >-
        Statistics about the live broadcast. These represent a snapshot of the
        values at the time of the request. Statistics are only returned for live
        broadcasts.
      id: LiveBroadcastStatistics
      properties:
        concurrentViewers:
          type: string
          description: >-
            The number of viewers currently watching the broadcast. The property
            and its value will be present if the broadcast has current viewers
            and the broadcast owner has not hidden the viewcount for the video.
            Note that YouTube stops tracking the number of concurrent viewers
            for a broadcast when the broadcast ends. So, this property would not
            identify the number of viewers watching an archived video of a live
            broadcast that already ended.
          format: uint64
      type: object
    VideoContentDetailsRegionRestriction:
      type: object
      id: VideoContentDetailsRegionRestriction
      properties:
        blocked:
          description: >-
            A list of region codes that identify countries where the video is
            blocked. If this property is present and a country is not listed in
            its value, then the video is viewable in that country. If this
            property is present and contains an empty list, the video is
            viewable in all countries.
          type: array
          items:
            type: string
        allowed:
          items:
            type: string
          type: array
          description: >-
            A list of region codes that identify countries where the video is
            viewable. If this property is present and a country is not listed in
            its value, then the video is blocked from appearing in that country.
            If this property is present and contains an empty list, the video is
            blocked in all countries.
      description: DEPRECATED Region restriction of the video.
    PageInfo:
      id: PageInfo
      description: >-
        Paging details for lists of resources, including total number of items
        available and number of resources returned in a single page.
      type: object
      properties:
        resultsPerPage:
          type: integer
          format: int32
          description: The number of results included in the API response.
        totalResults:
          format: int32
          description: The total number of results in the result set.
          type: integer
    VideoFileDetailsVideoStream:
      id: VideoFileDetailsVideoStream
      type: object
      properties:
        aspectRatio:
          description: >-
            The video content's display aspect ratio, which specifies the aspect
            ratio in which the video should be displayed.
          type: number
          format: double
        heightPixels:
          description: The encoded video content's height in pixels.
          format: uint32
          type: integer
        vendor:
          description: >-
            A value that uniquely identifies a video vendor. Typically, the
            value is a four-letter vendor code.
          type: string
        widthPixels:
          format: uint32
          description: >-
            The encoded video content's width in pixels. You can calculate the
            video's encoding aspect ratio as width_pixels / height_pixels.
          type: integer
        codec:
          type: string
          description: The video codec that the stream uses.
        frameRateFps:
          description: The video stream's frame rate, in frames per second.
          format: double
          type: number
        bitrateBps:
          type: string
          format: uint64
          description: The video stream's bitrate, in bits per second.
        rotation:
          enum:
            - none
            - clockwise
            - upsideDown
            - counterClockwise
            - other
          description: >-
            The amount that YouTube needs to rotate the original source content
            to properly display the video.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
      description: Information about a video stream.
    TestItemTestItemSnippet:
      id: TestItemTestItemSnippet
      type: object
      properties: {}
    CaptionListResponse:
      properties:
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        etag:
          description: Etag of this resource.
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Caption'
          description: A list of captions that match the request criteria.
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#captionListResponse".
          default: youtube#captionListResponse
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
      type: object
      id: CaptionListResponse
    LiveChatNewSponsorDetails:
      type: object
      properties:
        memberLevelName:
          description: >-
            The name of the Level that the viewer just had joined. The Level
            names are defined by the YouTube channel offering the Membership. In
            some situations this field isn't filled.
          type: string
        isUpgrade:
          description: >-
            If the viewer just had upgraded from a lower level. For viewers that
            were not members at the time of purchase, this field is false.
          type: boolean
      id: LiveChatNewSponsorDetails
    ActivityContentDetailsPromotedItem:
      type: object
      properties:
        descriptionText:
          type: string
          description: The text description to accompany the promoted item.
        destinationUrl:
          type: string
          description: >-
            The URL the client should direct the user to, if the user chooses to
            visit the advertiser's website.
        ctaType:
          enumDescriptions:
            - ''
            - ''
          description: >-
            The type of call-to-action, a message to the user indicating action
            that can be taken.
          enum:
            - ctaTypeUnspecified
            - visitAdvertiserSite
          type: string
        forecastingUrl:
          items:
            type: string
          description: >-
            The list of forecasting URLs. The client should ping all of these
            URLs when a promoted item is not available, to indicate that a
            promoted item could have been shown.
          type: array
        impressionUrl:
          description: >-
            The list of impression URLs. The client should ping all of these
            URLs to indicate that the user was shown this promoted item.
          items:
            type: string
          type: array
        videoId:
          description: The ID that YouTube uses to uniquely identify the promoted video.
          type: string
        adTag:
          type: string
          description: The URL the client should fetch to request a promoted item.
        customCtaButtonText:
          type: string
          description: >-
            The custom call-to-action button text. If specified, it will
            override the default button text for the cta_type.
        clickTrackingUrl:
          description: >-
            The URL the client should ping to indicate that the user clicked
            through on this promoted item.
          type: string
        creativeViewUrl:
          description: >-
            The URL the client should ping to indicate that the user was shown
            this promoted item.
          type: string
      id: ActivityContentDetailsPromotedItem
      description: Details about a resource which is being promoted.
    ActivityContentDetails:
      type: object
      properties:
        channelItem:
          description: >-
            The channelItem object contains details about a resource which was
            added to a channel. This property is only present if the
            snippet.type is channelItem.
          $ref: '#/components/schemas/ActivityContentDetailsChannelItem'
        playlistItem:
          description: >-
            The playlistItem object contains information about a new playlist
            item. This property is only present if the snippet.type is
            playlistItem.
          $ref: '#/components/schemas/ActivityContentDetailsPlaylistItem'
        bulletin:
          $ref: '#/components/schemas/ActivityContentDetailsBulletin'
          description: >-
            The bulletin object contains details about a channel bulletin post.
            This object is only present if the snippet.type is bulletin.
        recommendation:
          description: >-
            The recommendation object contains information about a recommended
            resource. This property is only present if the snippet.type is
            recommendation.
          $ref: '#/components/schemas/ActivityContentDetailsRecommendation'
        promotedItem:
          description: >-
            The promotedItem object contains details about a resource which is
            being promoted. This property is only present if the snippet.type is
            promotedItem.
          $ref: '#/components/schemas/ActivityContentDetailsPromotedItem'
        favorite:
          $ref: '#/components/schemas/ActivityContentDetailsFavorite'
          description: >-
            The favorite object contains information about a video that was
            marked as a favorite video. This property is only present if the
            snippet.type is favorite.
        subscription:
          description: >-
            The subscription object contains information about a channel that a
            user subscribed to. This property is only present if the
            snippet.type is subscription.
          $ref: '#/components/schemas/ActivityContentDetailsSubscription'
        like:
          description: >-
            The like object contains information about a resource that received
            a positive (like) rating. This property is only present if the
            snippet.type is like.
          $ref: '#/components/schemas/ActivityContentDetailsLike'
        comment:
          description: >-
            The comment object contains information about a resource that
            received a comment. This property is only present if the
            snippet.type is comment.
          $ref: '#/components/schemas/ActivityContentDetailsComment'
        social:
          description: >-
            The social object contains details about a social network post. This
            property is only present if the snippet.type is social.
          $ref: '#/components/schemas/ActivityContentDetailsSocial'
        upload:
          description: >-
            The upload object contains information about the uploaded video.
            This property is only present if the snippet.type is upload.
          $ref: '#/components/schemas/ActivityContentDetailsUpload'
      description: >-
        Details about the content of an activity: the video that was shared, the
        channel that was subscribed to, etc.
      id: ActivityContentDetails
    LocalizedProperty:
      properties:
        default:
          type: string
        defaultLanguage:
          description: The language of the default property.
          $ref: '#/components/schemas/LanguageTag'
        localized:
          items:
            $ref: '#/components/schemas/LocalizedString'
          type: array
      id: LocalizedProperty
      type: object
    MembershipsLevel:
      id: MembershipsLevel
      type: object
      properties:
        etag:
          description: Etag of this resource.
          type: string
        kind:
          type: string
          default: youtube#membershipsLevel
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#membershipsLevelListResponse".
        snippet:
          $ref: '#/components/schemas/MembershipsLevelSnippet'
          description: The snippet object contains basic details about the level.
        id:
          description: >-
            The ID that YouTube assigns to uniquely identify the memberships
            level.
          type: string
      description: >-
        A *membershipsLevel* resource represents an offer made by YouTube
        creators for their fans. Users can become members of the channel by
        joining one of the available levels. They will provide recurring
        monetary support and receives special benefits.
    SuperStickerMetadata:
      type: object
      id: SuperStickerMetadata
      properties:
        stickerId:
          description: >-
            Unique identifier of the Super Sticker. This is a shorter form of
            the alt_text that includes pack name and a recognizable
            characteristic of the sticker.
          type: string
        altText:
          type: string
          description: >-
            Internationalized alt text that describes the sticker image and any
            animation associated with it.
        altTextLanguage:
          type: string
          description: >-
            Specifies the localization language in which the alt text is
            returned.
    LiveChatMessageRetractedDetails:
      id: LiveChatMessageRetractedDetails
      type: object
      properties:
        retractedMessageId:
          type: string
    VideoAbuseReportSecondaryReason:
      id: VideoAbuseReportSecondaryReason
      properties:
        id:
          description: The ID of this abuse report secondary reason.
          type: string
        label:
          type: string
          description: The localized label for this abuse report secondary reason.
      type: object
    SuperChatEventSnippet:
      type: object
      id: SuperChatEventSnippet
      properties:
        displayString:
          description: >-
            A rendered string that displays the purchase amount and currency
            (e.g., "$1.00"). The string is rendered for the given language.
          type: string
        superStickerMetadata:
          $ref: '#/components/schemas/SuperStickerMetadata'
          description: >-
            If this event is a Super Sticker event, this field will contain
            metadata about the Super Sticker.
        amountMicros:
          type: string
          description: >-
            The purchase amount, in micros of the purchase currency. e.g., 1 is
            represented as 1000000.
          format: uint64
        messageType:
          description: >-
            The tier for the paid message, which is based on the amount of money
            spent to purchase the message.
          format: uint32
          type: integer
        currency:
          type: string
          description: The currency in which the purchase was made. ISO 4217.
        commentText:
          description: The text contents of the comment left by the user.
          type: string
        createdAt:
          format: date-time
          type: string
          description: The date and time when the event occurred.
        isSuperStickerEvent:
          description: True if this event is a Super Sticker event.
          type: boolean
        supporterDetails:
          $ref: '#/components/schemas/ChannelProfileDetails'
          description: Details about the supporter.
        channelId:
          description: Channel id where the event occurred.
          type: string
    ChannelToStoreLinkDetails:
      type: object
      id: ChannelToStoreLinkDetails
      description: >-
        Information specific to a store on a merchandising platform linked to a
        YouTube channel.
      properties:
        storeName:
          description: Name of the store.
          type: string
        storeUrl:
          type: string
          description: Landing page of the store.
        merchantId:
          type: string
          description: Google Merchant Center id of the store.
          format: uint64
    ActivityContentDetailsRecommendation:
      type: object
      description: Information that identifies the recommended resource.
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
          description: >-
            The resourceId object contains information that identifies the
            recommended resource.
        seedResourceId:
          description: >-
            The seedResourceId object contains information about the resource
            that caused the recommendation.
          $ref: '#/components/schemas/ResourceId'
        reason:
          description: The reason that the resource is recommended to the user.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          enum:
            - reasonUnspecified
            - videoFavorited
            - videoLiked
            - videoWatched
          type: string
      id: ActivityContentDetailsRecommendation
    LiveChatMessageAuthorDetails:
      properties:
        channelId:
          type: string
          description: The YouTube channel ID.
        isChatOwner:
          description: Whether the author is the owner of the live chat.
          type: boolean
        displayName:
          type: string
          description: The channel's display name.
        isChatModerator:
          type: boolean
          description: Whether the author is a moderator of the live chat.
        isChatSponsor:
          type: boolean
          description: Whether the author is a sponsor of the live chat.
        isVerified:
          type: boolean
          description: Whether the author's identity has been verified by YouTube.
        channelUrl:
          type: string
          description: The channel's URL.
        profileImageUrl:
          type: string
          description: The channels's avatar URL.
      type: object
      id: LiveChatMessageAuthorDetails
    Member:
      id: Member
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#member".
          type: string
          default: youtube#member
        etag:
          description: Etag of this resource.
          type: string
        snippet:
          description: The snippet object contains basic details about the member.
          $ref: '#/components/schemas/MemberSnippet'
      description: >-
        A *member* resource represents a member for a YouTube channel. A member
        provides recurring monetary support to a creator and receives special
        benefits.
      type: object
    MembershipsDuration:
      id: MembershipsDuration
      properties:
        memberSince:
          type: string
          description: >-
            The date and time when the user became a continuous member across
            all levels.
        memberTotalDurationMonths:
          format: int32
          description: >-
            The cumulative time the user has been a member across all levels in
            complete months (the time is rounded down to the nearest integer).
          type: integer
      type: object
    CommentThreadListResponse:
      properties:
        nextPageToken:
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/CommentThread'
          description: A list of comment threads that match the request criteria.
        pageInfo:
          description: General pagination information.
          $ref: '#/components/schemas/PageInfo'
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#commentThreadListResponse".
          type: string
          default: youtube#commentThreadListResponse
        etag:
          type: string
          description: Etag of this resource.
      type: object
      id: CommentThreadListResponse
    LiveChatMessageDeletedDetails:
      id: LiveChatMessageDeletedDetails
      type: object
      properties:
        deletedMessageId:
          type: string
    VideoListResponse:
      properties:
        etag:
          description: Etag of this resource.
          type: string
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          items:
            $ref: '#/components/schemas/Video'
          type: array
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: General pagination information.
        kind:
          type: string
          default: youtube#videoListResponse
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#videoListResponse".
        nextPageToken:
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
          type: string
        prevPageToken:
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the previous page in the result set.
          type: string
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
      id: VideoListResponse
      type: object
    LiveBroadcastStatus:
      id: LiveBroadcastStatus
      properties:
        recordingStatus:
          type: string
          enum:
            - liveBroadcastRecordingStatusUnspecified
            - notRecording
            - recording
            - recorded
          description: The broadcast's recording status.
          enumDescriptions:
            - No value or the value is unknown.
            - The recording has not yet been started.
            - The recording is currently on.
            - The recording is completed, and cannot be started again.
        liveBroadcastPriority:
          description: Priority of the live broadcast event (internal state).
          enumDescriptions:
            - ''
            - >-
              Low priority broadcast: for low view count HoAs or other low
              priority broadcasts.
            - 'Normal priority broadcast: for regular HoAs and broadcasts.'
            - >-
              High priority broadcast: for high profile HoAs, like PixelCorp
              ones.
          type: string
          enum:
            - liveBroadcastPriorityUnspecified
            - low
            - normal
            - high
        lifeCycleStatus:
          type: string
          enumDescriptions:
            - No value or the value is unknown.
            - Incomplete settings, but otherwise valid
            - Complete settings
            - Visible only to partner, may need special UI treatment
            - Viper is recording; this means the "clock" is running
            - The broadcast is finished.
            - This broadcast was removed by admin action
            - Transition into TESTING has been requested
            - Transition into LIVE has been requested
          description: >-
            The broadcast's status. The status can be updated using the API's
            liveBroadcasts.transition method.
          enum:
            - lifeCycleStatusUnspecified
            - created
            - ready
            - testing
            - live
            - complete
            - revoked
            - testStarting
            - liveStarting
        madeForKids:
          description: >-
            Whether the broadcast is made for kids or not, decided by YouTube
            instead of the creator. This field is read only.
          type: boolean
        privacyStatus:
          enum:
            - public
            - unlisted
            - private
          annotations:
            required:
              - youtube.liveBroadcasts.insert
              - youtube.liveBroadcasts.update
          type: string
          description: >-
            The broadcast's privacy status. Note that the broadcast represents
            exactly one YouTube video, so the privacy settings are identical to
            those supported for videos. In addition, you can set this field by
            modifying the broadcast resource or by setting the privacyStatus
            field of the corresponding video resource.
          enumDescriptions:
            - ''
            - ''
            - ''
        selfDeclaredMadeForKids:
          description: >-
            This field will be set to True if the creator declares the broadcast
            to be kids only: go/live-cw-work.
          type: boolean
      type: object
      description: Live broadcast state.
    SuperChatEvent:
      properties:
        snippet:
          description: >-
            The `snippet` object contains basic details about the Super Chat
            event.
          $ref: '#/components/schemas/SuperChatEventSnippet'
        etag:
          type: string
          description: Etag of this resource.
        id:
          description: >-
            The ID that YouTube assigns to uniquely identify the Super Chat
            event.
          type: string
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"youtube#superChatEvent"`.
          default: youtube#superChatEvent
      type: object
      id: SuperChatEvent
      description: >-
        A `__superChatEvent__` resource represents a Super Chat purchase on a
        YouTube channel.
    ChannelBannerResource:
      properties:
        etag:
          type: string
        url:
          type: string
          description: The URL of this banner image.
        kind:
          type: string
          default: youtube#channelBannerResource
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#channelBannerResource".
      type: object
      description: >-
        A channel banner returned as the response to a channel_banner.insert
        call.
      id: ChannelBannerResource
    ThirdPartyLink:
      properties:
        etag:
          type: string
          description: Etag of this resource
        snippet:
          $ref: '#/components/schemas/ThirdPartyLinkSnippet'
          description: >-
            The snippet object contains basic details about the third- party
            account link.
        linkingToken:
          type: string
          description: >-
            The linking_token identifies a YouTube account and channel with
            which the third party account is linked.
        kind:
          type: string
          default: youtube#thirdPartyLink
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#thirdPartyLink".
        status:
          description: The status object contains information about the status of the link.
          $ref: '#/components/schemas/ThirdPartyLinkStatus'
      id: ThirdPartyLink
      description: >-
        A *third party account link* resource represents a link between a
        YouTube account or a channel and an account on a third-party service.
      type: object
    MonitorStreamInfo:
      properties:
        broadcastStreamDelayMs:
          type: integer
          description: >-
            If you have set the enableMonitorStream property to true, then this
            property determines the length of the live broadcast delay.
          annotations:
            required:
              - youtube.liveBroadcasts.update
          format: uint32
        embedHtml:
          description: HTML code that embeds a player that plays the monitor stream.
          type: string
        enableMonitorStream:
          type: boolean
          annotations:
            required:
              - youtube.liveBroadcasts.update
          description: >-
            This value determines whether the monitor stream is enabled for the
            broadcast. If the monitor stream is enabled, then YouTube will
            broadcast the event content on a special stream intended only for
            the broadcaster's consumption. The broadcaster can use the stream to
            review the event content and also to identify the optimal times to
            insert cuepoints. You need to set this value to true if you intend
            to have a broadcast delay for your event. *Note:* This property
            cannot be updated once the broadcast is in the testing or live
            state.
      id: MonitorStreamInfo
      description: Settings and Info of the monitor stream
      type: object
    VideoSuggestions:
      id: VideoSuggestions
      properties:
        tagSuggestions:
          type: array
          items:
            $ref: '#/components/schemas/VideoSuggestionsTagSuggestion'
          description: >-
            A list of keyword tags that could be added to the video's metadata
            to increase the likelihood that users will locate your video when
            searching or browsing on YouTube.
        processingWarnings:
          type: array
          items:
            enum:
              - unknownContainer
              - unknownVideoCodec
              - unknownAudioCodec
              - inconsistentResolution
              - hasEditlist
              - problematicVideoCodec
              - problematicAudioCodec
              - unsupportedVrStereoMode
              - unsupportedSphericalProjectionType
              - unsupportedHdrPixelFormat
              - unsupportedHdrColorMetadata
              - problematicHdrLookupTable
            type: string
            enumDescriptions:
              - Unrecognized file format, transcoding is likely to fail.
              - Unrecognized video codec, transcoding is likely to fail.
              - Unrecognized audio codec, transcoding is likely to fail.
              - Conflicting container and stream resolutions.
              - Edit lists are not currently supported.
              - Video codec that is known to cause problems was used.
              - Audio codec that is known to cause problems was used.
              - Unsupported VR video stereo mode.
              - Unsupported spherical video projection type.
              - Unsupported HDR pixel format.
              - Unspecified HDR color metadata.
              - Problematic HDR lookup table attached.
          description: >-
            A list of reasons why YouTube may have difficulty transcoding the
            uploaded video or that might result in an erroneous transcoding.
            These warnings are generated before YouTube actually processes the
            uploaded video file. In addition, they identify issues that are
            unlikely to cause the video processing to fail but that might cause
            problems such as sync issues, video artifacts, or a missing audio
            track.
        processingErrors:
          description: >-
            A list of errors that will prevent YouTube from successfully
            processing the uploaded video video. These errors indicate that,
            regardless of the video's current processing status, eventually,
            that status will almost certainly be failed.
          items:
            enumDescriptions:
              - File contains audio only (e.g., an MP3 file).
              - Image file (e.g., a JPEG image).
              - >-
                Movie project file (e.g., Microsoft Windows Movie Maker
                project).
              - Other non-video file.
              - Document or text file (e.g., MS Word document).
              - An archive file (e.g., a ZIP archive).
              - Unsupported spatial audio layout type.
            enum:
              - audioFile
              - imageFile
              - projectFile
              - notAVideoFile
              - docFile
              - archiveFile
              - unsupportedSpatialAudioLayout
            type: string
          type: array
        editorSuggestions:
          description: >-
            A list of video editing operations that might improve the video
            quality or playback experience of the uploaded video.
          items:
            enum:
              - videoAutoLevels
              - videoStabilize
              - videoCrop
              - audioQuietAudioSwap
            enumDescriptions:
              - Picture brightness levels seem off and could be corrected.
              - The video appears shaky and could be stabilized.
              - Margins (mattes) detected around the picture could be cropped.
              - >-
                The audio track appears silent and could be swapped with a
                better quality one.
            type: string
          type: array
        processingHints:
          type: array
          items:
            enum:
              - nonStreamableMov
              - sendBestQualityVideo
              - sphericalVideo
              - spatialAudio
              - vrVideo
              - hdrVideo
            type: string
            enumDescriptions:
              - >-
                The MP4 file is not streamable, this will slow down the
                processing. MOOV atom was not found at the beginning of the
                file.
              - >-
                Probably a better quality version of the video exists. The video
                has wide screen aspect ratio, but is not an HD video.
              - Uploaded video is spherical video.
              - Uploaded video has spatial audio.
              - Uploaded video is VR video.
              - Uploaded video is HDR video.
          description: >-
            A list of suggestions that may improve YouTube's ability to process
            the video.
      description: >-
        Specifies suggestions on how to improve video content, including
        encoding hints, tag suggestions, and editor suggestions.
      type: object
    ChannelConversionPings:
      description: >-
        The conversionPings object encapsulates information about conversion
        pings that need to be respected by the channel.
      type: object
      id: ChannelConversionPings
      properties:
        pings:
          description: >-
            Pings that the app shall fire (authenticated by biscotti cookie).
            Each ping has a context, in which the app must fire the ping, and a
            url identifying the ping.
          type: array
          items:
            $ref: '#/components/schemas/ChannelConversionPing'
    RelatedEntity:
      properties:
        entity:
          $ref: '#/components/schemas/Entity'
      type: object
      id: RelatedEntity
    I18nRegionListResponse:
      type: object
      properties:
        kind:
          type: string
          default: youtube#i18nRegionListResponse
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#i18nRegionListResponse".
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        items:
          type: array
          description: >-
            A list of regions where YouTube is available. In this map, the i18n
            region ID is the map key, and its value is the corresponding
            i18nRegion resource.
          items:
            $ref: '#/components/schemas/I18nRegion'
        etag:
          description: Etag of this resource.
          type: string
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
      id: I18nRegionListResponse
    LiveChatModerator:
      description: >-
        A *liveChatModerator* resource represents a moderator for a YouTube live
        chat. A chat moderator has the ability to ban/unban users from a chat,
        remove message, etc.
      id: LiveChatModerator
      properties:
        snippet:
          description: The snippet object contains basic details about the moderator.
          $ref: '#/components/schemas/LiveChatModeratorSnippet'
        etag:
          type: string
          description: Etag of this resource.
        id:
          description: The ID that YouTube assigns to uniquely identify the moderator.
          type: string
        kind:
          default: youtube#liveChatModerator
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#liveChatModerator".
      type: object
    LiveStreamSnippet:
      properties:
        publishedAt:
          format: date-time
          type: string
          description: The date and time that the stream was created.
        title:
          type: string
          annotations:
            required:
              - youtube.liveStreams.insert
              - youtube.liveStreams.update
          description: >-
            The stream's title. The value must be between 1 and 128 characters
            long.
        channelId:
          type: string
          description: >-
            The ID that YouTube uses to uniquely identify the channel that is
            transmitting the stream.
        description:
          type: string
          description: >-
            The stream's description. The value cannot be longer than 10000
            characters.
        isDefaultStream:
          type: boolean
      type: object
      id: LiveStreamSnippet
    VideoAbuseReportReason:
      properties:
        etag:
          type: string
          description: Etag of this resource.
        snippet:
          description: >-
            The `snippet` object contains basic details about the abuse report
            reason.
          $ref: '#/components/schemas/VideoAbuseReportReasonSnippet'
        id:
          description: The ID of this abuse report reason.
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"youtube#videoAbuseReportReason"`.
          type: string
          default: youtube#videoAbuseReportReason
      description: >-
        A `__videoAbuseReportReason__` resource identifies a reason that a video
        could be reported as abusive. Video abuse report reasons are used with
        `video.ReportAbuse`.
      id: VideoAbuseReportReason
      type: object
    Comment:
      description: A *comment* represents a single YouTube comment.
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#comment".
          type: string
          default: youtube#comment
        id:
          description: The ID that YouTube uses to uniquely identify the comment.
          type: string
        etag:
          type: string
          description: Etag of this resource.
        snippet:
          description: The snippet object contains basic details about the comment.
          $ref: '#/components/schemas/CommentSnippet'
      id: Comment
      type: object
    Channel:
      description: A *channel* resource contains information about a YouTube channel.
      properties:
        auditDetails:
          $ref: '#/components/schemas/ChannelAuditDetails'
          description: >-
            The auditionDetails object encapsulates channel data that is
            relevant for YouTube Partners during the audition process.
        id:
          description: The ID that YouTube uses to uniquely identify the channel.
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#channel".
          default: youtube#channel
          type: string
        contentDetails:
          $ref: '#/components/schemas/ChannelContentDetails'
          description: >-
            The contentDetails object encapsulates information about the
            channel's content.
        localizations:
          description: Localizations for different languages
          additionalProperties:
            $ref: '#/components/schemas/ChannelLocalization'
          type: object
        snippet:
          description: >-
            The snippet object contains basic details about the channel, such as
            its title, description, and thumbnail images.
          $ref: '#/components/schemas/ChannelSnippet'
        contentOwnerDetails:
          description: >-
            The contentOwnerDetails object encapsulates channel data that is
            relevant for YouTube Partners linked with the channel.
          $ref: '#/components/schemas/ChannelContentOwnerDetails'
        statistics:
          $ref: '#/components/schemas/ChannelStatistics'
          description: The statistics object encapsulates statistics for the channel.
        brandingSettings:
          $ref: '#/components/schemas/ChannelBrandingSettings'
          description: >-
            The brandingSettings object encapsulates information about the
            branding of the channel.
        topicDetails:
          description: >-
            The topicDetails object encapsulates information about Freebase
            topics associated with the channel.
          $ref: '#/components/schemas/ChannelTopicDetails'
        status:
          $ref: '#/components/schemas/ChannelStatus'
          description: >-
            The status object encapsulates information about the privacy status
            of the channel.
        conversionPings:
          $ref: '#/components/schemas/ChannelConversionPings'
          description: >-
            The conversionPings object encapsulates information about conversion
            pings that need to be respected by the channel.
        etag:
          description: Etag of this resource.
          type: string
      id: Channel
      type: object
    LanguageTag:
      properties:
        value:
          type: string
      id: LanguageTag
      type: object
    TestItem:
      properties:
        featuredPart:
          type: boolean
        id:
          type: string
        snippet:
          $ref: '#/components/schemas/TestItemTestItemSnippet'
        gaia:
          format: int64
          type: string
      type: object
      id: TestItem
    ChannelContentOwnerDetails:
      properties:
        timeLinked:
          format: date-time
          type: string
          description: The date and time when the channel was linked to the content owner.
        contentOwner:
          type: string
          description: The ID of the content owner linked to the channel.
      type: object
      description: >-
        The contentOwnerDetails object encapsulates channel data that is
        relevant for YouTube Partners linked with the channel.
      id: ChannelContentOwnerDetails
    ThirdPartyLinkStatus:
      description: >-
        The third-party link status object contains information about the status
        of the link.
      id: ThirdPartyLinkStatus
      properties:
        linkStatus:
          type: string
          enum:
            - unknown
            - failed
            - pending
            - linked
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
      type: object
    VideoSuggestionsTagSuggestion:
      type: object
      properties:
        tag:
          description: The keyword tag suggested for the video.
          type: string
        categoryRestricts:
          description: >-
            A set of video categories for which the tag is relevant. You can use
            this information to display appropriate tag suggestions based on the
            video category that the video uploader associates with the video. By
            default, tag suggestions are relevant for all categories if there
            are no restricts defined for the keyword.
          type: array
          items:
            type: string
      id: VideoSuggestionsTagSuggestion
      description: A single tag suggestion with it's relevance information.
    I18nLanguageListResponse:
      properties:
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#i18nLanguageListResponse".
          default: youtube#i18nLanguageListResponse
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        items:
          items:
            $ref: '#/components/schemas/I18nLanguage'
          description: >-
            A list of supported i18n languages. In this map, the i18n language
            ID is the map key, and its value is the corresponding i18nLanguage
            resource.
          type: array
        etag:
          description: Etag of this resource.
          type: string
      type: object
      id: I18nLanguageListResponse
    ContentRating:
      type: object
      description: >-
        Ratings schemes. The country-specific ratings are mostly for movies and
        shows. LINT.IfChange
      properties:
        eefilmRating:
          description: The video's rating in Estonia.
          enum:
            - eefilmUnspecified
            - eefilmPere
            - eefilmL
            - eefilmMs6
            - eefilmK6
            - eefilmMs12
            - eefilmK12
            - eefilmK14
            - eefilmK16
            - eefilmUnrated
          enumDescriptions:
            - ''
            - Pere
            - L
            - MS-6
            - K-6
            - MS-12
            - K-12
            - K-14
            - K-16
            - ''
          type: string
        bbfcRating:
          description: The video's British Board of Film Classification (BBFC) rating.
          enum:
            - bbfcUnspecified
            - bbfcU
            - bbfcPg
            - bbfc12a
            - bbfc12
            - bbfc15
            - bbfc18
            - bbfcR18
            - bbfcUnrated
          enumDescriptions:
            - ''
            - U
            - PG
            - 12A
            - '12'
            - '15'
            - '18'
            - R18
            - ''
          type: string
        pefilmRating:
          enumDescriptions:
            - ''
            - PT
            - PG
            - '14'
            - '18'
            - ''
          enum:
            - pefilmUnspecified
            - pefilmPt
            - pefilmPg
            - pefilm14
            - pefilm18
            - pefilmUnrated
          description: The video's rating in Peru.
          type: string
        kmrbRating:
          enumDescriptions:
            - ''
            - 전체관람가
            - 12세 이상 관람가
            - 15세 이상 관람가
            - ''
            - 청소년 관람불가
            - ''
          type: string
          enum:
            - kmrbUnspecified
            - kmrbAll
            - kmrb12plus
            - kmrb15plus
            - kmrbTeenr
            - kmrbR
            - kmrbUnrated
          description: >-
            The video's Korea Media Rating Board (영상물등급위원회) rating. The KMRB
            rates videos in South Korea.
        cncRating:
          enumDescriptions:
            - ''
            - T
            - '10'
            - '12'
            - '16'
            - '18'
            - E
            - interdiction
            - ''
          enum:
            - cncUnspecified
            - cncT
            - cnc10
            - cnc12
            - cnc16
            - cnc18
            - cncE
            - cncInterdiction
            - cncUnrated
          description: >-
            Rating system in France - Commission de classification
            cinematographique
          type: string
        kijkwijzerRating:
          description: >-
            The video's NICAM/Kijkwijzer rating from the Nederlands Instituut
            voor de Classificatie van Audiovisuele Media (Netherlands).
          type: string
          enum:
            - kijkwijzerUnspecified
            - kijkwijzerAl
            - kijkwijzer6
            - kijkwijzer9
            - kijkwijzer12
            - kijkwijzer16
            - kijkwijzer18
            - kijkwijzerUnrated
          enumDescriptions:
            - ''
            - AL
            - '6'
            - '9'
            - '12'
            - '16'
            - ''
            - ''
        kfcbRating:
          description: The video's rating from the Kenya Film Classification Board.
          enum:
            - kfcbUnspecified
            - kfcbG
            - kfcbPg
            - kfcb16plus
            - kfcbR
            - kfcbUnrated
          type: string
          enumDescriptions:
            - ''
            - GE
            - PG
            - '16'
            - '18'
            - ''
        fcbmRating:
          type: string
          description: The video's rating from Malaysia's Film Censorship Board.
          enumDescriptions:
            - ''
            - U
            - PG13
            - P13
            - '18'
            - 18SX
            - 18PA
            - 18SG
            - 18PL
            - ''
          enum:
            - fcbmUnspecified
            - fcbmU
            - fcbmPg13
            - fcbmP13
            - fcbm18
            - fcbm18sx
            - fcbm18pa
            - fcbm18sg
            - fcbm18pl
            - fcbmUnrated
        ecbmctRating:
          type: string
          enum:
            - ecbmctUnspecified
            - ecbmctG
            - ecbmct7a
            - ecbmct7plus
            - ecbmct13a
            - ecbmct13plus
            - ecbmct15a
            - ecbmct15plus
            - ecbmct18plus
            - ecbmctUnrated
          enumDescriptions:
            - ''
            - G
            - 7A
            - 7+
            - 13A
            - 13+
            - 15A
            - 15+
            - 18+
            - ''
          description: >-
            Rating system in Turkey - Evaluation and Classification Board of the
            Ministry of Culture and Tourism
        rtcRating:
          enum:
            - rtcUnspecified
            - rtcAa
            - rtcA
            - rtcB
            - rtcB15
            - rtcC
            - rtcD
            - rtcUnrated
          type: string
          enumDescriptions:
            - ''
            - AA
            - A
            - B
            - B15
            - C
            - D
            - ''
          description: >-
            The video's General Directorate of Radio, Television and
            Cinematography (Mexico) rating.
        catvRating:
          enum:
            - catvUnspecified
            - catvC
            - catvC8
            - catvG
            - catvPg
            - catv14plus
            - catv18plus
            - catvUnrated
            - catvE
          type: string
          enumDescriptions:
            - ''
            - C
            - C8
            - G
            - PG
            - 14+
            - 18+
            - ''
            - ''
          description: >-
            Rating system for Canadian TV - Canadian TV Classification System
            The video's rating from the Canadian Radio-Television and
            Telecommunications Commission (CRTC) for Canadian English-language
            broadcasts. For more information, see the Canadian Broadcast
            Standards Council website.
        fpbRating:
          enumDescriptions:
            - ''
            - A
            - PG
            - 7-9PG
            - 10-12PG
            - '13'
            - '16'
            - '18'
            - X18
            - XX
            - ''
            - '10'
          description: The video's rating from South Africa's Film and Publication Board.
          type: string
          enum:
            - fpbUnspecified
            - fpbA
            - fpbPg
            - fpb79Pg
            - fpb1012Pg
            - fpb13
            - fpb16
            - fpb18
            - fpbX18
            - fpbXx
            - fpbUnrated
            - fpb10
        medietilsynetRating:
          description: >-
            The video's rating from Medietilsynet, the Norwegian Media
            Authority.
          enum:
            - medietilsynetUnspecified
            - medietilsynetA
            - medietilsynet6
            - medietilsynet7
            - medietilsynet9
            - medietilsynet11
            - medietilsynet12
            - medietilsynet15
            - medietilsynet18
            - medietilsynetUnrated
          type: string
          enumDescriptions:
            - ''
            - A
            - '6'
            - '7'
            - '9'
            - '11'
            - '12'
            - '15'
            - '18'
            - ''
        chvrsRating:
          enum:
            - chvrsUnspecified
            - chvrsG
            - chvrsPg
            - chvrs14a
            - chvrs18a
            - chvrsR
            - chvrsE
            - chvrsUnrated
          description: The video's Canadian Home Video Rating System (CHVRS) rating.
          enumDescriptions:
            - ''
            - G
            - PG
            - 14A
            - 18A
            - R
            - E
            - ''
          type: string
        bmukkRating:
          description: >-
            The video's rating from the Austrian Board of Media Classification
            (Bundesministerium für Unterricht, Kunst und Kultur).
          enumDescriptions:
            - ''
            - Unrestricted
            - 6+
            - 8+
            - 10+
            - 12+
            - 14+
            - 16+
            - ''
          enum:
            - bmukkUnspecified
            - bmukkAa
            - bmukk6
            - bmukk8
            - bmukk10
            - bmukk12
            - bmukk14
            - bmukk16
            - bmukkUnrated
          type: string
        djctqRating:
          enumDescriptions:
            - ''
            - L
            - '10'
            - '12'
            - '14'
            - '16'
            - '18'
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - djctqUnspecified
            - djctqL
            - djctq10
            - djctq12
            - djctq14
            - djctq16
            - djctq18
            - djctqEr
            - djctqL10
            - djctqL12
            - djctqL14
            - djctqL16
            - djctqL18
            - djctq1012
            - djctq1014
            - djctq1016
            - djctq1018
            - djctq1214
            - djctq1216
            - djctq1218
            - djctq1416
            - djctq1418
            - djctq1618
            - djctqUnrated
          description: >-
            The video's Departamento de Justiça, Classificação, Qualificação e
            Títulos (DJCQT - Brazil) rating.
          type: string
        fmocRating:
          type: string
          description: >-
            This property has been deprecated. Use the
            contentDetails.contentRating.cncRating instead.
          enum:
            - fmocUnspecified
            - fmocU
            - fmoc10
            - fmoc12
            - fmoc16
            - fmoc18
            - fmocE
            - fmocUnrated
          enumDescriptions:
            - ''
            - U
            - '10'
            - '12'
            - '16'
            - '18'
            - E
            - ''
        moctwRating:
          description: The video's rating from Taiwan's Ministry of Culture (文化部).
          enumDescriptions:
            - ''
            - G
            - P
            - PG
            - R
            - ''
            - R-12
            - R-15
          type: string
          enum:
            - moctwUnspecified
            - moctwG
            - moctwP
            - moctwPg
            - moctwR
            - moctwUnrated
            - moctwR12
            - moctwR15
        nbcRating:
          description: >-
            The video's rating from the Maldives National Bureau of
            Classification.
          type: string
          enumDescriptions:
            - ''
            - G
            - PG
            - 12+
            - 15+
            - 18+
            - 18+R
            - PU
            - ''
          enum:
            - nbcUnspecified
            - nbcG
            - nbcPg
            - nbc12plus
            - nbc15plus
            - nbc18plus
            - nbc18plusr
            - nbcPu
            - nbcUnrated
        nbcplRating:
          enum:
            - nbcplUnspecified
            - nbcplI
            - nbcplIi
            - nbcplIii
            - nbcplIv
            - nbcpl18plus
            - nbcplUnrated
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          description: The video's rating in Poland.
        nmcRating:
          enum:
            - nmcUnspecified
            - nmcG
            - nmcPg
            - nmcPg13
            - nmcPg15
            - nmc15plus
            - nmc18plus
            - nmc18tc
            - nmcUnrated
          enumDescriptions:
            - ''
            - G
            - PG
            - PG-13
            - PG-15
            - 15+
            - 18+
            - 18TC
            - ''
          description: The National Media Council ratings system for United Arab Emirates.
          type: string
        russiaRating:
          enum:
            - russiaUnspecified
            - russia0
            - russia6
            - russia12
            - russia16
            - russia18
            - russiaUnrated
          type: string
          description: >-
            The video's National Film Registry of the Russian Federation (MKRF -
            Russia) rating.
          enumDescriptions:
            - ''
            - 0+
            - 6+
            - 12+
            - 16+
            - 18+
            - ''
        czfilmRating:
          enum:
            - czfilmUnspecified
            - czfilmU
            - czfilm12
            - czfilm14
            - czfilm18
            - czfilmUnrated
          type: string
          description: The video's rating in the Czech Republic.
          enumDescriptions:
            - ''
            - U
            - '12'
            - '14'
            - '18'
            - ''
        smsaRating:
          enum:
            - smsaUnspecified
            - smsaA
            - smsa7
            - smsa11
            - smsa15
            - smsaUnrated
          description: >-
            The video's rating from Statens medieråd (Sweden's National Media
            Council).
          enumDescriptions:
            - ''
            - All ages
            - '7'
            - '11'
            - '15'
            - ''
          type: string
        tvpgRating:
          type: string
          description: The video's TV Parental Guidelines (TVPG) rating.
          enum:
            - tvpgUnspecified
            - tvpgY
            - tvpgY7
            - tvpgY7Fv
            - tvpgG
            - tvpgPg
            - pg14
            - tvpgMa
            - tvpgUnrated
          enumDescriptions:
            - ''
            - TV-Y
            - TV-Y7
            - TV-Y7-FV
            - TV-G
            - TV-PG
            - TV-14
            - TV-MA
            - ''
        grfilmRating:
          description: The video's rating in Greece.
          type: string
          enumDescriptions:
            - ''
            - K
            - E
            - K-12
            - K-13
            - K-15
            - K-17
            - K-18
            - ''
          enum:
            - grfilmUnspecified
            - grfilmK
            - grfilmE
            - grfilmK12
            - grfilmK13
            - grfilmK15
            - grfilmK17
            - grfilmK18
            - grfilmUnrated
        lsfRating:
          enumDescriptions:
            - ''
            - SU
            - A
            - BO
            - '13'
            - R
            - '17'
            - D
            - '21'
            - ''
          enum:
            - lsfUnspecified
            - lsfSu
            - lsfA
            - lsfBo
            - lsf13
            - lsfR
            - lsf17
            - lsfD
            - lsf21
            - lsfUnrated
          type: string
          description: The video's rating from Indonesia's Lembaga Sensor Film.
        mtrcbRating:
          type: string
          description: >-
            The video's rating from the Movie and Television Review and
            Classification Board (Philippines).
          enumDescriptions:
            - ''
            - G
            - PG
            - R-13
            - R-16
            - R-18
            - X
            - ''
          enum:
            - mtrcbUnspecified
            - mtrcbG
            - mtrcbPg
            - mtrcbR13
            - mtrcbR16
            - mtrcbR18
            - mtrcbX
            - mtrcbUnrated
        fcoRating:
          type: string
          enumDescriptions:
            - ''
            - I
            - IIA
            - IIB
            - II
            - III
            - ''
          description: >-
            The video's rating from Hong Kong's Office for Film, Newspaper and
            Article Administration.
          enum:
            - fcoUnspecified
            - fcoI
            - fcoIia
            - fcoIib
            - fcoIi
            - fcoIii
            - fcoUnrated
        fpbRatingReasons:
          description: >-
            Reasons that explain why the video received its FPB (South Africa)
            rating.
          type: array
          items:
            type: string
            enumDescriptions:
              - ''
              - South Africa rating content descriptors.
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
            enum:
              - fpbRatingReasonUnspecified
              - fpbBlasphemy
              - fpbLanguage
              - fpbNudity
              - fpbPrejudice
              - fpbSex
              - fpbViolence
              - fpbDrugs
              - fpbSexualViolence
              - fpbHorror
              - fpbCriminalTechniques
              - fpbImitativeActsTechniques
        icaaRating:
          type: string
          enumDescriptions:
            - ''
            - APTA
            - '7'
            - '12'
            - '13'
            - '16'
            - '18'
            - X
            - ''
          description: >-
            The video's Instituto de la Cinematografía y de las Artes
            Audiovisuales (ICAA - Spain) rating.
          enum:
            - icaaUnspecified
            - icaaApta
            - icaa7
            - icaa12
            - icaa13
            - icaa16
            - icaa18
            - icaaX
            - icaaUnrated
        bfvcRating:
          enumDescriptions:
            - ''
            - G
            - E
            - '13'
            - '15'
            - '18'
            - '20'
            - B
            - ''
          type: string
          enum:
            - bfvcUnspecified
            - bfvcG
            - bfvcE
            - bfvc13
            - bfvc15
            - bfvc18
            - bfvc20
            - bfvcB
            - bfvcUnrated
          description: The video's rating from Thailand's Board of Film and Video Censors.
        nkclvRating:
          enumDescriptions:
            - ''
            - U
            - 7+
            - 12+
            - '! 16+'
            - 18+
            - ''
          description: >-
            The video's rating from the Nacionãlais Kino centrs (National Film
            Centre of Latvia).
          enum:
            - nkclvUnspecified
            - nkclvU
            - nkclv7plus
            - nkclv12plus
            - nkclv16plus
            - nkclv18plus
            - nkclvUnrated
          type: string
        agcomRating:
          type: string
          enum:
            - agcomUnspecified
            - agcomT
            - agcomVm14
            - agcomVm18
            - agcomUnrated
          description: >-
            The video's rating from Italy's Autorità per le Garanzie nelle
            Comunicazioni (AGCOM).
          enumDescriptions:
            - ''
            - T
            - VM14
            - VM18
            - ''
        mpaaRating:
          enum:
            - mpaaUnspecified
            - mpaaG
            - mpaaPg
            - mpaaPg13
            - mpaaR
            - mpaaNc17
            - mpaaX
            - mpaaUnrated
          enumDescriptions:
            - ''
            - G
            - PG
            - PG-13
            - R
            - NC-17
            - '! X'
            - ''
          description: The video's Motion Picture Association of America (MPAA) rating.
          type: string
        nfvcbRating:
          description: >-
            The video's rating from Nigeria's National Film and Video Censors
            Board.
          enum:
            - nfvcbUnspecified
            - nfvcbG
            - nfvcbPg
            - nfvcb12
            - nfvcb12a
            - nfvcb15
            - nfvcb18
            - nfvcbRe
            - nfvcbUnrated
          type: string
          enumDescriptions:
            - ''
            - G
            - PG
            - '12'
            - 12A
            - '15'
            - '18'
            - RE
            - ''
        cicfRating:
          description: >-
            The video's rating from the Commission de Contrôle des Films
            (Belgium).
          enum:
            - cicfUnspecified
            - cicfE
            - cicfKtEa
            - cicfKntEna
            - cicfUnrated
          type: string
          enumDescriptions:
            - ''
            - E
            - KT/EA
            - KNT/ENA
            - ''
        incaaRating:
          enumDescriptions:
            - ''
            - ATP (Apta para todo publico)
            - 13 (Solo apta para mayores de 13 años)
            - 16 (Solo apta para mayores de 16 años)
            - 18 (Solo apta para mayores de 18 años)
            - X (Solo apta para mayores de 18 años, de exhibición condicionada)
            - ''
          description: >-
            The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales
            - Argentina) rating.
          enum:
            - incaaUnspecified
            - incaaAtp
            - incaaSam13
            - incaaSam16
            - incaaSam18
            - incaaC
            - incaaUnrated
          type: string
        csaRating:
          type: string
          enumDescriptions:
            - ''
            - T
            - '10'
            - '12'
            - '16'
            - '18'
            - Interdiction
            - ''
          enum:
            - csaUnspecified
            - csaT
            - csa10
            - csa12
            - csa16
            - csa18
            - csaInterdiction
            - csaUnrated
          description: >-
            The video's rating from France's Conseil supérieur de l’audiovisuel,
            which rates broadcast content.
        mdaRating:
          type: string
          description: >-
            The video's rating from Singapore's Media Development Authority
            (MDA) and, specifically, it's Board of Film Censors (BFC).
          enum:
            - mdaUnspecified
            - mdaG
            - mdaPg
            - mdaPg13
            - mdaNc16
            - mdaM18
            - mdaR21
            - mdaUnrated
          enumDescriptions:
            - ''
            - G
            - PG
            - PG13
            - NC16
            - M18
            - R21
            - ''
        djctqRatingReasons:
          items:
            enumDescriptions:
              - ''
              - >-
                Brazil rating content descriptors. See http://go/brazilratings
                section F. Violência (Violence)
              - Violência extrema (Extreme violence)
              - Conteúdo sexual (Sexual content)
              - Nudez (Nudity)
              - Sexo (Sex)
              - Sexo Explícito (Explicit sex)
              - Drogas (Drugs)
              - Drogas Lícitas (Legal drugs)
              - Drogas Ilícitas (Illegal drugs)
              - Linguagem Imprópria (Inappropriate language)
              - Atos Criminosos (Criminal Acts)
              - Conteúdo Impactante (Impacting content)
            type: string
            enum:
              - djctqRatingReasonUnspecified
              - djctqViolence
              - djctqExtremeViolence
              - djctqSexualContent
              - djctqNudity
              - djctqSex
              - djctqExplicitSex
              - djctqDrugs
              - djctqLegalDrugs
              - djctqIllegalDrugs
              - djctqInappropriateLanguage
              - djctqCriminalActs
              - djctqImpactingContent
          description: >-
            Reasons that explain why the video received its DJCQT (Brazil)
            rating.
          type: array
        egfilmRating:
          enumDescriptions:
            - ''
            - GN
            - '18'
            - BN
            - ''
          type: string
          enum:
            - egfilmUnspecified
            - egfilmGn
            - egfilm18
            - egfilmBn
            - egfilmUnrated
          description: The video's rating in Egypt.
        cccRating:
          enum:
            - cccUnspecified
            - cccTe
            - ccc6
            - ccc14
            - ccc18
            - ccc18v
            - ccc18s
            - cccUnrated
          type: string
          description: The video's Consejo de Calificación Cinematográfica (Chile) rating.
          enumDescriptions:
            - ''
            - Todo espectador
            - 6+ - Inconveniente para menores de 7 años
            - 14+
            - 18+
            - 18+ - contenido excesivamente violento
            - 18+ - contenido pornográfico
            - ''
        ilfilmRating:
          enumDescriptions:
            - ''
            - AA
            - '12'
            - '14'
            - '16'
            - '18'
            - ''
          type: string
          enum:
            - ilfilmUnspecified
            - ilfilmAa
            - ilfilm12
            - ilfilm14
            - ilfilm16
            - ilfilm18
            - ilfilmUnrated
          description: The video's rating in Israel.
        mocRating:
          enum:
            - mocUnspecified
            - mocE
            - mocT
            - moc7
            - moc12
            - moc15
            - moc18
            - mocX
            - mocBanned
            - mocUnrated
          description: The video's Ministerio de Cultura (Colombia) rating.
          enumDescriptions:
            - ''
            - E
            - T
            - '7'
            - '12'
            - '15'
            - '18'
            - X
            - Banned
            - ''
          type: string
        cnaRating:
          enum:
            - cnaUnspecified
            - cnaAp
            - cna12
            - cna15
            - cna18
            - cna18plus
            - cnaUnrated
          enumDescriptions:
            - ''
            - AP
            - '12'
            - '15'
            - '18'
            - 18+
            - ''
          description: >-
            The video's rating from Romania's CONSILIUL NATIONAL AL
            AUDIOVIZUALULUI (CNA).
          type: string
        mcstRating:
          enumDescriptions:
            - ''
            - P
            - '0'
            - C13
            - C16
            - 16+
            - C18
            - MCST_G_PG
            - ''
          description: The video's rating system for Vietnam - MCST
          type: string
          enum:
            - mcstUnspecified
            - mcstP
            - mcst0
            - mcstC13
            - mcstC16
            - mcst16plus
            - mcstC18
            - mcstGPg
            - mcstUnrated
        nfrcRating:
          type: string
          description: The video's rating from the Bulgarian National Film Center.
          enum:
            - nfrcUnspecified
            - nfrcA
            - nfrcB
            - nfrcC
            - nfrcD
            - nfrcX
            - nfrcUnrated
          enumDescriptions:
            - ''
            - A
            - B
            - C
            - D
            - X
            - ''
        rcnofRating:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - rcnofUnspecified
            - rcnofI
            - rcnofIi
            - rcnofIii
            - rcnofIv
            - rcnofV
            - rcnofVi
            - rcnofUnrated
          description: >-
            The video's rating from the Hungarian Nemzeti Filmiroda, the Rating
            Committee of the National Office of Film.
          type: string
        oflcRating:
          description: >-
            The video's Office of Film and Literature Classification (OFLC - New
            Zealand) rating.
          enum:
            - oflcUnspecified
            - oflcG
            - oflcPg
            - oflcM
            - oflcR13
            - oflcR15
            - oflcR16
            - oflcR18
            - oflcUnrated
            - oflcRp13
            - oflcRp16
            - oflcRp18
          type: string
          enumDescriptions:
            - ''
            - G
            - PG
            - M
            - R13
            - R15
            - R16
            - R18
            - ''
            - RP13
            - RP16
            - RP18
        eirinRating:
          description: The video's Eirin (映倫) rating. Eirin is the Japanese rating system.
          type: string
          enum:
            - eirinUnspecified
            - eirinG
            - eirinPg12
            - eirinR15plus
            - eirinR18plus
            - eirinUnrated
          enumDescriptions:
            - ''
            - G
            - PG-12
            - R15+
            - R18+
            - ''
        ytRating:
          enumDescriptions:
            - ''
            - ''
          description: A rating that YouTube uses to identify age-restricted content.
          type: string
          enum:
            - ytUnspecified
            - ytAgeRestricted
        fskRating:
          description: >-
            The video's Freiwillige Selbstkontrolle der Filmwirtschaft (FSK -
            Germany) rating.
          enumDescriptions:
            - ''
            - FSK 0
            - FSK 6
            - FSK 12
            - FSK 16
            - FSK 18
            - ''
          enum:
            - fskUnspecified
            - fsk0
            - fsk6
            - fsk12
            - fsk16
            - fsk18
            - fskUnrated
          type: string
        mekuRating:
          enumDescriptions:
            - ''
            - S
            - '7'
            - '12'
            - '16'
            - '18'
            - ''
          enum:
            - mekuUnspecified
            - mekuS
            - meku7
            - meku12
            - meku16
            - meku18
            - mekuUnrated
          description: >-
            The video's rating from Finland's Kansallinen Audiovisuaalinen
            Instituutti (National Audiovisual Institute).
          type: string
        chfilmRating:
          enumDescriptions:
            - ''
            - '0'
            - '6'
            - '12'
            - '16'
            - '18'
            - ''
          enum:
            - chfilmUnspecified
            - chfilm0
            - chfilm6
            - chfilm12
            - chfilm16
            - chfilm18
            - chfilmUnrated
          description: The video's rating in Switzerland.
          type: string
        smaisRating:
          description: The video's rating in Iceland.
          type: string
          enum:
            - smaisUnspecified
            - smaisL
            - smais7
            - smais12
            - smais14
            - smais16
            - smais18
            - smaisUnrated
          enumDescriptions:
            - ''
            - L
            - '7'
            - '12'
            - '14'
            - '16'
            - '18'
            - ''
        mccypRating:
          description: >-
            The video's rating from the Danish Film Institute's (Det Danske
            Filminstitut) Media Council for Children and Young People.
          enumDescriptions:
            - ''
            - A
            - '7'
            - '11'
            - '15'
            - ''
          enum:
            - mccypUnspecified
            - mccypA
            - mccyp7
            - mccyp11
            - mccyp15
            - mccypUnrated
          type: string
        rteRating:
          enum:
            - rteUnspecified
            - rteGa
            - rteCh
            - rtePs
            - rteMa
            - rteUnrated
          type: string
          enumDescriptions:
            - ''
            - GA
            - CH
            - PS
            - MA
            - ''
          description: The video's rating from Ireland's Raidió Teilifís Éireann.
        mccaaRating:
          type: string
          enumDescriptions:
            - ''
            - U
            - PG
            - 12A
            - '12'
            - >-
              14 - this rating was removed from the new classification structure
              introduced in 2013.
            - '15'
            - >-
              16 - this rating was removed from the new classification structure
              introduced in 2013.
            - '18'
            - ''
          enum:
            - mccaaUnspecified
            - mccaaU
            - mccaaPg
            - mccaa12a
            - mccaa12
            - mccaa14
            - mccaa15
            - mccaa16
            - mccaa18
            - mccaaUnrated
          description: The video's rating from Malta's Film Age-Classification Board.
        mibacRating:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - mibacUnspecified
            - mibacT
            - mibacVap
            - mibacVm6
            - mibacVm12
            - mibacVm14
            - mibacVm16
            - mibacVm18
            - mibacUnrated
          type: string
          description: >-
            The video's rating from the Ministero dei Beni e delle Attività
            Culturali e del Turismo (Italy).
        ifcoRating:
          type: string
          description: >-
            The video's Irish Film Classification Office (IFCO - Ireland)
            rating. See the IFCO website for more information.
          enum:
            - ifcoUnspecified
            - ifcoG
            - ifcoPg
            - ifco12
            - ifco12a
            - ifco15
            - ifco15a
            - ifco16
            - ifco18
            - ifcoUnrated
          enumDescriptions:
            - ''
            - G
            - PG
            - '12'
            - 12A
            - '15'
            - 15A
            - '16'
            - '18'
            - ''
        cceRating:
          enum:
            - cceUnspecified
            - cceM4
            - cceM6
            - cceM12
            - cceM16
            - cceM18
            - cceUnrated
            - cceM14
          enumDescriptions:
            - ''
            - '4'
            - '6'
            - '12'
            - '16'
            - '18'
            - ''
            - '14'
          description: >-
            The video's rating from Portugal's Comissão de Classificação de
            Espect´culos.
          type: string
        acbRating:
          description: >-
            The video's Australian Classification Board (ACB) or Australian
            Communications and Media Authority (ACMA) rating. ACMA ratings are
            used to classify children's television programming.
          enumDescriptions:
            - ''
            - E
            - >-
              Programs that have been given a P classification by the Australian
              Communications and Media Authority. These programs are intended
              for preschool children.
            - >-
              Programs that have been given a C classification by the Australian
              Communications and Media Authority. These programs are intended
              for children (other than preschool children) who are younger than
              14 years of age.
            - G
            - PG
            - M
            - MA15+
            - R18+
            - ''
          enum:
            - acbUnspecified
            - acbE
            - acbP
            - acbC
            - acbG
            - acbPg
            - acbM
            - acbMa15plus
            - acbR18plus
            - acbUnrated
          type: string
        resorteviolenciaRating:
          enum:
            - resorteviolenciaUnspecified
            - resorteviolenciaA
            - resorteviolenciaB
            - resorteviolenciaC
            - resorteviolenciaD
            - resorteviolenciaE
            - resorteviolenciaUnrated
          description: The video's rating in Venezuela.
          type: string
          enumDescriptions:
            - ''
            - A
            - B
            - C
            - D
            - E
            - ''
        mpaatRating:
          description: >-
            The rating system for trailer, DVD, and Ad in the US. See
            http://movielabs.com/md/ratings/v2.3/html/US_MPAAT_Ratings.html.
          type: string
          enumDescriptions:
            - ''
            - GB
            - RB
          enum:
            - mpaatUnspecified
            - mpaatGb
            - mpaatRb
        cbfcRating:
          description: >-
            The video's Central Board of Film Certification (CBFC - India)
            rating.
          enum:
            - cbfcUnspecified
            - cbfcU
            - cbfcUA
            - cbfcUA7plus
            - cbfcUA13plus
            - cbfcUA16plus
            - cbfcA
            - cbfcS
            - cbfcUnrated
          type: string
          enumDescriptions:
            - ''
            - U
            - U/A
            - U/A 7+
            - U/A 13+
            - U/A 16+
            - A
            - S
            - ''
        menaMpaaRating:
          type: string
          description: >-
            The rating system for MENA countries, a clone of MPAA. It is needed
            to prevent titles go live w/o additional QC check, since some of
            them can be inappropriate for the countries at all. See b/33408548
            for more details.
          enumDescriptions:
            - ''
            - G
            - PG
            - PG-13
            - R
            - To keep the same enum values as MPAA's items have, skip NC_17.
          enum:
            - menaMpaaUnspecified
            - menaMpaaG
            - menaMpaaPg
            - menaMpaaPg13
            - menaMpaaR
            - menaMpaaUnrated
        skfilmRating:
          enumDescriptions:
            - ''
            - G
            - P2
            - P5
            - P8
            - ''
          type: string
          description: The video's rating in Slovakia.
          enum:
            - skfilmUnspecified
            - skfilmG
            - skfilmP2
            - skfilmP5
            - skfilmP8
            - skfilmUnrated
        cscfRating:
          type: string
          description: >-
            The video's rating from Luxembourg's Commission de surveillance de
            la classification des films (CSCF).
          enumDescriptions:
            - ''
            - AL
            - A
            - '6'
            - '9'
            - '12'
            - '16'
            - '18'
            - ''
          enum:
            - cscfUnspecified
            - cscfAl
            - cscfA
            - cscf6
            - cscf9
            - cscf12
            - cscf16
            - cscf18
            - cscfUnrated
        catvfrRating:
          enum:
            - catvfrUnspecified
            - catvfrG
            - catvfr8plus
            - catvfr13plus
            - catvfr16plus
            - catvfr18plus
            - catvfrUnrated
            - catvfrE
          type: string
          description: >-
            The video's rating from the Canadian Radio-Television and
            Telecommunications Commission (CRTC) for Canadian French-language
            broadcasts. For more information, see the Canadian Broadcast
            Standards Council website.
          enumDescriptions:
            - ''
            - G
            - 8+
            - 13+
            - 16+
            - 18+
            - ''
            - ''
        anatelRating:
          enum:
            - anatelUnspecified
            - anatelF
            - anatelI
            - anatelI7
            - anatelI10
            - anatelI12
            - anatelR
            - anatelA
            - anatelUnrated
          description: >-
            The video's Anatel (Asociación Nacional de Televisión) rating for
            Chilean television.
          type: string
          enumDescriptions:
            - ''
            - F
            - I
            - I-7
            - I-10
            - I-12
            - R
            - A
            - ''
      id: ContentRating
    LiveChatFanFundingEventDetails:
      properties:
        amountMicros:
          format: uint64
          description: The amount of the fund.
          type: string
        userComment:
          type: string
          description: The comment added by the user to this fan funding event.
        currency:
          description: The currency in which the fund was made.
          type: string
        amountDisplayString:
          type: string
          description: >-
            A rendered string that displays the fund amount and currency to the
            user.
      type: object
      id: LiveChatFanFundingEventDetails
    CommentSnippet:
      properties:
        videoId:
          type: string
          description: The ID of the video the comment refers to, if any.
        authorDisplayName:
          description: The name of the user who posted the comment.
          type: string
        textDisplay:
          description: >-
            The comment's text. The format is either plain text or HTML
            dependent on what has been requested. Even the plain text
            representation may differ from the text originally posted in that it
            may replace video links with video titles etc.
          type: string
        authorProfileImageUrl:
          type: string
          description: The URL for the avatar of the user who posted the comment.
        updatedAt:
          type: string
          description: The date and time when the comment was last updated.
          format: date-time
        parentId:
          description: The unique id of the parent comment, only set for replies.
          type: string
        canRate:
          type: boolean
          description: Whether the current viewer can rate this comment.
        viewerRating:
          enum:
            - none
            - like
            - dislike
          enumDescriptions:
            - ''
            - The entity is liked.
            - The entity is disliked.
          description: >-
            The rating the viewer has given to this comment. For the time being
            this will never return RATE_TYPE_DISLIKE and instead return
            RATE_TYPE_NONE. This may change in the future.
          type: string
        publishedAt:
          description: The date and time when the comment was originally published.
          format: date-time
          type: string
        authorChannelId:
          $ref: '#/components/schemas/CommentSnippetAuthorChannelId'
        authorChannelUrl:
          description: Link to the author's YouTube channel, if any.
          type: string
        channelId:
          description: >-
            The id of the corresponding YouTube channel. In case of a channel
            comment this is the channel the comment refers to. In case of a
            video comment it's the video's channel.
          type: string
        textOriginal:
          description: >-
            The comment's original raw text as initially posted or last updated.
            The original text will only be returned if it is accessible to the
            viewer, which is only guaranteed if the viewer is the comment's
            author.
          type: string
        likeCount:
          type: integer
          format: uint32
          description: The total number of likes this comment has received.
        moderationStatus:
          type: string
          enum:
            - published
            - heldForReview
            - likelySpam
            - rejected
          description: >-
            The comment's moderation status. Will not be set if the comments
            were requested through the id filter.
          enumDescriptions:
            - The comment is available for public display.
            - The comment is awaiting review by a moderator.
            - ''
            - The comment is unfit for display.
      type: object
      description: Basic details about a comment, such as its author and text.
      id: CommentSnippet
    ActivityContentDetailsFavorite:
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
          description: >-
            The resourceId object contains information that identifies the
            resource that was marked as a favorite.
      type: object
      id: ActivityContentDetailsFavorite
      description: Information about a video that was marked as a favorite video.
    ThirdPartyLinkSnippet:
      description: >-
        Basic information about a third party account link, including its type
        and type-specific information.
      properties:
        type:
          type: string
          description: Type of the link named after the entities that are being linked.
          enum:
            - linkUnspecified
            - channelToStoreLink
          enumDescriptions:
            - ''
            - >-
              A link that is connecting (or about to connect) a channel with a
              store on a merchandising platform in order to enable retail
              commerce capabilities for that channel on YouTube.
        channelToStoreLink:
          description: >-
            Information specific to a link between a channel and a store on a
            merchandising platform.
          $ref: '#/components/schemas/ChannelToStoreLinkDetails'
      type: object
      id: ThirdPartyLinkSnippet
    PlaylistItemSnippet:
      properties:
        videoOwnerChannelId:
          description: Channel id for the channel this video belongs to.
          type: string
        position:
          format: uint32
          type: integer
          description: >-
            The order in which the item appears in the playlist. The value uses
            a zero-based index, so the first item has a position of 0, the
            second item has a position of 1, and so forth.
        channelId:
          description: >-
            The ID that YouTube uses to uniquely identify the user that added
            the item to the playlist.
          type: string
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
          description: >-
            A map of thumbnail images associated with the playlist item. For
            each object in the map, the key is the name of the thumbnail image,
            and the value is an object that contains other information about the
            thumbnail.
        title:
          description: The item's title.
          type: string
        publishedAt:
          format: date-time
          type: string
          description: The date and time that the item was added to the playlist.
        description:
          type: string
          description: The item's description.
        videoOwnerChannelTitle:
          type: string
          description: Channel title for the channel this video belongs to.
        playlistId:
          annotations:
            required:
              - youtube.playlistItems.insert
              - youtube.playlistItems.update
          type: string
          description: >-
            The ID that YouTube uses to uniquely identify thGe playlist that the
            playlist item is in.
        resourceId:
          annotations:
            required:
              - youtube.playlistItems.insert
              - youtube.playlistItems.update
          description: >-
            The id object contains information that can be used to uniquely
            identify the resource that is included in the playlist as the
            playlist item.
          $ref: '#/components/schemas/ResourceId'
        channelTitle:
          type: string
          description: Channel title for the channel that the playlist item belongs to.
      description: >-
        Basic details about a playlist, including title, description and
        thumbnails. Basic details of a YouTube Playlist item provided by the
        author. Next ID: 15
      type: object
      id: PlaylistItemSnippet
    ChannelTopicDetails:
      id: ChannelTopicDetails
      description: Freebase topic information related to the channel.
      properties:
        topicIds:
          items:
            type: string
          type: array
          description: >-
            A list of Freebase topic IDs associated with the channel. You can
            retrieve information about each topic using the Freebase Topic API.
        topicCategories:
          type: array
          items:
            type: string
          description: A list of Wikipedia URLs that describe the channel's content.
      type: object
    PlaylistStatus:
      properties:
        privacyStatus:
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - public
            - unlisted
            - private
          type: string
          description: The playlist's privacy status.
      type: object
      id: PlaylistStatus
    VideoCategorySnippet:
      id: VideoCategorySnippet
      properties:
        channelId:
          description: The YouTube channel that created the video category.
          default: UCBR8-60-B28hp2BmDPdntcQ
          type: string
        assignable:
          type: boolean
        title:
          type: string
          description: The video category's title.
      type: object
      description: Basic details about a video category, such as its localized title.
    Entity:
      id: Entity
      type: object
      properties:
        id:
          type: string
        typeId:
          type: string
        url:
          type: string
    VideoAbuseReportReasonSnippet:
      type: object
      id: VideoAbuseReportReasonSnippet
      properties:
        label:
          type: string
          description: The localized label belonging to this abuse report reason.
        secondaryReasons:
          items:
            $ref: '#/components/schemas/VideoAbuseReportSecondaryReason'
          description: >-
            The secondary reasons associated with this reason, if any are
            available. (There might be 0 or more.)
          type: array
      description: Basic details about a video category, such as its localized title.
    ActivitySnippet:
      properties:
        thumbnails:
          description: >-
            A map of thumbnail images associated with the resource that is
            primarily associated with the activity. For each object in the map,
            the key is the name of the thumbnail image, and the value is an
            object that contains other information about the thumbnail.
          $ref: '#/components/schemas/ThumbnailDetails'
        channelTitle:
          type: string
          description: Channel title for the channel responsible for this activity
        title:
          type: string
          description: The title of the resource primarily associated with the activity.
        type:
          description: The type of activity that the resource describes.
          enum:
            - typeUnspecified
            - upload
            - like
            - favorite
            - comment
            - subscription
            - playlistItem
            - recommendation
            - bulletin
            - social
            - channelItem
            - promotedItem
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        publishedAt:
          format: date-time
          description: The date and time that the video was uploaded.
          type: string
        channelId:
          description: >-
            The ID that YouTube uses to uniquely identify the channel associated
            with the activity.
          type: string
        description:
          type: string
          description: >-
            The description of the resource primarily associated with the
            activity. @mutable youtube.activities.insert
        groupId:
          type: string
          description: >-
            The group ID associated with the activity. A group ID identifies
            user events that are associated with the same user and resource. For
            example, if a user rates a video and marks the same video as a
            favorite, the entries for those events would have the same group ID
            in the user's activity feed. In your user interface, you can avoid
            repetition by grouping events with the same groupId value.
      description: >-
        Basic details about an activity, including title, description,
        thumbnails, activity type and group. Next ID: 12
      id: ActivitySnippet
      type: object
    I18nRegion:
      description: A *i18nRegion* resource identifies a region where YouTube is available.
      type: object
      properties:
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the i18n region.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#i18nRegion".
          default: youtube#i18nRegion
          type: string
        snippet:
          $ref: '#/components/schemas/I18nRegionSnippet'
          description: >-
            The snippet object contains basic details about the i18n region,
            such as region code and human-readable name.
        etag:
          type: string
          description: Etag of this resource.
      id: I18nRegion
    ChannelBrandingSettings:
      properties:
        watch:
          $ref: '#/components/schemas/WatchSettings'
          description: Branding properties for the watch page.
        hints:
          type: array
          description: Additional experimental branding properties.
          items:
            $ref: '#/components/schemas/PropertyValue'
        image:
          $ref: '#/components/schemas/ImageSettings'
          description: Branding properties for branding images.
        channel:
          $ref: '#/components/schemas/ChannelSettings'
          description: Branding properties for the channel view.
      type: object
      id: ChannelBrandingSettings
      description: Branding properties of a YouTube channel.
    CommentListResponse:
      properties:
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        nextPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
        etag:
          type: string
          description: Etag of this resource.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#commentListResponse".
          default: youtube#commentListResponse
          type: string
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        items:
          type: array
          description: A list of comments that match the request criteria.
          items:
            $ref: '#/components/schemas/Comment'
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: General pagination information.
      type: object
      id: CommentListResponse
    GeoPoint:
      properties:
        longitude:
          format: double
          type: number
          description: Longitude in degrees.
        latitude:
          description: Latitude in degrees.
          type: number
          format: double
        altitude:
          type: number
          description: Altitude above the reference ellipsoid, in meters.
          format: double
      description: Geographical coordinates of a point, in WGS84.
      type: object
      id: GeoPoint
    ChannelStatistics:
      id: ChannelStatistics
      properties:
        videoCount:
          description: The number of videos uploaded to the channel.
          type: string
          format: uint64
        commentCount:
          description: The number of comments for the channel.
          format: uint64
          type: string
        subscriberCount:
          description: The number of subscribers that the channel has.
          format: uint64
          type: string
        viewCount:
          format: uint64
          description: The number of times the channel has been viewed.
          type: string
        hiddenSubscriberCount:
          description: Whether or not the number of subscribers is shown for this user.
          type: boolean
      type: object
      description: >-
        Statistics about a channel: number of subscribers, number of videos in
        the channel, etc.
    LiveBroadcast:
      description: >-
        A *liveBroadcast* resource represents an event that will be streamed,
        via live video, on YouTube.
      type: object
      id: LiveBroadcast
      properties:
        statistics:
          description: >-
            The statistics object contains info about the event's current stats.
            These include concurrent viewers and total chat count. Statistics
            can change (in either direction) during the lifetime of an event.
            Statistics are only returned while the event is live.
          $ref: '#/components/schemas/LiveBroadcastStatistics'
        snippet:
          $ref: '#/components/schemas/LiveBroadcastSnippet'
          description: >-
            The snippet object contains basic details about the event, including
            its title, description, start time, and end time.
        etag:
          type: string
          description: Etag of this resource.
        status:
          description: The status object contains information about the event's status.
          $ref: '#/components/schemas/LiveBroadcastStatus'
        contentDetails:
          $ref: '#/components/schemas/LiveBroadcastContentDetails'
          description: >-
            The contentDetails object contains information about the event's
            video content, such as whether the content can be shown in an
            embedded video player or if it will be archived and therefore
            available for viewing after the event has concluded.
        kind:
          type: string
          default: youtube#liveBroadcast
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#liveBroadcast".
        id:
          type: string
          annotations:
            required:
              - youtube.liveBroadcasts.update
          description: The ID that YouTube assigns to uniquely identify the broadcast.
    ActivityContentDetailsComment:
      type: object
      properties:
        resourceId:
          description: >-
            The resourceId object contains information that identifies the
            resource associated with the comment.
          $ref: '#/components/schemas/ResourceId'
      description: Information about a resource that received a comment.
      id: ActivityContentDetailsComment
    LiveChatBanSnippet:
      properties:
        type:
          type: string
          description: The type of ban.
          enum:
            - liveChatBanTypeUnspecified
            - permanent
            - temporary
          enumDescriptions:
            - An invalid ban type.
            - A permanent ban.
            - A temporary ban.
        banDurationSeconds:
          type: string
          description: The duration of a ban, only filled if the ban has type TEMPORARY.
          format: uint64
        liveChatId:
          type: string
          description: The chat this ban is pertinent to.
        bannedUserDetails:
          $ref: '#/components/schemas/ChannelProfileDetails'
      id: LiveChatBanSnippet
      type: object
    ActivityContentDetailsSocial:
      id: ActivityContentDetailsSocial
      type: object
      properties:
        type:
          enum:
            - unspecified
            - googlePlus
            - facebook
            - twitter
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: The name of the social network.
          type: string
        referenceUrl:
          description: The URL of the social network post.
          type: string
        author:
          description: The author of the social network post.
          type: string
        imageUrl:
          description: An image of the post's author.
          type: string
        resourceId:
          $ref: '#/components/schemas/ResourceId'
          description: >-
            The resourceId object encapsulates information that identifies the
            resource associated with a social network post.
      description: Details about a social network post.
    I18nRegionSnippet:
      id: I18nRegionSnippet
      description: >-
        Basic details about an i18n region, such as region code and
        human-readable name.
      type: object
      properties:
        name:
          description: The human-readable name of the region.
          type: string
        gl:
          type: string
          description: The region code as a 2-letter ISO country code.
    LiveBroadcastListResponse:
      type: object
      id: LiveBroadcastListResponse
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#liveBroadcastListResponse".
          default: youtube#liveBroadcastListResponse
          type: string
        items:
          description: A list of broadcasts that match the request criteria.
          items:
            $ref: '#/components/schemas/LiveBroadcast'
          type: array
        nextPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        pageInfo:
          description: General pagination information.
          $ref: '#/components/schemas/PageInfo'
        prevPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the previous page in the result set.
        etag:
          description: Etag of this resource.
          type: string
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
    ChannelContentDetails:
      type: object
      id: ChannelContentDetails
      description: Details about the content of a channel.
      properties:
        relatedPlaylists:
          type: object
          properties:
            favorites:
              description: >-
                The ID of the playlist that contains the channel"s favorite
                videos. Use the playlistItems.insert and playlistItems.delete to
                add or remove items from that list.
              type: string
            watchHistory:
              type: string
              description: >-
                The ID of the playlist that contains the channel"s watch
                history. Use the playlistItems.insert and playlistItems.delete
                to add or remove items from that list.
            watchLater:
              description: >-
                The ID of the playlist that contains the channel"s watch later
                playlist. Use the playlistItems.insert and playlistItems.delete
                to add or remove items from that list.
              type: string
            likes:
              type: string
              description: >-
                The ID of the playlist that contains the channel"s liked videos.
                Use the playlistItems.insert and playlistItems.delete to add or
                remove items from that list.
            uploads:
              description: >-
                The ID of the playlist that contains the channel"s uploaded
                videos. Use the videos.insert method to upload new videos and
                the videos.delete method to delete previously uploaded videos.
              type: string
    LiveChatMembershipGiftingDetails:
      type: object
      id: LiveChatMembershipGiftingDetails
      properties:
        giftMembershipsLevelName:
          type: string
          description: >-
            The name of the level of the gift memberships purchased by the user.
            The Level names are defined by the YouTube channel offering the
            Membership. In some situations this field isn't filled.
        giftMembershipsCount:
          format: int32
          type: integer
          description: The number of gift memberships purchased by the user.
    SubscriptionListResponse:
      id: SubscriptionListResponse
      properties:
        kind:
          type: string
          default: youtube#subscriptionListResponse
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#subscriptionListResponse".
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        prevPageToken:
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the previous page in the result set.
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
          description: A list of subscriptions that match the request criteria.
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        etag:
          type: string
          description: Etag of this resource.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        nextPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
      type: object
    IngestionInfo:
      properties:
        ingestionAddress:
          description: >-
            The primary ingestion URL that you should use to stream video to
            YouTube. You must stream video to this URL. Depending on which
            application or tool you use to encode your video stream, you may
            need to enter the stream URL and stream name separately or you may
            need to concatenate them in the following format:
            *STREAM_URL/STREAM_NAME* 
          type: string
        rtmpsIngestionAddress:
          type: string
          description: >-
            This ingestion url may be used instead of ingestionAddress in order
            to stream via RTMPS. Not applicable to non-RTMP streams.
        backupIngestionAddress:
          type: string
          description: >-
            The backup ingestion URL that you should use to stream video to
            YouTube. You have the option of simultaneously streaming the content
            that you are sending to the ingestionAddress to this URL.
        streamName:
          type: string
          description: The stream name that YouTube assigns to the video stream.
        rtmpsBackupIngestionAddress:
          type: string
          description: >-
            This ingestion url may be used instead of backupIngestionAddress in
            order to stream via RTMPS. Not applicable to non-RTMP streams.
      description: >-
        Describes information necessary for ingesting an RTMP, HTTP, or SRT
        stream.
      type: object
      id: IngestionInfo
    MemberListResponse:
      id: MemberListResponse
      properties:
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        etag:
          type: string
          description: Etag of this resource.
        items:
          description: A list of members that match the request criteria.
          items:
            $ref: '#/components/schemas/Member'
          type: array
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#memberListResponse".
          default: youtube#memberListResponse
          type: string
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        nextPageToken:
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
          type: string
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
      type: object
    PlaylistListResponse:
      type: object
      id: PlaylistListResponse
      properties:
        prevPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the previous page in the result set.
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        pageInfo:
          description: General pagination information.
          $ref: '#/components/schemas/PageInfo'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        nextPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#playlistListResponse".
          type: string
          default: youtube#playlistListResponse
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        items:
          description: A list of playlists that match the request criteria
          items:
            $ref: '#/components/schemas/Playlist'
          type: array
        etag:
          type: string
          description: Etag of this resource.
    LiveStreamHealthStatus:
      id: LiveStreamHealthStatus
      type: object
      properties:
        configurationIssues:
          items:
            $ref: '#/components/schemas/LiveStreamConfigurationIssue'
          description: The configurations issues on this stream
          type: array
        status:
          description: The status code of this stream
          type: string
          enum:
            - good
            - ok
            - bad
            - noData
            - revoked
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
        lastUpdateTimeSeconds:
          format: uint64
          type: string
          description: The last time this status was updated (in seconds)
    LocalizedString:
      id: LocalizedString
      type: object
      properties:
        value:
          type: string
        language:
          type: string
    VideoProcessingDetailsProcessingProgress:
      id: VideoProcessingDetailsProcessingProgress
      properties:
        partsProcessed:
          format: uint64
          description: >-
            The number of parts of the video that YouTube has already processed.
            You can estimate the percentage of the video that YouTube has
            already processed by calculating: 100 * parts_processed /
            parts_total Note that since the estimated number of parts could
            increase without a corresponding increase in the number of parts
            that have already been processed, it is possible that the calculated
            progress could periodically decrease while YouTube processes a
            video.
          type: string
        timeLeftMs:
          type: string
          format: uint64
          description: >-
            An estimate of the amount of time, in millseconds, that YouTube
            needs to finish processing the video.
        partsTotal:
          type: string
          description: >-
            An estimate of the total number of parts that need to be processed
            for the video. The number may be updated with more precise estimates
            while YouTube processes the video.
          format: uint64
      type: object
      description: Video processing progress and completion time estimate.
    ActivityContentDetailsChannelItem:
      id: ActivityContentDetailsChannelItem
      type: object
      description: Details about a resource which was added to a channel.
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
          description: >-
            The resourceId object contains information that identifies the
            resource that was added to the channel.
    LiveChatMessage:
      id: LiveChatMessage
      type: object
      description: >-
        A *liveChatMessage* resource represents a chat message in a YouTube Live
        Chat.
      properties:
        kind:
          default: youtube#liveChatMessage
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#liveChatMessage".
        id:
          type: string
          description: The ID that YouTube assigns to uniquely identify the message.
        etag:
          description: Etag of this resource.
          type: string
        snippet:
          $ref: '#/components/schemas/LiveChatMessageSnippet'
          description: The snippet object contains basic details about the message.
        authorDetails:
          $ref: '#/components/schemas/LiveChatMessageAuthorDetails'
          description: >-
            The authorDetails object contains basic details about the user that
            posted this message.
    VideoProjectDetails:
      type: object
      description: >-
        DEPRECATED. b/157517979: This part was never populated after it was
        added. However, it sees non-zero traffic because there is generated
        client code in the wild that refers to it [1]. We keep this field and do
        NOT remove it because otherwise V3 would return an error when this part
        gets requested [2]. [1]
        https://developers.google.com/resources/api-libraries/documentation/youtube/v3/csharp/latest/classGoogle_1_1Apis_1_1YouTube_1_1v3_1_1Data_1_1VideoProjectDetails.html
        [2]
        http://google3/video/youtube/src/python/servers/data_api/common.py?l=1565-1569&rcl=344141677
      properties: {}
      id: VideoProjectDetails
    PlaylistItemListResponse:
      properties:
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        nextPageToken:
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#playlistItemListResponse". Etag of this resource.
          type: string
          default: youtube#playlistItemListResponse
        prevPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the previous page in the result set.
        etag:
          type: string
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: General pagination information.
        items:
          items:
            $ref: '#/components/schemas/PlaylistItem'
          description: A list of playlist items that match the request criteria.
          type: array
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
      id: PlaylistItemListResponse
      type: object
    LiveChatModeratorSnippet:
      id: LiveChatModeratorSnippet
      type: object
      properties:
        moderatorDetails:
          description: Details about the moderator.
          $ref: '#/components/schemas/ChannelProfileDetails'
        liveChatId:
          type: string
          description: The ID of the live chat this moderator can act on.
    ChannelSectionContentDetails:
      description: Details about a channelsection, including playlists and channels.
      type: object
      properties:
        playlists:
          type: array
          description: >-
            The playlist ids for type single_playlist and multiple_playlists.
            For singlePlaylist, only one playlistId is allowed.
          items:
            type: string
        channels:
          items:
            type: string
          description: The channel ids for type multiple_channels.
          type: array
      id: ChannelSectionContentDetails
    VideoGetRatingResponse:
      id: VideoGetRatingResponse
      properties:
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        etag:
          description: Etag of this resource.
          type: string
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        items:
          description: A list of ratings that match the request criteria.
          items:
            $ref: '#/components/schemas/VideoRating'
          type: array
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#videoGetRatingResponse".
          default: youtube#videoGetRatingResponse
          type: string
      type: object
    ThirdPartyLinkListResponse:
      id: ThirdPartyLinkListResponse
      type: object
      properties:
        etag:
          type: string
          description: Etag of this resource.
        kind:
          default: youtube#thirdPartyLinkListResponse
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#thirdPartyLinkListResponse".
          type: string
        items:
          items:
            $ref: '#/components/schemas/ThirdPartyLink'
          type: array
    LevelDetails:
      properties:
        displayName:
          type: string
          description: The name that should be used when referring to this level.
      id: LevelDetails
      type: object
    CommentThreadSnippet:
      description: Basic details about a comment thread.
      id: CommentThreadSnippet
      type: object
      properties:
        videoId:
          description: >-
            The ID of the video the comments refer to, if any. No video_id
            implies a channel discussion comment.
          type: string
        channelId:
          description: >-
            The YouTube channel the comments in the thread refer to or the
            channel with the video the comments refer to. If video_id isn't set
            the comments refer to the channel itself.
          type: string
        topLevelComment:
          $ref: '#/components/schemas/Comment'
          description: The top level comment of this thread.
        canReply:
          description: >-
            Whether the current viewer of the thread can reply to it. This is
            viewer specific - other viewers may see a different value for this
            field.
          type: boolean
        totalReplyCount:
          description: The total number of replies (not including the top level comment).
          type: integer
          format: uint32
        isPublic:
          type: boolean
          description: >-
            Whether the thread (and therefore all its comments) is visible to
            all YouTube users.
    VideoLiveStreamingDetails:
      id: VideoLiveStreamingDetails
      properties:
        concurrentViewers:
          description: >-
            The number of viewers currently watching the broadcast. The property
            and its value will be present if the broadcast has current viewers
            and the broadcast owner has not hidden the viewcount for the video.
            Note that YouTube stops tracking the number of concurrent viewers
            for a broadcast when the broadcast ends. So, this property would not
            identify the number of viewers watching an archived video of a live
            broadcast that already ended.
          type: string
          format: uint64
        activeLiveChatId:
          type: string
          description: >-
            The ID of the currently active live chat attached to this video.
            This field is filled only if the video is a currently live broadcast
            that has live chat. Once the broadcast transitions to complete this
            field will be removed and the live chat closed down. For persistent
            broadcasts that live chat id will no longer be tied to this video
            but rather to the new video being displayed at the persistent page.
        scheduledStartTime:
          format: date-time
          type: string
          description: The time that the broadcast is scheduled to begin.
        actualEndTime:
          format: date-time
          description: >-
            The time that the broadcast actually ended. This value will not be
            available until the broadcast is over.
          type: string
        actualStartTime:
          description: >-
            The time that the broadcast actually started. This value will not be
            available until the broadcast begins.
          type: string
          format: date-time
        scheduledEndTime:
          format: date-time
          description: >-
            The time that the broadcast is scheduled to end. If the value is
            empty or the property is not present, then the broadcast is
            scheduled to contiue indefinitely.
          type: string
      description: Details about the live streaming metadata.
      type: object
    CaptionSnippet:
      id: CaptionSnippet
      properties:
        isDraft:
          description: >-
            Indicates whether the caption track is a draft. If the value is
            true, then the track is not publicly visible. The default value is
            false. @mutable youtube.captions.insert youtube.captions.update
          type: boolean
        isEasyReader:
          type: boolean
          description: >-
            Indicates whether caption track is formatted for "easy reader,"
            meaning it is at a third-grade level for language learners. The
            default value is false.
        audioTrackType:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          type: string
          description: The type of audio track associated with the caption track.
          enum:
            - unknown
            - primary
            - commentary
            - descriptive
        isCC:
          description: >-
            Indicates whether the track contains closed captions for the deaf
            and hard of hearing. The default value is false.
          type: boolean
        trackKind:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          description: The caption track's type.
          enum:
            - standard
            - ASR
            - forced
        language:
          type: string
          description: >-
            The language of the caption track. The property value is a BCP-47
            language tag.
          annotations:
            required:
              - youtube.captions.insert
        lastUpdated:
          format: date-time
          description: The date and time when the caption track was last updated.
          type: string
        failureReason:
          description: >-
            The reason that YouTube failed to process the caption track. This
            property is only present if the state property's value is failed.
          enum:
            - unknownFormat
            - unsupportedFormat
            - processingFailed
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
        status:
          type: string
          enum:
            - serving
            - syncing
            - failed
          description: The caption track's status.
          enumDescriptions:
            - ''
            - ''
            - ''
        isLarge:
          description: >-
            Indicates whether the caption track uses large text for the
            vision-impaired. The default value is false.
          type: boolean
        isAutoSynced:
          description: >-
            Indicates whether YouTube synchronized the caption track to the
            audio track in the video. The value will be true if a sync was
            explicitly requested when the caption track was uploaded. For
            example, when calling the captions.insert or captions.update
            methods, you can set the sync parameter to true to instruct YouTube
            to sync the uploaded track to the video. If the value is false,
            YouTube uses the time codes in the uploaded caption track to
            determine when to display captions.
          type: boolean
        videoId:
          annotations:
            required:
              - youtube.captions.insert
          description: >-
            The ID that YouTube uses to uniquely identify the video associated
            with the caption track. @mutable youtube.captions.insert
          type: string
        name:
          annotations:
            required:
              - youtube.captions.insert
          type: string
          description: >-
            The name of the caption track. The name is intended to be visible to
            the user as an option during playback.
      type: object
      description: Basic details about a caption track, such as its language and name.
    Activity:
      type: object
      description: >-
        An *activity* resource contains information about an action that a
        particular channel, or user, has taken on YouTube.The actions reported
        in activity feeds include rating a video, sharing a video, marking a
        video as a favorite, commenting on a video, uploading a video, and so
        forth. Each activity resource identifies the type of action, the channel
        associated with the action, and the resource(s) associated with the
        action, such as the video that was rated or uploaded.
      id: Activity
      properties:
        id:
          description: The ID that YouTube uses to uniquely identify the activity.
          type: string
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#activity".
          default: youtube#activity
        etag:
          type: string
          description: Etag of this resource
        snippet:
          $ref: '#/components/schemas/ActivitySnippet'
          description: >-
            The snippet object contains basic details about the activity,
            including the activity's type and group ID.
        contentDetails:
          $ref: '#/components/schemas/ActivityContentDetails'
          description: >-
            The contentDetails object contains information about the content
            associated with the activity. For example, if the snippet.type value
            is videoRated, then the contentDetails object's content identifies
            the rated video.
    LiveChatMemberMilestoneChatDetails:
      id: LiveChatMemberMilestoneChatDetails
      type: object
      properties:
        memberMonth:
          description: >-
            The total amount of months (rounded up) the viewer has been a member
            that granted them this Member Milestone Chat. This is the same
            number of months as is being displayed to YouTube users.
          type: integer
          format: uint32
        userComment:
          type: string
          description: >-
            The comment added by the member to this Member Milestone Chat. This
            field is empty for messages without a comment from the member.
        memberLevelName:
          type: string
          description: >-
            The name of the Level at which the viever is a member. The Level
            names are defined by the YouTube channel offering the Membership. In
            some situations this field isn't filled.
    LiveStreamStatus:
      description: Brief description of the live stream status.
      id: LiveStreamStatus
      properties:
        streamStatus:
          enum:
            - created
            - ready
            - active
            - inactive
            - error
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
        healthStatus:
          description: The health status of the stream.
          $ref: '#/components/schemas/LiveStreamHealthStatus'
      type: object
    VideoRecordingDetails:
      id: VideoRecordingDetails
      properties:
        location:
          description: The geolocation information associated with the video.
          $ref: '#/components/schemas/GeoPoint'
        recordingDate:
          format: date-time
          type: string
          description: The date and time when the video was recorded.
        locationDescription:
          description: The text description of the location where the video was recorded.
          type: string
      description: Recording information associated with the video.
      type: object
    CdnSettings:
      description: Brief description of the live stream cdn settings.
      properties:
        resolution:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          description: The resolution of the inbound video data.
          enum:
            - 240p
            - 360p
            - 480p
            - 720p
            - 1080p
            - 1440p
            - 2160p
            - variable
        frameRate:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          description: The frame rate of the inbound video data.
          enum:
            - 30fps
            - 60fps
            - variable
        ingestionInfo:
          description: >-
            The ingestionInfo object contains information that YouTube provides
            that you need to transmit your RTMP or HTTP stream to YouTube.
          $ref: '#/components/schemas/IngestionInfo'
        format:
          type: string
          description: 'The format of the video stream that you are sending to Youtube. '
          annotations:
            required:
              - youtube.liveStreams.insert
              - youtube.liveStreams.update
        ingestionType:
          description: ' The method or protocol used to transmit the video stream.'
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          enum:
            - rtmp
            - dash
            - webrtc
            - hls
          type: string
          annotations:
            required:
              - youtube.liveStreams.insert
              - youtube.liveStreams.update
      type: object
      id: CdnSettings
    LiveBroadcastContentDetails:
      description: Detailed settings of a broadcast.
      id: LiveBroadcastContentDetails
      type: object
      properties:
        enableContentEncryption:
          description: >-
            This setting indicates whether YouTube should enable content
            encryption for the broadcast.
          type: boolean
        enableLowLatency:
          type: boolean
          description: Indicates whether this broadcast has low latency enabled.
        enableDvr:
          type: boolean
          description: >-
            This setting determines whether viewers can access DVR controls
            while watching the video. DVR controls enable the viewer to control
            the video playback experience by pausing, rewinding, or fast
            forwarding content. The default value for this property is true.
            *Important:* You must set the value to true and also set the
            enableArchive property's value to true if you want to make playback
            available immediately after the broadcast ends.
        stereoLayout:
          description: The 3D stereo layout of this broadcast. This defaults to mono.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          enum:
            - stereoLayoutUnspecified
            - mono
            - leftRight
            - topBottom
        recordFromStart:
          type: boolean
          description: >-
            Automatically start recording after the event goes live. The default
            value for this property is true. *Important:* You must also set the
            enableDvr property's value to true if you want the playback to be
            available immediately after the broadcast ends. If you set this
            property's value to true but do not also set the enableDvr property
            to true, there may be a delay of around one day before the archived
            video will be available for playback.
        mesh:
          description: >-
            The mesh for projecting the video if projection is mesh. The mesh
            value must be a UTF-8 string containing the base-64 encoding of 3D
            mesh data that follows the Spherical Video V2 RFC specification for
            an mshp box, excluding the box size and type but including the
            following four reserved zero bytes for the version and flags.
          format: byte
          type: string
        latencyPreference:
          enumDescriptions:
            - ''
            - 'Best for: highest quality viewer playbacks and higher resolutions.'
            - >-
              Best for: near real-time interaction, with minimal playback
              buffering.
            - >-
              Best for: real-time interaction Does not support: Closed captions,
              1440p, and 4k resolutions
          enum:
            - latencyPreferenceUnspecified
            - normal
            - low
            - ultraLow
          type: string
          description: >-
            If both this and enable_low_latency are set, they must match.
            LATENCY_NORMAL should match enable_low_latency=false LATENCY_LOW
            should match enable_low_latency=true LATENCY_ULTRA_LOW should have
            enable_low_latency omitted.
        boundStreamLastUpdateTimeMs:
          type: string
          description: >-
            The date and time that the live stream referenced by boundStreamId
            was last updated.
          format: date-time
        boundStreamId:
          type: string
          description: >-
            This value uniquely identifies the live stream bound to the
            broadcast.
        enableAutoStop:
          description: >-
            This setting indicates whether auto stop is enabled for this
            broadcast. The default value for this property is false. This
            setting can only be used by Events.
          type: boolean
        enableClosedCaptions:
          description: >-
            This setting indicates whether HTTP POST closed captioning is
            enabled for this broadcast. The ingestion URL of the closed captions
            is returned through the liveStreams API. This is mutually exclusive
            with using the closed_captions_type property, and is equivalent to
            setting closed_captions_type to CLOSED_CAPTIONS_HTTP_POST.
          type: boolean
        enableEmbed:
          description: >-
            This setting indicates whether the broadcast video can be played in
            an embedded player. If you choose to archive the video (using the
            enableArchive property), this setting will also apply to the
            archived video.
          type: boolean
        enableAutoStart:
          type: boolean
          description: >-
            This setting indicates whether auto start is enabled for this
            broadcast. The default value for this property is false. This
            setting can only be used by Events.
        closedCaptionsType:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          enum:
            - closedCaptionsTypeUnspecified
            - closedCaptionsDisabled
            - closedCaptionsHttpPost
            - closedCaptionsEmbedded
        monitorStream:
          $ref: '#/components/schemas/MonitorStreamInfo'
          description: >-
            The monitorStream object contains information about the monitor
            stream, which the broadcaster can use to review the event content
            before the broadcast stream is shown publicly.
        projection:
          enum:
            - projectionUnspecified
            - rectangular
            - '360'
            - mesh
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: >-
            The projection format of this broadcast. This defaults to
            rectangular.
        startWithSlate:
          type: boolean
          description: >-
            This setting indicates whether the broadcast should automatically
            begin with an in-stream slate when you update the broadcast's status
            to live. After updating the status, you then need to send a
            liveCuepoints.insert request that sets the cuepoint's eventState to
            end to remove the in-stream slate and make your broadcast stream
            visible to viewers.
    ChannelSnippet:
      description: >-
        Basic details about a channel, including title, description and
        thumbnails.
      id: ChannelSnippet
      properties:
        publishedAt:
          format: date-time
          description: The date and time that the channel was created.
          type: string
        title:
          description: The channel's title.
          type: string
        country:
          description: The country of the channel.
          type: string
        description:
          type: string
          description: The description of the channel.
        defaultLanguage:
          description: The language of the channel's default title and description.
          type: string
        customUrl:
          description: The custom url of the channel.
          type: string
        localized:
          description: Localized title and description, read-only.
          $ref: '#/components/schemas/ChannelLocalization'
        thumbnails:
          description: >-
            A map of thumbnail images associated with the channel. For each
            object in the map, the key is the name of the thumbnail image, and
            the value is an object that contains other information about the
            thumbnail. When displaying thumbnails in your application, make sure
            that your code uses the image URLs exactly as they are returned in
            API responses. For example, your application should not use the http
            domain instead of the https domain in a URL returned in an API
            response. Beginning in July 2018, channel thumbnail URLs will only
            be available in the https domain, which is how the URLs appear in
            API responses. After that time, you might see broken images in your
            application if it tries to load YouTube images from the http domain.
            Thumbnail images might be empty for newly created channels and might
            take up to one day to populate.
          $ref: '#/components/schemas/ThumbnailDetails'
      type: object
    Playlist:
      description: >-
        A *playlist* resource represents a YouTube playlist. A playlist is a
        collection of videos that can be viewed sequentially and shared with
        other users. A playlist can contain up to 200 videos, and YouTube does
        not limit the number of playlists that each user creates. By default,
        playlists are publicly visible to other users, but playlists can be
        public or private. YouTube also uses playlists to identify special
        collections of videos for a channel, such as: - uploaded videos -
        favorite videos - positively rated (liked) videos - watch history -
        watch later To be more specific, these lists are associated with a
        channel, which is a collection of a person, group, or company's videos,
        playlists, and other YouTube information. You can retrieve the playlist
        IDs for each of these lists from the channel resource for a given
        channel. You can then use the playlistItems.list method to retrieve any
        of those lists. You can also add or remove items from those lists by
        calling the playlistItems.insert and playlistItems.delete methods.
      type: object
      id: Playlist
      properties:
        id:
          description: The ID that YouTube uses to uniquely identify the playlist.
          type: string
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#playlist".
          default: youtube#playlist
        localizations:
          description: Localizations for different languages
          additionalProperties:
            $ref: '#/components/schemas/PlaylistLocalization'
          type: object
        player:
          description: >-
            The player object contains information that you would use to play
            the playlist in an embedded player.
          $ref: '#/components/schemas/PlaylistPlayer'
        status:
          $ref: '#/components/schemas/PlaylistStatus'
          description: The status object contains status information for the playlist.
        etag:
          type: string
          description: Etag of this resource.
        contentDetails:
          description: The contentDetails object contains information like video count.
          $ref: '#/components/schemas/PlaylistContentDetails'
        snippet:
          description: >-
            The snippet object contains basic details about the playlist, such
            as its title and description.
          $ref: '#/components/schemas/PlaylistSnippet'
    VideoProcessingDetails:
      id: VideoProcessingDetails
      description: >-
        Describes processing status and progress and availability of some other
        Video resource parts.
      properties:
        processingProgress:
          description: >-
            The processingProgress object contains information about the
            progress YouTube has made in processing the video. The values are
            really only relevant if the video's processing status is processing.
          $ref: '#/components/schemas/VideoProcessingDetailsProcessingProgress'
        tagSuggestionsAvailability:
          type: string
          description: >-
            This value indicates whether keyword (tag) suggestions are available
            for the video. Tags can be added to a video's metadata to make it
            easier for other users to find the video. You can retrieve these
            suggestions by requesting the suggestions part in your videos.list()
            request.
        thumbnailsAvailability:
          type: string
          description: >-
            This value indicates whether thumbnail images have been generated
            for the video.
        processingStatus:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: >-
            The video's processing status. This value indicates whether YouTube
            was able to process the video or if the video is still being
            processed.
          type: string
          enum:
            - processing
            - succeeded
            - failed
            - terminated
        processingIssuesAvailability:
          description: >-
            This value indicates whether the video processing engine has
            generated suggestions that might improve YouTube's ability to
            process the the video, warnings that explain video processing
            problems, or errors that cause video processing problems. You can
            retrieve these suggestions by requesting the suggestions part in
            your videos.list() request.
          type: string
        fileDetailsAvailability:
          description: >-
            This value indicates whether file details are available for the
            uploaded video. You can retrieve a video's file details by
            requesting the fileDetails part in your videos.list() request.
          type: string
        processingFailureReason:
          type: string
          description: >-
            The reason that YouTube failed to process the video. This property
            will only have a value if the processingStatus property's value is
            failed.
          enum:
            - uploadFailed
            - transcodeFailed
            - streamingFailed
            - other
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        editorSuggestionsAvailability:
          type: string
          description: >-
            This value indicates whether video editing suggestions, which might
            improve video quality or the playback experience, are available for
            the video. You can retrieve these suggestions by requesting the
            suggestions part in your videos.list() request.
      type: object
    SubscriptionSubscriberSnippet:
      type: object
      id: SubscriptionSubscriberSnippet
      properties:
        channelId:
          type: string
          description: The channel ID of the subscriber.
        description:
          type: string
          description: The description of the subscriber.
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
          description: Thumbnails for this subscriber.
        title:
          description: The title of the subscriber.
          type: string
      description: >-
        Basic details about a subscription's subscriber including title,
        description, channel ID and thumbnails.
    PlaylistLocalization:
      properties:
        title:
          description: The localized strings for playlist's title.
          type: string
        description:
          description: The localized strings for playlist's description.
          type: string
      type: object
      description: Playlist localization setting
      id: PlaylistLocalization
    VideoContentDetails:
      type: object
      properties:
        contentRating:
          $ref: '#/components/schemas/ContentRating'
          description: >-
            Specifies the ratings that the video received under various rating
            schemes.
        projection:
          description: Specifies the projection format of the video.
          enumDescriptions:
            - ''
            - ''
          type: string
          enum:
            - rectangular
            - '360'
        caption:
          type: string
          enumDescriptions:
            - ''
            - ''
          enum:
            - 'true'
            - 'false'
          description: >-
            The value of captions indicates whether the video has captions or
            not.
        hasCustomThumbnail:
          type: boolean
          description: >-
            Indicates whether the video uploader has provided a custom thumbnail
            image for the video. This property is only visible to the video
            uploader.
        regionRestriction:
          $ref: '#/components/schemas/VideoContentDetailsRegionRestriction'
          description: >-
            The regionRestriction object contains information about the
            countries where a video is (or is not) viewable. The object will
            contain either the contentDetails.regionRestriction.allowed property
            or the contentDetails.regionRestriction.blocked property.
        dimension:
          type: string
          description: >-
            The value of dimension indicates whether the video is available in
            3D or in 2D.
        licensedContent:
          description: >-
            The value of is_license_content indicates whether the video is
            licensed content.
          type: boolean
        duration:
          description: >-
            The length of the video. The tag value is an ISO 8601 duration in
            the format PT#M#S, in which the letters PT indicate that the value
            specifies a period of time, and the letters M and S refer to length
            in minutes and seconds, respectively. The # characters preceding the
            M and S letters are both integers that specify the number of minutes
            (or seconds) of the video. For example, a value of PT15M51S
            indicates that the video is 15 minutes and 51 seconds long.
          type: string
        definition:
          enumDescriptions:
            - sd
            - hd
          type: string
          enum:
            - sd
            - hd
          description: >-
            The value of definition indicates whether the video is available in
            high definition or only in standard definition.
        countryRestriction:
          $ref: '#/components/schemas/AccessPolicy'
          description: >-
            The countryRestriction object contains information about the
            countries where a video is (or is not) viewable.
      description: Details about the content of a YouTube Video.
      id: VideoContentDetails
    VideoLocalization:
      description: Localized versions of certain video properties (e.g. title).
      id: VideoLocalization
      properties:
        description:
          description: Localized version of the video's description.
          type: string
        title:
          type: string
          description: Localized version of the video's title.
      type: object
    ChannelAuditDetails:
      id: ChannelAuditDetails
      type: object
      properties:
        contentIdClaimsGoodStanding:
          description: Whether or not the channel has any unresolved claims.
          type: boolean
        communityGuidelinesGoodStanding:
          description: Whether or not the channel respects the community guidelines.
          type: boolean
        copyrightStrikesGoodStanding:
          type: boolean
          description: Whether or not the channel has any copyright strikes.
      description: >-
        The auditDetails object encapsulates channel data that is relevant for
        YouTube Partners during the audit process.
    ThumbnailSetResponse:
      type: object
      id: ThumbnailSetResponse
      properties:
        kind:
          type: string
          default: youtube#thumbnailSetResponse
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#thumbnailSetResponse".
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        etag:
          description: Etag of this resource.
          type: string
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          description: A list of thumbnails.
          items:
            $ref: '#/components/schemas/ThumbnailDetails'
          type: array
    LiveStreamConfigurationIssue:
      type: object
      properties:
        type:
          enum:
            - gopSizeOver
            - gopSizeLong
            - gopSizeShort
            - openGop
            - badContainer
            - audioBitrateHigh
            - audioBitrateLow
            - audioSampleRate
            - bitrateHigh
            - bitrateLow
            - audioCodec
            - videoCodec
            - noAudioStream
            - noVideoStream
            - multipleVideoStreams
            - multipleAudioStreams
            - audioTooManyChannels
            - interlacedVideo
            - frameRateHigh
            - resolutionMismatch
            - videoCodecMismatch
            - videoInterlaceMismatch
            - videoProfileMismatch
            - videoBitrateMismatch
            - framerateMismatch
            - gopMismatch
            - audioSampleRateMismatch
            - audioStereoMismatch
            - audioCodecMismatch
            - audioBitrateMismatch
            - videoResolutionSuboptimal
            - videoResolutionUnsupported
            - videoIngestionStarved
            - videoIngestionFasterThanRealtime
          type: string
          description: The kind of error happening.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        description:
          type: string
          description: The long-form description of the issue and how to resolve it.
        reason:
          description: The short-form reason for this issue.
          type: string
        severity:
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
          description: How severe this issue is to the stream.
          enum:
            - info
            - warning
            - error
      id: LiveStreamConfigurationIssue
    PlaylistItem:
      type: object
      properties:
        id:
          description: The ID that YouTube uses to uniquely identify the playlist item.
          type: string
        etag:
          type: string
          description: Etag of this resource.
        contentDetails:
          $ref: '#/components/schemas/PlaylistItemContentDetails'
          description: >-
            The contentDetails object is included in the resource if the
            included item is a YouTube video. The object contains additional
            information about the video.
        status:
          description: >-
            The status object contains information about the playlist item's
            privacy status.
          $ref: '#/components/schemas/PlaylistItemStatus'
        snippet:
          description: >-
            The snippet object contains basic details about the playlist item,
            such as its title and position in the playlist.
          $ref: '#/components/schemas/PlaylistItemSnippet'
        kind:
          default: youtube#playlistItem
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#playlistItem".
          type: string
      description: >-
        A *playlistItem* resource identifies another resource, such as a video,
        that is included in a playlist. In addition, the playlistItem resource
        contains details about the included resource that pertain specifically
        to how that resource is used in that playlist. YouTube uses playlists to
        identify special collections of videos for a channel, such as: -
        uploaded videos - favorite videos - positively rated (liked) videos -
        watch history - watch later To be more specific, these lists are
        associated with a channel, which is a collection of a person, group, or
        company's videos, playlists, and other YouTube information. You can
        retrieve the playlist IDs for each of these lists from the channel
        resource for a given channel. You can then use the playlistItems.list
        method to retrieve any of those lists. You can also add or remove items
        from those lists by calling the playlistItems.insert and
        playlistItems.delete methods. For example, if a user gives a positive
        rating to a video, you would insert that video into the liked videos
        playlist for that user's channel.
      id: PlaylistItem
    LiveChatMessageSnippet:
      id: LiveChatMessageSnippet
      type: object
      description: 'Next ID: 33'
      properties:
        fanFundingEventDetails:
          description: >-
            Details about the funding event, this is only set if the type is
            'fanFundingEvent'.
          $ref: '#/components/schemas/LiveChatFanFundingEventDetails'
        authorChannelId:
          type: string
          description: >-
            The ID of the user that authored this message, this field is not
            always filled. textMessageEvent - the user that wrote the message
            fanFundingEvent - the user that funded the broadcast newSponsorEvent
            - the user that just became a sponsor memberMilestoneChatEvent - the
            member that sent the message membershipGiftingEvent - the user that
            made the purchase giftMembershipReceivedEvent - the user that
            received the gift membership messageDeletedEvent - the moderator
            that took the action messageRetractedEvent - the author that
            retracted their message userBannedEvent - the moderator that took
            the action superChatEvent - the user that made the purchase
            superStickerEvent - the user that made the purchase
        displayMessage:
          description: >-
            Contains a string that can be displayed to the user. If this field
            is not present the message is silent, at the moment only messages of
            type TOMBSTONE and CHAT_ENDED_EVENT are silent.
          type: string
        type:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          description: >-
            The type of message, this will always be present, it determines the
            contents of the message as well as which fields will be present.
          enum:
            - invalidType
            - textMessageEvent
            - tombstone
            - fanFundingEvent
            - chatEndedEvent
            - sponsorOnlyModeStartedEvent
            - sponsorOnlyModeEndedEvent
            - newSponsorEvent
            - memberMilestoneChatEvent
            - membershipGiftingEvent
            - giftMembershipReceivedEvent
            - messageDeletedEvent
            - messageRetractedEvent
            - userBannedEvent
            - superChatEvent
            - superStickerEvent
        liveChatId:
          type: string
        newSponsorDetails:
          description: >-
            Details about the New Member Announcement event, this is only set if
            the type is 'newSponsorEvent'. Please note that "member" is the new
            term for "sponsor".
          $ref: '#/components/schemas/LiveChatNewSponsorDetails'
        messageRetractedDetails:
          $ref: '#/components/schemas/LiveChatMessageRetractedDetails'
        hasDisplayContent:
          type: boolean
          description: >-
            Whether the message has display content that should be displayed to
            users.
        textMessageDetails:
          description: >-
            Details about the text message, this is only set if the type is
            'textMessageEvent'.
          $ref: '#/components/schemas/LiveChatTextMessageDetails'
        superChatDetails:
          description: >-
            Details about the Super Chat event, this is only set if the type is
            'superChatEvent'.
          $ref: '#/components/schemas/LiveChatSuperChatDetails'
        publishedAt:
          description: The date and time when the message was orignally published.
          format: date-time
          type: string
        userBannedDetails:
          $ref: '#/components/schemas/LiveChatUserBannedMessageDetails'
        messageDeletedDetails:
          $ref: '#/components/schemas/LiveChatMessageDeletedDetails'
        membershipGiftingDetails:
          $ref: '#/components/schemas/LiveChatMembershipGiftingDetails'
          description: >-
            Details about the Membership Gifting event, this is only set if the
            type is 'membershipGiftingEvent'.
        memberMilestoneChatDetails:
          description: >-
            Details about the Member Milestone Chat event, this is only set if
            the type is 'memberMilestoneChatEvent'.
          $ref: '#/components/schemas/LiveChatMemberMilestoneChatDetails'
        giftMembershipReceivedDetails:
          description: >-
            Details about the Gift Membership Received event, this is only set
            if the type is 'giftMembershipReceivedEvent'.
          $ref: '#/components/schemas/LiveChatGiftMembershipReceivedDetails'
        superStickerDetails:
          $ref: '#/components/schemas/LiveChatSuperStickerDetails'
          description: >-
            Details about the Super Sticker event, this is only set if the type
            is 'superStickerEvent'.
    MembershipsLevelSnippet:
      properties:
        creatorChannelId:
          description: The id of the channel that's offering channel memberships.
          type: string
        levelDetails:
          description: Details about the pricing level.
          $ref: '#/components/schemas/LevelDetails'
      type: object
      id: MembershipsLevelSnippet
    PlaylistSnippet:
      id: PlaylistSnippet
      description: >-
        Basic details about a playlist, including title, description and
        thumbnails.
      properties:
        tags:
          type: array
          items:
            type: string
          description: Keyword tags associated with the playlist.
        channelTitle:
          type: string
          description: The channel title of the channel that the video belongs to.
        defaultLanguage:
          type: string
          description: The language of the playlist's default title and description.
        title:
          description: The playlist's title.
          type: string
          annotations:
            required:
              - youtube.playlists.insert
              - youtube.playlists.update
        localized:
          $ref: '#/components/schemas/PlaylistLocalization'
          description: Localized title and description, read-only.
        thumbnailVideoId:
          type: string
          description: >-
            Note: if the playlist has a custom thumbnail, this field will not be
            populated. The video id selected by the user that will be used as
            the thumbnail of this playlist. This field defaults to the first
            publicly viewable video in the playlist, if: 1. The user has never
            selected a video to be the thumbnail of the playlist. 2. The user
            selects a video to be the thumbnail, and then removes that video
            from the playlist. 3. The user selects a non-owned video to be the
            thumbnail, but that video becomes private, or gets deleted.
        channelId:
          type: string
          description: >-
            The ID that YouTube uses to uniquely identify the channel that
            published the playlist.
        description:
          description: The playlist's description.
          type: string
        publishedAt:
          format: date-time
          type: string
          description: The date and time that the playlist was created.
        thumbnails:
          description: >-
            A map of thumbnail images associated with the playlist. For each
            object in the map, the key is the name of the thumbnail image, and
            the value is an object that contains other information about the
            thumbnail.
          $ref: '#/components/schemas/ThumbnailDetails'
      type: object
    Cuepoint:
      properties:
        insertionOffsetTimeMs:
          description: >-
            The time when the cuepoint should be inserted by offset to the
            broadcast actual start time.
          format: int64
          type: string
        id:
          type: string
          description: The identifier for cuepoint resource.
        cueType:
          enum:
            - cueTypeUnspecified
            - cueTypeAd
          type: string
          enumDescriptions:
            - ''
            - ''
        walltimeMs:
          description: >-
            The wall clock time at which the cuepoint should be inserted. Only
            one of insertion_offset_time_ms and walltime_ms may be set at a
            time.
          format: uint64
          type: string
        etag:
          type: string
        durationSecs:
          description: The duration of this cuepoint.
          format: uint32
          type: integer
      description: >-
        Note that there may be a 5-second end-point resolution issue. For
        instance, if a cuepoint comes in for 22:03:27, we may stuff the cuepoint
        into 22:03:25 or 22:03:30, depending. This is an artifact of HLS.
      id: Cuepoint
      type: object
    ChannelSectionLocalization:
      type: object
      id: ChannelSectionLocalization
      properties:
        title:
          description: The localized strings for channel section's title.
          type: string
      description: ChannelSection localization setting
    MembershipsLevelListResponse:
      id: MembershipsLevelListResponse
      type: object
      properties:
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        etag:
          type: string
          description: Etag of this resource.
        items:
          description: A list of pricing levels offered by a creator to the fans.
          type: array
          items:
            $ref: '#/components/schemas/MembershipsLevel'
        kind:
          default: youtube#membershipsLevelListResponse
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#membershipsLevelListResponse".
          type: string
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
    VideoCategoryListResponse:
      id: VideoCategoryListResponse
      properties:
        prevPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the previous page in the result set.
        nextPageToken:
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
          type: string
        pageInfo:
          description: General pagination information.
          $ref: '#/components/schemas/PageInfo'
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        kind:
          default: youtube#videoCategoryListResponse
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#videoCategoryListResponse".
          type: string
        items:
          items:
            $ref: '#/components/schemas/VideoCategory'
          description: >-
            A list of video categories that can be associated with YouTube
            videos. In this map, the video category ID is the map key, and its
            value is the corresponding videoCategory resource.
          type: array
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        etag:
          description: Etag of this resource.
          type: string
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
      type: object
    VideoFileDetails:
      properties:
        audioStreams:
          items:
            $ref: '#/components/schemas/VideoFileDetailsAudioStream'
          type: array
          description: >-
            A list of audio streams contained in the uploaded video file. Each
            item in the list contains detailed metadata about an audio stream.
        videoStreams:
          type: array
          description: >-
            A list of video streams contained in the uploaded video file. Each
            item in the list contains detailed metadata about a video stream.
          items:
            $ref: '#/components/schemas/VideoFileDetailsVideoStream'
        container:
          type: string
          description: The uploaded video file's container format.
        bitrateBps:
          description: >-
            The uploaded video file's combined (video and audio) bitrate in bits
            per second.
          type: string
          format: uint64
        fileType:
          enum:
            - video
            - audio
            - image
            - archive
            - document
            - project
            - other
          enumDescriptions:
            - Known video file (e.g., an MP4 file).
            - Audio only file (e.g., an MP3 file).
            - Image file (e.g., a JPEG image).
            - Archive file (e.g., a ZIP archive).
            - Document or text file (e.g., MS Word document).
            - Movie project file (e.g., Microsoft Windows Movie Maker project).
            - Other non-video file type.
          description: >-
            The uploaded file's type as detected by YouTube's video processing
            engine. Currently, YouTube only processes video files, but this
            field is present whether a video file or another type of file was
            uploaded.
          type: string
        fileName:
          description: >-
            The uploaded file's name. This field is present whether a video file
            or another type of file was uploaded.
          type: string
        creationTime:
          description: >-
            The date and time when the uploaded video file was created. The
            value is specified in ISO 8601 format. Currently, the following ISO
            8601 formats are supported: - Date only: YYYY-MM-DD - Naive time:
            YYYY-MM-DDTHH:MM:SS - Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM 
          type: string
        durationMs:
          description: The length of the uploaded video in milliseconds.
          type: string
          format: uint64
        fileSize:
          description: >-
            The uploaded file's size in bytes. This field is present whether a
            video file or another type of file was uploaded.
          type: string
          format: uint64
      type: object
      description: >-
        Describes original video file properties, including technical details
        about audio and video streams, but also metadata information like
        content length, digitization time, or geotagging information.
      id: VideoFileDetails
    Video:
      id: Video
      properties:
        etag:
          description: Etag of this resource.
          type: string
        status:
          $ref: '#/components/schemas/VideoStatus'
          description: >-
            The status object contains information about the video's uploading,
            processing, and privacy statuses.
        localizations:
          additionalProperties:
            $ref: '#/components/schemas/VideoLocalization'
          description: >-
            The localizations object contains localized versions of the basic
            details about the video, such as its title and description.
          type: object
        suggestions:
          $ref: '#/components/schemas/VideoSuggestions'
          description: >-
            The suggestions object encapsulates suggestions that identify
            opportunities to improve the video quality or the metadata for the
            uploaded video. This data can only be retrieved by the video owner.
        recordingDetails:
          $ref: '#/components/schemas/VideoRecordingDetails'
          description: >-
            The recordingDetails object encapsulates information about the
            location, date and address where the video was recorded.
        projectDetails:
          $ref: '#/components/schemas/VideoProjectDetails'
          description: >-
            The projectDetails object contains information about the project
            specific video metadata. b/157517979: This part was never populated
            after it was added. However, it sees non-zero traffic because there
            is generated client code in the wild that refers to it [1]. We keep
            this field and do NOT remove it because otherwise V3 would return an
            error when this part gets requested [2]. [1]
            https://developers.google.com/resources/api-libraries/documentation/youtube/v3/csharp/latest/classGoogle_1_1Apis_1_1YouTube_1_1v3_1_1Data_1_1VideoProjectDetails.html
            [2]
            http://google3/video/youtube/src/python/servers/data_api/common.py?l=1565-1569&rcl=344141677
        fileDetails:
          $ref: '#/components/schemas/VideoFileDetails'
          description: >-
            The fileDetails object encapsulates information about the video file
            that was uploaded to YouTube, including the file's resolution,
            duration, audio and video codecs, stream bitrates, and more. This
            data can only be retrieved by the video owner.
        topicDetails:
          description: >-
            The topicDetails object encapsulates information about Freebase
            topics associated with the video.
          $ref: '#/components/schemas/VideoTopicDetails'
        snippet:
          description: >-
            The snippet object contains basic details about the video, such as
            its title, description, and category.
          $ref: '#/components/schemas/VideoSnippet'
        ageGating:
          $ref: '#/components/schemas/VideoAgeGating'
          description: >-
            Age restriction details related to a video. This data can only be
            retrieved by the video owner.
        liveStreamingDetails:
          $ref: '#/components/schemas/VideoLiveStreamingDetails'
          description: >-
            The liveStreamingDetails object contains metadata about a live video
            broadcast. The object will only be present in a video resource if
            the video is an upcoming, live, or completed live broadcast.
        kind:
          default: youtube#video
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#video".
          type: string
        player:
          description: >-
            The player object contains information that you would use to play
            the video in an embedded player.
          $ref: '#/components/schemas/VideoPlayer'
        monetizationDetails:
          description: >-
            The monetizationDetails object encapsulates information about the
            monetization status of the video.
          $ref: '#/components/schemas/VideoMonetizationDetails'
        id:
          description: The ID that YouTube uses to uniquely identify the video.
          annotations:
            required:
              - youtube.videos.update
          type: string
        statistics:
          description: The statistics object contains statistics about the video.
          $ref: '#/components/schemas/VideoStatistics'
        processingDetails:
          $ref: '#/components/schemas/VideoProcessingDetails'
          description: >-
            The processingDetails object encapsulates information about
            YouTube's progress in processing the uploaded video file. The
            properties in the object identify the current processing status and
            an estimate of the time remaining until YouTube finishes processing
            the video. This part also indicates whether different types of data
            or content, such as file details or thumbnail images, are available
            for the video. The processingProgress object is designed to be
            polled so that the video uploaded can track the progress that
            YouTube has made in processing the uploaded video file. This data
            can only be retrieved by the video owner.
        contentDetails:
          description: >-
            The contentDetails object contains information about the video
            content, including the length of the video and its aspect ratio.
          $ref: '#/components/schemas/VideoContentDetails'
      description: A *video* resource represents a YouTube video.
      type: object
    PlaylistPlayer:
      properties:
        embedHtml:
          description: An <iframe> tag that embeds a player that will play the playlist.
          type: string
      type: object
      id: PlaylistPlayer
    ChannelSectionListResponse:
      type: object
      id: ChannelSectionListResponse
      properties:
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        kind:
          default: youtube#channelSectionListResponse
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#channelSectionListResponse".
          type: string
        items:
          description: A list of ChannelSections that match the request criteria.
          type: array
          items:
            $ref: '#/components/schemas/ChannelSection'
    PlaylistContentDetails:
      type: object
      properties:
        itemCount:
          description: The number of videos in the playlist.
          type: integer
          format: uint32
      id: PlaylistContentDetails
    LiveChatSuperStickerDetails:
      id: LiveChatSuperStickerDetails
      type: object
      properties:
        amountDisplayString:
          description: >-
            A rendered string that displays the fund amount and currency to the
            user.
          type: string
        amountMicros:
          description: >-
            The amount purchased by the user, in micros (1,750,000 micros =
            1.75).
          type: string
          format: uint64
        tier:
          description: >-
            The tier in which the amount belongs. Lower amounts belong to lower
            tiers. The lowest tier is 1.
          format: uint32
          type: integer
        currency:
          description: The currency in which the purchase was made.
          type: string
        superStickerMetadata:
          $ref: '#/components/schemas/SuperStickerMetadata'
          description: Information about the Super Sticker.
    ChannelProfileDetails:
      id: ChannelProfileDetails
      properties:
        channelId:
          description: The YouTube channel ID.
          type: string
        profileImageUrl:
          description: The channels's avatar URL.
          type: string
        channelUrl:
          type: string
          description: The channel's URL.
        displayName:
          type: string
          description: The channel's display name.
      type: object
    LiveChatMessageListResponse:
      id: LiveChatMessageListResponse
      properties:
        offlineAt:
          description: The date and time when the underlying stream went offline.
          type: string
          format: date-time
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        etag:
          description: Etag of this resource.
          type: string
        nextPageToken:
          type: string
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        items:
          items:
            $ref: '#/components/schemas/LiveChatMessage'
          type: array
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#liveChatMessageListResponse".
          type: string
          default: youtube#liveChatMessageListResponse
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: General pagination information.
        pollingIntervalMillis:
          type: integer
          format: uint32
          description: The amount of time the client should wait before polling again.
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
      type: object
    ActivityContentDetailsBulletin:
      id: ActivityContentDetailsBulletin
      type: object
      description: Details about a channel bulletin post.
      properties:
        resourceId:
          description: >-
            The resourceId object contains information that identifies the
            resource associated with a bulletin post. @mutable
            youtube.activities.insert
          $ref: '#/components/schemas/ResourceId'
    VideoMonetizationDetails:
      type: object
      id: VideoMonetizationDetails
      description: Details about monetization of a YouTube Video.
      properties:
        access:
          description: >-
            The value of access indicates whether the video can be monetized or
            not.
          $ref: '#/components/schemas/AccessPolicy'
    PlaylistItemStatus:
      type: object
      properties:
        privacyStatus:
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - public
            - unlisted
            - private
          type: string
          description: This resource's privacy status.
      description: Information about the playlist item's privacy status.
      id: PlaylistItemStatus
    Thumbnail:
      type: object
      properties:
        url:
          type: string
          description: The thumbnail image's URL.
        width:
          type: integer
          description: (Optional) Width of the thumbnail image.
          format: uint32
        height:
          description: (Optional) Height of the thumbnail image.
          type: integer
          format: uint32
      description: A thumbnail is an image representing a YouTube resource.
      id: Thumbnail
    MembershipsDurationAtLevel:
      properties:
        memberSince:
          type: string
          description: >-
            The date and time when the user became a continuous member for the
            given level.
        memberTotalDurationMonths:
          format: int32
          type: integer
          description: >-
            The cumulative time the user has been a member for the given level
            in complete months (the time is rounded down to the nearest
            integer).
        level:
          description: Pricing level ID.
          type: string
      type: object
      id: MembershipsDurationAtLevel
    ChannelListResponse:
      type: object
      properties:
        kind:
          default: youtube#channelListResponse
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#channelListResponse".
          type: string
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: General pagination information.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          items:
            $ref: '#/components/schemas/Channel'
          type: array
        prevPageToken:
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the previous page in the result set.
          type: string
        nextPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
        etag:
          type: string
          description: Etag of this resource.
      id: ChannelListResponse
    ChannelConversionPing:
      type: object
      id: ChannelConversionPing
      description: >-
        Pings that the app shall fire (authenticated by biscotti cookie). Each
        ping has a context, in which the app must fire the ping, and a url
        identifying the ping.
      properties:
        context:
          description: Defines the context of the ping.
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - subscribe
            - unsubscribe
            - cview
          type: string
        conversionUrl:
          description: >-
            The url (without the schema) that the player shall send the ping to.
            It's at caller's descretion to decide which schema to use (http vs
            https) Example of a returned url:
            //googleads.g.doubleclick.net/pagead/
            viewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D
            cview%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA&labe=default The caller must
            append biscotti authentication (ms param in case of mobile, for
            example) to this ping.
          type: string
    TokenPagination:
      id: TokenPagination
      type: object
      description: Stub token pagination template to suppress results.
      properties: {}
    VideoFileDetailsAudioStream:
      description: Information about an audio stream.
      id: VideoFileDetailsAudioStream
      type: object
      properties:
        bitrateBps:
          description: The audio stream's bitrate, in bits per second.
          type: string
          format: uint64
        codec:
          type: string
          description: The audio codec that the stream uses.
        vendor:
          type: string
          description: >-
            A value that uniquely identifies a video vendor. Typically, the
            value is a four-letter vendor code.
        channelCount:
          description: The number of audio channels that the stream contains.
          format: uint32
          type: integer
    ChannelSettings:
      type: object
      id: ChannelSettings
      properties:
        country:
          type: string
          description: The country of the channel.
        title:
          type: string
          description: Specifies the channel title.
        defaultLanguage:
          type: string
        profileColor:
          type: string
          description: A prominent color that can be rendered on this channel page.
        keywords:
          type: string
          description: Lists keywords associated with the channel, comma-separated.
        featuredChannelsTitle:
          description: Title for the featured channels tab.
          type: string
        moderateComments:
          type: boolean
          description: >-
            Whether user-submitted comments left on the channel page need to be
            approved by the channel owner to be publicly visible.
        trackingAnalyticsAccountId:
          description: >-
            The ID for a Google Analytics account to track and measure traffic
            to the channels.
          type: string
        unsubscribedTrailer:
          description: The trailer of the channel, for users that are not subscribers.
          type: string
        defaultTab:
          description: Which content tab users should see when viewing the channel.
          type: string
        showRelatedChannels:
          description: Whether related channels should be proposed.
          type: boolean
        description:
          type: string
          description: Specifies the channel description.
        showBrowseView:
          type: boolean
          description: Whether the tab to browse the videos should be displayed.
        featuredChannelsUrls:
          description: The list of featured channels.
          items:
            type: string
          type: array
      description: Branding properties for the channel view.
    SubscriptionContentDetails:
      id: SubscriptionContentDetails
      description: Details about the content to witch a subscription refers.
      properties:
        newItemCount:
          type: integer
          format: uint32
          description: >-
            The number of new items in the subscription since its content was
            last read.
        totalItemCount:
          format: uint32
          type: integer
          description: The approximate number of items that the subscription points to.
        activityType:
          enumDescriptions:
            - ''
            - ''
            - ''
          description: >-
            The type of activity this subscription is for (only uploads,
            everything).
          type: string
          enum:
            - subscriptionActivityTypeUnspecified
            - all
            - uploads
      type: object
    AccessPolicy:
      description: Rights management policy for YouTube resources.
      properties:
        exception:
          description: >-
            A list of region codes that identify countries where the default
            policy do not apply.
          items:
            type: string
          type: array
        allowed:
          description: >-
            The value of allowed indicates whether the access to the policy is
            allowed or denied by default.
          type: boolean
      type: object
      id: AccessPolicy
    AbuseType:
      type: object
      id: AbuseType
      properties:
        id:
          type: string
    PropertyValue:
      properties:
        value:
          type: string
          description: The property's value.
        property:
          type: string
          description: A property.
      description: A pair Property / Value.
      id: PropertyValue
      type: object
    InvideoPosition:
      type: object
      description: >-
        Describes the spatial position of a visual widget inside a video. It is
        a union of various position types, out of which only will be set one.
      id: InvideoPosition
      properties:
        type:
          type: string
          enumDescriptions:
            - ''
          description: Defines the position type.
          enum:
            - corner
        cornerPosition:
          description: >-
            Describes in which corner of the video the visual widget will
            appear.
          enum:
            - topLeft
            - topRight
            - bottomLeft
            - bottomRight
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
    VideoAgeGating:
      type: object
      properties:
        videoGameRating:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: Video game rating, if any.
          type: string
          enum:
            - anyone
            - m15Plus
            - m16Plus
            - m17Plus
        restricted:
          description: >-
            Age-restricted trailers. For redband trailers and adult-rated
            video-games. Only users aged 18+ can view the content. The the field
            is true the content is restricted to viewers aged 18+. Otherwise The
            field won't be present.
          type: boolean
        alcoholContent:
          description: >-
            Indicates whether or not the video has alcoholic beverage content.
            Only users of legal purchasing age in a particular country, as
            identified by ICAP, can view the content.
          type: boolean
      id: VideoAgeGating
    LiveBroadcastSnippet:
      id: LiveBroadcastSnippet
      properties:
        publishedAt:
          description: >-
            The date and time that the broadcast was added to YouTube's live
            broadcast schedule.
          format: date-time
          type: string
        channelId:
          description: >-
            The ID that YouTube uses to uniquely identify the channel that is
            publishing the broadcast.
          type: string
        description:
          type: string
          description: >-
            The broadcast's description. As with the title, you can set this
            field by modifying the broadcast resource or by setting the
            description field of the corresponding video resource.
        liveChatId:
          type: string
          description: The id of the live chat for this broadcast.
        isDefaultBroadcast:
          description: >-
            Indicates whether this broadcast is the default broadcast. Internal
            only.
          type: boolean
        title:
          annotations:
            required:
              - youtube.liveBroadcasts.insert
              - youtube.liveBroadcasts.update
          type: string
          description: >-
            The broadcast's title. Note that the broadcast represents exactly
            one YouTube video. You can set this field by modifying the broadcast
            resource or by setting the title field of the corresponding video
            resource.
        scheduledEndTime:
          description: The date and time that the broadcast is scheduled to end.
          format: date-time
          type: string
        actualStartTime:
          format: date-time
          type: string
          description: >-
            The date and time that the broadcast actually started. This
            information is only available once the broadcast's state is live.
        actualEndTime:
          type: string
          description: >-
            The date and time that the broadcast actually ended. This
            information is only available once the broadcast's state is
            complete.
          format: date-time
        thumbnails:
          description: >-
            A map of thumbnail images associated with the broadcast. For each
            nested object in this object, the key is the name of the thumbnail
            image, and the value is an object that contains other information
            about the thumbnail.
          $ref: '#/components/schemas/ThumbnailDetails'
        scheduledStartTime:
          format: date-time
          type: string
          description: The date and time that the broadcast is scheduled to start.
          annotations:
            required:
              - youtube.liveBroadcasts.insert
              - youtube.liveBroadcasts.update
      type: object
      description: Basic broadcast information.
    Caption:
      id: Caption
      properties:
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#caption".
          type: string
          default: youtube#caption
        snippet:
          $ref: '#/components/schemas/CaptionSnippet'
          description: The snippet object contains basic details about the caption.
        id:
          description: The ID that YouTube uses to uniquely identify the caption track.
          type: string
          annotations:
            required:
              - youtube.captions.update
        etag:
          description: Etag of this resource.
          type: string
      type: object
      description: >-
        A *caption* resource represents a YouTube caption track. A caption track
        is associated with exactly one YouTube video.
    LiveChatSuperChatDetails:
      id: LiveChatSuperChatDetails
      type: object
      properties:
        amountDisplayString:
          type: string
          description: >-
            A rendered string that displays the fund amount and currency to the
            user.
        userComment:
          description: The comment added by the user to this Super Chat event.
          type: string
        amountMicros:
          type: string
          description: >-
            The amount purchased by the user, in micros (1,750,000 micros =
            1.75).
          format: uint64
        currency:
          type: string
          description: The currency in which the purchase was made.
        tier:
          type: integer
          format: uint32
          description: >-
            The tier in which the amount belongs. Lower amounts belong to lower
            tiers. The lowest tier is 1.
    ThumbnailDetails:
      type: object
      id: ThumbnailDetails
      description: Internal representation of thumbnails for a YouTube resource.
      properties:
        standard:
          description: The standard quality image for this resource.
          $ref: '#/components/schemas/Thumbnail'
        default:
          $ref: '#/components/schemas/Thumbnail'
          description: The default image for this resource.
        medium:
          description: The medium quality image for this resource.
          $ref: '#/components/schemas/Thumbnail'
        maxres:
          description: The maximum resolution quality image for this resource.
          $ref: '#/components/schemas/Thumbnail'
        high:
          $ref: '#/components/schemas/Thumbnail'
          description: The high quality image for this resource.
    SearchListResponse:
      id: SearchListResponse
      type: object
      properties:
        nextPageToken:
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
          type: string
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        regionCode:
          type: string
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: General pagination information.
        visitorId:
          type: string
          description: The visitorId identifies the visitor.
        prevPageToken:
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the previous page in the result set.
          type: string
        items:
          description: Pagination information for token pagination.
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        kind:
          default: youtube#searchListResponse
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#searchListResponse".
        etag:
          type: string
          description: Etag of this resource.
    VideoCategory:
      id: VideoCategory
      type: object
      description: >-
        A *videoCategory* resource identifies a category that has been or could
        be associated with uploaded videos.
      properties:
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the video category.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#videoCategory".
          default: youtube#videoCategory
          type: string
        snippet:
          $ref: '#/components/schemas/VideoCategorySnippet'
          description: >-
            The snippet object contains basic details about the video category,
            including its title.
        etag:
          description: Etag of this resource.
          type: string
    WatchSettings:
      properties:
        backgroundColor:
          description: The text color for the video watch page's branded area.
          type: string
        featuredPlaylistId:
          description: >-
            An ID that uniquely identifies a playlist that displays next to the
            video player.
          type: string
        textColor:
          description: The background color for the video watch page's branded area.
          type: string
      description: Branding properties for the watch. All deprecated.
      id: WatchSettings
      type: object
    CommentThread:
      type: object
      properties:
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the comment thread.
        etag:
          type: string
          description: Etag of this resource.
        replies:
          $ref: '#/components/schemas/CommentThreadReplies'
          description: >-
            The replies object contains a limited number of replies (if any) to
            the top level comment found in the snippet.
        kind:
          default: youtube#commentThread
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#commentThread".
          type: string
        snippet:
          $ref: '#/components/schemas/CommentThreadSnippet'
          description: >-
            The snippet object contains basic details about the comment thread
            and also the top level comment.
      description: >-
        A *comment thread* represents information that applies to a top level
        comment and all its replies. It can also include the top level comment
        itself and some of the replies.
      id: CommentThread
    ActivityContentDetailsPlaylistItem:
      description: Information about a new playlist item.
      properties:
        resourceId:
          $ref: '#/components/schemas/ResourceId'
          description: >-
            The resourceId object contains information about the resource that
            was added to the playlist.
        playlistItemId:
          description: ID of the item within the playlist.
          type: string
        playlistId:
          description: The value that YouTube uses to uniquely identify the playlist.
          type: string
      type: object
      id: ActivityContentDetailsPlaylistItem
    ActivityListResponse:
      id: ActivityListResponse
      properties:
        pageInfo:
          description: General pagination information.
          $ref: '#/components/schemas/PageInfo'
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#activityListResponse".
          type: string
          default: youtube#activityListResponse
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        nextPageToken:
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
          type: string
        prevPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the previous page in the result set.
        etag:
          type: string
          description: Etag of this resource.
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        items:
          items:
            $ref: '#/components/schemas/Activity'
          type: array
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
      type: object
    LiveChatTextMessageDetails:
      properties:
        messageText:
          description: The user's message.
          type: string
      id: LiveChatTextMessageDetails
      type: object
    ChannelSectionSnippet:
      id: ChannelSectionSnippet
      properties:
        style:
          description: The style of the channel section.
          type: string
          enum:
            - channelsectionStyleUnspecified
            - horizontalRow
            - verticalList
          enumDescriptions:
            - ''
            - ''
            - ''
        type:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: The type of the channel section.
          type: string
          enum:
            - channelsectionTypeUndefined
            - singlePlaylist
            - multiplePlaylists
            - popularUploads
            - recentUploads
            - likes
            - allPlaylists
            - likedPlaylists
            - recentPosts
            - recentActivity
            - liveEvents
            - upcomingEvents
            - completedEvents
            - multipleChannels
            - postedVideos
            - postedPlaylists
            - subscriptions
        localized:
          description: Localized title, read-only.
          $ref: '#/components/schemas/ChannelSectionLocalization'
        defaultLanguage:
          description: The language of the channel section's default title and description.
          type: string
        position:
          type: integer
          description: The position of the channel section in the channel.
          format: uint32
        channelId:
          type: string
          description: >-
            The ID that YouTube uses to uniquely identify the channel that
            published the channel section.
        title:
          description: >-
            The channel section's title for multiple_playlists and
            multiple_channels.
          type: string
      description: >-
        Basic details about a channel section, including title, style and
        position.
      type: object
    VideoSnippet:
      id: VideoSnippet
      description: >-
        Basic details about a video, including title, description, uploader,
        thumbnails and category.
      type: object
      properties:
        channelId:
          description: >-
            The ID that YouTube uses to uniquely identify the channel that the
            video was uploaded to.
          type: string
        thumbnails:
          $ref: '#/components/schemas/ThumbnailDetails'
          description: >-
            A map of thumbnail images associated with the video. For each object
            in the map, the key is the name of the thumbnail image, and the
            value is an object that contains other information about the
            thumbnail.
        title:
          type: string
          description: >-
            The video's title. @mutable youtube.videos.insert
            youtube.videos.update
        publishedAt:
          type: string
          description: The date and time when the video was uploaded.
          format: date-time
        liveBroadcastContent:
          type: string
          enumDescriptions:
            - ''
            - The live broadcast is upcoming.
            - The live broadcast is active.
            - The live broadcast has been completed.
          description: >-
            Indicates if the video is an upcoming/active live broadcast. Or it's
            "none" if the video is not an upcoming/active live broadcast.
          enum:
            - none
            - upcoming
            - live
            - completed
        defaultLanguage:
          description: The language of the videos's default snippet.
          type: string
        description:
          type: string
          description: >-
            The video's description. @mutable youtube.videos.insert
            youtube.videos.update
        tags:
          description: >-
            A list of keyword tags associated with the video. Tags may contain
            spaces.
          items:
            type: string
          type: array
        channelTitle:
          type: string
          description: Channel title for the channel that the video belongs to.
        categoryId:
          description: The YouTube video category associated with the video.
          type: string
        localized:
          description: >-
            Localized snippet selected with the hl parameter. If no such
            localization exists, this field is populated with the default
            snippet. (Read-only)
          $ref: '#/components/schemas/VideoLocalization'
        defaultAudioLanguage:
          type: string
          description: >-
            The default_audio_language property specifies the language spoken in
            the video's default audio track.
    AbuseReport:
      properties:
        relatedEntities:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntity'
        subject:
          $ref: '#/components/schemas/Entity'
        abuseTypes:
          items:
            $ref: '#/components/schemas/AbuseType'
          type: array
        description:
          type: string
      type: object
      id: AbuseReport
    MembershipsDetails:
      properties:
        accessibleLevels:
          items:
            type: string
          type: array
          description: >-
            Ids of all levels that the user has access to. This includes the
            currently active level and all other levels that are included
            because of a higher purchase.
        highestAccessibleLevelDisplayName:
          type: string
          description: >-
            Display name for the highest level that the user has access to at
            the moment.
        highestAccessibleLevel:
          description: Id of the highest level that the user has access to at the moment.
          type: string
        membershipsDurationAtLevels:
          items:
            $ref: '#/components/schemas/MembershipsDurationAtLevel'
          type: array
          description: Data about memberships duration on particular pricing levels.
        membershipsDuration:
          $ref: '#/components/schemas/MembershipsDuration'
          description: >-
            Data about memberships duration without taking into consideration
            pricing levels.
      type: object
      id: MembershipsDetails
    ChannelStatus:
      id: ChannelStatus
      description: JSON template for the status part of a channel.
      type: object
      properties:
        madeForKids:
          type: boolean
        longUploadsStatus:
          description: >-
            The long uploads status of this channel. See
            https://support.google.com/youtube/answer/71673 for more
            information.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          type: string
          enum:
            - longUploadsUnspecified
            - allowed
            - eligible
            - disallowed
        selfDeclaredMadeForKids:
          type: boolean
        privacyStatus:
          enum:
            - public
            - unlisted
            - private
          description: Privacy status of the channel.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
        isLinked:
          description: >-
            If true, then the user is linked to either a YouTube username or G+
            account. Otherwise, the user doesn't have a public YouTube identity.
          type: boolean
    LiveStreamContentDetails:
      description: Detailed settings of a stream.
      id: LiveStreamContentDetails
      type: object
      properties:
        closedCaptionsIngestionUrl:
          type: string
          description: The ingestion URL where the closed captions of this stream are sent.
        isReusable:
          description: >-
            Indicates whether the stream is reusable, which means that it can be
            bound to multiple broadcasts. It is common for broadcasters to reuse
            the same stream for many different broadcasts if those broadcasts
            occur at different times. If you set this value to false, then the
            stream will not be reusable, which means that it can only be bound
            to one broadcast. Non-reusable streams differ from reusable streams
            in the following ways: - A non-reusable stream can only be bound to
            one broadcast. - A non-reusable stream might be deleted by an
            automated process after the broadcast ends. - The liveStreams.list
            method does not list non-reusable streams if you call the method and
            set the mine parameter to true. The only way to use that method to
            retrieve the resource for a non-reusable stream is to use the id
            parameter to identify the stream. 
          type: boolean
    ChannelSectionTargeting:
      type: object
      id: ChannelSectionTargeting
      description: ChannelSection targeting setting.
      properties:
        countries:
          items:
            type: string
          type: array
          description: The country the channel section is targeting.
        languages:
          items:
            type: string
          type: array
          description: The language the channel section is targeting.
        regions:
          description: The region the channel section is targeting.
          items:
            type: string
          type: array
    LiveChatUserBannedMessageDetails:
      type: object
      id: LiveChatUserBannedMessageDetails
      properties:
        banDurationSeconds:
          description: >-
            The duration of the ban. This property is only present if the
            banType is temporary.
          format: uint64
          type: string
        bannedUserDetails:
          description: The details of the user that was banned.
          $ref: '#/components/schemas/ChannelProfileDetails'
        banType:
          enumDescriptions:
            - ''
            - ''
          enum:
            - permanent
            - temporary
          type: string
          description: The type of ban.
    VideoStatus:
      properties:
        license:
          enumDescriptions:
            - ''
            - ''
          type: string
          enum:
            - youtube
            - creativeCommon
          description: >-
            The video's license. @mutable youtube.videos.insert
            youtube.videos.update
        embeddable:
          type: boolean
          description: >-
            This value indicates if the video can be embedded on another
            website. @mutable youtube.videos.insert youtube.videos.update
        publishAt:
          format: date-time
          description: >-
            The date and time when the video is scheduled to publish. It can be
            set only if the privacy status of the video is private..
          type: string
        failureReason:
          enumDescriptions:
            - Unable to convert video content.
            - Invalid file format.
            - Empty file.
            - File was too small.
            - Unsupported codec.
            - Upload wasn't finished.
          enum:
            - conversion
            - invalidFile
            - emptyFile
            - tooSmall
            - codec
            - uploadAborted
          type: string
          description: >-
            This value explains why a video failed to upload. This property is
            only present if the uploadStatus property indicates that the upload
            failed.
        publicStatsViewable:
          description: >-
            This value indicates if the extended video statistics on the watch
            page can be viewed by everyone. Note that the view count, likes, etc
            will still be visible if this is disabled. @mutable
            youtube.videos.insert youtube.videos.update
          type: boolean
        rejectionReason:
          enum:
            - copyright
            - inappropriate
            - duplicate
            - termsOfUse
            - uploaderAccountSuspended
            - length
            - claim
            - uploaderAccountClosed
            - trademark
            - legal
          enumDescriptions:
            - Copyright infringement.
            - Inappropriate video content.
            - Duplicate upload in the same channel.
            - Terms of use violation.
            - Uploader account was suspended.
            - Video duration was too long.
            - Blocked by content owner.
            - Uploader closed his/her account.
            - Trademark infringement.
            - An unspecified legal reason.
          type: string
          description: >-
            This value explains why YouTube rejected an uploaded video. This
            property is only present if the uploadStatus property indicates that
            the upload was rejected.
        madeForKids:
          type: boolean
        selfDeclaredMadeForKids:
          type: boolean
        privacyStatus:
          type: string
          description: The video's privacy status.
          enum:
            - public
            - unlisted
            - private
          enumDescriptions:
            - ''
            - ''
            - ''
        uploadStatus:
          enumDescriptions:
            - Video has been uploaded but not processed yet.
            - Video has been successfully processed.
            - Processing has failed. See FailureReason.
            - Video has been rejected. See RejectionReason.
            - Video has been deleted.
          type: string
          enum:
            - uploaded
            - processed
            - failed
            - rejected
            - deleted
          description: The status of the uploaded video.
      description: >-
        Basic details about a video category, such as its localized title. Next
        Id: 18
      id: VideoStatus
      type: object
    LiveChatBan:
      description: A `__liveChatBan__` resource represents a ban for a YouTube live chat.
      id: LiveChatBan
      type: object
      properties:
        kind:
          default: youtube#liveChatBan
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"youtube#liveChatBan"`.
          type: string
        id:
          type: string
          description: The ID that YouTube assigns to uniquely identify the ban.
        snippet:
          $ref: '#/components/schemas/LiveChatBanSnippet'
          description: The `snippet` object contains basic details about the ban.
        etag:
          type: string
          description: Etag of this resource.
    ResourceId:
      id: ResourceId
      properties:
        videoId:
          description: >-
            The ID that YouTube uses to uniquely identify the referred resource,
            if that resource is a video. This property is only present if the
            resourceId.kind value is youtube#video.
          type: string
        playlistId:
          description: >-
            The ID that YouTube uses to uniquely identify the referred resource,
            if that resource is a playlist. This property is only present if the
            resourceId.kind value is youtube#playlist.
          type: string
        channelId:
          description: >-
            The ID that YouTube uses to uniquely identify the referred resource,
            if that resource is a channel. This property is only present if the
            resourceId.kind value is youtube#channel.
          type: string
        kind:
          type: string
          description: The type of the API resource.
      type: object
      description: >-
        A resource id is a generic reference that points to another YouTube
        resource.
    MemberSnippet:
      id: MemberSnippet
      type: object
      properties:
        membershipsDetails:
          description: Details about the user's membership.
          $ref: '#/components/schemas/MembershipsDetails'
        creatorChannelId:
          type: string
          description: The id of the channel that's offering memberships.
        memberDetails:
          description: Details about the member.
          $ref: '#/components/schemas/ChannelProfileDetails'
    Subscription:
      properties:
        snippet:
          description: >-
            The snippet object contains basic details about the subscription,
            including its title and the channel that the user subscribed to.
          $ref: '#/components/schemas/SubscriptionSnippet'
        subscriberSnippet:
          $ref: '#/components/schemas/SubscriptionSubscriberSnippet'
          description: >-
            The subscriberSnippet object contains basic details about the
            subscriber.
        contentDetails:
          description: >-
            The contentDetails object contains basic statistics about the
            subscription.
          $ref: '#/components/schemas/SubscriptionContentDetails'
        etag:
          description: Etag of this resource.
          type: string
        kind:
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#subscription".
          default: youtube#subscription
        id:
          type: string
          description: The ID that YouTube uses to uniquely identify the subscription.
      type: object
      description: >-
        A *subscription* resource contains information about a YouTube user
        subscription. A subscription notifies a user when new videos are added
        to a channel or when another user takes one of several actions on
        YouTube, such as uploading a video, rating a video, or commenting on a
        video.
      id: Subscription
    VideoStatistics:
      id: VideoStatistics
      description: >-
        Statistics about the video, such as the number of times the video was
        viewed or liked.
      properties:
        likeCount:
          type: string
          description: >-
            The number of users who have indicated that they liked the video by
            giving it a positive rating.
          format: uint64
        viewCount:
          format: uint64
          description: The number of times the video has been viewed.
          type: string
        commentCount:
          type: string
          description: The number of comments for the video.
          format: uint64
        dislikeCount:
          description: >-
            The number of users who have indicated that they disliked the video
            by giving it a negative rating.
          type: string
          format: uint64
        favoriteCount:
          format: uint64
          description: >-
            The number of users who currently have the video marked as a
            favorite video.
          type: string
      type: object
    SubscriptionSnippet:
      type: object
      properties:
        thumbnails:
          description: >-
            A map of thumbnail images associated with the video. For each object
            in the map, the key is the name of the thumbnail image, and the
            value is an object that contains other information about the
            thumbnail.
          $ref: '#/components/schemas/ThumbnailDetails'
        channelTitle:
          description: Channel title for the channel that the subscription belongs to.
          type: string
        description:
          type: string
          description: The subscription's details.
        publishedAt:
          description: The date and time that the subscription was created.
          type: string
          format: date-time
        channelId:
          description: >-
            The ID that YouTube uses to uniquely identify the subscriber's
            channel.
          type: string
        title:
          description: The subscription's title.
          type: string
        resourceId:
          annotations:
            required:
              - youtube.subscriptions.insert
          $ref: '#/components/schemas/ResourceId'
          description: >-
            The id object contains information about the channel that the user
            subscribed to.
      id: SubscriptionSnippet
      description: >-
        Basic details about a subscription, including title, description and
        thumbnails of the subscribed item.
    VideoAbuseReportReasonListResponse:
      properties:
        kind:
          default: youtube#videoAbuseReportReasonListResponse
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"youtube#videoAbuseReportReasonListResponse"`.
          type: string
        items:
          items:
            $ref: '#/components/schemas/VideoAbuseReportReason'
          description: >-
            A list of valid abuse reasons that are used with
            `video.ReportAbuse`.
          type: array
        etag:
          type: string
          description: Etag of this resource.
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        visitorId:
          type: string
          description: The `visitorId` identifies the visitor.
      type: object
      id: VideoAbuseReportReasonListResponse
    VideoPlayer:
      properties:
        embedHeight:
          type: string
          format: int64
        embedHtml:
          type: string
          description: An <iframe> tag that embeds a player that will play the video.
        embedWidth:
          description: The embed width
          format: int64
          type: string
      description: Player to be used for a video playback.
      id: VideoPlayer
      type: object
    ChannelLocalization:
      properties:
        title:
          description: The localized strings for channel's title.
          type: string
        description:
          description: The localized strings for channel's description.
          type: string
      id: ChannelLocalization
      type: object
      description: Channel localization setting
    SearchResult:
      description: >-
        A search result contains information about a YouTube video, channel, or
        playlist that matches the search parameters specified in an API request.
        While a search result points to a uniquely identifiable resource, like a
        video, it does not have its own persistent data.
      type: object
      id: SearchResult
      properties:
        etag:
          type: string
          description: Etag of this resource.
        snippet:
          description: >-
            The snippet object contains basic details about a search result,
            such as its title or description. For example, if the search result
            is a video, then the title will be the video's title and the
            description will be the video's description.
          $ref: '#/components/schemas/SearchResultSnippet'
        id:
          description: >-
            The id object contains information that can be used to uniquely
            identify the resource that matches the search request.
          $ref: '#/components/schemas/ResourceId'
        kind:
          default: youtube#searchResult
          type: string
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#searchResult".
    ActivityContentDetailsSubscription:
      id: ActivityContentDetailsSubscription
      properties:
        resourceId:
          description: >-
            The resourceId object contains information that identifies the
            resource that the user subscribed to.
          $ref: '#/components/schemas/ResourceId'
      type: object
      description: Information about a channel that a user subscribed to.
    LiveStreamListResponse:
      id: LiveStreamListResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#liveStreamListResponse".
          default: youtube#liveStreamListResponse
          type: string
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          items:
            $ref: '#/components/schemas/LiveStream'
          description: A list of live streams that match the request criteria.
          type: array
        etag:
          type: string
          description: Etag of this resource.
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        prevPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the previous page in the result set.
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
      type: object
    VideoRating:
      description: Basic details about rating of a video.
      id: VideoRating
      properties:
        videoId:
          description: The ID that YouTube uses to uniquely identify the video.
          type: string
        rating:
          enum:
            - none
            - like
            - dislike
          description: Rating of a video.
          type: string
          enumDescriptions:
            - ''
            - The entity is liked.
            - The entity is disliked.
      type: object
    SuperChatEventListResponse:
      id: SuperChatEventListResponse
      type: object
      properties:
        eventId:
          type: string
          description: Serialized EventId of the request which produced this response.
        items:
          description: A list of Super Chat purchases that match the request criteria.
          items:
            $ref: '#/components/schemas/SuperChatEvent'
          type: array
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#superChatEventListResponse".
          type: string
          default: youtube#superChatEventListResponse
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        nextPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
        etag:
          type: string
          description: Etag of this resource.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
    LiveChatModeratorListResponse:
      id: LiveChatModeratorListResponse
      properties:
        prevPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the previous page in the result set.
        visitorId:
          description: The visitorId identifies the visitor.
          type: string
        eventId:
          description: Serialized EventId of the request which produced this response.
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            "youtube#liveChatModeratorListResponse".
          default: youtube#liveChatModeratorListResponse
          type: string
        tokenPagination:
          $ref: '#/components/schemas/TokenPagination'
        nextPageToken:
          type: string
          description: >-
            The token that can be used as the value of the pageToken parameter
            to retrieve the next page in the result set.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: General pagination information.
        etag:
          description: Etag of this resource.
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/LiveChatModerator'
          description: A list of moderators that match the request criteria.
      type: object
    ActivityContentDetailsLike:
      type: object
      id: ActivityContentDetailsLike
      description: Information about a resource that received a positive (like) rating.
      properties:
        resourceId:
          description: >-
            The resourceId object contains information that identifies the rated
            resource.
          $ref: '#/components/schemas/ResourceId'
    CommentSnippetAuthorChannelId:
      id: CommentSnippetAuthorChannelId
      properties:
        value:
          type: string
      type: object
      description: The id of the author's YouTube channel, if any.
    I18nLanguageSnippet:
      description: >-
        Basic details about an i18n language, such as language code and
        human-readable name.
      id: I18nLanguageSnippet
      type: object
      properties:
        name:
          description: The human-readable name of the language in the language itself.
          type: string
        hl:
          description: A short BCP-47 code that uniquely identifies a language.
          type: string
    CommentThreadReplies:
      id: CommentThreadReplies
      description: Comments written in (direct or indirect) reply to the top level comment.
      properties:
        comments:
          type: array
          description: >-
            A limited number of replies. Unless the number of replies returned
            equals total_reply_count in the snippet the returned replies are
            only a subset of the total number of replies.
          items:
            $ref: '#/components/schemas/Comment'
      type: object
    ActivityContentDetailsUpload:
      id: ActivityContentDetailsUpload
      type: object
      description: Information about the uploaded video.
      properties:
        videoId:
          description: The ID that YouTube uses to uniquely identify the uploaded video.
          type: string
    InvideoTiming:
      properties:
        durationMs:
          format: uint64
          type: string
          description: >-
            Defines the duration in milliseconds for which the promotion should
            be displayed. If missing, the client should use the default.
        offsetMs:
          type: string
          format: uint64
          description: >-
            Defines the time at which the promotion will appear. Depending on
            the value of type the value of the offsetMs field will represent a
            time offset from the start or from the end of the video, expressed
            in milliseconds.
        type:
          type: string
          enum:
            - offsetFromStart
            - offsetFromEnd
          description: >-
            Describes a timing type. If the value is offsetFromStart, then the
            offsetMs field represents an offset from the start of the video. If
            the value is offsetFromEnd, then the offsetMs field represents an
            offset from the end of the video.
          enumDescriptions:
            - ''
            - ''
      description: Describes a temporal position of a visual widget inside a video.
      type: object
      id: InvideoTiming
    SearchResultSnippet:
      type: object
      properties:
        description:
          type: string
          description: A description of the search result.
        title:
          description: The title of the search result.
          type: string
        liveBroadcastContent:
          enum:
            - none
            - upcoming
            - live
            - completed
          description: >-
            It indicates if the resource (video or channel) has upcoming/active
            live broadcast content. Or it's "none" if there is not any
            upcoming/active live broadcasts.
          type: string
          enumDescriptions:
            - ''
            - The live broadcast is upcoming.
            - The live broadcast is active.
            - The live broadcast has been completed.
        channelId:
          type: string
          description: >-
            The value that YouTube uses to uniquely identify the channel that
            published the resource that the search result identifies.
        channelTitle:
          type: string
          description: >-
            The title of the channel that published the resource that the search
            result identifies.
        publishedAt:
          type: string
          format: date-time
          description: >-
            The creation date and time of the resource that the search result
            identifies.
        thumbnails:
          description: >-
            A map of thumbnail images associated with the search result. For
            each object in the map, the key is the name of the thumbnail image,
            and the value is an object that contains other information about the
            thumbnail.
          $ref: '#/components/schemas/ThumbnailDetails'
      id: SearchResultSnippet
      description: >-
        Basic details about a search result, including title, description and
        thumbnails of the item referenced by the search result.
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/youtube.readonly: View your YouTube account
            https://www.googleapis.com/auth/youtubepartner-channel-audit: >-
              View private information of your YouTube channel relevant during
              the audit process with a YouTube partner
            https://www.googleapis.com/auth/youtube.channel-memberships.creator: >-
              See a list of your current active channel members, their current
              level, and when they became a member
            https://www.googleapis.com/auth/youtube.upload: Manage your YouTube videos
            https://www.googleapis.com/auth/youtube: Manage your YouTube account
            https://www.googleapis.com/auth/youtube.force-ssl: >-
              See, edit, and permanently delete your YouTube videos, ratings,
              comments and captions
            https://www.googleapis.com/auth/youtubepartner: View and manage your assets and associated content on YouTube
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /youtube/v3/liveChat/bans:
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.liveChatBans.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveChatBan'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveChatBan'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: live_chat_bans
      x-stackQL-verb: insert
    delete:
      description: Deletes a chat ban.
      operationId: youtube.liveChatBans.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: live_chat_bans
      x-stackQL-verb: delete
  /youtube/v3/videoCategories:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.videoCategories.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoCategoryListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: regionCode
          schema:
            type: string
      x-stackQL-resource: video_categories
      x-stackQL-verb: select
  /youtube/v3/activities:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.activities.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
        - in: query
          name: publishedAfter
          schema:
            type: string
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: home
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: publishedBefore
          schema:
            type: string
        - in: query
          name: regionCode
          schema:
            type: string
      x-stackQL-resource: activities
      x-stackQL-verb: select
  /youtube/v3/liveStreams:
    parameters: *ref_1
    get:
      description: Retrieve the list of streams associated with the given channel. --
      operationId: youtube.liveStreams.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStreamListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: live_streams
      x-stackQL-verb: select
    post:
      description: Inserts a new stream for the authenticated user.
      operationId: youtube.liveStreams.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStream'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
      x-stackQL-resource: live_streams
      x-stackQL-verb: insert
    delete:
      description: Deletes an existing stream for the authenticated user.
      operationId: youtube.liveStreams.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: live_streams
      x-stackQL-verb: delete
    put:
      description: Updates an existing stream for the authenticated user.
      operationId: youtube.liveStreams.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStream'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: live_streams
      x-stackQL-verb: exec
  /youtube/v3/videoAbuseReportReasons:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.videoAbuseReportReasons.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoAbuseReportReasonListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
      x-stackQL-resource: video_abuse_report_reasons
      x-stackQL-verb: select
  /youtube/v3/liveChat/moderators:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.liveChatModerators.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveChatModeratorListResponse'
      parameters:
        - in: query
          name: liveChatId
          required: true
          schema:
            type: string
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: live_chat_moderators
      x-stackQL-verb: select
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.liveChatModerators.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveChatModerator'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveChatModerator'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: live_chat_moderators
      x-stackQL-verb: insert
    delete:
      description: Deletes a chat moderator.
      operationId: youtube.liveChatModerators.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: live_chat_moderators
      x-stackQL-verb: delete
  /youtube/v3/subscriptions:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.subscriptions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: forChannelId
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: mySubscribers
          schema:
            type: boolean
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: myRecentSubscribers
          schema:
            type: boolean
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: order
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-verb: select
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.subscriptions.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-verb: insert
    delete:
      description: Deletes a resource.
      operationId: youtube.subscriptions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: subscriptions
      x-stackQL-verb: delete
  /youtube/v3/playlists:
    parameters: *ref_1
    put:
      description: Updates an existing resource.
      operationId: youtube.playlists.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Playlist'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlist'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: playlists
      x-stackQL-verb: exec
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.playlists.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Playlist'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlist'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
      x-stackQL-resource: playlists
      x-stackQL-verb: insert
    delete:
      description: Deletes a resource.
      operationId: youtube.playlists.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: playlists
      x-stackQL-verb: delete
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.playlists.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: id
          schema:
            type: string
      x-stackQL-resource: playlists
      x-stackQL-verb: select
  /youtube/v3/playlistItems:
    parameters: *ref_1
    delete:
      description: Deletes a resource.
      operationId: youtube.playlistItems.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: playlist_items
      x-stackQL-verb: delete
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.playlistItems.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistItemListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: videoId
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: playlistId
          schema:
            type: string
      x-stackQL-resource: playlist_items
      x-stackQL-verb: select
    put:
      description: Updates an existing resource.
      operationId: youtube.playlistItems.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaylistItem'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistItem'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: playlist_items
      x-stackQL-verb: exec
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.playlistItems.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaylistItem'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistItem'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: playlist_items
      x-stackQL-verb: insert
  /youtube/v3/thirdPartyLinks:
    parameters: *ref_1
    delete:
      description: Deletes a resource.
      operationId: youtube.thirdPartyLinks.delete
      security: []
      parameters:
        - in: query
          name: linkingToken
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
        - in: query
          name: externalChannelId
          schema:
            type: string
        - in: query
          name: part
          schema:
            type: string
      x-stackQL-resource: third_party_links
      x-stackQL-verb: delete
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.thirdPartyLinks.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThirdPartyLink'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyLink'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: externalChannelId
          schema:
            type: string
      x-stackQL-resource: third_party_links
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.thirdPartyLinks.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyLinkListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: linkingToken
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: externalChannelId
          schema:
            type: string
      x-stackQL-resource: third_party_links
      x-stackQL-verb: select
    put:
      description: Updates an existing resource.
      operationId: youtube.thirdPartyLinks.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThirdPartyLink'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyLink'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: externalChannelId
          schema:
            type: string
      x-stackQL-resource: third_party_links
      x-stackQL-verb: exec
  /youtube/v3/channelBanners/insert:
    parameters: *ref_1
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.channelBanners.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelBannerResource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.upload
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.upload
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelBannerResource'
      parameters:
        - in: query
          name: channelId
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: channel_banners
      x-stackQL-verb: insert
  /youtube/v3/commentThreads:
    parameters: *ref_1
    put:
      description: Updates an existing resource.
      operationId: youtube.youtube.v3.updateCommentThreads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentThread'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentThread'
      parameters:
        - in: query
          name: part
          schema:
            type: string
      x-stackQL-resource: v3
      x-stackQL-verb: exec
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.commentThreads.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentThread'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentThread'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: comment_threads
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.commentThreads.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentThreadListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: order
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: textFormat
          schema:
            type: string
        - in: query
          name: videoId
          schema:
            type: string
        - in: query
          name: allThreadsRelatedToChannelId
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: searchTerms
          schema:
            type: string
        - in: query
          name: moderationStatus
          schema:
            type: string
      x-stackQL-resource: comment_threads
      x-stackQL-verb: select
  /youtube/v3/channels:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.channels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner-channel-audit
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner-channel-audit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: hl
          schema:
            type: string
        - in: query
          name: forUsername
          schema:
            type: string
        - in: query
          name: managedByMe
          schema:
            type: boolean
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: categoryId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: mySubscribers
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: channels
      x-stackQL-verb: select
    put:
      description: Updates an existing resource.
      operationId: youtube.channels.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: channels
      x-stackQL-verb: exec
  /youtube/v3/watermarks/set:
    parameters: *ref_1
    post:
      description: Allows upload of watermark image and setting it for a channel.
      operationId: youtube.watermarks.set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvideoBranding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.upload
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.upload
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: channelId
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: watermarks
      x-stackQL-verb: exec
  /youtube/v3/watermarks/unset:
    parameters: *ref_1
    post:
      description: Allows removal of channel watermark.
      operationId: youtube.watermarks.unset
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: channelId
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: watermarks
      x-stackQL-verb: exec
  /youtube/v3/i18nRegions:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.i18nRegions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/I18nRegionListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
      x-stackQL-resource: i18n_regions
      x-stackQL-verb: select
  /youtube/v3/i18nLanguages:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.i18nLanguages.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/I18nLanguageListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
      x-stackQL-resource: i18n_languages
      x-stackQL-verb: select
  /youtube/v3/videos:
    parameters: *ref_1
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.videos.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.upload
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.upload
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: stabilize
          schema:
            type: boolean
        - in: query
          name: autoLevels
          schema:
            type: boolean
        - in: query
          name: notifySubscribers
          schema:
            type: boolean
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: videos
      x-stackQL-verb: insert
    delete:
      description: Deletes a resource.
      operationId: youtube.videos.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: videos
      x-stackQL-verb: delete
    put:
      description: Updates an existing resource.
      operationId: youtube.videos.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: videos
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.videos.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: maxWidth
          schema:
            type: integer
        - in: query
          name: chart
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: regionCode
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: hl
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
        - in: query
          name: videoCategoryId
          schema:
            type: string
        - in: query
          name: myRating
          schema:
            type: string
        - in: query
          name: maxHeight
          schema:
            type: integer
      x-stackQL-resource: videos
      x-stackQL-verb: select
  /youtube/v3/videos/rate:
    parameters: *ref_1
    post:
      description: >-
        Adds a like or dislike rating to a video or removes a rating from a
        video.
      operationId: youtube.videos.rate
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: rating
          required: true
          schema:
            type: string
      x-stackQL-resource: videos
      x-stackQL-verb: exec
  /youtube/v3/videos/getRating:
    parameters: *ref_1
    get:
      description: >-
        Retrieves the ratings that the authorized user gave to a list of
        specified videos.
      operationId: youtube.videos.getRating
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoGetRatingResponse'
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: videos__rating
      x-stackQL-verb: select
  /youtube/v3/videos/reportAbuse:
    parameters: *ref_1
    post:
      description: Report abuse for a video.
      operationId: youtube.videos.reportAbuse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoAbuseReport'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: videos
      x-stackQL-verb: exec
  /youtube/v3/abuseReports:
    parameters: *ref_1
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.abuseReports.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbuseReport'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbuseReport'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: abuse_reports
      x-stackQL-verb: insert
  /youtube/v3/search:
    parameters: *ref_1
    get:
      description: Retrieves a list of search resources
      operationId: youtube.search.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: videoDuration
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: videoSyndicated
          schema:
            type: string
        - in: query
          name: videoDefinition
          schema:
            type: string
        - in: query
          name: order
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: videoType
          schema:
            type: string
        - in: query
          name: regionCode
          schema:
            type: string
        - in: query
          name: videoLicense
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
        - in: query
          name: relevanceLanguage
          schema:
            type: string
        - in: query
          name: locationRadius
          schema:
            type: string
        - in: query
          name: topicId
          schema:
            type: string
        - in: query
          name: location
          schema:
            type: string
        - in: query
          name: relatedToVideoId
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: forContentOwner
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: videoCaption
          schema:
            type: string
        - in: query
          name: publishedAfter
          schema:
            type: string
        - in: query
          name: forMine
          schema:
            type: boolean
        - in: query
          name: forDeveloper
          schema:
            type: boolean
        - in: query
          name: safeSearch
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: channelType
          schema:
            type: string
        - in: query
          name: eventType
          schema:
            type: string
        - in: query
          name: videoCategoryId
          schema:
            type: string
        - in: query
          name: videoDimension
          schema:
            type: string
        - in: query
          name: videoEmbeddable
          schema:
            type: string
        - in: query
          name: publishedBefore
          schema:
            type: string
      x-stackQL-resource: search
      x-stackQL-verb: select
  /youtube/v3/captions:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.captions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaptionListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: videoId
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOf
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: captions
      x-stackQL-verb: select
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.captions.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Caption'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Caption'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOf
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: sync
          schema:
            type: boolean
      x-stackQL-resource: captions
      x-stackQL-verb: insert
    put:
      description: Updates an existing resource.
      operationId: youtube.captions.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Caption'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Caption'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: sync
          schema:
            type: boolean
        - in: query
          name: onBehalfOf
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: captions
      x-stackQL-verb: exec
    delete:
      description: Deletes a resource.
      operationId: youtube.captions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOf
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: captions
      x-stackQL-verb: delete
  /youtube/v3/captions/{id}:
    parameters: *ref_1
    get:
      description: Downloads a caption track.
      operationId: youtube.captions.download
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: tfmt
          schema:
            type: string
        - in: query
          name: tlang
          schema:
            type: string
        - in: query
          name: onBehalfOf
          schema:
            type: string
      x-stackQL-resource: captions
      x-stackQL-verb: exec
  /youtube/v3/members:
    parameters: *ref_1
    get:
      description: >-
        Retrieves a list of members that match the request criteria for a
        channel.
      operationId: youtube.members.list
      security:
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/youtube.channel-memberships.creator
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/youtube.channel-memberships.creator
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: filterByMemberChannelId
          schema:
            type: string
        - in: query
          name: mode
          schema:
            type: string
        - in: query
          name: hasAccessToLevel
          schema:
            type: string
      x-stackQL-resource: members
      x-stackQL-verb: select
  /youtube/v3/liveBroadcasts:
    parameters: *ref_1
    put:
      description: Updates an existing broadcast for the authenticated user.
      operationId: youtube.liveBroadcasts.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveBroadcast'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveBroadcast'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: exec
    post:
      description: Inserts a new stream for the authenticated user.
      operationId: youtube.liveBroadcasts.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveBroadcast'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveBroadcast'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: insert
    delete:
      description: Delete a given broadcast.
      operationId: youtube.liveBroadcasts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: delete
    get:
      description: Retrieve the list of broadcasts associated with the given channel.
      operationId: youtube.liveBroadcasts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveBroadcastListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: broadcastType
          schema:
            type: string
        - in: query
          name: broadcastStatus
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: select
  /youtube/v3/liveBroadcasts/transition:
    parameters: *ref_1
    post:
      description: Transition a broadcast to a given status.
      operationId: youtube.liveBroadcasts.transition
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveBroadcast'
      parameters:
        - in: query
          name: broadcastStatus
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: exec
  /youtube/v3/liveBroadcasts/cuepoint:
    parameters: *ref_1
    post:
      description: Insert cuepoints in a broadcast
      operationId: youtube.liveBroadcasts.insertCuepoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cuepoint'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cuepoint'
      parameters:
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: part
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: insert
  /youtube/v3/liveBroadcasts/bind:
    parameters: *ref_1
    post:
      description: Bind a broadcast to a stream.
      operationId: youtube.liveBroadcasts.bind
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveBroadcast'
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: streamId
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
      x-stackQL-resource: live_broadcasts
      x-stackQL-verb: exec
  /youtube/v3/channelSections:
    parameters: *ref_1
    put:
      description: Updates an existing resource.
      operationId: youtube.channelSections.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelSection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelSection'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: channel_sections
      x-stackQL-verb: exec
    delete:
      description: Deletes a resource.
      operationId: youtube.channelSections.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: channel_sections
      x-stackQL-verb: delete
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.channelSections.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelSection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelSection'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwnerChannel
          schema:
            type: string
      x-stackQL-resource: channel_sections
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.channelSections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelSectionListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
        - in: query
          name: mine
          schema:
            type: boolean
        - in: query
          name: hl
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
      x-stackQL-resource: channel_sections
      x-stackQL-verb: select
  /youtube/v3/thumbnails/set:
    parameters: *ref_1
    post:
      description: >-
        As this is not an insert in a strict sense (it supports
        uploading/setting of a thumbnail for multiple videos, which doesn't
        result in creation of a single resource), I use a custom verb here.
      operationId: youtube.thumbnails.set
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.upload
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.upload
        - Oauth2:
            - https://www.googleapis.com/auth/youtubepartner
          Oauth2c:
            - https://www.googleapis.com/auth/youtubepartner
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThumbnailSetResponse'
      parameters:
        - in: query
          name: videoId
          required: true
          schema:
            type: string
        - in: query
          name: onBehalfOfContentOwner
          schema:
            type: string
      x-stackQL-resource: thumbnails
      x-stackQL-verb: exec
  /youtube/v3/superChatEvents:
    parameters: *ref_1
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.superChatEvents.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuperChatEventListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: hl
          schema:
            type: string
      x-stackQL-resource: super_chat_events
      x-stackQL-verb: select
  /youtube/v3/liveChat/messages:
    parameters: *ref_1
    delete:
      description: Deletes a chat message.
      operationId: youtube.liveChatMessages.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: live_chat_messages
      x-stackQL-verb: delete
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.liveChatMessages.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveChatMessage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveChatMessage'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: live_chat_messages
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.liveChatMessages.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube
          Oauth2c:
            - https://www.googleapis.com/auth/youtube
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveChatMessageListResponse'
      parameters:
        - in: query
          name: liveChatId
          required: true
          schema:
            type: string
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: profileImageSize
          schema:
            type: integer
        - in: query
          name: hl
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: live_chat_messages
      x-stackQL-verb: select
  /youtube/v3/tests:
    parameters: *ref_1
    post:
      description: POST method.
      operationId: youtube.tests.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestItem'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestItem'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: externalChannelId
          schema:
            type: string
      x-stackQL-resource: tests
      x-stackQL-verb: insert
  /youtube/v3/membershipsLevels:
    parameters: *ref_1
    get:
      description: Retrieves a list of all pricing levels offered by a creator to the fans.
      operationId: youtube.membershipsLevels.list
      security:
        - Oauth2:
            - >-
              https://www.googleapis.com/auth/youtube.channel-memberships.creator
          Oauth2c:
            - >-
              https://www.googleapis.com/auth/youtube.channel-memberships.creator
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipsLevelListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships_levels
      x-stackQL-verb: select
  /youtube/v3/comments:
    parameters: *ref_1
    delete:
      description: Deletes a resource.
      operationId: youtube.comments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: delete
    post:
      description: Inserts a new resource into this collection.
      operationId: youtube.comments.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: insert
    put:
      description: Updates an existing resource.
      operationId: youtube.comments.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of resources, possibly filtered.
      operationId: youtube.comments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentListResponse'
      parameters:
        - in: query
          name: part
          required: true
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: parentId
          schema:
            type: string
        - in: query
          name: textFormat
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: select
  /youtube/v3/comments/markAsSpam:
    parameters: *ref_1
    post:
      description: >-
        Expresses the caller's opinion that one or more comments should be
        flagged as spam.
      operationId: youtube.comments.markAsSpam
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: exec
  /youtube/v3/comments/setModerationStatus:
    parameters: *ref_1
    post:
      description: Sets the moderation status of one or more comments.
      operationId: youtube.comments.setModerationStatus
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/youtube.force-ssl
          Oauth2c:
            - https://www.googleapis.com/auth/youtube.force-ssl
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: moderationStatus
          required: true
          schema:
            type: string
        - in: query
          name: banAuthor
          schema:
            type: boolean
      x-stackQL-resource: comments
      x-stackQL-verb: exec
