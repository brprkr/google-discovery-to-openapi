openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Deployment Manager V2 API
  description: >-
    The Google Cloud Deployment Manager v2 API provides services for
    configuring, deploying, and viewing Google Cloud services and APIs via
    templates which specify deployments of Cloud resources.
  version: v2beta
  x-discovery-doc-revision: '20230608'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/deployment-manager
servers:
  - url: https://deploymentmanager.googleapis.com
components:
  schemas:
    DeploymentsCancelPreviewRequest:
      type: object
      properties:
        fingerprint:
          format: byte
          type: string
          description: >-
            Specifies a fingerprint for `cancelPreview()` requests. A
            fingerprint is a randomly generated value that must be provided in
            `cancelPreview()` requests to perform optimistic locking. This
            ensures optimistic concurrency so that the deployment does not have
            conflicting requests (e.g. if someone attempts to make a new update
            request while another user attempts to cancel a preview, this would
            prevent one of the requests). The fingerprint is initially generated
            by Deployment Manager and changes after every request to modify a
            deployment. To get the latest fingerprint value, perform a `get()`
            request on the deployment.
      id: DeploymentsCancelPreviewRequest
    InputMapping:
      type: object
      description: >-
        InputMapping creates a 'virtual' property that will be injected into the
        properties before sending the request to the underlying API.
      id: InputMapping
      properties:
        fieldName:
          description: The name of the field that is going to be injected.
          type: string
        methodMatch:
          type: string
          description: Regex to evaluate on method to decide if input applies.
        value:
          type: string
          description: A jsonPath expression to select an element.
        location:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          description: The location where this mapping applies.
          type: string
          enum:
            - UNKNOWN
            - PATH
            - QUERY
            - BODY
            - HEADER
    DeploymentsListResponse:
      type: object
      id: DeploymentsListResponse
      properties:
        nextPageToken:
          description: Output only. A token used to continue a truncated list request.
          type: string
        deployments:
          type: array
          description: Output only. The deployments contained in this response.
          items:
            $ref: '#/components/schemas/Deployment'
      description: >-
        A response containing a partial list of deployments and a page token
        used to build the next request if the request has been truncated.
    DeploymentUpdate:
      properties:
        labels:
          items:
            $ref: '#/components/schemas/DeploymentUpdateLabelEntry'
          description: >-
            Map of One Platform labels; provided by the client when the resource
            is created or updated. Specifically: Label keys must be between 1
            and 63 characters long and must conform to the following regular
            expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be
            between 0 and 63 characters long and must conform to the regular
            expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
          type: array
        description:
          type: string
          description: >-
            Output only. An optional user-provided description of the deployment
            after the current update has been applied.
        manifest:
          description: >-
            Output only. URL of the manifest representing the update
            configuration of this deployment.
          type: string
      id: DeploymentUpdate
      type: object
    ImportFile:
      type: object
      properties:
        content:
          description: The contents of the file.
          type: string
        name:
          type: string
          description: The name of the file.
      id: ImportFile
    Operation:
      description: >-
        Represents an Operation resource. Google Compute Engine has three
        Operation resources: *
        [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) *
        [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations)
        * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations)
        You can use an operation resource to manage asynchronous API requests.
        For more information, read Handling API responses. Operations can be
        global, regional or zonal. - For global operations, use the
        `globalOperations` resource. - For regional operations, use the
        `regionOperations` resource. - For zonal operations, use the
        `zonalOperations` resource. For more information, read Global, Regional,
        and Zonal Resources.
      type: object
      properties:
        zone:
          description: >-
            [Output Only] The URL of the zone where the operation resides. Only
            applicable when performing per-zone operations.
          type: string
        targetId:
          description: >-
            [Output Only] The unique target ID, which identifies a specific
            incarnation of the target resource.
          type: string
          format: uint64
        operationType:
          description: >-
            [Output Only] The type of operation, such as `insert`, `update`, or
            `delete`, and so on.
          type: string
        httpErrorStatusCode:
          type: integer
          format: int32
          description: >-
            [Output Only] If the operation fails, this field contains the HTTP
            error status code that was returned. For example, a `404` means the
            resource was not found.
        progress:
          format: int32
          description: >-
            [Output Only] An optional progress indicator that ranges from 0 to
            100. There is no requirement that this be linear or support any
            granularity of operations. This should not be used to guess when the
            operation will be complete. This number should monotonically
            increase as the operation progresses.
          type: integer
        startTime:
          description: >-
            [Output Only] The time that this operation was started by the
            server. This value is in RFC3339 text format.
          type: string
        name:
          description: '[Output Only] Name of the operation.'
          type: string
        region:
          type: string
          description: >-
            [Output Only] The URL of the region where the operation resides.
            Only applicable when performing regional operations.
        endTime:
          type: string
          description: >-
            [Output Only] The time that this operation was completed. This value
            is in RFC3339 text format.
        statusMessage:
          type: string
          description: >-
            [Output Only] An optional textual description of the current status
            of the operation.
        warnings:
          description: >-
            [Output Only] If warning messages are generated during processing of
            the operation, this field will be populated.
          type: array
          items:
            properties:
              code:
                enumDescriptions:
                  - A link to a deprecated resource was created.
                  - No results are present on a particular list page.
                  - A given scope cannot be reached.
                  - >-
                    The route's nextHopIp address is not assigned to an instance
                    on the network.
                  - >-
                    The route's nextHopInstance URL refers to an instance that
                    does not exist.
                  - >-
                    The route's nextHopInstance URL refers to an instance that
                    is not on the same network as the route.
                  - The route's next hop instance cannot ip forward.
                  - >-
                    The route's next hop instance does not have a status of
                    RUNNING.
                  - >-
                    The operation involved use of an injected kernel, which is
                    deprecated.
                  - >-
                    The user attempted to use a resource that requires a TOS
                    they have not accepted.
                  - The user created a boot disk that is larger than image size.
                  - >-
                    One or more of the resources set to auto-delete could not be
                    deleted because they were in use.
                  - >-
                    Instance template used in instance group manager is valid as
                    such, but its application does not make a lot of sense,
                    because it allows only single instance in instance group.
                  - >-
                    Error which is not critical. We decided to continue the
                    process despite the mentioned error.
                  - >-
                    Warning about failed cleanup of transient changes made by a
                    failed operation.
                  - >-
                    Warning that value of a field has been overridden.
                    Deprecated unused field.
                  - Warning that a resource is in use.
                  - A resource depends on a missing type
                  - Warning that is present in an external api call
                  - When a resource schema validation is ignored.
                  - When undeclared properties in the schema are present
                  - >-
                    When deploying and at least one of the resources has a type
                    marked as experimental
                  - >-
                    When deploying and at least one of the resources has a type
                    marked as deprecated
                  - >-
                    Success is reported, but some results may be missing due to
                    errors
                  - >-
                    When deploying a deployment with a exceedingly large number
                    of resources
                  - >-
                    The route's nextHopInstance URL refers to an instance that
                    does not have an ipv6 interface on the same network as the
                    route.
                  - >-
                    A WEIGHTED_MAGLEV backend service is associated with a
                    health check that is not of type HTTP/HTTPS/HTTP2.
                  - >-
                    Resource can't be retrieved due to list overhead quota
                    exceed which captures the amount of resources filtered out
                    by user-defined list filter.
                description: >-
                  [Output Only] A warning code, if applicable. For example,
                  Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                  results in the response.
                enum:
                  - DEPRECATED_RESOURCE_USED
                  - NO_RESULTS_ON_PAGE
                  - UNREACHABLE
                  - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                  - NEXT_HOP_INSTANCE_NOT_FOUND
                  - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                  - NEXT_HOP_CANNOT_IP_FORWARD
                  - NEXT_HOP_NOT_RUNNING
                  - INJECTED_KERNELS_DEPRECATED
                  - REQUIRED_TOS_AGREEMENT
                  - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                  - RESOURCE_NOT_DELETED
                  - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                  - NOT_CRITICAL_ERROR
                  - CLEANUP_FAILED
                  - FIELD_VALUE_OVERRIDEN
                  - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                  - MISSING_TYPE_DEPENDENCY
                  - EXTERNAL_API_WARNING
                  - SCHEMA_VALIDATION_IGNORED
                  - UNDECLARED_PROPERTIES
                  - EXPERIMENTAL_TYPE_USED
                  - DEPRECATED_TYPE_USED
                  - PARTIAL_SUCCESS
                  - LARGE_DEPLOYMENT_WARNING
                  - NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE
                  - INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB
                  - LIST_OVERHEAD_QUOTA_EXCEED
                type: string
              data:
                items:
                  properties:
                    key:
                      type: string
                      description: >-
                        [Output Only] A key that provides more detail on the
                        warning being returned. For example, for warnings where
                        there are no results in a list request for a particular
                        zone, this key might be scope and the key value might be
                        the zone name. Other examples might be a key indicating
                        a deprecated resource and a suggested replacement, or a
                        warning about invalid network settings (for example, if
                        an instance attempts to perform IP forwarding but is not
                        enabled for IP forwarding).
                    value:
                      type: string
                      description: >-
                        [Output Only] A warning data value corresponding to the
                        key.
                  type: object
                description: >-
                  [Output Only] Metadata about this warning in key: value
                  format. For example: "data": [ { "key": "scope", "value":
                  "zones/us-east1-d" } 
                type: array
              message:
                type: string
                description: >-
                  [Output Only] A human-readable description of the warning
                  code.
            type: object
        status:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - PENDING
            - RUNNING
            - DONE
          description: >-
            [Output Only] The status of the operation, which can be one of the
            following: `PENDING`, `RUNNING`, or `DONE`.
        id:
          format: uint64
          type: string
          description: >-
            [Output Only] The unique identifier for the operation. This
            identifier is defined by the server.
        selfLink:
          description: '[Output Only] Server-defined URL for the resource.'
          type: string
        user:
          description: >-
            [Output Only] User who requested the operation, for example:
            `user@example.com`.
          type: string
        insertTime:
          description: >-
            [Output Only] The time that this operation was requested. This value
            is in RFC3339 text format.
          type: string
        error:
          type: object
          properties:
            errors:
              type: array
              description: >-
                [Output Only] The array of errors encountered while processing
                this operation.
              items:
                properties:
                  location:
                    description: >-
                      [Output Only] Indicates the field in the request that
                      caused the error. This property is optional.
                    type: string
                  code:
                    type: string
                    description: '[Output Only] The error type identifier for this error.'
                  message:
                    description: '[Output Only] An optional, human-readable error message.'
                    type: string
                type: object
          description: >-
            [Output Only] If errors are generated during processing of the
            operation, this field will be populated.
        targetLink:
          type: string
          description: >-
            [Output Only] The URL of the resource that the operation modifies.
            For operations related to creating a snapshot, this points to the
            persistent disk that the snapshot was created from.
        httpErrorMessage:
          type: string
          description: >-
            [Output Only] If the operation fails, this field contains the HTTP
            error message that was returned, such as `NOT FOUND`.
        creationTimestamp:
          description: '[Deprecated] This field is deprecated.'
          type: string
        clientOperationId:
          type: string
          description: >-
            [Output Only] The value of `requestId` if you provided it in the
            request. Not present otherwise.
        operationGroupId:
          description: >-
            [Output Only] An ID that represents a group of operations, such as
            when a group of operations results from a `bulkInsert` API request.
          type: string
        kind:
          default: compute#operation
          description: >-
            [Output Only] Type of the resource. Always `compute#operation` for
            Operation resources.
          type: string
        description:
          description: >-
            [Output Only] A textual description of the operation, which is set
            when the operation is created.
          type: string
      id: Operation
    DeploymentsStopRequest:
      id: DeploymentsStopRequest
      type: object
      properties:
        fingerprint:
          format: byte
          type: string
          description: >-
            Specifies a fingerprint for `stop()` requests. A fingerprint is a
            randomly generated value that must be provided in `stop()` requests
            to perform optimistic locking. This ensures optimistic concurrency
            so that the deployment does not have conflicting requests (e.g. if
            someone attempts to make a new update request while another user
            attempts to stop an ongoing update request, this would prevent a
            collision). The fingerprint is initially generated by Deployment
            Manager and changes after every request to modify a deployment. To
            get the latest fingerprint value, perform a `get()` request on the
            deployment.
    TypeProviderLabelEntry:
      type: object
      properties:
        value:
          type: string
          description: Value of the label
        key:
          description: Key of the label
          type: string
      id: TypeProviderLabelEntry
      description: Label object for TypeProviders
    ResourceUpdate:
      type: object
      id: ResourceUpdate
      properties:
        finalProperties:
          type: string
          description: >-
            Output only. The expanded properties of the resource with reference
            values expanded. Returned as serialized YAML.
        accessControl:
          description: >-
            The Access Control Policy to set on this resource after updating the
            resource itself.
          $ref: '#/components/schemas/ResourceAccessControl'
        properties:
          type: string
          description: >-
            Output only. The set of updated properties for this resource, before
            references are expanded. Returned as serialized YAML.
        state:
          enumDescriptions:
            - There are changes pending for this resource.
            - The service is executing changes on the resource.
            - The service is previewing changes on the resource.
            - The service has failed to change the resource.
            - The service has aborted trying to change the resource.
          description: Output only. The state of the resource.
          type: string
          enum:
            - PENDING
            - IN_PROGRESS
            - IN_PREVIEW
            - FAILED
            - ABORTED
        warnings:
          type: array
          items:
            properties:
              code:
                enum:
                  - DEPRECATED_RESOURCE_USED
                  - NO_RESULTS_ON_PAGE
                  - UNREACHABLE
                  - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                  - NEXT_HOP_INSTANCE_NOT_FOUND
                  - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                  - NEXT_HOP_CANNOT_IP_FORWARD
                  - NEXT_HOP_NOT_RUNNING
                  - INJECTED_KERNELS_DEPRECATED
                  - REQUIRED_TOS_AGREEMENT
                  - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                  - RESOURCE_NOT_DELETED
                  - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                  - NOT_CRITICAL_ERROR
                  - CLEANUP_FAILED
                  - FIELD_VALUE_OVERRIDEN
                  - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                  - MISSING_TYPE_DEPENDENCY
                  - EXTERNAL_API_WARNING
                  - SCHEMA_VALIDATION_IGNORED
                  - UNDECLARED_PROPERTIES
                  - EXPERIMENTAL_TYPE_USED
                  - DEPRECATED_TYPE_USED
                  - PARTIAL_SUCCESS
                  - LARGE_DEPLOYMENT_WARNING
                  - NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE
                  - INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB
                  - LIST_OVERHEAD_QUOTA_EXCEED
                type: string
                description: >-
                  [Output Only] A warning code, if applicable. For example,
                  Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                  results in the response.
                enumDescriptions:
                  - A link to a deprecated resource was created.
                  - No results are present on a particular list page.
                  - A given scope cannot be reached.
                  - >-
                    The route's nextHopIp address is not assigned to an instance
                    on the network.
                  - >-
                    The route's nextHopInstance URL refers to an instance that
                    does not exist.
                  - >-
                    The route's nextHopInstance URL refers to an instance that
                    is not on the same network as the route.
                  - The route's next hop instance cannot ip forward.
                  - >-
                    The route's next hop instance does not have a status of
                    RUNNING.
                  - >-
                    The operation involved use of an injected kernel, which is
                    deprecated.
                  - >-
                    The user attempted to use a resource that requires a TOS
                    they have not accepted.
                  - The user created a boot disk that is larger than image size.
                  - >-
                    One or more of the resources set to auto-delete could not be
                    deleted because they were in use.
                  - >-
                    Instance template used in instance group manager is valid as
                    such, but its application does not make a lot of sense,
                    because it allows only single instance in instance group.
                  - >-
                    Error which is not critical. We decided to continue the
                    process despite the mentioned error.
                  - >-
                    Warning about failed cleanup of transient changes made by a
                    failed operation.
                  - >-
                    Warning that value of a field has been overridden.
                    Deprecated unused field.
                  - Warning that a resource is in use.
                  - A resource depends on a missing type
                  - Warning that is present in an external api call
                  - When a resource schema validation is ignored.
                  - When undeclared properties in the schema are present
                  - >-
                    When deploying and at least one of the resources has a type
                    marked as experimental
                  - >-
                    When deploying and at least one of the resources has a type
                    marked as deprecated
                  - >-
                    Success is reported, but some results may be missing due to
                    errors
                  - >-
                    When deploying a deployment with a exceedingly large number
                    of resources
                  - >-
                    The route's nextHopInstance URL refers to an instance that
                    does not have an ipv6 interface on the same network as the
                    route.
                  - >-
                    A WEIGHTED_MAGLEV backend service is associated with a
                    health check that is not of type HTTP/HTTPS/HTTP2.
                  - >-
                    Resource can't be retrieved due to list overhead quota
                    exceed which captures the amount of resources filtered out
                    by user-defined list filter.
              data:
                items:
                  properties:
                    value:
                      type: string
                      description: >-
                        [Output Only] A warning data value corresponding to the
                        key.
                    key:
                      description: >-
                        [Output Only] A key that provides more detail on the
                        warning being returned. For example, for warnings where
                        there are no results in a list request for a particular
                        zone, this key might be scope and the key value might be
                        the zone name. Other examples might be a key indicating
                        a deprecated resource and a suggested replacement, or a
                        warning about invalid network settings (for example, if
                        an instance attempts to perform IP forwarding but is not
                        enabled for IP forwarding).
                      type: string
                  type: object
                description: >-
                  [Output Only] Metadata about this warning in key: value
                  format. For example: "data": [ { "key": "scope", "value":
                  "zones/us-east1-d" } 
                type: array
              message:
                description: >-
                  [Output Only] A human-readable description of the warning
                  code.
                type: string
            type: object
          description: >-
            Output only. If warning messages are generated during processing of
            this resource, this field will be populated.
        intent:
          description: >-
            Output only. The intent of the resource: `PREVIEW`, `UPDATE`, or
            `CANCEL`.
          enumDescriptions:
            - >-
              The resource is scheduled to be created, or if it already exists,
              acquired.
            - The resource is scheduled to be deleted.
            - The resource is scheduled to be acquired.
            - The resource is scheduled to be updated via the UPDATE method.
            - The resource is scheduled to be abandoned.
            - The resource is scheduled to be created.
          type: string
          enum:
            - CREATE_OR_ACQUIRE
            - DELETE
            - ACQUIRE
            - UPDATE
            - ABANDON
            - CREATE
        error:
          type: object
          properties:
            errors:
              type: array
              items:
                properties:
                  code:
                    description: '[Output Only] The error type identifier for this error.'
                    type: string
                  message:
                    type: string
                    description: '[Output Only] An optional, human-readable error message.'
                  location:
                    type: string
                    description: >-
                      [Output Only] Indicates the field in the request that
                      caused the error. This property is optional.
                type: object
              description: >-
                [Output Only] The array of errors encountered while processing
                this operation.
          description: >-
            Output only. If errors are generated during update of the resource,
            this field will be populated.
        manifest:
          type: string
          description: >-
            Output only. URL of the manifest representing the update
            configuration of this resource.
    PollingOptions:
      properties:
        failCondition:
          type: string
          description: JsonPath expression that determines if the request failed.
        pollingLink:
          description: >-
            JsonPath expression that evaluates to string, it indicates where to
            poll.
          type: string
        targetLink:
          description: >-
            JsonPath expression, after polling is completed, indicates where to
            fetch the resource.
          type: string
        finishCondition:
          description: JsonPath expression that determines if the request is completed.
          type: string
        diagnostics:
          description: >-
            An array of diagnostics to be collected by Deployment Manager, these
            diagnostics will be displayed to the user.
          items:
            $ref: '#/components/schemas/Diagnostic'
          type: array
      id: PollingOptions
      type: object
    ResourcesListResponse:
      id: ResourcesListResponse
      description: >-
        A response containing a partial list of resources and a page token used
        to build the next request if the request has been truncated.
      type: object
      properties:
        resources:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
          description: Resources contained in this list response.
        nextPageToken:
          type: string
          description: A token used to continue a truncated list request.
    ServiceAccount:
      description: Service Account used as a credential.
      properties:
        email:
          description: >-
            The IAM service account email address like
            test@myproject.iam.gserviceaccount.com
          type: string
      type: object
      id: ServiceAccount
    CollectionOverride:
      properties:
        options:
          $ref: '#/components/schemas/Options'
          description: The options to apply to this resource-level override
        collection:
          type: string
          description: The collection that identifies this resource within its service.
      description: >-
        CollectionOverride allows resource handling overrides for specific
        resources within a BaseType
      id: CollectionOverride
      type: object
    TemplateContents:
      type: object
      description: Files that make up the template contents of a template type.
      id: TemplateContents
      properties:
        template:
          description: The contents of the main template file.
          type: string
        schema:
          type: string
          description: The contents of the template schema.
        interpreter:
          enum:
            - UNKNOWN_INTERPRETER
            - PYTHON
            - JINJA
          description: Which interpreter (python or jinja) should be used during expansion.
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
        imports:
          items:
            $ref: '#/components/schemas/ImportFile'
          description: Import files referenced by the main template.
          type: array
        mainTemplate:
          description: The filename of the mainTemplate
          type: string
    TypeProvider:
      properties:
        options:
          $ref: '#/components/schemas/Options'
          description: Options to apply when handling any resources in this service.
        selfLink:
          description: Output only. Self link for the type provider.
          type: string
        customCertificateAuthorityRoots:
          type: array
          description: >-
            List of up to 2 custom certificate authority roots to use for TLS
            authentication when making calls on behalf of this type provider. If
            set, TLS authentication will exclusively use these roots instead of
            relying on publicly trusted certificate authorities when validating
            TLS certificate authenticity. The certificates must be in
            base64-encoded PEM format. The maximum size of each certificate must
            not exceed 10KB.
          items:
            type: string
        name:
          type: string
          description: >-
            Name of the resource; provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
        labels:
          type: array
          description: >-
            Map of One Platform labels; provided by the client when the resource
            is created or updated. Specifically: Label keys must be between 1
            and 63 characters long and must conform to the following regular
            expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be
            between 0 and 63 characters long and must conform to the regular
            expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`
          items:
            $ref: '#/components/schemas/TypeProviderLabelEntry'
        credential:
          $ref: '#/components/schemas/Credential'
          description: Credential used when interacting with this type.
        operation:
          description: >-
            Output only. The Operation that most recently ran, or is currently
            running, on this type provider.
          $ref: '#/components/schemas/Operation'
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        id:
          format: uint64
          description: >-
            Output only. Unique identifier for the resource defined by the
            server.
          type: string
        descriptorUrl:
          description: Descriptor Url for the this type provider.
          type: string
        collectionOverrides:
          type: array
          description: Allows resource handling overrides for specific collections
          items:
            $ref: '#/components/schemas/CollectionOverride'
        description:
          type: string
          description: >-
            An optional textual description of the resource; provided by the
            client when the resource is created.
      type: object
      id: TypeProvider
      description: A type provider that describes a service-backed Type.
    Manifest:
      id: Manifest
      type: object
      properties:
        insertTime:
          type: string
          description: Output only. Creation timestamp in RFC3339 text format.
        manifestSizeBytes:
          format: int64
          type: string
          description: Output only. The computed size of the fully expanded manifest.
        expandedConfig:
          description: >-
            Output only. The fully-expanded configuration file, including any
            templates and references.
          type: string
        name:
          type: string
          description: Output only. The name of the manifest.
        manifestSizeLimitBytes:
          format: int64
          type: string
          description: Output only. The size limit for expanded manifests in the project.
        selfLink:
          type: string
          description: Output only. Self link for the manifest.
        layout:
          type: string
          description: Output only. The YAML layout for this manifest.
        imports:
          items:
            $ref: '#/components/schemas/ImportFile'
          description: Output only. The imported files for this manifest.
          type: array
        id:
          format: uint64
          type: string
        config:
          $ref: '#/components/schemas/ConfigFile'
          description: Output only. The YAML configuration for this manifest.
    TypeProvidersListResponse:
      id: TypeProvidersListResponse
      type: object
      properties:
        typeProviders:
          type: array
          description: >-
            Output only. A list of resource type providers supported by
            Deployment Manager.
          items:
            $ref: '#/components/schemas/TypeProvider'
        nextPageToken:
          description: A token used to continue a truncated list request.
          type: string
      description: >-
        A response that returns all Type Providers supported by Deployment
        Manager
    TypeInfo:
      id: TypeInfo
      type: object
      properties:
        kind:
          description: >-
            Output only. Type of the output. Always `deploymentManager#TypeInfo`
            for TypeInfo.
          type: string
        documentationLink:
          type: string
          description: >-
            For swagger 2.0 externalDocs field will be used. For swagger 1.2
            this field will be empty.
        selfLink:
          description: Output only. Self link for the type provider.
          type: string
        title:
          description: The title on the API descriptor URL provided.
          type: string
        name:
          description: The base type or composite type name.
          type: string
        schema:
          description: >-
            For base types with a collection, we return a schema and
            documentation link For template types, we return only a schema
          $ref: '#/components/schemas/TypeInfoSchemaInfo'
        description:
          description: The description of the type.
          type: string
      description: >-
        Type Information. Contains detailed information about a composite type,
        base type, or base type with specific collection.
    ResourceAccessControl:
      properties:
        gcpIamPolicy:
          type: string
          description: The GCP IAM Policy to set on the resource.
      id: ResourceAccessControl
      description: The access controls set on the resource.
      type: object
    Expr:
      type: object
      properties:
        title:
          type: string
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          type: string
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
    TypeProvidersListTypesResponse:
      id: TypeProvidersListTypesResponse
      properties:
        types:
          type: array
          description: Output only. A list of resource type info.
          items:
            $ref: '#/components/schemas/TypeInfo'
        nextPageToken:
          description: A token used to continue a truncated list request.
          type: string
      type: object
    TypeInfoSchemaInfo:
      id: TypeInfoSchemaInfo
      properties:
        output:
          type: string
          description: >-
            The properties that this composite type or base type collection
            exposes as output, these properties can be used for references,
            represented as json blob, format is: JSON Schema Draft V4
        input:
          type: string
          description: >-
            The properties that this composite type or base type collection
            accept as input, represented as a json blob, format is: JSON Schema
            Draft V4
      type: object
    Policy:
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
        user:mike@example.com - group:admins@example.com - domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For
        a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      id: Policy
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        etag:
          type: string
          format: byte
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
        auditConfigs:
          items:
            $ref: '#/components/schemas/AuditConfig'
          type: array
          description: Specifies cloud audit logging configuration for this policy.
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
    TargetConfiguration:
      properties:
        imports:
          items:
            $ref: '#/components/schemas/ImportFile'
          description: >-
            Specifies any files to import for this configuration. This can be
            used to import templates or other files. For example, you might
            import a text file in order to use the file in a template.
          type: array
        config:
          $ref: '#/components/schemas/ConfigFile'
          description: The configuration to use for this deployment.
      id: TargetConfiguration
      type: object
    AuditLogConfig:
      id: AuditLogConfig
      properties:
        exemptedMembers:
          type: array
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          items:
            type: string
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          type: string
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
    ValidationOptions:
      type: object
      description: Options for how to validate and process properties on a resource.
      id: ValidationOptions
      properties:
        undeclaredProperties:
          enumDescriptions:
            - ''
            - Always include even if not present on discovery doc.
            - Always ignore if not present on discovery doc.
            - Include on request, but emit a warning.
            - Ignore properties, but emit a warning.
            - Always fail if undeclared properties are present.
          type: string
          description: Specify what to do with extra properties when executing a request.
          enum:
            - UNKNOWN
            - INCLUDE
            - IGNORE
            - INCLUDE_WITH_WARNINGS
            - IGNORE_WITH_WARNINGS
            - FAIL
        schemaValidation:
          description: >-
            Customize how deployment manager will validate the resource against
            schema errors.
          enum:
            - UNKNOWN
            - IGNORE
            - IGNORE_WITH_WARNINGS
            - FAIL
          type: string
          enumDescriptions:
            - ''
            - Ignore schema failures.
            - Ignore schema failures but display them as warnings.
            - >-
              Fail the resource if the schema is not valid, this is the default
              behavior.
    Credential:
      id: Credential
      properties:
        serviceAccount:
          $ref: '#/components/schemas/ServiceAccount'
          description: Service Account Credential, only used by Deployment.
        basicAuth:
          description: Basic Auth Credential, only used by TypeProvider.
          $ref: '#/components/schemas/BasicAuth'
        useProjectDefault:
          description: >-
            Specify to use the project default credential, only supported by
            Deployment.
          type: boolean
      type: object
      description: >-
        The credential used by Deployment Manager and TypeProvider. Only one of
        the options is permitted.
    AsyncOptions:
      properties:
        pollingOptions:
          $ref: '#/components/schemas/PollingOptions'
          description: >-
            Deployment manager will poll instances for this API resource setting
            a RUNNING state, and blocking until polling conditions tell whether
            the resource is completed or failed.
        methodMatch:
          type: string
          description: Method regex where this policy will apply.
      id: AsyncOptions
      description: Async options that determine when a resource should finish.
      type: object
    BaseType:
      type: object
      description: BaseType that describes a service-backed Type.
      properties:
        descriptorUrl:
          type: string
          description: Descriptor Url for the this type.
        options:
          $ref: '#/components/schemas/Options'
          description: Options to apply when handling any resources in this service.
        credential:
          $ref: '#/components/schemas/Credential'
          description: Credential used when interacting with this type.
        collectionOverrides:
          type: array
          items:
            $ref: '#/components/schemas/CollectionOverride'
          description: Allows resource handling overrides for specific collections
      id: BaseType
    Diagnostic:
      id: Diagnostic
      properties:
        field:
          type: string
          description: >-
            JsonPath expression on the resource that if non empty, indicates
            that this field needs to be extracted as a diagnostic.
        level:
          type: string
          description: Level to record this diagnostic.
          enumDescriptions:
            - ''
            - >-
              If level is informational, it only gets displayed as part of the
              resource.
            - If level is warning, will end up in the resource as a warning.
            - >-
              If level is error, it will indicate an error occurred after
              finishCondition is set, and this field will populate resource
              errors and operation errors.
          enum:
            - UNKNOWN
            - INFORMATION
            - WARNING
            - ERROR
      type: object
    ManifestsListResponse:
      type: object
      properties:
        nextPageToken:
          description: Output only. A token used to continue a truncated list request.
          type: string
        manifests:
          items:
            $ref: '#/components/schemas/Manifest'
          type: array
          description: Output only. Manifests contained in this list response.
      id: ManifestsListResponse
      description: >-
        A response containing a partial list of manifests and a page token used
        to build the next request if the request has been truncated.
    GlobalSetPolicyRequest:
      id: GlobalSetPolicyRequest
      properties:
        etag:
          format: byte
          description: >-
            Flatten Policy to create a backward compatible wire-format.
            Deprecated. Use 'policy' to specify the etag.
          type: string
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/Binding'
          description: >-
            Flatten Policy to create a backward compatible wire-format.
            Deprecated. Use 'policy' to specify bindings.
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the 'resource'. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            in general a valid policy but certain services (like Projects) might
            reject them.
          $ref: '#/components/schemas/Policy'
      type: object
    CompositeTypeLabelEntry:
      id: CompositeTypeLabelEntry
      description: Label object for CompositeTypes
      properties:
        key:
          description: Key of the label
          type: string
        value:
          description: Value of the label
          type: string
      type: object
    TestPermissionsResponse:
      properties:
        permissions:
          items:
            type: string
          type: array
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
      id: TestPermissionsResponse
      type: object
    Type:
      id: Type
      properties:
        description:
          type: string
          description: >-
            An optional textual description of the resource; provided by the
            client when the resource is created.
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        labels:
          type: array
          description: >-
            Map of One Platform labels; provided by the client when the resource
            is created or updated. Specifically: Label keys must be between 1
            and 63 characters long and must conform to the following regular
            expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be
            between 0 and 63 characters long and must conform to the regular
            expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
          items:
            $ref: '#/components/schemas/TypeLabelEntry'
        base:
          description: Base Type (configurable service) that backs this Type.
          $ref: '#/components/schemas/BaseType'
        operation:
          $ref: '#/components/schemas/Operation'
          description: >-
            Output only. The Operation that most recently ran, or is currently
            running, on this type.
        selfLink:
          description: Output only. Server defined URL for the resource.
          type: string
        id:
          type: string
          format: uint64
        name:
          description: Name of the type.
          type: string
      type: object
      description: A resource type supported by Deployment Manager.
    DeploymentLabelEntry:
      id: DeploymentLabelEntry
      properties:
        key:
          type: string
          description: Key of the label
        value:
          description: Value of the label
          type: string
      type: object
      description: Label object for Deployments
    AuditConfig:
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          type: array
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      id: AuditConfig
      type: object
    Deployment:
      id: Deployment
      type: object
      properties:
        manifest:
          description: >-
            Output only. URL of the manifest representing the last manifest that
            was successfully deployed. If no manifest has been successfully
            deployed, this field will be absent.
          type: string
        target:
          description: >-
            [Input Only] The parameters that define your deployment, including
            the deployment configuration and relevant templates.
          $ref: '#/components/schemas/TargetConfiguration'
        name:
          description: >-
            Name of the resource; provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          type: string
        selfLink:
          description: Output only. Server defined URL for the resource.
          type: string
        update:
          description: >-
            Output only. If Deployment Manager is currently updating or
            previewing an update to this deployment, the updated configuration
            appears here.
          $ref: '#/components/schemas/DeploymentUpdate'
        operation:
          description: >-
            Output only. The Operation that most recently ran, or is currently
            running, on this deployment.
          $ref: '#/components/schemas/Operation'
        labels:
          description: >-
            Map of One Platform labels; provided by the client when the resource
            is created or updated. Specifically: Label keys must be between 1
            and 63 characters long and must conform to the following regular
            expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be
            between 0 and 63 characters long and must conform to the regular
            expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
          type: array
          items:
            $ref: '#/components/schemas/DeploymentLabelEntry'
        fingerprint:
          type: string
          format: byte
          description: >-
            Provides a fingerprint to use in requests to modify a deployment,
            such as `update()`, `stop()`, and `cancelPreview()` requests. A
            fingerprint is a randomly generated value that must be provided with
            `update()`, `stop()`, and `cancelPreview()` requests to perform
            optimistic locking. This ensures optimistic concurrency so that only
            one request happens at a time. The fingerprint is initially
            generated by Deployment Manager and changes after every request to
            modify data. To get the latest fingerprint value, perform a `get()`
            request to a deployment.
        insertTime:
          type: string
          description: Output only. Creation timestamp in RFC3339 text format.
        description:
          description: An optional user-provided description of the deployment.
          type: string
        updateTime:
          type: string
          description: Output only. Update timestamp in RFC3339 text format.
        id:
          format: uint64
          type: string
    CompositeTypesListResponse:
      description: >-
        A response that returns all Composite Types supported by Deployment
        Manager
      type: object
      properties:
        compositeTypes:
          type: array
          items:
            $ref: '#/components/schemas/CompositeType'
          description: >-
            Output only. A list of resource composite types supported by
            Deployment Manager.
        nextPageToken:
          type: string
          description: A token used to continue a truncated list request.
      id: CompositeTypesListResponse
    DeploymentUpdateLabelEntry:
      description: Label object for DeploymentUpdate
      id: DeploymentUpdateLabelEntry
      type: object
      properties:
        key:
          type: string
          description: Key of the label
        value:
          description: Value of the label
          type: string
    OperationsListResponse:
      properties:
        operations:
          description: Output only. Operations contained in this list response.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
        nextPageToken:
          description: Output only. A token used to continue a truncated list request.
          type: string
      id: OperationsListResponse
      description: >-
        A response containing a partial list of operations and a page token used
        to build the next request if the request has been truncated.
      type: object
    TypeLabelEntry:
      type: object
      id: TypeLabelEntry
      properties:
        key:
          description: Key of the label
          type: string
        value:
          description: Value of the label
          type: string
      description: Label object for Types
    Resource:
      id: Resource
      properties:
        type:
          type: string
          description: >-
            Output only. The type of the resource, for example
            `compute.v1.instance`, or `cloudfunctions.v1beta1.function`.
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        updateTime:
          description: Output only. Update timestamp in RFC3339 text format.
          type: string
        name:
          type: string
          description: >-
            Output only. The name of the resource as it appears in the YAML
            config.
        id:
          type: string
          format: uint64
        warnings:
          type: array
          description: >-
            Output only. If warning messages are generated during processing of
            this resource, this field will be populated.
          items:
            type: object
            properties:
              code:
                type: string
                enumDescriptions:
                  - A link to a deprecated resource was created.
                  - No results are present on a particular list page.
                  - A given scope cannot be reached.
                  - >-
                    The route's nextHopIp address is not assigned to an instance
                    on the network.
                  - >-
                    The route's nextHopInstance URL refers to an instance that
                    does not exist.
                  - >-
                    The route's nextHopInstance URL refers to an instance that
                    is not on the same network as the route.
                  - The route's next hop instance cannot ip forward.
                  - >-
                    The route's next hop instance does not have a status of
                    RUNNING.
                  - >-
                    The operation involved use of an injected kernel, which is
                    deprecated.
                  - >-
                    The user attempted to use a resource that requires a TOS
                    they have not accepted.
                  - The user created a boot disk that is larger than image size.
                  - >-
                    One or more of the resources set to auto-delete could not be
                    deleted because they were in use.
                  - >-
                    Instance template used in instance group manager is valid as
                    such, but its application does not make a lot of sense,
                    because it allows only single instance in instance group.
                  - >-
                    Error which is not critical. We decided to continue the
                    process despite the mentioned error.
                  - >-
                    Warning about failed cleanup of transient changes made by a
                    failed operation.
                  - >-
                    Warning that value of a field has been overridden.
                    Deprecated unused field.
                  - Warning that a resource is in use.
                  - A resource depends on a missing type
                  - Warning that is present in an external api call
                  - When a resource schema validation is ignored.
                  - When undeclared properties in the schema are present
                  - >-
                    When deploying and at least one of the resources has a type
                    marked as experimental
                  - >-
                    When deploying and at least one of the resources has a type
                    marked as deprecated
                  - >-
                    Success is reported, but some results may be missing due to
                    errors
                  - >-
                    When deploying a deployment with a exceedingly large number
                    of resources
                  - >-
                    The route's nextHopInstance URL refers to an instance that
                    does not have an ipv6 interface on the same network as the
                    route.
                  - >-
                    A WEIGHTED_MAGLEV backend service is associated with a
                    health check that is not of type HTTP/HTTPS/HTTP2.
                  - >-
                    Resource can't be retrieved due to list overhead quota
                    exceed which captures the amount of resources filtered out
                    by user-defined list filter.
                description: >-
                  [Output Only] A warning code, if applicable. For example,
                  Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                  results in the response.
                enum:
                  - DEPRECATED_RESOURCE_USED
                  - NO_RESULTS_ON_PAGE
                  - UNREACHABLE
                  - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                  - NEXT_HOP_INSTANCE_NOT_FOUND
                  - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                  - NEXT_HOP_CANNOT_IP_FORWARD
                  - NEXT_HOP_NOT_RUNNING
                  - INJECTED_KERNELS_DEPRECATED
                  - REQUIRED_TOS_AGREEMENT
                  - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                  - RESOURCE_NOT_DELETED
                  - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                  - NOT_CRITICAL_ERROR
                  - CLEANUP_FAILED
                  - FIELD_VALUE_OVERRIDEN
                  - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                  - MISSING_TYPE_DEPENDENCY
                  - EXTERNAL_API_WARNING
                  - SCHEMA_VALIDATION_IGNORED
                  - UNDECLARED_PROPERTIES
                  - EXPERIMENTAL_TYPE_USED
                  - DEPRECATED_TYPE_USED
                  - PARTIAL_SUCCESS
                  - LARGE_DEPLOYMENT_WARNING
                  - NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE
                  - INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB
                  - LIST_OVERHEAD_QUOTA_EXCEED
              message:
                type: string
                description: >-
                  [Output Only] A human-readable description of the warning
                  code.
              data:
                type: array
                items:
                  properties:
                    key:
                      description: >-
                        [Output Only] A key that provides more detail on the
                        warning being returned. For example, for warnings where
                        there are no results in a list request for a particular
                        zone, this key might be scope and the key value might be
                        the zone name. Other examples might be a key indicating
                        a deprecated resource and a suggested replacement, or a
                        warning about invalid network settings (for example, if
                        an instance attempts to perform IP forwarding but is not
                        enabled for IP forwarding).
                      type: string
                    value:
                      type: string
                      description: >-
                        [Output Only] A warning data value corresponding to the
                        key.
                  type: object
                description: >-
                  [Output Only] Metadata about this warning in key: value
                  format. For example: "data": [ { "key": "scope", "value":
                  "zones/us-east1-d" } 
        manifest:
          description: >-
            Output only. URL of the manifest representing the current
            configuration of this resource.
          type: string
        url:
          description: Output only. The URL of the actual resource.
          type: string
        accessControl:
          description: The Access Control Policy set on this resource.
          $ref: '#/components/schemas/ResourceAccessControl'
        properties:
          description: >-
            Output only. The current properties of the resource before any
            references have been filled in. Returned as serialized YAML.
          type: string
        update:
          $ref: '#/components/schemas/ResourceUpdate'
          description: >-
            Output only. If Deployment Manager is currently updating or
            previewing an update to this resource, the updated configuration
            appears here.
        finalProperties:
          description: >-
            Output only. The evaluated properties of the resource with
            references expanded. Returned as serialized YAML.
          type: string
      type: object
    Binding:
      properties:
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding.
          items:
            type: string
          type: array
      type: object
      id: Binding
      description: Associates `members`, or principals, with a `role`.
    BasicAuth:
      id: BasicAuth
      type: object
      description: Basic Auth used as a credential.
      properties:
        user:
          type: string
        password:
          type: string
    Options:
      type: object
      id: Options
      description: Options allows customized resource handling by Deployment Manager.
      properties:
        validationOptions:
          $ref: '#/components/schemas/ValidationOptions'
          description: Options for how to validate and process properties on a resource.
        virtualProperties:
          description: >-
            Additional properties block described as a jsonSchema, these
            properties will never be part of the json payload, but they can be
            consumed by InputMappings, this must be a valid json schema
            draft-04. The properties specified here will be decouple in a
            different section. This schema will be merged to the schema
            validation, and properties here will be extracted From the payload
            and consumed explicitly by InputMappings. ex: field1: type: string
            field2: type: number
          type: string
        inputMappings:
          description: The mappings that apply for requests.
          items:
            $ref: '#/components/schemas/InputMapping'
          type: array
        asyncOptions:
          type: array
          description: Options regarding how to thread async requests.
          items:
            $ref: '#/components/schemas/AsyncOptions'
    ConfigFile:
      properties:
        content:
          description: The contents of the file.
          type: string
      id: ConfigFile
      type: object
    TypesListResponse:
      id: TypesListResponse
      description: A response that returns all Types supported by Deployment Manager
      properties:
        types:
          description: >-
            Output only. A list of resource types supported by Deployment
            Manager.
          type: array
          items:
            $ref: '#/components/schemas/Type'
        nextPageToken:
          type: string
          description: A token used to continue a truncated list request.
      type: object
    TestPermissionsRequest:
      properties:
        permissions:
          type: array
          description: >-
            The set of permissions to check for the 'resource'. Permissions with
            wildcards (such as '*' or 'storage.*') are not allowed.
          items:
            type: string
      id: TestPermissionsRequest
      type: object
    CompositeType:
      description: Holds the composite type.
      properties:
        labels:
          items:
            $ref: '#/components/schemas/CompositeTypeLabelEntry'
          description: >-
            Map of labels; provided by the client when the resource is created
            or updated. Specifically: Label keys must be between 1 and 63
            characters long and must conform to the following regular
            expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be
            between 0 and 63 characters long and must conform to the regular
            expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
          type: array
        description:
          description: >-
            An optional textual description of the resource; provided by the
            client when the resource is created.
          type: string
        id:
          format: uint64
          type: string
        status:
          type: string
          enum:
            - UNKNOWN_STATUS
            - DEPRECATED
            - EXPERIMENTAL
            - SUPPORTED
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        selfLink:
          description: Output only. Server defined URL for the resource.
          type: string
        operation:
          description: >-
            Output only. The Operation that most recently ran, or is currently
            running, on this composite type.
          $ref: '#/components/schemas/Operation'
        name:
          description: >-
            Name of the composite type, must follow the expression:
            `[a-z]([-a-z0-9_.]{0,61}[a-z0-9])?`.
          type: string
        templateContents:
          description: Files for the template type.
          $ref: '#/components/schemas/TemplateContents'
      type: object
      id: CompositeType
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform.read-only: >-
              View your data across Google Cloud services and see the email
              address of your Google Account
            https://www.googleapis.com/auth/ndev.cloudman: >-
              View and manage your Google Cloud Platform management resources
              and deployment status information
            https://www.googleapis.com/auth/ndev.cloudman.readonly: >-
              View your Google Cloud Platform management resources and
              deployment status information
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /deploymentmanager/v2beta/projects/{project}/global/compositeTypes/{compositeType}:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
    get:
      description: Gets information about a specific composite type.
      operationId: deploymentmanager.compositeTypes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeType'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: compositeType
          required: true
          schema:
            type: string
      x-stackQL-resource: composite_types
      x-stackQL-verb: select
    patch:
      description: Patches a composite type.
      operationId: deploymentmanager.compositeTypes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: compositeType
          required: true
          schema:
            type: string
      x-stackQL-resource: composite_types
      x-stackQL-verb: exec
    delete:
      description: Deletes a composite type.
      operationId: deploymentmanager.compositeTypes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: compositeType
          required: true
          schema:
            type: string
      x-stackQL-resource: composite_types
      x-stackQL-verb: delete
    put:
      description: Updates a composite type.
      operationId: deploymentmanager.compositeTypes.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: compositeType
          required: true
          schema:
            type: string
      x-stackQL-resource: composite_types
      x-stackQL-verb: exec
  /deploymentmanager/v2beta/projects/{project}/global/compositeTypes:
    parameters: *ref_1
    post:
      description: Creates a composite type.
      operationId: deploymentmanager.compositeTypes.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeType'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
      x-stackQL-resource: composite_types
      x-stackQL-verb: insert
    get:
      description: Lists all composite types for Deployment Manager.
      operationId: deploymentmanager.compositeTypes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeTypesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: composite_types
      x-stackQL-verb: select
  /deploymentmanager/v2beta/projects/{project}/global/operations/{operation}:
    parameters: *ref_1
    get:
      description: Gets information about a specific operation.
      operationId: deploymentmanager.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: operation
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /deploymentmanager/v2beta/projects/{project}/global/operations:
    parameters: *ref_1
    get:
      description: Lists all operations for a project.
      operationId: deploymentmanager.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}:
    parameters: *ref_1
    patch:
      description: >-
        Patches a deployment and all of the resources described by the
        deployment manifest.
      operationId: deploymentmanager.deployments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: deployment
          required: true
          schema:
            type: string
        - in: query
          name: preview
          schema:
            type: boolean
        - in: query
          name: deletePolicy
          schema:
            type: string
        - in: query
          name: createPolicy
          schema:
            type: string
      x-stackQL-resource: deployments
      x-stackQL-verb: exec
    delete:
      description: Deletes a deployment and all of the resources in the deployment.
      operationId: deploymentmanager.deployments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: deployment
          required: true
          schema:
            type: string
        - in: query
          name: deletePolicy
          schema:
            type: string
      x-stackQL-resource: deployments
      x-stackQL-verb: delete
    get:
      description: Gets information about a specific deployment.
      operationId: deploymentmanager.deployments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: deployment
          required: true
          schema:
            type: string
      x-stackQL-resource: deployments
      x-stackQL-verb: select
    put:
      description: >-
        Updates a deployment and all of the resources described by the
        deployment manifest.
      operationId: deploymentmanager.deployments.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: deployment
          required: true
          schema:
            type: string
        - in: query
          name: createPolicy
          schema:
            type: string
        - in: query
          name: deletePolicy
          schema:
            type: string
        - in: query
          name: preview
          schema:
            type: boolean
      x-stackQL-resource: deployments
      x-stackQL-verb: exec
  /deploymentmanager/v2beta/projects/{project}/global/deployments:
    parameters: *ref_1
    get:
      description: Lists all deployments for a given project.
      operationId: deploymentmanager.deployments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: deployments
      x-stackQL-verb: select
    post:
      description: >-
        Creates a deployment and all of the resources described by the
        deployment manifest.
      operationId: deploymentmanager.deployments.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: preview
          schema:
            type: boolean
        - in: query
          name: createPolicy
          schema:
            type: string
      x-stackQL-resource: deployments
      x-stackQL-verb: insert
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{resource}/setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: deploymentmanager.deployments.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalSetPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: resource
          required: true
          schema:
            type: string
      x-stackQL-resource: deployments_iam_policies
      x-stackQL-verb: exec
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{resource}/testIamPermissions:
    parameters: *ref_1
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: deploymentmanager.deployments.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPermissionsResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: resource
          required: true
          schema:
            type: string
      x-stackQL-resource: deployments_iam_policies
      x-stackQL-verb: exec
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{resource}/getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. May be empty if no such
        policy or resource exists.
      operationId: deploymentmanager.deployments.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: resource
          required: true
          schema:
            type: string
        - in: query
          name: optionsRequestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: deployments_iam_policies
      x-stackQL-verb: select
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}/stop:
    parameters: *ref_1
    post:
      description: >-
        Stops an ongoing operation. This does not roll back any work that has
        already been completed, but prevents any new work from being started.
      operationId: deploymentmanager.deployments.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentsStopRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: deployment
          required: true
          schema:
            type: string
      x-stackQL-resource: deployments
      x-stackQL-verb: exec
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}/cancelPreview:
    parameters: *ref_1
    post:
      description: >-
        Cancels and removes the preview currently associated with the
        deployment.
      operationId: deploymentmanager.deployments.cancelPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentsCancelPreviewRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: deployment
          required: true
          schema:
            type: string
      x-stackQL-resource: deployments
      x-stackQL-verb: exec
  /deploymentmanager/v2beta/projects/{project}/global/types:
    parameters: *ref_1
    get:
      description: Lists all resource types for Deployment Manager.
      operationId: deploymentmanager.types.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: types
      x-stackQL-verb: select
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}/manifests:
    parameters: *ref_1
    get:
      description: Lists all manifests for a given deployment.
      operationId: deploymentmanager.manifests.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestsListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: deployment
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: manifests
      x-stackQL-verb: select
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}/manifests/{manifest}:
    parameters: *ref_1
    get:
      description: Gets information about a specific manifest.
      operationId: deploymentmanager.manifests.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manifest'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: deployment
          required: true
          schema:
            type: string
        - in: path
          name: manifest
          required: true
          schema:
            type: string
      x-stackQL-resource: manifests
      x-stackQL-verb: select
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}/resources:
    parameters: *ref_1
    get:
      description: Lists all resources in a given deployment.
      operationId: deploymentmanager.resources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: deployment
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: resources
      x-stackQL-verb: select
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}/resources/{resource}:
    parameters: *ref_1
    get:
      description: Gets information about a single resource.
      operationId: deploymentmanager.resources.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: deployment
          required: true
          schema:
            type: string
        - in: path
          name: resource
          required: true
          schema:
            type: string
      x-stackQL-resource: resources
      x-stackQL-verb: select
  /deploymentmanager/v2beta/projects/{project}/global/typeProviders/{typeProvider}:
    parameters: *ref_1
    get:
      description: Gets information about a specific type provider.
      operationId: deploymentmanager.typeProviders.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeProvider'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: typeProvider
          required: true
          schema:
            type: string
      x-stackQL-resource: type_providers
      x-stackQL-verb: select
    put:
      description: Updates a type provider.
      operationId: deploymentmanager.typeProviders.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeProvider'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: typeProvider
          required: true
          schema:
            type: string
      x-stackQL-resource: type_providers
      x-stackQL-verb: exec
    patch:
      description: Patches a type provider.
      operationId: deploymentmanager.typeProviders.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeProvider'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: typeProvider
          required: true
          schema:
            type: string
      x-stackQL-resource: type_providers
      x-stackQL-verb: exec
    delete:
      description: Deletes a type provider.
      operationId: deploymentmanager.typeProviders.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: typeProvider
          required: true
          schema:
            type: string
      x-stackQL-resource: type_providers
      x-stackQL-verb: delete
  /deploymentmanager/v2beta/projects/{project}/global/typeProviders:
    parameters: *ref_1
    get:
      description: Lists all resource type providers for Deployment Manager.
      operationId: deploymentmanager.typeProviders.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeProvidersListResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: type_providers
      x-stackQL-verb: select
    post:
      description: Creates a type provider.
      operationId: deploymentmanager.typeProviders.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeProvider'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
      x-stackQL-resource: type_providers
      x-stackQL-verb: insert
  /deploymentmanager/v2beta/projects/{project}/global/typeProviders/{typeProvider}/types/{type}:
    parameters: *ref_1
    get:
      description: Gets a type info for a type provided by a TypeProvider.
      operationId: deploymentmanager.typeProviders.getType
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeInfo'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: typeProvider
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          schema:
            type: string
      x-stackQL-resource: type_providers__type
      x-stackQL-verb: select
  /deploymentmanager/v2beta/projects/{project}/global/typeProviders/{typeProvider}/types:
    parameters: *ref_1
    get:
      description: Lists all the type info for a TypeProvider.
      operationId: deploymentmanager.typeProviders.listTypes
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeProvidersListTypesResponse'
      parameters:
        - in: path
          name: project
          required: true
          schema:
            type: string
        - in: path
          name: typeProvider
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: type_providers__types
      x-stackQL-verb: select
