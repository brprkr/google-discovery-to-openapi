openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Bare Metal Solution API
  description: >-
    Provides ways to manage Bare Metal Solution hardware installed in a regional
    extension located near a Google Cloud data center.
  version: v2
  x-discovery-doc-revision: '20230612'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/bare-metal
servers:
  - url: https://baremetalsolution.googleapis.com
components:
  schemas:
    NfsShare:
      description: An NFS share.
      type: object
      properties:
        state:
          description: Output only. The state of the NFS share.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONED
            - CREATING
            - UPDATING
            - DELETING
          enumDescriptions:
            - The share is in an unknown state.
            - The share has been provisioned.
            - The NFS Share is being created.
            - The NFS Share is being updated.
            - The NFS Share has been requested to be deleted.
          type: string
          readOnly: true
        allowedClients:
          description: List of allowed access points.
          type: array
          items:
            $ref: '#/components/schemas/AllowedClient'
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        storageType:
          description: Immutable. The storage type of the underlying volume.
          enumDescriptions:
            - The storage type for this volume is unknown.
            - The storage type for this volume is SSD.
            - This storage type for this volume is HDD.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
          type: string
        requestedSizeGib:
          description: The requested size, in GiB.
          type: string
          format: int64
        nfsShareId:
          description: >-
            Output only. An identifier for the NFS share, generated by the
            backend. This field will be deprecated in the future, use `id`
            instead.
          readOnly: true
          type: string
        volume:
          description: >-
            Output only. The underlying volume of the share. Created
            automatically during provisioning.
          readOnly: true
          type: string
        id:
          type: string
          description: >-
            Output only. An identifier for the NFS share, generated by the
            backend. This is the same value as nfs_share_id and will replace it
            in the future.
          readOnly: true
        name:
          type: string
          description: Immutable. The name of the NFS share.
      id: NfsShare
    LogicalNetworkInterface:
      type: object
      description: Each logical network interface is effectively a network and IP pair.
      properties:
        network:
          type: string
          description: Name of the network
        id:
          description: An identifier for the `Network`, generated by the backend.
          type: string
        networkType:
          enumDescriptions:
            - Unspecified value.
            - Client network, a network peered to a Google Cloud VPC.
            - >-
              Private network, a network local to the Bare Metal Solution
              environment.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          description: Type of network.
        defaultGateway:
          description: >-
            Whether this interface is the default gateway for the instance. Only
            one interface can be the default gateway for the instance.
          type: boolean
        ipAddress:
          type: string
          description: IP address in the network
      id: LogicalNetworkInterface
    VRF:
      description: A network VRF.
      id: VRF
      type: object
      properties:
        vlanAttachments:
          description: The list of VLAN attachments for the VRF.
          type: array
          items:
            $ref: '#/components/schemas/VlanAttachment'
        qosPolicy:
          $ref: '#/components/schemas/QosPolicy'
          description: >-
            The QOS policy applied to this VRF. The value is only meaningful
            when all the vlan attachments have the same QoS. This field should
            not be used for new integrations, use vlan attachment level qos
            instead. The field is left for backward-compatibility.
        state:
          enumDescriptions:
            - The unspecified state.
            - The vrf is provisioning.
            - The vrf is provisioned.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - PROVISIONED
          description: The possible state of VRF.
        name:
          type: string
          description: The name of the VRF.
    ResetInstanceResponse:
      properties: {}
      type: object
      id: ResetInstanceResponse
      description: Response message from resetting a server.
    ResetInstanceRequest:
      id: ResetInstanceRequest
      description: Message requesting to reset a server.
      type: object
      properties: {}
    OSImage:
      id: OSImage
      properties:
        supportedNetworkTemplates:
          items:
            $ref: '#/components/schemas/ServerNetworkTemplate'
          type: array
          description: Network templates that can be used with this OS Image.
        applicableInstanceTypes:
          type: array
          items:
            type: string
          description: >-
            Instance types this image is applicable to. [Available
            types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
        code:
          description: OS Image code.
          type: string
        description:
          description: OS Image description.
          type: string
        name:
          type: string
          description: Output only. OS Image's unique name.
          readOnly: true
      description: Operation System image.
      type: object
    StopInstanceResponse:
      description: Response message from stopping a server.
      properties: {}
      type: object
      id: StopInstanceResponse
    VlanAttachment:
      type: object
      id: VlanAttachment
      description: VLAN attachment details.
      properties:
        peerIp:
          description: The peer IP of the attachment.
          type: string
        qosPolicy:
          $ref: '#/components/schemas/QosPolicy'
          description: >-
            The QOS policy applied to this VLAN attachment. This value should be
            preferred to using qos at vrf level.
        id:
          type: string
          description: Immutable. The identifier of the attachment within vrf.
        pairingKey:
          type: string
          description: Input only. Pairing key.
        peerVlanId:
          type: string
          description: The peer vlan ID of the attachment.
          format: int64
        routerIp:
          description: The router IP of the attachment.
          type: string
    StartInstanceResponse:
      description: Response message from starting a server.
      properties: {}
      type: object
      id: StartInstanceResponse
    SubmitProvisioningConfigResponse:
      id: SubmitProvisioningConfigResponse
      properties:
        provisioningConfig:
          description: The submitted provisioning config.
          $ref: '#/components/schemas/ProvisioningConfig'
      description: Response for SubmitProvisioningConfig.
      type: object
    ListVolumesResponse:
      description: Response message containing the list of storage volumes.
      id: ListVolumesResponse
      type: object
      properties:
        volumes:
          items:
            $ref: '#/components/schemas/Volume'
          description: The list of storage volumes.
          type: array
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
    SSHKey:
      type: object
      id: SSHKey
      description: >-
        An SSH key, used for authorizing with the interactive serial console
        feature.
      properties:
        publicKey:
          description: The public SSH key. This must be in OpenSSH .authorized_keys format.
          type: string
        name:
          readOnly: true
          type: string
          description: >-
            Output only. The name of this SSH key. Currently, the only valid
            value for the location is "global".
    Operation:
      type: object
      id: Operation
      properties:
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
    GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface:
      description: Logical interface.
      type: object
      id: GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface
      properties:
        required:
          description: If true, interface must have network connected.
          type: boolean
        name:
          type: string
          description: >-
            Interface name. This is not a globally unique identifier. Name is
            unique only inside the ServerNetworkTemplate. This is of syntax or
            and forms part of the network template name.
        type:
          type: string
          enumDescriptions:
            - Unspecified value.
            - Bond interface type.
            - NIC interface type.
          enum:
            - INTERFACE_TYPE_UNSPECIFIED
            - BOND
            - NIC
          description: Interface type.
    ProvisioningQuota:
      id: ProvisioningQuota
      type: object
      description: A provisioning quota for a given project.
      properties:
        gcpService:
          type: string
          description: The gcp service of the provisioning quota.
        serverCount:
          format: int64
          type: string
          description: Server count.
        name:
          readOnly: true
          description: Output only. The name of the provisioning quota.
          type: string
        assetType:
          type: string
          description: The asset type of this provisioning quota.
          enumDescriptions:
            - The unspecified type.
            - The server asset type.
            - The storage asset type.
            - The network asset type.
          enum:
            - ASSET_TYPE_UNSPECIFIED
            - ASSET_TYPE_SERVER
            - ASSET_TYPE_STORAGE
            - ASSET_TYPE_NETWORK
        availableCount:
          format: int32
          description: The available count of the provisioning quota.
          type: integer
        instanceQuota:
          description: Instance quota.
          $ref: '#/components/schemas/InstanceQuota'
        location:
          type: string
          description: The specific location of the provisioining quota.
        networkBandwidth:
          format: int64
          type: string
          description: Network bandwidth, Gbps
        storageGib:
          type: string
          description: Storage size (GB).
          format: int64
    ListInstancesResponse:
      type: object
      properties:
        instances:
          type: array
          items:
            $ref: '#/components/schemas/Instance'
          description: The list of servers.
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        nextPageToken:
          type: string
          description: A token identifying a page of results from the server.
      description: Response message for the list of servers.
      id: ListInstancesResponse
    ServerNetworkTemplate:
      id: ServerNetworkTemplate
      properties:
        name:
          type: string
          description: >-
            Output only. Template's unique name. The full resource name follows
            the pattern:
            `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}`
            Generally, the {server_network_template} follows the syntax of
            "bond" or "nic".
          readOnly: true
        applicableInstanceTypes:
          type: array
          description: Instance types this template is applicable to.
          items:
            type: string
        logicalInterfaces:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface
          description: Logical interfaces.
      type: object
      description: Network template.
    RestoreVolumeSnapshotRequest:
      properties: {}
      id: RestoreVolumeSnapshotRequest
      type: object
      description: Message for restoring a volume snapshot.
    ListProvisioningQuotasResponse:
      properties:
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        provisioningQuotas:
          description: The provisioning quotas registered in this project.
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningQuota'
      description: Response message for the list of provisioning quotas.
      type: object
      id: ListProvisioningQuotasResponse
    RenameInstanceRequest:
      description: Message requesting rename of a server.
      type: object
      id: RenameInstanceRequest
      properties:
        newInstanceId:
          type: string
          description: Required. The new `id` of the instance.
    NetworkAddressReservation:
      properties:
        startAddress:
          type: string
          description: >-
            The first address of this reservation block. Must be specified as a
            single IPv4 address, e.g. 10.1.2.2.
        note:
          description: A note about this reservation, intended for human consumption.
          type: string
        endAddress:
          description: >-
            The last address of this reservation block, inclusive. I.e., for
            cases when reservations are only single addresses, end_address and
            start_address will be the same. Must be specified as a single IPv4
            address, e.g. 10.1.2.2.
          type: string
      description: A reservation of one or more addresses in a network.
      id: NetworkAddressReservation
      type: object
    VolumeSnapshot:
      description: A snapshot of a volume. Only boot volumes can have snapshots.
      type: object
      id: VolumeSnapshot
      properties:
        name:
          type: string
          description: The name of the snapshot.
        id:
          readOnly: true
          description: >-
            Output only. An identifier for the snapshot, generated by the
            backend.
          type: string
        storageVolume:
          description: Output only. The name of the volume which this snapshot belongs to.
          readOnly: true
          type: string
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The creation time of the snapshot.
        description:
          type: string
          description: The description of the snapshot.
        type:
          readOnly: true
          description: >-
            Output only. The type of the snapshot which indicates whether it was
            scheduled or manual/ad-hoc.
          type: string
          enum:
            - SNAPSHOT_TYPE_UNSPECIFIED
            - AD_HOC
            - SCHEDULED
          enumDescriptions:
            - Type is not specified.
            - Snapshot was taken manually by user.
            - Snapshot was taken automatically as a part of a snapshot schedule.
    Network:
      description: A Network.
      id: Network
      type: object
      properties:
        id:
          type: string
          description: An identifier for the `Network`, generated by the backend.
        mountPoints:
          description: Input only. List of mount points to attach the network to.
          type: array
          items:
            $ref: '#/components/schemas/NetworkMountPoint'
        state:
          type: string
          enumDescriptions:
            - The Network is in an unknown state.
            - The Network is provisioning.
            - The Network has been provisioned.
            - The Network is being deprovisioned.
            - The Network is being updated.
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - PROVISIONED
            - DEPROVISIONING
            - UPDATING
          description: The Network state.
        vlanId:
          description: The vlan id of the Network.
          type: string
        vrf:
          $ref: '#/components/schemas/VRF'
          description: The vrf for the Network.
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        reservations:
          items:
            $ref: '#/components/schemas/NetworkAddressReservation'
          type: array
          description: >-
            List of IP address reservations in this network. When updating this
            field, an error will be generated if a reservation conflicts with an
            IP address already allocated to a physical server.
        servicesCidr:
          description: IP range for reserved for services (e.g. NFS).
          type: string
        cidr:
          description: The cidr of the Network.
          type: string
        pod:
          description: Output only. Pod name.
          readOnly: true
          type: string
        ipAddress:
          description: IP address configured.
          type: string
        gatewayIp:
          type: string
          description: Output only. Gateway ip address.
          readOnly: true
        type:
          type: string
          enumDescriptions:
            - Unspecified value.
            - Client network, a network peered to a Google Cloud VPC.
            - >-
              Private network, a network local to the Bare Metal Solution
              environment.
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          description: The type of this network.
        jumboFramesEnabled:
          description: Whether network uses standard frames or jumbo ones.
          type: boolean
        macAddress:
          description: List of physical interfaces.
          type: array
          items:
            type: string
        name:
          readOnly: true
          description: >-
            Output only. The resource name of this `Network`. Resource names are
            schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. Format:
            `projects/{project}/locations/{location}/networks/{network}`
          type: string
    ListLunsResponse:
      type: object
      properties:
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        luns:
          description: The list of luns.
          items:
            $ref: '#/components/schemas/Lun'
          type: array
      description: Response message containing the list of storage volume luns.
      id: ListLunsResponse
    LunRange:
      id: LunRange
      description: A LUN(Logical Unit Number) range.
      type: object
      properties:
        sizeGb:
          type: integer
          description: The requested size of each LUN, in GB.
          format: int32
        quantity:
          format: int32
          description: Number of LUNs to create.
          type: integer
    ResizeVolumeRequest:
      id: ResizeVolumeRequest
      properties:
        sizeGib:
          type: string
          description: New Volume size, in GiB.
          format: int64
      description: Request for emergency resize Volume.
      type: object
    ListVolumeSnapshotsResponse:
      description: Response message containing the list of volume snapshots.
      properties:
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        volumeSnapshots:
          items:
            $ref: '#/components/schemas/VolumeSnapshot'
          description: The list of snapshots.
          type: array
      type: object
      id: ListVolumeSnapshotsResponse
    Volume:
      id: Volume
      properties:
        requestedSizeGib:
          description: The requested size of this storage volume, in GiB.
          format: int64
          type: string
        snapshotReservationDetail:
          $ref: '#/components/schemas/SnapshotReservationDetail'
          description: >-
            Details about snapshot space reservation and usage on the storage
            volume.
        pod:
          type: string
          description: Immutable. Pod name.
        storageAggregatePool:
          description: >-
            Input only. Name of the storage aggregate pool to allocate the
            volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED
            volumes.
          type: string
        expireTime:
          description: >-
            Output only. Time after which volume will be fully deleted. It is
            filled only for volumes in COOLOFF state.
          readOnly: true
          type: string
          format: google-datetime
        protocol:
          readOnly: true
          enum:
            - PROTOCOL_UNSPECIFIED
            - FIBRE_CHANNEL
            - NFS
          enumDescriptions:
            - Value is not specified.
            - Fibre Channel protocol.
            - >-
              NFS protocol means Volume is a NFS Share volume. Such volumes
              cannot be manipulated via Volumes API.
          type: string
          description: Output only. Storage protocol for the Volume.
        attached:
          type: boolean
          description: >-
            Output only. Is the Volume attached at at least one instance. This
            field is a lightweight counterpart of `instances` field. It is
            filled in List responses as well.
          readOnly: true
        workloadProfile:
          enum:
            - WORKLOAD_PROFILE_UNSPECIFIED
            - GENERIC
            - HANA
          enumDescriptions:
            - The workload profile is in an unknown state.
            - The workload profile is generic.
            - The workload profile is hana.
          description: The workload profile for the volume.
          type: string
        originallyRequestedSizeGib:
          format: int64
          description: Originally requested size, in GiB.
          type: string
        name:
          readOnly: true
          type: string
          description: >-
            Output only. The resource name of this `Volume`. Resource names are
            schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. Format:
            `projects/{project}/locations/{location}/volumes/{volume}`
        currentSizeGib:
          type: string
          format: int64
          description: >-
            The current size of this storage volume, in GiB, including space
            reserved for snapshots. This size might be different than the
            requested size if the storage volume has been configured with auto
            grow or auto shrink.
        snapshotAutoDeleteBehavior:
          type: string
          enum:
            - SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED
            - DISABLED
            - OLDEST_FIRST
            - NEWEST_FIRST
          description: The behavior to use when snapshot reserved space is full.
          enumDescriptions:
            - The unspecified behavior.
            - >-
              Don't delete any snapshots. This disables new snapshot creation,
              as long as the snapshot reserved space is full.
            - Delete the oldest snapshots first.
            - Delete the newest snapshots first.
        notes:
          description: >-
            Input only. User-specified notes for new Volume. Used to provision
            Volumes that require manual intervention.
          type: string
        performanceTier:
          enumDescriptions:
            - Value is not specified.
            - Regular volumes, shared aggregates.
            - Assigned aggregates.
            - High throughput aggregates.
          description: Immutable. Performance tier of the Volume. Default is SHARED.
          enum:
            - VOLUME_PERFORMANCE_TIER_UNSPECIFIED
            - VOLUME_PERFORMANCE_TIER_SHARED
            - VOLUME_PERFORMANCE_TIER_ASSIGNED
            - VOLUME_PERFORMANCE_TIER_HT
          type: string
        id:
          type: string
          description: An identifier for the `Volume`, generated by the backend.
        remainingSpaceGib:
          description: >-
            The space remaining in the storage volume for new LUNs, in GiB,
            excluding space reserved for snapshots.
          type: string
          format: int64
        snapshotSchedulePolicy:
          type: string
          description: >-
            The name of the snapshot schedule policy in use for this volume, if
            any.
        emergencySizeGib:
          type: string
          description: >-
            Additional emergency size that was requested for this Volume, in
            GiB. current_size_gib includes this value.
          format: int64
        maxSizeGib:
          description: Maximum size volume can be expanded to in case of evergency, in GiB.
          format: int64
          type: string
        state:
          description: The state of this storage volume.
          enumDescriptions:
            - The storage volume is in an unknown state.
            - The storage volume is being created.
            - The storage volume is ready for use.
            - The storage volume has been requested to be deleted.
            - The storage volume is being updated.
            - >-
              The storage volume is in cool off state. It will be deleted after
              `expire_time`.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
            - COOL_OFF
        autoGrownSizeGib:
          description: >-
            The size, in GiB, that this storage volume has expanded as a result
            of an auto grow policy. In the absence of auto-grow, the value is 0.
          format: int64
          type: string
        bootVolume:
          description: >-
            Output only. Whether this volume is a boot volume. A boot volume is
            one which contains a boot LUN.
          readOnly: true
          type: boolean
        labels:
          description: Labels as key value pairs.
          additionalProperties:
            type: string
          type: object
        snapshotEnabled:
          description: Whether snapshots are enabled.
          type: boolean
        storageType:
          type: string
          enumDescriptions:
            - The storage type for this volume is unknown.
            - The storage type for this volume is SSD.
            - This storage type for this volume is HDD.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
          description: The storage type for this volume.
        instances:
          items:
            type: string
          description: >-
            Output only. Instances this Volume is attached to. This field is set
            only in Get requests.
          type: array
          readOnly: true
      type: object
      description: A storage volume.
    RenameNfsShareRequest:
      type: object
      properties:
        newNfsshareId:
          type: string
          description: Required. The new `id` of the nfsshare.
      description: Message requesting rename of a server.
      id: RenameNfsShareRequest
    Instance:
      description: A server.
      type: object
      properties:
        pod:
          type: string
          description: >-
            Immutable. Pod name. Pod is an independent part of infrastructure.
            Instance can be connected to the assets (networks, volumes)
            allocated in the same pod only.
        state:
          type: string
          enumDescriptions:
            - The server is in an unknown state.
            - The server is being provisioned.
            - The server is running.
            - The server has been deleted.
            - The server is being updated.
            - The server is starting.
            - The server is stopping.
            - The server is shutdown.
          description: Output only. The state of the server.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - PROVISIONING
            - RUNNING
            - DELETED
            - UPDATING
            - STARTING
            - STOPPING
            - SHUTDOWN
        id:
          type: string
          description: >-
            Output only. An identifier for the `Instance`, generated by the
            backend.
          readOnly: true
        networkTemplate:
          description: >-
            Instance network template name. For eg, bondaa-bondaa, bondab-nic,
            etc. Generally, the template name follows the syntax of "bond" or
            "nic".
          type: string
        hyperthreadingEnabled:
          type: boolean
          description: >-
            True if you enable hyperthreading for the server, otherwise false.
            The default value is false.
        createTime:
          description: Output only. Create a time stamp.
          type: string
          readOnly: true
          format: google-datetime
        interactiveSerialConsoleEnabled:
          type: boolean
          description: >-
            Output only. True if the interactive serial console feature is
            enabled for the instance, false otherwise. The default value is
            false.
          readOnly: true
        updateTime:
          type: string
          readOnly: true
          description: Output only. Update a time stamp.
          format: google-datetime
        firmwareVersion:
          type: string
          description: Output only. The firmware version for the instance.
          readOnly: true
        volumes:
          type: array
          description: >-
            Input only. List of Volumes to attach to this Instance on creation.
            This field won't be populated in Get/List responses.
          items:
            $ref: '#/components/schemas/Volume'
        logicalInterfaces:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudBaremetalsolutionV2LogicalInterface
          description: >-
            List of logical interfaces for the instance. The number of logical
            interfaces will be the same as number of hardware bond/nic on the
            chosen network template. For the non-multivlan configurations (for
            eg, existing servers) that use existing default network template
            (bondaa-bondaa), both the Instance.networks field and the
            Instance.logical_interfaces fields will be filled to ensure backward
            compatibility. For the others, only Instance.logical_interfaces will
            be filled.
          type: array
        osImage:
          description: The OS image currently installed on the server.
          type: string
        name:
          type: string
          description: >-
            Immutable. The resource name of this `Instance`. Resource names are
            schemeless URIs that follow the conventions in
            https://cloud.google.com/apis/design/resource_names. Format:
            `projects/{project}/locations/{location}/instances/{instance}`
        luns:
          type: array
          items:
            $ref: '#/components/schemas/Lun'
          description: Immutable. List of LUNs associated with this server.
        machineType:
          type: string
          description: >-
            Immutable. The server type. [Available server
            types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
        loginInfo:
          type: string
          readOnly: true
          description: Output only. Text field about info for logging in.
        labels:
          additionalProperties:
            type: string
          type: object
          description: Labels as key value pairs.
        workloadProfile:
          enumDescriptions:
            - The workload profile is in an unknown state.
            - The workload profile is generic.
            - The workload profile is hana.
          description: The workload profile for the instance.
          enum:
            - WORKLOAD_PROFILE_UNSPECIFIED
            - WORKLOAD_PROFILE_GENERIC
            - WORKLOAD_PROFILE_HANA
          type: string
        networks:
          readOnly: true
          description: Output only. List of networks associated with this server.
          type: array
          items:
            $ref: '#/components/schemas/Network'
      id: Instance
    GoogleCloudBaremetalsolutionV2LogicalInterface:
      id: GoogleCloudBaremetalsolutionV2LogicalInterface
      type: object
      properties:
        name:
          description: >-
            Interface name. This is of syntax or and forms part of the network
            template name.
          type: string
        interfaceIndex:
          type: integer
          format: int32
          description: >-
            The index of the logical interface mapping to the index of the
            hardware bond or nic on the chosen network template. This field is
            deprecated.
        logicalNetworkInterfaces:
          description: List of logical network interfaces within a logical interface.
          type: array
          items:
            $ref: '#/components/schemas/LogicalNetworkInterface'
      description: >-
        Each logical interface represents a logical abstraction of the
        underlying physical interface (for eg. bond, nic) of the instance. Each
        logical interface can effectively map to multiple network-IP pairs and
        still be mapped to one underlying physical interface.
    NetworkConfig:
      type: object
      description: Configuration parameters for a new network.
      id: NetworkConfig
      properties:
        serviceCidr:
          enum:
            - SERVICE_CIDR_UNSPECIFIED
            - DISABLED
            - HIGH_26
            - HIGH_27
            - HIGH_28
          type: string
          enumDescriptions:
            - Unspecified value.
            - Services are disabled for the given network.
            - Use the highest /26 block of the network to host services.
            - Use the highest /27 block of the network to host services.
            - Use the highest /28 block of the network to host services.
          description: Service CIDR, if any.
        jumboFramesEnabled:
          type: boolean
          description: The JumboFramesEnabled option for customer to set.
        cidr:
          type: string
          description: CIDR range of the network.
        vlanSameProject:
          type: boolean
          description: Whether the VLAN attachment pair is located in the same project.
        name:
          description: Output only. The name of the network config.
          readOnly: true
          type: string
        id:
          description: >-
            A transient unique identifier to identify a volume within an
            ProvisioningConfig request.
          type: string
        bandwidth:
          enumDescriptions:
            - Unspecified value.
            - 1 Gbps.
            - 2 Gbps.
            - 5 Gbps.
            - 10 Gbps.
          description: Interconnect bandwidth. Set only when type is CLIENT.
          enum:
            - BANDWIDTH_UNSPECIFIED
            - BW_1_GBPS
            - BW_2_GBPS
            - BW_5_GBPS
            - BW_10_GBPS
          type: string
        vlanAttachments:
          items:
            $ref: '#/components/schemas/IntakeVlanAttachment'
          type: array
          description: >-
            List of VLAN attachments. As of now there are always 2 attachments,
            but it is going to change in the future (multi vlan).
        type:
          description: The type of this network, either Client or Private.
          enum:
            - TYPE_UNSPECIFIED
            - CLIENT
            - PRIVATE
          enumDescriptions:
            - Unspecified value.
            - Client network, that is a network peered to a GCP VPC.
            - Private network, that is a network local to the BMS POD.
          type: string
        gcpService:
          type: string
          description: >-
            The GCP service of the network. Available gcp_service are in
            https://cloud.google.com/bare-metal/docs/bms-planning.
        userNote:
          type: string
          description: >-
            User note field, it can be used by customers to add additional
            information for the BMS Ops team .
    SubmitProvisioningConfigRequest:
      id: SubmitProvisioningConfigRequest
      type: object
      properties:
        email:
          description: >-
            Optional. Email provided to send a confirmation with provisioning
            config to.
          type: string
        provisioningConfig:
          $ref: '#/components/schemas/ProvisioningConfig'
          description: Required. The ProvisioningConfig to create.
      description: Request for SubmitProvisioningConfig.
    StartInstanceRequest:
      type: object
      properties: {}
      id: StartInstanceRequest
      description: Message requesting to start a server.
    DetachLunRequest:
      id: DetachLunRequest
      type: object
      properties:
        lun:
          description: Required. Name of the Lun to detach.
          type: string
        skipReboot:
          description: If true, performs lun unmapping without instance reboot.
          type: boolean
      description: Message for detach specific LUN from an Instance.
    DisableInteractiveSerialConsoleRequest:
      type: object
      id: DisableInteractiveSerialConsoleRequest
      properties: {}
      description: Message for disabling the interactive serial console on an instance.
    Location:
      type: object
      id: Location
      properties:
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
      description: A resource that represents a Google Cloud location.
    ListNfsSharesResponse:
      type: object
      description: Response message containing the list of NFS shares.
      id: ListNfsSharesResponse
      properties:
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        nfsShares:
          description: The list of NFS shares.
          type: array
          items:
            $ref: '#/components/schemas/NfsShare'
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    FetchInstanceProvisioningSettingsResponse:
      description: Response with all provisioning settings.
      type: object
      properties:
        images:
          items:
            $ref: '#/components/schemas/OSImage'
          description: The OS images available.
          type: array
      id: FetchInstanceProvisioningSettingsResponse
    SnapshotReservationDetail:
      id: SnapshotReservationDetail
      description: >-
        Details about snapshot space reservation and usage on the storage
        volume.
      type: object
      properties:
        reservedSpaceGib:
          description: >-
            The space on this storage volume reserved for snapshots, shown in
            GiB.
          type: string
          format: int64
        reservedSpaceUsedPercent:
          type: integer
          format: int32
          description: >-
            The percent of snapshot space on this storage volume actually being
            used by the snapshot copies. This value might be higher than 100% if
            the snapshot copies have overflowed into the data portion of the
            storage volume.
        reservedSpaceRemainingGib:
          description: >-
            The amount, in GiB, of available space in this storage volume's
            reserved snapshot space.
          format: int64
          type: string
        reservedSpacePercent:
          type: integer
          format: int32
          description: >-
            Percent of the total Volume size reserved for snapshot copies.
            Enabling snapshots requires reserving 20% or more of the storage
            volume space for snapshots. Maximum reserved space for snapshots is
            40%. Setting this field will effectively set snapshot_enabled to
            true.
    AllowedClient:
      id: AllowedClient
      type: object
      properties:
        network:
          description: The network the access point sits on.
          type: string
        allowSuid:
          description: Allow the setuid flag.
          type: boolean
        shareIp:
          type: string
          readOnly: true
          description: >-
            Output only. The IP address of the share on this network. Assigned
            automatically during provisioning based on the network's
            services_cidr.
        mountPermissions:
          enum:
            - MOUNT_PERMISSIONS_UNSPECIFIED
            - READ
            - READ_WRITE
          enumDescriptions:
            - Permissions were not specified.
            - NFS share can be mount with read-only permissions.
            - NFS share can be mount with read-write permissions.
          type: string
          description: Mount permissions.
        allowedClientsCidr:
          type: string
          description: The subnet of IP addresses permitted to access the share.
        nfsPath:
          type: string
          readOnly: true
          description: >-
            Output only. The path to access NFS, in format shareIP:/InstanceID
            InstanceID is the generated ID instead of customer provided name.
            example like "10.0.0.0:/g123456789-nfs001"
        noRootSquash:
          type: boolean
          description: >-
            Disable root squashing, which is a feature of NFS. Root squash is a
            special mapping of the remote superuser (root) identity when using
            identity authentication.
        allowDev:
          description: Allow dev flag. Which controls whether to allow creation of devices.
          type: boolean
      description: Represents an 'access point' for the share.
    ListSSHKeysResponse:
      properties:
        sshKeys:
          description: The SSH keys registered in the project.
          type: array
          items:
            $ref: '#/components/schemas/SSHKey'
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
      description: Message for response of ListSSHKeys.
      type: object
      id: ListSSHKeysResponse
    ListNetworksResponse:
      id: ListNetworksResponse
      type: object
      description: Response message containing the list of networks.
      properties:
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        networks:
          description: The list of networks.
          type: array
          items:
            $ref: '#/components/schemas/Network'
    ListNetworkUsageResponse:
      properties:
        networks:
          type: array
          description: Networks with IPs.
          items:
            $ref: '#/components/schemas/NetworkUsage'
      description: Response with Networks with IPs
      id: ListNetworkUsageResponse
      type: object
    IntakeVlanAttachment:
      description: A GCP vlan attachment.
      properties:
        pairingKey:
          description: Attachment pairing key.
          type: string
        id:
          type: string
          description: Identifier of the VLAN attachment.
      id: IntakeVlanAttachment
      type: object
    NetworkMountPoint:
      id: NetworkMountPoint
      properties:
        logicalInterface:
          type: string
          description: Logical interface to detach from.
        instance:
          description: Instance to attach network to.
          type: string
        defaultGateway:
          type: boolean
          description: Network should be a default gateway.
        ipAddress:
          type: string
          description: Ip address of the server.
      type: object
      description: Mount point for a network.
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: Status
      properties:
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        code:
          format: int32
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
        details:
          type: array
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
      type: object
    NetworkAddress:
      description: A network.
      type: object
      id: NetworkAddress
      properties:
        networkId:
          description: >-
            Id of the network to use, within the same ProvisioningConfig
            request.
          type: string
        address:
          type: string
          description: IPv4 address to be assigned to the server.
        existingNetworkId:
          type: string
          description: Name of the existing network to use.
    InstanceQuota:
      properties:
        gcpService:
          type: string
          description: The gcp service of the provisioning quota.
        name:
          type: string
          readOnly: true
          description: Output only. The name of the instance quota.
        location:
          description: Location where the quota applies.
          type: string
        availableMachineCount:
          format: int32
          type: integer
          description: >-
            Number of machines than can be created for the given location and
            instance_type.
        instanceType:
          type: string
          description: 'Instance type. Deprecated: use gcp_service.'
      description: A resource budget.
      id: InstanceQuota
      type: object
    QosPolicy:
      id: QosPolicy
      properties:
        bandwidthGbps:
          format: double
          description: The bandwidth permitted by the QOS policy, in gbps.
          type: number
      description: QOS policy parameters.
      type: object
    EvictLunRequest:
      properties: {}
      id: EvictLunRequest
      description: Request for skip lun cooloff and delete it.
      type: object
    RenameNetworkRequest:
      type: object
      id: RenameNetworkRequest
      description: Message requesting rename of a server.
      properties:
        newNetworkId:
          type: string
          description: Required. The new `id` of the network.
    NfsExport:
      properties:
        cidr:
          type: string
          description: A CIDR range.
        allowDev:
          description: Allow dev flag in NfsShare AllowedClientsRequest.
          type: boolean
        machineId:
          type: string
          description: >-
            Either a single machine, identified by an ID, or a comma-separated
            list of machine IDs.
        permissions:
          enum:
            - PERMISSIONS_UNSPECIFIED
            - READ_ONLY
            - READ_WRITE
          description: Export permissions.
          enumDescriptions:
            - Unspecified value.
            - Read-only permission.
            - Read-write permission.
          type: string
        allowSuid:
          type: boolean
          description: Allow the setuid flag.
        noRootSquash:
          description: >-
            Disable root squashing, which is a feature of NFS. Root squash is a
            special mapping of the remote superuser (root) identity when using
            identity authentication.
          type: boolean
        networkId:
          description: Network to use to publish the export.
          type: string
      id: NfsExport
      type: object
      description: A NFS export entry.
    ProvisioningConfig:
      type: object
      id: ProvisioningConfig
      properties:
        statusMessage:
          description: Optional status messages associated with the FAILED state.
          type: string
        ticketId:
          type: string
          description: A generated ticket id to track provisioning request.
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Last update timestamp.
        networks:
          items:
            $ref: '#/components/schemas/NetworkConfig'
          type: array
          description: Networks to be created.
        email:
          type: string
          description: >-
            Email provided to send a confirmation with provisioning config to.
            Deprecated in favour of email field in request messages.
        vpcScEnabled:
          description: If true, VPC SC is enabled for the cluster.
          type: boolean
        cloudConsoleUri:
          readOnly: true
          type: string
          description: >-
            Output only. URI to Cloud Console UI view of this provisioning
            config.
        name:
          description: >-
            Output only. The system-generated name of the provisioning config.
            This follows the UUID format.
          readOnly: true
          type: string
        handoverServiceAccount:
          description: >-
            A service account to enable customers to access instance credentials
            upon handover.
          type: string
        location:
          type: string
          description: >-
            Optional. Location name of this ProvisioningConfig. It is optional
            only for Intake UI transition period.
        state:
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - SUBMITTED
            - PROVISIONING
            - PROVISIONED
            - VALIDATED
            - CANCELLED
            - FAILED
          enumDescriptions:
            - State wasn't specified.
            - ProvisioningConfig is a draft and can be freely modified.
            - ProvisioningConfig was already submitted and cannot be modified.
            - >-
              ProvisioningConfig was in the provisioning state. Initially this
              state comes from the work order table in big query when SNOW is
              used. Later this field can be set by the work order API.
            - ProvisioningConfig was provisioned, meaning the resources exist.
            - >-
              ProvisioningConfig was validated. A validation tool will be run to
              set this state.
            - ProvisioningConfig was canceled.
            - The request is submitted for provisioning, with error return.
          readOnly: true
          description: Output only. State of ProvisioningConfig.
          type: string
        customId:
          description: Optional. The user-defined identifier of the provisioning config.
          type: string
        volumes:
          items:
            $ref: '#/components/schemas/VolumeConfig'
          type: array
          description: Volumes to be created.
        instances:
          items:
            $ref: '#/components/schemas/InstanceConfig'
          description: Instances to be created.
          type: array
      description: A provisioning configuration.
    NetworkUsage:
      id: NetworkUsage
      properties:
        network:
          description: Network.
          $ref: '#/components/schemas/Network'
        usedIps:
          description: All used IP addresses in this network.
          type: array
          items:
            type: string
      description: Network with all used IP addresses.
      type: object
    ListLocationsResponse:
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        locations:
          items:
            $ref: '#/components/schemas/Location'
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
      type: object
    InstanceConfig:
      type: object
      description: Configuration parameters for a new instance.
      id: InstanceConfig
      properties:
        networkTemplate:
          description: >-
            Server network template name. Filled if
            InstanceConfig.multivlan_config is true.
          type: string
        hyperthreading:
          type: boolean
          description: >-
            Whether the instance should be provisioned with Hyperthreading
            enabled.
        osImage:
          type: string
          description: >-
            OS image to initialize the instance. [Available
            images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
        accountNetworksEnabled:
          type: boolean
          description: >-
            If true networks can be from different projects of the same vendor
            account.
        instanceType:
          description: >-
            Instance type. [Available
            types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: string
        userNote:
          type: string
          description: >-
            User note field, it can be used by customers to add additional
            information for the BMS Ops team .
        id:
          type: string
          description: >-
            A transient unique identifier to idenfity an instance within an
            ProvisioningConfig request.
        networkConfig:
          type: string
          enum:
            - NETWORKCONFIG_UNSPECIFIED
            - SINGLE_VLAN
            - MULTI_VLAN
          enumDescriptions:
            - The unspecified network configuration.
            - Instance part of single client network and single private network.
            - >-
              Instance part of multiple (or single) client networks and private
              networks.
          description: The type of network configuration on the instance.
        privateNetwork:
          description: >-
            Private network address, if any. Filled if
            InstanceConfig.multivlan_config is false.
          $ref: '#/components/schemas/NetworkAddress'
        sshKeyNames:
          type: array
          items:
            type: string
          description: List of names of ssh keys used to provision the instance.
        logicalInterfaces:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudBaremetalsolutionV2LogicalInterface
          description: >-
            List of logical interfaces for the instance. The number of logical
            interfaces will be the same as number of hardware bond/nic on the
            chosen network template. Filled if InstanceConfig.multivlan_config
            is true.
        name:
          description: Output only. The name of the instance config.
          readOnly: true
          type: string
        clientNetwork:
          $ref: '#/components/schemas/NetworkAddress'
          description: >-
            Client network address. Filled if InstanceConfig.multivlan_config is
            false.
    EvictVolumeRequest:
      id: EvictVolumeRequest
      description: Request for skip volume cooloff and delete it.
      properties: {}
      type: object
    Lun:
      properties:
        instances:
          readOnly: true
          type: array
          description: Output only. Instances this Lun is attached to.
          items:
            type: string
        multiprotocolType:
          type: string
          enum:
            - MULTIPROTOCOL_TYPE_UNSPECIFIED
            - LINUX
          enumDescriptions:
            - Server has no OS specified.
            - Server with Linux OS.
          description: >-
            The LUN multiprotocol type ensures the characteristics of the LUN
            are optimized for each operating system.
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - UPDATING
            - READY
            - DELETING
            - COOL_OFF
          description: The state of this storage volume.
          type: string
          enumDescriptions:
            - The LUN is in an unknown state.
            - The LUN is being created.
            - The LUN is being updated.
            - The LUN is ready for use.
            - The LUN has been requested to be deleted.
            - >-
              The LUN is in cool off state. It will be deleted after
              `expire_time`.
        wwid:
          description: The WWID for this LUN.
          type: string
        bootLun:
          description: Display if this LUN is a boot LUN.
          type: boolean
        id:
          description: An identifier for the LUN, generated by the backend.
          type: string
        name:
          readOnly: true
          description: Output only. The name of the LUN.
          type: string
        sizeGb:
          description: The size of this LUN, in gigabytes.
          format: int64
          type: string
        expireTime:
          format: google-datetime
          description: >-
            Output only. Time after which LUN will be fully deleted. It is
            filled only for LUNs in COOL_OFF state.
          type: string
          readOnly: true
        shareable:
          type: boolean
          description: Display if this LUN can be shared between multiple physical servers.
        storageVolume:
          description: Display the storage volume for this LUN.
          type: string
        storageType:
          description: The storage type for this LUN.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
          enumDescriptions:
            - The storage type for this LUN is unknown.
            - This storage type for this LUN is SSD.
            - This storage type for this LUN is HDD.
          type: string
      id: Lun
      type: object
      description: A storage volume logical unit number (LUN).
    StopInstanceRequest:
      type: object
      properties: {}
      description: Message requesting to stop a server.
      id: StopInstanceRequest
    RenameVolumeRequest:
      type: object
      id: RenameVolumeRequest
      properties:
        newVolumeId:
          description: Required. The new `id` of the volume.
          type: string
      description: Message requesting rename of a server.
    EnableInteractiveSerialConsoleRequest:
      id: EnableInteractiveSerialConsoleRequest
      properties: {}
      description: Message for enabling the interactive serial console on an instance.
      type: object
    Empty:
      id: Empty
      properties: {}
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
    VolumeConfig:
      description: Configuration parameters for a new volume.
      type: object
      id: VolumeConfig
      properties:
        gcpService:
          type: string
          description: >-
            The GCP service of the storage volume. Available gcp_service are in
            https://cloud.google.com/bare-metal/docs/bms-planning.
        nfsExports:
          description: NFS exports. Set only when protocol is PROTOCOL_NFS.
          items:
            $ref: '#/components/schemas/NfsExport'
          type: array
        lunRanges:
          description: LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.
          items:
            $ref: '#/components/schemas/LunRange'
          type: array
        id:
          description: >-
            A transient unique identifier to identify a volume within an
            ProvisioningConfig request.
          type: string
        performanceTier:
          description: Performance tier of the Volume. Default is SHARED.
          enumDescriptions:
            - Value is not specified.
            - Regular volumes, shared aggregates.
            - Assigned aggregates.
            - High throughput aggregates.
          enum:
            - VOLUME_PERFORMANCE_TIER_UNSPECIFIED
            - VOLUME_PERFORMANCE_TIER_SHARED
            - VOLUME_PERFORMANCE_TIER_ASSIGNED
            - VOLUME_PERFORMANCE_TIER_HT
          type: string
        protocol:
          enumDescriptions:
            - Unspecified value.
            - Fibre channel.
            - Network file system.
          description: Volume protocol.
          enum:
            - PROTOCOL_UNSPECIFIED
            - PROTOCOL_FC
            - PROTOCOL_NFS
          type: string
        storageAggregatePool:
          description: >-
            Input only. Name of the storage aggregate pool to allocate the
            volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED
            volumes.
          type: string
        type:
          type: string
          enumDescriptions:
            - The unspecified type.
            - This Volume is on flash.
            - This Volume is on disk.
          enum:
            - TYPE_UNSPECIFIED
            - FLASH
            - DISK
          description: The type of this Volume.
        userNote:
          type: string
          description: >-
            User note field, it can be used by customers to add additional
            information for the BMS Ops team .
        machineIds:
          description: >-
            Machine ids connected to this volume. Set only when protocol is
            PROTOCOL_FC.
          type: array
          items:
            type: string
        snapshotsEnabled:
          description: Whether snapshots should be enabled.
          type: boolean
        sizeGb:
          description: The requested size of this volume, in GB.
          type: integer
          format: int32
        name:
          type: string
          readOnly: true
          description: Output only. The name of the volume config.
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v2/projects/{projectsId}/locations/{locationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
    get:
      description: Gets information about a location.
      operationId: baremetalsolution.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: baremetalsolution.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas:
    parameters: *ref_1
    get:
      description: List the budget details to provision resources on a given project.
      operationId: baremetalsolution.projects.locations.provisioningQuotas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvisioningQuotasResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: provisioning_quotas
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/volumes:
    parameters: *ref_1
    get:
      description: List storage volumes in a given project and location.
      operationId: baremetalsolution.projects.locations.volumes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: volumes
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:
    parameters: *ref_1
    get:
      description: Get details of a single storage volume.
      operationId: baremetalsolution.projects.locations.volumes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: select
    patch:
      description: Update details of a single storage volume.
      operationId: baremetalsolution.projects.locations.volumes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:evict:
    parameters: *ref_1
    post:
      description: >-
        Skips volume's cooloff and deletes it now. Volume must be in cooloff
        state.
      operationId: baremetalsolution.projects.locations.volumes.evict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvictVolumeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize:
    parameters: *ref_1
    post:
      description: Emergency Volume resize.
      operationId: baremetalsolution.projects.locations.volumes.resize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeVolumeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:rename:
    parameters: *ref_1
    post:
      description: >-
        RenameVolume sets a new name for a volume. Use with caution, previous
        names become immediately invalidated.
      operationId: baremetalsolution.projects.locations.volumes.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameVolumeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: volumes
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns:
    parameters: *ref_1
    get:
      description: List storage volume luns for given storage volume.
      operationId: baremetalsolution.projects.locations.volumes.luns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: luns
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}:
    parameters: *ref_1
    get:
      description: Get details of a single storage logical unit number(LUN).
      operationId: baremetalsolution.projects.locations.volumes.luns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: lunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: luns
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}:evict:
    parameters: *ref_1
    post:
      description: Skips lun's cooloff and deletes it now. Lun must be in cooloff state.
      operationId: baremetalsolution.projects.locations.volumes.luns.evict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvictLunRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: lunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: luns
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot:
    parameters: *ref_1
    post:
      description: >-
        Uses the specified snapshot to restore its parent volume. Returns
        INVALID_ARGUMENT if called for a non-boot volume.
      operationId: >-
        baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreVolumeSnapshotRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a
        non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: delete
    get:
      description: >-
        Returns the specified snapshot resource. Returns INVALID_ARGUMENT if
        called for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: path
          name: snapshotsId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots:
    parameters: *ref_1
    post:
      description: >-
        Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called
        for a non-boot volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeSnapshot'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeSnapshot'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
      x-stackQL-resource: snapshots
      x-stackQL-verb: insert
    get:
      description: >-
        Retrieves the list of snapshots for the specified volume. Returns a
        response with an empty list of snapshots if called for a non-boot
        volume.
      operationId: baremetalsolution.projects.locations.volumes.snapshots.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVolumeSnapshotsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: volumesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: snapshots
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/sshKeys:
    parameters: *ref_1
    get:
      description: >-
        Lists the public SSH keys registered for the specified project. These
        SSH keys are used only for the interactive serial console feature.
      operationId: baremetalsolution.projects.locations.sshKeys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSSHKeysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: ssh_keys
      x-stackQL-verb: select
    post:
      description: >-
        Register a public SSH key in the specified project for use with the
        interactive serial console feature.
      operationId: baremetalsolution.projects.locations.sshKeys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSHKey'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: sshKeyId
          schema:
            type: string
      x-stackQL-resource: ssh_keys
      x-stackQL-verb: insert
  /v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}:
    parameters: *ref_1
    delete:
      description: Deletes a public SSH key registered in the specified project.
      operationId: baremetalsolution.projects.locations.sshKeys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sshKeysId
          required: true
          schema:
            type: string
      x-stackQL-resource: ssh_keys
      x-stackQL-verb: delete
  /v2/projects/{projectsId}/locations/{locationsId}/instances:
    parameters: *ref_1
    get:
      description: List servers in a given project and location.
      operationId: baremetalsolution.projects.locations.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rename:
    parameters: *ref_1
    post:
      description: >-
        RenameInstance sets a new name for an instance. Use with caution,
        previous names become immediately invalidated.
      operationId: baremetalsolution.projects.locations.instances.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:
    parameters: *ref_1
    get:
      description: Get details about a single server.
      operationId: baremetalsolution.projects.locations.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: select
    patch:
      description: Update details of a single server.
      operationId: baremetalsolution.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole:
    parameters: *ref_1
    post:
      description: Enable the interactive serial console feature on an instance.
      operationId: >-
        baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableInteractiveSerialConsoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start:
    parameters: *ref_1
    post:
      description: Starts a server that was shutdown.
      operationId: baremetalsolution.projects.locations.instances.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole:
    parameters: *ref_1
    post:
      description: Disable the interactive serial console feature on an instance.
      operationId: >-
        baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableInteractiveSerialConsoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun:
    parameters: *ref_1
    post:
      description: Detach LUN from Instance.
      operationId: baremetalsolution.projects.locations.instances.detachLun
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachLunRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset:
    parameters: *ref_1
    post:
      description: >-
        Perform an ungraceful, hard reset on a server. Equivalent to shutting
        the power off and then turning it back on.
      operationId: baremetalsolution.projects.locations.instances.reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop:
    parameters: *ref_1
    post:
      description: Stop a running server.
      operationId: baremetalsolution.projects.locations.instances.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}:
    parameters: *ref_1
    delete:
      description: Delete an NFS share. The underlying volume is automatically deleted.
      operationId: baremetalsolution.projects.locations.nfsShares.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: delete
    get:
      description: Get details of a single NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NfsShare'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: select
    patch:
      description: Update details of a single NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NfsShare'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/nfsShares:
    parameters: *ref_1
    get:
      description: List NFS shares.
      operationId: baremetalsolution.projects.locations.nfsShares.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNfsSharesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: select
    post:
      description: Create an NFS share.
      operationId: baremetalsolution.projects.locations.nfsShares.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NfsShare'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: insert
  /v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}:rename:
    parameters: *ref_1
    post:
      description: >-
        RenameNfsShare sets a new name for an nfsshare. Use with caution,
        previous names become immediately invalidated.
      operationId: baremetalsolution.projects.locations.nfsShares.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameNfsShareRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NfsShare'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nfsSharesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nfs_shares
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}:
    parameters: *ref_1
    get:
      description: Get details of a single network.
      operationId: baremetalsolution.projects.locations.networks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks
      x-stackQL-verb: select
    patch:
      description: Update details of a single network.
      operationId: baremetalsolution.projects.locations.networks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: networks
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage:
    parameters: *ref_1
    get:
      description: >-
        List all Networks (and used IPs for each Network) in the vendor account
        associated with the specified project.
      operationId: baremetalsolution.projects.locations.networks.listNetworkUsage
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkUsageResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks__network_usage
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}:rename:
    parameters: *ref_1
    post:
      description: >-
        RenameNetwork sets a new name for a network. Use with caution, previous
        names become immediately invalidated.
      operationId: baremetalsolution.projects.locations.networks.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameNetworkRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: networksId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/networks:
    parameters: *ref_1
    get:
      description: List network in a given project and location.
      operationId: baremetalsolution.projects.locations.networks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworksResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: networks
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch:
    parameters: *ref_1
    get:
      description: >-
        Get instance provisioning settings for a given project. This is hidden
        method used by UI only.
      operationId: baremetalsolution.projects.locations.instanceProvisioningSettings.fetch
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchInstanceProvisioningSettingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: instance_provisioning_settings
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Get details about an operation.
      operationId: baremetalsolution.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit:
    parameters: *ref_1
    post:
      description: Submit a provisiong configuration for a given project.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.submit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitProvisioningConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitProvisioningConfigResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}:
    parameters: *ref_1
    patch:
      description: Update existing ProvisioningConfig.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: provisioningConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-verb: exec
    get:
      description: Get ProvisioningConfig by name.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: provisioningConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:
    parameters: *ref_1
    post:
      description: Create new ProvisioningConfig.
      operationId: baremetalsolution.projects.locations.provisioningConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
      x-stackQL-resource: provisioning_configs
      x-stackQL-verb: insert
