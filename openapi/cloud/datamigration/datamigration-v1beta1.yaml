openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Database Migration API
  description: Manage Cloud Database Migration Service resources on Google Cloud Platform.
  version: v1beta1
  x-discovery-doc-revision: '20230622'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/database-migration/
servers:
  - url: https://datamigration.googleapis.com
components:
  schemas:
    StartMigrationJobRequest:
      description: Request message for 'StartMigrationJob' request.
      id: StartMigrationJobRequest
      type: object
      properties: {}
    ListMigrationJobsResponse:
      description: Response message for 'ListMigrationJobs' request.
      properties:
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        migrationJobs:
          description: The list of migration jobs objects.
          type: array
          items:
            $ref: '#/components/schemas/MigrationJob'
      type: object
      id: ListMigrationJobsResponse
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      id: TestIamPermissionsRequest
      type: object
      properties:
        permissions:
          type: array
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
    RestartMigrationJobRequest:
      description: Request message for 'RestartMigrationJob' request.
      id: RestartMigrationJobRequest
      type: object
      properties: {}
    SslConfig:
      properties:
        caCertificate:
          description: >-
            Required. Input only. The x509 PEM-encoded certificate of the CA
            that signed the source database server's certificate. The replica
            will use this certificate to verify it's connecting to the right
            host.
          type: string
        type:
          enumDescriptions:
            - Unspecified.
            - Only 'ca_certificate' specified.
            - >-
              Both server ('ca_certificate'), and client ('client_key',
              'client_certificate') specified.
          enum:
            - SSL_TYPE_UNSPECIFIED
            - SERVER_ONLY
            - SERVER_CLIENT
          type: string
          readOnly: true
          description: >-
            Output only. The ssl config type according to 'client_key',
            'client_certificate' and 'ca_certificate'.
        clientCertificate:
          description: >-
            Input only. The x509 PEM-encoded certificate that will be used by
            the replica to authenticate against the source database server.If
            this field is used then the 'client_key' field is mandatory.
          type: string
        clientKey:
          type: string
          description: >-
            Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key
            associated with the Client Certificate. If this field is used then
            the 'client_certificate' field is mandatory.
      description: SSL configuration information.
      type: object
      id: SslConfig
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      id: AuditConfig
      properties:
        auditLogConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          description: The configuration for logging of each type of permission.
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
    GenerateSshScriptRequest:
      properties:
        vm:
          description: Required. Bastion VM Instance name to use or to create.
          type: string
        vmSelectionConfig:
          $ref: '#/components/schemas/VmSelectionConfig'
          description: The VM selection configuration
        vmPort:
          format: int32
          description: The port that will be open on the bastion host
          type: integer
        vmCreationConfig:
          description: The VM creation configuration
          $ref: '#/components/schemas/VmCreationConfig'
      type: object
      id: GenerateSshScriptRequest
      description: Request message for 'GenerateSshScript' request.
    Policy:
      type: object
      properties:
        etag:
          type: string
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          format: byte
        auditConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
        user:mike@example.com - group:admins@example.com - domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For
        a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      id: Policy
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
      id: CancelOperationRequest
    SshScript:
      description: Response message for 'GenerateSshScript' request.
      type: object
      id: SshScript
      properties:
        script:
          type: string
          description: The ssh configuration script.
    ConnectionProfile:
      type: object
      id: ConnectionProfile
      description: A connection profile definition.
      properties:
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: >-
            Output only. The timestamp when the resource was created. A
            timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
            Example: "2014-10-02T15:01:23.045123456Z".
        provider:
          description: The database provider.
          enum:
            - DATABASE_PROVIDER_UNSPECIFIED
            - CLOUDSQL
            - RDS
          type: string
          enumDescriptions:
            - The database provider is unknown.
            - CloudSQL runs the database.
            - RDS runs the database.
        name:
          description: >-
            The name of this connection profile resource in the form of
            projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
          type: string
        state:
          type: string
          enumDescriptions:
            - The state of the connection profile is unknown.
            - The connection profile is in draft mode and fully editable.
            - The connection profile is being created.
            - The connection profile is ready.
            - The connection profile is being updated.
            - The connection profile is being deleted.
            - The connection profile has been deleted.
            - The last action on the connection profile failed.
          description: The current connection profile state (e.g. DRAFT, READY, or FAILED).
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - CREATING
            - READY
            - UPDATING
            - DELETING
            - DELETED
            - FAILED
        displayName:
          description: The connection profile display name.
          type: string
        mysql:
          $ref: '#/components/schemas/MySqlConnectionProfile'
          description: A MySQL database connection profile.
        updateTime:
          description: >-
            Output only. The timestamp when the resource was last updated. A
            timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
            Example: "2014-10-02T15:01:23.045123456Z".
          format: google-datetime
          type: string
          readOnly: true
        cloudsql:
          $ref: '#/components/schemas/CloudSqlConnectionProfile'
          description: A CloudSQL database connection profile.
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            The resource labels for connection profile to use to annotate any
            related underlying resources such as Compute Engine VMs. An object
            containing a list of "key": "value" pairs. Example: `{ "name":
            "wrench", "mass": "1.3kg", "count": "3" }`.
        error:
          description: Output only. The error details in case of state FAILED.
          readOnly: true
          $ref: '#/components/schemas/Status'
    GoogleCloudClouddmsV1beta1OperationMetadata:
      properties:
        requestedCancellation:
          type: boolean
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
        verb:
          description: Output only. Name of the verb executed by the operation.
          type: string
          readOnly: true
        target:
          readOnly: true
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          type: string
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
          type: string
        statusMessage:
          readOnly: true
          description: Output only. Human-readable status of the operation, if any.
          type: string
        apiVersion:
          description: Output only. API version used to start the operation.
          type: string
          readOnly: true
      description: Represents the metadata of the long-running operation.
      id: GoogleCloudClouddmsV1beta1OperationMetadata
      type: object
    CloudSqlSettings:
      properties:
        dataDiskType:
          description: 'The type of storage: `PD_SSD` (default) or `PD_HDD`.'
          enumDescriptions:
            - Unspecified.
            - SSD disk.
            - HDD disk.
          enum:
            - SQL_DATA_DISK_TYPE_UNSPECIFIED
            - PD_SSD
            - PD_HDD
          type: string
        databaseFlags:
          type: object
          description: >-
            The database flags passed to the Cloud SQL instance at startup. An
            object containing a list of "key": value pairs. Example: { "name":
            "wrench", "mass": "1.3kg", "count": "3" }.
          additionalProperties:
            type: string
        databaseVersion:
          type: string
          description: The database engine type and version.
          enumDescriptions:
            - Unspecified version.
            - MySQL 5.6.
            - MySQL 5.7.
            - MySQL 8.0.
          enum:
            - SQL_DATABASE_VERSION_UNSPECIFIED
            - MYSQL_5_6
            - MYSQL_5_7
            - MYSQL_8_0
        activationPolicy:
          enumDescriptions:
            - unspecified policy.
            - The instance is always up and running.
            - The instance should never spin up.
          description: >-
            The activation policy specifies when the instance is activated; it
            is applicable only when the instance state is 'RUNNABLE'. Valid
            values: 'ALWAYS': The instance is on, and remains so even in the
            absence of connection requests. `NEVER`: The instance is off; it is
            not activated, even if a connection request arrives.
          enum:
            - SQL_ACTIVATION_POLICY_UNSPECIFIED
            - ALWAYS
            - NEVER
          type: string
        rootPasswordSet:
          type: boolean
          description: >-
            Output only. Indicates If this connection profile root password is
            stored.
          readOnly: true
        tier:
          description: >-
            The tier (or machine type) for this instance, for example:
            `db-n1-standard-1` (MySQL instances). For more information, see
            [Cloud SQL Instance
            Settings](https://cloud.google.com/sql/docs/mysql/instance-settings).
          type: string
        rootPassword:
          type: string
          description: Input only. Initial root password.
        ipConfig:
          description: >-
            The settings for IP Management. This allows to enable or disable the
            instance IP and manage which external networks can connect to the
            instance. The IPv4 address cannot be disabled.
          $ref: '#/components/schemas/SqlIpConfig'
        storageAutoResizeLimit:
          description: >-
            The maximum size to which storage capacity can be automatically
            increased. The default value is 0, which specifies that there is no
            limit.
          type: string
          format: int64
        zone:
          type: string
          description: >-
            The Google Cloud Platform zone where your Cloud SQL database
            instance is located.
        sourceId:
          type: string
          description: >-
            The Database Migration Service source connection profile ID, in the
            format:
            `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`
        userLabels:
          additionalProperties:
            type: string
          description: >-
            The resource labels for a Cloud SQL instance to use to annotate any
            related underlying resources such as Compute Engine VMs. An object
            containing a list of "key": "value" pairs. Example: `{ "name":
            "wrench", "mass": "18kg", "count": "3" }`.
          type: object
        dataDiskSizeGb:
          format: int64
          type: string
          description: >-
            The storage capacity available to the database, in GB. The minimum
            (and default) size is 10GB.
        autoStorageIncrease:
          type: boolean
          description: >-
            [default: ON] If you enable this setting, Cloud SQL checks your
            available storage every 30 seconds. If the available storage falls
            below a threshold size, Cloud SQL automatically adds additional
            storage capacity. If the available storage repeatedly falls below
            the threshold size, Cloud SQL continues to add storage until it
            reaches the maximum of 30 TB.
      type: object
      description: Settings for creating a Cloud SQL database instance.
      id: CloudSqlSettings
    Location:
      type: object
      properties:
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          additionalProperties:
            type: string
          type: object
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
      id: Location
      description: A resource that represents a Google Cloud location.
    Status:
      properties:
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
        code:
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
      type: object
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
    VmCreationConfig:
      properties:
        vmMachineType:
          type: string
          description: Required. VM instance machine type to create.
        subnet:
          type: string
          description: The subnet name the vm needs to be created in.
        vmZone:
          type: string
          description: The Google Cloud Platform zone to create the VM in.
      description: VM creation configuration message
      id: VmCreationConfig
      type: object
    ListConnectionProfilesResponse:
      type: object
      id: ListConnectionProfilesResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        connectionProfiles:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionProfile'
          description: The response list of connection profiles.
      description: Response message for 'ListConnectionProfiles' request.
    SqlAclEntry:
      type: object
      properties:
        value:
          type: string
          description: The allowlisted value for the access control list.
        expireTime:
          type: string
          format: google-datetime
          description: >-
            The time when this access control entry expires in [RFC
            3339](https://tools.ietf.org/html/rfc3339) format, for example:
            `2012-11-15T16:19:00.094Z`.
        label:
          type: string
          description: A label to identify this entry.
        ttl:
          type: string
          format: google-duration
          description: Input only. The time-to-leave of this access control entry.
      id: SqlAclEntry
      description: An entry for an Access Control list.
    VerifyMigrationJobRequest:
      id: VerifyMigrationJobRequest
      type: object
      description: Request message for 'VerifyMigrationJob' request.
      properties: {}
    PromoteMigrationJobRequest:
      type: object
      properties: {}
      description: Request message for 'PromoteMigrationJob' request.
      id: PromoteMigrationJobRequest
    StopMigrationJobRequest:
      description: Request message for 'StopMigrationJob' request.
      type: object
      id: StopMigrationJobRequest
      properties: {}
    StaticIpConnectivity:
      properties: {}
      description: >-
        The source database will allow incoming connections from the destination
        database's public IP. You can retrieve the Cloud SQL instance's public
        IP from the Cloud SQL console or using Cloud SQL APIs. No additional
        configuration is required.
      id: StaticIpConnectivity
      type: object
    SqlIpConfig:
      properties:
        authorizedNetworks:
          description: >-
            The list of external networks that are allowed to connect to the
            instance using the IP. See
            https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also
            known as 'slash' notation (e.g. `192.168.100.0/24`).
          type: array
          items:
            $ref: '#/components/schemas/SqlAclEntry'
        requireSsl:
          type: boolean
          description: Whether SSL connections over IP should be enforced or not.
        enableIpv4:
          type: boolean
          description: Whether the instance is assigned a public IP address or not.
        privateNetwork:
          description: >-
            The resource link for the VPC network from which the Cloud SQL
            instance is accessible for private IP. For example,
            `/projects/myProject/global/networks/default`. This setting can be
            updated, but it cannot be removed after it is set.
          type: string
      description: IP Management configuration.
      type: object
      id: SqlIpConfig
    Binding:
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
        condition:
          $ref: '#/components/schemas/Expr'
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding.
          type: array
          items:
            type: string
      description: Associates `members`, or principals, with a `role`.
      type: object
      id: Binding
    Operation:
      properties:
        response:
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
    VmSelectionConfig:
      id: VmSelectionConfig
      description: VM selection configuration message
      type: object
      properties:
        vmZone:
          description: Required. The Google Cloud Platform zone the VM is located.
          type: string
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
          format: google-fieldmask
      type: object
      id: SetIamPolicyRequest
    AuditLogConfig:
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      id: AuditLogConfig
      type: object
      properties:
        logType:
          type: string
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
        exemptedMembers:
          items:
            type: string
          type: array
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
    MigrationJob:
      description: Represents a Database Migration Service migration job object.
      properties:
        duration:
          readOnly: true
          format: google-duration
          type: string
          description: >-
            Output only. The duration of the migration job (in seconds). A
            duration in seconds with up to nine fractional digits, terminated by
            's'. Example: "3.5s".
        reverseSshConnectivity:
          $ref: '#/components/schemas/ReverseSshConnectivity'
          description: >-
            The details needed to communicate to the source over Reverse SSH
            tunnel connectivity.
        vpcPeeringConnectivity:
          $ref: '#/components/schemas/VpcPeeringConnectivity'
          description: >-
            The details of the VPC network that the source database is located
            in.
        staticIpConnectivity:
          $ref: '#/components/schemas/StaticIpConnectivity'
          description: static ip connectivity data (default, no additional details needed).
        dumpPath:
          type: string
          description: >-
            The path to the dump file in Google Cloud Storage, in the format:
            (gs://[BUCKET_NAME]/[OBJECT_NAME]).
        displayName:
          type: string
          description: The migration job display name.
        phase:
          readOnly: true
          type: string
          enumDescriptions:
            - The phase of the migration job is unknown.
            - The migration job is in the full dump phase.
            - The migration job is CDC phase.
            - The migration job is running the promote phase.
            - Only RDS flow - waiting for source writes to stop
            - >-
              Only RDS flow - the sources writes stopped, waiting for dump to
              begin
          enum:
            - PHASE_UNSPECIFIED
            - FULL_DUMP
            - CDC
            - PROMOTE_IN_PROGRESS
            - WAITING_FOR_SOURCE_WRITES_TO_STOP
            - PREPARING_THE_DUMP
          description: Output only. The current migration job phase.
        source:
          description: Required. The resource name (URI) of the source connection profile.
          type: string
        sourceDatabase:
          description: The database engine type and provider of the source.
          $ref: '#/components/schemas/DatabaseType'
        destination:
          type: string
          description: >-
            Required. The resource name (URI) of the destination connection
            profile.
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            The resource labels for migration job to use to annotate any related
            underlying resources such as Compute Engine VMs. An object
            containing a list of "key": "value" pairs. Example: `{ "name":
            "wrench", "mass": "1.3kg", "count": "3" }`.
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: >-
            Output only. If the migration job is completed, the time when it was
            completed.
        type:
          enum:
            - TYPE_UNSPECIFIED
            - ONE_TIME
            - CONTINUOUS
          type: string
          description: Required. The migration job type.
          enumDescriptions:
            - The type of the migration job is unknown.
            - The migration job is a one time migration.
            - The migration job is a continuous migration.
        error:
          $ref: '#/components/schemas/Status'
          readOnly: true
          description: Output only. The error details in case of state FAILED.
        updateTime:
          type: string
          format: google-datetime
          description: >-
            Output only. The timestamp when the migration job resource was last
            updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to
            nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
          readOnly: true
        state:
          enumDescriptions:
            - The state of the migration job is unknown.
            - The migration job is down for maintenance.
            - The migration job is in draft mode and no resources are created.
            - The migration job is being created.
            - The migration job is created and not started.
            - The migration job is running.
            - The migration job failed.
            - The migration job has been completed.
            - The migration job is being deleted.
            - The migration job is being stopped.
            - The migration job is currently stopped.
            - The migration job has been deleted.
            - The migration job is being updated.
            - The migration job is starting.
            - The migration job is restarting.
            - The migration job is resuming.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - MAINTENANCE
            - DRAFT
            - CREATING
            - NOT_STARTED
            - RUNNING
            - FAILED
            - COMPLETED
            - DELETING
            - STOPPING
            - STOPPED
            - DELETED
            - UPDATING
            - STARTING
            - RESTARTING
            - RESUMING
          description: The current migration job state.
        name:
          type: string
          description: >-
            The name (URI) of this migration job resource, in the form of:
            projects/{project}/locations/{location}/migrationJobs/{migrationJob}.
        createTime:
          format: google-datetime
          description: >-
            Output only. The timestamp when the migration job resource was
            created. A timestamp in RFC3339 UTC "Zulu" format, accurate to
            nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
          readOnly: true
          type: string
        destinationDatabase:
          description: The database engine type and provider of the destination.
          $ref: '#/components/schemas/DatabaseType'
      type: object
      id: MigrationJob
    MySqlConnectionProfile:
      description: >-
        Specifies connection parameters required specifically for MySQL
        databases.
      id: MySqlConnectionProfile
      type: object
      properties:
        password:
          type: string
          description: >-
            Required. Input only. The password for the user that Database
            Migration Service will be using to connect to the database. This
            field is not returned on request, and the value is encrypted when
            stored in Database Migration Service.
        passwordSet:
          description: >-
            Output only. Indicates If this connection profile password is
            stored.
          readOnly: true
          type: boolean
        host:
          type: string
          description: Required. The IP or hostname of the source MySQL database.
        username:
          description: >-
            Required. The username that Database Migration Service will use to
            connect to the database. The value is encrypted when stored in
            Database Migration Service.
          type: string
        port:
          format: int32
          type: integer
          description: Required. The network port of the source MySQL database.
        ssl:
          description: >-
            SSL configuration for the destination to connect to the source
            database.
          $ref: '#/components/schemas/SslConfig'
        cloudSqlId:
          type: string
          description: >-
            If the source is a Cloud SQL database, use this field to provide the
            Cloud SQL instance ID of the source.
    ListLocationsResponse:
      type: object
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          description: >-
            A list of locations that matches the specified filter in the
            request.
        nextPageToken:
          description: The standard List next-page token.
          type: string
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      type: object
      id: ListOperationsResponse
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
    Expr:
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      properties:
        title:
          type: string
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        location:
          type: string
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
      type: object
      id: Expr
    DatabaseType:
      properties:
        provider:
          enum:
            - DATABASE_PROVIDER_UNSPECIFIED
            - CLOUDSQL
            - RDS
          description: The database provider.
          type: string
          enumDescriptions:
            - The database provider is unknown.
            - CloudSQL runs the database.
            - RDS runs the database.
        engine:
          enumDescriptions:
            - The source database engine of the migration job is unknown.
            - The source engine is MySQL.
          description: The database engine.
          enum:
            - DATABASE_ENGINE_UNSPECIFIED
            - MYSQL
          type: string
      description: A message defining the database engine and provider.
      type: object
      id: DatabaseType
    Empty:
      properties: {}
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
    CloudSqlConnectionProfile:
      id: CloudSqlConnectionProfile
      properties:
        cloudSqlId:
          readOnly: true
          type: string
          description: >-
            Output only. The Cloud SQL instance ID that this connection profile
            is associated with.
        privateIp:
          type: string
          readOnly: true
          description: Output only. The Cloud SQL database instance's private IP.
        publicIp:
          description: Output only. The Cloud SQL database instance's public IP.
          type: string
          readOnly: true
        settings:
          $ref: '#/components/schemas/CloudSqlSettings'
          description: >-
            Immutable. Metadata used to create the destination Cloud SQL
            database.
      type: object
      description: >-
        Specifies required connection parameters, and, optionally, the
        parameters required to create a Cloud SQL destination database instance.
    ReverseSshConnectivity:
      properties:
        vmPort:
          format: int32
          description: >-
            Required. The forwarding port of the virtual machine (Compute
            Engine) used as the bastion server for the SSH tunnel.
          type: integer
        vpc:
          type: string
          description: The name of the VPC to peer with the Cloud SQL private network.
        vmIp:
          description: >-
            Required. The IP of the virtual machine (Compute Engine) used as the
            bastion server for the SSH tunnel.
          type: string
        vm:
          type: string
          description: >-
            The name of the virtual machine (Compute Engine) used as the bastion
            server for the SSH tunnel.
      type: object
      description: >-
        The details needed to configure a reverse SSH tunnel between the source
        and destination databases. These details will be used when calling the
        generateSshScript method (see
        https://cloud.google.com/database-migration/docs/reference/rest/v1beta1/projects.locations.migrationJobs/generateSshScript)
        to produce the script that will help set up the reverse SSH tunnel, and
        to set up the VPC peering between the Cloud SQL private network and the
        VPC.
      id: ReverseSshConnectivity
    ResumeMigrationJobRequest:
      properties: {}
      description: Request message for 'ResumeMigrationJob' request.
      type: object
      id: ResumeMigrationJobRequest
    MigrationJobVerificationError:
      id: MigrationJobVerificationError
      properties:
        errorCode:
          description: >-
            Output only. An instance of ErrorCode specifying the error that
            occurred.
          enum:
            - ERROR_CODE_UNSPECIFIED
            - CONNECTION_FAILURE
            - AUTHENTICATION_FAILURE
            - INVALID_CONNECTION_PROFILE_CONFIG
            - VERSION_INCOMPATIBILITY
            - CONNECTION_PROFILE_TYPES_INCOMPATIBILITY
            - UNSUPPORTED_GTID_MODE
            - UNSUPPORTED_DEFINER
            - CANT_RESTART_RUNNING_MIGRATION
            - TABLES_WITH_LIMITED_SUPPORT
            - UNSUPPORTED_DATABASE_LOCALE
            - UNSUPPORTED_DATABASE_FDW_CONFIG
            - ERROR_RDBMS
            - SOURCE_SIZE_EXCEEDS_THRESHOLD
          enumDescriptions:
            - An unknown error occurred
            - We failed to connect to one of the connection profile.
            - We failed to authenticate to one of the connection profile.
            - >-
              One of the involved connection profiles has an invalid
              configuration.
            - The versions of the source and the destination are incompatible.
            - The types of the source and the destination are incompatible.
            - The gtid_mode is not supported, applicable for MySQL.
            - The definer is not supported.
            - Migration is already running at the time of restart request.
            - >-
              The source has tables with limited support. E.g. PostgreSQL tables
              without primary keys.
            - The source uses an unsupported locale.
            - The source uses an unsupported Foreign Data Wrapper configuration.
            - There was an underlying RDBMS error.
            - >-
              The source DB size in Bytes exceeds a certain threshold. The
              migration might require an increase of quota, or might not be
              supported.
          type: string
          readOnly: true
        errorDetailMessage:
          description: >-
            Output only. A specific detailed error message, if supplied by the
            engine.
          type: string
          readOnly: true
        errorMessage:
          type: string
          description: >-
            Output only. A formatted message with further details about the
            error and a CTA.
          readOnly: true
      description: Error message of a verification Migration job.
      type: object
    VpcPeeringConnectivity:
      id: VpcPeeringConnectivity
      description: >-
        The details of the VPC where the source database is located in Google
        Cloud. We will use this information to set up the VPC peering connection
        between Cloud SQL and this VPC.
      type: object
      properties:
        vpc:
          description: >-
            The name of the VPC network to peer with the Cloud SQL private
            network.
          type: string
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      id: TestIamPermissionsResponse
      properties:
        permissions:
          items:
            type: string
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
      type: object
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:verify:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
    post:
      description: >-
        Verify a migration job, making sure the destination can reach the source
        and that all configuration and prerequisites are met.
      operationId: datamigration.projects.locations.migrationJobs.verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyMigrationJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:start:
    parameters: *ref_1
    post:
      description: Start an already created migration job.
      operationId: datamigration.projects.locations.migrationJobs.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMigrationJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:
    parameters: *ref_1
    delete:
      description: Deletes a single migration job.
      operationId: datamigration.projects.locations.migrationJobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: delete
    get:
      description: Gets details of a single migration job.
      operationId: datamigration.projects.locations.migrationJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single migration job.
      operationId: datamigration.projects.locations.migrationJobs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: datamigration.projects.locations.migrationJobs.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: migration_jobs_iam_policies
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:promote:
    parameters: *ref_1
    post:
      description: >-
        Promote a migration job, stopping replication to the destination and
        promoting the destination to be a standalone database.
      operationId: datamigration.projects.locations.migrationJobs.promote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromoteMigrationJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: datamigration.projects.locations.migrationJobs.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:restart:
    parameters: *ref_1
    post:
      description: >-
        Restart a stopped or failed migration job, resetting the destination
        instance to its original state and starting the migration process from
        scratch.
      operationId: datamigration.projects.locations.migrationJobs.restart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartMigrationJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:generateSshScript:
    parameters: *ref_1
    post:
      description: >-
        Generate a SSH configuration script to configure the reverse SSH
        connectivity.
      operationId: datamigration.projects.locations.migrationJobs.generateSshScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateSshScriptRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshScript'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/migrationJobs:
    parameters: *ref_1
    get:
      description: Lists migration jobs in a given project and location.
      operationId: datamigration.projects.locations.migrationJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMigrationJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: select
    post:
      description: Creates a new migration job in a given project and location.
      operationId: datamigration.projects.locations.migrationJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: migrationJobId
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:resume:
    parameters: *ref_1
    post:
      description: >-
        Resume a migration job that is currently stopped and is resumable (was
        stopped during CDC phase).
      operationId: datamigration.projects.locations.migrationJobs.resume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeMigrationJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: datamigration.projects.locations.migrationJobs.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:stop:
    parameters: *ref_1
    post:
      description: Stops a running migration job.
      operationId: datamigration.projects.locations.migrationJobs.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopMigrationJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: migrationJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migration_jobs
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single connection profile.
      operationId: datamigration.projects.locations.connectionProfiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionProfile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a single Database Migration Service connection profile. A
        connection profile can only be deleted if it is not in use by any active
        migration jobs.
      operationId: datamigration.projects.locations.connectionProfiles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: delete
    patch:
      description: Update the configuration of a single connection profile.
      operationId: datamigration.projects.locations.connectionProfiles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: datamigration.projects.locations.connectionProfiles.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: connection_profiles_iam_policies
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: datamigration.projects.locations.connectionProfiles.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_profiles_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: datamigration.projects.locations.connectionProfiles.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_profiles_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:
    parameters: *ref_1
    post:
      description: Creates a new connection profile in a given project and location.
      operationId: datamigration.projects.locations.connectionProfiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: connectionProfileId
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: insert
    get:
      description: >-
        Retrieve a list of all connection profiles in a given project and
        location.
      operationId: datamigration.projects.locations.connectionProfiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionProfilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: datamigration.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: datamigration.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: datamigration.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: datamigration.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: datamigration.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: datamigration.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
