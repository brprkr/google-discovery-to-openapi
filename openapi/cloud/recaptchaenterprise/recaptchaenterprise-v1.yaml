openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: reCAPTCHA Enterprise API
  description: >-
    Help protect your website from fraudulent activity, spam, and abuse without
    creating friction.
  version: v1
  x-discovery-doc-revision: '20230618'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/recaptcha-enterprise/
servers:
  - url: https://recaptchaenterprise.googleapis.com
components:
  schemas:
    GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership:
      description: A membership in a group of related accounts.
      id: GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership
      properties:
        hashedAccountId:
          type: string
          format: byte
          description: >-
            The unique stable hashed user identifier of the member. The
            identifier corresponds to a `hashed_account_id` provided in a
            previous `CreateAssessment` or `AnnotateAssessment` call.
        name:
          description: >-
            Required. The resource name for this membership in the format
            `projects/{project}/relatedaccountgroups/{relatedaccountgroup}/memberships/{membership}`.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1TransactionData:
      properties:
        gatewayInfo:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataGatewayInfo
          description: Information about the payment gateway's response to the transaction.
        billingAddress:
          description: Address associated with the payment method when applicable.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataAddress
        user:
          description: Information about the user paying/initiating the transaction.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataUser
        currencyCode:
          type: string
          description: The currency code in ISO-4217 format.
        shippingValue:
          type: number
          format: double
          description: >-
            The value of shipping in the specified currency. 0 for free or no
            shipping.
        shippingAddress:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataAddress
          description: >-
            Destination address if this transaction involves shipping a physical
            item.
        paymentMethod:
          description: >-
            The payment method for the transaction. The allowed values are: *
            credit-card * debit-card * gift-card * processor-{name} (If a
            third-party is used, for example, processor-paypal) * custom-{name}
            (If an alternative method is used, for example, custom-crypto)
          type: string
        cardLastFour:
          description: The last four digits of the card.
          type: string
        transactionId:
          description: >-
            Unique identifier for the transaction. This custom identifier can be
            used to reference this transaction in the future, for example,
            labeling a refund or chargeback event. Two attempts at the same
            transaction should use the same transaction id.
          type: string
        merchants:
          type: array
          description: Information about the user or users fulfilling the transaction.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataUser
        value:
          description: The decimal value of the transaction in the specified currency.
          format: double
          type: number
        cardBin:
          description: >-
            The Bank Identification Number - generally the first 6 or 8 digits
            of the card.
          type: string
        items:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionDataItem
          description: Items purchased in this transaction.
      type: object
      description: >-
        Transaction data associated with a payment protected by reCAPTCHA
        Enterprise. All fields are optional.
      id: GoogleCloudRecaptchaenterpriseV1TransactionData
    GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo:
      properties:
        requestToken:
          readOnly: true
          description: >-
            Output only. Token to provide to the client to trigger endpoint
            verification. It must be used within 15 minutes.
          type: string
        phoneNumber:
          description: >-
            Phone number for which to trigger a verification request. Should be
            given in E.164 format.
          type: string
        lastVerificationTime:
          type: string
          description: >-
            Output only. Timestamp of the last successful verification for the
            endpoint, if any.
          readOnly: true
          format: google-datetime
        emailAddress:
          type: string
          description: Email address for which to trigger a verification request.
      description: Information about a verification endpoint that can be used for 2FA.
      id: GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo
      type: object
    GoogleProtobufEmpty:
      type: object
      id: GoogleProtobufEmpty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
    GoogleCloudRecaptchaenterpriseV1TestingOptions:
      type: object
      properties:
        testingChallenge:
          description: >-
            For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge
            requests for this site will return nocaptcha if NOCAPTCHA, or an
            unsolvable challenge if CHALLENGE.
          enum:
            - TESTING_CHALLENGE_UNSPECIFIED
            - NOCAPTCHA
            - UNSOLVABLE_CHALLENGE
          type: string
          enumDescriptions:
            - >-
              Perform the normal risk analysis and return either nocaptcha or a
              challenge depending on risk and trust factors.
            - >-
              Challenge requests for this key always return a nocaptcha, which
              does not require a solution.
            - >-
              Challenge requests for this key always return an unsolvable
              challenge.
        testingScore:
          format: float
          description: >-
            All assessments for this Key will return this score. Must be between
            0 (likely not legitimate) and 1 (likely legitimate) inclusive.
          type: number
      id: GoogleCloudRecaptchaenterpriseV1TestingOptions
      description: Options for user acceptance testing.
    GoogleCloudRecaptchaenterpriseV1Event:
      type: object
      description: The event being assessed.
      properties:
        firewallPolicyEvaluation:
          description: >-
            Optional. Flag for enabling firewall policy config assessment. If
            this flag is enabled, the firewall policy will be evaluated and a
            suggested firewall action will be returned in the response.
          type: boolean
        transactionData:
          description: >-
            Optional. Data describing a payment transaction to be assessed.
            Sending this data enables reCAPTCHA Enterprise Fraud Prevention and
            the FraudPreventionAssessment component in the response.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionData'
        wafTokenAssessment:
          type: boolean
          description: >-
            Optional. Flag for running WAF token assessment. If enabled, the
            token must be specified, and have been created by a WAF-enabled key.
        token:
          type: string
          description: >-
            Optional. The user response token provided by the reCAPTCHA
            Enterprise client-side integration on your site.
        siteKey:
          type: string
          description: >-
            Optional. The site key that was used to invoke reCAPTCHA Enterprise
            on your site and generate the token.
        expectedAction:
          type: string
          description: >-
            Optional. The expected action for this type of event. This should be
            the same action provided at token generation time on client-side
            platforms already integrated with recaptcha enterprise.
        express:
          type: boolean
          description: >-
            Optional. Flag for a reCAPTCHA express request for an assessment
            without a token. If enabled, `site_key` must reference a SCORE key
            with WAF feature set to EXPRESS.
        hashedAccountId:
          format: byte
          type: string
          description: >-
            Optional. Unique stable hashed user identifier for the request. The
            identifier must be hashed using hmac-sha256 with stable secret.
        headers:
          description: Optional. HTTP header information about the request.
          items:
            type: string
          type: array
        userIpAddress:
          type: string
          description: >-
            Optional. The IP address in the request from the user's device
            related to this event.
        ja3:
          type: string
          description: Optional. Optional JA3 fingerprint for SSL clients.
        requestedUri:
          type: string
          description: >-
            Optional. The URI resource the user requested that triggered an
            assessment.
        userAgent:
          type: string
          description: >-
            Optional. The user agent present in the request from the user's
            device related to this event.
      id: GoogleCloudRecaptchaenterpriseV1Event
    GoogleCloudRecaptchaenterpriseV1RiskAnalysis:
      description: Risk analysis result for an event.
      id: GoogleCloudRecaptchaenterpriseV1RiskAnalysis
      properties:
        extendedVerdictReasons:
          type: array
          items:
            type: string
          description: >-
            Extended verdict reasons to be used for experimentation only. The
            set of possible reasons is subject to change.
        reasons:
          items:
            enumDescriptions:
              - Default unspecified type.
              - Interactions matched the behavior of an automated agent.
              - The event originated from an illegitimate environment.
              - Traffic volume from the event source is higher than normal.
              - >-
                Interactions with the site were significantly different than
                expected patterns.
              - >-
                Too little traffic has been received from this site thus far to
                generate quality risk analysis.
              - >-
                The request matches behavioral characteristics of a carding
                attack.
              - >-
                The request matches behavioral characteristics of chargebacks
                for fraud.
            enum:
              - CLASSIFICATION_REASON_UNSPECIFIED
              - AUTOMATION
              - UNEXPECTED_ENVIRONMENT
              - TOO_MUCH_TRAFFIC
              - UNEXPECTED_USAGE_PATTERNS
              - LOW_CONFIDENCE_SCORE
              - SUSPECTED_CARDING
              - SUSPECTED_CHARGEBACK
            type: string
          description: Reasons contributing to the risk analysis verdict.
          type: array
        score:
          type: number
          format: float
          description: >-
            Legitimate event score from 0.0 to 1.0. (1.0 means very likely
            legitimate traffic while 0.0 means very likely non-legitimate
            traffic).
      type: object
    GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification:
      type: object
      description: Private password leak verification info.
      id: GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification
      properties:
        lookupHashPrefix:
          format: byte
          description: >-
            Optional. Exactly 26-bit prefix of the SHA-256 hash of the
            canonicalized username. It is used to look up password leaks
            associated with that hash prefix.
          type: string
        encryptedLeakMatchPrefixes:
          description: >-
            Output only. List of prefixes of the encrypted potential password
            leaks that matched the given parameters. They must be compared with
            the client-side decryption prefix of
            `reencrypted_user_credentials_hash`
          items:
            format: byte
            type: string
          type: array
          readOnly: true
        reencryptedUserCredentialsHash:
          type: string
          readOnly: true
          format: byte
          description: >-
            Output only. Corresponds to the re-encryption of the
            `encrypted_user_credentials_hash` field. It is used to match
            potential password leaks within `encrypted_leak_match_prefixes`.
        encryptedUserCredentialsHash:
          format: byte
          description: >-
            Optional. Encrypted Scrypt hash of the canonicalized
            username+password. It is re-encrypted by the server and returned
            through `reencrypted_user_credentials_hash`.
          type: string
    GoogleCloudRecaptchaenterpriseV1IOSKeySettings:
      properties:
        appleDeveloperId:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1AppleDeveloperId
          description: >-
            Apple Developer account details for the app that is protected by the
            reCAPTCHA Key. reCAPTCHA Enterprise leverages platform-specific
            checks like Apple App Attest and Apple DeviceCheck to protect your
            app from abuse. Providing these fields allows reCAPTCHA Enterprise
            to get a better assessment of the integrity of your app.
        allowedBundleIds:
          items:
            type: string
          description: >-
            iOS bundle ids of apps allowed to use the key. Example:
            'com.companyname.productname.appname'
          type: array
        allowAllBundleIds:
          description: If set to true, allowed_bundle_ids are not enforced.
          type: boolean
      description: Settings specific to keys that can be used by iOS apps.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1IOSKeySettings
    GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict:
      description: >-
        Information about stolen instrument fraud, where the user is not the
        legitimate owner of the instrument being used for the purchase.
      properties:
        risk:
          format: float
          description: >-
            Probability (0-1) of this transaction being executed with a stolen
            instrument.
          type: number
      id: >-
        GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict
      type: object
    GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict:
      description: >-
        Information about card testing fraud, where an adversary is testing
        fraudulently obtained cards or brute forcing their details.
      type: object
      properties:
        risk:
          type: number
          format: float
          description: >-
            Probability (0-1) of this transaction attempt being part of a card
            testing attack.
      id: >-
        GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict
    GoogleCloudRecaptchaenterpriseV1TokenProperties:
      description: Properties of the provided event token.
      type: object
      properties:
        valid:
          type: boolean
          description: >-
            Whether the provided user response token is valid. When valid =
            false, the reason could be specified in invalid_reason or it could
            also be due to a user failing to solve a challenge or a sitekey
            mismatch (i.e the sitekey used to generate the token was different
            than the one specified in the assessment).
        hostname:
          type: string
          description: >-
            The hostname of the page on which the token was generated (Web keys
            only).
        action:
          type: string
          description: Action name provided at token generation.
        createTime:
          description: The timestamp corresponding to the generation of the token.
          type: string
          format: google-datetime
        androidPackageName:
          type: string
          description: >-
            The name of the Android package with which the token was generated
            (Android keys only).
        iosBundleId:
          description: >-
            The ID of the iOS bundle with which the token was generated (iOS
            keys only).
          type: string
        invalidReason:
          type: string
          enumDescriptions:
            - Default unspecified type.
            - If the failure reason was not accounted for.
            - The provided user verification token was malformed.
            - The user verification token had expired.
            - The user verification had already been seen.
            - The user verification token was not present.
            - >-
              A retriable error (such as network failure) occurred on the
              browser. Could easily be simulated by an attacker.
          description: Reason associated with the response when valid = false.
          enum:
            - INVALID_REASON_UNSPECIFIED
            - UNKNOWN_INVALID_REASON
            - MALFORMED
            - EXPIRED
            - DUPE
            - MISSING
            - BROWSER_ERROR
      id: GoogleCloudRecaptchaenterpriseV1TokenProperties
    GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse:
      description: The response to a `ListRelatedAccountGroups` call.
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        relatedAccountGroups:
          type: array
          description: The groups of related accounts listed by the query.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup
      id: GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse
    GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo:
      description: Information about account verification, used for identity verification.
      type: object
      properties:
        latestVerificationResult:
          type: string
          enumDescriptions:
            - No information about the latest account verification.
            - >-
              The user was successfully verified. This means the account
              verification challenge was successfully completed.
            - The user failed the verification challenge.
            - >-
              The site is not properly onboarded to use the account verification
              feature.
            - >-
              The recipient is not allowed for account verification. This can
              occur during integration but should not occur in production.
            - >-
              The recipient has already been sent too many verification codes in
              a short amount of time.
            - >-
              The verification flow could not be completed due to a critical
              internal error.
            - >-
              The client has exceeded their two factor request quota for this
              period of time.
            - >-
              The request cannot be processed at the time because of an
              incident. This bypass can be restricted to a problematic
              destination email domain, a customer, or could affect the entire
              service.
            - >-
              The request parameters do not match with the token provided and
              cannot be processed.
          description: Output only. Result of the latest account verification challenge.
          enum:
            - RESULT_UNSPECIFIED
            - SUCCESS_USER_VERIFIED
            - ERROR_USER_NOT_VERIFIED
            - ERROR_SITE_ONBOARDING_INCOMPLETE
            - ERROR_RECIPIENT_NOT_ALLOWED
            - ERROR_RECIPIENT_ABUSE_LIMIT_EXHAUSTED
            - ERROR_CRITICAL_INTERNAL
            - ERROR_CUSTOMER_QUOTA_EXHAUSTED
            - ERROR_VERIFICATION_BYPASSED
            - ERROR_VERDICT_MISMATCH
          readOnly: true
        username:
          description: >-
            Username of the account that is being verified. Deprecated.
            Customers should now provide the hashed account ID field in Event.
          type: string
        endpoints:
          description: Endpoints that can be used for identity verification.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo
        languageCode:
          type: string
          description: >-
            Language code preference for the verification message, set as a IETF
            BCP 47 language code.
      id: GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo
    GoogleCloudRecaptchaenterpriseV1WafSettings:
      type: object
      id: GoogleCloudRecaptchaenterpriseV1WafSettings
      description: >-
        Settings specific to keys that can be used for WAF (Web Application
        Firewall).
      properties:
        wafService:
          type: string
          enumDescriptions:
            - Undefined WAF
            - Cloud Armor
            - Fastly
          enum:
            - WAF_SERVICE_UNSPECIFIED
            - CA
            - FASTLY
          description: Required. The WAF service that uses this key.
        wafFeature:
          type: string
          description: Required. The WAF feature for which this key is enabled.
          enum:
            - WAF_FEATURE_UNSPECIFIED
            - CHALLENGE_PAGE
            - SESSION_TOKEN
            - ACTION_TOKEN
            - EXPRESS
          enumDescriptions:
            - Undefined feature.
            - Redirects suspicious traffic to reCAPTCHA.
            - >-
              Use reCAPTCHA session-tokens to protect the whole user session on
              the site's domain.
            - Use reCAPTCHA action-tokens to protect user actions.
            - >-
              Use reCAPTCHA WAF express protection to protect any content other
              than web pages, like APIs and IoT devices.
    GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment:
      properties:
        cardTestingVerdict:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict
          description: >-
            Assessment of this transaction for risk of being part of a card
            testing attack.
        stolenInstrumentVerdict:
          description: Assessment of this transaction for risk of a stolen instrument.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict
        transactionRisk:
          format: float
          description: >-
            Probability (0-1) of this transaction being fraudulent. Summarizes
            the combined risk of attack vectors below.
          type: number
        behavioralTrustVerdict:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentBehavioralTrustVerdict
          description: Assessment of this transaction for behavioral trust.
      description: Assessment for Fraud Prevention.
      id: GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment
      type: object
    GoogleCloudRecaptchaenterpriseV1TransactionEvent:
      id: GoogleCloudRecaptchaenterpriseV1TransactionEvent
      type: object
      properties:
        reason:
          description: >-
            Optional. The reason or standardized code that corresponds with this
            transaction event, if one exists. For example, a CHARGEBACK event
            with code 6005.
          type: string
        value:
          description: >-
            Optional. The value that corresponds with this transaction event, if
            one exists. For example, a refund event where $5.00 was refunded.
            Currency is obtained from the original transaction data.
          format: double
          type: number
        eventTime:
          format: google-datetime
          description: >-
            Optional. Timestamp when this transaction event occurred; otherwise
            assumed to be the time of the API call.
          type: string
        eventType:
          description: Optional. The type of this transaction event.
          enumDescriptions:
            - Default, unspecified event type.
            - >-
              Indicates that the transaction is approved by the merchant. The
              accompanying reasons can include terms such as 'INHOUSE',
              'ACCERTIFY', 'CYBERSOURCE', or 'MANUAL_REVIEW'.
            - >-
              Indicates that the transaction is denied and concluded due to
              risks detected by the merchant. The accompanying reasons can
              include terms such as 'INHOUSE', 'ACCERTIFY', 'CYBERSOURCE', or
              'MANUAL_REVIEW'.
            - >-
              Indicates that the transaction is being evaluated by a human, due
              to suspicion or risk.
            - >-
              Indicates that the authorization attempt with the card issuer
              succeeded.
            - >-
              Indicates that the authorization attempt with the card issuer
              failed. The accompanying reasons can include Visa's '54'
              indicating that the card is expired, or '82' indicating that the
              CVV is incorrect.
            - >-
              Indicates that the transaction is completed because the funds were
              settled.
            - >-
              Indicates that the transaction could not be completed because the
              funds were not settled.
            - >-
              Indicates that the transaction has been canceled. Specify the
              reason for the cancellation. For example,
              'INSUFFICIENT_INVENTORY'.
            - >-
              Indicates that the merchant has received a chargeback inquiry due
              to fraud for the transaction, requesting additional information
              before a fraud chargeback is officially issued and a formal
              chargeback notification is sent.
            - >-
              Indicates that the merchant has received a chargeback alert due to
              fraud for the transaction. The process of resolving the dispute
              without involving the payment network is started.
            - >-
              Indicates that a fraud notification is issued for the transaction,
              sent by the payment instrument's issuing bank because the
              transaction appears to be fraudulent. We recommend including TC40
              or SAFE data in the `reason` field for this event type. For
              partial chargebacks, we recommend that you include an amount in
              the `value` field.
            - >-
              Indicates that the merchant is informed by the payment network
              that the transaction has entered the chargeback process due to
              fraud. Reason code examples include Discover's '6005' and '6041'.
              For partial chargebacks, we recommend that you include an amount
              in the `value` field.
            - >-
              Indicates that the transaction has entered the chargeback process
              due to fraud, and that the merchant has chosen to enter
              representment. Reason examples include Discover's '6005' and
              '6041'. For partial chargebacks, we recommend that you include an
              amount in the `value` field.
            - >-
              Indicates that the transaction has had a fraud chargeback which
              was illegitimate and was reversed as a result. For partial
              chargebacks, we recommend that you include an amount in the
              `value` field.
            - >-
              Indicates that the merchant has received a refund for a completed
              transaction. For partial refunds, we recommend that you include an
              amount in the `value` field. Reason example: 'TAX_EXEMPT' (partial
              refund of exempt tax)
            - >-
              Indicates that the merchant has received a refund request for this
              transaction, but that they have declined it. For partial refunds,
              we recommend that you include an amount in the `value` field.
              Reason example: 'TAX_EXEMPT' (partial refund of exempt tax)
            - >-
              Indicates that the completed transaction was refunded by the
              merchant. For partial refunds, we recommend that you include an
              amount in the `value` field. Reason example: 'TAX_EXEMPT' (partial
              refund of exempt tax)
            - >-
              Indicates that the completed transaction was refunded by the
              merchant, and that this refund was reversed. For partial refunds,
              we recommend that you include an amount in the `value` field.
          enum:
            - TRANSACTION_EVENT_TYPE_UNSPECIFIED
            - MERCHANT_APPROVE
            - MERCHANT_DENY
            - MANUAL_REVIEW
            - AUTHORIZATION
            - AUTHORIZATION_DECLINE
            - PAYMENT_CAPTURE
            - PAYMENT_CAPTURE_DECLINE
            - CANCEL
            - CHARGEBACK_INQUIRY
            - CHARGEBACK_ALERT
            - FRAUD_NOTIFICATION
            - CHARGEBACK
            - CHARGEBACK_REPRESENTMENT
            - CHARGEBACK_REVERSE
            - REFUND_REQUEST
            - REFUND_DECLINE
            - REFUND
            - REFUND_REVERSE
          type: string
      description: Describes an event in the lifecycle of a payment transaction.
    GoogleCloudRecaptchaenterpriseV1FirewallPolicy:
      properties:
        condition:
          type: string
          description: >-
            A CEL (Common Expression Language) conditional expression that
            specifies if this policy applies to an incoming user request. If
            this condition evaluates to true and the requested path matched the
            path pattern, the associated actions should be executed by the
            caller. The condition string is checked for CEL syntax correctness
            on creation. For more information, see the [CEL
            spec](https://github.com/google/cel-spec) and its [language
            definition](https://github.com/google/cel-spec/blob/master/doc/langdef.md).
            A condition has a max length of 500 characters.
        name:
          description: >-
            The resource name for the FirewallPolicy in the format
            "projects/{project}/firewallpolicies/{firewallpolicy}".
          type: string
        description:
          type: string
          description: >-
            A description of what this policy aims to achieve, for convenience
            purposes. The description can at most include 256 UTF-8 characters.
        path:
          type: string
          description: >-
            The path for which this policy applies, specified as a glob pattern.
            For more information on glob, see the [manual
            page](https://man7.org/linux/man-pages/man7/glob.7.html). A path has
            a max length of 200 characters.
        actions:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallAction
          type: array
          description: >-
            The actions that the caller should take regarding user access. There
            should be at most one terminal action. A terminal action is any
            action that forces a response, such as AllowAction, BlockAction or
            SubstituteAction. Zero or more non-terminal actions such as
            SetHeader might be specified. A single policy can contain up to 16
            actions.
      description: >-
        A FirewallPolicy represents a single matching pattern and resulting
        actions to take.
      id: GoogleCloudRecaptchaenterpriseV1FirewallPolicy
      type: object
    GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup:
      properties:
        name:
          type: string
          description: >-
            Required. The resource name for the related account group in the
            format
            `projects/{project}/relatedaccountgroups/{related_account_group}`.
      id: GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup
      description: A group of related accounts.
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment:
      properties:
        firewallPolicy:
          description: >-
            Output only. The policy that matched the request. If more than one
            policy may match, this is the first match. If no policy matches the
            incoming request, the policy field will be left empty.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy'
          readOnly: true
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            If the processing of a policy config fails, an error will be
            populated and the firewall_policy will be left empty.
      id: GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment
      description: Policy config assessment.
      type: object
    GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse:
      description: The response to a `ListRelatedAccountGroupMemberships` call.
      id: >-
        GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        relatedAccountGroupMemberships:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership
          description: The memberships listed by the query.
      type: object
    GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest:
      properties:
        skipBillingCheck:
          description: >-
            Optional. If true, skips the billing check. A reCAPTCHA Enterprise
            key or migrated key behaves differently than a reCAPTCHA
            (non-Enterprise version) key when you reach a quota limit (see
            https://cloud.google.com/recaptcha-enterprise/quotas#quota_limit).
            To avoid any disruption of your usage, we check that a billing
            account is present. If your usage of reCAPTCHA is under the free
            quota, you can safely skip the billing check and proceed with the
            migration. See
            https://cloud.google.com/recaptcha-enterprise/docs/billing-information.
          type: boolean
      description: The migrate key request message.
      type: object
      id: GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest
    GoogleCloudRecaptchaenterpriseV1Key:
      id: GoogleCloudRecaptchaenterpriseV1Key
      type: object
      properties:
        displayName:
          type: string
          description: Human-readable display name of this key. Modifiable by user.
        labels:
          type: object
          description: See Creating and managing labels.
          additionalProperties:
            type: string
        androidSettings:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1AndroidKeySettings
          description: Settings for keys that can be used by Android apps.
        webSettings:
          description: Settings for keys that can be used by websites.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1WebKeySettings'
        iosSettings:
          description: Settings for keys that can be used by iOS apps.
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1IOSKeySettings'
        testingOptions:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1TestingOptions'
          description: Options for user acceptance testing.
        name:
          description: >-
            The resource name for the Key in the format
            "projects/{project}/keys/{key}".
          type: string
        wafSettings:
          description: Settings for WAF
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1WafSettings'
        createTime:
          description: >-
            Output only. The timestamp corresponding to the creation of this
            key.
          format: google-datetime
          type: string
          readOnly: true
      description: >-
        A key used to identify and configure applications (web and/or mobile)
        that use reCAPTCHA Enterprise.
    GoogleCloudRecaptchaenterpriseV1TransactionDataGatewayInfo:
      id: GoogleCloudRecaptchaenterpriseV1TransactionDataGatewayInfo
      type: object
      properties:
        avsResponseCode:
          description: >-
            AVS response code from the gateway (available only when reCAPTCHA
            Enterprise is called after authorization).
          type: string
        name:
          type: string
          description: Name of the gateway service (for example, stripe, square, paypal).
        gatewayResponseCode:
          type: string
          description: Gateway response code describing the state of the transaction.
        cvvResponseCode:
          description: >-
            CVV response code from the gateway (available only when reCAPTCHA
            Enterprise is called after authorization).
          type: string
      description: Details about the transaction from the gateway.
    GoogleRpcStatus:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      properties:
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
        code:
          type: integer
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
      id: GoogleRpcStatus
    GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest:
      id: >-
        GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest
      type: object
      properties:
        pageSize:
          type: integer
          format: int32
          description: >-
            Optional. The maximum number of groups to return. The service might
            return fewer than this value. If unspecified, at most 50 groups are
            returned. The maximum value is 1000; values above 1000 are coerced
            to 1000.
        hashedAccountId:
          type: string
          description: >-
            Optional. The unique stable hashed user identifier used to search
            connections. The identifier should correspond to a
            `hashed_account_id` provided in a previous `CreateAssessment` or
            `AnnotateAssessment` call.
          format: byte
        pageToken:
          type: string
          description: >-
            Optional. A page token, received from a previous
            `SearchRelatedAccountGroupMemberships` call. Provide this to
            retrieve the subsequent page. When paginating, all other parameters
            provided to `SearchRelatedAccountGroupMemberships` must match the
            call that provided the page token.
      description: The request message to search related account group memberships.
    GoogleCloudRecaptchaenterpriseV1ChallengeMetrics:
      id: GoogleCloudRecaptchaenterpriseV1ChallengeMetrics
      type: object
      properties:
        pageloadCount:
          description: >-
            Count of reCAPTCHA checkboxes or badges rendered. This is mostly
            equivalent to a count of pageloads for pages that include reCAPTCHA.
          format: int64
          type: string
        nocaptchaCount:
          description: >-
            Count of nocaptchas (successful verification without a challenge)
            issued.
          format: int64
          type: string
        failedCount:
          description: >-
            Count of submitted challenge solutions that were incorrect or
            otherwise deemed suspicious such that a subsequent challenge was
            triggered.
          format: int64
          type: string
        passedCount:
          type: string
          format: int64
          description: >-
            Count of nocaptchas (successful verification without a challenge)
            plus submitted challenge solutions that were correct and resulted in
            verification.
      description: Metrics related to challenges.
    GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction:
      type: object
      description: >-
        A block action serves an HTTP error code a prevents the request from
        hitting the backend.
      id: GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction
      properties: {}
    GoogleCloudRecaptchaenterpriseV1ScoreMetrics:
      type: object
      description: Metrics related to scoring.
      id: GoogleCloudRecaptchaenterpriseV1ScoreMetrics
      properties:
        overallMetrics:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreDistribution
          description: Aggregated score metrics for all traffic.
        actionMetrics:
          type: object
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreDistribution
          description: >-
            Action-based metrics. The map key is the action name which specified
            by the site owners at time of the "execute" client-side call.
    GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentBehavioralTrustVerdict:
      id: >-
        GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentBehavioralTrustVerdict
      properties:
        trust:
          description: >-
            Probability (0-1) of this transaction attempt being executed in a
            behaviorally trustworthy way.
          format: float
          type: number
      description: Information about behavioral trust of the transaction.
      type: object
    GoogleCloudRecaptchaenterpriseV1TransactionDataUser:
      properties:
        accountId:
          type: string
          description: >-
            Unique account identifier for this user. If using account defender,
            this should match the hashed_account_id field. Otherwise, a unique
            and persistent identifier for this account.
        emailVerified:
          description: >-
            Whether the email has been verified to be accessible by the user
            (OTP or similar).
          type: boolean
        phoneNumber:
          description: The phone number of the user, with country code.
          type: string
        email:
          type: string
          description: The email address of the user.
        creationMs:
          type: string
          description: The epoch milliseconds of the user's account creation.
          format: int64
        phoneVerified:
          type: boolean
          description: >-
            Whether the phone number has been verified to be accessible by the
            user (OTP or similar).
      description: Details about a user's account involved in the transaction.
      id: GoogleCloudRecaptchaenterpriseV1TransactionDataUser
      type: object
    GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction:
      type: object
      description: >-
        A substitute action transparently serves a different page than the one
        requested.
      properties:
        path:
          description: >-
            The address to redirect to. The target is a relative path in the
            current host. Example: "/blog/404.html".
          type: string
      id: GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction
    GoogleCloudRecaptchaenterpriseV1ListFirewallPoliciesResponse:
      properties:
        firewallPolicies:
          type: array
          description: Policy details.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy
        nextPageToken:
          description: >-
            Token to retrieve the next page of results. It is set to empty if no
            policies remain in results.
          type: string
      id: GoogleCloudRecaptchaenterpriseV1ListFirewallPoliciesResponse
      type: object
      description: Response to request to list firewall policies belonging to a key.
    GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction:
      type: object
      description: >-
        A set header action sets a header and forwards the request to the
        backend. This can be used to trigger custom protection implemented on
        the backend.
      properties:
        key:
          type: string
          description: The header key to set in the request to the backend server.
        value:
          type: string
          description: The header value to set in the request to the backend server.
      id: GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction
    GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction:
      properties: {}
      type: object
      id: GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction
      description: >-
        A redirect action returns a 307 (temporary redirect) response, pointing
        the user to a ReCaptcha interstitial page to attach a token.
    GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse:
      id: GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse
      description: Empty response for AnnotateAssessment.
      properties: {}
      type: object
    GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse:
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        relatedAccountGroupMemberships:
          description: The queried memberships.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership
      type: object
      description: The response to a `SearchRelatedAccountGroupMemberships` call.
      id: >-
        GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse
    GoogleCloudRecaptchaenterpriseV1WebKeySettings:
      properties:
        allowedDomains:
          description: >-
            Domains or subdomains of websites allowed to use the key. All
            subdomains of an allowed domain are automatically allowed. A valid
            domain requires a host and must not include any path, port, query or
            fragment. Examples: 'example.com' or 'subdomain.example.com'
          items:
            type: string
          type: array
        allowAmpTraffic:
          type: boolean
          description: >-
            If set to true, the key can be used on AMP (Accelerated Mobile
            Pages) websites. This is supported only for the SCORE integration
            type.
        allowAllDomains:
          type: boolean
          description: If set to true, it means allowed_domains will not be enforced.
        integrationType:
          enumDescriptions:
            - >-
              Default type that indicates this enum hasn't been specified. This
              is not a valid IntegrationType, one of the other types must be
              specified instead.
            - >-
              Only used to produce scores. It doesn't display the "I'm not a
              robot" checkbox and never shows captcha challenges.
            - >-
              Displays the "I'm not a robot" checkbox and may show captcha
              challenges after it is checked.
            - >-
              Doesn't display the "I'm not a robot" checkbox, but may show
              captcha challenges after risk analysis.
          type: string
          description: Required. Describes how this key is integrated with the website.
          enum:
            - INTEGRATION_TYPE_UNSPECIFIED
            - SCORE
            - CHECKBOX
            - INVISIBLE
        challengeSecurityPreference:
          enum:
            - CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED
            - USABILITY
            - BALANCE
            - SECURITY
          description: >-
            Settings for the frequency and difficulty at which this key triggers
            captcha challenges. This should only be specified for
            IntegrationTypes CHECKBOX and INVISIBLE.
          enumDescriptions:
            - Default type that indicates this enum hasn't been specified.
            - Key tends to show fewer and easier challenges.
            - Key tends to show balanced (in amount and difficulty) challenges.
            - Key tends to show more and harder challenges.
          type: string
      id: GoogleCloudRecaptchaenterpriseV1WebKeySettings
      type: object
      description: Settings specific to keys that can be used by websites.
    GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest:
      properties:
        hashedAccountId:
          format: byte
          description: >-
            Optional. Unique stable hashed user identifier to apply to the
            assessment. This is an alternative to setting the hashed_account_id
            in CreateAssessment, for example when the account identifier is not
            yet known in the initial request. It is recommended that the
            identifier is hashed using hmac-sha256 with stable secret.
          type: string
        reasons:
          items:
            enum:
              - REASON_UNSPECIFIED
              - CHARGEBACK
              - CHARGEBACK_FRAUD
              - CHARGEBACK_DISPUTE
              - REFUND
              - REFUND_FRAUD
              - TRANSACTION_ACCEPTED
              - TRANSACTION_DECLINED
              - PAYMENT_HEURISTICS
              - INITIATED_TWO_FACTOR
              - PASSED_TWO_FACTOR
              - FAILED_TWO_FACTOR
              - CORRECT_PASSWORD
              - INCORRECT_PASSWORD
              - SOCIAL_SPAM
            type: string
            enumDescriptions:
              - Default unspecified reason.
              - >-
                Indicates that the transaction had a chargeback issued with no
                other details. When possible, specify the type by using
                CHARGEBACK_FRAUD or CHARGEBACK_DISPUTE instead.
              - >-
                Indicates that the transaction had a chargeback issued related
                to an alleged unauthorized transaction from the cardholder's
                perspective (for example, the card number was stolen).
              - >-
                Indicates that the transaction had a chargeback issued related
                to the cardholder having provided their card details but
                allegedly not being satisfied with the purchase (for example,
                misrepresentation, attempted cancellation).
              - >-
                Indicates that the completed payment transaction was refunded by
                the seller.
              - >-
                Indicates that the completed payment transaction was determined
                to be fraudulent by the seller, and was cancelled and refunded
                as a result.
              - >-
                Indicates that the payment transaction was accepted, and the
                user was charged.
              - >-
                Indicates that the payment transaction was declined, for example
                due to invalid card details.
              - >-
                Indicates the transaction associated with the assessment is
                suspected of being fraudulent based on the payment method,
                billing details, shipping address or other transaction
                information.
              - >-
                Indicates that the user was served a 2FA challenge. An old
                assessment with `ENUM_VALUES.INITIATED_TWO_FACTOR` reason that
                has not been overwritten with `PASSED_TWO_FACTOR` is treated as
                an abandoned 2FA flow. This is equivalent to
                `FAILED_TWO_FACTOR`.
              - Indicates that the user passed a 2FA challenge.
              - Indicates that the user failed a 2FA challenge.
              - Indicates the user provided the correct password.
              - Indicates the user provided an incorrect password.
              - >-
                Indicates that the user sent unwanted and abusive messages to
                other users of the platform, such as spam, scams, phishing, or
                social engineering.
          description: >-
            Optional. Optional reasons for the annotation that will be assigned
            to the Event.
          type: array
        transactionEvent:
          description: >-
            Optional. If the assessment is part of a payment transaction,
            provide details on payment lifecycle events that occur in the
            transaction.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1TransactionEvent
        annotation:
          enum:
            - ANNOTATION_UNSPECIFIED
            - LEGITIMATE
            - FRAUDULENT
            - PASSWORD_CORRECT
            - PASSWORD_INCORRECT
          enumDescriptions:
            - Default unspecified type.
            - Provides information that the event turned out to be legitimate.
            - Provides information that the event turned out to be fraudulent.
            - >-
              Provides information that the event was related to a login event
              in which the user typed the correct password. Deprecated, prefer
              indicating CORRECT_PASSWORD through the reasons field instead.
            - >-
              Provides information that the event was related to a login event
              in which the user typed the incorrect password. Deprecated, prefer
              indicating INCORRECT_PASSWORD through the reasons field instead.
          description: >-
            Optional. The annotation that will be assigned to the Event. This
            field can be left empty to provide reasons that apply to an event
            without concluding whether the event is legitimate or fraudulent.
          type: string
      type: object
      id: GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest
      description: The request message to annotate an Assessment.
    GoogleCloudRecaptchaenterpriseV1ListKeysResponse:
      description: Response to request to list keys in a project.
      id: GoogleCloudRecaptchaenterpriseV1ListKeysResponse
      properties:
        keys:
          type: array
          description: Key details.
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results. It is set to empty if no
            keys remain in results.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1AndroidKeySettings:
      id: GoogleCloudRecaptchaenterpriseV1AndroidKeySettings
      properties:
        allowAllPackageNames:
          type: boolean
          description: If set to true, allowed_package_names are not enforced.
        supportNonGoogleAppStoreDistribution:
          type: boolean
          description: >-
            Set to true for keys that are used in an Android application that is
            available for download in app stores in addition to the Google Play
            Store.
        allowedPackageNames:
          description: >-
            Android package names of apps allowed to use the key. Example:
            'com.companyname.appname'
          items:
            type: string
          type: array
      description: Settings specific to keys that can be used by Android apps.
      type: object
    GoogleCloudRecaptchaenterpriseV1TransactionDataItem:
      properties:
        value:
          description: >-
            The value per item that the user is paying, in the transaction
            currency, after discounts.
          format: double
          type: number
        name:
          type: string
          description: The full name of the item.
        merchantAccountId:
          description: >-
            When a merchant is specified, its corresponding account_id.
            Necessary to populate marketplace-style transactions.
          type: string
        quantity:
          format: int64
          description: The quantity of this item that is being purchased.
          type: string
      id: GoogleCloudRecaptchaenterpriseV1TransactionDataItem
      type: object
      description: Line items being purchased in this transaction.
    GoogleCloudRecaptchaenterpriseV1AppleDeveloperId:
      type: object
      id: GoogleCloudRecaptchaenterpriseV1AppleDeveloperId
      properties:
        teamId:
          description: >-
            Required. The Apple team ID (10-character string) owning the
            provisioning profile used to build your application.
          type: string
        keyId:
          type: string
          description: Required. The Apple developer key ID (10-character string).
        privateKey:
          description: >-
            Required. Input only. A private key (downloaded as a text file with
            a .p8 file extension) generated for your Apple Developer account.
            Ensure that Apple DeviceCheck is enabled for the private key.
          type: string
      description: >-
        Contains fields that are required to perform Apple-specific integrity
        checks.
    GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse:
      type: object
      properties:
        legacySecretKey:
          type: string
          description: >-
            The secret key (also known as shared secret) authorizes
            communication between your application backend and the reCAPTCHA
            Enterprise server to create an assessment. The secret key needs to
            be kept safe for security purposes.
      description: >-
        Secret key is used only in legacy reCAPTCHA. It must be used in a 3rd
        party integration with legacy reCAPTCHA.
      id: GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse
    GoogleCloudRecaptchaenterpriseV1FirewallAction:
      id: GoogleCloudRecaptchaenterpriseV1FirewallAction
      type: object
      properties:
        block:
          description: >-
            This action will deny access to a given page. The user will get an
            HTTP error code.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionBlockAction
        redirect:
          description: >-
            This action will redirect the request to a ReCaptcha interstitial to
            attach a token.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionRedirectAction
        setHeader:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionSetHeaderAction
          description: >-
            This action will set a custom header but allow the request to
            continue to the customer backend.
        allow:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction
          description: >-
            The user request did not match any policy and should be allowed
            access to the requested resource.
        substitute:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallActionSubstituteAction
          description: >-
            This action will transparently serve a different page to an
            offending user.
      description: >-
        An individual action. Each action represents what to do if a policy
        matches.
    GoogleCloudRecaptchaenterpriseV1Assessment:
      properties:
        event:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Event'
          description: The event being assessed.
        name:
          readOnly: true
          type: string
          description: >-
            Output only. The resource name for the Assessment in the format
            "projects/{project}/assessments/{assessment}".
        tokenProperties:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1TokenProperties'
          readOnly: true
          description: Output only. Properties of the provided event token.
        privatePasswordLeakVerification:
          description: >-
            The private password leak verification field contains the parameters
            that are used to to check for leaks privately without sharing user
            credentials.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification
        riskAnalysis:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1RiskAnalysis'
          description: Output only. The risk analysis result for the event being assessed.
          readOnly: true
        fraudPreventionAssessment:
          description: >-
            Assessment returned by Fraud Prevention when TransactionData is
            provided.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment
        firewallPolicyAssessment:
          description: >-
            Assessment returned when firewall policies belonging to the project
            are evaluated using the field firewall_policy_evaluation.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment
        accountVerification:
          description: >-
            Account verification information for identity verification. The
            assessment event must include a token and site key to use this
            feature.
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1AccountVerificationInfo
        accountDefenderAssessment:
          $ref: >-
            #/components/schemas/GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment
          description: >-
            Assessment returned by account defender when a hashed_account_id is
            provided.
      id: GoogleCloudRecaptchaenterpriseV1Assessment
      description: A reCAPTCHA Enterprise assessment resource.
      type: object
    GoogleCloudRecaptchaenterpriseV1Metrics:
      id: GoogleCloudRecaptchaenterpriseV1Metrics
      type: object
      properties:
        name:
          readOnly: true
          description: >-
            Output only. The name of the metrics, in the format
            "projects/{project}/keys/{key}/metrics".
          type: string
        scoreMetrics:
          description: >-
            Metrics will be continuous and in order by dates, and in the
            granularity of day. All Key types should have score-based data.
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreMetrics'
          type: array
        challengeMetrics:
          description: >-
            Metrics will be continuous and in order by dates, and in the
            granularity of day. Only challenge-based keys (CHECKBOX, INVISIBLE),
            will have challenge-based data.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudRecaptchaenterpriseV1ChallengeMetrics
        startTime:
          format: google-datetime
          type: string
          description: Inclusive start time aligned to a day (UTC).
      description: Metrics for a single Key.
    GoogleCloudRecaptchaenterpriseV1ScoreDistribution:
      id: GoogleCloudRecaptchaenterpriseV1ScoreDistribution
      description: Score distribution.
      type: object
      properties:
        scoreBuckets:
          type: object
          description: >-
            Map key is score value multiplied by 100. The scores are discrete
            values between [0, 1]. The maximum number of buckets is on order of
            a few dozen, but typically much lower (ie. 10).
          additionalProperties:
            type: string
            format: int64
    GoogleCloudRecaptchaenterpriseV1TransactionDataAddress:
      description: Structured address format for billing and shipping addresses.
      type: object
      properties:
        regionCode:
          type: string
          description: The CLDR country/region of the address.
        administrativeArea:
          description: >-
            The state, province, or otherwise administrative area of the
            address.
          type: string
        address:
          items:
            type: string
          description: >-
            The first lines of the address. The first line generally contains
            the street name and number, and further lines may include
            information such as an apartment number.
          type: array
        recipient:
          description: >-
            The recipient name, potentially including information such as "care
            of".
          type: string
        postalCode:
          type: string
          description: The postal or ZIP code of the address.
        locality:
          type: string
          description: The town/city of the address.
      id: GoogleCloudRecaptchaenterpriseV1TransactionDataAddress
    GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment:
      type: object
      properties:
        labels:
          description: Labels for this request.
          type: array
          items:
            type: string
            enumDescriptions:
              - Default unspecified type.
              - The request matches a known good profile for the user.
              - >-
                The request is potentially a suspicious login event and must be
                further verified either through multi-factor authentication or
                another system.
              - >-
                The request matched a profile that previously had suspicious
                account creation behavior. This can mean that this is a fake
                account.
              - >-
                The account in the request has a high number of related
                accounts. It does not necessarily imply that the account is bad
                but can require further investigation.
            enum:
              - ACCOUNT_DEFENDER_LABEL_UNSPECIFIED
              - PROFILE_MATCH
              - SUSPICIOUS_LOGIN_ACTIVITY
              - SUSPICIOUS_ACCOUNT_CREATION
              - RELATED_ACCOUNTS_NUMBER_HIGH
      description: Account defender risk assessment.
      id: GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment
    GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction:
      description: An allow action continues processing a request unimpeded.
      id: GoogleCloudRecaptchaenterpriseV1FirewallActionAllowAction
      properties: {}
      type: object
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/projects/{projectsId}/keys:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: Creates a new reCAPTCHA Enterprise key.
      operationId: recaptchaenterprise.projects.keys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: insert
    get:
      description: Returns the list of all keys that belong to a project.
      operationId: recaptchaenterprise.projects.keys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1ListKeysResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: keys
      x-stackQL-verb: select
  /v1/projects/{projectsId}/keys/{keysId}/metrics:
    parameters: *ref_1
    get:
      description: >-
        Get some aggregated metrics for a Key. This data can be used to build
        dashboards.
      operationId: recaptchaenterprise.projects.keys.getMetrics
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Metrics'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys__metrics
      x-stackQL-verb: select
  /v1/projects/{projectsId}/keys/{keysId}:migrate:
    parameters: *ref_1
    post:
      description: >-
        Migrates an existing key from reCAPTCHA to reCAPTCHA Enterprise. Once a
        key is migrated, it can be used from either product. SiteVerify requests
        are billed as CreateAssessment calls. You must be authenticated as one
        of the current owners of the reCAPTCHA Key, and your user must have the
        reCAPTCHA Enterprise Admin IAM role in the destination project.
      operationId: recaptchaenterprise.projects.keys.migrate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/keys/{keysId}:
    parameters: *ref_1
    delete:
      description: Deletes the specified key.
      operationId: recaptchaenterprise.projects.keys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: delete
    patch:
      description: Updates the specified key.
      operationId: recaptchaenterprise.projects.keys.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: exec
    get:
      description: Returns the specified key.
      operationId: recaptchaenterprise.projects.keys.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: select
  /v1/projects/{projectsId}/keys/{keysId}:retrieveLegacySecretKey:
    parameters: *ref_1
    get:
      description: >-
        Returns the secret key related to the specified public key. You must use
        the legacy secret key only in a 3rd party integration with legacy
        reCAPTCHA.
      operationId: recaptchaenterprise.projects.keys.retrieveLegacySecretKey
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys__legacy_secret_key
      x-stackQL-verb: select
  /v1/projects/{projectsId}/firewallpolicies:
    parameters: *ref_1
    get:
      description: Returns the list of all firewall policies that belong to a project.
      operationId: recaptchaenterprise.projects.firewallpolicies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1ListFirewallPoliciesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: firewallpolicies
      x-stackQL-verb: select
    post:
      description: >-
        Creates a new FirewallPolicy, specifying conditions at which reCAPTCHA
        Enterprise actions can be executed. A project may have a maximum of 1000
        policies.
      operationId: recaptchaenterprise.projects.firewallpolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: firewallpolicies
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/firewallpolicies/{firewallpoliciesId}:
    parameters: *ref_1
    delete:
      description: Deletes the specified firewall policy.
      operationId: recaptchaenterprise.projects.firewallpolicies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: firewallpoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: firewallpolicies
      x-stackQL-verb: delete
    get:
      description: Returns the specified firewall policy.
      operationId: recaptchaenterprise.projects.firewallpolicies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: firewallpoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: firewallpolicies
      x-stackQL-verb: select
    patch:
      description: Updates the specified firewall policy.
      operationId: recaptchaenterprise.projects.firewallpolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1FirewallPolicy
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: firewallpoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: firewallpolicies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/assessments:
    parameters: *ref_1
    post:
      description: Creates an Assessment of the likelihood an event is legitimate.
      operationId: recaptchaenterprise.projects.assessments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Assessment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1Assessment
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assessments
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/assessments/{assessmentsId}:annotate:
    parameters: *ref_1
    post:
      description: >-
        Annotates a previously created Assessment to provide additional
        information on whether the event turned out to be authentic or
        fraudulent.
      operationId: recaptchaenterprise.projects.assessments.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assessments
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/relatedaccountgroupmemberships:search:
    parameters: *ref_1
    post:
      description: Search group memberships related to a given account.
      operationId: recaptchaenterprise.projects.relatedaccountgroupmemberships.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: relatedaccountgroupmemberships
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/relatedaccountgroups/{relatedaccountgroupsId}/memberships:
    parameters: *ref_1
    get:
      description: Get memberships in a group of related accounts.
      operationId: recaptchaenterprise.projects.relatedaccountgroups.memberships.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: relatedaccountgroupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: memberships
      x-stackQL-verb: select
  /v1/projects/{projectsId}/relatedaccountgroups:
    parameters: *ref_1
    get:
      description: List groups of related accounts.
      operationId: recaptchaenterprise.projects.relatedaccountgroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: relatedaccountgroups
      x-stackQL-verb: select
