openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Connectors API
  description: >-
    Enables users to create and manage connections to Google Cloud services and
    third-party business applications using the Connectors interface.
  version: v1
  x-discovery-doc-revision: '20230614'
  x-generated-date: '2023-06-25'
externalDocs:
  url: >-
    https://cloud.google.com/apigee/docs/api-platform/connectors/about-connectors
servers:
  - url: https://connectors.googleapis.com
components:
  schemas:
    ConfigVariableTemplate:
      type: object
      properties:
        state:
          enumDescriptions:
            - Status is unspecified.
            - Config variable is active
            - Config variable is deprecated.
          description: State of the config variable.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DEPRECATED
        requiredCondition:
          $ref: '#/components/schemas/LogicalExpression'
          description: >-
            Condition under which a field would be required. The condition can
            be represented in the form of a logical expression.
        roleGrant:
          description: Role grant configuration for the config variable.
          $ref: '#/components/schemas/RoleGrant'
        isAdvanced:
          type: boolean
          description: Indicates if current template is part of advanced settings
        description:
          type: string
          description: Description.
        key:
          description: Key of the config variable.
          type: string
        displayName:
          type: string
          description: Display name of the parameter.
        validationRegex:
          type: string
          description: >-
            Regular expression in RE2 syntax used for validating the `value` of
            a `ConfigVariable`.
        required:
          type: boolean
          description: >-
            Flag represents that this `ConfigVariable` must be provided for a
            connection.
        enumOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOption'
          description: Enum options. To be populated if `ValueType` is `ENUM`
        authorizationCodeLink:
          $ref: '#/components/schemas/AuthorizationCodeLink'
          description: >-
            Authorization code link options. To be populated if `ValueType` is
            `AUTHORIZATION_CODE`
        valueType:
          enumDescriptions:
            - Value type is not specified.
            - Value type is string.
            - Value type is integer.
            - Value type is boolean.
            - Value type is secret.
            - Value type is enum.
            - Value type is authorization code.
            - Encryption Key.
          description: >-
            Type of the parameter: string, int, bool etc. consider custom type
            for the benefit for the validation.
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - STRING
            - INT
            - BOOL
            - SECRET
            - ENUM
            - AUTHORIZATION_CODE
            - ENCRYPTION_KEY
          type: string
      id: ConfigVariableTemplate
      description: >-
        ConfigVariableTemplate provides metadata about a `ConfigVariable` that
        is used in a Connection.
    Connection:
      id: Connection
      description: Connection represents an instance of connector.
      type: object
      properties:
        authConfig:
          $ref: '#/components/schemas/AuthConfig'
          description: >-
            Optional. Configuration for establishing the connection's
            authentication with an external system.
        subscriptionType:
          enumDescriptions:
            - Unspecified subscription type.
            - PayG subscription.
            - Paid Subscription.
          description: >-
            Output only. This subscription type enum states the subscription
            type of the project.
          readOnly: true
          enum:
            - SUBSCRIPTION_TYPE_UNSPECIFIED
            - PAY_G
            - PAID
          type: string
        imageLocation:
          description: >-
            Output only. GCR location where the runtime image is stored.
            formatted like: gcr.io/{bucketName}/{imageName}
          readOnly: true
          type: string
        logConfig:
          $ref: '#/components/schemas/ConnectorsLogConfig'
          description: Optional. Log configuration for the connection.
        connectorVersionLaunchStage:
          description: Output only. Flag to mark the version indicating the launch stage.
          type: string
          enumDescriptions:
            - LAUNCH_STAGE_UNSPECIFIED.
            - PREVIEW.
            - GA.
            - DEPRECATED.
            - PRIVATE_PREVIEW.
          readOnly: true
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - PREVIEW
            - GA
            - DEPRECATED
            - PRIVATE_PREVIEW
        suspended:
          type: boolean
          description: >-
            Optional. Suspended indicates if a user has suspended a connection
            or not.
        lockConfig:
          description: >-
            Optional. Configuration that indicates whether or not the Connection
            can be edited.
          $ref: '#/components/schemas/LockConfig'
        serviceDirectory:
          type: string
          readOnly: true
          description: >-
            Output only. The name of the Service Directory service name. Used
            for Private Harpoon to resolve the ILB address. e.g.
            "projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors"
        createTime:
          description: Output only. Created time.
          type: string
          format: google-datetime
          readOnly: true
        connectionRevision:
          description: >-
            Output only. Connection revision. This field is only updated when
            the connection is created or updated by User.
          type: string
          readOnly: true
          format: int64
        nodeConfig:
          $ref: '#/components/schemas/NodeConfig'
          description: Optional. Node configuration for the connection.
        envoyImageLocation:
          description: >-
            Output only. GCR location where the envoy image is stored. formatted
            like: gcr.io/{bucketName}/{imageName}
          readOnly: true
          type: string
        updateTime:
          description: Output only. Updated time.
          readOnly: true
          format: google-datetime
          type: string
        status:
          description: Output only. Current status of the connection.
          $ref: '#/components/schemas/ConnectionStatus'
          readOnly: true
        name:
          readOnly: true
          type: string
          description: >-
            Output only. Resource name of the Connection. Format:
            projects/{project}/locations/{location}/connections/{connection}
        labels:
          description: >-
            Optional. Resource labels to represent user-provided metadata. Refer
            to cloud documentation on labels for more details.
            https://cloud.google.com/compute/docs/labeling-resources
          type: object
          additionalProperties:
            type: string
        connectorVersion:
          type: string
          description: >-
            Required. Connector version on which the connection is created. The
            format is:
            projects/*/locations/*/providers/*/connectors/*/versions/* Only
            global location is supported for ConnectorVersion resource.
        description:
          description: Optional. Description of the resource.
          type: string
        serviceAccount:
          description: >-
            Optional. Service account needed for runtime plane to access GCP
            resources.
          type: string
        configVariables:
          items:
            $ref: '#/components/schemas/ConfigVariable'
          type: array
          description: >-
            Optional. Configuration for configuring the connection with an
            external system.
        sslConfig:
          $ref: '#/components/schemas/SslConfig'
          description: Optional. Ssl config of a connection
        destinationConfigs:
          items:
            $ref: '#/components/schemas/DestinationConfig'
          description: >-
            Optional. Configuration of the Connector's destination. Only
            accepted for Connectors that accepts user defined destination(s).
          type: array
    SshPublicKey:
      properties:
        username:
          type: string
          description: The user account used to authenticate.
        sshClientCert:
          description: SSH Client Cert. It should contain both public and private key.
          $ref: '#/components/schemas/Secret'
        sshClientCertPass:
          description: Password (passphrase) for ssh client certificate if it has one.
          $ref: '#/components/schemas/Secret'
        certType:
          description: Format of SSH Client cert.
          type: string
      description: Parameters to support Ssh public key Authentication.
      id: SshPublicKey
      type: object
    ListOperationsResponse:
      id: ListOperationsResponse
      type: object
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
    AuditConfig:
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          type: array
      type: object
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      id: AuditConfig
    OperationMetadata:
      id: OperationMetadata
      properties:
        statusMessage:
          readOnly: true
          description: Output only. Human-readable status of the operation, if any.
          type: string
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          type: boolean
          readOnly: true
        target:
          readOnly: true
          type: string
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
      description: Represents the metadata of the long-running operation.
      type: object
    RefreshConnectionSchemaMetadataRequest:
      id: RefreshConnectionSchemaMetadataRequest
      description: Request message for ConnectorsService.RefreshConnectionSchemaMetadata.
      type: object
      properties: {}
    Secret:
      properties:
        secretVersion:
          type: string
          description: >-
            The resource name of the secret version in the format, format as:
            `projects/*/secrets/*/versions/*`.
      description: Secret provides a reference to entries in Secret Manager.
      id: Secret
      type: object
    UserPassword:
      properties:
        username:
          type: string
          description: Username.
        password:
          $ref: '#/components/schemas/Secret'
          description: Secret version reference containing the password.
      id: UserPassword
      type: object
      description: Parameters to support Username and Password Authentication.
    SslConfig:
      id: SslConfig
      description: SSL Configuration of a connection
      type: object
      properties:
        clientCertificate:
          description: Client Certificate
          $ref: '#/components/schemas/Secret'
        useSsl:
          type: boolean
          description: Bool for enabling SSL
        serverCertType:
          description: Type of Server Cert (PEM/JKS/.. etc.)
          enum:
            - CERT_TYPE_UNSPECIFIED
            - PEM
          enumDescriptions:
            - Cert type unspecified.
            - Privacy Enhanced Mail (PEM) Type
          type: string
        trustModel:
          enum:
            - PUBLIC
            - PRIVATE
            - INSECURE
          enumDescriptions:
            - Public Trust Model. Takes the Default Java trust store.
            - Private Trust Model. Takes custom/private trust store.
            - Insecure Trust Model. Accept all certificates.
          description: Trust Model of the SSL connection
          type: string
        additionalVariables:
          type: array
          description: Additional SSL related field values
          items:
            $ref: '#/components/schemas/ConfigVariable'
        privateServerCertificate:
          $ref: '#/components/schemas/Secret'
          description: >-
            Private Server Certificate. Needs to be specified if trust model is
            `PRIVATE`.
        type:
          enum:
            - SSL_TYPE_UNSPECIFIED
            - TLS
            - MTLS
          enumDescriptions:
            - No SSL configuration required.
            - TLS Handshake
            - mutual TLS (MTLS) Handshake
          type: string
          description: Controls the ssl type for the given connector version.
        clientPrivateKeyPass:
          $ref: '#/components/schemas/Secret'
          description: Secret containing the passphrase protecting the Client Private Key
        clientPrivateKey:
          $ref: '#/components/schemas/Secret'
          description: Client Private Key
        clientCertType:
          description: Type of Client Cert (PEM/JKS/.. etc.)
          enum:
            - CERT_TYPE_UNSPECIFIED
            - PEM
          type: string
          enumDescriptions:
            - Cert type unspecified.
            - Privacy Enhanced Mail (PEM) Type
    ConnectorVersion:
      type: object
      properties:
        authConfigTemplates:
          type: array
          readOnly: true
          description: >-
            Output only. List of auth configs supported by the Connector
            Version.
          items:
            $ref: '#/components/schemas/AuthConfigTemplate'
        roleGrants:
          description: Output only. Role grant configurations for this connector version.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RoleGrant'
        sslConfigTemplate:
          $ref: '#/components/schemas/SslConfigTemplate'
          description: Output only. Ssl configuration supported by the Connector.
          readOnly: true
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Created time.
        egressControlConfig:
          $ref: '#/components/schemas/EgressControlConfig'
          readOnly: true
          description: Output only. Configuration for Egress Control.
        displayName:
          description: Output only. Display name.
          type: string
          readOnly: true
        destinationConfigTemplates:
          readOnly: true
          items:
            $ref: '#/components/schemas/DestinationConfigTemplate'
          description: >-
            Output only. List of destination configs needed to create a
            connection.
          type: array
        configVariableTemplates:
          description: Output only. List of config variables needed to create a connection.
          items:
            $ref: '#/components/schemas/ConfigVariableTemplate'
          readOnly: true
          type: array
        releaseVersion:
          description: >-
            Output only. ReleaseVersion of the connector, for example:
            "1.0.1-alpha".
          type: string
          readOnly: true
        updateTime:
          type: string
          format: google-datetime
          description: Output only. Updated time.
          readOnly: true
        launchStage:
          enumDescriptions:
            - LAUNCH_STAGE_UNSPECIFIED.
            - PREVIEW.
            - GA.
            - DEPRECATED.
            - PRIVATE_PREVIEW.
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - PREVIEW
            - GA
            - DEPRECATED
            - PRIVATE_PREVIEW
          description: Output only. Flag to mark the version indicating the launch stage.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            Output only. Resource labels to represent user-provided metadata.
            Refer to cloud documentation on labels for more details.
            https://cloud.google.com/compute/docs/labeling-resources
          type: object
          readOnly: true
        roleGrant:
          $ref: '#/components/schemas/RoleGrant'
          readOnly: true
          description: >-
            Output only. Role grant configuration for this config variable. It
            will be DEPRECATED soon.
        supportedRuntimeFeatures:
          description: >-
            Output only. Information about the runtime features supported by the
            Connector.
          readOnly: true
          $ref: '#/components/schemas/SupportedRuntimeFeatures'
        name:
          readOnly: true
          description: >-
            Output only. Resource name of the Version. Format:
            projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version}
            Only global location is supported for Connector resource.
          type: string
      id: ConnectorVersion
      description: ConnectorVersion indicates a specific version of a connector.
    AuthorizationCodeLink:
      type: object
      properties:
        uri:
          description: >-
            The base URI the user must click to trigger the authorization code
            login flow.
          type: string
        clientId:
          description: >-
            The client ID assigned to the GCP Connectors OAuth app for the
            connector data source.
          type: string
        scopes:
          type: array
          description: >-
            The scopes for which the user will authorize GCP Connectors on the
            connector data source.
          items:
            type: string
        enablePkce:
          type: boolean
          description: Whether to enable PKCE for the auth code flow.
      description: >-
        This configuration captures the details required to render an
        authorization link for the OAuth Authorization Code Flow.
      id: AuthorizationCodeLink
    RuntimeConfig:
      type: object
      description: >-
        RuntimeConfig is the singleton resource of each location. It includes
        generic resource configs consumed by control plane and runtime plane
        like: pub/sub topic/subscription resource name, Cloud Storage location
        storing schema etc.
      id: RuntimeConfig
      properties:
        conndTopic:
          type: string
          description: >-
            Output only. Pub/Sub topic for connd to send message. E.g.
            projects/{project-id}/topics/{topic-id}
          readOnly: true
        controlPlaneSubscription:
          readOnly: true
          type: string
          description: >-
            Output only. Pub/Sub subscription for control plane to receive
            message. E.g. projects/{project-id}/subscriptions/{topic-id}
        serviceDirectory:
          readOnly: true
          type: string
          description: Output only. The name of the Service Directory service name.
        schemaGcsBucket:
          type: string
          description: >-
            Output only. The Cloud Storage bucket that stores connector's schema
            reports.
          readOnly: true
        runtimeEndpoint:
          description: Output only. The endpoint of the connectors runtime ingress.
          type: string
          readOnly: true
        conndSubscription:
          readOnly: true
          description: >-
            Output only. Pub/Sub subscription for connd to receive message. E.g.
            projects/{project-id}/subscriptions/{topic-id}
          type: string
        locationId:
          readOnly: true
          type: string
          description: Output only. location_id of the runtime location. E.g. "us-west1".
        name:
          readOnly: true
          description: >-
            Output only. Name of the runtimeConfig resource. Format:
            projects/{project}/locations/{location}/runtimeConfig
          type: string
        controlPlaneTopic:
          readOnly: true
          type: string
          description: >-
            Output only. Pub/Sub topic for control plne to send message.
            communication. E.g. projects/{project-id}/topics/{topic-id}
        state:
          enum:
            - STATE_UNSPECIFIED
            - INACTIVE
            - ACTIVATING
            - ACTIVE
            - CREATING
            - DELETING
            - UPDATING
          enumDescriptions:
            - STATE_UNSPECIFIED.
            - INACTIVE.
            - ACTIVATING.
            - ACTIVE.
            - CREATING.
            - DELETING.
            - UPDATING.
          description: Output only. The state of the location.
          type: string
          readOnly: true
    SupportedRuntimeFeatures:
      id: SupportedRuntimeFeatures
      description: >-
        Supported runtime features of a connector version. This is passed to the
        management layer to add a new connector version by the connector
        developer. Details about how this proto is passed to the management
        layer is covered in this doc - go/runtime-manifest.
      type: object
      properties:
        entityApis:
          type: boolean
          description: Specifies if the connector supports entity apis like 'createEntity'.
        actionApis:
          type: boolean
          description: >-
            Specifies if the connector supports action apis like
            'executeAction'.
        sqlQuery:
          type: boolean
          description: Specifies if the connector supports 'ExecuteSqlQuery' operation.
    ExtractionRules:
      properties:
        extractionRule:
          items:
            $ref: '#/components/schemas/ExtractionRule'
          description: Collection of Extraction Rule.
          type: array
      type: object
      id: ExtractionRules
      description: >-
        Extraction Rules to identity the backends from customer provided
        configuration in Connection resource.
    RoleGrant:
      type: object
      description: >-
        This configuration defines all the Cloud IAM roles that needs to be
        granted to a particular GCP resource for the selected principal like
        service account. These configurations will let UI display to customers
        what IAM roles need to be granted by them. Or these configurations can
        be used by the UI to render a 'grant' button to do the same on behalf of
        the user.
      properties:
        helperTextTemplate:
          type: string
          description: Template that UI can use to provide helper text to customers.
        roles:
          type: array
          items:
            type: string
          description: List of roles that need to be granted.
        resource:
          $ref: '#/components/schemas/Resource'
          description: Resource on which the roles needs to be granted for the principal.
        principal:
          enumDescriptions:
            - Value type is not specified.
            - >-
              Service Account used for Connector workload identity This is
              either the default service account if unspecified or Service
              Account provided by Customers through BYOSA.
          type: string
          enum:
            - PRINCIPAL_UNSPECIFIED
            - CONNECTOR_SA
          description: Prinicipal/Identity for whom the role need to assigned.
      id: RoleGrant
    Source:
      type: object
      properties:
        sourceType:
          enumDescriptions:
            - Default SOURCE.
            - Config Variable source type.
          description: Type of the source.
          type: string
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - CONFIG_VARIABLE
        fieldId:
          description: Field identifier. For example config vaiable name.
          type: string
      id: Source
      description: Source to extract the backend from.
    ConnectionSchemaMetadata:
      properties:
        refreshTime:
          readOnly: true
          type: string
          description: >-
            Output only. Timestamp when the connection runtime schema refresh
            was triggered.
          format: google-datetime
        state:
          enumDescriptions:
            - Default state.
            - Schema refresh is in progress.
            - Schema has been updated.
          readOnly: true
          description: Output only. The current state of runtime schema.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - REFRESHING
            - UPDATED
        entities:
          description: Output only. List of entity names.
          items:
            type: string
          type: array
          readOnly: true
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: >-
            Output only. Timestamp when the connection runtime schema was
            updated.
        name:
          readOnly: true
          type: string
          description: >-
            Output only. Resource name. Format:
            projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
        actions:
          type: array
          readOnly: true
          items:
            type: string
          description: Output only. List of actions.
      type: object
      description: >-
        ConnectionSchemaMetadata is the singleton resource of each connection.
        It includes the entity and action names of runtime resources exposed by
        a connection backend.
      id: ConnectionSchemaMetadata
    EnumOption:
      properties:
        displayName:
          type: string
          description: Display name of the option.
        id:
          type: string
          description: Id of the option.
      type: object
      description: EnumOption definition
      id: EnumOption
    ManagedZone:
      type: object
      id: ManagedZone
      description: represents the Connector's Managed Zone resource
      properties:
        description:
          type: string
          description: Optional. Description of the resource.
        createTime:
          readOnly: true
          type: string
          description: Output only. Created time.
          format: google-datetime
        name:
          readOnly: true
          type: string
          description: >-
            Output only. Resource name of the Managed Zone. Format:
            projects/{project}/locations/global/managedZones/{managed_zone}
        labels:
          description: >-
            Optional. Resource labels to represent user-provided metadata. Refer
            to cloud documentation on labels for more details.
            https://cloud.google.com/compute/docs/labeling-resources
          type: object
          additionalProperties:
            type: string
        dns:
          description: Required. DNS Name of the resource
          type: string
        targetVpc:
          type: string
          description: Required. The name of the Target Project VPC Network
        targetProject:
          type: string
          description: Required. The name of the Target Project
        updateTime:
          description: Output only. Updated time.
          readOnly: true
          format: google-datetime
          type: string
    ListConnectorsResponse:
      id: ListConnectorsResponse
      properties:
        nextPageToken:
          type: string
          description: Next page token.
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        connectors:
          type: array
          items:
            $ref: '#/components/schemas/Connector'
          description: A list of connectors.
      type: object
      description: Response message for Connectors.ListConnectors.
    LockConfig:
      type: object
      properties:
        reason:
          description: Describes why a connection is locked.
          type: string
        locked:
          description: Indicates whether or not the connection is locked.
          type: boolean
      description: >-
        Determines whether or no a connection is locked. If locked, a reason
        must be specified.
      id: LockConfig
    InputParameter:
      properties:
        description:
          type: string
          description: A brief description of the Parameter.
        dataType:
          description: The data type of the Parameter.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - DATA_TYPE_INT
            - DATA_TYPE_SMALLINT
            - DATA_TYPE_DOUBLE
            - DATA_TYPE_DATE
            - DATA_TYPE_DATETIME
            - DATA_TYPE_TIME
            - DATA_TYPE_STRING
            - DATA_TYPE_LONG
            - DATA_TYPE_BOOLEAN
            - DATA_TYPE_DECIMAL
            - DATA_TYPE_UUID
            - DATA_TYPE_BLOB
            - DATA_TYPE_BIT
            - DATA_TYPE_TINYINT
            - DATA_TYPE_INTEGER
            - DATA_TYPE_BIGINT
            - DATA_TYPE_FLOAT
            - DATA_TYPE_REAL
            - DATA_TYPE_NUMERIC
            - DATA_TYPE_CHAR
            - DATA_TYPE_VARCHAR
            - DATA_TYPE_LONGVARCHAR
            - DATA_TYPE_TIMESTAMP
            - DATA_TYPE_NCHAR
            - DATA_TYPE_NVARCHAR
            - DATA_TYPE_LONGNVARCHAR
            - DATA_TYPE_NULL
            - DATA_TYPE_OTHER
            - DATA_TYPE_JAVA_OBJECT
            - DATA_TYPE_DISTINCT
            - DATA_TYPE_STRUCT
            - DATA_TYPE_ARRAY
            - DATA_TYPE_CLOB
            - DATA_TYPE_REF
            - DATA_TYPE_DATALINK
            - DATA_TYPE_ROWID
            - DATA_TYPE_BINARY
            - DATA_TYPE_VARBINARY
            - DATA_TYPE_LONGVARBINARY
            - DATA_TYPE_NCLOB
            - DATA_TYPE_SQLXML
            - DATA_TYPE_REF_CURSOR
            - DATA_TYPE_TIME_WITH_TIMEZONE
            - DATA_TYPE_TIMESTAMP_WITH_TIMEZONE
          enumDescriptions:
            - Data type is not specified.
            - DEPRECATED! Use DATA_TYPE_INTEGER.
            - Short integer(int16) data type.
            - Double data type.
            - Date data type.
            - DEPRECATED! Use DATA_TYPE_TIMESTAMP.
            - Time data type.
            - DEPRECATED! Use DATA_TYPE_VARCHAR.
            - DEPRECATED! Use DATA_TYPE_BIGINT.
            - Boolean data type.
            - Decimal data type.
            - DEPRECATED! Use DATA_TYPE_VARCHAR.
            - UNSUPPORTED! Binary data type.
            - Bit data type.
            - Small integer(int8) data type.
            - Integer(int32) data type.
            - Long integer(int64) data type.
            - Float data type.
            - Real data type.
            - Numeric data type.
            - Char data type.
            - Varchar data type.
            - Longvarchar data type.
            - Timestamp data type.
            - Nchar data type.
            - Nvarchar data type.
            - Longnvarchar data type.
            - Null data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Row id data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Variable binary data type.
            - UNSUPPORTED! Long variable binary data type.
            - UNSUPPORTED! NCLOB data type.
            - UNSUPPORTED! SQL XML data type is not supported.
            - UNSUPPORTED! Cursor reference type is not supported.
            - UNSUPPORTED! Use TIME or TIMESTAMP instead.
            - UNSUPPORTED! Use TIMESTAMP instead.
          type: string
        nullable:
          type: boolean
          description: Specifies whether a null value is allowed.
        parameter:
          type: string
          description: Name of the Parameter.
        defaultValue:
          type: any
          description: >-
            The following field specifies the default value of the Parameter
            provided by the external system if a value is not provided.
      type: object
      description: Metadata of an input parameter.
      id: InputParameter
    ListRuntimeEntitySchemasResponse:
      properties:
        runtimeEntitySchemas:
          items:
            $ref: '#/components/schemas/RuntimeEntitySchema'
          description: Runtime entity schemas.
          type: array
        nextPageToken:
          type: string
          description: Next page token.
      id: ListRuntimeEntitySchemasResponse
      description: Response message for ConnectorsService.ListRuntimeEntitySchemas.
      type: object
    ListConnectionsResponse:
      type: object
      description: Response message for ConnectorsService.ListConnections
      properties:
        nextPageToken:
          description: Next page token.
          type: string
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        connections:
          items:
            $ref: '#/components/schemas/Connection'
          description: Connections.
          type: array
      id: ListConnectionsResponse
    RuntimeActionSchema:
      type: object
      id: RuntimeActionSchema
      properties:
        resultMetadata:
          items:
            $ref: '#/components/schemas/ResultMetadata'
          type: array
          readOnly: true
          description: Output only. List of result field metadata.
        inputParameters:
          type: array
          description: Output only. List of input parameter metadata for the action.
          items:
            $ref: '#/components/schemas/InputParameter'
          readOnly: true
        action:
          type: string
          description: Output only. Name of the action.
          readOnly: true
      description: Schema of a runtime action.
    Operation:
      id: Operation
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          type: object
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
    Field:
      description: Metadata of an entity field.
      type: object
      properties:
        dataType:
          type: string
          description: The data type of the Field.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - DATA_TYPE_INT
            - DATA_TYPE_SMALLINT
            - DATA_TYPE_DOUBLE
            - DATA_TYPE_DATE
            - DATA_TYPE_DATETIME
            - DATA_TYPE_TIME
            - DATA_TYPE_STRING
            - DATA_TYPE_LONG
            - DATA_TYPE_BOOLEAN
            - DATA_TYPE_DECIMAL
            - DATA_TYPE_UUID
            - DATA_TYPE_BLOB
            - DATA_TYPE_BIT
            - DATA_TYPE_TINYINT
            - DATA_TYPE_INTEGER
            - DATA_TYPE_BIGINT
            - DATA_TYPE_FLOAT
            - DATA_TYPE_REAL
            - DATA_TYPE_NUMERIC
            - DATA_TYPE_CHAR
            - DATA_TYPE_VARCHAR
            - DATA_TYPE_LONGVARCHAR
            - DATA_TYPE_TIMESTAMP
            - DATA_TYPE_NCHAR
            - DATA_TYPE_NVARCHAR
            - DATA_TYPE_LONGNVARCHAR
            - DATA_TYPE_NULL
            - DATA_TYPE_OTHER
            - DATA_TYPE_JAVA_OBJECT
            - DATA_TYPE_DISTINCT
            - DATA_TYPE_STRUCT
            - DATA_TYPE_ARRAY
            - DATA_TYPE_CLOB
            - DATA_TYPE_REF
            - DATA_TYPE_DATALINK
            - DATA_TYPE_ROWID
            - DATA_TYPE_BINARY
            - DATA_TYPE_VARBINARY
            - DATA_TYPE_LONGVARBINARY
            - DATA_TYPE_NCLOB
            - DATA_TYPE_SQLXML
            - DATA_TYPE_REF_CURSOR
            - DATA_TYPE_TIME_WITH_TIMEZONE
            - DATA_TYPE_TIMESTAMP_WITH_TIMEZONE
          enumDescriptions:
            - Data type is not specified.
            - DEPRECATED! Use DATA_TYPE_INTEGER.
            - Short integer(int16) data type.
            - Double data type.
            - Date data type.
            - DEPRECATED! Use DATA_TYPE_TIMESTAMP.
            - Time data type.
            - DEPRECATED! Use DATA_TYPE_VARCHAR.
            - DEPRECATED! Use DATA_TYPE_BIGINT.
            - Boolean data type.
            - Decimal data type.
            - DEPRECATED! Use DATA_TYPE_VARCHAR.
            - UNSUPPORTED! Binary data type.
            - Bit data type.
            - Small integer(int8) data type.
            - Integer(int32) data type.
            - Long integer(int64) data type.
            - Float data type.
            - Real data type.
            - Numeric data type.
            - Char data type.
            - Varchar data type.
            - Longvarchar data type.
            - Timestamp data type.
            - Nchar data type.
            - Nvarchar data type.
            - Longnvarchar data type.
            - Null data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Row id data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Variable binary data type.
            - UNSUPPORTED! Long variable binary data type.
            - UNSUPPORTED! NCLOB data type.
            - UNSUPPORTED! SQL XML data type is not supported.
            - UNSUPPORTED! Cursor reference type is not supported.
            - UNSUPPORTED! Use TIME or TIMESTAMP instead.
            - UNSUPPORTED! Use TIMESTAMP instead.
        readonly:
          type: boolean
          description: Specifies if the Field is readonly.
        defaultValue:
          type: any
          description: >-
            The following field specifies the default value of the Field
            provided by the external system if a value is not provided.
        nullable:
          description: Specifies whether a null value is allowed.
          type: boolean
        key:
          type: boolean
          description: >-
            The following boolean field specifies if the current Field acts as a
            primary key or id if the parent is of type entity.
        description:
          description: A brief description of the Field.
          type: string
        additionalDetails:
          type: object
          description: >-
            The following map contains fields that are not explicitly mentioned
            above,this give connectors the flexibility to add new metadata
            fields.
          additionalProperties:
            description: Properties of the object.
            type: any
        field:
          type: string
          description: Name of the Field.
      id: Field
    SetIamPolicyRequest:
      properties:
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          format: google-fieldmask
          type: string
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
      description: Request message for `SetIamPolicy` method.
      id: SetIamPolicyRequest
      type: object
    ConnectionStatus:
      type: object
      id: ConnectionStatus
      description: ConnectionStatus indicates the state of the connection.
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - INACTIVE
            - DELETING
            - UPDATING
            - ERROR
            - AUTHORIZATION_REQUIRED
          type: string
          enumDescriptions:
            - Connection does not have a state yet.
            - Connection is being created.
            - Connection is running and ready for requests.
            - Connection is stopped.
            - Connection is being deleted.
            - Connection is being updated.
            - Connection is not running due to an error.
            - >-
              Connection is not running because the authorization configuration
              is not complete.
          description: State.
        status:
          type: string
          description: Status provides detailed information for the state.
        description:
          type: string
          description: Description.
    DestinationConfig:
      properties:
        key:
          description: >-
            The key is the destination identifier that is supported by the
            Connector.
          type: string
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/Destination'
          description: The destinations for the key.
      id: DestinationConfig
      description: Define the Connectors target endpoint.
      type: object
    Oauth2ClientCredentials:
      description: >-
        Parameters to support Oauth 2.0 Client Credentials Grant Authentication.
        See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
      id: Oauth2ClientCredentials
      type: object
      properties:
        clientSecret:
          $ref: '#/components/schemas/Secret'
          description: Secret version reference containing the client secret.
        clientId:
          type: string
          description: The client identifier.
    AuthConfig:
      id: AuthConfig
      description: AuthConfig defines details of a authentication type.
      properties:
        oauth2AuthCodeFlow:
          $ref: '#/components/schemas/Oauth2AuthCodeFlow'
          description: Oauth2AuthCodeFlow.
        sshPublicKey:
          description: SSH Public Key.
          $ref: '#/components/schemas/SshPublicKey'
        authKey:
          description: Identifier key for auth config
          type: string
        additionalVariables:
          type: array
          description: List containing additional auth configs.
          items:
            $ref: '#/components/schemas/ConfigVariable'
        oauth2JwtBearer:
          description: Oauth2JwtBearer.
          $ref: '#/components/schemas/Oauth2JwtBearer'
        userPassword:
          $ref: '#/components/schemas/UserPassword'
          description: UserPassword.
        authType:
          enumDescriptions:
            - Authentication type not specified.
            - Username and Password Authentication.
            - >-
              JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant
              based authentication
            - Oauth 2.0 Client Credentials Grant Authentication
            - SSH Public Key Authentication
            - Oauth 2.0 Authorization Code Flow
          description: The type of authentication configured.
          type: string
          enum:
            - AUTH_TYPE_UNSPECIFIED
            - USER_PASSWORD
            - OAUTH2_JWT_BEARER
            - OAUTH2_CLIENT_CREDENTIALS
            - SSH_PUBLIC_KEY
            - OAUTH2_AUTH_CODE_FLOW
        oauth2ClientCredentials:
          $ref: '#/components/schemas/Oauth2ClientCredentials'
          description: Oauth2ClientCredentials.
      type: object
    EncryptionKey:
      id: EncryptionKey
      type: object
      properties:
        type:
          enumDescriptions:
            - Value type is not specified.
            - Google Managed.
            - Customer Managed.
          description: Type.
          enum:
            - TYPE_UNSPECIFIED
            - GOOGLE_MANAGED
            - CUSTOMER_MANAGED
          type: string
        kmsKeyName:
          description: >-
            The [KMS key name] with which the content of the Operation is
            encrypted. The expected format:
            `projects/*/locations/*/keyRings/*/cryptoKeys/*`. Will be empty
            string if google managed.
          type: string
      description: Encryption Key value.
    ListProvidersResponse:
      id: ListProvidersResponse
      properties:
        providers:
          items:
            $ref: '#/components/schemas/Provider'
          description: A list of providers.
          type: array
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        nextPageToken:
          type: string
          description: Next page token.
      type: object
      description: Response message for Connectors.ListProviders.
    Connector:
      properties:
        labels:
          description: >-
            Output only. Resource labels to represent user-provided metadata.
            Refer to cloud documentation on labels for more details.
            https://cloud.google.com/compute/docs/labeling-resources
          type: object
          additionalProperties:
            type: string
          readOnly: true
        externalUri:
          description: Output only. Link to external page.
          readOnly: true
          type: string
        webAssetsLocation:
          type: string
          description: Output only. Cloud storage location of icons etc consumed by UI.
          readOnly: true
        name:
          description: >-
            Output only. Resource name of the Connector. Format:
            projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}
            Only global location is supported for Connector resource.
          readOnly: true
          type: string
        launchStage:
          type: string
          readOnly: true
          enumDescriptions:
            - LAUNCH_STAGE_UNSPECIFIED.
            - PREVIEW.
            - GA.
            - DEPRECATED.
            - PRIVATE_PREVIEW.
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - PREVIEW
            - GA
            - DEPRECATED
            - PRIVATE_PREVIEW
          description: Output only. Flag to mark the version indicating the launch stage.
        documentationUri:
          description: Output only. Link to documentation page.
          type: string
          readOnly: true
        displayName:
          readOnly: true
          description: Output only. Display name.
          type: string
        createTime:
          description: Output only. Created time.
          type: string
          readOnly: true
          format: google-datetime
        description:
          readOnly: true
          description: Output only. Description of the resource.
          type: string
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. Updated time.
          type: string
      id: Connector
      description: >-
        Connectors indicates a specific connector type, e.x. Salesforce, SAP
        etc.
      type: object
    FieldComparison:
      description: Field that needs to be compared.
      id: FieldComparison
      type: object
      properties:
        stringValue:
          type: string
          description: String value
        comparator:
          description: Comparator to use for comparing the field value.
          enum:
            - COMPARATOR_UNSPECIFIED
            - EQUALS
            - NOT_EQUALS
          type: string
          enumDescriptions:
            - The default value.
            - The field value must be equal to the specified value.
            - The field value must not be equal to the specified value.
        boolValue:
          description: Boolean value
          type: boolean
        key:
          description: Key of the field.
          type: string
        intValue:
          type: string
          description: Integer value
          format: int64
    TestIamPermissionsRequest:
      properties:
        permissions:
          items:
            type: string
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
      type: object
      description: Request message for `TestIamPermissions` method.
      id: TestIamPermissionsRequest
    ListConnectorVersionsResponse:
      description: Response message for Connectors.ListConnectorVersions.
      properties:
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        nextPageToken:
          type: string
          description: Next page token.
        connectorVersions:
          items:
            $ref: '#/components/schemas/ConnectorVersion'
          type: array
          description: A list of connector versions.
      type: object
      id: ListConnectorVersionsResponse
    EndpointAttachment:
      properties:
        updateTime:
          format: google-datetime
          description: Output only. Updated time.
          type: string
          readOnly: true
        name:
          type: string
          description: >-
            Output only. Resource name of the Endpoint Attachment. Format:
            projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}
          readOnly: true
        createTime:
          description: Output only. Created time.
          type: string
          format: google-datetime
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: >-
            Optional. Resource labels to represent user-provided metadata. Refer
            to cloud documentation on labels for more details.
            https://cloud.google.com/compute/docs/labeling-resources
          type: object
        serviceAttachment:
          type: string
          description: Required. The path of the service attachment
        endpointIp:
          description: Output only. The Private Service Connect connection endpoint ip
          type: string
          readOnly: true
        description:
          description: Optional. Description of the resource.
          type: string
      id: EndpointAttachment
      type: object
      description: represents the Connector's Endpoint Attachment resource
    EgressControlConfig:
      description: >-
        Egress control config for connector runtime. These configurations define
        the rules to identify which outbound domains/hosts needs to be
        whitelisted. It may be a static information for a particular connector
        version or it is derived from the configurations provided by the
        customer in Connection resource.
      properties:
        extractionRules:
          description: >-
            Extractions Rules to extract the backends from customer provided
            configuration.
          $ref: '#/components/schemas/ExtractionRules'
        backends:
          type: string
          description: >-
            Static Comma separated backends which are common for all Connection
            resources. Supported formats for each backend are host:port or just
            host (host can be ip address or domain name).
      id: EgressControlConfig
      type: object
    Resource:
      properties:
        pathTemplate:
          type: string
          description: >-
            Template to uniquely represent a GCP resource in a format IAM
            expects This is a template that can have references to other values
            provided in the config variable template.
        type:
          description: Different types of resource supported.
          enumDescriptions:
            - Value type is not specified.
            - GCP Project Resource.
            - Any GCP Resource which is identified uniquely by IAM.
            - GCP Secret Resource.
            - GCP Secret Version Resource.
          enum:
            - TYPE_UNSPECIFIED
            - GCP_PROJECT
            - GCP_RESOURCE
            - GCP_SECRETMANAGER_SECRET
            - GCP_SECRETMANAGER_SECRET_VERSION
          type: string
      id: Resource
      description: Resource definition
      type: object
    ListEndpointAttachmentsResponse:
      type: object
      description: Response message for ConnectorsService.ListEndpointAttachments
      id: ListEndpointAttachmentsResponse
      properties:
        endpointAttachments:
          description: EndpointAttachments.
          type: array
          items:
            $ref: '#/components/schemas/EndpointAttachment'
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        nextPageToken:
          description: Next page token.
          type: string
    DestinationConfigTemplate:
      properties:
        max:
          format: int32
          description: The maximum number of destinations supported for this key.
          type: integer
        portFieldType:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: Whether port number should be provided by customers.
          type: string
          enum:
            - FIELD_TYPE_UNSPECIFIED
            - REQUIRED
            - OPTIONAL
            - NOT_USED
        min:
          format: int32
          type: integer
          description: The minimum number of destinations supported for this key.
        defaultPort:
          format: int32
          type: integer
          description: The default port.
        displayName:
          type: string
          description: Display name of the parameter.
        key:
          type: string
          description: Key of the destination.
        description:
          description: Description.
          type: string
        isAdvanced:
          type: boolean
          description: >-
            Whether the current destination tempalate is part of Advanced
            settings
        regexPattern:
          type: string
          description: Regex pattern for host.
      description: >-
        DestinationConfigTemplate defines required destinations supported by the
        Connector.
      id: DestinationConfigTemplate
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
      id: Empty
    AuditLogConfig:
      properties:
        exemptedMembers:
          type: array
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          items:
            type: string
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      id: AuditLogConfig
    Location:
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          type: string
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        displayName:
          type: string
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          additionalProperties:
            type: string
          type: object
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      id: Location
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
          description: >-
            A list of locations that matches the specified filter in the
            request.
      id: ListLocationsResponse
      type: object
    ConfigVariable:
      description: >-
        ConfigVariable represents a configuration variable present in a
        Connection. or AuthConfig.
      type: object
      properties:
        key:
          type: string
          description: Key of the config variable.
        intValue:
          description: Value is an integer
          format: int64
          type: string
        boolValue:
          description: Value is a bool.
          type: boolean
        encryptionKeyValue:
          description: Value is a Encryption Key.
          $ref: '#/components/schemas/EncryptionKey'
        secretValue:
          $ref: '#/components/schemas/Secret'
          description: Value is a secret.
        stringValue:
          type: string
          description: Value is a string.
      id: ConfigVariable
    ConnectorsLogConfig:
      id: ConnectorsLogConfig
      description: Log configuration for the connection.
      properties:
        enabled:
          type: boolean
          description: >-
            Enabled represents whether logging is enabled or not for a
            connection.
      type: object
    Oauth2JwtBearer:
      id: Oauth2JwtBearer
      description: >-
        Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0
        Authorization Grant based authentication. See
        https://tools.ietf.org/html/rfc7523 for more details.
      type: object
      properties:
        clientKey:
          $ref: '#/components/schemas/Secret'
          description: >-
            Secret version reference containing a PKCS#8 PEM-encoded private key
            associated with the Client Certificate. This private key will be
            used to sign JWTs used for the jwt-bearer authorization grant.
            Specified in the form as: `projects/*/secrets/*/versions/*`.
        jwtClaims:
          description: JwtClaims providers fields to generate the token.
          $ref: '#/components/schemas/JwtClaims'
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      id: CancelOperationRequest
      type: object
      properties: {}
    LogicalExpression:
      description: Struct for representing boolean expressions.
      type: object
      id: LogicalExpression
      properties:
        logicalOperator:
          enum:
            - OPERATOR_UNSPECIFIED
            - AND
            - OR
          enumDescriptions:
            - The default value.
            - AND operator; The conditions must all be true.
            - OR operator; At least one of the conditions must be true.
          description: The logical operator to use between the fields and conditions.
          type: string
        logicalExpressions:
          type: array
          description: A list of nested conditions to be compared.
          items:
            $ref: '#/components/schemas/LogicalExpression'
        fieldComparisons:
          type: array
          description: A list of fields to be compared.
          items:
            $ref: '#/components/schemas/FieldComparison'
    AuthConfigTemplate:
      properties:
        description:
          description: Connector specific description for an authentication template.
          type: string
        displayName:
          description: Display name for authentication template.
          type: string
        authKey:
          type: string
          description: Identifier key for auth config
        configVariableTemplates:
          description: Config variables to describe an `AuthConfig` for a `Connection`.
          type: array
          items:
            $ref: '#/components/schemas/ConfigVariableTemplate'
        authType:
          enum:
            - AUTH_TYPE_UNSPECIFIED
            - USER_PASSWORD
            - OAUTH2_JWT_BEARER
            - OAUTH2_CLIENT_CREDENTIALS
            - SSH_PUBLIC_KEY
            - OAUTH2_AUTH_CODE_FLOW
          enumDescriptions:
            - Authentication type not specified.
            - Username and Password Authentication.
            - >-
              JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant
              based authentication
            - Oauth 2.0 Client Credentials Grant Authentication
            - SSH Public Key Authentication
            - Oauth 2.0 Authorization Code Flow
          description: The type of authentication configured.
          type: string
      description: AuthConfigTemplate defines required field over an authentication type.
      id: AuthConfigTemplate
      type: object
    NodeConfig:
      properties:
        minNodeCount:
          format: int32
          type: integer
          description: Minimum number of nodes in the runtime nodes.
        maxNodeCount:
          type: integer
          format: int32
          description: Maximum number of nodes in the runtime nodes.
      id: NodeConfig
      type: object
      description: Node configuration for the connection.
    Settings:
      id: Settings
      description: Global Settings details.
      properties:
        tenantProjectId:
          readOnly: true
          type: string
          description: Output only. Tenant project id of the consumer project.
        payg:
          description: Output only. Flag indicates if user is in PayG model
          readOnly: true
          type: boolean
        vpcsc:
          type: boolean
          description: Optional. Flag indicates whether vpc-sc is enabled.
        name:
          readOnly: true
          description: >-
            Output only. Resource name of the Connection. Format:
            projects/{project}/locations/global/settings}
          type: string
      type: object
    Binding:
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
        role:
          type: string
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`.
        members:
          type: array
          items:
            type: string
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding.
      id: Binding
    SslConfigTemplate:
      id: SslConfigTemplate
      description: Ssl config details of a connector version
      type: object
      properties:
        sslType:
          description: Controls the ssl type for the given connector version
          type: string
          enumDescriptions:
            - No SSL configuration required.
            - TLS Handshake
            - mutual TLS (MTLS) Handshake
          enum:
            - SSL_TYPE_UNSPECIFIED
            - TLS
            - MTLS
        serverCertType:
          type: array
          description: List of supported Server Cert Types
          items:
            enumDescriptions:
              - Cert type unspecified.
              - Privacy Enhanced Mail (PEM) Type
            enum:
              - CERT_TYPE_UNSPECIFIED
              - PEM
            type: string
        additionalVariables:
          type: array
          items:
            $ref: '#/components/schemas/ConfigVariableTemplate'
          description: Any additional fields that need to be rendered
        isTlsMandatory:
          description: Boolean for determining if the connector version mandates TLS.
          type: boolean
        clientCertType:
          items:
            enumDescriptions:
              - Cert type unspecified.
              - Privacy Enhanced Mail (PEM) Type
            type: string
            enum:
              - CERT_TYPE_UNSPECIFIED
              - PEM
          description: List of supported Client Cert Types
          type: array
    JwtClaims:
      properties:
        audience:
          type: string
          description: Value for the "aud" claim.
        subject:
          type: string
          description: Value for the "sub" claim.
        issuer:
          description: Value for the "iss" claim.
          type: string
      description: JWT claims used for the jwt-bearer authorization grant.
      type: object
      id: JwtClaims
    Status:
      type: object
      id: Status
      properties:
        code:
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          type: array
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
    Policy:
      id: Policy
      type: object
      properties:
        auditConfigs:
          items:
            $ref: '#/components/schemas/AuditConfig'
          type: array
          description: Specifies cloud audit logging configuration for this policy.
        version:
          type: integer
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          format: int32
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/Binding'
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          format: byte
          type: string
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
        user:mike@example.com - group:admins@example.com - domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For
        a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
    ListManagedZonesResponse:
      id: ListManagedZonesResponse
      type: object
      description: Response message for ConnectorsService.ListManagedZones
      properties:
        nextPageToken:
          description: Next page token.
          type: string
        managedZones:
          type: array
          items:
            $ref: '#/components/schemas/ManagedZone'
          description: ManagedZones.
    RuntimeEntitySchema:
      properties:
        entity:
          type: string
          description: Output only. Name of the entity.
          readOnly: true
        fields:
          description: Output only. List of fields in the entity.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
      id: RuntimeEntitySchema
      description: Schema of a runtime entity.
      type: object
    Destination:
      properties:
        host:
          type: string
          description: For publicly routable host.
        port:
          format: int32
          description: >-
            The port is the target port number that is accepted by the
            destination.
          type: integer
        serviceAttachment:
          type: string
          description: >-
            PSC service attachments. Format:
            projects/*/regions/*/serviceAttachments/*
      id: Destination
      type: object
    TestIamPermissionsResponse:
      properties:
        permissions:
          type: array
          items:
            type: string
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
      type: object
      description: Response message for `TestIamPermissions` method.
      id: TestIamPermissionsResponse
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
    Provider:
      id: Provider
      description: Provider indicates the owner who provides the connectors.
      properties:
        displayName:
          description: Output only. Display name.
          readOnly: true
          type: string
        createTime:
          type: string
          description: Output only. Created time.
          format: google-datetime
          readOnly: true
        externalUri:
          readOnly: true
          description: Output only. Link to external page.
          type: string
        launchStage:
          type: string
          enumDescriptions:
            - LAUNCH_STAGE_UNSPECIFIED.
            - PREVIEW.
            - GA.
            - DEPRECATED.
            - PRIVATE_PREVIEW.
          readOnly: true
          description: Output only. Flag to mark the version indicating the launch stage.
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - PREVIEW
            - GA
            - DEPRECATED
            - PRIVATE_PREVIEW
        webAssetsLocation:
          description: Output only. Cloud storage location of icons etc consumed by UI.
          type: string
          readOnly: true
        labels:
          additionalProperties:
            type: string
          type: object
          readOnly: true
          description: >-
            Output only. Resource labels to represent user-provided metadata.
            Refer to cloud documentation on labels for more details.
            https://cloud.google.com/compute/docs/labeling-resources
        name:
          readOnly: true
          type: string
          description: >-
            Output only. Resource name of the Provider. Format:
            projects/{project}/locations/{location}/providers/{provider} Only
            global location is supported for Provider resource.
        description:
          readOnly: true
          type: string
          description: Output only. Description of the resource.
        documentationUri:
          readOnly: true
          type: string
          description: Output only. Link to documentation page.
        updateTime:
          format: google-datetime
          type: string
          description: Output only. Updated time.
          readOnly: true
      type: object
    ResultMetadata:
      properties:
        dataType:
          enumDescriptions:
            - Data type is not specified.
            - DEPRECATED! Use DATA_TYPE_INTEGER.
            - Short integer(int16) data type.
            - Double data type.
            - Date data type.
            - DEPRECATED! Use DATA_TYPE_TIMESTAMP.
            - Time data type.
            - DEPRECATED! Use DATA_TYPE_VARCHAR.
            - DEPRECATED! Use DATA_TYPE_BIGINT.
            - Boolean data type.
            - Decimal data type.
            - DEPRECATED! Use DATA_TYPE_VARCHAR.
            - UNSUPPORTED! Binary data type.
            - Bit data type.
            - Small integer(int8) data type.
            - Integer(int32) data type.
            - Long integer(int64) data type.
            - Float data type.
            - Real data type.
            - Numeric data type.
            - Char data type.
            - Varchar data type.
            - Longvarchar data type.
            - Timestamp data type.
            - Nchar data type.
            - Nvarchar data type.
            - Longnvarchar data type.
            - Null data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Row id data type.
            - UNSUPPORTED! Binary data type.
            - UNSUPPORTED! Variable binary data type.
            - UNSUPPORTED! Long variable binary data type.
            - UNSUPPORTED! NCLOB data type.
            - UNSUPPORTED! SQL XML data type is not supported.
            - UNSUPPORTED! Cursor reference type is not supported.
            - UNSUPPORTED! Use TIME or TIMESTAMP instead.
            - UNSUPPORTED! Use TIMESTAMP instead.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - DATA_TYPE_INT
            - DATA_TYPE_SMALLINT
            - DATA_TYPE_DOUBLE
            - DATA_TYPE_DATE
            - DATA_TYPE_DATETIME
            - DATA_TYPE_TIME
            - DATA_TYPE_STRING
            - DATA_TYPE_LONG
            - DATA_TYPE_BOOLEAN
            - DATA_TYPE_DECIMAL
            - DATA_TYPE_UUID
            - DATA_TYPE_BLOB
            - DATA_TYPE_BIT
            - DATA_TYPE_TINYINT
            - DATA_TYPE_INTEGER
            - DATA_TYPE_BIGINT
            - DATA_TYPE_FLOAT
            - DATA_TYPE_REAL
            - DATA_TYPE_NUMERIC
            - DATA_TYPE_CHAR
            - DATA_TYPE_VARCHAR
            - DATA_TYPE_LONGVARCHAR
            - DATA_TYPE_TIMESTAMP
            - DATA_TYPE_NCHAR
            - DATA_TYPE_NVARCHAR
            - DATA_TYPE_LONGNVARCHAR
            - DATA_TYPE_NULL
            - DATA_TYPE_OTHER
            - DATA_TYPE_JAVA_OBJECT
            - DATA_TYPE_DISTINCT
            - DATA_TYPE_STRUCT
            - DATA_TYPE_ARRAY
            - DATA_TYPE_CLOB
            - DATA_TYPE_REF
            - DATA_TYPE_DATALINK
            - DATA_TYPE_ROWID
            - DATA_TYPE_BINARY
            - DATA_TYPE_VARBINARY
            - DATA_TYPE_LONGVARBINARY
            - DATA_TYPE_NCLOB
            - DATA_TYPE_SQLXML
            - DATA_TYPE_REF_CURSOR
            - DATA_TYPE_TIME_WITH_TIMEZONE
            - DATA_TYPE_TIMESTAMP_WITH_TIMEZONE
          type: string
          description: The data type of the field.
        description:
          type: string
          description: A brief description of the field.
        field:
          description: Name of the result field.
          type: string
      type: object
      description: Metadata of result field.
      id: ResultMetadata
    ExtractionRule:
      properties:
        extractionRegex:
          type: string
          description: >-
            Regex used to extract backend details from source. If empty, whole
            source value will be used.
        source:
          $ref: '#/components/schemas/Source'
          description: Source on which the rule is applied.
      description: Extraction Rule.
      type: object
      id: ExtractionRule
    Oauth2AuthCodeFlow:
      type: object
      id: Oauth2AuthCodeFlow
      properties:
        clientId:
          type: string
          description: Client ID for user-provided OAuth app.
        clientSecret:
          description: Client secret for user-provided OAuth app.
          $ref: '#/components/schemas/Secret'
        enablePkce:
          type: boolean
          description: Whether to enable PKCE when the user performs the auth code flow.
        redirectUri:
          type: string
          description: Redirect URI to be provided during the auth code exchange.
        authCode:
          type: string
          description: Authorization code to be exchanged for access and refresh tokens.
        pkceVerifier:
          description: PKCE verifier to be used during the auth code exchange.
          type: string
        authUri:
          description: Auth URL for Authorization Code Flow
          type: string
        scopes:
          description: >-
            Scopes the connection will request when the user performs the auth
            code flow.
          type: array
          items:
            type: string
      description: >-
        Parameters to support Oauth 2.0 Auth Code Grant Authentication. See
        https://www.rfc-editor.org/rfc/rfc6749#section-1.3.1 for more details.
    ListRuntimeActionSchemasResponse:
      id: ListRuntimeActionSchemasResponse
      description: Response message for ConnectorsService.ListRuntimeActionSchemas.
      properties:
        runtimeActionSchemas:
          items:
            $ref: '#/components/schemas/RuntimeActionSchema'
          type: array
          description: Runtime action schemas.
        nextPageToken:
          description: Next page token.
          type: string
      type: object
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:setIamPolicy:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: connectors.projects.locations.providers.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
      x-stackQL-resource: providers_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:
    parameters: *ref_1
    get:
      description: Gets details of a provider.
      operationId: connectors.projects.locations.providers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
      x-stackQL-resource: providers
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: connectors.projects.locations.providers.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
      x-stackQL-resource: providers_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/providers:
    parameters: *ref_1
    get:
      description: Lists Providers in a given project and location.
      operationId: connectors.projects.locations.providers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvidersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: providers
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: connectors.projects.locations.providers.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: providers_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}/versions/{versionsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single connector version.
      operationId: connectors.projects.locations.providers.connectors.versions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorVersion'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: connectorsId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}/versions:
    parameters: *ref_1
    get:
      description: Lists Connector Versions in a given project and location.
      operationId: connectors.projects.locations.providers.connectors.versions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: connectorsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: versions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Connector.
      operationId: connectors.projects.locations.providers.connectors.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connector'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: connectorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: connectors
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors:
    parameters: *ref_1
    get:
      description: Lists Connectors in a given project and location.
      operationId: connectors.projects.locations.providers.connectors.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: connectors
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: connectors.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: connectors.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: connectors.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: connectors.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments/{endpointAttachmentsId}:
    parameters: *ref_1
    delete:
      description: Deletes a single EndpointAttachment.
      operationId: connectors.projects.locations.endpointAttachments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointAttachmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoint_attachments
      x-stackQL-verb: delete
    get:
      description: Gets details of a single EndpointAttachment.
      operationId: connectors.projects.locations.endpointAttachments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointAttachment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointAttachmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoint_attachments
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single EndpointAttachment.
      operationId: connectors.projects.locations.endpointAttachments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointAttachment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: endpointAttachmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: endpoint_attachments
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments:
    parameters: *ref_1
    get:
      description: List EndpointAttachments in a given project
      operationId: connectors.projects.locations.endpointAttachments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointAttachmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: endpoint_attachments
      x-stackQL-verb: select
    post:
      description: Creates a new EndpointAttachment in a given project and location.
      operationId: connectors.projects.locations.endpointAttachments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointAttachment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: endpointAttachmentId
          schema:
            type: string
      x-stackQL-resource: endpoint_attachments
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/global/settings:
    parameters: *ref_1
    get:
      description: >-
        GetGlobalSettings gets settings of a project. GlobalSettings is a
        singleton resource.
      operationId: connectors.projects.locations.global.getSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: global__settings
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/managedZones/{managedZonesId}:
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single ManagedZone.
      operationId: connectors.projects.locations.global.managedZones.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedZone'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: managedZonesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: managed_zones
      x-stackQL-verb: exec
    get:
      description: Gets details of a single ManagedZone.
      operationId: connectors.projects.locations.global.managedZones.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedZone'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: managedZonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: managed_zones
      x-stackQL-verb: select
    delete:
      description: Deletes a single ManagedZone.
      operationId: connectors.projects.locations.global.managedZones.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: managedZonesId
          required: true
          schema:
            type: string
      x-stackQL-resource: managed_zones
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/global/managedZones:
    parameters: *ref_1
    post:
      description: Creates a new ManagedZone in a given project and location.
      operationId: connectors.projects.locations.global.managedZones.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedZone'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: managedZoneId
          schema:
            type: string
      x-stackQL-resource: managed_zones
      x-stackQL-verb: insert
    get:
      description: List ManagedZones in a given project
      operationId: connectors.projects.locations.global.managedZones.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListManagedZonesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: managed_zones
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/runtimeEntitySchemas:
    parameters: *ref_1
    get:
      description: List schema of a runtime entities filtered by entity name.
      operationId: connectors.projects.locations.connections.runtimeEntitySchemas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuntimeEntitySchemasResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: runtime_entity_schemas
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/connectionSchemaMetadata:refresh:
    parameters: *ref_1
    post:
      description: Refresh runtime schema of a connection.
      operationId: >-
        connectors.projects.locations.connections.connectionSchemaMetadata.refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshConnectionSchemaMetadataRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_schema_metadata
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/runtimeActionSchemas:
    parameters: *ref_1
    get:
      description: List schema of a runtime actions filtered by action name.
      operationId: connectors.projects.locations.connections.runtimeActionSchemas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuntimeActionSchemasResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: runtime_action_schemas
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single Connection.
      operationId: connectors.projects.locations.connections.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: connections
      x-stackQL-verb: exec
    get:
      description: Gets details of a single Connection.
      operationId: connectors.projects.locations.connections.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: connections
      x-stackQL-verb: select
    delete:
      description: Deletes a single Connection.
      operationId: connectors.projects.locations.connections.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: connections
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: connectors.projects.locations.connections.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: connections_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: connectors.projects.locations.connections.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: connections_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/connections:
    parameters: *ref_1
    post:
      description: Creates a new Connection in a given project and location.
      operationId: connectors.projects.locations.connections.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: connectionId
          schema:
            type: string
      x-stackQL-resource: connections
      x-stackQL-verb: insert
    get:
      description: Lists Connections in a given project and location.
      operationId: connectors.projects.locations.connections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: connections
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: connectors.projects.locations.connections.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: connections_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/connectionSchemaMetadata:
    parameters: *ref_1
    get:
      description: >-
        Gets schema metadata of a connection. SchemaMetadata is a singleton
        resource for each connection.
      operationId: connectors.projects.locations.connections.getConnectionSchemaMetadata
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSchemaMetadata'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: connections__connection_schema_metadata
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: connectors.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/runtimeConfig:
    parameters: *ref_1
    get:
      description: >-
        Gets the runtimeConfig of a location. RuntimeConfig is a singleton
        resource for each location.
      operationId: connectors.projects.locations.getRuntimeConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations__runtime_config
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: connectors.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
