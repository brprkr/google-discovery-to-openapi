openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: GKE Hub API
  description: ''
  version: v1beta
  x-discovery-doc-revision: '20230620'
  x-generated-date: '2023-06-25'
externalDocs:
  url: >-
    https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster
servers:
  - url: https://gkehub.googleapis.com
components:
  schemas:
    PolicyControllerPolicyControllerDeploymentConfig:
      properties:
        podAntiAffinity:
          type: boolean
          description: Pod anti-affinity enablement.
        replicaCount:
          description: Pod replica count.
          type: string
          format: int64
        containerResources:
          description: Container resource requirements.
          $ref: '#/components/schemas/PolicyControllerResourceRequirements'
        podTolerations:
          type: array
          description: Pod tolerations of node taints.
          items:
            $ref: '#/components/schemas/PolicyControllerToleration'
      description: Deployment-specific configuration.
      type: object
      id: PolicyControllerPolicyControllerDeploymentConfig
    ConfigManagementPolicyControllerVersion:
      description: The build version of Gatekeeper Policy Controller is using.
      properties:
        version:
          description: >-
            The gatekeeper image tag that is composed of ACM version, git tag,
            build number.
          type: string
      id: ConfigManagementPolicyControllerVersion
      type: object
    ConfigManagementConfigSyncError:
      id: ConfigManagementConfigSyncError
      type: object
      description: Errors pertaining to the installation of Config Sync
      properties:
        errorMessage:
          description: A string representing the user facing error message
          type: string
    ConfigManagementSyncError:
      type: object
      properties:
        errorResources:
          description: A list of config(s) associated with the error, if any
          items:
            $ref: '#/components/schemas/ConfigManagementErrorResource'
          type: array
        errorMessage:
          description: A description of the error
          type: string
        code:
          type: string
          description: An ACM defined error code
      description: An ACM created error representing a problem syncing configurations
      id: ConfigManagementSyncError
    ConfigManagementHierarchyControllerDeploymentState:
      properties:
        extension:
          description: >-
            The deployment state for Hierarchy Controller extension (e.g.
            v0.7.0-hc.1)
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
        hnc:
          description: The deployment state for open source HNC (e.g. v0.7.0-hc.0)
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
      type: object
      id: ConfigManagementHierarchyControllerDeploymentState
      description: Deployment state for Hierarchy Controller
    Operation:
      properties:
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
        response:
          type: object
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
    CommonFeatureState:
      properties:
        state:
          readOnly: true
          description: Output only. The "running state" of the Feature in this Hub.
          $ref: '#/components/schemas/FeatureState'
        fleetobservability:
          $ref: '#/components/schemas/FleetObservabilityFeatureState'
          description: FleetObservability feature state.
        appdevexperience:
          $ref: '#/components/schemas/AppDevExperienceFeatureState'
          description: Appdevexperience specific state.
      type: object
      description: CommonFeatureState contains Hub-wide Feature status information.
      id: CommonFeatureState
    ConfigManagementHierarchyControllerConfig:
      properties:
        enableHierarchicalResourceQuota:
          type: boolean
          description: Whether hierarchical resource quota is enabled in this cluster.
        enabled:
          type: boolean
          description: Whether Hierarchy Controller is enabled in this cluster.
        enablePodTreeLabels:
          type: boolean
          description: Whether pod tree labels are enabled in this cluster.
      type: object
      description: Configuration for Hierarchy Controller
      id: ConfigManagementHierarchyControllerConfig
    Scope:
      properties:
        updateTime:
          readOnly: true
          description: Output only. When the scope was last updated.
          format: google-datetime
          type: string
        deleteTime:
          description: Output only. When the scope was deleted.
          type: string
          readOnly: true
          format: google-datetime
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. When the scope was created.
        name:
          description: >-
            The resource name for the scope
            `projects/{project}/locations/{location}/scopes/{scope}`
          type: string
        allMemberships:
          type: boolean
          description: If true, all Memberships in the Fleet bind to this Scope.
        uid:
          readOnly: true
          description: >-
            Output only. Google-generated UUID for this resource. This is unique
            across all scope resources. If a scope resource is deleted and
            another resource with the same name is created, it gets a different
            uid.
          type: string
        state:
          description: Output only. State of the scope resource.
          $ref: '#/components/schemas/ScopeLifecycleState'
          readOnly: true
      description: Scope represents a Scope in a Fleet.
      type: object
      id: Scope
    Binding:
      properties:
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding.
          items:
            type: string
          type: array
        condition:
          $ref: '#/components/schemas/Expr'
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
    ConfigManagementOperatorState:
      type: object
      properties:
        version:
          description: The semenatic version number of the operator
          type: string
        errors:
          type: array
          description: Install errors.
          items:
            $ref: '#/components/schemas/ConfigManagementInstallError'
        deploymentState:
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          description: The state of the Operator's deployment
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
      id: ConfigManagementOperatorState
      description: State information for an ACM's Operator
    Empty:
      type: object
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
      id: Empty
    FleetObservabilityMembershipSpec:
      type: object
      id: FleetObservabilityMembershipSpec
      properties: {}
      description: >-
        **FleetObservability**: The membership-specific input for
        FleetObservability feature.
    PolicyControllerPolicyContentSpec:
      properties:
        bundles:
          additionalProperties:
            $ref: '#/components/schemas/PolicyControllerBundleInstallSpec'
          type: object
          description: >-
            map of bundle name to BundleInstallSpec. The bundle name maps to the
            `bundleName` key in the `policycontroller.gke.io/constraintData`
            annotation on a constraint.
        templateLibrary:
          $ref: '#/components/schemas/PolicyControllerTemplateLibraryConfig'
          description: Configures the installation of the Template Library.
      description: >-
        PolicyContentSpec defines the user's desired content configuration on
        the cluster.
      id: PolicyControllerPolicyContentSpec
      type: object
    IdentityServiceGoogleConfig:
      description: Configuration for the Google Plugin Auth flow.
      properties:
        disable:
          description: >-
            Disable automatic configuration of Google Plugin on supported
            platforms.
          type: boolean
      type: object
      id: IdentityServiceGoogleConfig
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      properties:
        title:
          type: string
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
        location:
          type: string
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
      type: object
    PolicyControllerOnClusterState:
      properties:
        state:
          type: string
          description: The lifecycle state of this component.
          enumDescriptions:
            - The lifecycle state is unspecified.
            - >-
              The PC does not exist on the given cluster, and no k8s resources
              of any type that are associated with the PC should exist there.
              The cluster does not possess a membership with the PCH.
            - >-
              The PCH possesses a Membership, however the PC is not fully
              installed on the cluster. In this state the hub can be expected to
              be taking actions to install the PC on the cluster.
            - >-
              The PC is fully installed on the cluster and in an operational
              mode. In this state PCH will be reconciling state with the PC, and
              the PC will be performing it's operational tasks per that
              software. Entering a READY state requires that the hub has
              confirmed the PC is installed and its pods are operational with
              the version of the PC the PCH expects.
            - >-
              The PC is fully installed, but in the process of changing the
              configuration (including changing the version of PC either up and
              down, or modifying the manifests of PC) of the resources running
              on the cluster. The PCH has a Membership, is aware of the version
              the cluster should be running in, but has not confirmed for itself
              that the PC is running with that version.
            - >-
              The PC may have resources on the cluster, but the PCH wishes to
              remove the Membership. The Membership still exists.
            - >-
              The PC is not operational, and the PCH is unable to act to make it
              operational. Entering a CLUSTER_ERROR state happens automatically
              when the PCH determines that a PC installed on the cluster is
              non-operative or that the cluster does not meet requirements set
              for the PCH to administer the cluster but has nevertheless been
              given an instruction to do so (such as 'install').
            - >-
              In this state, the PC may still be operational, and only the PCH
              is unable to act. The hub should not issue instructions to change
              the PC state, or otherwise interfere with the on-cluster
              resources. Entering a HUB_ERROR state happens automatically when
              the PCH determines the hub is in an unhealthy state and it wishes
              to 'take hands off' to avoid corrupting the PC or other data.
            - >-
              Policy Controller (PC) is installed but suspended. This means that
              the policies are not enforced, but violations are still recorded
              (through audit).
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLING
            - ACTIVE
            - UPDATING
            - DECOMMISSIONING
            - CLUSTER_ERROR
            - HUB_ERROR
            - SUSPENDED
        details:
          type: string
          description: Surface potential errors or information logs.
      id: PolicyControllerOnClusterState
      type: object
      description: >-
        OnClusterState represents the state of a sub-component of Policy
        Controller.
    CommonFeatureSpec:
      description: CommonFeatureSpec contains Hub-wide configuration information
      properties:
        anthosobservability:
          $ref: '#/components/schemas/AnthosObservabilityFeatureSpec'
          description: Anthos Observability spec
        fleetobservability:
          $ref: '#/components/schemas/FleetObservabilityFeatureSpec'
          description: FleetObservability feature spec.
        multiclusteringress:
          $ref: '#/components/schemas/MultiClusterIngressFeatureSpec'
          description: Multicluster Ingress-specific spec.
        appdevexperience:
          $ref: '#/components/schemas/AppDevExperienceFeatureSpec'
          description: Appdevexperience specific spec.
      id: CommonFeatureSpec
      type: object
    AnthosObservabilityFeatureSpec:
      properties:
        defaultMembershipSpec:
          description: Default membership spec for unconfigured memberships
          $ref: '#/components/schemas/AnthosObservabilityMembershipSpec'
      type: object
      description: '**Anthos Observability**: Spec'
      id: AnthosObservabilityFeatureSpec
    MeteringMembershipState:
      type: object
      id: MeteringMembershipState
      properties:
        preciseLastMeasuredClusterVcpuCapacity:
          format: float
          type: number
          description: >-
            The vCPUs capacity in the cluster according to the most recent
            measurement (1/1000 precision).
        lastMeasurementTime:
          format: google-datetime
          description: >-
            The time stamp of the most recent measurement of the number of vCPUs
            in the cluster.
          type: string
      description: '**Metering**: Per-Membership Feature State.'
    CommonFleetDefaultMemberConfigSpec:
      properties:
        identityservice:
          $ref: '#/components/schemas/IdentityServiceMembershipSpec'
          description: Identity Service-specific spec.
      description: >-
        CommonFleetDefaultMemberConfigSpec contains default configuration
        information for memberships of a fleet
      type: object
      id: CommonFleetDefaultMemberConfigSpec
    FleetLifecycleState:
      properties:
        code:
          enumDescriptions:
            - The code is not set.
            - The fleet is being created.
            - The fleet active.
            - The fleet is being deleted.
            - The fleet is being updated.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          type: string
          readOnly: true
          description: Output only. The current state of the Fleet resource.
      description: FleetLifecycleState describes the state of a Fleet resource.
      type: object
      id: FleetLifecycleState
    ConfigManagementBinauthzState:
      type: object
      properties:
        webhook:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
          description: The state of the binauthz webhook.
        version:
          description: The version of binauthz that is installed.
          $ref: '#/components/schemas/ConfigManagementBinauthzVersion'
      id: ConfigManagementBinauthzState
      description: State for Binauthz
    ConfigManagementPolicyControllerMonitoring:
      properties:
        backends:
          type: array
          items:
            type: string
            enumDescriptions:
              - Backend cannot be determined
              - Prometheus backend for monitoring
              - Stackdriver/Cloud Monitoring backend for monitoring
            enum:
              - MONITORING_BACKEND_UNSPECIFIED
              - PROMETHEUS
              - CLOUD_MONITORING
          description: >-
            Specifies the list of backends Policy Controller will export to. An
            empty list would effectively disable metrics export.
      type: object
      description: >-
        PolicyControllerMonitoring specifies the backends Policy Controller
        should export metrics to. For example, to specify metrics should be
        exported to Cloud Monitoring and Prometheus, specify backends:
        ["cloudmonitoring", "prometheus"]
      id: ConfigManagementPolicyControllerMonitoring
    GenerateMembershipRBACRoleBindingYAMLResponse:
      id: GenerateMembershipRBACRoleBindingYAMLResponse
      properties:
        roleBindingsYaml:
          description: a yaml text blob including the RBAC policies.
          type: string
      type: object
      description: Response for GenerateRBACRoleBindingYAML.
    Status:
      properties:
        code:
          enumDescriptions:
            - Not set.
            - AppDevExperienceFeature's specified subcomponent is ready.
            - >-
              AppDevExperienceFeature's specified subcomponent ready state is
              false. This means AppDevExperienceFeature has encountered an issue
              that blocks all, or a portion, of its normal operation. See the
              `description` for more details.
            - >-
              AppDevExperienceFeature's specified subcomponent has a pending or
              unknown state.
          description: Code specifies AppDevExperienceFeature's subcomponent ready state.
          enum:
            - CODE_UNSPECIFIED
            - OK
            - FAILED
            - UNKNOWN
          type: string
        description:
          description: >-
            Description is populated if Code is Failed, explaining why it has
            failed.
          type: string
      type: object
      id: Status
      description: Status specifies state for the subcomponent.
    RBACRoleBindingLifecycleState:
      type: object
      description: >-
        RBACRoleBindingLifecycleState describes the state of a RbacRoleBinding
        resource.
      properties:
        code:
          type: string
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          description: Output only. The current state of the rbacrolebinding resource.
          enumDescriptions:
            - The code is not set.
            - The rbacrolebinding is being created.
            - The rbacrolebinding active.
            - The rbacrolebinding is being deleted.
            - The rbacrolebinding is being updated.
          readOnly: true
      id: RBACRoleBindingLifecycleState
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
      description: Request message for `TestIamPermissions` method.
    PolicyControllerMembershipState:
      id: PolicyControllerMembershipState
      description: '**Policy Controller**: State for a single cluster.'
      type: object
      properties:
        componentStates:
          additionalProperties:
            $ref: '#/components/schemas/PolicyControllerOnClusterState'
          type: object
          description: >-
            Currently these include (also serving as map keys): 1. "admission"
            2. "audit" 3. "mutation"
        contentStates:
          additionalProperties:
            $ref: '#/components/schemas/PolicyControllerOnClusterState'
          description: >-
            The state of the template library and any bundles included in the
            chosen version of the manifest
          type: object
        policyContentState:
          description: The overall content state observed by the Hub Feature controller.
          $ref: '#/components/schemas/PolicyControllerPolicyContentState'
        state:
          description: >-
            The overall Policy Controller lifecycle state observed by the Hub
            Feature controller.
          enumDescriptions:
            - The lifecycle state is unspecified.
            - >-
              The PC does not exist on the given cluster, and no k8s resources
              of any type that are associated with the PC should exist there.
              The cluster does not possess a membership with the PCH.
            - >-
              The PCH possesses a Membership, however the PC is not fully
              installed on the cluster. In this state the hub can be expected to
              be taking actions to install the PC on the cluster.
            - >-
              The PC is fully installed on the cluster and in an operational
              mode. In this state PCH will be reconciling state with the PC, and
              the PC will be performing it's operational tasks per that
              software. Entering a READY state requires that the hub has
              confirmed the PC is installed and its pods are operational with
              the version of the PC the PCH expects.
            - >-
              The PC is fully installed, but in the process of changing the
              configuration (including changing the version of PC either up and
              down, or modifying the manifests of PC) of the resources running
              on the cluster. The PCH has a Membership, is aware of the version
              the cluster should be running in, but has not confirmed for itself
              that the PC is running with that version.
            - >-
              The PC may have resources on the cluster, but the PCH wishes to
              remove the Membership. The Membership still exists.
            - >-
              The PC is not operational, and the PCH is unable to act to make it
              operational. Entering a CLUSTER_ERROR state happens automatically
              when the PCH determines that a PC installed on the cluster is
              non-operative or that the cluster does not meet requirements set
              for the PCH to administer the cluster but has nevertheless been
              given an instruction to do so (such as 'install').
            - >-
              In this state, the PC may still be operational, and only the PCH
              is unable to act. The hub should not issue instructions to change
              the PC state, or otherwise interfere with the on-cluster
              resources. Entering a HUB_ERROR state happens automatically when
              the PCH determines the hub is in an unhealthy state and it wishes
              to 'take hands off' to avoid corrupting the PC or other data.
            - >-
              Policy Controller (PC) is installed but suspended. This means that
              the policies are not enforced, but violations are still recorded
              (through audit).
          type: string
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLING
            - ACTIVE
            - UPDATING
            - DECOMMISSIONING
            - CLUSTER_ERROR
            - HUB_ERROR
            - SUSPENDED
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: >-
            A list of operations that matches the specified filter in the
            request.
      type: object
    AnthosObservabilityMembershipSpec:
      properties:
        enableStackdriverOnApplications:
          description: Enable collecting and reporting metrics and logs from user apps.
          type: boolean
        doNotOptimizeMetrics:
          description: >-
            Use full of metrics rather than optimized metrics. See
            https://cloud.google.com/anthos/clusters/docs/on-prem/1.8/concepts/logging-and-monitoring#optimized_metrics_default_metrics
          type: boolean
        version:
          description: the version of stackdriver operator used by this feature
          type: string
      id: AnthosObservabilityMembershipSpec
      description: '**Anthosobservability**: Per-Membership Feature spec.'
      type: object
    ConfigManagementSyncState:
      type: object
      properties:
        code:
          type: string
          description: Sync status code
          enum:
            - SYNC_CODE_UNSPECIFIED
            - SYNCED
            - PENDING
            - ERROR
            - NOT_CONFIGURED
            - NOT_INSTALLED
            - UNAUTHORIZED
            - UNREACHABLE
          enumDescriptions:
            - ACM cannot determine a sync code
            - ACM successfully synced the git Repo with the cluster
            - ACM is in the progress of syncing a new change
            - Indicates an error configuring ACM, and user action is required
            - >-
              ACM has been installed (operator manifest deployed), but not
              configured.
            - ACM has not been installed (no operator pod found)
            - Error authorizing with the cluster
            - Cluster could not be reached
        sourceToken:
          type: string
          description: Token indicating the state of the repo.
        errors:
          description: >-
            A list of errors resulting from problematic configs. This list will
            be truncated after 100 errors, although it is unlikely for that many
            errors to simultaneously exist.
          items:
            $ref: '#/components/schemas/ConfigManagementSyncError'
          type: array
        syncToken:
          type: string
          description: Token indicating the state of the syncer.
        lastSync:
          deprecated: true
          description: >-
            Deprecated: use last_sync_time instead. Timestamp of when ACM last
            successfully synced the repo The time format is specified in
            https://golang.org/pkg/time/#Time.String
          type: string
        importToken:
          type: string
          description: Token indicating the state of the importer.
        lastSyncTime:
          type: string
          format: google-datetime
          description: Timestamp type of when ACM last successfully synced the repo
      id: ConfigManagementSyncState
      description: State indicating an ACM's progress syncing configurations to a cluster
    PolicyControllerMonitoringConfig:
      id: PolicyControllerMonitoringConfig
      properties:
        backends:
          description: >-
            Specifies the list of backends Policy Controller will export to. An
            empty list would effectively disable metrics export.
          type: array
          items:
            type: string
            enum:
              - MONITORING_BACKEND_UNSPECIFIED
              - PROMETHEUS
              - CLOUD_MONITORING
            enumDescriptions:
              - Backend cannot be determined
              - Prometheus backend for monitoring
              - Stackdriver/Cloud Monitoring backend for monitoring
      description: >-
        MonitoringConfig specifies the backends Policy Controller should export
        metrics to. For example, to specify metrics should be exported to Cloud
        Monitoring and Prometheus, specify backends: ["cloudmonitoring",
        "prometheus"]
      type: object
    ConfigManagementConfigSyncDeploymentState:
      id: ConfigManagementConfigSyncDeploymentState
      description: The state of ConfigSync's deployment on a cluster
      type: object
      properties:
        gitSync:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
          description: Deployment state of the git-sync pod
        syncer:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          type: string
          description: Deployment state of the syncer pod
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
        rootReconciler:
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          description: Deployment state of root-reconciler
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          type: string
        reconcilerManager:
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          description: Deployment state of reconciler-manager pod
          type: string
        importer:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          description: Deployment state of the importer pod
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          type: string
        monitor:
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          description: Deployment state of the monitor pod
          type: string
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
        admissionWebhook:
          description: Deployment state of admission-webhook
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
    NamespaceLifecycleState:
      id: NamespaceLifecycleState
      properties:
        code:
          readOnly: true
          description: Output only. The current state of the Namespace resource.
          enumDescriptions:
            - The code is not set.
            - The namespace is being created.
            - The namespace active.
            - The namespace is being deleted.
            - The namespace is being updated.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          type: string
      description: NamespaceLifecycleState describes the state of a Namespace resource.
      type: object
    MembershipBindingLifecycleState:
      id: MembershipBindingLifecycleState
      properties:
        code:
          type: string
          enumDescriptions:
            - The code is not set.
            - The membershipbinding is being created.
            - The membershipbinding active.
            - The membershipbinding is being deleted.
            - The membershipbinding is being updated.
          description: Output only. The current state of the MembershipBinding resource.
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          readOnly: true
      type: object
      description: >-
        MembershipBindingLifecycleState describes the state of a Binding
        resource.
    MultiClusterIngressFeatureSpec:
      properties:
        billing:
          enum:
            - BILLING_UNSPECIFIED
            - PAY_AS_YOU_GO
            - ANTHOS_LICENSE
          enumDescriptions:
            - Unknown
            - User pays a fee per-endpoint.
            - User is paying for Anthos as a whole.
          description: >-
            Deprecated: This field will be ignored and should not be set.
            Customer's billing structure.
          type: string
          deprecated: true
        configMembership:
          type: string
          description: >-
            Fully-qualified Membership name which hosts the MultiClusterIngress
            CRD. Example: `projects/foo-proj/locations/global/memberships/bar`
      type: object
      description: >-
        **Multi-cluster Ingress**: The configuration for the MultiClusterIngress
        feature.
      id: MultiClusterIngressFeatureSpec
    ScopeLifecycleState:
      description: ScopeLifecycleState describes the state of a Scope resource.
      type: object
      properties:
        code:
          type: string
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
          enumDescriptions:
            - The code is not set.
            - The scope is being created.
            - The scope active.
            - The scope is being deleted.
            - The scope is being updated.
          description: Output only. The current state of the scope resource.
          readOnly: true
      id: ScopeLifecycleState
    ConfigManagementMembershipSpec:
      properties:
        hierarchyController:
          description: Hierarchy Controller configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerConfig'
        management:
          type: string
          enum:
            - MANAGEMENT_UNSPECIFIED
            - MANAGEMENT_AUTOMATIC
            - MANAGEMENT_MANUAL
          description: Enables automatic Feature management.
          enumDescriptions:
            - Unspecified
            - Google will manage the Feature for the cluster.
            - User will manually manage the Feature for the cluster.
        configSync:
          $ref: '#/components/schemas/ConfigManagementConfigSync'
          description: Config Sync configuration for the cluster.
        binauthz:
          description: Binauthz conifguration for the cluster.
          $ref: '#/components/schemas/ConfigManagementBinauthzConfig'
        version:
          description: Version of ACM installed.
          type: string
        cluster:
          type: string
          description: >-
            The user-specified cluster name used by Config Sync
            cluster-name-selector annotation or ClusterSelector, for applying
            configs to only a subset of clusters. Omit this field if the
            cluster's fleet membership name is used by Config Sync
            cluster-name-selector annotation or ClusterSelector. Set this field
            if a name different from the cluster's fleet membership name is used
            by Config Sync cluster-name-selector annotation or ClusterSelector.
        policyController:
          description: Policy Controller configuration for the cluster.
          $ref: '#/components/schemas/ConfigManagementPolicyController'
      description: >-
        **Anthos Config Management**: Configuration for a single cluster.
        Intended to parallel the ConfigManagement CR.
      type: object
      id: ConfigManagementMembershipSpec
    ScopeFeatureState:
      id: ScopeFeatureState
      type: object
      properties:
        state:
          $ref: '#/components/schemas/FeatureState'
          readOnly: true
          description: Output only. The "running state" of the Feature in this Scope.
      description: ScopeFeatureState contains Scope-wide Feature status information.
    ScopeFeatureSpec:
      id: ScopeFeatureSpec
      type: object
      description: ScopeFeatureSpec contains feature specs for a fleet scope.
      properties: {}
    ServiceMeshStatusDetails:
      type: object
      id: ServiceMeshStatusDetails
      description: Structured and human-readable details for a status.
      properties:
        code:
          description: A machine-readable code that further describes a broad status.
          type: string
        details:
          description: Human-readable explanation of code.
          type: string
    ConfigManagementConfigSyncState:
      description: State information for ConfigSync
      type: object
      properties:
        errors:
          type: array
          description: Errors pertaining to the installation of Config Sync.
          items:
            $ref: '#/components/schemas/ConfigManagementConfigSyncError'
        version:
          $ref: '#/components/schemas/ConfigManagementConfigSyncVersion'
          description: The version of ConfigSync deployed
        deploymentState:
          $ref: '#/components/schemas/ConfigManagementConfigSyncDeploymentState'
          description: >-
            Information about the deployment of ConfigSync, including the
            version of the various Pods deployed
        syncState:
          description: The state of ConfigSync's process to sync configs to a cluster
          $ref: '#/components/schemas/ConfigManagementSyncState'
      id: ConfigManagementConfigSyncState
    ConfigManagementGatekeeperDeploymentState:
      properties:
        gatekeeperAudit:
          description: Status of gatekeeper-audit deployment.
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          type: string
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
        gatekeeperMutation:
          type: string
          description: Status of the pod serving the mutation webhook.
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
        gatekeeperControllerManagerState:
          enumDescriptions:
            - Deployment's state cannot be determined
            - Deployment is not installed
            - Deployment is installed
            - Deployment was attempted to be installed, but has errors
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - NOT_INSTALLED
            - INSTALLED
            - ERROR
          description: Status of gatekeeper-controller-manager pod.
          type: string
      description: State of Policy Controller installation.
      id: ConfigManagementGatekeeperDeploymentState
      type: object
    TestIamPermissionsResponse:
      properties:
        permissions:
          items:
            type: string
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
      id: TestIamPermissionsResponse
      type: object
      description: Response message for `TestIamPermissions` method.
    AuditLogConfig:
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      id: AuditLogConfig
      properties:
        logType:
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
          description: The log type that this config enables.
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
      type: object
    Origin:
      description: Origin defines where this MembershipFeatureSpec originated from.
      properties:
        type:
          enumDescriptions:
            - Type is unknown or not set.
            - Per-Membership spec was inherited from the fleet-level default.
            - Per-Membership spec was inherited from a user specification.
          description: Type specifies which type of origin is set.
          enum:
            - TYPE_UNSPECIFIED
            - FLEET
            - USER
          type: string
      type: object
      id: Origin
    RBACRoleBinding:
      description: RBACRoleBinding represents a rbacrolebinding across the Fleet
      type: object
      id: RBACRoleBinding
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. When the rbacrolebinding was last updated.
          type: string
        group:
          type: string
          description: group is the group, as seen by the kubernetes cluster.
        uid:
          type: string
          readOnly: true
          description: >-
            Output only. Google-generated UUID for this resource. This is unique
            across all rbacrolebinding resources. If a rbacrolebinding resource
            is deleted and another resource with the same name is created, it
            gets a different uid.
        createTime:
          description: Output only. When the rbacrolebinding was created.
          format: google-datetime
          type: string
          readOnly: true
        state:
          readOnly: true
          $ref: '#/components/schemas/RBACRoleBindingLifecycleState'
          description: Output only. State of the rbacrolebinding resource.
        role:
          description: Required. Role to bind to the principal
          $ref: '#/components/schemas/Role'
        name:
          type: string
          description: >-
            The resource name for the rbacrolebinding
            `projects/{project}/locations/{location}/namespaces/{namespace}/rbacrolebindings/{rbacrolebinding}`
            or
            `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`
        deleteTime:
          type: string
          readOnly: true
          description: Output only. When the rbacrolebinding was deleted.
          format: google-datetime
        user:
          type: string
          description: >-
            user is the name of the user as seen by the kubernetes cluster,
            example "alice" or "alice@domain.tld"
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        displayName:
          type: string
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        labels:
          additionalProperties:
            type: string
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
    ConfigManagementGitConfig:
      description: Git repo configuration for a single cluster.
      properties:
        syncBranch:
          description: 'The branch of the repository to sync from. Default: master.'
          type: string
        syncRepo:
          description: The URL of the Git repository to use as the source of truth.
          type: string
        policyDir:
          type: string
          description: >-
            The path within the Git repository that represents the top level of
            the repo to sync. Default: the root directory of the repository.
        gcpServiceAccountEmail:
          type: string
          description: >-
            The Google Cloud Service Account Email used for auth when
            secret_type is gcpServiceAccount.
        syncWaitSecs:
          type: string
          description: 'Period in seconds between consecutive syncs. Default: 15.'
          format: int64
        syncRev:
          description: Git revision (tag or hash) to check out. Default HEAD.
          type: string
        secretType:
          type: string
          description: >-
            Type of secret configured for access to the Git repo. Must be one of
            ssh, cookiefile, gcenode, token, gcpserviceaccount or none. The
            validation of this is case-sensitive. Required.
        httpsProxy:
          description: >-
            URL for the HTTPS proxy to be used when communicating with the Git
            repo.
          type: string
      id: ConfigManagementGitConfig
      type: object
    ListMembershipBindingsResponse:
      type: object
      properties:
        membershipBindings:
          description: The list of membership_bindings
          items:
            $ref: '#/components/schemas/MembershipBinding'
          type: array
        nextPageToken:
          description: >-
            A token to request the next page of resources from the
            `ListMembershipBindings` method. The value of an empty string means
            that there are no more resources to return.
          type: string
      id: ListMembershipBindingsResponse
      description: List of MembershipBindings.
    FeatureResourceState:
      id: FeatureResourceState
      description: >-
        FeatureResourceState describes the state of a Feature *resource* in the
        GkeHub API. See `FeatureState` for the "running state" of the Feature in
        the Hub and across Memberships.
      type: object
      properties:
        state:
          type: string
          description: The current state of the Feature resource in the Hub API.
          enumDescriptions:
            - State is unknown or not set.
            - >-
              The Feature is being enabled, and the Feature resource is being
              created. Once complete, the corresponding Feature will be enabled
              in this Hub.
            - >-
              The Feature is enabled in this Hub, and the Feature resource is
              fully available.
            - >-
              The Feature is being disabled in this Hub, and the Feature
              resource is being deleted.
            - The Feature resource is being updated.
            - The Feature resource is being updated by the Hub Service.
          enum:
            - STATE_UNSPECIFIED
            - ENABLING
            - ACTIVE
            - DISABLING
            - UPDATING
            - SERVICE_UPDATING
    ListFeaturesResponse:
      type: object
      properties:
        resources:
          items:
            $ref: '#/components/schemas/Feature'
          type: array
          description: The list of matching Features
        nextPageToken:
          description: >-
            A token to request the next page of resources from the
            `ListFeatures` method. The value of an empty string means that there
            are no more resources to return.
          type: string
      description: Response message for the `GkeHub.ListFeatures` method.
      id: ListFeaturesResponse
    ConfigManagementGroupVersionKind:
      id: ConfigManagementGroupVersionKind
      description: A Kubernetes object's GVK
      properties:
        version:
          type: string
          description: Kubernetes Version
        kind:
          description: Kubernetes Kind
          type: string
        group:
          type: string
          description: Kubernetes Group
      type: object
    ConfigManagementHierarchyControllerState:
      description: State for Hierarchy Controller
      type: object
      properties:
        state:
          description: The deployment state for Hierarchy Controller
          $ref: >-
            #/components/schemas/ConfigManagementHierarchyControllerDeploymentState
        version:
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerVersion'
          description: The version for Hierarchy Controller
      id: ConfigManagementHierarchyControllerState
    FleetObservabilityLoggingConfig:
      type: object
      properties:
        fleetScopeLogsConfig:
          description: >-
            Specified if applying the routing config to all logs for all fleet
            scopes.
          $ref: '#/components/schemas/FleetObservabilityRoutingConfig'
        defaultConfig:
          $ref: '#/components/schemas/FleetObservabilityRoutingConfig'
          description: >-
            Specified if applying the default routing config to logs not
            specified in other configs.
      id: FleetObservabilityLoggingConfig
      description: LoggingConfig defines the configuration for different types of logs.
    IdentityServiceMembershipState:
      type: object
      description: '**Anthos Identity Service**: State for a single Membership.'
      properties:
        failureReason:
          type: string
          description: The reason of the failure.
        memberConfig:
          $ref: '#/components/schemas/IdentityServiceMembershipSpec'
          description: Last reconciled membership configuration
        installedVersion:
          description: >-
            Installed AIS version. This is the AIS version installed on this
            member. The values makes sense iff state is OK.
          type: string
        state:
          enum:
            - DEPLOYMENT_STATE_UNSPECIFIED
            - OK
            - ERROR
          enumDescriptions:
            - Unspecified state
            - deployment succeeds
            - Failure with error.
          type: string
          description: Deployment state on this member
      id: IdentityServiceMembershipState
    ListNamespacesResponse:
      id: ListNamespacesResponse
      type: object
      properties:
        namespaces:
          items:
            $ref: '#/components/schemas/Namespace'
          description: The list of fleet namespaces
          type: array
        nextPageToken:
          description: >-
            A token to request the next page of resources from the
            `ListNamespaces` method. The value of an empty string means that
            there are no more resources to return.
          type: string
      description: List of fleet namespaces.
    AuditConfig:
      type: object
      properties:
        service:
          type: string
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      id: AuditConfig
    PolicyControllerPolicyContentState:
      id: PolicyControllerPolicyContentState
      properties:
        referentialSyncConfigState:
          description: >-
            The state of the referential data sync configuration. This could
            represent the state of either the syncSet object(s) or the config
            object, depending on the version of PoCo configured by the user.
          $ref: '#/components/schemas/PolicyControllerOnClusterState'
        bundleStates:
          type: object
          description: >-
            The state of the any bundles included in the chosen version of the
            manifest
          additionalProperties:
            $ref: '#/components/schemas/PolicyControllerOnClusterState'
        templateLibraryState:
          $ref: '#/components/schemas/PolicyControllerOnClusterState'
          description: The state of the template library
      description: The state of the policy controller policy content
      type: object
    PolicyControllerTemplateLibraryConfig:
      id: PolicyControllerTemplateLibraryConfig
      properties:
        installation:
          enumDescriptions:
            - No installation strategy has been specified.
            - Do not install the template library.
            - Install the entire template library.
          description: >-
            Configures the manner in which the template library is installed on
            the cluster.
          enum:
            - INSTALLATION_UNSPECIFIED
            - NOT_INSTALLED
            - ALL
          type: string
        included:
          description: Whether the standard template library should be installed or not.
          type: boolean
      description: The config specifying which default library templates to install.
      type: object
    AppDevExperienceFeatureSpec:
      id: AppDevExperienceFeatureSpec
      properties: {}
      type: object
      description: Spec for App Dev Experience Feature.
    PolicyControllerResourceList:
      type: object
      properties:
        cpu:
          description: CPU requirement expressed in Kubernetes resource units.
          type: string
        memory:
          type: string
          description: Memory requirement expressed in Kubernetes resource units.
      id: PolicyControllerResourceList
      description: ResourceList contains container resource requirements.
    FeatureState:
      id: FeatureState
      properties:
        description:
          type: string
          description: A human-readable description of the current status.
        updateTime:
          description: >-
            The time this status and any related Feature-specific details were
            updated.
          format: google-datetime
          type: string
        code:
          description: The high-level, machine-readable status of this Feature.
          enum:
            - CODE_UNSPECIFIED
            - OK
            - WARNING
            - ERROR
          type: string
          enumDescriptions:
            - Unknown or not set.
            - The Feature is operating normally.
            - >-
              The Feature has encountered an issue, and is operating in a
              degraded state. The Feature may need intervention to return to
              normal operation. See the description and any associated
              Feature-specific details for more information.
            - >-
              The Feature is not operating or is in a severely degraded state.
              The Feature may need intervention to return to normal operation.
              See the description and any associated Feature-specific details
              for more information.
      type: object
      description: >-
        FeatureState describes the high-level state of a Feature. It may be used
        to describe a Feature's state at the environ-level, or per-membershop,
        depending on the context.
    ConfigManagementBinauthzConfig:
      description: Configuration for Binauthz
      properties:
        enabled:
          description: Whether binauthz is enabled in this cluster.
          type: boolean
      id: ConfigManagementBinauthzConfig
      type: object
    ConfigManagementBinauthzVersion:
      type: object
      description: The version of binauthz.
      id: ConfigManagementBinauthzVersion
      properties:
        webhookVersion:
          description: The version of the binauthz webhook.
          type: string
    ConfigManagementPolicyController:
      description: Configuration for Policy Controller
      properties:
        logDeniesEnabled:
          description: Logs all denies and dry run failures.
          type: boolean
        enabled:
          type: boolean
          description: >-
            Enables the installation of Policy Controller. If false, the rest of
            PolicyController fields take no effect.
        referentialRulesEnabled:
          description: >-
            Enables the ability to use Constraint Templates that reference to
            objects other than the object currently being evaluated.
          type: boolean
        exemptableNamespaces:
          items:
            type: string
          description: >-
            The set of namespaces that are excluded from Policy Controller
            checks. Namespaces do not need to currently exist on the cluster.
          type: array
        updateTime:
          readOnly: true
          description: Output only. Last time this membership spec was updated.
          format: google-datetime
          type: string
        monitoring:
          $ref: '#/components/schemas/ConfigManagementPolicyControllerMonitoring'
          description: Monitoring specifies the configuration of monitoring.
        auditIntervalSeconds:
          type: string
          format: int64
          description: >-
            Sets the interval for Policy Controller Audit Scans (in seconds).
            When set to 0, this disables audit functionality altogether.
        mutationEnabled:
          description: >-
            Enable or disable mutation in policy controller. If true, mutation
            CRDs, webhook and controller deployment will be deployed to the
            cluster.
          type: boolean
        templateLibraryInstalled:
          description: Installs the default template library along with Policy Controller.
          type: boolean
      id: ConfigManagementPolicyController
      type: object
    MembershipFeatureSpec:
      description: >-
        MembershipFeatureSpec contains configuration information for a single
        Membership. NOTE: Please use snake case in your feature name.
      properties:
        identityservice:
          description: Identity Service-specific spec.
          $ref: '#/components/schemas/IdentityServiceMembershipSpec'
        origin:
          $ref: '#/components/schemas/Origin'
          description: >-
            Whether this per-Membership spec was inherited from a fleet-level
            default. This field can be updated by users by either overriding a
            Membership config (updated to USER implicitly) or setting to FLEET
            explicitly.
        cloudbuild:
          $ref: '#/components/schemas/MembershipSpec'
          description: Cloud Build-specific spec
        policycontroller:
          $ref: '#/components/schemas/PolicyControllerMembershipSpec'
          description: Policy Controller spec.
        fleetobservability:
          $ref: '#/components/schemas/FleetObservabilityMembershipSpec'
          description: Fleet observability membership spec
        configmanagement:
          $ref: '#/components/schemas/ConfigManagementMembershipSpec'
          description: Config Management-specific spec.
        mesh:
          description: Anthos Service Mesh-specific spec
          $ref: '#/components/schemas/ServiceMeshMembershipSpec'
        anthosobservability:
          description: Anthos Observability-specific spec
          $ref: '#/components/schemas/AnthosObservabilityMembershipSpec'
      id: MembershipFeatureSpec
      type: object
    PolicyControllerToleration:
      id: PolicyControllerToleration
      description: Toleration of a node taint.
      type: object
      properties:
        value:
          type: string
          description: Matches a taint value.
        effect:
          description: Matches a taint effect.
          type: string
        operator:
          description: Matches a taint operator.
          type: string
        key:
          description: Matches a taint key (not necessarily unique).
          type: string
    ConfigManagementConfigSync:
      id: ConfigManagementConfigSync
      type: object
      properties:
        sourceFormat:
          type: string
          description: >-
            Specifies whether the Config Sync Repo is in "hierarchical" or
            "unstructured" mode.
        oci:
          description: OCI repo configuration for the cluster
          $ref: '#/components/schemas/ConfigManagementOciConfig'
        metricsGcpServiceAccountEmail:
          description: >-
            The Email of the Google Cloud Service Account (GSA) used for
            exporting Config Sync metrics to Cloud Monitoring and Cloud Monarch
            when Workload Identity is enabled. The GSA should have the
            Monitoring Metric Writer (roles/monitoring.metricWriter) IAM role.
            The Kubernetes ServiceAccount `default` in the namespace
            `config-management-monitoring` should be binded to the GSA. This
            field is required when automatic Feature management is enabled.
          type: string
        preventDrift:
          type: boolean
          description: >-
            Set to true to enable the Config Sync admission webhook to prevent
            drifts. If set to `false`, disables the Config Sync admission
            webhook and does not prevent drifts.
        enabled:
          type: boolean
          description: >-
            Enables the installation of ConfigSync. If set to true, ConfigSync
            resources will be created and the other ConfigSync fields will be
            applied if exist. If set to false, all other ConfigSync fields will
            be ignored, ConfigSync resources will be deleted. If omitted,
            ConfigSync resources will be managed depends on the presence of the
            git or oci field.
        git:
          $ref: '#/components/schemas/ConfigManagementGitConfig'
          description: Git repo configuration for the cluster.
        allowVerticalScale:
          deprecated: true
          description: >-
            Set to true to allow the vertical scaling. Defaults to false which
            disallows vertical scaling. This field is deprecated.
          type: boolean
        stopSyncing:
          description: >-
            Set to true to stop syncing configs for a single cluster when
            automatic Feature management is enabled. Default to false. The field
            will be ignored when automatic Feature management is disabled.
          type: boolean
      description: Configuration for Config Sync
    Feature:
      properties:
        fleetDefaultMemberConfig:
          description: >-
            Optional. Feature configuration applicable to all memberships of the
            fleet.
          $ref: '#/components/schemas/CommonFleetDefaultMemberConfigSpec'
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. When the Feature resource was last updated.
        labels:
          description: Labels for this Feature.
          type: object
          additionalProperties:
            type: string
        membershipStates:
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/MembershipFeatureState'
          type: object
          description: >-
            Output only. Membership-specific Feature status. If this Feature
            does report any per-Membership status, this field may be unused. The
            keys indicate which Membership the state is for, in the form:
            `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the
            project number, {l} is a valid location and {m} is a valid
            Membership in this project at that location. {p} MUST match the
            Feature's project number.
        scopeStates:
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/ScopeFeatureState'
          description: >-
            Output only. Scope-specific Feature status. If this Feature does
            report any per-Scope status, this field may be unused. The keys
            indicate which Scope the state is for, in the form:
            `projects/{p}/locations/global/scopes/{s}` Where {p} is the project,
            {s} is a valid Scope in this project. {p} WILL match the Feature's
            project.
          type: object
        createTime:
          format: google-datetime
          description: Output only. When the Feature resource was created.
          type: string
          readOnly: true
        state:
          $ref: '#/components/schemas/CommonFeatureState'
          readOnly: true
          description: Output only. The Hub-wide Feature state.
        deleteTime:
          format: google-datetime
          description: Output only. When the Feature resource was deleted.
          readOnly: true
          type: string
        resourceState:
          $ref: '#/components/schemas/FeatureResourceState'
          description: Output only. State of the Feature resource itself.
          readOnly: true
        name:
          readOnly: true
          type: string
          description: >-
            Output only. The full, unique name of this Feature resource in the
            format `projects/*/locations/*/features/*`.
        scopeSpecs:
          description: >-
            Optional. Scope-specific configuration for this Feature. If this
            Feature does not support any per-Scope configuration, this field may
            be unused. The keys indicate which Scope the configuration is for,
            in the form: `projects/{p}/locations/global/scopes/{s}` Where {p} is
            the project, {s} is a valid Scope in this project. {p} WILL match
            the Feature's project. {p} will always be returned as the project
            number, but the project ID is also accepted during input. If the
            same Scope is specified in the map twice (using the project ID form,
            and the project number form), exactly ONE of the entries will be
            saved, with no guarantees as to which. For this reason, it is
            recommended the same format be used for all entries when mutating a
            Feature.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ScopeFeatureSpec'
        membershipSpecs:
          description: >-
            Optional. Membership-specific configuration for this Feature. If
            this Feature does not support any per-Membership configuration, this
            field may be unused. The keys indicate which Membership the
            configuration is for, in the form:
            `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the
            project, {l} is a valid location and {m} is a valid Membership in
            this project at that location. {p} WILL match the Feature's project.
            {p} will always be returned as the project number, but the project
            ID is also accepted during input. If the same Membership is
            specified in the map twice (using the project ID form, and the
            project number form), exactly ONE of the entries will be saved, with
            no guarantees as to which. For this reason, it is recommended the
            same format be used for all entries when mutating a Feature.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MembershipFeatureSpec'
        spec:
          description: >-
            Optional. Hub-wide Feature configuration. If this Feature does not
            support any Hub-wide configuration, this field may be unused.
          $ref: '#/components/schemas/CommonFeatureSpec'
      id: Feature
      description: Feature represents the settings and status of any Hub Feature.
      type: object
    MembershipSpec:
      description: '**Cloud Build**: Configurations for each Cloud Build enabled cluster.'
      properties:
        version:
          description: Version of the cloud build software on the cluster.
          type: string
        securityPolicy:
          enumDescriptions:
            - Unspecified policy
            - Privileged build pods are disallowed
            - Privileged build pods are allowed
          description: >-
            Whether it is allowed to run the privileged builds on the cluster or
            not.
          type: string
          enum:
            - SECURITY_POLICY_UNSPECIFIED
            - NON_PRIVILEGED
            - PRIVILEGED
      id: MembershipSpec
      type: object
    ConfigManagementMembershipState:
      properties:
        operatorState:
          description: Current install status of ACM's Operator
          $ref: '#/components/schemas/ConfigManagementOperatorState'
        configSyncState:
          $ref: '#/components/schemas/ConfigManagementConfigSyncState'
          description: Current sync status
        binauthzState:
          description: Binauthz status
          $ref: '#/components/schemas/ConfigManagementBinauthzState'
        hierarchyControllerState:
          $ref: '#/components/schemas/ConfigManagementHierarchyControllerState'
          description: Hierarchy Controller status
        membershipSpec:
          description: >-
            Membership configuration in the cluster. This represents the actual
            state in the cluster, while the MembershipSpec in the FeatureSpec
            represents the intended state
          $ref: '#/components/schemas/ConfigManagementMembershipSpec'
        policyControllerState:
          description: PolicyController status
          $ref: '#/components/schemas/ConfigManagementPolicyControllerState'
        clusterName:
          description: >-
            This field is set to the `cluster_name` field of the Membership Spec
            if it is not empty. Otherwise, it is set to the cluster's fleet
            membership name.
          type: string
      id: ConfigManagementMembershipState
      description: '**Anthos Config Management**: State for a single cluster.'
      type: object
    ConfigManagementOciConfig:
      properties:
        policyDir:
          description: >-
            The absolute path of the directory that contains the local
            resources. Default: the root directory of the image.
          type: string
        syncWaitSecs:
          type: string
          format: int64
          description: 'Period in seconds between consecutive syncs. Default: 15.'
        secretType:
          description: Type of secret configured for access to the Git repo.
          type: string
        syncRepo:
          description: >-
            The OCI image repository URL for the package to sync from. e.g.
            `LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/PACKAGE_NAME`.
          type: string
        gcpServiceAccountEmail:
          description: >-
            The Google Cloud Service Account Email used for auth when
            secret_type is gcpServiceAccount.
          type: string
      description: OCI repo configuration for a single cluster
      type: object
      id: ConfigManagementOciConfig
    ListScopesResponse:
      type: object
      properties:
        nextPageToken:
          description: >-
            A token to request the next page of resources from the `ListScopes`
            method. The value of an empty string means that there are no more
            resources to return.
          type: string
        scopes:
          type: array
          description: The list of Scopes
          items:
            $ref: '#/components/schemas/Scope'
      description: List of Scopes.
      id: ListScopesResponse
    ConfigManagementErrorResource:
      properties:
        resourceName:
          type: string
          description: Metadata name of the resource that is causing an error
        resourceGvk:
          $ref: '#/components/schemas/ConfigManagementGroupVersionKind'
          description: Group/version/kind of the resource that is causing an error
        sourcePath:
          description: Path in the git repo of the erroneous config
          type: string
        resourceNamespace:
          description: Namespace of the resource that is causing an error
          type: string
      description: Model for a config file in the git repo with an associated Sync error
      type: object
      id: ConfigManagementErrorResource
    ListFleetsResponse:
      description: Response message for the `GkeHub.ListFleetsResponse` method.
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages. The
            token is only valid for 1h.
          type: string
        fleets:
          type: array
          description: The list of matching fleets.
          items:
            $ref: '#/components/schemas/Fleet'
      type: object
      id: ListFleetsResponse
    Fleet:
      description: Fleet contains the Fleet-wide metadata and configuration.
      id: Fleet
      properties:
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. When the Fleet was created.
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. When the Fleet was last updated.
        uid:
          type: string
          readOnly: true
          description: >-
            Output only. Google-generated UUID for this resource. This is unique
            across all Fleet resources. If a Fleet resource is deleted and
            another resource with the same name is created, it gets a different
            uid.
        state:
          description: Output only. State of the namespace resource.
          readOnly: true
          $ref: '#/components/schemas/FleetLifecycleState'
        displayName:
          description: >-
            Optional. A user-assigned display name of the Fleet. When present,
            it must be between 4 to 30 characters. Allowed characters are:
            lowercase and uppercase letters, numbers, hyphen, single-quote,
            double-quote, space, and exclamation point. Example: `Production
            Fleet`
          type: string
        name:
          type: string
          readOnly: true
          description: >-
            Output only. The full, unique resource name of this fleet in the
            format of `projects/{project}/locations/{location}/fleets/{fleet}`.
            Each Google Cloud project can have at most one fleet resource, named
            "default".
        deleteTime:
          format: google-datetime
          description: Output only. When the Fleet was deleted.
          readOnly: true
          type: string
      type: object
    PolicyControllerResourceRequirements:
      id: PolicyControllerResourceRequirements
      description: ResourceRequirements describes the compute resource requirements.
      type: object
      properties:
        requests:
          description: >-
            Requests describes the amount of compute resources reserved for the
            container by the kube-scheduler.
          $ref: '#/components/schemas/PolicyControllerResourceList'
        limits:
          description: >-
            Limits describes the maximum amount of compute resources allowed for
            use by the running container.
          $ref: '#/components/schemas/PolicyControllerResourceList'
    Namespace:
      id: Namespace
      properties:
        scope:
          type: string
          description: Required. Scope associated with the namespace
        uid:
          type: string
          description: >-
            Output only. Google-generated UUID for this resource. This is unique
            across all namespace resources. If a namespace resource is deleted
            and another resource with the same name is created, it gets a
            different uid.
          readOnly: true
        deleteTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. When the namespace was deleted.
        name:
          description: >-
            The resource name for the namespace
            `projects/{project}/locations/{location}/namespaces/{namespace}`
          type: string
        createTime:
          type: string
          description: Output only. When the namespace was created.
          readOnly: true
          format: google-datetime
        state:
          $ref: '#/components/schemas/NamespaceLifecycleState'
          description: Output only. State of the namespace resource.
          readOnly: true
        updateTime:
          description: Output only. When the namespace was last updated.
          type: string
          format: google-datetime
          readOnly: true
      description: Namespace represents a namespace across the Fleet
      type: object
    Role:
      description: Role is the type for Kubernetes roles
      id: Role
      properties:
        predefinedRole:
          enumDescriptions:
            - UNKNOWN
            - ADMIN has EDIT and RBAC permissions
            - EDIT can edit all resources except RBAC
            - VIEW can only read resources
            - >-
              ANTHOS_SUPPORT gives Google Support read-only access to a number
              of cluster resources.
          type: string
          enum:
            - UNKNOWN
            - ADMIN
            - EDIT
            - VIEW
            - ANTHOS_SUPPORT
          description: predefined_role is the Kubernetes default role to use
      type: object
    ConfigManagementConfigSyncVersion:
      description: Specific versioning information pertaining to ConfigSync's Pods
      properties:
        syncer:
          description: Version of the deployed syncer pod
          type: string
        reconcilerManager:
          type: string
          description: Version of the deployed reconciler-manager pod
        rootReconciler:
          type: string
          description: Version of the deployed reconciler container in root-reconciler pod
        monitor:
          description: Version of the deployed monitor pod
          type: string
        importer:
          description: Version of the deployed importer pod
          type: string
        admissionWebhook:
          description: Version of the deployed admission_webhook pod
          type: string
        gitSync:
          description: Version of the deployed git-sync pod
          type: string
      id: ConfigManagementConfigSyncVersion
      type: object
    ConfigManagementHierarchyControllerVersion:
      properties:
        extension:
          description: Version for Hierarchy Controller extension
          type: string
        hnc:
          description: Version for open source HNC
          type: string
      description: Version for Hierarchy Controller
      id: ConfigManagementHierarchyControllerVersion
      type: object
    FleetObservabilityMembershipState:
      description: >-
        **FleetObservability**: Membership-specific Feature state for
        fleetobservability.
      properties: {}
      type: object
      id: FleetObservabilityMembershipState
    ServiceMeshMembershipState:
      id: ServiceMeshMembershipState
      type: object
      properties:
        controlPlaneManagement:
          $ref: '#/components/schemas/ServiceMeshControlPlaneManagement'
          readOnly: true
          description: Output only. Status of control plane management
        dataPlaneManagement:
          readOnly: true
          $ref: '#/components/schemas/ServiceMeshDataPlaneManagement'
          description: Output only. Status of data plane management.
      description: >-
        **Service Mesh**: State for a single Membership, as analyzed by the
        Service Mesh Hub Controller.
    ListLocationsResponse:
      id: ListLocationsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          items:
            $ref: '#/components/schemas/Location'
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
      description: The response message for Locations.ListLocations.
    GoogleRpcStatus:
      id: GoogleRpcStatus
      type: object
      properties:
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
    ListRBACRoleBindingsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A token to request the next page of resources from the
            `ListRBACRoleBindings` method. The value of an empty string means
            that there are no more resources to return.
        rbacrolebindings:
          type: array
          items:
            $ref: '#/components/schemas/RBACRoleBinding'
          description: The list of RBACRoleBindings
      id: ListRBACRoleBindingsResponse
      description: List of RBACRoleBindings.
    IdentityServiceMembershipSpec:
      description: '**Anthos Identity Service**: Configuration for a single Membership.'
      id: IdentityServiceMembershipSpec
      properties:
        authMethods:
          type: array
          description: A member may support multiple auth methods.
          items:
            $ref: '#/components/schemas/IdentityServiceAuthMethod'
      type: object
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      properties:
        updateMask:
          format: google-fieldmask
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
      description: Request message for `SetIamPolicy` method.
      type: object
    FleetObservabilityFeatureState:
      type: object
      description: >-
        **FleetObservability**: Hub-wide Feature for FleetObservability feature.
        state.
      id: FleetObservabilityFeatureState
      properties: {}
    IdentityServiceAuthMethod:
      description: >-
        Configuration of an auth method for a member/cluster. Only one
        authentication method (e.g., OIDC and LDAP) can be set per AuthMethod.
      type: object
      id: IdentityServiceAuthMethod
      properties:
        name:
          type: string
          description: Identifier for auth config.
        azureadConfig:
          $ref: '#/components/schemas/IdentityServiceAzureADConfig'
          description: AzureAD specific Configuration.
        googleConfig:
          description: GoogleConfig specific configuration
          $ref: '#/components/schemas/IdentityServiceGoogleConfig'
        proxy:
          type: string
          description: Proxy server address to use for auth method.
        oidcConfig:
          $ref: '#/components/schemas/IdentityServiceOidcConfig'
          description: OIDC specific configuration.
    PolicyControllerMembershipSpec:
      id: PolicyControllerMembershipSpec
      properties:
        policyControllerHubConfig:
          description: Policy Controller configuration for the cluster.
          $ref: '#/components/schemas/PolicyControllerHubConfig'
        version:
          description: Version of Policy Controller installed.
          type: string
      description: >-
        **Policy Controller**: Configuration for a single cluster. Intended to
        parallel the PolicyController CR.
      type: object
    CancelOperationRequest:
      id: CancelOperationRequest
      type: object
      properties: {}
      description: The request message for Operations.CancelOperation.
    ConfigManagementPolicyControllerMigration:
      properties:
        copyTime:
          description: Last time this membership spec was copied to PoCo feature.
          type: string
          format: google-datetime
        stage:
          description: Stage of the migration.
          enumDescriptions:
            - Unknown state of migration.
            - >-
              ACM Hub/Operator manages policycontroller. No migration yet
              completed.
            - >-
              All migrations steps complete; Poco Hub now manages
              policycontroller.
          enum:
            - STAGE_UNSPECIFIED
            - ACM_MANAGED
            - POCO_MANAGED
          type: string
      id: ConfigManagementPolicyControllerMigration
      description: State for the migration of PolicyController from ACM -> PoCo Hub.
      type: object
    ServiceMeshDataPlaneManagement:
      id: ServiceMeshDataPlaneManagement
      properties:
        state:
          description: Lifecycle status of data plane management.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
          enumDescriptions:
            - Unspecified
            - DISABLED means that the component is not enabled.
            - >-
              FAILED_PRECONDITION means that provisioning cannot proceed because
              of some characteristic of the member cluster.
            - PROVISIONING means that provisioning is in progress.
            - ACTIVE means that the component is ready for use.
            - STALLED means that provisioning could not be done.
            - >-
              NEEDS_ATTENTION means that the component is ready, but some user
              intervention is required. (For example that the user should
              migrate workloads to a new control plane revision.)
            - >-
              DEGRADED means that the component is ready, but operating in a
              degraded state.
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/ServiceMeshStatusDetails'
          description: Explanation of the status.
      type: object
      description: Status of data plane management. Only reported per-member.
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      id: OperationMetadata
      type: object
      properties:
        cancelRequested:
          readOnly: true
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          type: boolean
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        verb:
          type: string
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time the operation was created.
          readOnly: true
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          type: string
          readOnly: true
    ConfigManagementPolicyControllerState:
      properties:
        migration:
          $ref: '#/components/schemas/ConfigManagementPolicyControllerMigration'
          description: Record state of ACM -> PoCo Hub migration for this feature.
        version:
          description: The version of Gatekeeper Policy Controller deployed.
          $ref: '#/components/schemas/ConfigManagementPolicyControllerVersion'
        deploymentState:
          $ref: '#/components/schemas/ConfigManagementGatekeeperDeploymentState'
          description: The state about the policy controller installation.
      type: object
      id: ConfigManagementPolicyControllerState
      description: State for PolicyControllerState.
    PolicyControllerHubConfig:
      type: object
      id: PolicyControllerHubConfig
      description: Configuration for Policy Controller
      properties:
        installSpec:
          type: string
          enum:
            - INSTALL_SPEC_UNSPECIFIED
            - INSTALL_SPEC_NOT_INSTALLED
            - INSTALL_SPEC_ENABLED
            - INSTALL_SPEC_SUSPENDED
          enumDescriptions:
            - Spec is unknown.
            - Request to uninstall Policy Controller.
            - Request to install and enable Policy Controller.
            - >-
              Request to suspend Policy Controller i.e. its webhooks. If Policy
              Controller is not installed, it will be installed but suspended.
          description: >-
            The install_spec represents the intended state specified by the
            latest request that mutated install_spec in the feature spec, not
            the lifecycle state of the feature observed by the Hub feature
            controller that is reported in the feature state.
        logDeniesEnabled:
          type: boolean
          description: Logs all denies and dry run failures.
        policyContent:
          $ref: '#/components/schemas/PolicyControllerPolicyContentSpec'
          description: Specifies the desired policy content on the cluster
        referentialRulesEnabled:
          type: boolean
          description: >-
            Enables the ability to use Constraint Templates that reference to
            objects other than the object currently being evaluated.
        templateLibraryConfig:
          description: >-
            Configures the library templates to install along with Policy
            Controller.
          $ref: '#/components/schemas/PolicyControllerTemplateLibraryConfig'
        auditIntervalSeconds:
          type: string
          description: >-
            Sets the interval for Policy Controller Audit Scans (in seconds).
            When set to 0, this disables audit functionality altogether.
          format: int64
        constraintViolationLimit:
          format: int64
          type: string
          description: >-
            The maximum number of audit violations to be stored in a constraint.
            If not set, the internal default (currently 20) will be used.
        mutationEnabled:
          type: boolean
          description: Enables the ability to mutate resources using Policy Controller.
        deploymentConfigs:
          type: object
          description: >-
            Map of deployment configs to deployments ("admission", "audit",
            "mutation').
          additionalProperties:
            $ref: >-
              #/components/schemas/PolicyControllerPolicyControllerDeploymentConfig
        exemptableNamespaces:
          type: array
          description: >-
            The set of namespaces that are excluded from Policy Controller
            checks. Namespaces do not need to currently exist on the cluster.
          items:
            type: string
        monitoring:
          description: Monitoring specifies the configuration of monitoring.
          $ref: '#/components/schemas/PolicyControllerMonitoringConfig'
    MembershipBinding:
      properties:
        name:
          description: >-
            The resource name for the membershipbinding itself
            `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`
          type: string
        fleet:
          type: boolean
          description: >-
            Whether the membershipbinding is Fleet-wide; true means that this
            Membership should be bound to all Namespaces in this entire Fleet.
        deleteTime:
          readOnly: true
          type: string
          description: Output only. When the membership binding was deleted.
          format: google-datetime
        updateTime:
          type: string
          format: google-datetime
          description: Output only. When the membership binding was last updated.
          readOnly: true
        state:
          $ref: '#/components/schemas/MembershipBindingLifecycleState'
          description: Output only. State of the membership binding resource.
          readOnly: true
        createTime:
          format: google-datetime
          type: string
          description: Output only. When the membership binding was created.
          readOnly: true
        scope:
          description: >-
            A Scope resource name in the format
            `projects/*/locations/*/scopes/*`.
          type: string
        uid:
          type: string
          description: >-
            Output only. Google-generated UUID for this resource. This is unique
            across all membershipbinding resources. If a membershipbinding
            resource is deleted and another resource with the same name is
            created, it gets a different uid.
          readOnly: true
      id: MembershipBinding
      description: >-
        MembershipBinding is a subresource of a Membership, representing what
        Fleet Scopes (or other, future Fleet resources) a Membership is bound
        to.
      type: object
    ServiceMeshControlPlaneManagement:
      type: object
      id: ServiceMeshControlPlaneManagement
      description: Status of control plane management.
      properties:
        details:
          description: Explanation of state.
          type: array
          items:
            $ref: '#/components/schemas/ServiceMeshStatusDetails'
        state:
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - DISABLED
            - FAILED_PRECONDITION
            - PROVISIONING
            - ACTIVE
            - STALLED
            - NEEDS_ATTENTION
            - DEGRADED
          type: string
          description: LifecycleState of control plane management.
          enumDescriptions:
            - Unspecified
            - DISABLED means that the component is not enabled.
            - >-
              FAILED_PRECONDITION means that provisioning cannot proceed because
              of some characteristic of the member cluster.
            - PROVISIONING means that provisioning is in progress.
            - ACTIVE means that the component is ready for use.
            - STALLED means that provisioning could not be done.
            - >-
              NEEDS_ATTENTION means that the component is ready, but some user
              intervention is required. (For example that the user should
              migrate workloads to a new control plane revision.)
            - >-
              DEGRADED means that the component is ready, but operating in a
              degraded state.
    ListMembershipRBACRoleBindingsResponse:
      type: object
      description: List of Membership RBACRoleBindings.
      properties:
        nextPageToken:
          description: >-
            A token to request the next page of resources from the
            `ListMembershipRBACRoleBindings` method. The value of an empty
            string means that there are no more resources to return.
          type: string
        rbacrolebindings:
          items:
            $ref: '#/components/schemas/RBACRoleBinding'
          description: The list of Membership RBACRoleBindings.
          type: array
      id: ListMembershipRBACRoleBindingsResponse
    Policy:
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
        user:mike@example.com - group:admins@example.com - domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For
        a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      id: Policy
      properties:
        bindings:
          type: array
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: '#/components/schemas/Binding'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          format: byte
          type: string
        version:
          format: int32
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
          type: array
      type: object
    AppDevExperienceFeatureState:
      properties:
        networkingInstallSucceeded:
          $ref: '#/components/schemas/Status'
          description: >-
            Status of subcomponent that detects configured Service Mesh
            resources.
      id: AppDevExperienceFeatureState
      description: State for App Dev Exp Feature.
      type: object
    FleetObservabilityFeatureSpec:
      description: >-
        **Fleet Observability**: The Hub-wide input for the FleetObservability
        feature.
      id: FleetObservabilityFeatureSpec
      properties:
        loggingConfig:
          $ref: '#/components/schemas/FleetObservabilityLoggingConfig'
          description: >-
            Specified if fleet logging feature is enabled for the entire fleet.
            If UNSPECIFIED, fleet logging feature is disabled for the entire
            fleet.
      type: object
    IdentityServiceAzureADConfig:
      properties:
        kubectlRedirectUri:
          description: The redirect URL that kubectl uses for authorization.
          type: string
        clientId:
          description: >-
            ID for the registered client application that makes authentication
            requests to the Azure AD identity provider.
          type: string
        encryptedClientSecret:
          type: string
          format: byte
          readOnly: true
          description: Output only. Encrypted AzureAD client secret.
        tenant:
          type: string
          description: >-
            Kind of Azure AD account to be authenticated. Supported values are
            or for accounts belonging to a specific tenant.
        clientSecret:
          description: >-
            Input only. Unencrypted AzureAD client secret will be passed to the
            GKE Hub CLH.
          type: string
      id: IdentityServiceAzureADConfig
      type: object
      description: Configuration for the AzureAD Auth flow.
    ServiceMeshMembershipSpec:
      properties:
        controlPlane:
          type: string
          description: >-
            Deprecated: use `management` instead Enables automatic control plane
            management.
          enum:
            - CONTROL_PLANE_MANAGEMENT_UNSPECIFIED
            - AUTOMATIC
            - MANUAL
          enumDescriptions:
            - Unspecified
            - >-
              Google should provision a control plane revision and make it
              available in the cluster. Google will enroll this revision in a
              release channel and keep it up to date. The control plane revision
              may be a managed service, or a managed install.
            - >-
              User will manually configure the control plane (e.g. via CLI, or
              via the ControlPlaneRevision KRM API)
          deprecated: true
        management:
          enumDescriptions:
            - Unspecified
            - Google should manage my Service Mesh for the cluster.
            - User will manually configure their service mesh components.
          description: Enables automatic Service Mesh management.
          enum:
            - MANAGEMENT_UNSPECIFIED
            - MANAGEMENT_AUTOMATIC
            - MANAGEMENT_MANUAL
          type: string
      type: object
      description: >-
        **Service Mesh**: Spec for a single Membership for the servicemesh
        feature
      id: ServiceMeshMembershipSpec
    MembershipFeatureState:
      type: object
      properties:
        configmanagement:
          $ref: '#/components/schemas/ConfigManagementMembershipState'
          description: Config Management-specific state.
        state:
          description: The high-level state of this Feature for a single membership.
          $ref: '#/components/schemas/FeatureState'
        servicemesh:
          $ref: '#/components/schemas/ServiceMeshMembershipState'
          description: Service Mesh-specific state.
        appdevexperience:
          $ref: '#/components/schemas/AppDevExperienceFeatureState'
          description: Appdevexperience specific state.
        metering:
          description: Metering-specific state.
          $ref: '#/components/schemas/MeteringMembershipState'
        policycontroller:
          description: Policycontroller-specific state.
          $ref: '#/components/schemas/PolicyControllerMembershipState'
        fleetobservability:
          description: Fleet observability membership state.
          $ref: '#/components/schemas/FleetObservabilityMembershipState'
        identityservice:
          description: Identity Service-specific state.
          $ref: '#/components/schemas/IdentityServiceMembershipState'
      id: MembershipFeatureState
      description: >-
        MembershipFeatureState contains Feature status information for a single
        Membership.
    IdentityServiceOidcConfig:
      description: Configuration for OIDC Auth flow.
      properties:
        clientId:
          type: string
          description: ID for OIDC client application.
        groupPrefix:
          description: Prefix to prepend to group name.
          type: string
        userPrefix:
          description: Prefix to prepend to user name.
          type: string
        clientSecret:
          description: >-
            Input only. Unencrypted OIDC client secret will be passed to the GKE
            Hub CLH.
          type: string
        deployCloudConsoleProxy:
          description: >-
            Flag to denote if reverse proxy is used to connect to auth provider.
            This flag should be set to true when provider is not reachable by
            Google Cloud Console.
          type: boolean
        enableAccessToken:
          description: Enable access token.
          type: boolean
        userClaim:
          description: Claim in OIDC ID token that holds username.
          type: string
        scopes:
          description: Comma-separated list of identifiers.
          type: string
        certificateAuthorityData:
          description: PEM-encoded CA for OIDC provider.
          type: string
        groupsClaim:
          description: Claim in OIDC ID token that holds group information.
          type: string
        issuerUri:
          type: string
          description: >-
            URI for the OIDC provider. This should point to the level below
            .well-known/openid-configuration.
        kubectlRedirectUri:
          type: string
          description: >-
            Registered redirect uri to redirect users going through OAuth flow
            using kubectl plugin.
        extraParams:
          description: Comma-separated list of key-value pairs.
          type: string
        encryptedClientSecret:
          type: string
          readOnly: true
          description: Output only. Encrypted OIDC Client secret
          format: byte
      type: object
      id: IdentityServiceOidcConfig
    FleetObservabilityRoutingConfig:
      description: RoutingConfig configures the behaviour of fleet logging feature.
      id: FleetObservabilityRoutingConfig
      properties:
        mode:
          description: mode configures the logs routing mode.
          enumDescriptions:
            - If UNSPECIFIED, fleet logging feature is disabled.
            - logs will be copied to the destination project.
            - logs will be moved to the destination project.
          type: string
          enum:
            - MODE_UNSPECIFIED
            - COPY
            - MOVE
      type: object
    ConfigManagementInstallError:
      properties:
        errorMessage:
          type: string
          description: A string representing the user facing error message
      description: Errors pertaining to the installation of ACM
      id: ConfigManagementInstallError
      type: object
    PolicyControllerBundleInstallSpec:
      id: PolicyControllerBundleInstallSpec
      properties:
        management:
          description: >-
            Management specifies how the bundle will be managed by the
            controller.
          type: string
          enum:
            - MANAGEMENT_UNSPECIFIED
            - INSTALLED
          enumDescriptions:
            - No Management strategy has been specified.
            - The entity should be insistently reconciled by the Hub controller
        exemptedNamespaces:
          description: the set of namespaces to be exempted from the bundle
          items:
            type: string
          type: array
      type: object
      description: >-
        BundleInstallSpec is the specification configuration for a single
        managed bundle.
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkehub.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: gkehub.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/rbacrolebindings:
    parameters: *ref_1
    post:
      description: Creates a Membership RBACRoleBinding.
      operationId: gkehub.projects.locations.memberships.rbacrolebindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RBACRoleBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: rbacrolebindingId
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-verb: insert
    get:
      description: Lists all Membership RBACRoleBindings.
      operationId: gkehub.projects.locations.memberships.rbacrolebindings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipRBACRoleBindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/rbacrolebindings/{rbacrolebindingsId}:
    parameters: *ref_1
    get:
      description: Returns the details of a Membership RBACRoleBinding.
      operationId: gkehub.projects.locations.memberships.rbacrolebindings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RBACRoleBinding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: rbacrolebindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-verb: select
    delete:
      description: Deletes a Membership RBACRoleBinding.
      operationId: gkehub.projects.locations.memberships.rbacrolebindings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: rbacrolebindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-verb: delete
    patch:
      description: Updates a Membership RBACRoleBinding.
      operationId: gkehub.projects.locations.memberships.rbacrolebindings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RBACRoleBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: rbacrolebindingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/rbacrolebindings:generateMembershipRBACRoleBindingYAML:
    parameters: *ref_1
    post:
      description: >-
        Generates a YAML of the RBAC policies for the specified RoleBinding and
        its associated impersonation resources.
      operationId: >-
        gkehub.projects.locations.memberships.rbacrolebindings.generateMembershipRBACRoleBindingYAML
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RBACRoleBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GenerateMembershipRBACRoleBindingYAMLResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: rbacrolebindingId
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings/{bindingsId}:
    parameters: *ref_1
    delete:
      description: Deletes a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: bindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-verb: delete
    patch:
      description: Updates a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: bindingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-verb: exec
    get:
      description: Returns the details of a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipBinding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: path
          name: bindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}/bindings:
    parameters: *ref_1
    get:
      description: Lists MembershipBindings.
      operationId: gkehub.projects.locations.memberships.bindings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipBindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-verb: select
    post:
      description: Creates a MembershipBinding.
      operationId: gkehub.projects.locations.memberships.bindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: membershipBindingId
          schema:
            type: string
      x-stackQL-resource: bindings
      x-stackQL-verb: insert
  /v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.memberships.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkehub.projects.locations.memberships.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkehub.projects.locations.memberships.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/namespaces:
    parameters: *ref_1
    get:
      description: Lists fleet namespaces.
      operationId: gkehub.projects.locations.namespaces.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNamespacesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: namespaces
      x-stackQL-verb: select
    post:
      description: Creates a fleet namespace.
      operationId: gkehub.projects.locations.namespaces.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: namespaceId
          schema:
            type: string
      x-stackQL-resource: namespaces
      x-stackQL-verb: insert
  /v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}:
    parameters: *ref_1
    get:
      description: Returns the details of a fleet namespace.
      operationId: gkehub.projects.locations.namespaces.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: namespaces
      x-stackQL-verb: select
    delete:
      description: Deletes a fleet namespace.
      operationId: gkehub.projects.locations.namespaces.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: namespaces
      x-stackQL-verb: delete
    patch:
      description: Updates a fleet namespace.
      operationId: gkehub.projects.locations.namespaces.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: namespaces
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings/{rbacrolebindingsId}:
    parameters: *ref_1
    get:
      description: Returns the details of a RBACRoleBinding.
      operationId: gkehub.projects.locations.namespaces.rbacrolebindings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RBACRoleBinding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: rbacrolebindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-verb: select
    delete:
      description: Deletes a RBACRoleBinding.
      operationId: gkehub.projects.locations.namespaces.rbacrolebindings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: rbacrolebindingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-verb: delete
    patch:
      description: Updates a RBACRoleBinding.
      operationId: gkehub.projects.locations.namespaces.rbacrolebindings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RBACRoleBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: rbacrolebindingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/rbacrolebindings:
    parameters: *ref_1
    get:
      description: Lists RBACRoleBinding.
      operationId: gkehub.projects.locations.namespaces.rbacrolebindings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRBACRoleBindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-verb: select
    post:
      description: Creates a RBACRoleBinding.
      operationId: gkehub.projects.locations.namespaces.rbacrolebindings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RBACRoleBinding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: rbacrolebindingId
          schema:
            type: string
      x-stackQL-resource: rbacrolebindings
      x-stackQL-verb: insert
  /v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: gkehub.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: gkehub.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: gkehub.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
  /v1beta/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: gkehub.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkehub.projects.locations.features.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features_iam_policies
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Feature.
      operationId: gkehub.projects.locations.features.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-verb: select
    delete:
      description: Removes a Feature.
      operationId: gkehub.projects.locations.features.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-verb: delete
    patch:
      description: Updates an existing Feature.
      operationId: gkehub.projects.locations.features.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/features:
    parameters: *ref_1
    post:
      description: Adds a new Feature.
      operationId: gkehub.projects.locations.features.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: featureId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-verb: insert
    get:
      description: Lists Features in a given project and location.
      operationId: gkehub.projects.locations.features.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeaturesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: features
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkehub.projects.locations.features.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
      x-stackQL-resource: features_iam_policies
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.features.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: featuresId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: features_iam_policies
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/fleets:
    parameters: *ref_1
    get:
      description: >-
        Returns all fleets within an organization or a project that the caller
        has access to.
      operationId: gkehub.projects.locations.fleets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFleetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-verb: select
    post:
      description: Creates a fleet.
      operationId: gkehub.projects.locations.fleets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fleet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-verb: insert
  /v1beta/projects/{projectsId}/locations/{locationsId}/fleets/{fleetsId}:
    parameters: *ref_1
    delete:
      description: Removes a Fleet. There must be no memberships remaining in the Fleet.
      operationId: gkehub.projects.locations.fleets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: fleetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-verb: delete
    patch:
      description: Updates a fleet.
      operationId: gkehub.projects.locations.fleets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fleet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: fleetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-verb: exec
    get:
      description: Returns the details of a fleet.
      operationId: gkehub.projects.locations.fleets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: fleetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/scopes:
    parameters: *ref_1
    post:
      description: Creates a Scope.
      operationId: gkehub.projects.locations.scopes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scope'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: scopeId
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-verb: insert
    get:
      description: Lists Scopes.
      operationId: gkehub.projects.locations.scopes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScopesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkehub.projects.locations.scopes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
      x-stackQL-resource: scopes_iam_policies
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkehub.projects.locations.scopes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
      x-stackQL-resource: scopes_iam_policies
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:
    parameters: *ref_1
    delete:
      description: Deletes a Scope.
      operationId: gkehub.projects.locations.scopes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-verb: delete
    patch:
      description: Updates a scopes.
      operationId: gkehub.projects.locations.scopes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scope'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-verb: exec
    get:
      description: Returns the details of a Scope.
      operationId: gkehub.projects.locations.scopes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
      x-stackQL-resource: scopes
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/locations/{locationsId}/scopes/{scopesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.scopes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: scopesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: scopes_iam_policies
      x-stackQL-verb: select
  /v1beta/organizations/{organizationsId}/locations/{locationsId}/fleets:
    parameters: *ref_1
    get:
      description: >-
        Returns all fleets within an organization or a project that the caller
        has access to.
      operationId: gkehub.organizations.locations.fleets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFleetsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: fleets
      x-stackQL-verb: select
