openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: GKE Hub API
  description: ''
  version: v1beta1
  x-discovery-doc-revision: '20230620'
  x-generated-date: '2023-06-25'
externalDocs:
  url: >-
    https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster
servers:
  - url: https://gkehub.googleapis.com
components:
  schemas:
    KubernetesResource:
      properties:
        connectResources:
          description: >-
            Output only. The Kubernetes resources for installing the GKE Connect
            agent This field is only populated in the Membership returned from a
            successful long-running operation from CreateMembership or
            UpdateMembership. It is not populated during normal GetMembership or
            ListMemberships requests. To get the resource manifest after the
            initial registration, the caller should make a UpdateMembership call
            with an empty field mask.
          items:
            $ref: '#/components/schemas/ResourceManifest'
          type: array
          readOnly: true
        membershipResources:
          readOnly: true
          description: >-
            Output only. Additional Kubernetes resources that need to be applied
            to the cluster after Membership creation, and after every update.
            This field is only populated in the Membership returned from a
            successful long-running operation from CreateMembership or
            UpdateMembership. It is not populated during normal GetMembership or
            ListMemberships requests. To get the resource manifest after the
            initial registration, the caller should make a UpdateMembership call
            with an empty field mask.
          items:
            $ref: '#/components/schemas/ResourceManifest'
          type: array
        resourceOptions:
          description: Optional. Options for Kubernetes resource generation.
          $ref: '#/components/schemas/ResourceOptions'
        membershipCrManifest:
          description: >-
            Input only. The YAML representation of the Membership CR. This field
            is ignored for GKE clusters where Hub can read the CR directly.
            Callers should provide the CR that is currently present in the
            cluster during CreateMembership or UpdateMembership, or leave this
            field empty if none exists. The CR manifest is used to validate the
            cluster has not been registered with another Membership.
          type: string
      id: KubernetesResource
      type: object
      description: >-
        KubernetesResource contains the YAML manifests and configuration for
        Membership Kubernetes resources in the cluster. After CreateMembership
        or UpdateMembership, these resources should be re-applied in the
        cluster.
    EdgeCluster:
      properties:
        resourceLink:
          type: string
          description: >-
            Immutable. Self-link of the GCP resource for the Edge Cluster. For
            example:
            //edgecontainer.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
      type: object
      description: EdgeCluster contains information specific to Google Edge Clusters.
      id: EdgeCluster
    ListLocationsResponse:
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
          description: >-
            A list of locations that matches the specified filter in the
            request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      description: The response message for Locations.ListLocations.
      type: object
      id: ListLocationsResponse
    TestIamPermissionsRequest:
      properties:
        permissions:
          type: array
          items:
            type: string
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
      description: Request message for `TestIamPermissions` method.
      id: TestIamPermissionsRequest
      type: object
    ResourceManifest:
      description: >-
        ResourceManifest represents a single Kubernetes resource to be applied
        to the cluster.
      type: object
      properties:
        manifest:
          description: YAML manifest of the resource.
          type: string
        clusterScoped:
          type: boolean
          description: >-
            Whether the resource provided in the manifest is `cluster_scoped`.
            If unset, the manifest is assumed to be namespace scoped. This field
            is used for REST mapping when applying the resource in a cluster.
      id: ResourceManifest
    Authority:
      id: Authority
      type: object
      properties:
        identityProvider:
          type: string
          readOnly: true
          description: >-
            Output only. An identity provider that reflects the `issuer` in the
            workload identity pool.
        issuer:
          type: string
          description: >-
            Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start
            with `https://` and be a valid URL with length <2000 characters. If
            set, then Google will allow valid OIDC tokens from this issuer to
            authenticate within the workload_identity_pool. OIDC discovery will
            be performed on this URI to validate tokens from the issuer.
            Clearing `issuer` disables Workload Identity. `issuer` cannot be
            directly modified; it must be cleared (and Workload Identity
            disabled) before using a new issuer (and re-enabling Workload
            Identity).
        oidcJwks:
          format: byte
          description: >-
            Optional. OIDC verification keys for this Membership in JWKS format
            (RFC 7517). When this field is set, OIDC discovery will NOT be
            performed on `issuer`, and instead OIDC tokens will be validated
            using this field.
          type: string
        workloadIdentityPool:
          type: string
          description: >-
            Output only. The name of the workload identity pool in which
            `issuer` will be recognized. There is a single Workload Identity
            Pool per Hub that is shared between all Memberships that belong to
            that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format
            is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in
            newer versions of this API.
          readOnly: true
      description: >-
        Authority encodes how Google will recognize identities from this
        Membership. See the workload identity documentation for more details:
        https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
    ListMembershipsResponse:
      type: object
      id: ListMembershipsResponse
      description: >-
        Response message for the `GkeHubMembershipService.ListMemberships`
        method.
      properties:
        nextPageToken:
          description: >-
            A token to request the next page of resources from the
            `ListMemberships` method. The value of an empty string means that
            there are no more resources to return.
          type: string
        resources:
          description: The list of matching Memberships.
          items:
            $ref: '#/components/schemas/Membership'
          type: array
        unreachable:
          type: array
          description: >-
            List of locations that could not be reached while fetching this
            list.
          items:
            type: string
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      id: ListOperationsResponse
      type: object
    Expr:
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      properties:
        title:
          type: string
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
      type: object
      id: Expr
    MonitoringConfig:
      properties:
        projectId:
          type: string
          description: Immutable. Project used to report Metrics
        clusterHash:
          description: >-
            Immutable. Cluster hash, this is a unique string generated by google
            code, which does not contain any PII, which we can use to reference
            the cluster. This is expected to be created by the monitoring stack
            and persisted into the Cluster object as well as to GKE-Hub.
          type: string
        location:
          type: string
          description: Immutable. Location used to report Metrics
        kubernetesMetricsPrefix:
          type: string
          description: >-
            Kubernetes system metrics, if available, are written to this prefix.
            This defaults to kubernetes.io for GKE, and kubernetes.io/anthos for
            Anthos eventually. Noted: Anthos MultiCloud will have kubernetes.io
            prefix today but will migration to be under kubernetes.io/anthos
        cluster:
          type: string
          description: >-
            Immutable. Cluster name used to report metrics. For Anthos on
            VMWare/Baremetal, it would be in format
            `memberClusters/cluster_name`; And for Anthos on MultiCloud, it
            would be in format `{azureClusters, awsClusters}/cluster_name`.
      description: >-
        This field informs Fleet-based applications/services/UIs with the
        necessary information for where each underlying Cluster reports its
        metrics.
      type: object
      id: MonitoringConfig
    TypeMeta:
      id: TypeMeta
      properties:
        apiVersion:
          type: string
          description: APIVersion of the resource (e.g. v1).
        kind:
          type: string
          description: Kind of the resource (e.g. Deployment).
      description: >-
        TypeMeta is the type information needed for content unmarshalling of
        Kubernetes resources in the manifest.
      type: object
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
      description: Response message for `TestIamPermissions` method.
    MultiCloudCluster:
      description: >-
        MultiCloudCluster contains information specific to GKE Multi-Cloud
        clusters.
      id: MultiCloudCluster
      type: object
      properties:
        resourceLink:
          description: >-
            Immutable. Self-link of the GCP resource for the GKE Multi-Cloud
            cluster. For example:
            //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster
            //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster
            //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/attachedClusters/my-cluster
          type: string
        clusterMissing:
          type: boolean
          readOnly: true
          description: >-
            Output only. If cluster_missing is set then it denotes that
            API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud
            cluster no longer exists.
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      id: SetIamPolicyRequest
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          format: google-fieldmask
          type: string
      type: object
    MembershipState:
      id: MembershipState
      properties:
        updateTime:
          deprecated: true
          description: This field is never set by the Hub Service.
          format: google-datetime
          type: string
        code:
          description: Output only. The current state of the Membership resource.
          type: string
          enum:
            - CODE_UNSPECIFIED
            - CREATING
            - READY
            - DELETING
            - UPDATING
            - SERVICE_UPDATING
          readOnly: true
          enumDescriptions:
            - The code is not set.
            - The cluster is being registered.
            - The cluster is registered.
            - The cluster is being unregistered.
            - The Membership is being updated.
            - The Membership is being updated by the Hub Service.
        description:
          type: string
          deprecated: true
          description: This field is never set by the Hub Service.
      description: State of the Membership resource.
      type: object
    Location:
      type: object
      description: A resource that represents a Google Cloud location.
      properties:
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        metadata:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          additionalProperties:
            type: string
          type: object
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        displayName:
          type: string
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
      id: Location
    GenerateExclusivityManifestResponse:
      properties:
        crManifest:
          description: >-
            The YAML manifest of the membership CR to apply if a new version of
            the CR is available. Empty if no update needs to be applied.
          type: string
        crdManifest:
          description: >-
            The YAML manifest of the membership CRD to apply if a newer version
            of the CRD is available. Empty if no update needs to be applied.
          type: string
      id: GenerateExclusivityManifestResponse
      type: object
      description: >-
        The response of the exclusivity artifacts manifests for the client to
        apply.
    MembershipEndpoint:
      properties:
        gkeCluster:
          description: Optional. Specific information for a GKE-on-GCP cluster.
          $ref: '#/components/schemas/GkeCluster'
        edgeCluster:
          description: Optional. Specific information for a Google Edge cluster.
          $ref: '#/components/schemas/EdgeCluster'
        kubernetesResource:
          description: >-
            Optional. The in-cluster Kubernetes Resources that should be applied
            for a correctly registered cluster, in the steady state. These
            resources: * Ensure that the cluster is exclusively registered to
            one and only one Hub Membership. * Propagate Workload Pool
            Information available in the Membership Authority field. * Ensure
            proper initial configuration of default Hub Features.
          $ref: '#/components/schemas/KubernetesResource'
        kubernetesMetadata:
          description: Output only. Useful Kubernetes-specific metadata.
          readOnly: true
          $ref: '#/components/schemas/KubernetesMetadata'
        onPremCluster:
          description: >-
            Optional. Specific information for a GKE On-Prem cluster. An onprem
            user-cluster who has no resourceLink is not allowed to use this
            field, it should have a nil "type" instead.
          $ref: '#/components/schemas/OnPremCluster'
        applianceCluster:
          $ref: '#/components/schemas/ApplianceCluster'
          description: Optional. Specific information for a GDC Edge Appliance cluster.
        multiCloudCluster:
          description: Optional. Specific information for a GKE Multi-Cloud cluster.
          $ref: '#/components/schemas/MultiCloudCluster'
      type: object
      id: MembershipEndpoint
      description: >-
        MembershipEndpoint contains information needed to contact a Kubernetes
        API, endpoint and any additional Kubernetes metadata.
    Empty:
      id: Empty
      properties: {}
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
    OperationMetadata:
      properties:
        target:
          type: string
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          readOnly: true
          format: google-datetime
        verb:
          readOnly: true
          type: string
          description: Output only. Name of the verb executed by the operation.
        createTime:
          readOnly: true
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
        statusDetail:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        cancelRequested:
          readOnly: true
          type: boolean
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
      id: OperationMetadata
      type: object
      description: Represents the metadata of the long-running operation.
    AuditConfig:
      type: object
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          type: array
        service:
          type: string
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
      id: AuditConfig
    GoogleRpcStatus:
      id: GoogleRpcStatus
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
    Binding:
      properties:
        members:
          type: array
          items:
            type: string
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding.
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
      description: Associates `members`, or principals, with a `role`.
      id: Binding
    Operation:
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
        response:
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
      id: Operation
      type: object
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
    GenerateConnectManifestResponse:
      properties:
        manifest:
          type: array
          items:
            $ref: '#/components/schemas/ConnectAgentResource'
          description: >-
            The ordered list of Kubernetes resources that need to be applied to
            the cluster for GKE Connect agent installation/upgrade.
      id: GenerateConnectManifestResponse
      description: >-
        GenerateConnectManifestResponse contains manifest information for
        installing/upgrading a Connect agent.
      type: object
    OnPremCluster:
      id: OnPremCluster
      description: OnPremCluster contains information specific to GKE On-Prem clusters.
      type: object
      properties:
        resourceLink:
          description: >-
            Immutable. Self-link of the GCP resource for the GKE On-Prem
            cluster. For example:
            //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster
            //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
          type: string
        clusterType:
          description: Immutable. The on prem cluster's type.
          enum:
            - CLUSTERTYPE_UNSPECIFIED
            - BOOTSTRAP
            - HYBRID
            - STANDALONE
            - USER
          type: string
          enumDescriptions:
            - The ClusterType is not set.
            - The ClusterType is bootstrap cluster.
            - The ClusterType is baremetal hybrid cluster.
            - The ClusterType is baremetal standalone cluster.
            - The ClusterType is user cluster.
        adminCluster:
          description: Immutable. Whether the cluster is an admin cluster.
          type: boolean
        clusterMissing:
          description: >-
            Output only. If cluster_missing is set then it denotes that
            API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster
            no longer exists.
          readOnly: true
          type: boolean
    ResourceOptions:
      description: ResourceOptions represent options for Kubernetes resource generation.
      id: ResourceOptions
      properties:
        connectVersion:
          description: >-
            Optional. The Connect agent version to use for connect_resources.
            Defaults to the latest GKE Connect version. The version must be a
            currently supported version, obsolete versions will be rejected.
          type: string
        v1beta1Crd:
          description: >-
            Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1`
            for CustomResourceDefinition resources. This option should be set
            for clusters with Kubernetes apiserver versions <1.16.
          type: boolean
        k8sVersion:
          description: >-
            Optional. Major version of the Kubernetes cluster. This is only used
            to determine which version to use for the CustomResourceDefinition
            resources, `apiextensions/v1beta1` or`apiextensions/v1`.
          type: string
      type: object
    GkeCluster:
      description: GkeCluster contains information specific to GKE clusters.
      id: GkeCluster
      type: object
      properties:
        clusterMissing:
          type: boolean
          description: >-
            Output only. If cluster_missing is set then it denotes that the GKE
            cluster no longer exists in the GKE Control Plane.
          readOnly: true
        resourceLink:
          type: string
          description: >-
            Immutable. Self-link of the GCP resource for the GKE cluster. For
            example:
            //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster
            Zonal clusters are also supported.
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
        user:mike@example.com - group:admins@example.com - domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For
        a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        auditConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
        bindings:
          type: array
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: '#/components/schemas/Binding'
        etag:
          format: byte
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
        version:
          format: int32
          type: integer
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
    KubernetesMetadata:
      id: KubernetesMetadata
      properties:
        kubernetesApiServerVersion:
          type: string
          description: >-
            Output only. Kubernetes API server version string as reported by
            '/version'.
          readOnly: true
        nodeCount:
          description: Output only. Node count as reported by Kubernetes nodes resources.
          readOnly: true
          type: integer
          format: int32
        nodeProviderId:
          type: string
          description: >-
            Output only. Node providerID as reported by the first node in the
            list of nodes on the Kubernetes endpoint. On Kubernetes platforms
            that support zero-node clusters (like GKE-on-GCP), the node_count
            will be zero and the node_provider_id will be empty.
          readOnly: true
        updateTime:
          type: string
          readOnly: true
          description: >-
            Output only. The time at which these details were last updated. This
            update_time is different from the Membership-level update_time since
            EndpointDetails are updated internally for API consumers.
          format: google-datetime
        memoryMb:
          description: >-
            Output only. The total memory capacity as reported by the sum of all
            Kubernetes nodes resources, defined in MB.
          type: integer
          readOnly: true
          format: int32
        vcpuCount:
          format: int32
          description: Output only. vCPU count as reported by Kubernetes nodes resources.
          type: integer
          readOnly: true
      description: >-
        KubernetesMetadata provides informational metadata for Memberships
        representing Kubernetes clusters.
      type: object
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    AuditLogConfig:
      properties:
        logType:
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          description: The log type that this config enables.
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          type: string
        exemptedMembers:
          type: array
          items:
            type: string
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      id: AuditLogConfig
    ApplianceCluster:
      type: object
      id: ApplianceCluster
      description: >-
        ApplianceCluster contains information specific to GDC Edge Appliance
        Clusters.
      properties:
        resourceLink:
          type: string
          description: >-
            Immutable. Self-link of the GCP resource for the Appliance Cluster.
            For example:
            //transferappliance.googleapis.com/projects/my-project/locations/us-west1-a/appliances/my-appliance
    ConnectAgentResource:
      description: >-
        ConnectAgentResource represents a Kubernetes resource manifest for
        Connect Agent deployment.
      type: object
      properties:
        type:
          description: Kubernetes type of the resource.
          $ref: '#/components/schemas/TypeMeta'
        manifest:
          description: YAML manifest of the resource.
          type: string
      id: ConnectAgentResource
    Membership:
      description: Membership contains information about a member cluster.
      id: Membership
      type: object
      properties:
        labels:
          description: Optional. GCP labels for this membership.
          additionalProperties:
            type: string
          type: object
        uniqueId:
          description: >-
            Output only. Google-generated UUID for this resource. This is unique
            across all Membership resources. If a Membership resource is deleted
            and another resource with the same name is created, it gets a
            different unique_id.
          type: string
          readOnly: true
        lastConnectionTime:
          format: google-datetime
          type: string
          readOnly: true
          description: >-
            Output only. For clusters using Connect, the timestamp of the most
            recent connection established with Google Cloud. This time is
            updated every several minutes, not continuously. For clusters that
            do not use GKE Connect, or that have never connected successfully,
            this field will be unset.
        infrastructureType:
          type: string
          enum:
            - INFRASTRUCTURE_TYPE_UNSPECIFIED
            - ON_PREM
            - MULTI_CLOUD
          description: Optional. The infrastructure type this Membership is running on.
          enumDescriptions:
            - >-
              No type was specified. Some Hub functionality may require a type
              be specified, and will not support Memberships with this value.
            - >-
              Private infrastructure that is owned or operated by customer. This
              includes GKE distributions such as GKE-OnPrem and GKE-OnBareMetal.
            - Public cloud infrastructure.
        name:
          readOnly: true
          type: string
          description: >-
            Output only. The full, unique name of this Membership resource in
            the format `projects/*/locations/*/memberships/{membership_id}`, set
            during creation. `membership_id` must be a valid RFC 1123 compliant
            DNS label: 1. At most 63 characters in length 2. It must consist of
            lower case alphanumeric characters or `-` 3. It must start and end
            with an alphanumeric character Which can be expressed as the regex:
            `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63
            characters.
        deleteTime:
          format: google-datetime
          description: Output only. When the Membership was deleted.
          type: string
          readOnly: true
        authority:
          $ref: '#/components/schemas/Authority'
          description: >-
            Optional. How to identify workloads from this Membership. See the
            documentation on Workload Identity for more details:
            https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
        createTime:
          description: Output only. When the Membership was created.
          type: string
          readOnly: true
          format: google-datetime
        externalId:
          description: >-
            Optional. An externally-generated and managed ID for this
            Membership. This ID may be modified after creation, but this is not
            recommended. For GKE clusters, external_id is managed by the Hub API
            and updates will be ignored. The ID must match the regex:
            `a-zA-Z0-9*` If this Membership represents a Kubernetes cluster,
            this value should be set to the UID of the `kube-system` namespace
            object.
          type: string
        updateTime:
          readOnly: true
          type: string
          description: Output only. When the Membership was last updated.
          format: google-datetime
        state:
          readOnly: true
          description: Output only. State of the Membership resource.
          $ref: '#/components/schemas/MembershipState'
        monitoringConfig:
          $ref: '#/components/schemas/MonitoringConfig'
          description: Optional. The monitoring config information for this membership.
        endpoint:
          $ref: '#/components/schemas/MembershipEndpoint'
          description: Optional. Endpoint information to reach this member.
        description:
          description: >-
            Optional. Description of this membership, limited to 63 characters.
            Must match the regex: `a-zA-Z0-9*`
          type: string
    ValidateExclusivityResponse:
      properties:
        status:
          description: >-
            The validation result. * `OK` means that exclusivity is validated,
            assuming the manifest produced by GenerateExclusivityManifest is
            successfully applied. * `ALREADY_EXISTS` means that the Membership
            CRD is already owned by another Hub. See `status.message` for more
            information.
          $ref: '#/components/schemas/GoogleRpcStatus'
      type: object
      id: ValidateExclusivityResponse
      description: The response of exclusivity artifacts validation result status.
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: gkehub.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: gkehub.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: gkehub.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: gkehub.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/memberships:
    parameters: *ref_1
    post:
      description: >-
        Creates a new Membership. **This is currently only supported for GKE
        clusters on Google Cloud**. To register other clusters, follow the
        instructions at
        https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster.
      operationId: gkehub.projects.locations.memberships.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: membershipId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: insert
    get:
      description: Lists Memberships in a given project and location.
      operationId: gkehub.projects.locations.memberships.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: memberships
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:
    parameters: *ref_1
    patch:
      description: Updates an existing Membership.
      operationId: gkehub.projects.locations.memberships.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
    delete:
      description: >-
        Removes a Membership. **This is currently only supported for GKE
        clusters on Google Cloud**. To unregister other clusters, follow the
        instructions at
        https://cloud.google.com/anthos/multicluster-management/connect/unregistering-a-cluster.
      operationId: gkehub.projects.locations.memberships.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: memberships
      x-stackQL-verb: delete
    get:
      description: Gets the details of a Membership.
      operationId: gkehub.projects.locations.memberships.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:generateConnectManifest:
    parameters: *ref_1
    get:
      description: >-
        Generates the manifest for deployment of the GKE connect agent. **This
        method is used internally by Google-provided libraries.** Most clients
        should not need to call this method directly.
      operationId: gkehub.projects.locations.memberships.generateConnectManifest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateConnectManifestResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: isUpgrade
          schema:
            type: boolean
        - in: query
          name: connectAgent.name
          schema:
            type: string
        - in: query
          name: registry
          schema:
            type: string
        - in: query
          name: version
          schema:
            type: string
        - in: query
          name: connectAgent.proxy
          schema:
            type: string
        - in: query
          name: imagePullSecretContent
          schema:
            type: string
        - in: query
          name: connectAgent.namespace
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: gkehub.projects.locations.memberships.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: gkehub.projects.locations.memberships.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/memberships:validateExclusivity:
    parameters: *ref_1
    get:
      description: >-
        ValidateExclusivity validates the state of exclusivity in the cluster.
        The validation does not depend on an existing Hub membership resource.
      operationId: gkehub.projects.locations.memberships.validateExclusivity
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateExclusivityResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: intendedMembership
          schema:
            type: string
        - in: query
          name: crManifest
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: gkehub.projects.locations.memberships.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: memberships_iam_policies
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:generateExclusivityManifest:
    parameters: *ref_1
    get:
      description: >-
        GenerateExclusivityManifest generates the manifests to update the
        exclusivity artifacts in the cluster if needed. Exclusivity artifacts
        include the Membership custom resource definition (CRD) and the
        singleton Membership custom resource (CR). Combined with
        ValidateExclusivity, exclusivity artifacts guarantee that a Kubernetes
        cluster is only registered to a single GKE Hub. The Membership CRD is
        versioned, and may require conversion when the GKE Hub API server begins
        serving a newer version of the CRD and corresponding CR. The response
        will be the converted CRD and CR if there are any differences between
        the versions.
      operationId: gkehub.projects.locations.memberships.generateExclusivityManifest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateExclusivityManifestResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
        - in: query
          name: crdManifest
          schema:
            type: string
        - in: query
          name: crManifest
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: gkehub.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: gkehub.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
