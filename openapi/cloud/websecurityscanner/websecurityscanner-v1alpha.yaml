openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Web Security Scanner API
  description: Scans your Compute and App Engine apps for common web vulnerabilities.
  version: v1alpha
  x-discovery-doc-revision: '20230619'
  x-generated-date: '2023-06-25'
externalDocs:
  url: >-
    https://cloud.google.com/security-command-center/docs/concepts-web-security-scanner-overview/
servers:
  - url: https://websecurityscanner.googleapis.com
components:
  schemas:
    ListCrawledUrlsResponse:
      properties:
        crawledUrls:
          type: array
          description: The list of CrawledUrls returned.
          items:
            $ref: '#/components/schemas/CrawledUrl'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
      id: ListCrawledUrlsResponse
      description: Response for the `ListCrawledUrls` method.
      type: object
    ScanRun:
      description: >-
        A ScanRun is a output-only resource representing an actual run of the
        scan.
      type: object
      properties:
        startTime:
          description: The time at which the ScanRun started.
          format: google-datetime
          type: string
        executionState:
          enum:
            - EXECUTION_STATE_UNSPECIFIED
            - QUEUED
            - SCANNING
            - FINISHED
          enumDescriptions:
            - >-
              Represents an invalid state caused by internal server error. This
              value should never be returned.
            - The scan is waiting in the queue.
            - The scan is in progress.
            - The scan is either finished or stopped by user.
          description: The execution state of the ScanRun.
          type: string
        progressPercent:
          description: >-
            The percentage of total completion ranging from 0 to 100. If the
            scan is in queue, the value is 0. If the scan is running, the value
            ranges from 0 to 100. If the scan is finished, the value is 100.
          type: integer
          format: int32
        name:
          type: string
          description: >-
            The resource name of the ScanRun. The name follows the format of
            'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'.
            The ScanRun IDs are generated by the system.
        urlsTestedCount:
          format: int64
          description: >-
            The number of URLs tested during this ScanRun. If the scan is in
            progress, the value represents the number of URLs tested up to now.
            The number of URLs tested is usually larger than the number URLS
            crawled because typically a crawled URL is tested with multiple test
            payloads.
          type: string
        endTime:
          format: google-datetime
          description: >-
            The time at which the ScanRun reached termination state - that the
            ScanRun is either finished or stopped by user.
          type: string
        urlsCrawledCount:
          type: string
          format: int64
          description: >-
            The number of URLs crawled during this ScanRun. If the scan is in
            progress, the value represents the number of URLs crawled up to now.
        resultState:
          enum:
            - RESULT_STATE_UNSPECIFIED
            - SUCCESS
            - ERROR
            - KILLED
          enumDescriptions:
            - >-
              Default value. This value is returned when the ScanRun is not yet
              finished.
            - The scan finished without errors.
            - The scan finished with errors.
            - The scan was terminated by user.
          description: >-
            The result state of the ScanRun. This field is only available after
            the execution state reaches "FINISHED".
          type: string
        hasVulnerabilities:
          type: boolean
          description: Whether the scan run has found any vulnerabilities.
      id: ScanRun
    VulnerableParameters:
      id: VulnerableParameters
      description: Information about vulnerable request parameters.
      properties:
        parameterNames:
          items:
            type: string
          type: array
          description: The vulnerable parameter names.
      type: object
    ListScanConfigsResponse:
      id: ListScanConfigsResponse
      description: Response for the `ListScanConfigs` method.
      type: object
      properties:
        scanConfigs:
          items:
            $ref: '#/components/schemas/ScanConfig'
          description: The list of ScanConfigs returned.
          type: array
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
    ScanConfig:
      properties:
        latestRun:
          description: Latest ScanRun if available.
          $ref: '#/components/schemas/ScanRun'
        schedule:
          description: The schedule of the ScanConfig.
          $ref: '#/components/schemas/Schedule'
        targetPlatforms:
          description: >-
            Set of Google Cloud platforms targeted by the scan. If empty,
            APP_ENGINE will be used as a default.
          items:
            enum:
              - TARGET_PLATFORM_UNSPECIFIED
              - APP_ENGINE
              - COMPUTE
              - CLOUD_RUN
              - CLOUD_FUNCTIONS
            enumDescriptions:
              - >-
                The target platform is unknown. Requests with this enum value
                will be rejected with INVALID_ARGUMENT error.
              - Google App Engine service.
              - Google Compute Engine service.
              - Google Cloud Run service.
              - Google Cloud Function service.
            type: string
          type: array
        blacklistPatterns:
          items:
            type: string
          type: array
          description: >-
            The excluded URL patterns as described in
            https://cloud.google.com/security-command-center/docs/how-to-use-web-security-scanner#excluding_urls
        name:
          description: >-
            The resource name of the ScanConfig. The name follows the format of
            'projects/{projectId}/scanConfigs/{scanConfigId}'. The ScanConfig
            IDs are generated by the system.
          type: string
        userAgent:
          enum:
            - USER_AGENT_UNSPECIFIED
            - CHROME_LINUX
            - CHROME_ANDROID
            - SAFARI_IPHONE
          description: The user agent used during scanning.
          type: string
          enumDescriptions:
            - The user agent is unknown. Service will default to CHROME_LINUX.
            - Chrome on Linux. This is the service default if unspecified.
            - Chrome on Android.
            - Safari on IPhone.
        displayName:
          description: Required. The user provided display name of the ScanConfig.
          type: string
        startingUrls:
          items:
            type: string
          type: array
          description: Required. The starting URLs from which the scanner finds site pages.
        authentication:
          description: >-
            The authentication configuration. If specified, service will use the
            authentication configuration during scanning.
          $ref: '#/components/schemas/Authentication'
        maxQps:
          format: int32
          description: >-
            The maximum QPS during scanning. A valid value ranges from 5 to 20
            inclusively. If the field is unspecified or its value is set 0,
            server will default to 15. Other values outside of [5, 20] range
            will be rejected with INVALID_ARGUMENT error.
          type: integer
      type: object
      id: ScanConfig
      description: >-
        A ScanConfig resource contains the configurations to launch a scan. next
        id: 12
    VulnerableHeaders:
      type: object
      description: Information about vulnerable or missing HTTP Headers.
      id: VulnerableHeaders
      properties:
        missingHeaders:
          description: List of missing headers.
          items:
            $ref: '#/components/schemas/Header'
          type: array
        headers:
          type: array
          description: List of vulnerable headers.
          items:
            $ref: '#/components/schemas/Header'
    Empty:
      properties: {}
      id: Empty
      type: object
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    OutdatedLibrary:
      properties:
        version:
          description: The version number.
          type: string
        libraryName:
          description: The name of the outdated library.
          type: string
        learnMoreUrls:
          items:
            type: string
          description: >-
            URLs to learn more information about the vulnerabilities in the
            library.
          type: array
      description: Information reported for an outdated library.
      type: object
      id: OutdatedLibrary
    ViolatingResource:
      type: object
      description: >-
        Information regarding any resource causing the vulnerability such as
        JavaScript sources, image, audio files, etc.
      properties:
        contentType:
          description: The MIME type of this resource.
          type: string
        resourceUrl:
          type: string
          description: URL of this violating resource.
      id: ViolatingResource
    Xss:
      type: object
      properties:
        stackTraces:
          items:
            type: string
          description: Stack traces leading to the point where the XSS occurred.
          type: array
        errorMessage:
          description: An error message generated by a javascript breakage.
          type: string
      description: Information reported for an XSS.
      id: Xss
    Finding:
      id: Finding
      properties:
        description:
          description: The description of the vulnerability.
          type: string
        vulnerableHeaders:
          description: >-
            An addon containing information about vulnerable or missing HTTP
            headers.
          $ref: '#/components/schemas/VulnerableHeaders'
        finalUrl:
          description: The URL where the browser lands when the vulnerability is detected.
          type: string
        httpMethod:
          description: >-
            The http method of the request that triggered the vulnerability, in
            uppercase.
          type: string
        frameUrl:
          type: string
          description: >-
            If the vulnerability was originated from nested IFrame, the
            immediate parent IFrame is reported.
        xss:
          $ref: '#/components/schemas/Xss'
          description: An addon containing information reported for an XSS, if any.
        vulnerableParameters:
          $ref: '#/components/schemas/VulnerableParameters'
          description: >-
            An addon containing information about request parameters which were
            found to be vulnerable.
        reproductionUrl:
          description: >-
            The URL containing human-readable payload that user can leverage to
            reproduce the vulnerability.
          type: string
        outdatedLibrary:
          $ref: '#/components/schemas/OutdatedLibrary'
          description: An addon containing information about outdated libraries.
        name:
          type: string
          description: >-
            The resource name of the Finding. The name follows the format of
            'projects/{projectId}/scanConfigs/{scanConfigId}/scanruns/{scanRunId}/findings/{findingId}'.
            The finding IDs are generated by the system.
        body:
          description: The body of the request that triggered the vulnerability.
          type: string
        findingType:
          type: string
          enum:
            - FINDING_TYPE_UNSPECIFIED
            - MIXED_CONTENT
            - OUTDATED_LIBRARY
            - ROSETTA_FLASH
            - XSS_CALLBACK
            - XSS_ERROR
            - CLEAR_TEXT_PASSWORD
            - INVALID_CONTENT_TYPE
            - XSS_ANGULAR_CALLBACK
            - INVALID_HEADER
            - MISSPELLED_SECURITY_HEADER_NAME
            - MISMATCHING_SECURITY_HEADER_VALUES
          description: The type of the Finding.
          enumDescriptions:
            - The invalid finding type.
            - >-
              A page that was served over HTTPS also resources over HTTP. A
              man-in-the-middle attacker could tamper with the HTTP resource and
              gain full access to the website that loads the resource or to
              monitor the actions taken by the user.
            - >-
              The version of an included library is known to contain a security
              issue. The scanner checks the version of library in use against a
              known list of vulnerable libraries. False positives are possible
              if the version detection fails or if the library has been manually
              patched.
            - >-
              This type of vulnerability occurs when the value of a request
              parameter is reflected at the beginning of the response, for
              example, in requests using JSONP. Under certain circumstances, an
              attacker may be able to supply an alphanumeric-only Flash file in
              the vulnerable parameter causing the browser to execute the Flash
              file as if it originated on the vulnerable server.
            - >-
              A cross-site scripting (XSS) bug is found via JavaScript callback.
              For detailed explanations on XSS, see
              https://www.google.com/about/appsecurity/learning/xss/.
            - >-
              A potential cross-site scripting (XSS) bug due to JavaScript
              breakage. In some circumstances, the application under test might
              modify the test string before it is parsed by the browser. When
              the browser attempts to runs this modified test string, it will
              likely break and throw a JavaScript execution error, thus an
              injection issue is occurring. However, it may not be exploitable.
              Manual verification is needed to see if the test string
              modifications can be evaded and confirm that the issue is in fact
              an XSS vulnerability. For detailed explanations on XSS, see
              https://www.google.com/about/appsecurity/learning/xss/.
            - >-
              An application appears to be transmitting a password field in
              clear text. An attacker can eavesdrop network traffic and sniff
              the password field.
            - >-
              An application returns sensitive content with an invalid content
              type, or without an 'X-Content-Type-Options: nosniff' header.
            - >-
              A cross-site scripting (XSS) vulnerability in AngularJS module
              that occurs when a user-provided string is interpolated by
              Angular.
            - A malformed or invalid valued header.
            - Misspelled security header name.
            - Mismatching values in a duplicate security header.
        trackingId:
          type: string
          description: >-
            The tracking ID uniquely identifies a vulnerability instance across
            multiple ScanRuns.
        violatingResource:
          description: >-
            An addon containing detailed information regarding any resource
            causing the vulnerability such as JavaScript sources, image, audio
            files, etc.
          $ref: '#/components/schemas/ViolatingResource'
        fuzzedUrl:
          type: string
          description: >-
            The URL produced by the server-side fuzzer and used in the request
            that triggered the vulnerability.
      description: >-
        A Finding resource represents a vulnerability instance identified during
        a ScanRun.
      type: object
    ListFindingTypeStatsResponse:
      id: ListFindingTypeStatsResponse
      description: Response for the `ListFindingTypeStats` method.
      properties:
        findingTypeStats:
          description: The list of FindingTypeStats returned.
          type: array
          items:
            $ref: '#/components/schemas/FindingTypeStats'
      type: object
    Header:
      id: Header
      type: object
      properties:
        value:
          type: string
          description: Header value.
        name:
          description: Header name.
          type: string
      description: Describes a HTTP Header.
    FindingTypeStats:
      id: FindingTypeStats
      properties:
        findingCount:
          description: The count of findings belonging to this finding type.
          type: integer
          format: int32
        findingType:
          enumDescriptions:
            - The invalid finding type.
            - >-
              A page that was served over HTTPS also resources over HTTP. A
              man-in-the-middle attacker could tamper with the HTTP resource and
              gain full access to the website that loads the resource or to
              monitor the actions taken by the user.
            - >-
              The version of an included library is known to contain a security
              issue. The scanner checks the version of library in use against a
              known list of vulnerable libraries. False positives are possible
              if the version detection fails or if the library has been manually
              patched.
            - >-
              This type of vulnerability occurs when the value of a request
              parameter is reflected at the beginning of the response, for
              example, in requests using JSONP. Under certain circumstances, an
              attacker may be able to supply an alphanumeric-only Flash file in
              the vulnerable parameter causing the browser to execute the Flash
              file as if it originated on the vulnerable server.
            - >-
              A cross-site scripting (XSS) bug is found via JavaScript callback.
              For detailed explanations on XSS, see
              https://www.google.com/about/appsecurity/learning/xss/.
            - >-
              A potential cross-site scripting (XSS) bug due to JavaScript
              breakage. In some circumstances, the application under test might
              modify the test string before it is parsed by the browser. When
              the browser attempts to runs this modified test string, it will
              likely break and throw a JavaScript execution error, thus an
              injection issue is occurring. However, it may not be exploitable.
              Manual verification is needed to see if the test string
              modifications can be evaded and confirm that the issue is in fact
              an XSS vulnerability. For detailed explanations on XSS, see
              https://www.google.com/about/appsecurity/learning/xss/.
            - >-
              An application appears to be transmitting a password field in
              clear text. An attacker can eavesdrop network traffic and sniff
              the password field.
            - >-
              An application returns sensitive content with an invalid content
              type, or without an 'X-Content-Type-Options: nosniff' header.
            - >-
              A cross-site scripting (XSS) vulnerability in AngularJS module
              that occurs when a user-provided string is interpolated by
              Angular.
            - A malformed or invalid valued header.
            - Misspelled security header name.
            - Mismatching values in a duplicate security header.
          description: The finding type associated with the stats.
          type: string
          enum:
            - FINDING_TYPE_UNSPECIFIED
            - MIXED_CONTENT
            - OUTDATED_LIBRARY
            - ROSETTA_FLASH
            - XSS_CALLBACK
            - XSS_ERROR
            - CLEAR_TEXT_PASSWORD
            - INVALID_CONTENT_TYPE
            - XSS_ANGULAR_CALLBACK
            - INVALID_HEADER
            - MISSPELLED_SECURITY_HEADER_NAME
            - MISMATCHING_SECURITY_HEADER_VALUES
      type: object
      description: >-
        A FindingTypeStats resource represents stats regarding a specific
        FindingType of Findings under a given ScanRun.
    ListFindingsResponse:
      description: Response for the `ListFindings` method.
      properties:
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        findings:
          description: The list of Findings returned.
          items:
            $ref: '#/components/schemas/Finding'
          type: array
      type: object
      id: ListFindingsResponse
    CustomAccount:
      description: Describes authentication configuration that uses a custom account.
      id: CustomAccount
      type: object
      properties:
        loginUrl:
          description: Required. The login form URL of the website.
          type: string
        username:
          description: Required. The user name of the custom account.
          type: string
        password:
          description: >-
            Required. Input only. The password of the custom account. The
            credential is stored encrypted and not returned in any response nor
            included in audit logs.
          type: string
    Schedule:
      id: Schedule
      properties:
        scheduleTime:
          description: >-
            A timestamp indicates when the next run will be scheduled. The value
            is refreshed by the server after each run. If unspecified, it will
            default to current server time, which means the scan will be
            scheduled to start immediately.
          type: string
          format: google-datetime
        intervalDurationDays:
          type: integer
          description: Required. The duration of time between executions in days.
          format: int32
      description: Scan schedule configuration.
      type: object
    Authentication:
      type: object
      properties:
        customAccount:
          description: Authentication using a custom account.
          $ref: '#/components/schemas/CustomAccount'
        googleAccount:
          description: Authentication using a Google account.
          $ref: '#/components/schemas/GoogleAccount'
      description: Scan authentication configuration.
      id: Authentication
    StartScanRunRequest:
      description: Request for the `StartScanRun` method.
      type: object
      id: StartScanRunRequest
      properties: {}
    ListScanRunsResponse:
      id: ListScanRunsResponse
      type: object
      description: Response for the `ListScanRuns` method.
      properties:
        scanRuns:
          items:
            $ref: '#/components/schemas/ScanRun'
          description: The list of ScanRuns returned.
          type: array
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    StopScanRunRequest:
      properties: {}
      description: Request for the `StopScanRun` method.
      type: object
      id: StopScanRunRequest
    CrawledUrl:
      description: >-
        A CrawledUrl resource represents a URL that was crawled during a
        ScanRun. Web Security Scanner Service crawls the web applications,
        following all links within the scope of sites, to find the URLs to test
        against.
      id: CrawledUrl
      type: object
      properties:
        httpMethod:
          description: >-
            Output only. The http method of the request that was used to visit
            the URL, in uppercase.
          type: string
        body:
          description: Output only. The body of the request that was used to visit the URL.
          type: string
        url:
          description: Output only. The URL that was crawled.
          type: string
    GoogleAccount:
      type: object
      properties:
        password:
          description: >-
            Required. Input only. The password of the Google account. The
            credential is stored encrypted and not returned in any response nor
            included in audit logs.
          type: string
        username:
          description: Required. The user name of the Google account.
          type: string
      description: Describes authentication configuration that uses a Google account.
      id: GoogleAccount
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1alpha/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns/{scanRunsId}:stop:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
    post:
      description: Stops a ScanRun. The stopped ScanRun is returned.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopScanRunRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: scanRunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: scan_runs
      x-stackQL-verb: exec
  /v1alpha/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns:
    parameters: *ref_1
    get:
      description: >-
        Lists ScanRuns under a given ScanConfig, in descending order of ScanRun
        stop time.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScanRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: scan_runs
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns/{scanRunsId}:
    parameters: *ref_1
    get:
      description: Gets a ScanRun.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: scanRunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: scan_runs
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns/{scanRunsId}/findings/{findingsId}:
    parameters: *ref_1
    get:
      description: Gets a Finding.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.findings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: scanRunsId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns/{scanRunsId}/findings:
    parameters: *ref_1
    get:
      description: List Findings under a given ScanRun.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.findings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: scanRunsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: findings
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns/{scanRunsId}/crawledUrls:
    parameters: *ref_1
    get:
      description: List CrawledUrls under a given ScanRun.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.crawledUrls.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCrawledUrlsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: scanRunsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: crawled_urls
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/scanConfigs/{scanConfigsId}/scanRuns/{scanRunsId}/findingTypeStats:
    parameters: *ref_1
    get:
      description: List all FindingTypeStats under a given ScanRun.
      operationId: websecurityscanner.projects.scanConfigs.scanRuns.findingTypeStats.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingTypeStatsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: scanRunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: finding_type_stats
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/scanConfigs/{scanConfigsId}:start:
    parameters: *ref_1
    post:
      description: Start a ScanRun according to the given ScanConfig.
      operationId: websecurityscanner.projects.scanConfigs.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartScanRunRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: scan_configs
      x-stackQL-verb: exec
  /v1alpha/projects/{projectsId}/scanConfigs/{scanConfigsId}:
    parameters: *ref_1
    patch:
      description: >-
        Updates a ScanConfig. This method support partial update of a
        ScanConfig.
      operationId: websecurityscanner.projects.scanConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: scan_configs
      x-stackQL-verb: exec
    get:
      description: Gets a ScanConfig.
      operationId: websecurityscanner.projects.scanConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: scan_configs
      x-stackQL-verb: select
    delete:
      description: Deletes an existing ScanConfig and its child resources.
      operationId: websecurityscanner.projects.scanConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: scanConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: scan_configs
      x-stackQL-verb: delete
  /v1alpha/projects/{projectsId}/scanConfigs:
    parameters: *ref_1
    post:
      description: Creates a new ScanConfig.
      operationId: websecurityscanner.projects.scanConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: scan_configs
      x-stackQL-verb: insert
    get:
      description: Lists ScanConfigs under a given project.
      operationId: websecurityscanner.projects.scanConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScanConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: scan_configs
      x-stackQL-verb: select
