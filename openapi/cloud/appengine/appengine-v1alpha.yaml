openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: App Engine Admin API
  description: Provisions and manages developers' App Engine applications.
  version: v1alpha
  x-discovery-doc-revision: '20230609'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/appengine/docs/admin-api/
servers:
  - url: https://appengine.googleapis.com
components:
  schemas:
    OperationMetadataV1Alpha:
      id: OperationMetadataV1Alpha
      type: object
      properties:
        target:
          description: >-
            Name of the resource that this operation is acting on. Example:
            apps/myapp/services/default.@OutputOnly
          type: string
        method:
          description: >-
            API method that initiated this operation. Example:
            google.appengine.v1alpha.Versions.CreateVersion.@OutputOnly
          type: string
        endTime:
          format: google-datetime
          description: Time that this operation completed.@OutputOnly
          type: string
        createVersionMetadata:
          $ref: '#/components/schemas/CreateVersionMetadataV1Alpha'
        insertTime:
          format: google-datetime
          type: string
          description: Time that this operation was created.@OutputOnly
        user:
          type: string
          description: User who requested this operation.@OutputOnly
        warning:
          description: Durable messages that persist on every operation poll. @OutputOnly
          type: array
          items:
            type: string
        ephemeralMessage:
          description: >-
            Ephemeral message that may change every time the operation is
            polled. @OutputOnly
          type: string
      description: Metadata for the given google.longrunning.Operation.
    AuthorizedDomain:
      description: >-
        A domain that a user has been authorized to administer. To authorize use
        of a domain, verify ownership via Search Console
        (https://search.google.com/search-console/welcome).
      type: object
      id: AuthorizedDomain
      properties:
        id:
          type: string
          description: >-
            Fully qualified domain name of the domain authorized for use.
            Example: example.com.
        name:
          type: string
          description: >-
            Full path to the AuthorizedDomain resource in the API. Example:
            apps/myapp/authorizedDomains/example.com.@OutputOnly
    AuthorizedCertificate:
      type: object
      properties:
        domainMappingsCount:
          format: int32
          description: >-
            Aggregate count of the domain mappings with this certificate mapped.
            This count includes domain mappings on applications for which the
            user does not have VIEWER permissions.Only returned by GET or LIST
            requests when specifically requested by the view=FULL_CERTIFICATE
            option.@OutputOnly
          type: integer
        certificateRawData:
          description: >-
            The SSL certificate serving the AuthorizedCertificate resource. This
            must be obtained independently from a certificate authority.
          $ref: '#/components/schemas/CertificateRawData'
        visibleDomainMappings:
          items:
            type: string
          type: array
          description: >-
            The full paths to user visible Domain Mapping resources that have
            this certificate mapped. Example:
            apps/myapp/domainMappings/example.com.This may not represent the
            full list of mapped domain mappings if the user does not have VIEWER
            permissions on all of the applications that have this certificate
            mapped. See domain_mappings_count for a complete count.Only returned
            by GET or LIST requests when specifically requested by the
            view=FULL_CERTIFICATE option.@OutputOnly
        managedCertificate:
          $ref: '#/components/schemas/ManagedCertificate'
          description: >-
            Only applicable if this certificate is managed by App Engine.
            Managed certificates are tied to the lifecycle of a DomainMapping
            and cannot be updated or deleted via the AuthorizedCertificates API.
            If this certificate is manually administered by the user, this field
            will be empty.@OutputOnly
        expireTime:
          type: string
          description: >-
            The time when this certificate expires. To update the renewal time
            on this certificate, upload an SSL certificate with a different
            expiration time using
            AuthorizedCertificates.UpdateAuthorizedCertificate.@OutputOnly
          format: google-datetime
        displayName:
          type: string
          description: >-
            The user-specified display name of the certificate. This is not
            guaranteed to be unique. Example: My Certificate.
        id:
          type: string
          description: >-
            Relative name of the certificate. This is a unique value
            autogenerated on AuthorizedCertificate resource creation. Example:
            12345.@OutputOnly
        domainNames:
          type: array
          description: >-
            Topmost applicable domains of this certificate. This certificate
            applies to these domains and their subdomains. Example:
            example.com.@OutputOnly
          items:
            type: string
        name:
          type: string
          description: >-
            Full path to the AuthorizedCertificate resource in the API. Example:
            apps/myapp/authorizedCertificates/12345.@OutputOnly
      id: AuthorizedCertificate
      description: >-
        An SSL certificate that a user has been authorized to administer. A user
        is authorized to administer any certificate that applies to one of their
        authorized domains.
    OperationMetadataV1Beta:
      id: OperationMetadataV1Beta
      type: object
      description: Metadata for the given google.longrunning.Operation.
      properties:
        target:
          description: >-
            Name of the resource that this operation is acting on. Example:
            apps/myapp/services/default.@OutputOnly
          type: string
        ephemeralMessage:
          description: >-
            Ephemeral message that may change every time the operation is
            polled. @OutputOnly
          type: string
        method:
          description: >-
            API method that initiated this operation. Example:
            google.appengine.v1beta.Versions.CreateVersion.@OutputOnly
          type: string
        insertTime:
          description: Time that this operation was created.@OutputOnly
          type: string
          format: google-datetime
        user:
          description: User who requested this operation.@OutputOnly
          type: string
        createVersionMetadata:
          $ref: '#/components/schemas/CreateVersionMetadataV1Beta'
        endTime:
          description: Time that this operation completed.@OutputOnly
          format: google-datetime
          type: string
        warning:
          items:
            type: string
          description: Durable messages that persist on every operation poll. @OutputOnly
          type: array
    LocationMetadata:
      id: LocationMetadata
      properties:
        searchApiAvailable:
          description: >-
            Output only. Search API
            (https://cloud.google.com/appengine/docs/standard/python/search) is
            available in the given location.
          type: boolean
          readOnly: true
        standardEnvironmentAvailable:
          description: >-
            App Engine standard environment is available in the given
            location.@OutputOnly
          type: boolean
        flexibleEnvironmentAvailable:
          description: >-
            App Engine flexible environment is available in the given
            location.@OutputOnly
          type: boolean
      type: object
      description: Metadata for the given google.cloud.location.Location.
    ListAuthorizedDomainsResponse:
      type: object
      id: ListAuthorizedDomainsResponse
      description: Response message for AuthorizedDomains.ListAuthorizedDomains.
      properties:
        domains:
          items:
            $ref: '#/components/schemas/AuthorizedDomain'
          type: array
          description: The authorized domains belonging to the user.
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
    ProjectEvent:
      description: The request sent to CLHs during project events.
      id: ProjectEvent
      type: object
      properties:
        phase:
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
          enum:
            - UNKNOWN
            - BEFORE_RESOURCE_HANDLING
            - AFTER_RESOURCE_HANDLING
        projectMetadata:
          description: The projects metadata for this project. required
          $ref: '#/components/schemas/ProjectsMetadata'
        state:
          description: The state of the project that led to this event.
          $ref: '#/components/schemas/ProjectState'
        eventId:
          description: >-
            The unique ID for this project event. CLHs can use this value to
            dedup repeated calls. required
          type: string
    DomainMapping:
      properties:
        sslSettings:
          $ref: '#/components/schemas/SslSettings'
          description: >-
            SSL configuration for this domain. If unconfigured, this domain will
            not serve with SSL.
        resourceRecords:
          items:
            $ref: '#/components/schemas/ResourceRecord'
          type: array
          description: >-
            The resource records required to configure this domain mapping.
            These records must be added to the domain's DNS configuration in
            order to serve the application via this domain mapping.@OutputOnly
        name:
          type: string
          description: >-
            Full path to the DomainMapping resource in the API. Example:
            apps/myapp/domainMapping/example.com.@OutputOnly
        id:
          description: >-
            Relative name of the domain serving the application. Example:
            example.com.
          type: string
      id: DomainMapping
      description: A domain serving an App Engine application.
      type: object
    Empty:
      id: Empty
      properties: {}
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } 
      type: object
    GoogleAppengineV1betaLocationMetadata:
      properties:
        searchApiAvailable:
          readOnly: true
          type: boolean
          description: >-
            Output only. Search API
            (https://cloud.google.com/appengine/docs/standard/python/search) is
            available in the given location.
        standardEnvironmentAvailable:
          type: boolean
          description: >-
            App Engine standard environment is available in the given
            location.@OutputOnly
        flexibleEnvironmentAvailable:
          description: >-
            App Engine flexible environment is available in the given
            location.@OutputOnly
          type: boolean
      type: object
      id: GoogleAppengineV1betaLocationMetadata
      description: Metadata for the given google.cloud.location.Location.
    ListOperationsResponse:
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
          description: >-
            A list of operations that matches the specified filter in the
            request.
      description: The response message for Operations.ListOperations.
      type: object
      id: ListOperationsResponse
    OperationMetadataV1:
      type: object
      id: OperationMetadataV1
      description: Metadata for the given google.longrunning.Operation.
      properties:
        target:
          description: >-
            Name of the resource that this operation is acting on. Example:
            apps/myapp/services/default.@OutputOnly
          type: string
        endTime:
          type: string
          description: Time that this operation completed.@OutputOnly
          format: google-datetime
        method:
          type: string
          description: >-
            API method that initiated this operation. Example:
            google.appengine.v1.Versions.CreateVersion.@OutputOnly
        insertTime:
          format: google-datetime
          type: string
          description: Time that this operation was created.@OutputOnly
        user:
          description: User who requested this operation.@OutputOnly
          type: string
        warning:
          items:
            type: string
          type: array
          description: Durable messages that persist on every operation poll. @OutputOnly
        ephemeralMessage:
          description: >-
            Ephemeral message that may change every time the operation is
            polled. @OutputOnly
          type: string
        createVersionMetadata:
          $ref: '#/components/schemas/CreateVersionMetadataV1'
    SslSettings:
      properties:
        certificateId:
          description: >-
            ID of the AuthorizedCertificate resource configuring SSL for the
            application. Clearing this field will remove SSL support.By default,
            a managed certificate is automatically created for every domain
            mapping. To omit SSL support or to configure SSL manually, specify
            no_managed_certificate on a CREATE or UPDATE request. You must be
            authorized to administer the AuthorizedCertificate resource to
            manually map it to a DomainMapping resource. Example: 12345.
          type: string
        isManagedCertificate:
          type: boolean
          description: >-
            Whether the mapped certificate is an App Engine managed certificate.
            Managed certificates are created by default with a domain mapping.
            To opt out, specify no_managed_certificate on a CREATE or UPDATE
            request.@OutputOnly
      type: object
      description: SSL configuration for a DomainMapping resource.
      id: SslSettings
    ListAuthorizedCertificatesResponse:
      description: Response message for AuthorizedCertificates.ListAuthorizedCertificates.
      type: object
      properties:
        certificates:
          description: The SSL certificates the user is authorized to administer.
          items:
            $ref: '#/components/schemas/AuthorizedCertificate'
          type: array
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
      id: ListAuthorizedCertificatesResponse
    Location:
      type: object
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          type: string
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            "projects/example-project/locations/us-east1"
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"} 
          additionalProperties:
            type: string
          type: object
        locationId:
          type: string
          description: 'The canonical id for this location. For example: "us-east1".'
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
      id: Location
    ListDomainMappingsResponse:
      id: ListDomainMappingsResponse
      properties:
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
        domainMappings:
          items:
            $ref: '#/components/schemas/DomainMapping'
          type: array
          description: The domain mappings for the application.
      type: object
      description: Response message for DomainMappings.ListDomainMappings.
    Reasons:
      type: object
      description: >-
        Projects transition between and within states based on reasons sent from
        various systems. CCFE will provide the CLH with reasons for the current
        state per system.The current systems that CCFE supports are: Service
        Management (Inception) Data Governance (Wipeout) Abuse (Ares) Billing
        (Internal Cloud Billing API)
      properties:
        serviceManagement:
          enumDescriptions:
            - >-
              An unknown reason indicates that we have not received a signal
              from service management about this project. Since projects are
              created by request of service management, this reason should never
              be set.
            - >-
              Due to various reasons CCFE might proactively restate a project
              state to a CLH to ensure that the CLH and CCFE are both aware of
              the project state. This reason can be tied to any of the states.
            - >-
              When a customer activates an API CCFE notifies the CLH and sets
              the project to the ON state.
            - >-
              When a customer deactivates and API service management starts a
              two-step process to perform the deactivation. The first step is to
              prepare. Prepare is a reason to put the project in a EXTERNAL_OFF
              state.
            - >-
              If the deactivation is cancelled, service managed needs to abort
              the deactivation. Abort is a reason to put the project in an ON
              state.
            - >-
              If the deactivation is followed through with, service management
              needs to finish deactivation. Commit is a reason to put the
              project in a DELETED state.
          enum:
            - SERVICE_MANAGEMENT_UNKNOWN_REASON
            - SERVICE_MANAGEMENT_CONTROL_PLANE_SYNC
            - ACTIVATION
            - PREPARE_DEACTIVATION
            - ABORT_DEACTIVATION
            - COMMIT_DEACTIVATION
          type: string
        billing:
          enum:
            - BILLING_UNKNOWN_REASON
            - BILLING_CONTROL_PLANE_SYNC
            - PROBATION
            - CLOSE
            - OPEN
          type: string
          enumDescriptions:
            - >-
              An unknown reason indicates that the billing system has not sent a
              signal for this project.
            - >-
              Due to various reasons CCFE might proactively restate a project
              state to a CLH to ensure that the CLH and CCFE are both aware of
              the project state. This reason can be tied to any of the states.
            - >-
              Minor infractions cause a probation signal to be sent. Probation
              is a reason to put the project into a ON state even though it is a
              negative signal. CCFE will block mutations for this project while
              it is on billing probation, but the CLH is expected to serve
              non-mutation requests.
            - >-
              When a billing account is closed, it is a stronger signal about
              non-payment. Close is a reason to put the project into an
              INTERNAL_OFF state.
            - >-
              Consumers can re-open billing accounts and update accounts to pull
              them out of probation. When this happens, we get a signal that the
              account is open. Open is a reason to put the project into an ON
              state.
        abuse:
          enum:
            - ABUSE_UNKNOWN_REASON
            - ABUSE_CONTROL_PLANE_SYNC
            - SUSPEND
            - REINSTATE
          enumDescriptions:
            - >-
              An unknown reason indicates that the abuse system has not sent a
              signal for this project.
            - >-
              Due to various reasons CCFE might proactively restate a project
              state to a CLH to ensure that the CLH and CCFE are both aware of
              the project state. This reason can be tied to any of the states.
            - >-
              If a project is deemed abusive we receive a suspend signal.
              Suspend is a reason to put the project into an INTERNAL_OFF state.
            - >-
              Projects that were once considered abusive can later be deemed
              non-abusive. When this happens we must reinstate the project.
              Reinstate is a reason to put the project into an ON state.
          type: string
        dataGovernance:
          enumDescriptions:
            - >-
              An unknown reason indicates that data governance has not sent a
              signal for this project.
            - >-
              Due to various reasons CCFE might proactively restate a project
              state to a CLH to ensure that the CLH and CCFE are both aware of
              the project state. This reason can be tied to any of the states.
            - >-
              When a project is deleted we retain some data for a period of time
              to allow the consumer to change their mind. Data governance sends
              a signal to hide the data when this occurs. Hide is a reason to
              put the project in an INTERNAL_OFF state.
            - >-
              The decision to un-delete a project can be made. When this happens
              data governance tells us to unhide any hidden data. Unhide is a
              reason to put the project in an ON state.
            - >-
              After a period of time data must be completely removed from our
              systems. When data governance sends a purge signal we need to
              remove data. Purge is a reason to put the project in a DELETED
              state. Purge is the only event that triggers a delete mutation.
              All other events have update semantics.
          type: string
          enum:
            - DATA_GOVERNANCE_UNKNOWN_REASON
            - DATA_GOVERNANCE_CONTROL_PLANE_SYNC
            - HIDE
            - UNHIDE
            - PURGE
      id: Reasons
    ProjectsMetadata:
      type: object
      description: >-
        ProjectsMetadata is the metadata CCFE stores about the all the relevant
        projects (tenant, consumer, producer).
      properties:
        p4ServiceAccount:
          type: string
          description: >-
            The service account authorized to operate on the consumer project.
            Note: CCFE only propagates P4SA with default tag to CLH.
        producerProjectNumber:
          type: string
          format: int64
          description: The producer project number.
        producerProjectId:
          type: string
          description: The producer project id.
        consumerProjectNumber:
          type: string
          format: int64
          description: The consumer project number.
        tenantProjectId:
          type: string
          description: The tenant project id.
        consumerProjectId:
          type: string
          description: The consumer project id.
        consumerProjectState:
          enumDescriptions:
            - >-
              A project should never be in an unknown state. Receipt of a
              project with this state is an error.
            - >-
              CCFE considers the project to be serving or transitioning into
              serving.
            - >-
              CCFE considers the project to be in an OFF state. This could occur
              due to various factors. The state could be triggered by
              Google-internal audits (ex. abuse suspension, billing closed) or
              cleanups trigged by compliance systems (ex. data governance hide).
              User-initiated events such as service management deactivation
              trigger a project to an OFF state.CLHs might choose to do nothing
              in this case or to turn off costly resources. CLHs need to
              consider the customer experience if an ON/OFF/ON sequence of state
              transitions occurs vs. the cost of deleting resources, keeping
              metadata about resources, or even keeping resources live for a
              period of time.CCFE will not send any new customer requests to the
              CLH when the project is in an OFF state. However, CCFE will allow
              all previous customer requests relayed to CLH to complete.
            - >-
              This state indicates that the project has been (or is being)
              completely removed. This is often due to a data governance purge
              request and therefore resources should be deleted when this state
              is reached.
          description: >-
            The CCFE state of the consumer project. It is the same state that is
            communicated to the CLH during project events. Notice that this
            field is not set in the DB, it is only set in this proto when
            communicated to CLH in the side channel.
          enum:
            - UNKNOWN_STATE
            - 'ON'
            - 'OFF'
            - DELETED
          type: string
        tenantProjectNumber:
          type: string
          description: The tenant project number.
          format: int64
      id: ProjectsMetadata
    CreateVersionMetadataV1:
      id: CreateVersionMetadataV1
      properties:
        cloudBuildId:
          type: string
          description: >-
            The Cloud Build ID if one was created as part of the version create.
            @OutputOnly
      type: object
      description: >-
        Metadata for the given google.longrunning.Operation during a
        google.appengine.v1.CreateVersionRequest.
    Operation:
      id: Operation
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
        done:
          description: >-
            If the value is false, it means the operation is still in progress.
            If true, the operation is completed, and either error or response is
            available.
          type: boolean
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as Delete, the
            response is google.protobuf.Empty. If the original method is
            standard Get/Create/Update, the response should be the resource. For
            other methods, the response should have the type XxxResponse, where
            Xxx is the original method name. For example, if the original method
            name is TakeSnapshot(), the inferred response type is
            TakeSnapshotResponse.
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the name should be a resource name ending with
            operations/{unique_id}.
          type: string
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
    CreateVersionMetadataV1Beta:
      description: >-
        Metadata for the given google.longrunning.Operation during a
        google.appengine.v1beta.CreateVersionRequest.
      properties:
        cloudBuildId:
          type: string
          description: >-
            The Cloud Build ID if one was created as part of the version create.
            @OutputOnly
      type: object
      id: CreateVersionMetadataV1Beta
    CertificateRawData:
      id: CertificateRawData
      properties:
        publicCertificate:
          description: >-
            PEM encoded x.509 public key certificate. This field is set once on
            certificate creation. Must include the header and footer. Example:
            -----BEGIN CERTIFICATE----- -----END CERTIFICATE----- 
          type: string
        privateKey:
          description: >-
            Unencrypted PEM encoded RSA private key. This field is set once on
            certificate creation and then encrypted. The key size must be 2048
            bits or fewer. Must include the header and footer. Example:
            -----BEGIN RSA PRIVATE KEY----- -----END RSA PRIVATE KEY-----
            @InputOnly
          type: string
      type: object
      description: An SSL certificate obtained from a certificate authority.
    Status:
      description: >-
        The Status type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by gRPC (https://github.com/grpc). Each Status message contains
        three pieces of data: error code, error message, and error details.You
        can find out more about this error model and how to work with it in the
        API Design Guide (https://cloud.google.com/apis/design/errors).
      id: Status
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        details:
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
    CreateVersionMetadataV1Alpha:
      type: object
      properties:
        cloudBuildId:
          type: string
          description: >-
            The Cloud Build ID if one was created as part of the version create.
            @OutputOnly
      id: CreateVersionMetadataV1Alpha
      description: >-
        Metadata for the given google.longrunning.Operation during a
        google.appengine.v1alpha.CreateVersionRequest.
    ManagedCertificate:
      id: ManagedCertificate
      type: object
      description: A certificate managed by App Engine.
      properties:
        status:
          description: >-
            Status of certificate management. Refers to the most recent
            certificate acquisition or renewal attempt.@OutputOnly
          enum:
            - UNSPECIFIED_STATUS
            - OK
            - PENDING
            - FAILED_RETRYING_INTERNAL
            - FAILED_RETRYING_NOT_VISIBLE
            - FAILED_PERMANENTLY_NOT_VISIBLE
            - FAILED_RETRYING_CAA_FORBIDDEN
            - FAILED_RETRYING_CAA_CHECKING
          type: string
          enumDescriptions:
            - ''
            - >-
              Certificate was successfully obtained and inserted into the
              serving system.
            - Certificate is under active attempts to acquire or renew.
            - >-
              Most recent renewal failed due to a system failure and will be
              retried. System failure is likely transient, and subsequent
              renewal attempts may succeed. The last successfully provisioned
              certificate may still be serving.
            - >-
              Most recent renewal failed due to an invalid DNS setup and will be
              retried. Renewal attempts will continue to fail until the
              certificate domain's DNS configuration is fixed. The last
              successfully provisioned certificate may still be serving.
            - >-
              All renewal attempts have been exhausted. Most recent renewal
              failed due to an invalid DNS setup and will not be retried. The
              last successfully provisioned certificate may still be serving.
            - >-
              Most recent renewal failed due to an explicit CAA record that does
              not include one of the in-use CAs (Google CA and Let's Encrypt).
              Renewals will continue to fail until the CAA is reconfigured. The
              last successfully provisioned certificate may still be serving.
            - >-
              Most recent renewal failed due to a CAA retrieval failure. This
              means that the domain's DNS provider does not properly handle CAA
              records, failing requests for CAA records when no CAA records are
              defined. Renewals will continue to fail until the DNS provider is
              changed or a CAA record is added for the given domain. The last
              successfully provisioned certificate may still be serving.
        lastRenewalTime:
          type: string
          description: >-
            Time at which the certificate was last renewed. The renewal process
            is fully managed. Certificate renewal will automatically occur
            before the certificate expires. Renewal errors can be tracked via
            ManagementStatus.@OutputOnly
          format: google-datetime
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        locations:
          type: array
          description: >-
            A list of locations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Location'
    ResourceRecord:
      id: ResourceRecord
      properties:
        name:
          type: string
          description: >-
            Relative name of the object affected by this record. Only applicable
            for CNAME records. Example: 'www'.
        type:
          type: string
          description: 'Resource record type. Example: AAAA.'
          enum:
            - A
            - AAAA
            - CNAME
          enumDescriptions:
            - An A resource record. Data is an IPv4 address.
            - An AAAA resource record. Data is an IPv6 address.
            - A CNAME resource record. Data is a domain name to be aliased.
        rrdata:
          type: string
          description: >-
            Data for this record. Values vary by record type, as defined in RFC
            1035 (section 5) and RFC 1034 (section 3.6.1).
      description: A DNS resource record.
      type: object
    ProjectState:
      properties:
        state:
          enum:
            - UNKNOWN_STATE
            - 'ON'
            - 'OFF'
            - DELETED
          description: >-
            The current state of the project. This state is the culmination of
            all of the opinions from external systems that CCFE knows about of
            the project.
          type: string
          enumDescriptions:
            - >-
              A project should never be in an unknown state. Receipt of a
              project with this state is an error.
            - >-
              CCFE considers the project to be serving or transitioning into
              serving.
            - >-
              CCFE considers the project to be in an OFF state. This could occur
              due to various factors. The state could be triggered by
              Google-internal audits (ex. abuse suspension, billing closed) or
              cleanups trigged by compliance systems (ex. data governance hide).
              User-initiated events such as service management deactivation
              trigger a project to an OFF state.CLHs might choose to do nothing
              in this case or to turn off costly resources. CLHs need to
              consider the customer experience if an ON/OFF/ON sequence of state
              transitions occurs vs. the cost of deleting resources, keeping
              metadata about resources, or even keeping resources live for a
              period of time.CCFE will not send any new customer requests to the
              CLH when the project is in an OFF state. However, CCFE will allow
              all previous customer requests relayed to CLH to complete.
            - >-
              This state indicates that the project has been (or is being)
              completely removed. This is often due to a data governance purge
              request and therefore resources should be deleted when this state
              is reached.
        previousReasons:
          description: >-
            The previous and current reasons for a project state will be sent
            for a project event. CLHs that need to know the signal that caused
            the project event to trigger (edges) as opposed to just knowing the
            state can act upon differences in the previous and current
            reasons.Reasons will be provided for every system: service
            management, data governance, abuse, and billing.If this is a
            CCFE-triggered event used for reconciliation then the current
            reasons will be set to their *_CONTROL_PLANE_SYNC state. The
            previous reasons will contain the last known set of non-unknown
            non-control_plane_sync reasons for the state.Reasons fields are
            deprecated. New tenants should only use the state field. If you must
            know the reason(s) behind a specific state, please consult with CCFE
            team first (cloud-ccfe-discuss@google.com).
          $ref: '#/components/schemas/Reasons'
        currentReasons:
          $ref: '#/components/schemas/Reasons'
      description: >-
        ProjectState contains the externally-visible project state that is used
        to communicate the state and reasoning for that state to the CLH. This
        data is not persisted by CCFE, but is instead derived from CCFE's
        internal representation of the project state.
      type: object
      id: ProjectState
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform.read-only: >-
              View your data across Google Cloud services and see the email
              address of your Google Account
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/appengine.admin: View and manage your applications deployed on Google App Engine
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1alpha/projects/{projectsId}/locations/{locationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
    get:
      description: Gets information about a location.
      operationId: appengine.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: appengine.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns UNIMPLEMENTED.
      operationId: appengine.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: appengine.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1alpha/apps/{appsId}/authorizedCertificates:
    parameters: *ref_1
    get:
      description: Lists all SSL certificates the user is authorized to administer.
      operationId: appengine.apps.authorizedCertificates.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuthorizedCertificatesResponse'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: authorized_certificates
      x-stackQL-verb: select
    post:
      description: Uploads the specified SSL certificate.
      operationId: appengine.apps.authorizedCertificates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizedCertificate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedCertificate'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: authorized_certificates
      x-stackQL-verb: insert
  /v1alpha/apps/{appsId}/authorizedCertificates/{authorizedCertificatesId}:
    parameters: *ref_1
    patch:
      description: >-
        Updates the specified SSL certificate. To renew a certificate and
        maintain its existing domain mappings, update certificate_data with a
        new certificate. The new certificate must be applicable to the same
        domains as the original certificate. The certificate display_name may
        also be updated.
      operationId: appengine.apps.authorizedCertificates.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizedCertificate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedCertificate'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedCertificatesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: authorized_certificates
      x-stackQL-verb: exec
    get:
      description: Gets the specified SSL certificate.
      operationId: appengine.apps.authorizedCertificates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedCertificate'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedCertificatesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: authorized_certificates
      x-stackQL-verb: select
    delete:
      description: Deletes the specified SSL certificate.
      operationId: appengine.apps.authorizedCertificates.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: authorizedCertificatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: authorized_certificates
      x-stackQL-verb: delete
  /v1alpha/apps/{appsId}/domainMappings/{domainMappingsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes the specified domain mapping. A user must be authorized to
        administer the associated domain in order to delete a DomainMapping
        resource.
      operationId: appengine.apps.domainMappings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: domainMappingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domain_mappings
      x-stackQL-verb: delete
    get:
      description: Gets the specified domain mapping.
      operationId: appengine.apps.domainMappings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainMapping'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: domainMappingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domain_mappings
      x-stackQL-verb: select
    patch:
      description: >-
        Updates the specified domain mapping. To map an SSL certificate to a
        domain mapping, update certificate_id to point to an
        AuthorizedCertificate resource. A user must be authorized to administer
        the associated domain in order to update a DomainMapping resource.
      operationId: appengine.apps.domainMappings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainMapping'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: domainMappingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: noManagedCertificate
          schema:
            type: boolean
      x-stackQL-resource: domain_mappings
      x-stackQL-verb: exec
  /v1alpha/apps/{appsId}/domainMappings:
    parameters: *ref_1
    get:
      description: Lists the domain mappings on an application.
      operationId: appengine.apps.domainMappings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainMappingsResponse'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: domain_mappings
      x-stackQL-verb: select
    post:
      description: >-
        Maps a domain to an application. A user must be authorized to administer
        a domain in order to map it to an application. For a list of available
        authorized domains, see AuthorizedDomains.ListAuthorizedDomains.
      operationId: appengine.apps.domainMappings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainMapping'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: overrideStrategy
          schema:
            type: string
        - in: query
          name: noManagedCertificate
          schema:
            type: boolean
      x-stackQL-resource: domain_mappings
      x-stackQL-verb: insert
  /v1alpha/apps/{appsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: appengine.apps.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1alpha/apps/{appsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns UNIMPLEMENTED.
      operationId: appengine.apps.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1alpha/apps/{appsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: appengine.apps.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1alpha/apps/{appsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: appengine.apps.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1alpha/apps/{appsId}/authorizedDomains:
    parameters: *ref_1
    get:
      description: Lists all domains the user is authorized to administer.
      operationId: appengine.apps.authorizedDomains.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/appengine.admin
          Oauth2c:
            - https://www.googleapis.com/auth/appengine.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuthorizedDomainsResponse'
      parameters:
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: authorized_domains
      x-stackQL-verb: select
