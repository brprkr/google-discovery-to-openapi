openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Workflow Executions API
  description: Execute workflows created with Workflows API.
  version: v1beta
  x-discovery-doc-revision: '20230613'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/workflows
servers:
  - url: https://workflowexecutions.googleapis.com
components:
  schemas:
    StackTrace:
      type: object
      description: A collection of stack elements (frames) where an error occurred.
      id: StackTrace
      properties:
        elements:
          items:
            $ref: '#/components/schemas/StackTraceElement'
          type: array
          description: An array of stack elements.
    StackTraceElement:
      type: object
      description: A single stack element (frame) where an error occurred.
      properties:
        position:
          $ref: '#/components/schemas/Position'
          description: The source position information of the stack trace element.
        routine:
          description: The routine where the error occurred.
          type: string
        step:
          type: string
          description: The step the error occurred at.
      id: StackTraceElement
    Status:
      type: object
      description: Represents the current status of this execution.
      properties:
        currentSteps:
          type: array
          description: >-
            A list of currently executing or last executed step names for the
            workflow execution currently running. If the workflow has succeeded
            or failed, this is the last attempted or executed step. Presently,
            if the current step is inside a subworkflow, the list only includes
            that step. In the future, the list will contain items for each step
            in the call stack, starting with the outermost step in the `main`
            subworkflow, and ending with the most deeply nested step.
          items:
            $ref: '#/components/schemas/Step'
      id: Status
    CancelExecutionRequest:
      description: Request for the CancelExecution method.
      id: CancelExecutionRequest
      properties: {}
      type: object
    Execution:
      description: >-
        A running instance of a
        [Workflow](/workflows/docs/reference/rest/v1beta/projects.locations.workflows).
      type: object
      id: Execution
      properties:
        status:
          description: >-
            Output only. Status tracks the current steps and progress data of
            this execution.
          $ref: '#/components/schemas/Status'
          readOnly: true
        startTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Marks the beginning of execution.
        workflowRevisionId:
          readOnly: true
          type: string
          description: Output only. Revision of the workflow this execution is using.
        state:
          type: string
          enumDescriptions:
            - Invalid state.
            - The execution is in progress.
            - The execution finished successfully.
            - The execution failed with an error.
            - The execution was stopped intentionally.
          readOnly: true
          description: Output only. Current state of the execution.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - SUCCEEDED
            - FAILED
            - CANCELLED
        argument:
          description: >-
            Input parameters of the execution represented as a JSON string. The
            size limit is 32KB. *Note*: If you are using the REST API directly
            to run your workflow, you must escape any JSON string value of
            `argument`. Example:
            `'{"argument":"{\"firstName\":\"FIRST\",\"lastName\":\"LAST\"}"}'`
          type: string
        name:
          readOnly: true
          type: string
          description: >-
            Output only. The resource name of the execution. Format:
            projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
        endTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Marks the end of execution, successful or not.
        result:
          description: >-
            Output only. Output of the execution represented as a JSON string.
            The value can only be present if the execution's state is
            `SUCCEEDED`.
          readOnly: true
          type: string
        error:
          $ref: '#/components/schemas/Error'
          description: >-
            Output only. The error which caused the execution to finish
            prematurely. The value is only present if the execution's state is
            `FAILED` or `CANCELLED`.
          readOnly: true
        callLogLevel:
          description: The call logging level associated to this execution.
          enum:
            - CALL_LOG_LEVEL_UNSPECIFIED
            - LOG_ALL_CALLS
            - LOG_ERRORS_ONLY
          type: string
          enumDescriptions:
            - No call logging level specified.
            - >-
              Log all call steps within workflows, all call returns, and all
              exceptions raised.
            - >-
              Log only exceptions that are raised from call steps within
              workflows.
    Error:
      id: Error
      properties:
        context:
          type: string
          description: Human-readable stack trace string.
        payload:
          type: string
          description: Error message and data returned represented as a JSON string.
        stackTrace:
          description: Stack trace with detailed information of where error was generated.
          $ref: '#/components/schemas/StackTrace'
      description: Error describes why the execution was abnormally terminated.
      type: object
    Step:
      type: object
      description: Represents a step of the workflow this execution is running.
      id: Step
      properties:
        routine:
          description: Name of a routine within the workflow.
          type: string
        step:
          type: string
          description: Name of a step within the routine.
    Position:
      properties:
        column:
          type: string
          description: >-
            The source code column position (of the line) the current
            instruction was generated from.
          format: int64
        length:
          format: int64
          type: string
          description: >-
            The number of bytes of source code making up this stack trace
            element.
        line:
          format: int64
          type: string
          description: >-
            The source code line number the current instruction was generated
            from.
      type: object
      description: >-
        Position contains source position information about the stack trace
        element such as line number, column number and length of the code block
        in bytes.
      id: Position
    ListExecutionsResponse:
      properties:
        executions:
          description: The executions which match the request.
          type: array
          items:
            $ref: '#/components/schemas/Execution'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
      description: Response for the ListExecutions method.
      id: ListExecutionsResponse
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}:cancel:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
    post:
      description: Cancels an execution of the given name.
      operationId: workflowexecutions.projects.locations.workflows.executions.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelExecutionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions:
    parameters: *ref_1
    get:
      description: >-
        Returns a list of executions which belong to the workflow with the given
        name. The method returns executions of all workflow revisions. Returned
        executions are ordered by their start time (newest first).
      operationId: workflowexecutions.projects.locations.workflows.executions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: executions
      x-stackQL-verb: select
    post:
      description: Creates a new execution using the latest revision of the given workflow.
      operationId: workflowexecutions.projects.locations.workflows.executions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Execution'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: insert
  /v1beta/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/executions/{executionsId}:
    parameters: *ref_1
    get:
      description: Returns an execution of the given name.
      operationId: workflowexecutions.projects.locations.workflows.executions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workflowsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: select
