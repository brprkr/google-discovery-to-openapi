openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Vision API
  description: >-
    Integrates Google Vision features, including image labeling, face, logo, and
    landmark detection, optical character recognition (OCR), and detection of
    explicit content, into applications.
  version: v1
  x-discovery-doc-revision: '20230608'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/vision/
servers:
  - url: https://vision.googleapis.com
components:
  schemas:
    ImageProperties:
      id: ImageProperties
      description: Stores image properties, such as dominant colors.
      properties:
        dominantColors:
          $ref: '#/components/schemas/DominantColorsAnnotation'
          description: If present, dominant colors completed successfully.
      type: object
    GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation:
      id: GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation
      properties:
        score:
          description: Score of the result. Range [0, 1].
          format: float
          type: number
        languageCode:
          type: string
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
        name:
          type: string
          description: Object name, expressed in its `language_code` language.
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
      type: object
      description: Prediction for what the object in the bounding box is.
    GoogleCloudVisionV1p2beta1DominantColorsAnnotation:
      type: object
      properties:
        colors:
          description: RGB color values with their score and pixel fraction.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ColorInfo'
          type: array
      description: Set of dominant colors and their corresponding scores.
      id: GoogleCloudVisionV1p2beta1DominantColorsAnnotation
    Status:
      properties:
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
    Empty:
      properties: {}
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      id: Empty
      type: object
    AsyncBatchAnnotateFilesRequest:
      id: AsyncBatchAnnotateFilesRequest
      properties:
        parent:
          description: >-
            Optional. Target project and location to make a call. Format:
            `projects/{project-id}/locations/{location-id}`. If no parent is
            specified, a region will be chosen automatically. Supported
            location-ids: `us`: USA country only, `asia`: East asia areas, like
            Japan, Taiwan, `eu`: The European Union. Example:
            `projects/project-A/locations/eu`.
          type: string
        requests:
          items:
            $ref: '#/components/schemas/AsyncAnnotateFileRequest'
          description: Required. Individual async file annotation requests for this batch.
          type: array
      description: >-
        Multiple async file annotation requests are batched into a single
        service call.
      type: object
    GoogleCloudVisionV1p2beta1ProductSearchResultsResult:
      type: object
      properties:
        score:
          description: >-
            A confidence level on the match, ranging from 0 (no confidence) to 1
            (full confidence).
          format: float
          type: number
        image:
          type: string
          description: >-
            The resource name of the image from the product that is the closest
            match to the query.
        product:
          description: The Product.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Product'
      id: GoogleCloudVisionV1p2beta1ProductSearchResultsResult
      description: Information about a product.
    GoogleCloudVisionV1p4beta1Position:
      id: GoogleCloudVisionV1p4beta1Position
      type: object
      description: >-
        A 3D position in the image, used primarily for Face detection landmarks.
        A valid Position must have both x and y coordinates. The position
        coordinates are in the same scale as the original image.
      properties:
        z:
          format: float
          type: number
          description: Z coordinate (or depth).
        'y':
          description: Y coordinate.
          format: float
          type: number
        x:
          description: X coordinate.
          type: number
          format: float
    GoogleCloudVisionV1p2beta1Page:
      id: GoogleCloudVisionV1p2beta1Page
      description: Detected page from OCR.
      properties:
        width:
          format: int32
          type: integer
          description: >-
            Page width. For PDFs the unit is points. For images (including
            TIFFs) the unit is pixels.
        blocks:
          description: List of blocks of text, images etc on this page.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Block'
          type: array
        height:
          type: integer
          description: >-
            Page height. For PDFs the unit is points. For images (including
            TIFFs) the unit is pixels.
          format: int32
        confidence:
          format: float
          type: number
          description: Confidence of the OCR results on the page. Range [0, 1].
        property:
          description: Additional information detected on the page.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty
      type: object
    GoogleCloudVisionV1p3beta1ImageProperties:
      properties:
        dominantColors:
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p3beta1DominantColorsAnnotation
          description: If present, dominant colors completed successfully.
      type: object
      id: GoogleCloudVisionV1p3beta1ImageProperties
      description: Stores image properties, such as dominant colors.
    GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation:
      id: GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation
      description: Set of detected objects with bounding boxes.
      properties:
        name:
          type: string
          description: Object name, expressed in its `language_code` language.
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        score:
          format: float
          description: Score of the result. Range [0, 1].
          type: number
        languageCode:
          type: string
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
        boundingPoly:
          description: Image region to which this object belongs. This must be populated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
      type: object
    GoogleCloudVisionV1p2beta1CropHintsAnnotation:
      description: >-
        Set of crop hints that are used to generate new crops when serving
        images.
      properties:
        cropHints:
          type: array
          description: Crop hint results.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1CropHint'
      id: GoogleCloudVisionV1p2beta1CropHintsAnnotation
      type: object
    GoogleCloudVisionV1p1beta1WebDetection:
      id: GoogleCloudVisionV1p1beta1WebDetection
      description: Relevant information for the image from the Internet.
      properties:
        fullMatchingImages:
          description: >-
            Fully matching images from the Internet. Can include resized copies
            of the query image.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage
        bestGuessLabels:
          description: >-
            The service's best guess as to the topic of the request image.
            Inferred from similar images on the open web.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebLabel
          type: array
        partialMatchingImages:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage
          description: >-
            Partial matching images from the Internet. Those images are similar
            enough to share some key-point features. For example an original
            image will likely have partial matching for its crops.
        visuallySimilarImages:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage
          type: array
          description: The visually similar image results.
        pagesWithMatchingImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebPage'
          type: array
          description: Web pages containing the matching images from the Internet.
        webEntities:
          description: Deduced entities from similar images on the Internet.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebEntity
          type: array
      type: object
    GoogleCloudVisionV1p1beta1Vertex:
      type: object
      id: GoogleCloudVisionV1p1beta1Vertex
      properties:
        x:
          description: X coordinate.
          format: int32
          type: integer
        'y':
          type: integer
          description: Y coordinate.
          format: int32
      description: >-
        A vertex represents a 2D point in the image. NOTE: the vertex
        coordinates are in the same scale as the original image.
    GoogleCloudVisionV1p3beta1FaceAnnotationLandmark:
      type: object
      description: A face-specific landmark (for example, a face feature).
      properties:
        type:
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          type: string
          description: Face landmark type.
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - Nose, bottom right.
            - Nose, bottom left.
            - Nose, bottom center.
            - Left eye, top boundary.
            - Left eye, right corner.
            - Left eye, bottom boundary.
            - Left eye, left corner.
            - Right eye, top boundary.
            - Right eye, right corner.
            - Right eye, bottom boundary.
            - Right eye, left corner.
            - Left eyebrow, upper midpoint.
            - Right eyebrow, upper midpoint.
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
        position:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Position'
          description: Face landmark position.
      id: GoogleCloudVisionV1p3beta1FaceAnnotationLandmark
    GoogleCloudVisionV1p1beta1CropHintsAnnotation:
      type: object
      id: GoogleCloudVisionV1p1beta1CropHintsAnnotation
      description: >-
        Set of crop hints that are used to generate new crops when serving
        images.
      properties:
        cropHints:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1CropHint'
          description: Crop hint results.
          type: array
    GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak:
      description: Detected start or end of a structural component.
      type: object
      id: GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak
      properties:
        isPrefix:
          description: True if break prepends the element.
          type: boolean
        type:
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
          description: Detected break type.
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - >-
              End-line hyphen that is not present in text; does not co-occur
              with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.
            - Line break that ends a paragraph.
          type: string
    GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse:
      description: A list of file annotation responses.
      properties:
        responses:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1AnnotateFileResponse
          description: >-
            The list of file annotation responses, each response corresponding
            to each AnnotateFileRequest in BatchAnnotateFilesRequest.
          type: array
      type: object
      id: GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse
    GoogleCloudVisionV1p4beta1EntityAnnotation:
      type: object
      description: Set of detected entity features.
      properties:
        locale:
          type: string
          description: >-
            The language code for the locale in which the entity textual
            `description` is expressed.
        topicality:
          format: float
          description: >-
            The relevancy of the ICA (Image Content Annotation) label to the
            image. For example, the relevancy of "tower" is likely higher to an
            image containing the detected "Eiffel Tower" than to an image
            containing a detected distant towering building, even though the
            confidence that there is a tower in each image may be the same.
            Range [0, 1].
          type: number
        confidence:
          description: >-
            **Deprecated. Use `score` instead.** The accuracy of the entity
            detection in an image. For example, for an image in which the
            "Eiffel Tower" entity is detected, this field represents the
            confidence that there is a tower in the query image. Range [0, 1].
          type: number
          format: float
        boundingPoly:
          description: >-
            Image region to which this entity belongs. Not produced for
            `LABEL_DETECTION` features.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        mid:
          description: >-
            Opaque entity ID. Some IDs may be available in [Google Knowledge
            Graph Search API](https://developers.google.com/knowledge-graph/).
          type: string
        description:
          description: Entity textual description, expressed in its `locale` language.
          type: string
        locations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1LocationInfo'
          type: array
          description: >-
            The location information for the detected entity. Multiple
            `LocationInfo` elements can be present because one location may
            indicate the location of the scene in the image, and another
            location may indicate the location of the place where the image was
            taken. Location information is usually present for landmarks.
        score:
          description: Overall score of the result. Range [0, 1].
          format: float
          type: number
        properties:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Property'
          description: >-
            Some entities may have optional user-supplied `Property`
            (name/value) fields, such a score or string that qualifies the
            entity.
      id: GoogleCloudVisionV1p4beta1EntityAnnotation
    TextDetectionParams:
      description: >-
        Parameters for text detections. This is used to control TEXT_DETECTION
        and DOCUMENT_TEXT_DETECTION features.
      properties:
        advancedOcrOptions:
          items:
            type: string
          description: >-
            A list of advanced OCR options to further fine-tune OCR behavior.
            Current valid values are: - `legacy_layout`: a heuristics layout
            detection algorithm, which serves as an alternative to the current
            ML-based layout detection algorithm. Customers can choose the best
            suitable layout algorithm based on their situation.
          type: array
        enableTextDetectionConfidenceScore:
          type: boolean
          description: >-
            By default, Cloud Vision API only includes confidence score for
            DOCUMENT_TEXT_DETECTION result. Set the flag to true to include
            confidence score for TEXT_DETECTION as well.
      id: TextDetectionParams
      type: object
    CropHintsParams:
      properties:
        aspectRatios:
          items:
            type: number
            format: float
          description: >-
            Aspect ratios in floats, representing the ratio of the width to the
            height of the image. For example, if the desired aspect ratio is
            4/3, the corresponding float value should be 1.33333. If not
            specified, the best possible crop is returned. The number of
            provided aspect ratios is limited to a maximum of 16; any aspect
            ratios provided after the 16th are ignored.
          type: array
      description: Parameters for crop hints annotation request.
      type: object
      id: CropHintsParams
    GoogleCloudVisionV1p1beta1GcsSource:
      description: The Google Cloud Storage location where the input will be read from.
      id: GoogleCloudVisionV1p1beta1GcsSource
      type: object
      properties:
        uri:
          description: >-
            Google Cloud Storage URI for the input file. This must only be a
            Google Cloud Storage object. Wildcards are not currently supported.
          type: string
    GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse:
      type: object
      description: The response for a single offline file annotation request.
      properties:
        outputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1OutputConfig'
          description: The output location and metadata from AsyncAnnotateFileRequest.
      id: GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse
    GoogleCloudVisionV1p3beta1AnnotateFileResponse:
      properties:
        responses:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1AnnotateImageResponse
          type: array
          description: >-
            Individual responses to images found within the file. This field
            will be empty if the `error` field is set.
        inputConfig:
          description: Information about the file for which this response is generated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1InputConfig'
        error:
          description: >-
            If set, represents the error message for the failed request. The
            `responses` field will not be set in this case.
          $ref: '#/components/schemas/Status'
        totalPages:
          type: integer
          description: This field gives the total number of pages in the file.
          format: int32
      type: object
      description: >-
        Response to a single file annotation request. A file may contain one or
        more images, which individually have their own responses.
      id: GoogleCloudVisionV1p3beta1AnnotateFileResponse
    Image:
      type: object
      properties:
        content:
          type: string
          description: >-
            Image content, represented as a stream of bytes. Note: As with all
            `bytes` fields, protobuffers use a pure binary representation,
            whereas JSON representations use base64. Currently, this field only
            works for BatchAnnotateImages requests. It does not work for
            AsyncBatchAnnotateImages requests.
          format: byte
        source:
          description: >-
            Google Cloud Storage image location, or publicly-accessible image
            URL. If both `content` and `source` are provided for an image,
            `content` takes precedence and is used to perform the image
            annotation request.
          $ref: '#/components/schemas/ImageSource'
      description: Client image to perform Google Cloud Vision API tasks over.
      id: Image
    GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak:
      properties:
        isPrefix:
          type: boolean
          description: True if break prepends the element.
        type:
          type: string
          description: Detected break type.
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - >-
              End-line hyphen that is not present in text; does not co-occur
              with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.
            - Line break that ends a paragraph.
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
      type: object
      description: Detected start or end of a structural component.
      id: GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak
    GoogleCloudVisionV1p2beta1WebDetectionWebPage:
      id: GoogleCloudVisionV1p2beta1WebDetectionWebPage
      type: object
      description: Metadata for web pages.
      properties:
        pageTitle:
          type: string
          description: Title for the web page, may contain HTML markups.
        score:
          format: float
          description: (Deprecated) Overall relevancy score for the web page.
          type: number
        partialMatchingImages:
          description: >-
            Partial matching images on the page. Those images are similar enough
            to share some key-point features. For example an original image will
            likely have partial matching for its crops.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage
        fullMatchingImages:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage
          type: array
          description: >-
            Fully matching images on the page. Can include resized copies of the
            query image.
        url:
          description: The result web page URL.
          type: string
    Color:
      properties:
        alpha:
          type: number
          format: float
          description: >-
            The fraction of this color that should be applied to the pixel. That
            is, the final pixel color is defined by the equation: `pixel color =
            alpha * (this color) + (1.0 - alpha) * (background color)` This
            means that a value of 1.0 corresponds to a solid color, whereas a
            value of 0.0 corresponds to a completely transparent color. This
            uses a wrapper message rather than a simple float scalar so that it
            is possible to distinguish between a default value and the value
            being unset. If omitted, this color object is rendered as a solid
            color (as if the alpha value had been explicitly given a value of
            1.0).
        red:
          format: float
          description: The amount of red in the color as a value in the interval [0, 1].
          type: number
        green:
          description: The amount of green in the color as a value in the interval [0, 1].
          type: number
          format: float
        blue:
          description: The amount of blue in the color as a value in the interval [0, 1].
          format: float
          type: number
      type: object
      id: Color
      description: >-
        Represents a color in the RGBA color space. This representation is
        designed for simplicity of conversion to and from color representations
        in various languages over compactness. For example, the fields of this
        representation can be trivially provided to the constructor of
        `java.awt.Color` in Java; it can also be trivially provided to UIColor's
        `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little
        work, it can be easily formatted into a CSS `rgba()` string in
        JavaScript. This reference page doesn't have information about the
        absolute color space that should be used to interpret the RGB value—for
        example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications
        should assume the sRGB color space. When color equality needs to be
        decided, implementations, unless documented otherwise, treat two colors
        as equal if all their red, green, blue, and alpha values each differ by
        at most `1e-5`. Example (Java): import com.google.type.Color; // ...
        public static java.awt.Color fromProto(Color protocolor) { float alpha =
        protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return
        new java.awt.Color( protocolor.getRed(), protocolor.getGreen(),
        protocolor.getBlue(), alpha); } public static Color
        toProto(java.awt.Color color) { float red = (float) color.getRed();
        float green = (float) color.getGreen(); float blue = (float)
        color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder
        = Color .newBuilder() .setRed(red / denominator) .setGreen(green /
        denominator) .setBlue(blue / denominator); int alpha = color.getAlpha();
        if (alpha != 255) { result.setAlpha( FloatValue .newBuilder()
        .setValue(((float) alpha) / denominator) .build()); } return
        resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static
        UIColor* fromProto(Color* protocolor) { float red = [protocolor red];
        float green = [protocolor green]; float blue = [protocolor blue];
        FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if
        (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return
        [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static
        Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if
        (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return
        nil; } Color* result = [[Color alloc] init]; [result setRed:red];
        [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) {
        [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease];
        return result; } // ... Example (JavaScript): // ... var protoToCssColor
        = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var
        greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue ||
        0.0; var red = Math.floor(redFrac * 255); var green =
        Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if
        (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); }
        var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red,
        green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac,
        ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var
        rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
        = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
        resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) {
        resultBuilder.push('0'); } resultBuilder.push(hexString); return
        resultBuilder.join(''); }; // ...
    Symbol:
      properties:
        boundingBox:
          description: >-
            The bounding box for the symbol. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
          $ref: '#/components/schemas/BoundingPoly'
        text:
          description: The actual UTF-8 representation of the symbol.
          type: string
        confidence:
          description: Confidence of the OCR results for the symbol. Range [0, 1].
          type: number
          format: float
        property:
          $ref: '#/components/schemas/TextProperty'
          description: Additional information detected for the symbol.
      type: object
      description: A single symbol representation.
      id: Symbol
    GoogleCloudVisionV1p1beta1BoundingPoly:
      properties:
        normalizedVertices:
          description: The bounding polygon normalized vertices.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1NormalizedVertex'
          type: array
        vertices:
          description: The bounding polygon vertices.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Vertex'
          type: array
      description: A bounding polygon for the detected image annotation.
      type: object
      id: GoogleCloudVisionV1p1beta1BoundingPoly
    GoogleCloudVisionV1p3beta1ReferenceImage:
      id: GoogleCloudVisionV1p3beta1ReferenceImage
      description: >-
        A `ReferenceImage` represents a product image and its associated
        metadata, such as bounding boxes.
      properties:
        boundingPolys:
          type: array
          description: >-
            Optional. Bounding polygons around the areas of interest in the
            reference image. If this field is empty, the system will try to
            detect regions of interest. At most 10 bounding polygons will be
            used. The provided shape is converted into a non-rotated rectangle.
            Once converted, the small edge of the rectangle must be greater than
            or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e.
            1:3 is ok; 1:5 is not).
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        uri:
          type: string
          description: >-
            Required. The Google Cloud Storage URI of the reference image. The
            URI must start with `gs://`.
        name:
          type: string
          description: >-
            The resource name of the reference image. Format is:
            `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.
            This field is ignored when creating a reference image.
      type: object
    GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse:
      properties:
        responses:
          description: >-
            The list of file annotation responses, one for each request in
            AsyncBatchAnnotateFilesRequest.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse
      id: GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse
      description: Response to an async batch file annotation request.
      type: object
    CropHint:
      type: object
      properties:
        importanceFraction:
          description: >-
            Fraction of importance of this salient region with respect to the
            original image.
          type: number
          format: float
        boundingPoly:
          description: >-
            The bounding polygon for the crop region. The coordinates of the
            bounding box are in the original image's scale.
          $ref: '#/components/schemas/BoundingPoly'
        confidence:
          format: float
          type: number
          description: Confidence of this being a salient region. Range [0, 1].
      description: >-
        Single crop hint that is used to generate a new crop when serving an
        image.
      id: CropHint
    GoogleCloudVisionV1p1beta1WebDetectionWebPage:
      properties:
        score:
          format: float
          type: number
          description: (Deprecated) Overall relevancy score for the web page.
        url:
          description: The result web page URL.
          type: string
        partialMatchingImages:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage
          type: array
          description: >-
            Partial matching images on the page. Those images are similar enough
            to share some key-point features. For example an original image will
            likely have partial matching for its crops.
        pageTitle:
          type: string
          description: Title for the web page, may contain HTML markups.
        fullMatchingImages:
          type: array
          description: >-
            Fully matching images on the page. Can include resized copies of the
            query image.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1WebDetectionWebImage
      description: Metadata for web pages.
      id: GoogleCloudVisionV1p1beta1WebDetectionWebPage
      type: object
    GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak:
      description: Detected start or end of a structural component.
      type: object
      id: GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak
      properties:
        type:
          description: Detected break type.
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
          type: string
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - >-
              End-line hyphen that is not present in text; does not co-occur
              with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.
            - Line break that ends a paragraph.
        isPrefix:
          type: boolean
          description: True if break prepends the element.
    GoogleCloudVisionV1p1beta1Position:
      properties:
        z:
          description: Z coordinate (or depth).
          format: float
          type: number
        x:
          type: number
          format: float
          description: X coordinate.
        'y':
          format: float
          type: number
          description: Y coordinate.
      description: >-
        A 3D position in the image, used primarily for Face detection landmarks.
        A valid Position must have both x and y coordinates. The position
        coordinates are in the same scale as the original image.
      type: object
      id: GoogleCloudVisionV1p1beta1Position
    GoogleCloudVisionV1p1beta1NormalizedVertex:
      properties:
        'y':
          description: Y coordinate.
          type: number
          format: float
        x:
          format: float
          type: number
          description: X coordinate.
      id: GoogleCloudVisionV1p1beta1NormalizedVertex
      type: object
      description: >-
        A vertex represents a 2D point in the image. NOTE: the normalized vertex
        coordinates are relative to the original image and range from 0 to 1.
    GoogleCloudVisionV1p3beta1Word:
      description: A word representation.
      id: GoogleCloudVisionV1p3beta1Word
      type: object
      properties:
        symbols:
          description: >-
            List of symbols in the word. The order of the symbols follows the
            natural reading order.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Symbol'
          type: array
        property:
          description: Additional information detected for the word.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: >-
            The bounding box for the word. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
        confidence:
          type: number
          format: float
          description: Confidence of the OCR results for the word. Range [0, 1].
    AddProductToProductSetRequest:
      id: AddProductToProductSetRequest
      type: object
      properties:
        product:
          description: >-
            Required. The resource name for the Product to be added to this
            ProductSet. Format is:
            `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`
          type: string
      description: Request message for the `AddProductToProductSet` method.
    GoogleCloudVisionV1p1beta1Paragraph:
      type: object
      description: Structural unit of text representing a number of words in certain order.
      id: GoogleCloudVisionV1p1beta1Paragraph
      properties:
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: >-
            The bounding box for the paragraph. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
        property:
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty
          description: Additional information detected for the paragraph.
        words:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Word'
          type: array
          description: List of all words in this paragraph.
        confidence:
          type: number
          description: Confidence of the OCR results for the paragraph. Range [0, 1].
          format: float
    OutputConfig:
      description: The desired output location and metadata.
      properties:
        batchSize:
          description: >-
            The max number of response protos to put into each output JSON file
            on Google Cloud Storage. The valid range is [1, 100]. If not
            specified, the default value is 20. For example, for one pdf file
            with 100 pages, 100 response protos will be generated. If
            `batch_size` = 20, then 5 json files each containing 20 response
            protos will be written under the prefix `gcs_destination`.`uri`.
            Currently, batch_size only applies to GcsDestination, with potential
            future support for other output configurations.
          type: integer
          format: int32
        gcsDestination:
          description: The Google Cloud Storage location to write the output(s) to.
          $ref: '#/components/schemas/GcsDestination'
      id: OutputConfig
      type: object
    GoogleCloudVisionV1p4beta1WebDetectionWebEntity:
      properties:
        entityId:
          description: Opaque entity ID.
          type: string
        description:
          type: string
          description: Canonical description of the entity, in English.
        score:
          type: number
          description: >-
            Overall relevancy score for the entity. Not normalized and not
            comparable across different image queries.
          format: float
      description: Entity deduced from similar images on the Internet.
      type: object
      id: GoogleCloudVisionV1p4beta1WebDetectionWebEntity
    GoogleCloudVisionV1p2beta1OutputConfig:
      description: The desired output location and metadata.
      properties:
        batchSize:
          description: >-
            The max number of response protos to put into each output JSON file
            on Google Cloud Storage. The valid range is [1, 100]. If not
            specified, the default value is 20. For example, for one pdf file
            with 100 pages, 100 response protos will be generated. If
            `batch_size` = 20, then 5 json files each containing 20 response
            protos will be written under the prefix `gcs_destination`.`uri`.
            Currently, batch_size only applies to GcsDestination, with potential
            future support for other output configurations.
          format: int32
          type: integer
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1GcsDestination'
          description: The Google Cloud Storage location to write the output(s) to.
      type: object
      id: GoogleCloudVisionV1p2beta1OutputConfig
    AsyncAnnotateFileRequest:
      properties:
        inputConfig:
          description: Required. Information about the input file.
          $ref: '#/components/schemas/InputConfig'
        outputConfig:
          description: Required. The desired output location and metadata (e.g. format).
          $ref: '#/components/schemas/OutputConfig'
        imageContext:
          description: Additional context that may accompany the image(s) in the file.
          $ref: '#/components/schemas/ImageContext'
        features:
          items:
            $ref: '#/components/schemas/Feature'
          type: array
          description: Required. Requested features.
      description: An offline file annotation request.
      id: AsyncAnnotateFileRequest
      type: object
    GoogleCloudVisionV1p4beta1WebDetectionWebImage:
      id: GoogleCloudVisionV1p4beta1WebDetectionWebImage
      description: Metadata for online images.
      properties:
        url:
          description: The result image URL.
          type: string
        score:
          type: number
          description: (Deprecated) Overall relevancy score for the image.
          format: float
      type: object
    GoogleCloudVisionV1p3beta1TextAnnotation:
      description: >-
        TextAnnotation contains a structured representation of OCR extracted
        text. The hierarchy of an OCR extracted text structure is like this:
        TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each
        structural component, starting from Page, may further have their own
        properties. Properties describe detected languages, breaks etc.. Please
        refer to the TextAnnotation.TextProperty message definition below for
        more detail.
      id: GoogleCloudVisionV1p3beta1TextAnnotation
      type: object
      properties:
        pages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Page'
          description: List of pages detected by OCR.
          type: array
        text:
          type: string
          description: UTF-8 text detected on the pages.
    GoogleCloudVisionV1p3beta1AnnotateImageResponse:
      type: object
      id: GoogleCloudVisionV1p3beta1AnnotateImageResponse
      description: Response to an image annotation request.
      properties:
        imagePropertiesAnnotation:
          description: If present, image properties were extracted successfully.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ImageProperties'
        faceAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1FaceAnnotation'
          type: array
          description: If present, face detection has completed successfully.
        textAnnotations:
          description: If present, text (OCR) detection has completed successfully.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
        webDetection:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetection'
          description: If present, web detection has completed successfully.
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            If set, represents the error message for the operation. Note that
            filled-in image annotations are guaranteed to be correct, even when
            `error` is set.
        productSearchResults:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResults'
          description: If present, product search has completed successfully.
        logoAnnotations:
          type: array
          description: If present, logo detection has completed successfully.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
        cropHintsAnnotation:
          description: If present, crop hints have completed successfully.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1CropHintsAnnotation'
        safeSearchAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1SafeSearchAnnotation'
          description: If present, safe-search annotation has completed successfully.
        localizedObjectAnnotations:
          description: >-
            If present, localized object detection has completed successfully.
            This will be sorted descending by confidence score.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation
        fullTextAnnotation:
          description: >-
            If present, text (OCR) detection or document (OCR) text detection
            has completed successfully. This annotation provides the structural
            hierarchy for the OCR detected text.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotation'
        context:
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p3beta1ImageAnnotationContext
          description: >-
            If present, contextual information is needed to understand where
            this image comes from.
        labelAnnotations:
          description: If present, label detection has completed successfully.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
          type: array
        landmarkAnnotations:
          description: If present, landmark detection has completed successfully.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1EntityAnnotation'
    InputConfig:
      type: object
      properties:
        gcsSource:
          $ref: '#/components/schemas/GcsSource'
          description: The Google Cloud Storage location to read the input from.
        content:
          format: byte
          type: string
          description: >-
            File content, represented as a stream of bytes. Note: As with all
            `bytes` fields, protobuffers use a pure binary representation,
            whereas JSON representations use base64. Currently, this field only
            works for BatchAnnotateFiles requests. It does not work for
            AsyncBatchAnnotateFiles requests.
        mimeType:
          description: >-
            The type of the file. Currently only "application/pdf", "image/tiff"
            and "image/gif" are supported. Wildcards are not supported.
          type: string
      id: InputConfig
      description: The desired input location and metadata.
    GoogleCloudVisionV1p3beta1Symbol:
      description: A single symbol representation.
      type: object
      id: GoogleCloudVisionV1p3beta1Symbol
      properties:
        text:
          type: string
          description: The actual UTF-8 representation of the symbol.
        confidence:
          description: Confidence of the OCR results for the symbol. Range [0, 1].
          type: number
          format: float
        boundingBox:
          description: >-
            The bounding box for the symbol. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        property:
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty
          description: Additional information detected for the symbol.
    GoogleCloudVisionV1p4beta1GcsDestination:
      description: The Google Cloud Storage location where the output will be written to.
      type: object
      id: GoogleCloudVisionV1p4beta1GcsDestination
      properties:
        uri:
          type: string
          description: >-
            Google Cloud Storage URI prefix where the results will be stored.
            Results will be in JSON format and preceded by its corresponding
            input URI prefix. This field can either represent a gcs file prefix
            or gcs directory. In either case, the uri should be unique because
            in order to get all of the output files, you will need to do a
            wildcard gcs search on the uri prefix you provide. Examples: * File
            Prefix: gs://bucket-name/here/filenameprefix The output files will
            be created in gs://bucket-name/here/ and the names of the output
            files will begin with "filenameprefix". * Directory Prefix:
            gs://bucket-name/some/location/ The output files will be created in
            gs://bucket-name/some/location/ and the names of the output files
            could be anything because there was no filename prefix specified. If
            multiple outputs, each response is still AnnotateFileResponse, each
            of which contains some subset of the full list of
            AnnotateImageResponse. Multiple outputs can happen if, for example,
            the output JSON is too large and overflows into multiple sharded
            files.
    GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation:
      type: object
      id: GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation
      properties:
        score:
          description: Score of the result. Range [0, 1].
          format: float
          type: number
        name:
          description: Object name, expressed in its `language_code` language.
          type: string
        languageCode:
          type: string
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
      description: Prediction for what the object in the bounding box is.
    GoogleCloudVisionV1p3beta1Block:
      type: object
      description: Logical element on the page.
      id: GoogleCloudVisionV1p3beta1Block
      properties:
        paragraphs:
          type: array
          description: List of paragraphs in this block (if this blocks is of type text).
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Paragraph'
        property:
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty
          description: Additional information detected for the block.
        boundingBox:
          description: >-
            The bounding box for the block. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        confidence:
          type: number
          description: Confidence of the OCR results on the block. Range [0, 1].
          format: float
        blockType:
          type: string
          description: Detected block type (text, image etc) for this block.
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
    GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult:
      properties:
        results:
          description: List of results, one for each product match.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsResult
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: The bounding polygon around the product detected in the query image.
        objectAnnotations:
          description: List of generic predictions for the object in the bounding box.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation
          type: array
      description: >-
        Information about the products similar to a single product in a query
        image.
      id: GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult
      type: object
    GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage:
      id: GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage
      type: object
      properties:
        languageCode:
          type: string
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
        confidence:
          description: Confidence of detected language. Range [0, 1].
          format: float
          type: number
      description: Detected language for a structural component.
    GoogleCloudVisionV1p4beta1AnnotateImageResponse:
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            If set, represents the error message for the operation. Note that
            filled-in image annotations are guaranteed to be correct, even when
            `error` is set.
        cropHintsAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1CropHintsAnnotation'
          description: If present, crop hints have completed successfully.
        imagePropertiesAnnotation:
          description: If present, image properties were extracted successfully.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ImageProperties'
        textAnnotations:
          description: If present, text (OCR) detection has completed successfully.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
        webDetection:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetection'
          description: If present, web detection has completed successfully.
        landmarkAnnotations:
          description: If present, landmark detection has completed successfully.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
          type: array
        logoAnnotations:
          type: array
          description: If present, logo detection has completed successfully.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
        safeSearchAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1SafeSearchAnnotation'
          description: If present, safe-search annotation has completed successfully.
        faceAnnotations:
          description: If present, face detection has completed successfully.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1FaceAnnotation'
        localizedObjectAnnotations:
          description: >-
            If present, localized object detection has completed successfully.
            This will be sorted descending by confidence score.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation
          type: array
        fullTextAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotation'
          description: >-
            If present, text (OCR) detection or document (OCR) text detection
            has completed successfully. This annotation provides the structural
            hierarchy for the OCR detected text.
        labelAnnotations:
          type: array
          description: If present, label detection has completed successfully.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1EntityAnnotation'
        productSearchResults:
          description: If present, product search has completed successfully.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResults'
        context:
          description: >-
            If present, contextual information is needed to understand where
            this image comes from.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p4beta1ImageAnnotationContext
      id: GoogleCloudVisionV1p4beta1AnnotateImageResponse
      description: Response to an image annotation request.
      type: object
    GoogleCloudVisionV1p2beta1Vertex:
      type: object
      id: GoogleCloudVisionV1p2beta1Vertex
      properties:
        x:
          format: int32
          type: integer
          description: X coordinate.
        'y':
          description: Y coordinate.
          format: int32
          type: integer
      description: >-
        A vertex represents a 2D point in the image. NOTE: the vertex
        coordinates are in the same scale as the original image.
    GoogleCloudVisionV1p4beta1Property:
      id: GoogleCloudVisionV1p4beta1Property
      description: A `Property` consists of a user-supplied name/value pair.
      type: object
      properties:
        name:
          description: Name of the property.
          type: string
        value:
          type: string
          description: Value of the property.
        uint64Value:
          description: Value of numeric properties.
          format: uint64
          type: string
    AnnotateImageRequest:
      description: >-
        Request for performing Google Cloud Vision API tasks over a
        user-provided image, with user-requested features, and with context
        information.
      properties:
        imageContext:
          description: Additional context that may accompany the image.
          $ref: '#/components/schemas/ImageContext'
        image:
          description: The image to be processed.
          $ref: '#/components/schemas/Image'
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          description: Requested features.
      type: object
      id: AnnotateImageRequest
    GoogleCloudVisionV1p4beta1AnnotateFileResponse:
      type: object
      description: >-
        Response to a single file annotation request. A file may contain one or
        more images, which individually have their own responses.
      properties:
        responses:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1AnnotateImageResponse
          description: >-
            Individual responses to images found within the file. This field
            will be empty if the `error` field is set.
          type: array
        totalPages:
          description: This field gives the total number of pages in the file.
          type: integer
          format: int32
        error:
          description: >-
            If set, represents the error message for the failed request. The
            `responses` field will not be set in this case.
          $ref: '#/components/schemas/Status'
        inputConfig:
          description: Information about the file for which this response is generated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1InputConfig'
      id: GoogleCloudVisionV1p4beta1AnnotateFileResponse
    GoogleCloudVisionV1p2beta1AnnotateImageResponse:
      description: Response to an image annotation request.
      properties:
        labelAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
          description: If present, label detection has completed successfully.
        landmarkAnnotations:
          type: array
          description: If present, landmark detection has completed successfully.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            If set, represents the error message for the operation. Note that
            filled-in image annotations are guaranteed to be correct, even when
            `error` is set.
        safeSearchAnnotation:
          description: If present, safe-search annotation has completed successfully.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1SafeSearchAnnotation'
        productSearchResults:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResults'
          description: If present, product search has completed successfully.
        faceAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1FaceAnnotation'
          type: array
          description: If present, face detection has completed successfully.
        context:
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p2beta1ImageAnnotationContext
          description: >-
            If present, contextual information is needed to understand where
            this image comes from.
        logoAnnotations:
          description: If present, logo detection has completed successfully.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
        webDetection:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetection'
          description: If present, web detection has completed successfully.
        imagePropertiesAnnotation:
          description: If present, image properties were extracted successfully.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ImageProperties'
        textAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1EntityAnnotation'
          type: array
          description: If present, text (OCR) detection has completed successfully.
        localizedObjectAnnotations:
          description: >-
            If present, localized object detection has completed successfully.
            This will be sorted descending by confidence score.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation
          type: array
        fullTextAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotation'
          description: >-
            If present, text (OCR) detection or document (OCR) text detection
            has completed successfully. This annotation provides the structural
            hierarchy for the OCR detected text.
        cropHintsAnnotation:
          description: If present, crop hints have completed successfully.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1CropHintsAnnotation'
      type: object
      id: GoogleCloudVisionV1p2beta1AnnotateImageResponse
    GoogleCloudVisionV1p2beta1WebDetectionWebEntity:
      type: object
      id: GoogleCloudVisionV1p2beta1WebDetectionWebEntity
      description: Entity deduced from similar images on the Internet.
      properties:
        entityId:
          type: string
          description: Opaque entity ID.
        score:
          type: number
          format: float
          description: >-
            Overall relevancy score for the entity. Not normalized and not
            comparable across different image queries.
        description:
          type: string
          description: Canonical description of the entity, in English.
    LatLng:
      id: LatLng
      type: object
      properties:
        longitude:
          description: The longitude in degrees. It must be in the range [-180.0, +180.0].
          format: double
          type: number
        latitude:
          description: The latitude in degrees. It must be in the range [-90.0, +90.0].
          type: number
          format: double
      description: >-
        An object that represents a latitude/longitude pair. This is expressed
        as a pair of doubles to represent degrees latitude and degrees
        longitude. Unless specified otherwise, this object must conform to the
        WGS84 standard. Values must be within normalized ranges.
    GoogleCloudVisionV1p4beta1Word:
      id: GoogleCloudVisionV1p4beta1Word
      properties:
        confidence:
          format: float
          description: Confidence of the OCR results for the word. Range [0, 1].
          type: number
        property:
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty
          description: Additional information detected for the word.
        symbols:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Symbol'
          description: >-
            List of symbols in the word. The order of the symbols follows the
            natural reading order.
          type: array
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: >-
            The bounding box for the word. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
      type: object
      description: A word representation.
    DetectedLanguage:
      id: DetectedLanguage
      description: Detected language for a structural component.
      type: object
      properties:
        languageCode:
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
          type: string
        confidence:
          description: Confidence of detected language. Range [0, 1].
          type: number
          format: float
    GoogleCloudVisionV1p1beta1ProductKeyValue:
      type: object
      properties:
        key:
          description: >-
            The key of the label attached to the product. Cannot be empty and
            cannot exceed 128 bytes.
          type: string
        value:
          description: >-
            The value of the label attached to the product. Cannot be empty and
            cannot exceed 128 bytes.
          type: string
      description: A product label represented as a key-value pair.
      id: GoogleCloudVisionV1p1beta1ProductKeyValue
    NormalizedVertex:
      description: >-
        A vertex represents a 2D point in the image. NOTE: the normalized vertex
        coordinates are relative to the original image and range from 0 to 1.
      type: object
      id: NormalizedVertex
      properties:
        x:
          format: float
          description: X coordinate.
          type: number
        'y':
          format: float
          description: Y coordinate.
          type: number
    ProductSearchResults:
      type: object
      id: ProductSearchResults
      description: Results for a product search request.
      properties:
        results:
          items:
            $ref: '#/components/schemas/Result'
          type: array
          description: List of results, one for each product match.
        productGroupedResults:
          items:
            $ref: '#/components/schemas/GroupedResult'
          description: >-
            List of results grouped by products detected in the query image.
            Each entry corresponds to one bounding polygon in the query image,
            and contains the matching products specific to that region. There
            may be duplicate product matches in the union of all the per-product
            results.
          type: array
        indexTime:
          type: string
          description: >-
            Timestamp of the index which provided these results. Products added
            to the product set and products removed from the product set after
            this time are not reflected in the current results.
          format: google-datetime
    GoogleCloudVisionV1p1beta1ColorInfo:
      properties:
        score:
          type: number
          format: float
          description: Image-specific score for this color. Value in range [0, 1].
        pixelFraction:
          description: >-
            The fraction of pixels the color occupies in the image. Value in
            range [0, 1].
          type: number
          format: float
        color:
          $ref: '#/components/schemas/Color'
          description: RGB components of the color.
      id: GoogleCloudVisionV1p1beta1ColorInfo
      type: object
      description: >-
        Color information consists of RGB channels, score, and the fraction of
        the image that the color occupies in the image.
    GoogleCloudVisionV1p3beta1ProductKeyValue:
      type: object
      description: A product label represented as a key-value pair.
      properties:
        key:
          type: string
          description: >-
            The key of the label attached to the product. Cannot be empty and
            cannot exceed 128 bytes.
        value:
          description: >-
            The value of the label attached to the product. Cannot be empty and
            cannot exceed 128 bytes.
          type: string
      id: GoogleCloudVisionV1p3beta1ProductKeyValue
    WebPage:
      type: object
      properties:
        score:
          type: number
          format: float
          description: (Deprecated) Overall relevancy score for the web page.
        pageTitle:
          description: Title for the web page, may contain HTML markups.
          type: string
        url:
          type: string
          description: The result web page URL.
        fullMatchingImages:
          description: >-
            Fully matching images on the page. Can include resized copies of the
            query image.
          items:
            $ref: '#/components/schemas/WebImage'
          type: array
        partialMatchingImages:
          description: >-
            Partial matching images on the page. Those images are similar enough
            to share some key-point features. For example an original image will
            likely have partial matching for its crops.
          items:
            $ref: '#/components/schemas/WebImage'
          type: array
      id: WebPage
      description: Metadata for web pages.
    GoogleCloudVisionV1p3beta1BatchOperationMetadata:
      properties:
        state:
          description: The current state of the batch operation.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PROCESSING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
          enumDescriptions:
            - Invalid.
            - Request is actively being processed.
            - >-
              The request is done and at least one item has been successfully
              processed.
            - The request is done and no item has been successfully processed.
            - >-
              The request is done after the
              longrunning.Operations.CancelOperation has been called by the
              user. Any records that were processed before the cancel command
              are output as specified in the request.
        endTime:
          format: google-datetime
          description: >-
            The time when the batch request is finished and
            google.longrunning.Operation.done is set to true.
          type: string
        submitTime:
          description: The time when the batch request was submitted to the server.
          format: google-datetime
          type: string
      id: GoogleCloudVisionV1p3beta1BatchOperationMetadata
      type: object
      description: >-
        Metadata for the batch operations such as the current state. This is
        included in the `metadata` field of the `Operation` returned by the
        `GetOperation` call of the `google::longrunning::Operations` service.
    Word:
      description: A word representation.
      properties:
        confidence:
          type: number
          description: Confidence of the OCR results for the word. Range [0, 1].
          format: float
        property:
          description: Additional information detected for the word.
          $ref: '#/components/schemas/TextProperty'
        boundingBox:
          description: >-
            The bounding box for the word. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
          $ref: '#/components/schemas/BoundingPoly'
        symbols:
          type: array
          description: >-
            List of symbols in the word. The order of the symbols follows the
            natural reading order.
          items:
            $ref: '#/components/schemas/Symbol'
      type: object
      id: Word
    GoogleCloudVisionV1p4beta1LocationInfo:
      type: object
      description: Detected entity location information.
      id: GoogleCloudVisionV1p4beta1LocationInfo
      properties:
        latLng:
          description: lat/long location coordinates.
          $ref: '#/components/schemas/LatLng'
    GoogleCloudVisionV1p4beta1ImportProductSetsResponse:
      description: >-
        Response message for the `ImportProductSets` method. This message is
        returned by the google.longrunning.Operations.GetOperation method in the
        returned google.longrunning.Operation.response field.
      id: GoogleCloudVisionV1p4beta1ImportProductSetsResponse
      properties:
        statuses:
          items:
            $ref: '#/components/schemas/Status'
          type: array
          description: >-
            The rpc status for each ImportProductSet request, including both
            successes and errors. The number of statuses here matches the number
            of lines in the csv file, and statuses[i] stores the success or
            failure status of processing the i-th line of the csv, starting from
            line 0.
        referenceImages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ReferenceImage'
          description: The list of reference_images that are imported successfully.
          type: array
      type: object
    GoogleCloudVisionV1p4beta1SafeSearchAnnotation:
      id: GoogleCloudVisionV1p4beta1SafeSearchAnnotation
      properties:
        racy:
          description: >-
            Likelihood that the request image contains racy content. Racy
            content may include (but is not limited to) skimpy or sheer
            clothing, strategically covered nudity, lewd or provocative poses,
            or close-ups of sensitive body areas.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        medical:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: Likelihood that this is a medical image.
        spoof:
          type: string
          description: >-
            Spoof likelihood. The likelihood that an modification was made to
            the image's canonical version to make it appear funny or offensive.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        violence:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Likelihood that this image contains violent content.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        adult:
          description: >-
            Represents the adult content likelihood for the image. Adult content
            may contain elements such as nudity, pornographic images or
            cartoons, or sexual activities.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
      description: >-
        Set of features pertaining to the image, computed by computer vision
        methods over safe-search verticals (for example, adult, spoof, medical,
        violence).
      type: object
    WebLabel:
      id: WebLabel
      type: object
      description: Label to provide extra metadata for the web detection.
      properties:
        languageCode:
          description: >-
            The BCP-47 language code for `label`, such as "en-US" or "sr-Latn".
            For more information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
          type: string
        label:
          description: Label for extra metadata.
          type: string
    GoogleCloudVisionV1p4beta1ImageAnnotationContext:
      type: object
      description: >-
        If an image was produced from a file (e.g. a PDF), this message gives
        information about the source of that image.
      properties:
        uri:
          type: string
          description: The URI of the file used to produce the image.
        pageNumber:
          type: integer
          description: >-
            If the file was a PDF or TIFF, this field gives the page number
            within the file used to produce the image.
          format: int32
      id: GoogleCloudVisionV1p4beta1ImageAnnotationContext
    GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult:
      properties:
        results:
          description: List of results, one for each product match.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsResult
        boundingPoly:
          description: The bounding polygon around the product detected in the query image.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        objectAnnotations:
          description: List of generic predictions for the object in the bounding box.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation
          type: array
      description: >-
        Information about the products similar to a single product in a query
        image.
      id: GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult
      type: object
    GoogleCloudVisionV1p2beta1ProductKeyValue:
      properties:
        value:
          type: string
          description: >-
            The value of the label attached to the product. Cannot be empty and
            cannot exceed 128 bytes.
        key:
          description: >-
            The key of the label attached to the product. Cannot be empty and
            cannot exceed 128 bytes.
          type: string
      type: object
      id: GoogleCloudVisionV1p2beta1ProductKeyValue
      description: A product label represented as a key-value pair.
    GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage:
      description: Detected language for a structural component.
      properties:
        languageCode:
          type: string
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
        confidence:
          description: Confidence of detected language. Range [0, 1].
          type: number
          format: float
      type: object
      id: GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage
    GoogleCloudVisionV1p4beta1CropHint:
      id: GoogleCloudVisionV1p4beta1CropHint
      properties:
        confidence:
          description: Confidence of this being a salient region. Range [0, 1].
          type: number
          format: float
        importanceFraction:
          format: float
          description: >-
            Fraction of importance of this salient region with respect to the
            original image.
          type: number
        boundingPoly:
          description: >-
            The bounding polygon for the crop region. The coordinates of the
            bounding box are in the original image's scale.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
      description: >-
        Single crop hint that is used to generate a new crop when serving an
        image.
      type: object
    ProductSearchParams:
      description: Parameters for a product search request.
      type: object
      properties:
        boundingPoly:
          $ref: '#/components/schemas/BoundingPoly'
          description: >-
            The bounding polygon around the area of interest in the image. If it
            is not specified, system discretion will be applied.
        productCategories:
          type: array
          items:
            type: string
          description: >-
            The list of product categories to search in. Currently, we only
            consider the first category, and either "homegoods-v2",
            "apparel-v2", "toys-v2", "packagedgoods-v1", or "general-v1" should
            be specified. The legacy categories "homegoods", "apparel", and
            "toys" are still supported but will be deprecated. For new products,
            please use "homegoods-v2", "apparel-v2", or "toys-v2" for better
            product search accuracy. It is recommended to migrate existing
            products to these categories as well.
        productSet:
          description: >-
            The resource name of a ProductSet to be searched for similar images.
            Format is:
            `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`.
          type: string
        filter:
          type: string
          description: >-
            The filtering expression. This can be used to restrict search
            results based on Product labels. We currently support an AND of OR
            of key-value expressions, where each expression within an OR must
            have the same key. An '=' should be used to connect the key and
            value. For example, "(color = red OR color = blue) AND brand =
            Google" is acceptable, but "(color = red OR brand = Google)" is not
            acceptable. "color: red" is not acceptable because it uses a ':'
            instead of an '='.
      id: ProductSearchParams
    GoogleCloudVisionV1p3beta1CropHintsAnnotation:
      id: GoogleCloudVisionV1p3beta1CropHintsAnnotation
      description: >-
        Set of crop hints that are used to generate new crops when serving
        images.
      type: object
      properties:
        cropHints:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1CropHint'
          type: array
          description: Crop hint results.
    FaceAnnotation:
      id: FaceAnnotation
      properties:
        boundingPoly:
          description: >-
            The bounding polygon around the face. The coordinates of the
            bounding box are in the original image's scale. The bounding box is
            computed to "frame" the face in accordance with human expectations.
            It is based on the landmarker results. Note that one or more x
            and/or y coordinates may not be generated in the `BoundingPoly` (the
            polygon will be unbounded) if only a partial face appears in the
            image to be annotated.
          $ref: '#/components/schemas/BoundingPoly'
        blurredLikelihood:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Blurred likelihood.
        landmarkingConfidence:
          type: number
          format: float
          description: Face landmarking confidence. Range [0, 1].
        fdBoundingPoly:
          $ref: '#/components/schemas/BoundingPoly'
          description: >-
            The `fd_bounding_poly` bounding polygon is tighter than the
            `boundingPoly`, and encloses only the skin part of the face.
            Typically, it is used to eliminate the face from any image analysis
            that detects the "amount of skin" visible in an image. It is not
            based on the landmarker results, only on the initial face detection,
            hence the fd (face detection) prefix.
        landmarks:
          items:
            $ref: '#/components/schemas/Landmark'
          type: array
          description: Detected face landmarks.
        joyLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: Joy likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        panAngle:
          type: number
          format: float
          description: >-
            Yaw angle, which indicates the leftward/rightward angle that the
            face is pointing relative to the vertical plane perpendicular to the
            image. Range [-180,180].
        rollAngle:
          description: >-
            Roll angle, which indicates the amount of clockwise/anti-clockwise
            rotation of the face relative to the image vertical about the axis
            perpendicular to the face. Range [-180,180].
          format: float
          type: number
        angerLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Anger likelihood.
          type: string
        detectionConfidence:
          description: Detection confidence. Range [0, 1].
          format: float
          type: number
        sorrowLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Sorrow likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        headwearLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Headwear likelihood.
        surpriseLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Surprise likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        underExposedLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Under-exposed likelihood.
        tiltAngle:
          description: >-
            Pitch angle, which indicates the upwards/downwards angle that the
            face is pointing relative to the image's horizontal plane. Range
            [-180,180].
          type: number
          format: float
      description: A face annotation object contains the results of face detection.
      type: object
    GroupedResult:
      description: >-
        Information about the products similar to a single product in a query
        image.
      id: GroupedResult
      properties:
        results:
          description: List of results, one for each product match.
          type: array
          items:
            $ref: '#/components/schemas/Result'
        objectAnnotations:
          description: List of generic predictions for the object in the bounding box.
          items:
            $ref: '#/components/schemas/ObjectAnnotation'
          type: array
        boundingPoly:
          description: The bounding polygon around the product detected in the query image.
          $ref: '#/components/schemas/BoundingPoly'
      type: object
    GoogleCloudVisionV1p1beta1TextAnnotation:
      id: GoogleCloudVisionV1p1beta1TextAnnotation
      properties:
        pages:
          description: List of pages detected by OCR.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Page'
          type: array
        text:
          type: string
          description: UTF-8 text detected on the pages.
      description: >-
        TextAnnotation contains a structured representation of OCR extracted
        text. The hierarchy of an OCR extracted text structure is like this:
        TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each
        structural component, starting from Page, may further have their own
        properties. Properties describe detected languages, breaks etc.. Please
        refer to the TextAnnotation.TextProperty message definition below for
        more detail.
      type: object
    GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse:
      description: Response to an async batch file annotation request.
      type: object
      id: GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse
      properties:
        responses:
          description: >-
            The list of file annotation responses, one for each request in
            AsyncBatchAnnotateFilesRequest.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse
    ListProductSetsResponse:
      id: ListProductSetsResponse
      type: object
      description: Response message for the `ListProductSets` method.
      properties:
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
        productSets:
          type: array
          items:
            $ref: '#/components/schemas/ProductSet'
          description: List of ProductSets.
    ImageAnnotationContext:
      id: ImageAnnotationContext
      properties:
        uri:
          type: string
          description: The URI of the file used to produce the image.
        pageNumber:
          description: >-
            If the file was a PDF or TIFF, this field gives the page number
            within the file used to produce the image.
          format: int32
          type: integer
      type: object
      description: >-
        If an image was produced from a file (e.g. a PDF), this message gives
        information about the source of that image.
    GoogleCloudVisionV1p4beta1ImageProperties:
      description: Stores image properties, such as dominant colors.
      properties:
        dominantColors:
          description: If present, dominant colors completed successfully.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p4beta1DominantColorsAnnotation
      type: object
      id: GoogleCloudVisionV1p4beta1ImageProperties
    Position:
      type: object
      id: Position
      properties:
        z:
          description: Z coordinate (or depth).
          type: number
          format: float
        x:
          description: X coordinate.
          format: float
          type: number
        'y':
          format: float
          description: Y coordinate.
          type: number
      description: >-
        A 3D position in the image, used primarily for Face detection landmarks.
        A valid Position must have both x and y coordinates. The position
        coordinates are in the same scale as the original image.
    WebDetection:
      description: Relevant information for the image from the Internet.
      type: object
      properties:
        webEntities:
          type: array
          description: Deduced entities from similar images on the Internet.
          items:
            $ref: '#/components/schemas/WebEntity'
        visuallySimilarImages:
          type: array
          description: The visually similar image results.
          items:
            $ref: '#/components/schemas/WebImage'
        bestGuessLabels:
          type: array
          description: >-
            The service's best guess as to the topic of the request image.
            Inferred from similar images on the open web.
          items:
            $ref: '#/components/schemas/WebLabel'
        pagesWithMatchingImages:
          type: array
          description: Web pages containing the matching images from the Internet.
          items:
            $ref: '#/components/schemas/WebPage'
        fullMatchingImages:
          type: array
          description: >-
            Fully matching images from the Internet. Can include resized copies
            of the query image.
          items:
            $ref: '#/components/schemas/WebImage'
        partialMatchingImages:
          description: >-
            Partial matching images from the Internet. Those images are similar
            enough to share some key-point features. For example an original
            image will likely have partial matching for its crops.
          type: array
          items:
            $ref: '#/components/schemas/WebImage'
      id: WebDetection
    GoogleCloudVisionV1p4beta1NormalizedVertex:
      properties:
        x:
          type: number
          format: float
          description: X coordinate.
        'y':
          format: float
          type: number
          description: Y coordinate.
      type: object
      description: >-
        A vertex represents a 2D point in the image. NOTE: the normalized vertex
        coordinates are relative to the original image and range from 0 to 1.
      id: GoogleCloudVisionV1p4beta1NormalizedVertex
    GoogleCloudVisionV1p1beta1AnnotateFileResponse:
      id: GoogleCloudVisionV1p1beta1AnnotateFileResponse
      description: >-
        Response to a single file annotation request. A file may contain one or
        more images, which individually have their own responses.
      properties:
        responses:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1AnnotateImageResponse
          description: >-
            Individual responses to images found within the file. This field
            will be empty if the `error` field is set.
          type: array
        totalPages:
          format: int32
          type: integer
          description: This field gives the total number of pages in the file.
        error:
          description: >-
            If set, represents the error message for the failed request. The
            `responses` field will not be set in this case.
          $ref: '#/components/schemas/Status'
        inputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1InputConfig'
          description: Information about the file for which this response is generated.
      type: object
    GoogleCloudVisionV1p1beta1CropHint:
      properties:
        confidence:
          format: float
          description: Confidence of this being a salient region. Range [0, 1].
          type: number
        importanceFraction:
          format: float
          description: >-
            Fraction of importance of this salient region with respect to the
            original image.
          type: number
        boundingPoly:
          description: >-
            The bounding polygon for the crop region. The coordinates of the
            bounding box are in the original image's scale.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
      id: GoogleCloudVisionV1p1beta1CropHint
      type: object
      description: >-
        Single crop hint that is used to generate a new crop when serving an
        image.
    GoogleCloudVisionV1p4beta1Paragraph:
      description: Structural unit of text representing a number of words in certain order.
      id: GoogleCloudVisionV1p4beta1Paragraph
      type: object
      properties:
        boundingBox:
          description: >-
            The bounding box for the paragraph. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        property:
          description: Additional information detected for the paragraph.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty
        words:
          description: List of all words in this paragraph.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Word'
        confidence:
          description: Confidence of the OCR results for the paragraph. Range [0, 1].
          type: number
          format: float
    GoogleCloudVisionV1p4beta1ProductKeyValue:
      id: GoogleCloudVisionV1p4beta1ProductKeyValue
      type: object
      properties:
        key:
          type: string
          description: >-
            The key of the label attached to the product. Cannot be empty and
            cannot exceed 128 bytes.
        value:
          description: >-
            The value of the label attached to the product. Cannot be empty and
            cannot exceed 128 bytes.
          type: string
      description: A product label represented as a key-value pair.
    GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult:
      id: GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult
      description: >-
        Information about the products similar to a single product in a query
        image.
      type: object
      properties:
        results:
          description: List of results, one for each product match.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsResult
          type: array
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: The bounding polygon around the product detected in the query image.
        objectAnnotations:
          description: List of generic predictions for the object in the bounding box.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation
    GoogleCloudVisionV1p3beta1LocationInfo:
      description: Detected entity location information.
      type: object
      id: GoogleCloudVisionV1p3beta1LocationInfo
      properties:
        latLng:
          description: lat/long location coordinates.
          $ref: '#/components/schemas/LatLng'
    GoogleCloudVisionV1p3beta1FaceAnnotation:
      type: object
      description: A face annotation object contains the results of face detection.
      properties:
        blurredLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Blurred likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        panAngle:
          type: number
          format: float
          description: >-
            Yaw angle, which indicates the leftward/rightward angle that the
            face is pointing relative to the vertical plane perpendicular to the
            image. Range [-180,180].
        underExposedLikelihood:
          description: Under-exposed likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        surpriseLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Surprise likelihood.
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: >-
            The bounding polygon around the face. The coordinates of the
            bounding box are in the original image's scale. The bounding box is
            computed to "frame" the face in accordance with human expectations.
            It is based on the landmarker results. Note that one or more x
            and/or y coordinates may not be generated in the `BoundingPoly` (the
            polygon will be unbounded) if only a partial face appears in the
            image to be annotated.
        angerLikelihood:
          description: Anger likelihood.
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        landmarkingConfidence:
          type: number
          format: float
          description: Face landmarking confidence. Range [0, 1].
        landmarks:
          description: Detected face landmarks.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1FaceAnnotationLandmark
        detectionConfidence:
          type: number
          format: float
          description: Detection confidence. Range [0, 1].
        tiltAngle:
          description: >-
            Pitch angle, which indicates the upwards/downwards angle that the
            face is pointing relative to the image's horizontal plane. Range
            [-180,180].
          type: number
          format: float
        sorrowLikelihood:
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Sorrow likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        headwearLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Headwear likelihood.
          type: string
        rollAngle:
          type: number
          format: float
          description: >-
            Roll angle, which indicates the amount of clockwise/anti-clockwise
            rotation of the face relative to the image vertical about the axis
            perpendicular to the face. Range [-180,180].
        fdBoundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: >-
            The `fd_bounding_poly` bounding polygon is tighter than the
            `boundingPoly`, and encloses only the skin part of the face.
            Typically, it is used to eliminate the face from any image analysis
            that detects the "amount of skin" visible in an image. It is not
            based on the landmarker results, only on the initial face detection,
            hence the fd (face detection) prefix.
        joyLikelihood:
          type: string
          description: Joy likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
      id: GoogleCloudVisionV1p3beta1FaceAnnotation
    PurgeProductsRequest:
      properties:
        force:
          type: boolean
          description: >-
            The default value is false. Override this value to true to actually
            perform the purge.
        deleteOrphanProducts:
          description: >-
            If delete_orphan_products is true, all Products that are not in any
            ProductSet will be deleted.
          type: boolean
        productSetPurgeConfig:
          $ref: '#/components/schemas/ProductSetPurgeConfig'
          description: Specify which ProductSet contains the Products to be deleted.
      type: object
      id: PurgeProductsRequest
      description: Request message for the `PurgeProducts` method.
    ProductSetPurgeConfig:
      description: Config to control which ProductSet contains the Products to be deleted.
      id: ProductSetPurgeConfig
      type: object
      properties:
        productSetId:
          type: string
          description: >-
            The ProductSet that contains the Products to delete. If a Product is
            a member of product_set_id in addition to other ProductSets, the
            Product will still be deleted.
    GoogleCloudVisionV1p2beta1InputConfig:
      description: The desired input location and metadata.
      type: object
      properties:
        mimeType:
          type: string
          description: >-
            The type of the file. Currently only "application/pdf", "image/tiff"
            and "image/gif" are supported. Wildcards are not supported.
        gcsSource:
          description: The Google Cloud Storage location to read the input from.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1GcsSource'
        content:
          type: string
          description: >-
            File content, represented as a stream of bytes. Note: As with all
            `bytes` fields, protobuffers use a pure binary representation,
            whereas JSON representations use base64. Currently, this field only
            works for BatchAnnotateFiles requests. It does not work for
            AsyncBatchAnnotateFiles requests.
          format: byte
      id: GoogleCloudVisionV1p2beta1InputConfig
    GoogleCloudVisionV1p2beta1WebDetectionWebImage:
      description: Metadata for online images.
      type: object
      id: GoogleCloudVisionV1p2beta1WebDetectionWebImage
      properties:
        url:
          description: The result image URL.
          type: string
        score:
          format: float
          type: number
          description: (Deprecated) Overall relevancy score for the image.
    GoogleCloudVisionV1p4beta1TextAnnotationTextProperty:
      properties:
        detectedLanguages:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage
          description: A list of detected languages together with confidence.
        detectedBreak:
          description: Detected start or end of a text segment.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak
      description: Additional information detected on the structural component.
      type: object
      id: GoogleCloudVisionV1p4beta1TextAnnotationTextProperty
    GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation:
      description: Prediction for what the object in the bounding box is.
      properties:
        score:
          type: number
          format: float
          description: Score of the result. Range [0, 1].
        name:
          type: string
          description: Object name, expressed in its `language_code` language.
        languageCode:
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
          type: string
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
      type: object
      id: GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation
    LatLongRect:
      type: object
      id: LatLongRect
      description: Rectangle determined by min and max `LatLng` pairs.
      properties:
        minLatLng:
          $ref: '#/components/schemas/LatLng'
          description: Min lat/long pair.
        maxLatLng:
          $ref: '#/components/schemas/LatLng'
          description: Max lat/long pair.
    GoogleCloudVisionV1p2beta1ColorInfo:
      id: GoogleCloudVisionV1p2beta1ColorInfo
      type: object
      properties:
        color:
          description: RGB components of the color.
          $ref: '#/components/schemas/Color'
        score:
          format: float
          description: Image-specific score for this color. Value in range [0, 1].
          type: number
        pixelFraction:
          type: number
          format: float
          description: >-
            The fraction of pixels the color occupies in the image. Value in
            range [0, 1].
      description: >-
        Color information consists of RGB channels, score, and the fraction of
        the image that the color occupies in the image.
    GoogleCloudVisionV1p1beta1WebDetectionWebEntity:
      description: Entity deduced from similar images on the Internet.
      type: object
      properties:
        score:
          type: number
          description: >-
            Overall relevancy score for the entity. Not normalized and not
            comparable across different image queries.
          format: float
        description:
          description: Canonical description of the entity, in English.
          type: string
        entityId:
          type: string
          description: Opaque entity ID.
      id: GoogleCloudVisionV1p1beta1WebDetectionWebEntity
    KeyValue:
      description: A product label represented as a key-value pair.
      type: object
      properties:
        key:
          description: >-
            The key of the label attached to the product. Cannot be empty and
            cannot exceed 128 bytes.
          type: string
        value:
          type: string
          description: >-
            The value of the label attached to the product. Cannot be empty and
            cannot exceed 128 bytes.
      id: KeyValue
    GoogleCloudVisionV1p2beta1WebDetection:
      properties:
        partialMatchingImages:
          type: array
          description: >-
            Partial matching images from the Internet. Those images are similar
            enough to share some key-point features. For example an original
            image will likely have partial matching for its crops.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage
        bestGuessLabels:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebLabel
          description: >-
            The service's best guess as to the topic of the request image.
            Inferred from similar images on the open web.
          type: array
        visuallySimilarImages:
          type: array
          description: The visually similar image results.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage
        pagesWithMatchingImages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebPage'
          description: Web pages containing the matching images from the Internet.
        webEntities:
          description: Deduced entities from similar images on the Internet.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebEntity
        fullMatchingImages:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1WebDetectionWebImage
          description: >-
            Fully matching images from the Internet. Can include resized copies
            of the query image.
      type: object
      description: Relevant information for the image from the Internet.
      id: GoogleCloudVisionV1p2beta1WebDetection
    GoogleCloudVisionV1p1beta1OperationMetadata:
      description: Contains metadata for the BatchAnnotateImages operation.
      id: GoogleCloudVisionV1p1beta1OperationMetadata
      type: object
      properties:
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
          description: Current state of the batch operation.
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
        createTime:
          format: google-datetime
          description: The time when the batch request was received.
          type: string
        updateTime:
          format: google-datetime
          type: string
          description: The time when the operation result was last updated.
    GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation:
      id: GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation
      description: Set of detected objects with bounding boxes.
      type: object
      properties:
        name:
          description: Object name, expressed in its `language_code` language.
          type: string
        languageCode:
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
          type: string
        score:
          type: number
          description: Score of the result. Range [0, 1].
          format: float
        boundingPoly:
          description: Image region to which this object belongs. This must be populated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
    Property:
      id: Property
      type: object
      description: A `Property` consists of a user-supplied name/value pair.
      properties:
        uint64Value:
          type: string
          description: Value of numeric properties.
          format: uint64
        value:
          type: string
          description: Value of the property.
        name:
          type: string
          description: Name of the property.
    GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult:
      id: GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult
      properties:
        results:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsResult
          description: List of results, one for each product match.
          type: array
        objectAnnotations:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation
          description: List of generic predictions for the object in the bounding box.
        boundingPoly:
          description: The bounding polygon around the product detected in the query image.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
      type: object
      description: >-
        Information about the products similar to a single product in a query
        image.
    GoogleCloudVisionV1p4beta1TextAnnotation:
      id: GoogleCloudVisionV1p4beta1TextAnnotation
      properties:
        pages:
          description: List of pages detected by OCR.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Page'
          type: array
        text:
          type: string
          description: UTF-8 text detected on the pages.
      description: >-
        TextAnnotation contains a structured representation of OCR extracted
        text. The hierarchy of an OCR extracted text structure is like this:
        TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each
        structural component, starting from Page, may further have their own
        properties. Properties describe detected languages, breaks etc.. Please
        refer to the TextAnnotation.TextProperty message definition below for
        more detail.
      type: object
    GoogleCloudVisionV1p3beta1Property:
      type: object
      properties:
        name:
          type: string
          description: Name of the property.
        uint64Value:
          description: Value of numeric properties.
          type: string
          format: uint64
        value:
          description: Value of the property.
          type: string
      id: GoogleCloudVisionV1p3beta1Property
      description: A `Property` consists of a user-supplied name/value pair.
    GoogleCloudVisionV1p4beta1OutputConfig:
      properties:
        batchSize:
          type: integer
          format: int32
          description: >-
            The max number of response protos to put into each output JSON file
            on Google Cloud Storage. The valid range is [1, 100]. If not
            specified, the default value is 20. For example, for one pdf file
            with 100 pages, 100 response protos will be generated. If
            `batch_size` = 20, then 5 json files each containing 20 response
            protos will be written under the prefix `gcs_destination`.`uri`.
            Currently, batch_size only applies to GcsDestination, with potential
            future support for other output configurations.
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1GcsDestination'
          description: The Google Cloud Storage location to write the output(s) to.
      type: object
      id: GoogleCloudVisionV1p4beta1OutputConfig
      description: The desired output location and metadata.
    Vertex:
      description: >-
        A vertex represents a 2D point in the image. NOTE: the vertex
        coordinates are in the same scale as the original image.
      type: object
      properties:
        x:
          type: integer
          format: int32
          description: X coordinate.
        'y':
          type: integer
          description: Y coordinate.
          format: int32
      id: Vertex
    GoogleCloudVisionV1p1beta1ImageAnnotationContext:
      properties:
        uri:
          description: The URI of the file used to produce the image.
          type: string
        pageNumber:
          description: >-
            If the file was a PDF or TIFF, this field gives the page number
            within the file used to produce the image.
          type: integer
          format: int32
      type: object
      id: GoogleCloudVisionV1p1beta1ImageAnnotationContext
      description: >-
        If an image was produced from a file (e.g. a PDF), this message gives
        information about the source of that image.
    GoogleCloudVisionV1p2beta1LocationInfo:
      id: GoogleCloudVisionV1p2beta1LocationInfo
      description: Detected entity location information.
      properties:
        latLng:
          description: lat/long location coordinates.
          $ref: '#/components/schemas/LatLng'
      type: object
    GoogleCloudVisionV1p2beta1BoundingPoly:
      id: GoogleCloudVisionV1p2beta1BoundingPoly
      properties:
        vertices:
          description: The bounding polygon vertices.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Vertex'
        normalizedVertices:
          type: array
          description: The bounding polygon normalized vertices.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1NormalizedVertex'
      type: object
      description: A bounding polygon for the detected image annotation.
    GoogleCloudVisionV1p3beta1Paragraph:
      id: GoogleCloudVisionV1p3beta1Paragraph
      type: object
      description: Structural unit of text representing a number of words in certain order.
      properties:
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: >-
            The bounding box for the paragraph. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
        confidence:
          description: Confidence of the OCR results for the paragraph. Range [0, 1].
          format: float
          type: number
        property:
          description: Additional information detected for the paragraph.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty
        words:
          description: List of all words in this paragraph.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Word'
          type: array
    GoogleCloudVisionV1p4beta1Vertex:
      id: GoogleCloudVisionV1p4beta1Vertex
      description: >-
        A vertex represents a 2D point in the image. NOTE: the vertex
        coordinates are in the same scale as the original image.
      properties:
        'y':
          description: Y coordinate.
          type: integer
          format: int32
        x:
          description: X coordinate.
          format: int32
          type: integer
      type: object
    ColorInfo:
      type: object
      id: ColorInfo
      description: >-
        Color information consists of RGB channels, score, and the fraction of
        the image that the color occupies in the image.
      properties:
        score:
          description: Image-specific score for this color. Value in range [0, 1].
          type: number
          format: float
        color:
          description: RGB components of the color.
          $ref: '#/components/schemas/Color'
        pixelFraction:
          format: float
          type: number
          description: >-
            The fraction of pixels the color occupies in the image. Value in
            range [0, 1].
    GoogleCloudVisionV1p1beta1FaceAnnotation:
      description: A face annotation object contains the results of face detection.
      id: GoogleCloudVisionV1p1beta1FaceAnnotation
      type: object
      properties:
        surpriseLikelihood:
          description: Surprise likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        landmarkingConfidence:
          type: number
          description: Face landmarking confidence. Range [0, 1].
          format: float
        fdBoundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: >-
            The `fd_bounding_poly` bounding polygon is tighter than the
            `boundingPoly`, and encloses only the skin part of the face.
            Typically, it is used to eliminate the face from any image analysis
            that detects the "amount of skin" visible in an image. It is not
            based on the landmarker results, only on the initial face detection,
            hence the fd (face detection) prefix.
        detectionConfidence:
          type: number
          description: Detection confidence. Range [0, 1].
          format: float
        joyLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Joy likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        panAngle:
          description: >-
            Yaw angle, which indicates the leftward/rightward angle that the
            face is pointing relative to the vertical plane perpendicular to the
            image. Range [-180,180].
          type: number
          format: float
        blurredLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Blurred likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: >-
            The bounding polygon around the face. The coordinates of the
            bounding box are in the original image's scale. The bounding box is
            computed to "frame" the face in accordance with human expectations.
            It is based on the landmarker results. Note that one or more x
            and/or y coordinates may not be generated in the `BoundingPoly` (the
            polygon will be unbounded) if only a partial face appears in the
            image to be annotated.
        landmarks:
          description: Detected face landmarks.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1FaceAnnotationLandmark
        tiltAngle:
          type: number
          format: float
          description: >-
            Pitch angle, which indicates the upwards/downwards angle that the
            face is pointing relative to the image's horizontal plane. Range
            [-180,180].
        underExposedLikelihood:
          description: Under-exposed likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        rollAngle:
          type: number
          format: float
          description: >-
            Roll angle, which indicates the amount of clockwise/anti-clockwise
            rotation of the face relative to the image vertical about the axis
            perpendicular to the face. Range [-180,180].
        headwearLikelihood:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Headwear likelihood.
        angerLikelihood:
          description: Anger likelihood.
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        sorrowLikelihood:
          description: Sorrow likelihood.
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
    GoogleCloudVisionV1p3beta1BoundingPoly:
      properties:
        vertices:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Vertex'
          description: The bounding polygon vertices.
          type: array
        normalizedVertices:
          description: The bounding polygon normalized vertices.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1NormalizedVertex'
          type: array
      id: GoogleCloudVisionV1p3beta1BoundingPoly
      description: A bounding polygon for the detected image annotation.
      type: object
    GcsDestination:
      description: The Google Cloud Storage location where the output will be written to.
      id: GcsDestination
      type: object
      properties:
        uri:
          type: string
          description: >-
            Google Cloud Storage URI prefix where the results will be stored.
            Results will be in JSON format and preceded by its corresponding
            input URI prefix. This field can either represent a gcs file prefix
            or gcs directory. In either case, the uri should be unique because
            in order to get all of the output files, you will need to do a
            wildcard gcs search on the uri prefix you provide. Examples: * File
            Prefix: gs://bucket-name/here/filenameprefix The output files will
            be created in gs://bucket-name/here/ and the names of the output
            files will begin with "filenameprefix". * Directory Prefix:
            gs://bucket-name/some/location/ The output files will be created in
            gs://bucket-name/some/location/ and the names of the output files
            could be anything because there was no filename prefix specified. If
            multiple outputs, each response is still AnnotateFileResponse, each
            of which contains some subset of the full list of
            AnnotateImageResponse. Multiple outputs can happen if, for example,
            the output JSON is too large and overflows into multiple sharded
            files.
    GoogleCloudVisionV1p2beta1GcsDestination:
      id: GoogleCloudVisionV1p2beta1GcsDestination
      properties:
        uri:
          type: string
          description: >-
            Google Cloud Storage URI prefix where the results will be stored.
            Results will be in JSON format and preceded by its corresponding
            input URI prefix. This field can either represent a gcs file prefix
            or gcs directory. In either case, the uri should be unique because
            in order to get all of the output files, you will need to do a
            wildcard gcs search on the uri prefix you provide. Examples: * File
            Prefix: gs://bucket-name/here/filenameprefix The output files will
            be created in gs://bucket-name/here/ and the names of the output
            files will begin with "filenameprefix". * Directory Prefix:
            gs://bucket-name/some/location/ The output files will be created in
            gs://bucket-name/some/location/ and the names of the output files
            could be anything because there was no filename prefix specified. If
            multiple outputs, each response is still AnnotateFileResponse, each
            of which contains some subset of the full list of
            AnnotateImageResponse. Multiple outputs can happen if, for example,
            the output JSON is too large and overflows into multiple sharded
            files.
      type: object
      description: The Google Cloud Storage location where the output will be written to.
    GoogleCloudVisionV1p3beta1WebDetectionWebLabel:
      id: GoogleCloudVisionV1p3beta1WebDetectionWebLabel
      properties:
        label:
          type: string
          description: Label for extra metadata.
        languageCode:
          description: >-
            The BCP-47 language code for `label`, such as "en-US" or "sr-Latn".
            For more information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
          type: string
      description: Label to provide extra metadata for the web detection.
      type: object
    GoogleCloudVisionV1p3beta1OperationMetadata:
      id: GoogleCloudVisionV1p3beta1OperationMetadata
      description: Contains metadata for the BatchAnnotateImages operation.
      type: object
      properties:
        state:
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
          description: Current state of the batch operation.
          type: string
        createTime:
          format: google-datetime
          type: string
          description: The time when the batch request was received.
        updateTime:
          format: google-datetime
          description: The time when the operation result was last updated.
          type: string
    GoogleCloudVisionV1p1beta1FaceAnnotationLandmark:
      properties:
        type:
          type: string
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - Nose, bottom right.
            - Nose, bottom left.
            - Nose, bottom center.
            - Left eye, top boundary.
            - Left eye, right corner.
            - Left eye, bottom boundary.
            - Left eye, left corner.
            - Right eye, top boundary.
            - Right eye, right corner.
            - Right eye, bottom boundary.
            - Right eye, left corner.
            - Left eyebrow, upper midpoint.
            - Right eyebrow, upper midpoint.
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          description: Face landmark type.
        position:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Position'
          description: Face landmark position.
      description: A face-specific landmark (for example, a face feature).
      type: object
      id: GoogleCloudVisionV1p1beta1FaceAnnotationLandmark
    GoogleCloudVisionV1p1beta1OutputConfig:
      properties:
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1GcsDestination'
          description: The Google Cloud Storage location to write the output(s) to.
        batchSize:
          format: int32
          type: integer
          description: >-
            The max number of response protos to put into each output JSON file
            on Google Cloud Storage. The valid range is [1, 100]. If not
            specified, the default value is 20. For example, for one pdf file
            with 100 pages, 100 response protos will be generated. If
            `batch_size` = 20, then 5 json files each containing 20 response
            protos will be written under the prefix `gcs_destination`.`uri`.
            Currently, batch_size only applies to GcsDestination, with potential
            future support for other output configurations.
      description: The desired output location and metadata.
      type: object
      id: GoogleCloudVisionV1p1beta1OutputConfig
    GoogleCloudVisionV1p1beta1Product:
      properties:
        productCategory:
          description: >-
            Immutable. The category for the product identified by the reference
            image. This should be one of "homegoods-v2", "apparel-v2",
            "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories
            "homegoods", "apparel", and "toys" are still supported, but these
            should not be used for new products.
          type: string
        displayName:
          description: >-
            The user-provided name for this Product. Must not be empty. Must be
            at most 4096 characters long.
          type: string
        productLabels:
          type: array
          description: >-
            Key-value pairs that can be attached to a product. At query time,
            constraints can be specified based on the product_labels. Note that
            integer values can be provided as strings, e.g. "1199". Only strings
            with integer values can match a range-based restriction which is to
            be supported soon. Multiple values can be assigned to the same key.
            One product may have up to 500 product_labels. Notice that the total
            number of distinct product_labels over all products in one
            ProductSet cannot exceed 1M, otherwise the product search pipeline
            will refuse to work for that ProductSet.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductKeyValue'
        name:
          description: >-
            The resource name of the product. Format is:
            `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This
            field is ignored when creating a product.
          type: string
        description:
          type: string
          description: >-
            User-provided metadata to be stored with this product. Must be at
            most 4096 characters long.
      id: GoogleCloudVisionV1p1beta1Product
      description: A Product contains ReferenceImages.
      type: object
    Page:
      id: Page
      type: object
      properties:
        property:
          $ref: '#/components/schemas/TextProperty'
          description: Additional information detected on the page.
        confidence:
          format: float
          type: number
          description: Confidence of the OCR results on the page. Range [0, 1].
        width:
          format: int32
          type: integer
          description: >-
            Page width. For PDFs the unit is points. For images (including
            TIFFs) the unit is pixels.
        blocks:
          items:
            $ref: '#/components/schemas/Block'
          type: array
          description: List of blocks of text, images etc on this page.
        height:
          type: integer
          format: int32
          description: >-
            Page height. For PDFs the unit is points. For images (including
            TIFFs) the unit is pixels.
      description: Detected page from OCR.
    GoogleCloudVisionV1p2beta1TextAnnotation:
      type: object
      properties:
        pages:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Page'
          description: List of pages detected by OCR.
          type: array
        text:
          type: string
          description: UTF-8 text detected on the pages.
      description: >-
        TextAnnotation contains a structured representation of OCR extracted
        text. The hierarchy of an OCR extracted text structure is like this:
        TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each
        structural component, starting from Page, may further have their own
        properties. Properties describe detected languages, breaks etc.. Please
        refer to the TextAnnotation.TextProperty message definition below for
        more detail.
      id: GoogleCloudVisionV1p2beta1TextAnnotation
    GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse:
      id: GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse
      description: Response to an async batch file annotation request.
      properties:
        responses:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse
          description: >-
            The list of file annotation responses, one for each request in
            AsyncBatchAnnotateFilesRequest.
          type: array
      type: object
    GoogleCloudVisionV1p4beta1GcsSource:
      description: The Google Cloud Storage location where the input will be read from.
      id: GoogleCloudVisionV1p4beta1GcsSource
      properties:
        uri:
          type: string
          description: >-
            Google Cloud Storage URI for the input file. This must only be a
            Google Cloud Storage object. Wildcards are not currently supported.
      type: object
    EntityAnnotation:
      properties:
        confidence:
          type: number
          description: >-
            **Deprecated. Use `score` instead.** The accuracy of the entity
            detection in an image. For example, for an image in which the
            "Eiffel Tower" entity is detected, this field represents the
            confidence that there is a tower in the query image. Range [0, 1].
          format: float
        locations:
          description: >-
            The location information for the detected entity. Multiple
            `LocationInfo` elements can be present because one location may
            indicate the location of the scene in the image, and another
            location may indicate the location of the place where the image was
            taken. Location information is usually present for landmarks.
          items:
            $ref: '#/components/schemas/LocationInfo'
          type: array
        boundingPoly:
          $ref: '#/components/schemas/BoundingPoly'
          description: >-
            Image region to which this entity belongs. Not produced for
            `LABEL_DETECTION` features.
        topicality:
          format: float
          description: >-
            The relevancy of the ICA (Image Content Annotation) label to the
            image. For example, the relevancy of "tower" is likely higher to an
            image containing the detected "Eiffel Tower" than to an image
            containing a detected distant towering building, even though the
            confidence that there is a tower in each image may be the same.
            Range [0, 1].
          type: number
        mid:
          description: >-
            Opaque entity ID. Some IDs may be available in [Google Knowledge
            Graph Search API](https://developers.google.com/knowledge-graph/).
          type: string
        description:
          type: string
          description: Entity textual description, expressed in its `locale` language.
        properties:
          items:
            $ref: '#/components/schemas/Property'
          description: >-
            Some entities may have optional user-supplied `Property`
            (name/value) fields, such a score or string that qualifies the
            entity.
          type: array
        locale:
          type: string
          description: >-
            The language code for the locale in which the entity textual
            `description` is expressed.
        score:
          type: number
          description: Overall score of the result. Range [0, 1].
          format: float
      type: object
      description: Set of detected entity features.
      id: EntityAnnotation
    ImageContext:
      properties:
        cropHintsParams:
          description: Parameters for crop hints annotation request.
          $ref: '#/components/schemas/CropHintsParams'
        textDetectionParams:
          $ref: '#/components/schemas/TextDetectionParams'
          description: Parameters for text detection and document text detection.
        latLongRect:
          description: Not used.
          $ref: '#/components/schemas/LatLongRect'
        productSearchParams:
          $ref: '#/components/schemas/ProductSearchParams'
          description: Parameters for product search.
        webDetectionParams:
          $ref: '#/components/schemas/WebDetectionParams'
          description: Parameters for web detection.
        languageHints:
          type: array
          description: >-
            List of languages to use for TEXT_DETECTION. In most cases, an empty
            value yields the best results since it enables automatic language
            detection. For languages based on the Latin alphabet, setting
            `language_hints` is not needed. In rare cases, when the language of
            the text in the image is known, setting a hint will help get better
            results (although it will be a significant hindrance if the hint is
            wrong). Text detection returns an error if one or more of the
            specified languages is not one of the [supported
            languages](https://cloud.google.com/vision/docs/languages).
          items:
            type: string
      type: object
      description: Image context and/or feature-specific parameters.
      id: ImageContext
    GoogleCloudVisionV1p3beta1WebDetectionWebPage:
      id: GoogleCloudVisionV1p3beta1WebDetectionWebPage
      properties:
        fullMatchingImages:
          description: >-
            Fully matching images on the page. Can include resized copies of the
            query image.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage
          type: array
        url:
          type: string
          description: The result web page URL.
        partialMatchingImages:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage
          description: >-
            Partial matching images on the page. Those images are similar enough
            to share some key-point features. For example an original image will
            likely have partial matching for its crops.
          type: array
        pageTitle:
          description: Title for the web page, may contain HTML markups.
          type: string
        score:
          description: (Deprecated) Overall relevancy score for the web page.
          type: number
          format: float
      description: Metadata for web pages.
      type: object
    GoogleCloudVisionV1p3beta1Vertex:
      properties:
        x:
          format: int32
          description: X coordinate.
          type: integer
        'y':
          description: Y coordinate.
          format: int32
          type: integer
      description: >-
        A vertex represents a 2D point in the image. NOTE: the vertex
        coordinates are in the same scale as the original image.
      type: object
      id: GoogleCloudVisionV1p3beta1Vertex
    GoogleCloudVisionV1p1beta1ProductSearchResultsResult:
      id: GoogleCloudVisionV1p1beta1ProductSearchResultsResult
      description: Information about a product.
      properties:
        product:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Product'
          description: The Product.
        image:
          description: >-
            The resource name of the image from the product that is the closest
            match to the query.
          type: string
        score:
          format: float
          description: >-
            A confidence level on the match, ranging from 0 (no confidence) to 1
            (full confidence).
          type: number
      type: object
    RemoveProductFromProductSetRequest:
      properties:
        product:
          type: string
          description: >-
            Required. The resource name for the Product to be removed from this
            ProductSet. Format is:
            `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`
      id: RemoveProductFromProductSetRequest
      type: object
      description: Request message for the `RemoveProductFromProductSet` method.
    AsyncBatchAnnotateFilesResponse:
      id: AsyncBatchAnnotateFilesResponse
      type: object
      description: Response to an async batch file annotation request.
      properties:
        responses:
          items:
            $ref: '#/components/schemas/AsyncAnnotateFileResponse'
          description: >-
            The list of file annotation responses, one for each request in
            AsyncBatchAnnotateFilesRequest.
          type: array
    GoogleCloudVisionV1p3beta1ProductSearchResults:
      properties:
        results:
          description: List of results, one for each product match.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsResult
          type: array
        indexTime:
          type: string
          format: google-datetime
          description: >-
            Timestamp of the index which provided these results. Products added
            to the product set and products removed from the product set after
            this time are not reflected in the current results.
        productGroupedResults:
          description: >-
            List of results grouped by products detected in the query image.
            Each entry corresponds to one bounding polygon in the query image,
            and contains the matching products specific to that region. There
            may be duplicate product matches in the union of all the per-product
            results.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult
      id: GoogleCloudVisionV1p3beta1ProductSearchResults
      description: Results for a product search request.
      type: object
    GoogleCloudVisionV1p1beta1DominantColorsAnnotation:
      properties:
        colors:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ColorInfo'
          description: RGB color values with their score and pixel fraction.
          type: array
      type: object
      id: GoogleCloudVisionV1p1beta1DominantColorsAnnotation
      description: Set of dominant colors and their corresponding scores.
    Product:
      description: A Product contains ReferenceImages.
      properties:
        productLabels:
          items:
            $ref: '#/components/schemas/KeyValue'
          type: array
          description: >-
            Key-value pairs that can be attached to a product. At query time,
            constraints can be specified based on the product_labels. Note that
            integer values can be provided as strings, e.g. "1199". Only strings
            with integer values can match a range-based restriction which is to
            be supported soon. Multiple values can be assigned to the same key.
            One product may have up to 500 product_labels. Notice that the total
            number of distinct product_labels over all products in one
            ProductSet cannot exceed 1M, otherwise the product search pipeline
            will refuse to work for that ProductSet.
        productCategory:
          description: >-
            Immutable. The category for the product identified by the reference
            image. This should be one of "homegoods-v2", "apparel-v2",
            "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories
            "homegoods", "apparel", and "toys" are still supported, but these
            should not be used for new products.
          type: string
        displayName:
          description: >-
            The user-provided name for this Product. Must not be empty. Must be
            at most 4096 characters long.
          type: string
        name:
          description: >-
            The resource name of the product. Format is:
            `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This
            field is ignored when creating a product.
          type: string
        description:
          description: >-
            User-provided metadata to be stored with this product. Must be at
            most 4096 characters long.
          type: string
      type: object
      id: Product
    GoogleCloudVisionV1p3beta1WebDetectionWebEntity:
      description: Entity deduced from similar images on the Internet.
      type: object
      properties:
        entityId:
          description: Opaque entity ID.
          type: string
        description:
          description: Canonical description of the entity, in English.
          type: string
        score:
          description: >-
            Overall relevancy score for the entity. Not normalized and not
            comparable across different image queries.
          type: number
          format: float
      id: GoogleCloudVisionV1p3beta1WebDetectionWebEntity
    BoundingPoly:
      type: object
      description: A bounding polygon for the detected image annotation.
      id: BoundingPoly
      properties:
        vertices:
          description: The bounding polygon vertices.
          items:
            $ref: '#/components/schemas/Vertex'
          type: array
        normalizedVertices:
          items:
            $ref: '#/components/schemas/NormalizedVertex'
          description: The bounding polygon normalized vertices.
          type: array
    GoogleCloudVisionV1p3beta1WebDetection:
      id: GoogleCloudVisionV1p3beta1WebDetection
      description: Relevant information for the image from the Internet.
      type: object
      properties:
        webEntities:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebEntity
          description: Deduced entities from similar images on the Internet.
        bestGuessLabels:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebLabel
          description: >-
            The service's best guess as to the topic of the request image.
            Inferred from similar images on the open web.
          type: array
        partialMatchingImages:
          description: >-
            Partial matching images from the Internet. Those images are similar
            enough to share some key-point features. For example an original
            image will likely have partial matching for its crops.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage
        pagesWithMatchingImages:
          type: array
          description: Web pages containing the matching images from the Internet.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebPage'
        fullMatchingImages:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage
          description: >-
            Fully matching images from the Internet. Can include resized copies
            of the query image.
        visuallySimilarImages:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1WebDetectionWebImage
          description: The visually similar image results.
    GoogleCloudVisionV1p4beta1FaceAnnotation:
      description: A face annotation object contains the results of face detection.
      type: object
      id: GoogleCloudVisionV1p4beta1FaceAnnotation
      properties:
        tiltAngle:
          type: number
          format: float
          description: >-
            Pitch angle, which indicates the upwards/downwards angle that the
            face is pointing relative to the image's horizontal plane. Range
            [-180,180].
        underExposedLikelihood:
          description: Under-exposed likelihood.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        landmarks:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1FaceAnnotationLandmark
          description: Detected face landmarks.
          type: array
        fdBoundingPoly:
          description: >-
            The `fd_bounding_poly` bounding polygon is tighter than the
            `boundingPoly`, and encloses only the skin part of the face.
            Typically, it is used to eliminate the face from any image analysis
            that detects the "amount of skin" visible in an image. It is not
            based on the landmarker results, only on the initial face detection,
            hence the fd (face detection) prefix.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        panAngle:
          format: float
          description: >-
            Yaw angle, which indicates the leftward/rightward angle that the
            face is pointing relative to the vertical plane perpendicular to the
            image. Range [-180,180].
          type: number
        boundingPoly:
          description: >-
            The bounding polygon around the face. The coordinates of the
            bounding box are in the original image's scale. The bounding box is
            computed to "frame" the face in accordance with human expectations.
            It is based on the landmarker results. Note that one or more x
            and/or y coordinates may not be generated in the `BoundingPoly` (the
            polygon will be unbounded) if only a partial face appears in the
            image to be annotated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        joyLikelihood:
          type: string
          description: Joy likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        detectionConfidence:
          type: number
          description: Detection confidence. Range [0, 1].
          format: float
        blurredLikelihood:
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Blurred likelihood.
        landmarkingConfidence:
          format: float
          description: Face landmarking confidence. Range [0, 1].
          type: number
        surpriseLikelihood:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Surprise likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        rollAngle:
          type: number
          format: float
          description: >-
            Roll angle, which indicates the amount of clockwise/anti-clockwise
            rotation of the face relative to the image vertical about the axis
            perpendicular to the face. Range [-180,180].
        angerLikelihood:
          type: string
          description: Anger likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        sorrowLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Sorrow likelihood.
        headwearLikelihood:
          type: string
          description: Headwear likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        recognitionResult:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1FaceRecognitionResult
          description: >-
            Additional recognition information. Only computed if
            image_context.face_recognition_params is provided, **and** a match
            is found to a Celebrity in the input CelebritySet. This field is
            sorted in order of decreasing confidence values.
          type: array
    CancelOperationRequest:
      properties: {}
      type: object
      description: The request message for Operations.CancelOperation.
      id: CancelOperationRequest
    GoogleCloudVisionV1p4beta1Page:
      id: GoogleCloudVisionV1p4beta1Page
      properties:
        property:
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty
          description: Additional information detected on the page.
        height:
          type: integer
          description: >-
            Page height. For PDFs the unit is points. For images (including
            TIFFs) the unit is pixels.
          format: int32
        blocks:
          description: List of blocks of text, images etc on this page.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Block'
          type: array
        width:
          type: integer
          format: int32
          description: >-
            Page width. For PDFs the unit is points. For images (including
            TIFFs) the unit is pixels.
        confidence:
          type: number
          description: Confidence of the OCR results on the page. Range [0, 1].
          format: float
      description: Detected page from OCR.
      type: object
    GoogleCloudVisionV1p4beta1WebDetectionWebPage:
      properties:
        url:
          type: string
          description: The result web page URL.
        partialMatchingImages:
          description: >-
            Partial matching images on the page. Those images are similar enough
            to share some key-point features. For example an original image will
            likely have partial matching for its crops.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage
          type: array
        fullMatchingImages:
          description: >-
            Fully matching images on the page. Can include resized copies of the
            query image.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage
        pageTitle:
          type: string
          description: Title for the web page, may contain HTML markups.
        score:
          type: number
          description: (Deprecated) Overall relevancy score for the web page.
          format: float
      description: Metadata for web pages.
      id: GoogleCloudVisionV1p4beta1WebDetectionWebPage
      type: object
    GoogleCloudVisionV1p2beta1FaceAnnotation:
      properties:
        surpriseLikelihood:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Surprise likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        landmarks:
          description: Detected face landmarks.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1FaceAnnotationLandmark
        tiltAngle:
          format: float
          type: number
          description: >-
            Pitch angle, which indicates the upwards/downwards angle that the
            face is pointing relative to the image's horizontal plane. Range
            [-180,180].
        rollAngle:
          description: >-
            Roll angle, which indicates the amount of clockwise/anti-clockwise
            rotation of the face relative to the image vertical about the axis
            perpendicular to the face. Range [-180,180].
          type: number
          format: float
        angerLikelihood:
          description: Anger likelihood.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        boundingPoly:
          description: >-
            The bounding polygon around the face. The coordinates of the
            bounding box are in the original image's scale. The bounding box is
            computed to "frame" the face in accordance with human expectations.
            It is based on the landmarker results. Note that one or more x
            and/or y coordinates may not be generated in the `BoundingPoly` (the
            polygon will be unbounded) if only a partial face appears in the
            image to be annotated.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        landmarkingConfidence:
          type: number
          format: float
          description: Face landmarking confidence. Range [0, 1].
        headwearLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Headwear likelihood.
          type: string
        joyLikelihood:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Joy likelihood.
        panAngle:
          description: >-
            Yaw angle, which indicates the leftward/rightward angle that the
            face is pointing relative to the vertical plane perpendicular to the
            image. Range [-180,180].
          format: float
          type: number
        blurredLikelihood:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Blurred likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        fdBoundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: >-
            The `fd_bounding_poly` bounding polygon is tighter than the
            `boundingPoly`, and encloses only the skin part of the face.
            Typically, it is used to eliminate the face from any image analysis
            that detects the "amount of skin" visible in an image. It is not
            based on the landmarker results, only on the initial face detection,
            hence the fd (face detection) prefix.
        sorrowLikelihood:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: Sorrow likelihood.
        underExposedLikelihood:
          description: Under-exposed likelihood.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        detectionConfidence:
          type: number
          description: Detection confidence. Range [0, 1].
          format: float
      description: A face annotation object contains the results of face detection.
      type: object
      id: GoogleCloudVisionV1p2beta1FaceAnnotation
    GoogleCloudVisionV1p4beta1Symbol:
      description: A single symbol representation.
      type: object
      properties:
        boundingBox:
          description: >-
            The bounding box for the symbol. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
        confidence:
          format: float
          description: Confidence of the OCR results for the symbol. Range [0, 1].
          type: number
        text:
          description: The actual UTF-8 representation of the symbol.
          type: string
        property:
          description: Additional information detected for the symbol.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty
      id: GoogleCloudVisionV1p4beta1Symbol
    GoogleCloudVisionV1p3beta1ImageAnnotationContext:
      description: >-
        If an image was produced from a file (e.g. a PDF), this message gives
        information about the source of that image.
      type: object
      id: GoogleCloudVisionV1p3beta1ImageAnnotationContext
      properties:
        pageNumber:
          description: >-
            If the file was a PDF or TIFF, this field gives the page number
            within the file used to produce the image.
          format: int32
          type: integer
        uri:
          type: string
          description: The URI of the file used to produce the image.
    GoogleCloudVisionV1p2beta1TextAnnotationTextProperty:
      properties:
        detectedLanguages:
          description: A list of detected languages together with confidence.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage
        detectedBreak:
          description: Detected start or end of a text segment.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak
      type: object
      id: GoogleCloudVisionV1p2beta1TextAnnotationTextProperty
      description: Additional information detected on the structural component.
    ObjectAnnotation:
      description: Prediction for what the object in the bounding box is.
      type: object
      properties:
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        languageCode:
          type: string
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
        name:
          description: Object name, expressed in its `language_code` language.
          type: string
        score:
          format: float
          description: Score of the result. Range [0, 1].
          type: number
      id: ObjectAnnotation
    GoogleCloudVisionV1p1beta1GcsDestination:
      type: object
      properties:
        uri:
          description: >-
            Google Cloud Storage URI prefix where the results will be stored.
            Results will be in JSON format and preceded by its corresponding
            input URI prefix. This field can either represent a gcs file prefix
            or gcs directory. In either case, the uri should be unique because
            in order to get all of the output files, you will need to do a
            wildcard gcs search on the uri prefix you provide. Examples: * File
            Prefix: gs://bucket-name/here/filenameprefix The output files will
            be created in gs://bucket-name/here/ and the names of the output
            files will begin with "filenameprefix". * Directory Prefix:
            gs://bucket-name/some/location/ The output files will be created in
            gs://bucket-name/some/location/ and the names of the output files
            could be anything because there was no filename prefix specified. If
            multiple outputs, each response is still AnnotateFileResponse, each
            of which contains some subset of the full list of
            AnnotateImageResponse. Multiple outputs can happen if, for example,
            the output JSON is too large and overflows into multiple sharded
            files.
          type: string
      description: The Google Cloud Storage location where the output will be written to.
      id: GoogleCloudVisionV1p1beta1GcsDestination
    BatchAnnotateFilesRequest:
      description: A list of requests to annotate files using the BatchAnnotateFiles API.
      id: BatchAnnotateFilesRequest
      properties:
        parent:
          type: string
          description: >-
            Optional. Target project and location to make a call. Format:
            `projects/{project-id}/locations/{location-id}`. If no parent is
            specified, a region will be chosen automatically. Supported
            location-ids: `us`: USA country only, `asia`: East asia areas, like
            Japan, Taiwan, `eu`: The European Union. Example:
            `projects/project-A/locations/eu`.
        requests:
          description: >-
            Required. The list of file annotation requests. Right now we support
            only one AnnotateFileRequest in BatchAnnotateFilesRequest.
          type: array
          items:
            $ref: '#/components/schemas/AnnotateFileRequest'
      type: object
    GoogleCloudVisionV1p2beta1Symbol:
      id: GoogleCloudVisionV1p2beta1Symbol
      description: A single symbol representation.
      type: object
      properties:
        boundingBox:
          description: >-
            The bounding box for the symbol. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        text:
          type: string
          description: The actual UTF-8 representation of the symbol.
        property:
          description: Additional information detected for the symbol.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty
        confidence:
          type: number
          description: Confidence of the OCR results for the symbol. Range [0, 1].
          format: float
    GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse:
      properties:
        outputConfig:
          description: >-
            The output location and metadata from
            AsyncBatchAnnotateImagesRequest.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1OutputConfig'
      id: GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse
      type: object
      description: Response to an async batch image annotation request.
    AsyncAnnotateFileResponse:
      description: The response for a single offline file annotation request.
      type: object
      properties:
        outputConfig:
          $ref: '#/components/schemas/OutputConfig'
          description: The output location and metadata from AsyncAnnotateFileRequest.
      id: AsyncAnnotateFileResponse
    GoogleCloudVisionV1p4beta1ProductSearchResults:
      properties:
        indexTime:
          description: >-
            Timestamp of the index which provided these results. Products added
            to the product set and products removed from the product set after
            this time are not reflected in the current results.
          type: string
          format: google-datetime
        productGroupedResults:
          type: array
          description: >-
            List of results grouped by products detected in the query image.
            Each entry corresponds to one bounding polygon in the query image,
            and contains the matching products specific to that region. There
            may be duplicate product matches in the union of all the per-product
            results.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult
        results:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1ProductSearchResultsResult
          type: array
          description: List of results, one for each product match.
      id: GoogleCloudVisionV1p4beta1ProductSearchResults
      type: object
      description: Results for a product search request.
    GoogleCloudVisionV1p3beta1ColorInfo:
      properties:
        score:
          description: Image-specific score for this color. Value in range [0, 1].
          format: float
          type: number
        color:
          description: RGB components of the color.
          $ref: '#/components/schemas/Color'
        pixelFraction:
          description: >-
            The fraction of pixels the color occupies in the image. Value in
            range [0, 1].
          type: number
          format: float
      id: GoogleCloudVisionV1p3beta1ColorInfo
      description: >-
        Color information consists of RGB channels, score, and the fraction of
        the image that the color occupies in the image.
      type: object
    ListProductsResponse:
      id: ListProductsResponse
      description: Response message for the `ListProducts` method.
      type: object
      properties:
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        products:
          items:
            $ref: '#/components/schemas/Product'
          type: array
          description: List of products.
    GoogleCloudVisionV1p2beta1WebDetectionWebLabel:
      description: Label to provide extra metadata for the web detection.
      properties:
        languageCode:
          type: string
          description: >-
            The BCP-47 language code for `label`, such as "en-US" or "sr-Latn".
            For more information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
        label:
          type: string
          description: Label for extra metadata.
      type: object
      id: GoogleCloudVisionV1p2beta1WebDetectionWebLabel
    GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation:
      type: object
      properties:
        score:
          description: Score of the result. Range [0, 1].
          format: float
          type: number
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: Image region to which this object belongs. This must be populated.
        name:
          description: Object name, expressed in its `language_code` language.
          type: string
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        languageCode:
          type: string
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
      description: Set of detected objects with bounding boxes.
      id: GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation
    GoogleCloudVisionV1p3beta1Product:
      type: object
      description: A Product contains ReferenceImages.
      id: GoogleCloudVisionV1p3beta1Product
      properties:
        productCategory:
          type: string
          description: >-
            Immutable. The category for the product identified by the reference
            image. This should be one of "homegoods-v2", "apparel-v2",
            "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories
            "homegoods", "apparel", and "toys" are still supported, but these
            should not be used for new products.
        productLabels:
          description: >-
            Key-value pairs that can be attached to a product. At query time,
            constraints can be specified based on the product_labels. Note that
            integer values can be provided as strings, e.g. "1199". Only strings
            with integer values can match a range-based restriction which is to
            be supported soon. Multiple values can be assigned to the same key.
            One product may have up to 500 product_labels. Notice that the total
            number of distinct product_labels over all products in one
            ProductSet cannot exceed 1M, otherwise the product search pipeline
            will refuse to work for that ProductSet.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ProductKeyValue'
        description:
          description: >-
            User-provided metadata to be stored with this product. Must be at
            most 4096 characters long.
          type: string
        name:
          type: string
          description: >-
            The resource name of the product. Format is:
            `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This
            field is ignored when creating a product.
        displayName:
          description: >-
            The user-provided name for this Product. Must not be empty. Must be
            at most 4096 characters long.
          type: string
    GoogleCloudVisionV1p2beta1ImageProperties:
      type: object
      properties:
        dominantColors:
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p2beta1DominantColorsAnnotation
          description: If present, dominant colors completed successfully.
      id: GoogleCloudVisionV1p2beta1ImageProperties
      description: Stores image properties, such as dominant colors.
    ReferenceImage:
      description: >-
        A `ReferenceImage` represents a product image and its associated
        metadata, such as bounding boxes.
      id: ReferenceImage
      properties:
        name:
          description: >-
            The resource name of the reference image. Format is:
            `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.
            This field is ignored when creating a reference image.
          type: string
        uri:
          type: string
          description: >-
            Required. The Google Cloud Storage URI of the reference image. The
            URI must start with `gs://`.
        boundingPolys:
          items:
            $ref: '#/components/schemas/BoundingPoly'
          type: array
          description: >-
            Optional. Bounding polygons around the areas of interest in the
            reference image. If this field is empty, the system will try to
            detect regions of interest. At most 10 bounding polygons will be
            used. The provided shape is converted into a non-rotated rectangle.
            Once converted, the small edge of the rectangle must be greater than
            or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e.
            1:3 is ok; 1:5 is not).
      type: object
    ImportProductSetsResponse:
      type: object
      properties:
        referenceImages:
          items:
            $ref: '#/components/schemas/ReferenceImage'
          type: array
          description: The list of reference_images that are imported successfully.
        statuses:
          items:
            $ref: '#/components/schemas/Status'
          type: array
          description: >-
            The rpc status for each ImportProductSet request, including both
            successes and errors. The number of statuses here matches the number
            of lines in the csv file, and statuses[i] stores the success or
            failure status of processing the i-th line of the csv, starting from
            line 0.
      id: ImportProductSetsResponse
      description: >-
        Response message for the `ImportProductSets` method. This message is
        returned by the google.longrunning.Operations.GetOperation method in the
        returned google.longrunning.Operation.response field.
    GoogleCloudVisionV1p2beta1FaceAnnotationLandmark:
      properties:
        position:
          description: Face landmark position.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Position'
        type:
          type: string
          description: Face landmark type.
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - Nose, bottom right.
            - Nose, bottom left.
            - Nose, bottom center.
            - Left eye, top boundary.
            - Left eye, right corner.
            - Left eye, bottom boundary.
            - Left eye, left corner.
            - Right eye, top boundary.
            - Right eye, right corner.
            - Right eye, bottom boundary.
            - Right eye, left corner.
            - Left eyebrow, upper midpoint.
            - Right eyebrow, upper midpoint.
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
      id: GoogleCloudVisionV1p2beta1FaceAnnotationLandmark
      description: A face-specific landmark (for example, a face feature).
      type: object
    GoogleCloudVisionV1p2beta1SafeSearchAnnotation:
      description: >-
        Set of features pertaining to the image, computed by computer vision
        methods over safe-search verticals (for example, adult, spoof, medical,
        violence).
      type: object
      id: GoogleCloudVisionV1p2beta1SafeSearchAnnotation
      properties:
        racy:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: >-
            Likelihood that the request image contains racy content. Racy
            content may include (but is not limited to) skimpy or sheer
            clothing, strategically covered nudity, lewd or provocative poses,
            or close-ups of sensitive body areas.
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        medical:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Likelihood that this is a medical image.
        adult:
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: >-
            Represents the adult content likelihood for the image. Adult content
            may contain elements such as nudity, pornographic images or
            cartoons, or sexual activities.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        violence:
          description: Likelihood that this image contains violent content.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        spoof:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: >-
            Spoof likelihood. The likelihood that an modification was made to
            the image's canonical version to make it appear funny or offensive.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
    GoogleCloudVisionV1p4beta1FaceAnnotationLandmark:
      id: GoogleCloudVisionV1p4beta1FaceAnnotationLandmark
      properties:
        position:
          description: Face landmark position.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Position'
        type:
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - Nose, bottom right.
            - Nose, bottom left.
            - Nose, bottom center.
            - Left eye, top boundary.
            - Left eye, right corner.
            - Left eye, bottom boundary.
            - Left eye, left corner.
            - Right eye, top boundary.
            - Right eye, right corner.
            - Right eye, bottom boundary.
            - Right eye, left corner.
            - Left eyebrow, upper midpoint.
            - Right eyebrow, upper midpoint.
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
          description: Face landmark type.
          type: string
      description: A face-specific landmark (for example, a face feature).
      type: object
    GoogleCloudVisionV1p3beta1SafeSearchAnnotation:
      properties:
        adult:
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: >-
            Represents the adult content likelihood for the image. Adult content
            may contain elements such as nudity, pornographic images or
            cartoons, or sexual activities.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        violence:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Likelihood that this image contains violent content.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        racy:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: >-
            Likelihood that the request image contains racy content. Racy
            content may include (but is not limited to) skimpy or sheer
            clothing, strategically covered nudity, lewd or provocative poses,
            or close-ups of sensitive body areas.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        medical:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: Likelihood that this is a medical image.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        spoof:
          description: >-
            Spoof likelihood. The likelihood that an modification was made to
            the image's canonical version to make it appear funny or offensive.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
      description: >-
        Set of features pertaining to the image, computed by computer vision
        methods over safe-search verticals (for example, adult, spoof, medical,
        violence).
      type: object
      id: GoogleCloudVisionV1p3beta1SafeSearchAnnotation
    GoogleCloudVisionV1p1beta1EntityAnnotation:
      properties:
        score:
          format: float
          type: number
          description: Overall score of the result. Range [0, 1].
        description:
          type: string
          description: Entity textual description, expressed in its `locale` language.
        mid:
          description: >-
            Opaque entity ID. Some IDs may be available in [Google Knowledge
            Graph Search API](https://developers.google.com/knowledge-graph/).
          type: string
        confidence:
          type: number
          format: float
          description: >-
            **Deprecated. Use `score` instead.** The accuracy of the entity
            detection in an image. For example, for an image in which the
            "Eiffel Tower" entity is detected, this field represents the
            confidence that there is a tower in the query image. Range [0, 1].
        locations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1LocationInfo'
          description: >-
            The location information for the detected entity. Multiple
            `LocationInfo` elements can be present because one location may
            indicate the location of the scene in the image, and another
            location may indicate the location of the place where the image was
            taken. Location information is usually present for landmarks.
          type: array
        properties:
          type: array
          description: >-
            Some entities may have optional user-supplied `Property`
            (name/value) fields, such a score or string that qualifies the
            entity.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Property'
        topicality:
          type: number
          format: float
          description: >-
            The relevancy of the ICA (Image Content Annotation) label to the
            image. For example, the relevancy of "tower" is likely higher to an
            image containing the detected "Eiffel Tower" than to an image
            containing a detected distant towering building, even though the
            confidence that there is a tower in each image may be the same.
            Range [0, 1].
        locale:
          description: >-
            The language code for the locale in which the entity textual
            `description` is expressed.
          type: string
        boundingPoly:
          description: >-
            Image region to which this entity belongs. Not produced for
            `LABEL_DETECTION` features.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
      description: Set of detected entity features.
      type: object
      id: GoogleCloudVisionV1p1beta1EntityAnnotation
    ImportProductSetsGcsSource:
      properties:
        csvFileUri:
          description: >-
            The Google Cloud Storage URI of the input csv file. The URI must
            start with `gs://`. The format of the input csv file should be one
            image per line. In each line, there are 8 columns. 1. image-uri 2.
            image-id 3. product-set-id 4. product-id 5. product-category 6.
            product-display-name 7. labels 8. bounding-poly The `image-uri`,
            `product-set-id`, `product-id`, and `product-category` columns are
            required. All other columns are optional. If the `ProductSet` or
            `Product` specified by the `product-set-id` and `product-id` values
            does not exist, then the system will create a new `ProductSet` or
            `Product` for the image. In this case, the `product-display-name`
            column refers to display_name, the `product-category` column refers
            to product_category, and the `labels` column refers to
            product_labels. The `image-id` column is optional but must be unique
            if provided. If it is empty, the system will automatically assign a
            unique id to the image. The `product-display-name` column is
            optional. If it is empty, the system sets the display_name field for
            the product to a space (" "). You can update the `display_name`
            later by using the API. If a `Product` with the specified
            `product-id` already exists, then the system ignores the
            `product-display-name`, `product-category`, and `labels` columns.
            The `labels` column (optional) is a line containing a list of
            comma-separated key-value pairs, in the following format:
            "key_1=value_1,key_2=value_2,...,key_n=value_n" The `bounding-poly`
            column (optional) identifies one region of interest from the image
            in the same manner as `CreateReferenceImage`. If you do not specify
            the `bounding-poly` column, then the system will try to detect
            regions of interest automatically. At most one `bounding-poly`
            column is allowed per line. If the image contains multiple regions
            of interest, add a line to the CSV file that includes the same
            product information, and the `bounding-poly` values for each region
            of interest. The `bounding-poly` column must contain an even number
            of comma-separated numbers, in the format
            "p1_x,p1_y,p2_x,p2_y,...,pn_x,pn_y". Use non-negative integers for
            absolute bounding polygons, and float values in [0, 1] for
            normalized bounding polygons. The system will resize the image if
            the image resolution is too large to process (larger than 20MP).
          type: string
      type: object
      description: >-
        The Google Cloud Storage location for a csv file which preserves a list
        of ImportProductSetRequests in each line.
      id: ImportProductSetsGcsSource
    ImportProductSetsRequest:
      id: ImportProductSetsRequest
      description: Request message for the `ImportProductSets` method.
      properties:
        inputConfig:
          description: Required. The input content for the list of requests.
          $ref: '#/components/schemas/ImportProductSetsInputConfig'
      type: object
    LocalizedObjectAnnotation:
      properties:
        boundingPoly:
          description: Image region to which this object belongs. This must be populated.
          $ref: '#/components/schemas/BoundingPoly'
        score:
          description: Score of the result. Range [0, 1].
          format: float
          type: number
        mid:
          description: Object ID that should align with EntityAnnotation mid.
          type: string
        name:
          type: string
          description: Object name, expressed in its `language_code` language.
        languageCode:
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
          type: string
      id: LocalizedObjectAnnotation
      description: Set of detected objects with bounding boxes.
      type: object
    GoogleCloudVisionV1p1beta1Block:
      description: Logical element on the page.
      type: object
      id: GoogleCloudVisionV1p1beta1Block
      properties:
        blockType:
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          type: string
          description: Detected block type (text, image etc) for this block.
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
        confidence:
          description: Confidence of the OCR results on the block. Range [0, 1].
          type: number
          format: float
        paragraphs:
          type: array
          description: List of paragraphs in this block (if this blocks is of type text).
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Paragraph'
        boundingBox:
          description: >-
            The bounding box for the block. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        property:
          description: Additional information detected for the block.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty
    LocationInfo:
      type: object
      id: LocationInfo
      properties:
        latLng:
          description: lat/long location coordinates.
          $ref: '#/components/schemas/LatLng'
      description: Detected entity location information.
    GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak:
      id: GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak
      type: object
      properties:
        isPrefix:
          description: True if break prepends the element.
          type: boolean
        type:
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - >-
              End-line hyphen that is not present in text; does not co-occur
              with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.
            - Line break that ends a paragraph.
          description: Detected break type.
          type: string
      description: Detected start or end of a structural component.
    AnnotateImageResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            If set, represents the error message for the operation. Note that
            filled-in image annotations are guaranteed to be correct, even when
            `error` is set.
        localizedObjectAnnotations:
          description: >-
            If present, localized object detection has completed successfully.
            This will be sorted descending by confidence score.
          type: array
          items:
            $ref: '#/components/schemas/LocalizedObjectAnnotation'
        fullTextAnnotation:
          $ref: '#/components/schemas/TextAnnotation'
          description: >-
            If present, text (OCR) detection or document (OCR) text detection
            has completed successfully. This annotation provides the structural
            hierarchy for the OCR detected text.
        cropHintsAnnotation:
          description: If present, crop hints have completed successfully.
          $ref: '#/components/schemas/CropHintsAnnotation'
        labelAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/EntityAnnotation'
          description: If present, label detection has completed successfully.
        landmarkAnnotations:
          description: If present, landmark detection has completed successfully.
          items:
            $ref: '#/components/schemas/EntityAnnotation'
          type: array
        productSearchResults:
          description: If present, product search has completed successfully.
          $ref: '#/components/schemas/ProductSearchResults'
        faceAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/FaceAnnotation'
          description: If present, face detection has completed successfully.
        webDetection:
          $ref: '#/components/schemas/WebDetection'
          description: If present, web detection has completed successfully.
        imagePropertiesAnnotation:
          $ref: '#/components/schemas/ImageProperties'
          description: If present, image properties were extracted successfully.
        textAnnotations:
          items:
            $ref: '#/components/schemas/EntityAnnotation'
          type: array
          description: If present, text (OCR) detection has completed successfully.
        context:
          $ref: '#/components/schemas/ImageAnnotationContext'
          description: >-
            If present, contextual information is needed to understand where
            this image comes from.
        safeSearchAnnotation:
          description: If present, safe-search annotation has completed successfully.
          $ref: '#/components/schemas/SafeSearchAnnotation'
        logoAnnotations:
          type: array
          description: If present, logo detection has completed successfully.
          items:
            $ref: '#/components/schemas/EntityAnnotation'
      description: Response to an image annotation request.
      id: AnnotateImageResponse
    GoogleCloudVisionV1p1beta1TextAnnotationTextProperty:
      id: GoogleCloudVisionV1p1beta1TextAnnotationTextProperty
      properties:
        detectedLanguages:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage
          description: A list of detected languages together with confidence.
          type: array
        detectedBreak:
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak
          description: Detected start or end of a text segment.
      description: Additional information detected on the structural component.
      type: object
    GoogleCloudVisionV1p3beta1DominantColorsAnnotation:
      properties:
        colors:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ColorInfo'
          type: array
          description: RGB color values with their score and pixel fraction.
      description: Set of dominant colors and their corresponding scores.
      id: GoogleCloudVisionV1p3beta1DominantColorsAnnotation
      type: object
    WebImage:
      description: Metadata for online images.
      properties:
        score:
          type: number
          format: float
          description: (Deprecated) Overall relevancy score for the image.
        url:
          description: The result image URL.
          type: string
      id: WebImage
      type: object
    GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage:
      description: Detected language for a structural component.
      type: object
      properties:
        languageCode:
          type: string
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
        confidence:
          description: Confidence of detected language. Range [0, 1].
          type: number
          format: float
      id: GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage
    GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage:
      properties:
        languageCode:
          type: string
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
        confidence:
          type: number
          description: Confidence of detected language. Range [0, 1].
          format: float
      id: GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage
      description: Detected language for a structural component.
      type: object
    GoogleCloudVisionV1p4beta1DominantColorsAnnotation:
      id: GoogleCloudVisionV1p4beta1DominantColorsAnnotation
      description: Set of dominant colors and their corresponding scores.
      properties:
        colors:
          description: RGB color values with their score and pixel fraction.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ColorInfo'
          type: array
      type: object
    GoogleCloudVisionV1p3beta1GcsDestination:
      type: object
      id: GoogleCloudVisionV1p3beta1GcsDestination
      description: The Google Cloud Storage location where the output will be written to.
      properties:
        uri:
          description: >-
            Google Cloud Storage URI prefix where the results will be stored.
            Results will be in JSON format and preceded by its corresponding
            input URI prefix. This field can either represent a gcs file prefix
            or gcs directory. In either case, the uri should be unique because
            in order to get all of the output files, you will need to do a
            wildcard gcs search on the uri prefix you provide. Examples: * File
            Prefix: gs://bucket-name/here/filenameprefix The output files will
            be created in gs://bucket-name/here/ and the names of the output
            files will begin with "filenameprefix". * Directory Prefix:
            gs://bucket-name/some/location/ The output files will be created in
            gs://bucket-name/some/location/ and the names of the output files
            could be anything because there was no filename prefix specified. If
            multiple outputs, each response is still AnnotateFileResponse, each
            of which contains some subset of the full list of
            AnnotateImageResponse. Multiple outputs can happen if, for example,
            the output JSON is too large and overflows into multiple sharded
            files.
          type: string
    Paragraph:
      description: Structural unit of text representing a number of words in certain order.
      id: Paragraph
      properties:
        property:
          description: Additional information detected for the paragraph.
          $ref: '#/components/schemas/TextProperty'
        boundingBox:
          $ref: '#/components/schemas/BoundingPoly'
          description: >-
            The bounding box for the paragraph. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
        confidence:
          format: float
          type: number
          description: Confidence of the OCR results for the paragraph. Range [0, 1].
        words:
          type: array
          items:
            $ref: '#/components/schemas/Word'
          description: List of all words in this paragraph.
      type: object
    GoogleCloudVisionV1p2beta1Block:
      id: GoogleCloudVisionV1p2beta1Block
      type: object
      properties:
        blockType:
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          description: Detected block type (text, image etc) for this block.
          type: string
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: >-
            The bounding box for the block. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
        property:
          description: Additional information detected for the block.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty
        confidence:
          format: float
          description: Confidence of the OCR results on the block. Range [0, 1].
          type: number
        paragraphs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Paragraph'
          description: List of paragraphs in this block (if this blocks is of type text).
      description: Logical element on the page.
    GoogleCloudVisionV1p2beta1CropHint:
      type: object
      id: GoogleCloudVisionV1p2beta1CropHint
      description: >-
        Single crop hint that is used to generate a new crop when serving an
        image.
      properties:
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
          description: >-
            The bounding polygon for the crop region. The coordinates of the
            bounding box are in the original image's scale.
        importanceFraction:
          description: >-
            Fraction of importance of this salient region with respect to the
            original image.
          format: float
          type: number
        confidence:
          type: number
          format: float
          description: Confidence of this being a salient region. Range [0, 1].
    ListOperationsResponse:
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
          description: >-
            A list of operations that matches the specified filter in the
            request.
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
    ListProductsInProductSetResponse:
      properties:
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        products:
          description: The list of Products.
          type: array
          items:
            $ref: '#/components/schemas/Product'
      description: Response message for the `ListProductsInProductSet` method.
      id: ListProductsInProductSetResponse
      type: object
    OperationMetadata:
      description: Contains metadata for the BatchAnnotateImages operation.
      id: OperationMetadata
      type: object
      properties:
        createTime:
          type: string
          format: google-datetime
          description: The time when the batch request was received.
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
          description: Current state of the batch operation.
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          type: string
        updateTime:
          description: The time when the operation result was last updated.
          format: google-datetime
          type: string
    ImportProductSetsInputConfig:
      type: object
      properties:
        gcsSource:
          $ref: '#/components/schemas/ImportProductSetsGcsSource'
          description: >-
            The Google Cloud Storage location for a csv file which preserves a
            list of ImportProductSetRequests in each line.
      description: The input content for the `ImportProductSets` method.
      id: ImportProductSetsInputConfig
    GoogleCloudVisionV1p4beta1CropHintsAnnotation:
      id: GoogleCloudVisionV1p4beta1CropHintsAnnotation
      properties:
        cropHints:
          type: array
          description: Crop hint results.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1CropHint'
      type: object
      description: >-
        Set of crop hints that are used to generate new crops when serving
        images.
    GoogleCloudVisionV1p4beta1FaceRecognitionResult:
      description: Information about a face's identity.
      properties:
        confidence:
          type: number
          format: float
          description: Recognition confidence. Range [0, 1].
        celebrity:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Celebrity'
          description: The Celebrity that this face was matched to.
      type: object
      id: GoogleCloudVisionV1p4beta1FaceRecognitionResult
    CropHintsAnnotation:
      properties:
        cropHints:
          type: array
          items:
            $ref: '#/components/schemas/CropHint'
          description: Crop hint results.
      type: object
      id: CropHintsAnnotation
      description: >-
        Set of crop hints that are used to generate new crops when serving
        images.
    AnnotateFileRequest:
      properties:
        features:
          items:
            $ref: '#/components/schemas/Feature'
          type: array
          description: Required. Requested features.
        pages:
          items:
            type: integer
            format: int32
          type: array
          description: >-
            Pages of the file to perform image annotation. Pages starts from 1,
            we assume the first page of the file is page 1. At most 5 pages are
            supported per request. Pages can be negative. Page 1 means the first
            page. Page 2 means the second page. Page -1 means the last page.
            Page -2 means the second to the last page. If the file is GIF
            instead of PDF or TIFF, page refers to GIF frames. If this field is
            empty, by default the service performs image annotation for the
            first 5 pages of the file.
        imageContext:
          $ref: '#/components/schemas/ImageContext'
          description: Additional context that may accompany the image(s) in the file.
        inputConfig:
          description: Required. Information about the input file.
          $ref: '#/components/schemas/InputConfig'
      type: object
      id: AnnotateFileRequest
      description: A request to annotate one single file, e.g. a PDF, TIFF or GIF file.
    GoogleCloudVisionV1p2beta1Word:
      properties:
        boundingBox:
          description: >-
            The bounding box for the word. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        confidence:
          format: float
          type: number
          description: Confidence of the OCR results for the word. Range [0, 1].
        symbols:
          description: >-
            List of symbols in the word. The order of the symbols follows the
            natural reading order.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Symbol'
        property:
          description: Additional information detected for the word.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty
      description: A word representation.
      id: GoogleCloudVisionV1p2beta1Word
      type: object
    Feature:
      properties:
        type:
          enumDescriptions:
            - Unspecified feature type.
            - Run face detection.
            - Run landmark detection.
            - Run logo detection.
            - Run label detection.
            - >-
              Run text detection / optical character recognition (OCR). Text
              detection is optimized for areas of text within a larger image; if
              the image is a document, use `DOCUMENT_TEXT_DETECTION` instead.
            - >-
              Run dense text document OCR. Takes precedence when both
              `DOCUMENT_TEXT_DETECTION` and `TEXT_DETECTION` are present.
            - >-
              Run Safe Search to detect potentially unsafe or undesirable
              content.
            - >-
              Compute a set of image properties, such as the image's dominant
              colors.
            - Run crop hints.
            - Run web detection.
            - Run Product Search.
            - Run localizer for object detection.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - FACE_DETECTION
            - LANDMARK_DETECTION
            - LOGO_DETECTION
            - LABEL_DETECTION
            - TEXT_DETECTION
            - DOCUMENT_TEXT_DETECTION
            - SAFE_SEARCH_DETECTION
            - IMAGE_PROPERTIES
            - CROP_HINTS
            - WEB_DETECTION
            - PRODUCT_SEARCH
            - OBJECT_LOCALIZATION
          description: The feature type.
        model:
          type: string
          description: >-
            Model to use for the feature. Supported values: "builtin/stable"
            (the default if unset) and "builtin/latest".
            `DOCUMENT_TEXT_DETECTION` and `TEXT_DETECTION` also support
            "builtin/weekly" for the bleeding edge release updated weekly.
        maxResults:
          type: integer
          format: int32
          description: >-
            Maximum number of results of this type. Does not apply to
            `TEXT_DETECTION`, `DOCUMENT_TEXT_DETECTION`, or `CROP_HINTS`.
      id: Feature
      type: object
      description: >-
        The type of Google Cloud Vision API detection to perform, and the
        maximum number of results to return for that type. Multiple `Feature`
        objects can be specified in the `features` list.
    AnnotateFileResponse:
      id: AnnotateFileResponse
      properties:
        inputConfig:
          $ref: '#/components/schemas/InputConfig'
          description: Information about the file for which this response is generated.
        totalPages:
          type: integer
          description: This field gives the total number of pages in the file.
          format: int32
        responses:
          type: array
          items:
            $ref: '#/components/schemas/AnnotateImageResponse'
          description: >-
            Individual responses to images found within the file. This field
            will be empty if the `error` field is set.
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            If set, represents the error message for the failed request. The
            `responses` field will not be set in this case.
      description: >-
        Response to a single file annotation request. A file may contain one or
        more images, which individually have their own responses.
      type: object
    TextProperty:
      type: object
      description: Additional information detected on the structural component.
      properties:
        detectedLanguages:
          type: array
          items:
            $ref: '#/components/schemas/DetectedLanguage'
          description: A list of detected languages together with confidence.
        detectedBreak:
          description: Detected start or end of a text segment.
          $ref: '#/components/schemas/DetectedBreak'
      id: TextProperty
    Block:
      description: Logical element on the page.
      id: Block
      type: object
      properties:
        confidence:
          format: float
          description: Confidence of the OCR results on the block. Range [0, 1].
          type: number
        blockType:
          type: string
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
          description: Detected block type (text, image etc) for this block.
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
        boundingBox:
          description: >-
            The bounding box for the block. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
          $ref: '#/components/schemas/BoundingPoly'
        property:
          description: Additional information detected for the block.
          $ref: '#/components/schemas/TextProperty'
        paragraphs:
          items:
            $ref: '#/components/schemas/Paragraph'
          type: array
          description: List of paragraphs in this block (if this blocks is of type text).
    GoogleCloudVisionV1p2beta1ImageAnnotationContext:
      id: GoogleCloudVisionV1p2beta1ImageAnnotationContext
      description: >-
        If an image was produced from a file (e.g. a PDF), this message gives
        information about the source of that image.
      type: object
      properties:
        uri:
          type: string
          description: The URI of the file used to produce the image.
        pageNumber:
          description: >-
            If the file was a PDF or TIFF, this field gives the page number
            within the file used to produce the image.
          format: int32
          type: integer
    GoogleCloudVisionV1p4beta1InputConfig:
      description: The desired input location and metadata.
      id: GoogleCloudVisionV1p4beta1InputConfig
      type: object
      properties:
        gcsSource:
          description: The Google Cloud Storage location to read the input from.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1GcsSource'
        content:
          format: byte
          description: >-
            File content, represented as a stream of bytes. Note: As with all
            `bytes` fields, protobuffers use a pure binary representation,
            whereas JSON representations use base64. Currently, this field only
            works for BatchAnnotateFiles requests. It does not work for
            AsyncBatchAnnotateFiles requests.
          type: string
        mimeType:
          description: >-
            The type of the file. Currently only "application/pdf", "image/tiff"
            and "image/gif" are supported. Wildcards are not supported.
          type: string
    GcsSource:
      id: GcsSource
      properties:
        uri:
          description: >-
            Google Cloud Storage URI for the input file. This must only be a
            Google Cloud Storage object. Wildcards are not currently supported.
          type: string
      description: The Google Cloud Storage location where the input will be read from.
      type: object
    GoogleCloudVisionV1p4beta1BoundingPoly:
      description: A bounding polygon for the detected image annotation.
      properties:
        vertices:
          description: The bounding polygon vertices.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Vertex'
          type: array
        normalizedVertices:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1NormalizedVertex'
          description: The bounding polygon normalized vertices.
      type: object
      id: GoogleCloudVisionV1p4beta1BoundingPoly
    BatchOperationMetadata:
      properties:
        endTime:
          type: string
          description: >-
            The time when the batch request is finished and
            google.longrunning.Operation.done is set to true.
          format: google-datetime
        submitTime:
          description: The time when the batch request was submitted to the server.
          type: string
          format: google-datetime
        state:
          enum:
            - STATE_UNSPECIFIED
            - PROCESSING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
          enumDescriptions:
            - Invalid.
            - Request is actively being processed.
            - >-
              The request is done and at least one item has been successfully
              processed.
            - The request is done and no item has been successfully processed.
            - >-
              The request is done after the
              longrunning.Operations.CancelOperation has been called by the
              user. Any records that were processed before the cancel command
              are output as specified in the request.
          description: The current state of the batch operation.
          type: string
      id: BatchOperationMetadata
      type: object
      description: >-
        Metadata for the batch operations such as the current state. This is
        included in the `metadata` field of the `Operation` returned by the
        `GetOperation` call of the `google::longrunning::Operations` service.
    GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse:
      id: GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse
      type: object
      description: Response to an async batch file annotation request.
      properties:
        responses:
          description: >-
            The list of file annotation responses, one for each request in
            AsyncBatchAnnotateFilesRequest.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse
    GoogleCloudVisionV1p3beta1TextAnnotationTextProperty:
      description: Additional information detected on the structural component.
      id: GoogleCloudVisionV1p3beta1TextAnnotationTextProperty
      type: object
      properties:
        detectedLanguages:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage
          type: array
          description: A list of detected languages together with confidence.
        detectedBreak:
          description: Detected start or end of a text segment.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak
    Landmark:
      type: object
      id: Landmark
      description: A face-specific landmark (for example, a face feature).
      properties:
        type:
          type: string
          enumDescriptions:
            - Unknown face landmark detected. Should not be filled.
            - Left eye.
            - Right eye.
            - Left of left eyebrow.
            - Right of left eyebrow.
            - Left of right eyebrow.
            - Right of right eyebrow.
            - Midpoint between eyes.
            - Nose tip.
            - Upper lip.
            - Lower lip.
            - Mouth left.
            - Mouth right.
            - Mouth center.
            - Nose, bottom right.
            - Nose, bottom left.
            - Nose, bottom center.
            - Left eye, top boundary.
            - Left eye, right corner.
            - Left eye, bottom boundary.
            - Left eye, left corner.
            - Right eye, top boundary.
            - Right eye, right corner.
            - Right eye, bottom boundary.
            - Right eye, left corner.
            - Left eyebrow, upper midpoint.
            - Right eyebrow, upper midpoint.
            - Left ear tragion.
            - Right ear tragion.
            - Left eye pupil.
            - Right eye pupil.
            - Forehead glabella.
            - Chin gnathion.
            - Chin left gonion.
            - Chin right gonion.
            - Left cheek center.
            - Right cheek center.
          description: Face landmark type.
          enum:
            - UNKNOWN_LANDMARK
            - LEFT_EYE
            - RIGHT_EYE
            - LEFT_OF_LEFT_EYEBROW
            - RIGHT_OF_LEFT_EYEBROW
            - LEFT_OF_RIGHT_EYEBROW
            - RIGHT_OF_RIGHT_EYEBROW
            - MIDPOINT_BETWEEN_EYES
            - NOSE_TIP
            - UPPER_LIP
            - LOWER_LIP
            - MOUTH_LEFT
            - MOUTH_RIGHT
            - MOUTH_CENTER
            - NOSE_BOTTOM_RIGHT
            - NOSE_BOTTOM_LEFT
            - NOSE_BOTTOM_CENTER
            - LEFT_EYE_TOP_BOUNDARY
            - LEFT_EYE_RIGHT_CORNER
            - LEFT_EYE_BOTTOM_BOUNDARY
            - LEFT_EYE_LEFT_CORNER
            - RIGHT_EYE_TOP_BOUNDARY
            - RIGHT_EYE_RIGHT_CORNER
            - RIGHT_EYE_BOTTOM_BOUNDARY
            - RIGHT_EYE_LEFT_CORNER
            - LEFT_EYEBROW_UPPER_MIDPOINT
            - RIGHT_EYEBROW_UPPER_MIDPOINT
            - LEFT_EAR_TRAGION
            - RIGHT_EAR_TRAGION
            - LEFT_EYE_PUPIL
            - RIGHT_EYE_PUPIL
            - FOREHEAD_GLABELLA
            - CHIN_GNATHION
            - CHIN_LEFT_GONION
            - CHIN_RIGHT_GONION
            - LEFT_CHEEK_CENTER
            - RIGHT_CHEEK_CENTER
        position:
          $ref: '#/components/schemas/Position'
          description: Face landmark position.
    GoogleCloudVisionV1p4beta1Block:
      properties:
        confidence:
          format: float
          description: Confidence of the OCR results on the block. Range [0, 1].
          type: number
        blockType:
          enumDescriptions:
            - Unknown block type.
            - Regular text block.
            - Table block.
            - Image block.
            - Horizontal/vertical line box.
            - Barcode block.
          type: string
          description: Detected block type (text, image etc) for this block.
          enum:
            - UNKNOWN
            - TEXT
            - TABLE
            - PICTURE
            - RULER
            - BARCODE
        property:
          description: Additional information detected for the block.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p4beta1TextAnnotationTextProperty
        paragraphs:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Paragraph'
          description: List of paragraphs in this block (if this blocks is of type text).
          type: array
        boundingBox:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
          description: >-
            The bounding box for the block. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
      type: object
      description: Logical element on the page.
      id: GoogleCloudVisionV1p4beta1Block
    ImageSource:
      type: object
      description: External image source (Google Cloud Storage or web URL image location).
      properties:
        imageUri:
          description: >-
            The URI of the source image. Can be either: 1. A Google Cloud
            Storage URI of the form `gs://bucket_name/object_name`. Object
            versioning is not supported. See [Google Cloud Storage Request
            URIs](https://cloud.google.com/storage/docs/reference-uris) for more
            info. 2. A publicly-accessible image HTTP/HTTPS URL. When fetching
            images from HTTP/HTTPS URLs, Google cannot guarantee that the
            request will be completed. Your request may fail if the specified
            host denies the request (e.g. due to request throttling or DOS
            prevention), or if Google throttles requests to the site for abuse
            prevention. You should not depend on externally-hosted images for
            production applications. When both `gcs_image_uri` and `image_uri`
            are specified, `image_uri` takes precedence.
          type: string
        gcsImageUri:
          description: >-
            **Use `image_uri` instead.** The Google Cloud Storage URI of the
            form `gs://bucket_name/object_name`. Object versioning is not
            supported. See [Google Cloud Storage Request
            URIs](https://cloud.google.com/storage/docs/reference-uris) for more
            info.
          type: string
      id: ImageSource
    GoogleCloudVisionV1p1beta1Property:
      type: object
      id: GoogleCloudVisionV1p1beta1Property
      properties:
        name:
          description: Name of the property.
          type: string
        uint64Value:
          format: uint64
          type: string
          description: Value of numeric properties.
        value:
          description: Value of the property.
          type: string
      description: A `Property` consists of a user-supplied name/value pair.
    GoogleCloudVisionV1p2beta1Paragraph:
      id: GoogleCloudVisionV1p2beta1Paragraph
      type: object
      description: Structural unit of text representing a number of words in certain order.
      properties:
        words:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Word'
          description: List of all words in this paragraph.
        property:
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p2beta1TextAnnotationTextProperty
          description: Additional information detected for the paragraph.
        boundingBox:
          description: >-
            The bounding box for the paragraph. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        confidence:
          format: float
          description: Confidence of the OCR results for the paragraph. Range [0, 1].
          type: number
    AsyncBatchAnnotateImagesResponse:
      description: Response to an async batch image annotation request.
      id: AsyncBatchAnnotateImagesResponse
      type: object
      properties:
        outputConfig:
          description: >-
            The output location and metadata from
            AsyncBatchAnnotateImagesRequest.
          $ref: '#/components/schemas/OutputConfig'
    GoogleCloudVisionV1p1beta1InputConfig:
      description: The desired input location and metadata.
      properties:
        content:
          type: string
          format: byte
          description: >-
            File content, represented as a stream of bytes. Note: As with all
            `bytes` fields, protobuffers use a pure binary representation,
            whereas JSON representations use base64. Currently, this field only
            works for BatchAnnotateFiles requests. It does not work for
            AsyncBatchAnnotateFiles requests.
        mimeType:
          type: string
          description: >-
            The type of the file. Currently only "application/pdf", "image/tiff"
            and "image/gif" are supported. Wildcards are not supported.
        gcsSource:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1GcsSource'
          description: The Google Cloud Storage location to read the input from.
      type: object
      id: GoogleCloudVisionV1p1beta1InputConfig
    GoogleCloudVisionV1p2beta1NormalizedVertex:
      description: >-
        A vertex represents a 2D point in the image. NOTE: the normalized vertex
        coordinates are relative to the original image and range from 0 to 1.
      id: GoogleCloudVisionV1p2beta1NormalizedVertex
      properties:
        'y':
          format: float
          type: number
          description: Y coordinate.
        x:
          type: number
          description: X coordinate.
          format: float
      type: object
    GoogleCloudVisionV1p3beta1NormalizedVertex:
      type: object
      properties:
        'y':
          type: number
          description: Y coordinate.
          format: float
        x:
          description: X coordinate.
          type: number
          format: float
      description: >-
        A vertex represents a 2D point in the image. NOTE: the normalized vertex
        coordinates are relative to the original image and range from 0 to 1.
      id: GoogleCloudVisionV1p3beta1NormalizedVertex
    GoogleCloudVisionV1p4beta1Product:
      description: A Product contains ReferenceImages.
      id: GoogleCloudVisionV1p4beta1Product
      properties:
        name:
          type: string
          description: >-
            The resource name of the product. Format is:
            `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This
            field is ignored when creating a product.
        description:
          type: string
          description: >-
            User-provided metadata to be stored with this product. Must be at
            most 4096 characters long.
        productCategory:
          description: >-
            Immutable. The category for the product identified by the reference
            image. This should be one of "homegoods-v2", "apparel-v2",
            "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories
            "homegoods", "apparel", and "toys" are still supported, but these
            should not be used for new products.
          type: string
        productLabels:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1ProductKeyValue'
          description: >-
            Key-value pairs that can be attached to a product. At query time,
            constraints can be specified based on the product_labels. Note that
            integer values can be provided as strings, e.g. "1199". Only strings
            with integer values can match a range-based restriction which is to
            be supported soon. Multiple values can be assigned to the same key.
            One product may have up to 500 product_labels. Notice that the total
            number of distinct product_labels over all products in one
            ProductSet cannot exceed 1M, otherwise the product search pipeline
            will refuse to work for that ProductSet.
          type: array
        displayName:
          description: >-
            The user-provided name for this Product. Must not be empty. Must be
            at most 4096 characters long.
          type: string
      type: object
    Result:
      id: Result
      type: object
      properties:
        image:
          description: >-
            The resource name of the image from the product that is the closest
            match to the query.
          type: string
        score:
          type: number
          format: float
          description: >-
            A confidence level on the match, ranging from 0 (no confidence) to 1
            (full confidence).
        product:
          description: The Product.
          $ref: '#/components/schemas/Product'
      description: Information about a product.
    GoogleCloudVisionV1p1beta1Page:
      type: object
      properties:
        width:
          format: int32
          description: >-
            Page width. For PDFs the unit is points. For images (including
            TIFFs) the unit is pixels.
          type: integer
        blocks:
          type: array
          description: List of blocks of text, images etc on this page.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Block'
        height:
          description: >-
            Page height. For PDFs the unit is points. For images (including
            TIFFs) the unit is pixels.
          format: int32
          type: integer
        property:
          description: Additional information detected on the page.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty
        confidence:
          type: number
          description: Confidence of the OCR results on the page. Range [0, 1].
          format: float
      id: GoogleCloudVisionV1p1beta1Page
      description: Detected page from OCR.
    GoogleCloudVisionV1p2beta1OperationMetadata:
      id: GoogleCloudVisionV1p2beta1OperationMetadata
      properties:
        updateTime:
          type: string
          description: The time when the operation result was last updated.
          format: google-datetime
        createTime:
          format: google-datetime
          description: The time when the batch request was received.
          type: string
        state:
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          type: string
          description: Current state of the batch operation.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
      description: Contains metadata for the BatchAnnotateImages operation.
      type: object
    BatchAnnotateFilesResponse:
      properties:
        responses:
          items:
            $ref: '#/components/schemas/AnnotateFileResponse'
          description: >-
            The list of file annotation responses, each response corresponding
            to each AnnotateFileRequest in BatchAnnotateFilesRequest.
          type: array
      description: A list of file annotation responses.
      id: BatchAnnotateFilesResponse
      type: object
    GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse:
      type: object
      description: The response for a single offline file annotation request.
      id: GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse
      properties:
        outputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1OutputConfig'
          description: The output location and metadata from AsyncAnnotateFileRequest.
    GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse:
      type: object
      properties:
        outputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1OutputConfig'
          description: The output location and metadata from AsyncAnnotateFileRequest.
      description: The response for a single offline file annotation request.
      id: GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse
    DetectedBreak:
      properties:
        isPrefix:
          type: boolean
          description: True if break prepends the element.
        type:
          enum:
            - UNKNOWN
            - SPACE
            - SURE_SPACE
            - EOL_SURE_SPACE
            - HYPHEN
            - LINE_BREAK
          type: string
          description: Detected break type.
          enumDescriptions:
            - Unknown break label type.
            - Regular space.
            - Sure space (very wide).
            - Line-wrapping break.
            - >-
              End-line hyphen that is not present in text; does not co-occur
              with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.
            - Line break that ends a paragraph.
      id: DetectedBreak
      type: object
      description: Detected start or end of a structural component.
    GoogleCloudVisionV1p2beta1EntityAnnotation:
      id: GoogleCloudVisionV1p2beta1EntityAnnotation
      properties:
        score:
          format: float
          description: Overall score of the result. Range [0, 1].
          type: number
        boundingPoly:
          description: >-
            Image region to which this entity belongs. Not produced for
            `LABEL_DETECTION` features.
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1BoundingPoly'
        confidence:
          description: >-
            **Deprecated. Use `score` instead.** The accuracy of the entity
            detection in an image. For example, for an image in which the
            "Eiffel Tower" entity is detected, this field represents the
            confidence that there is a tower in the query image. Range [0, 1].
          format: float
          type: number
        locations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1LocationInfo'
          description: >-
            The location information for the detected entity. Multiple
            `LocationInfo` elements can be present because one location may
            indicate the location of the scene in the image, and another
            location may indicate the location of the place where the image was
            taken. Location information is usually present for landmarks.
          type: array
        mid:
          description: >-
            Opaque entity ID. Some IDs may be available in [Google Knowledge
            Graph Search API](https://developers.google.com/knowledge-graph/).
          type: string
        properties:
          description: >-
            Some entities may have optional user-supplied `Property`
            (name/value) fields, such a score or string that qualifies the
            entity.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1Property'
          type: array
        locale:
          description: >-
            The language code for the locale in which the entity textual
            `description` is expressed.
          type: string
        topicality:
          type: number
          description: >-
            The relevancy of the ICA (Image Content Annotation) label to the
            image. For example, the relevancy of "tower" is likely higher to an
            image containing the detected "Eiffel Tower" than to an image
            containing a detected distant towering building, even though the
            confidence that there is a tower in each image may be the same.
            Range [0, 1].
          format: float
        description:
          type: string
          description: Entity textual description, expressed in its `locale` language.
      description: Set of detected entity features.
      type: object
    GoogleCloudVisionV1p1beta1WebDetectionWebImage:
      properties:
        score:
          type: number
          format: float
          description: (Deprecated) Overall relevancy score for the image.
        url:
          type: string
          description: The result image URL.
      id: GoogleCloudVisionV1p1beta1WebDetectionWebImage
      description: Metadata for online images.
      type: object
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      id: Operation
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    ListReferenceImagesResponse:
      description: Response message for the `ListReferenceImages` method.
      properties:
        pageSize:
          type: integer
          description: The maximum number of items to return. Default 10, maximum 100.
          format: int32
        referenceImages:
          description: The list of reference images.
          items:
            $ref: '#/components/schemas/ReferenceImage'
          type: array
        nextPageToken:
          type: string
          description: The next_page_token returned from a previous List request, if any.
      id: ListReferenceImagesResponse
      type: object
    GoogleCloudVisionV1p4beta1WebDetectionWebLabel:
      id: GoogleCloudVisionV1p4beta1WebDetectionWebLabel
      type: object
      description: Label to provide extra metadata for the web detection.
      properties:
        label:
          description: Label for extra metadata.
          type: string
        languageCode:
          type: string
          description: >-
            The BCP-47 language code for `label`, such as "en-US" or "sr-Latn".
            For more information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
    DominantColorsAnnotation:
      description: Set of dominant colors and their corresponding scores.
      properties:
        colors:
          description: RGB color values with their score and pixel fraction.
          type: array
          items:
            $ref: '#/components/schemas/ColorInfo'
      type: object
      id: DominantColorsAnnotation
    GoogleCloudVisionV1p1beta1LocationInfo:
      id: GoogleCloudVisionV1p1beta1LocationInfo
      properties:
        latLng:
          $ref: '#/components/schemas/LatLng'
          description: lat/long location coordinates.
      type: object
      description: Detected entity location information.
    GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse:
      description: The response for a single offline file annotation request.
      id: GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse
      properties:
        outputConfig:
          description: The output location and metadata from AsyncAnnotateFileRequest.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1OutputConfig'
      type: object
    SafeSearchAnnotation:
      id: SafeSearchAnnotation
      description: >-
        Set of features pertaining to the image, computed by computer vision
        methods over safe-search verticals (for example, adult, spoof, medical,
        violence).
      type: object
      properties:
        violence:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Likelihood that this image contains violent content.
        racy:
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: >-
            Likelihood that the request image contains racy content. Racy
            content may include (but is not limited to) skimpy or sheer
            clothing, strategically covered nudity, lewd or provocative poses,
            or close-ups of sensitive body areas.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        adult:
          description: >-
            Represents the adult content likelihood for the image. Adult content
            may contain elements such as nudity, pornographic images or
            cartoons, or sexual activities.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
        medical:
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          description: Likelihood that this is a medical image.
        spoof:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
          description: >-
            Spoof likelihood. The likelihood that an modification was made to
            the image's canonical version to make it appear funny or offensive.
    GoogleCloudVisionV1p1beta1Symbol:
      description: A single symbol representation.
      id: GoogleCloudVisionV1p1beta1Symbol
      type: object
      properties:
        boundingBox:
          description: >-
            The bounding box for the symbol. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        property:
          description: Additional information detected for the symbol.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty
        text:
          description: The actual UTF-8 representation of the symbol.
          type: string
        confidence:
          description: Confidence of the OCR results for the symbol. Range [0, 1].
          format: float
          type: number
    GoogleCloudVisionV1p1beta1SafeSearchAnnotation:
      id: GoogleCloudVisionV1p1beta1SafeSearchAnnotation
      properties:
        medical:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Likelihood that this is a medical image.
        violence:
          type: string
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: Likelihood that this image contains violent content.
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
        adult:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          type: string
          description: >-
            Represents the adult content likelihood for the image. Adult content
            may contain elements such as nudity, pornographic images or
            cartoons, or sexual activities.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
        racy:
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          description: >-
            Likelihood that the request image contains racy content. Racy
            content may include (but is not limited to) skimpy or sheer
            clothing, strategically covered nudity, lewd or provocative poses,
            or close-ups of sensitive body areas.
          type: string
        spoof:
          description: >-
            Spoof likelihood. The likelihood that an modification was made to
            the image's canonical version to make it appear funny or offensive.
          type: string
          enumDescriptions:
            - Unknown likelihood.
            - It is very unlikely.
            - It is unlikely.
            - It is possible.
            - It is likely.
            - It is very likely.
          enum:
            - UNKNOWN
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
      type: object
      description: >-
        Set of features pertaining to the image, computed by computer vision
        methods over safe-search verticals (for example, adult, spoof, medical,
        violence).
    AsyncBatchAnnotateImagesRequest:
      properties:
        outputConfig:
          $ref: '#/components/schemas/OutputConfig'
          description: Required. The desired output location and metadata (e.g. format).
        parent:
          description: >-
            Optional. Target project and location to make a call. Format:
            `projects/{project-id}/locations/{location-id}`. If no parent is
            specified, a region will be chosen automatically. Supported
            location-ids: `us`: USA country only, `asia`: East asia areas, like
            Japan, Taiwan, `eu`: The European Union. Example:
            `projects/project-A/locations/eu`.
          type: string
        requests:
          type: array
          description: Required. Individual image annotation requests for this batch.
          items:
            $ref: '#/components/schemas/AnnotateImageRequest'
      id: AsyncBatchAnnotateImagesRequest
      type: object
      description: Request for async image annotation for a list of images.
    GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation:
      id: GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation
      description: Prediction for what the object in the bounding box is.
      properties:
        languageCode:
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
          type: string
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        name:
          description: Object name, expressed in its `language_code` language.
          type: string
        score:
          format: float
          type: number
          description: Score of the result. Range [0, 1].
      type: object
    GoogleCloudVisionV1p4beta1BatchOperationMetadata:
      type: object
      properties:
        submitTime:
          format: google-datetime
          description: The time when the batch request was submitted to the server.
          type: string
        endTime:
          description: >-
            The time when the batch request is finished and
            google.longrunning.Operation.done is set to true.
          type: string
          format: google-datetime
        state:
          enumDescriptions:
            - Invalid.
            - Request is actively being processed.
            - >-
              The request is done and at least one item has been successfully
              processed.
            - The request is done and no item has been successfully processed.
            - >-
              The request is done after the
              longrunning.Operations.CancelOperation has been called by the
              user. Any records that were processed before the cancel command
              are output as specified in the request.
          enum:
            - STATE_UNSPECIFIED
            - PROCESSING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
          type: string
          description: The current state of the batch operation.
      id: GoogleCloudVisionV1p4beta1BatchOperationMetadata
      description: >-
        Metadata for the batch operations such as the current state. This is
        included in the `metadata` field of the `Operation` returned by the
        `GetOperation` call of the `google::longrunning::Operations` service.
    GoogleCloudVisionV1p1beta1ImageProperties:
      properties:
        dominantColors:
          description: If present, dominant colors completed successfully.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p1beta1DominantColorsAnnotation
      description: Stores image properties, such as dominant colors.
      id: GoogleCloudVisionV1p1beta1ImageProperties
      type: object
    GoogleCloudVisionV1p2beta1AnnotateFileResponse:
      properties:
        totalPages:
          type: integer
          description: This field gives the total number of pages in the file.
          format: int32
        responses:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1AnnotateImageResponse
          description: >-
            Individual responses to images found within the file. This field
            will be empty if the `error` field is set.
        inputConfig:
          $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1InputConfig'
          description: Information about the file for which this response is generated.
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            If set, represents the error message for the failed request. The
            `responses` field will not be set in this case.
      description: >-
        Response to a single file annotation request. A file may contain one or
        more images, which individually have their own responses.
      type: object
      id: GoogleCloudVisionV1p2beta1AnnotateFileResponse
    GoogleCloudVisionV1p3beta1InputConfig:
      properties:
        gcsSource:
          description: The Google Cloud Storage location to read the input from.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1GcsSource'
        content:
          description: >-
            File content, represented as a stream of bytes. Note: As with all
            `bytes` fields, protobuffers use a pure binary representation,
            whereas JSON representations use base64. Currently, this field only
            works for BatchAnnotateFiles requests. It does not work for
            AsyncBatchAnnotateFiles requests.
          type: string
          format: byte
        mimeType:
          type: string
          description: >-
            The type of the file. Currently only "application/pdf", "image/tiff"
            and "image/gif" are supported. Wildcards are not supported.
      type: object
      id: GoogleCloudVisionV1p3beta1InputConfig
      description: The desired input location and metadata.
    BatchAnnotateImagesResponse:
      properties:
        responses:
          type: array
          description: Individual responses to image annotation requests within the batch.
          items:
            $ref: '#/components/schemas/AnnotateImageResponse'
      description: Response to a batch image annotation request.
      id: BatchAnnotateImagesResponse
      type: object
    GoogleCloudVisionV1p3beta1CropHint:
      properties:
        confidence:
          format: float
          description: Confidence of this being a salient region. Range [0, 1].
          type: number
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
          description: >-
            The bounding polygon for the crop region. The coordinates of the
            bounding box are in the original image's scale.
        importanceFraction:
          description: >-
            Fraction of importance of this salient region with respect to the
            original image.
          format: float
          type: number
      type: object
      id: GoogleCloudVisionV1p3beta1CropHint
      description: >-
        Single crop hint that is used to generate a new crop when serving an
        image.
    GoogleCloudVisionV1p3beta1Page:
      description: Detected page from OCR.
      id: GoogleCloudVisionV1p3beta1Page
      properties:
        height:
          format: int32
          description: >-
            Page height. For PDFs the unit is points. For images (including
            TIFFs) the unit is pixels.
          type: integer
        blocks:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Block'
          description: List of blocks of text, images etc on this page.
          type: array
        property:
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p3beta1TextAnnotationTextProperty
          description: Additional information detected on the page.
        width:
          description: >-
            Page width. For PDFs the unit is points. For images (including
            TIFFs) the unit is pixels.
          type: integer
          format: int32
        confidence:
          type: number
          format: float
          description: Confidence of the OCR results on the page. Range [0, 1].
      type: object
    GoogleCloudVisionV1p1beta1AnnotateImageResponse:
      id: GoogleCloudVisionV1p1beta1AnnotateImageResponse
      type: object
      description: Response to an image annotation request.
      properties:
        fullTextAnnotation:
          description: >-
            If present, text (OCR) detection or document (OCR) text detection
            has completed successfully. This annotation provides the structural
            hierarchy for the OCR detected text.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotation'
        logoAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          description: If present, logo detection has completed successfully.
        context:
          description: >-
            If present, contextual information is needed to understand where
            this image comes from.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p1beta1ImageAnnotationContext
        labelAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          description: If present, label detection has completed successfully.
        productSearchResults:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResults'
          description: If present, product search has completed successfully.
        imagePropertiesAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1ImageProperties'
          description: If present, image properties were extracted successfully.
        faceAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1FaceAnnotation'
          description: If present, face detection has completed successfully.
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            If set, represents the error message for the operation. Note that
            filled-in image annotations are guaranteed to be correct, even when
            `error` is set.
        textAnnotations:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
          description: If present, text (OCR) detection has completed successfully.
          type: array
        landmarkAnnotations:
          type: array
          description: If present, landmark detection has completed successfully.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1EntityAnnotation'
        cropHintsAnnotation:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1CropHintsAnnotation'
          description: If present, crop hints have completed successfully.
        localizedObjectAnnotations:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation
          description: >-
            If present, localized object detection has completed successfully.
            This will be sorted descending by confidence score.
        safeSearchAnnotation:
          description: If present, safe-search annotation has completed successfully.
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1SafeSearchAnnotation'
        webDetection:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1WebDetection'
          description: If present, web detection has completed successfully.
    GoogleCloudVisionV1p1beta1Word:
      description: A word representation.
      properties:
        symbols:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1Symbol'
          type: array
          description: >-
            List of symbols in the word. The order of the symbols follows the
            natural reading order.
        confidence:
          format: float
          description: Confidence of the OCR results for the word. Range [0, 1].
          type: number
        boundingBox:
          description: >-
            The bounding box for the word. The vertices are in the order of
            top-left, top-right, bottom-right, bottom-left. When a rotation of
            the bounding box is detected the rotation is represented as around
            the top-left corner as defined when the text is read in the
            'natural' orientation. For example: * when the text is horizontal it
            might look like: 0----1 | | 3----2 * when it's rotated 180 degrees
            around the top-left corner it becomes: 2----3 | | 1----0 and the
            vertex order will still be (0, 1, 2, 3).
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
        property:
          description: Additional information detected for the word.
          $ref: >-
            #/components/schemas/GoogleCloudVisionV1p1beta1TextAnnotationTextProperty
      id: GoogleCloudVisionV1p1beta1Word
      type: object
    GoogleCloudVisionV1p4beta1Celebrity:
      description: A Celebrity is a group of Faces with an identity.
      id: GoogleCloudVisionV1p4beta1Celebrity
      type: object
      properties:
        displayName:
          description: The Celebrity's display name.
          type: string
        description:
          description: The Celebrity's description.
          type: string
        name:
          description: >-
            The resource name of the preloaded Celebrity. Has the format
            `builtin/{mid}`.
          type: string
    GoogleCloudVisionV1p3beta1EntityAnnotation:
      id: GoogleCloudVisionV1p3beta1EntityAnnotation
      description: Set of detected entity features.
      type: object
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1LocationInfo'
          description: >-
            The location information for the detected entity. Multiple
            `LocationInfo` elements can be present because one location may
            indicate the location of the scene in the image, and another
            location may indicate the location of the place where the image was
            taken. Location information is usually present for landmarks.
        description:
          description: Entity textual description, expressed in its `locale` language.
          type: string
        score:
          type: number
          format: float
          description: Overall score of the result. Range [0, 1].
        confidence:
          description: >-
            **Deprecated. Use `score` instead.** The accuracy of the entity
            detection in an image. For example, for an image in which the
            "Eiffel Tower" entity is detected, this field represents the
            confidence that there is a tower in the query image. Range [0, 1].
          format: float
          type: number
        topicality:
          type: number
          description: >-
            The relevancy of the ICA (Image Content Annotation) label to the
            image. For example, the relevancy of "tower" is likely higher to an
            image containing the detected "Eiffel Tower" than to an image
            containing a detected distant towering building, even though the
            confidence that there is a tower in each image may be the same.
            Range [0, 1].
          format: float
        mid:
          type: string
          description: >-
            Opaque entity ID. Some IDs may be available in [Google Knowledge
            Graph Search API](https://developers.google.com/knowledge-graph/).
        boundingPoly:
          description: >-
            Image region to which this entity belongs. Not produced for
            `LABEL_DETECTION` features.
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1BoundingPoly'
        properties:
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Property'
          type: array
          description: >-
            Some entities may have optional user-supplied `Property`
            (name/value) fields, such a score or string that qualifies the
            entity.
        locale:
          description: >-
            The language code for the locale in which the entity textual
            `description` is expressed.
          type: string
    BatchAnnotateImagesRequest:
      id: BatchAnnotateImagesRequest
      description: >-
        Multiple image annotation requests are batched into a single service
        call.
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/AnnotateImageRequest'
          description: Required. Individual image annotation requests for this batch.
        parent:
          description: >-
            Optional. Target project and location to make a call. Format:
            `projects/{project-id}/locations/{location-id}`. If no parent is
            specified, a region will be chosen automatically. Supported
            location-ids: `us`: USA country only, `asia`: East asia areas, like
            Japan, Taiwan, `eu`: The European Union. Example:
            `projects/project-A/locations/eu`.
          type: string
      type: object
    GoogleCloudVisionV1p4beta1WebDetection:
      type: object
      properties:
        pagesWithMatchingImages:
          description: Web pages containing the matching images from the Internet.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebPage'
          type: array
        webEntities:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebEntity
          type: array
          description: Deduced entities from similar images on the Internet.
        bestGuessLabels:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebLabel
          type: array
          description: >-
            The service's best guess as to the topic of the request image.
            Inferred from similar images on the open web.
        partialMatchingImages:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage
          type: array
          description: >-
            Partial matching images from the Internet. Those images are similar
            enough to share some key-point features. For example an original
            image will likely have partial matching for its crops.
        visuallySimilarImages:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage
          description: The visually similar image results.
          type: array
        fullMatchingImages:
          description: >-
            Fully matching images from the Internet. Can include resized copies
            of the query image.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p4beta1WebDetectionWebImage
          type: array
      id: GoogleCloudVisionV1p4beta1WebDetection
      description: Relevant information for the image from the Internet.
    GoogleCloudVisionV1p3beta1ImportProductSetsResponse:
      properties:
        statuses:
          description: >-
            The rpc status for each ImportProductSet request, including both
            successes and errors. The number of statuses here matches the number
            of lines in the csv file, and statuses[i] stores the success or
            failure status of processing the i-th line of the csv, starting from
            line 0.
          items:
            $ref: '#/components/schemas/Status'
          type: array
        referenceImages:
          type: array
          description: The list of reference_images that are imported successfully.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1ReferenceImage'
      id: GoogleCloudVisionV1p3beta1ImportProductSetsResponse
      description: >-
        Response message for the `ImportProductSets` method. This message is
        returned by the google.longrunning.Operations.GetOperation method in the
        returned google.longrunning.Operation.response field.
      type: object
    GoogleCloudVisionV1p3beta1WebDetectionWebImage:
      properties:
        url:
          type: string
          description: The result image URL.
        score:
          format: float
          description: (Deprecated) Overall relevancy score for the image.
          type: number
      id: GoogleCloudVisionV1p3beta1WebDetectionWebImage
      description: Metadata for online images.
      type: object
    WebDetectionParams:
      type: object
      description: Parameters for web detection request.
      properties:
        includeGeoResults:
          description: >-
            Whether to include results derived from the geo information in the
            image.
          type: boolean
      id: WebDetectionParams
    GoogleCloudVisionV1p4beta1ProductSearchResultsResult:
      id: GoogleCloudVisionV1p4beta1ProductSearchResultsResult
      description: Information about a product.
      properties:
        score:
          type: number
          format: float
          description: >-
            A confidence level on the match, ranging from 0 (no confidence) to 1
            (full confidence).
        image:
          type: string
          description: >-
            The resource name of the image from the product that is the closest
            match to the query.
        product:
          description: The Product.
          $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1Product'
      type: object
    GoogleCloudVisionV1p2beta1Position:
      description: >-
        A 3D position in the image, used primarily for Face detection landmarks.
        A valid Position must have both x and y coordinates. The position
        coordinates are in the same scale as the original image.
      id: GoogleCloudVisionV1p2beta1Position
      type: object
      properties:
        x:
          description: X coordinate.
          type: number
          format: float
        z:
          description: Z coordinate (or depth).
          format: float
          type: number
        'y':
          description: Y coordinate.
          type: number
          format: float
    WebEntity:
      id: WebEntity
      properties:
        description:
          description: Canonical description of the entity, in English.
          type: string
        score:
          description: >-
            Overall relevancy score for the entity. Not normalized and not
            comparable across different image queries.
          format: float
          type: number
        entityId:
          type: string
          description: Opaque entity ID.
      description: Entity deduced from similar images on the Internet.
      type: object
    GoogleCloudVisionV1p4beta1ReferenceImage:
      id: GoogleCloudVisionV1p4beta1ReferenceImage
      type: object
      properties:
        uri:
          type: string
          description: >-
            Required. The Google Cloud Storage URI of the reference image. The
            URI must start with `gs://`.
        name:
          description: >-
            The resource name of the reference image. Format is:
            `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`.
            This field is ignored when creating a reference image.
          type: string
        boundingPolys:
          type: array
          description: >-
            Optional. Bounding polygons around the areas of interest in the
            reference image. If this field is empty, the system will try to
            detect regions of interest. At most 10 bounding polygons will be
            used. The provided shape is converted into a non-rotated rectangle.
            Once converted, the small edge of the rectangle must be greater than
            or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e.
            1:3 is ok; 1:5 is not).
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p4beta1BoundingPoly'
      description: >-
        A `ReferenceImage` represents a product image and its associated
        metadata, such as bounding boxes.
    TextAnnotation:
      type: object
      description: >-
        TextAnnotation contains a structured representation of OCR extracted
        text. The hierarchy of an OCR extracted text structure is like this:
        TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each
        structural component, starting from Page, may further have their own
        properties. Properties describe detected languages, breaks etc.. Please
        refer to the TextAnnotation.TextProperty message definition below for
        more detail.
      id: TextAnnotation
      properties:
        text:
          type: string
          description: UTF-8 text detected on the pages.
        pages:
          description: List of pages detected by OCR.
          type: array
          items:
            $ref: '#/components/schemas/Page'
    GoogleCloudVisionV1p1beta1ProductSearchResults:
      properties:
        indexTime:
          format: google-datetime
          type: string
          description: >-
            Timestamp of the index which provided these results. Products added
            to the product set and products removed from the product set after
            this time are not reflected in the current results.
        productGroupedResults:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult
          description: >-
            List of results grouped by products detected in the query image.
            Each entry corresponds to one bounding polygon in the query image,
            and contains the matching products specific to that region. There
            may be duplicate product matches in the union of all the per-product
            results.
        results:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p1beta1ProductSearchResultsResult
          type: array
          description: List of results, one for each product match.
      type: object
      description: Results for a product search request.
      id: GoogleCloudVisionV1p1beta1ProductSearchResults
    GoogleCloudVisionV1p3beta1Position:
      id: GoogleCloudVisionV1p3beta1Position
      description: >-
        A 3D position in the image, used primarily for Face detection landmarks.
        A valid Position must have both x and y coordinates. The position
        coordinates are in the same scale as the original image.
      type: object
      properties:
        'y':
          type: number
          format: float
          description: Y coordinate.
        x:
          description: X coordinate.
          format: float
          type: number
        z:
          type: number
          format: float
          description: Z coordinate (or depth).
    GoogleCloudVisionV1p4beta1ColorInfo:
      id: GoogleCloudVisionV1p4beta1ColorInfo
      properties:
        pixelFraction:
          type: number
          description: >-
            The fraction of pixels the color occupies in the image. Value in
            range [0, 1].
          format: float
        color:
          description: RGB components of the color.
          $ref: '#/components/schemas/Color'
        score:
          format: float
          type: number
          description: Image-specific score for this color. Value in range [0, 1].
      description: >-
        Color information consists of RGB channels, score, and the fraction of
        the image that the color occupies in the image.
      type: object
    ProductSet:
      id: ProductSet
      properties:
        indexTime:
          description: >-
            Output only. The time at which this ProductSet was last indexed.
            Query results will reflect all updates before this time. If this
            ProductSet has never been indexed, this timestamp is the default
            value "1970-01-01T00:00:00Z". This field is ignored when creating a
            ProductSet.
          format: google-datetime
          type: string
          readOnly: true
        name:
          type: string
          description: >-
            The resource name of the ProductSet. Format is:
            `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`.
            This field is ignored when creating a ProductSet.
        indexError:
          readOnly: true
          $ref: '#/components/schemas/Status'
          description: >-
            Output only. If there was an error with indexing the product set,
            the field is populated. This field is ignored when creating a
            ProductSet.
        displayName:
          description: >-
            The user-provided name for this ProductSet. Must not be empty. Must
            be at most 4096 characters long.
          type: string
      type: object
      description: >-
        A ProductSet contains Products. A ProductSet can contain a maximum of 1
        million reference images. If the limit is exceeded, periodic indexing
        will fail.
    GoogleCloudVisionV1p2beta1ProductSearchResults:
      description: Results for a product search request.
      type: object
      properties:
        results:
          type: array
          description: List of results, one for each product match.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsResult
        productGroupedResults:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult
          description: >-
            List of results grouped by products detected in the query image.
            Each entry corresponds to one bounding polygon in the query image,
            and contains the matching products specific to that region. There
            may be duplicate product matches in the union of all the per-product
            results.
        indexTime:
          format: google-datetime
          type: string
          description: >-
            Timestamp of the index which provided these results. Products added
            to the product set and products removed from the product set after
            this time are not reflected in the current results.
      id: GoogleCloudVisionV1p2beta1ProductSearchResults
    GoogleCloudVisionV1p2beta1Product:
      properties:
        productCategory:
          type: string
          description: >-
            Immutable. The category for the product identified by the reference
            image. This should be one of "homegoods-v2", "apparel-v2",
            "toys-v2", "packagedgoods-v1" or "general-v1". The legacy categories
            "homegoods", "apparel", and "toys" are still supported, but these
            should not be used for new products.
        displayName:
          description: >-
            The user-provided name for this Product. Must not be empty. Must be
            at most 4096 characters long.
          type: string
        description:
          description: >-
            User-provided metadata to be stored with this product. Must be at
            most 4096 characters long.
          type: string
        productLabels:
          description: >-
            Key-value pairs that can be attached to a product. At query time,
            constraints can be specified based on the product_labels. Note that
            integer values can be provided as strings, e.g. "1199". Only strings
            with integer values can match a range-based restriction which is to
            be supported soon. Multiple values can be assigned to the same key.
            One product may have up to 500 product_labels. Notice that the total
            number of distinct product_labels over all products in one
            ProductSet cannot exceed 1M, otherwise the product search pipeline
            will refuse to work for that ProductSet.
          items:
            $ref: '#/components/schemas/GoogleCloudVisionV1p2beta1ProductKeyValue'
          type: array
        name:
          description: >-
            The resource name of the product. Format is:
            `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This
            field is ignored when creating a product.
          type: string
      id: GoogleCloudVisionV1p2beta1Product
      description: A Product contains ReferenceImages.
      type: object
    GoogleCloudVisionV1p3beta1GcsSource:
      description: The Google Cloud Storage location where the input will be read from.
      type: object
      id: GoogleCloudVisionV1p3beta1GcsSource
      properties:
        uri:
          description: >-
            Google Cloud Storage URI for the input file. This must only be a
            Google Cloud Storage object. Wildcards are not currently supported.
          type: string
    GoogleCloudVisionV1p2beta1GcsSource:
      properties:
        uri:
          type: string
          description: >-
            Google Cloud Storage URI for the input file. This must only be a
            Google Cloud Storage object. Wildcards are not currently supported.
      type: object
      id: GoogleCloudVisionV1p2beta1GcsSource
      description: The Google Cloud Storage location where the input will be read from.
    GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation:
      properties:
        mid:
          type: string
          description: Object ID that should align with EntityAnnotation mid.
        languageCode:
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
          type: string
        boundingPoly:
          $ref: '#/components/schemas/GoogleCloudVisionV1p1beta1BoundingPoly'
          description: Image region to which this object belongs. This must be populated.
        score:
          type: number
          description: Score of the result. Range [0, 1].
          format: float
        name:
          type: string
          description: Object name, expressed in its `language_code` language.
      id: GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation
      description: Set of detected objects with bounding boxes.
      type: object
    GoogleCloudVisionV1p3beta1OutputConfig:
      description: The desired output location and metadata.
      type: object
      properties:
        gcsDestination:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1GcsDestination'
          description: The Google Cloud Storage location to write the output(s) to.
        batchSize:
          format: int32
          description: >-
            The max number of response protos to put into each output JSON file
            on Google Cloud Storage. The valid range is [1, 100]. If not
            specified, the default value is 20. For example, for one pdf file
            with 100 pages, 100 response protos will be generated. If
            `batch_size` = 20, then 5 json files each containing 20 response
            protos will be written under the prefix `gcs_destination`.`uri`.
            Currently, batch_size only applies to GcsDestination, with potential
            future support for other output configurations.
          type: integer
      id: GoogleCloudVisionV1p3beta1OutputConfig
    GoogleCloudVisionV1p2beta1Property:
      id: GoogleCloudVisionV1p2beta1Property
      properties:
        uint64Value:
          format: uint64
          description: Value of numeric properties.
          type: string
        name:
          description: Name of the property.
          type: string
        value:
          type: string
          description: Value of the property.
      description: A `Property` consists of a user-supplied name/value pair.
      type: object
    GoogleCloudVisionV1p4beta1OperationMetadata:
      description: Contains metadata for the BatchAnnotateImages operation.
      type: object
      properties:
        updateTime:
          type: string
          format: google-datetime
          description: The time when the operation result was last updated.
        createTime:
          format: google-datetime
          description: The time when the batch request was received.
          type: string
        state:
          description: Current state of the batch operation.
          type: string
          enumDescriptions:
            - Invalid.
            - Request is received.
            - Request is actively being processed.
            - The batch processing is done.
            - The batch processing was cancelled.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - DONE
            - CANCELLED
      id: GoogleCloudVisionV1p4beta1OperationMetadata
    GoogleCloudVisionV1p1beta1WebDetectionWebLabel:
      id: GoogleCloudVisionV1p1beta1WebDetectionWebLabel
      description: Label to provide extra metadata for the web detection.
      type: object
      properties:
        languageCode:
          description: >-
            The BCP-47 language code for `label`, such as "en-US" or "sr-Latn".
            For more information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
          type: string
        label:
          type: string
          description: Label for extra metadata.
    GoogleCloudVisionV1p3beta1ProductSearchResultsResult:
      description: Information about a product.
      type: object
      properties:
        image:
          type: string
          description: >-
            The resource name of the image from the product that is the closest
            match to the query.
        product:
          $ref: '#/components/schemas/GoogleCloudVisionV1p3beta1Product'
          description: The Product.
        score:
          description: >-
            A confidence level on the match, ranging from 0 (no confidence) to 1
            (full confidence).
          type: number
          format: float
      id: GoogleCloudVisionV1p3beta1ProductSearchResultsResult
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-vision: Apply machine learning models to understand and label images
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/operations/{operationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: vision.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: vision.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: vision.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: vision.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: vision.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/images:annotate:
    parameters: *ref_1
    post:
      description: Run image detection and annotation for a batch of images.
      operationId: vision.images.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateImagesResponse'
      parameters: []
      x-stackQL-resource: images
      x-stackQL-verb: exec
  /v1/images:asyncBatchAnnotate:
    parameters: *ref_1
    post:
      description: >-
        Run asynchronous image detection and annotation for a list of images.
        Progress and results can be retrieved through the
        `google.longrunning.Operations` interface. `Operation.metadata` contains
        `OperationMetadata` (metadata). `Operation.response` contains
        `AsyncBatchAnnotateImagesResponse` (results). This service will write
        image annotation outputs to json files in customer GCS bucket, each json
        file containing BatchAnnotateImagesResponse proto.
      operationId: vision.images.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: images
      x-stackQL-verb: exec
  /v1/files:asyncBatchAnnotate:
    parameters: *ref_1
    post:
      description: >-
        Run asynchronous image detection and annotation for a list of generic
        files, such as PDF files, which may contain multiple pages and multiple
        images per page. Progress and results can be retrieved through the
        `google.longrunning.Operations` interface. `Operation.metadata` contains
        `OperationMetadata` (metadata). `Operation.response` contains
        `AsyncBatchAnnotateFilesResponse` (results).
      operationId: vision.files.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /v1/files:annotate:
    parameters: *ref_1
    post:
      description: >-
        Service that performs image detection and annotation for a batch of
        files. Now only "application/pdf", "image/tiff" and "image/gif" are
        supported. This service will extract at most 5 (customers can specify
        which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or
        tiff) from each file provided and perform detection and annotation for
        each image extracted.
      operationId: vision.files.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateFilesResponse'
      parameters: []
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}:
    parameters: *ref_1
    delete:
      description: >-
        Permanently deletes a product and its reference images. Metadata of the
        product and all its images will be deleted right away, but search
        queries against ProductSets containing the product may still work until
        all related caches are refreshed.
      operationId: vision.projects.locations.products.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: delete
    patch:
      description: >-
        Makes changes to a Product resource. Only the `display_name`,
        `description`, and `labels` fields can be updated right now. If labels
        are updated, the change will not be reflected in queries until the next
        index time. Possible errors: * Returns NOT_FOUND if the Product does not
        exist. * Returns INVALID_ARGUMENT if display_name is present in
        update_mask but is missing from the request or longer than 4096
        characters. * Returns INVALID_ARGUMENT if description is present in
        update_mask but is longer than 4096 characters. * Returns
        INVALID_ARGUMENT if product_category is present in update_mask.
      operationId: vision.projects.locations.products.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: exec
    get:
      description: >-
        Gets information associated with a Product. Possible errors: * Returns
        NOT_FOUND if the Product does not exist.
      operationId: vision.projects.locations.products.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/products:
    parameters: *ref_1
    post:
      description: >-
        Creates and returns a new product resource. Possible errors: * Returns
        INVALID_ARGUMENT if display_name is missing or longer than 4096
        characters. * Returns INVALID_ARGUMENT if description is longer than
        4096 characters. * Returns INVALID_ARGUMENT if product_category is
        missing or invalid.
      operationId: vision.projects.locations.products.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: productId
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: insert
    get:
      description: >-
        Lists products in an unspecified order. Possible errors: * Returns
        INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
      operationId: vision.projects.locations.products.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: products
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/products:purge:
    parameters: *ref_1
    post:
      description: >-
        Asynchronous API to delete all Products in a ProductSet or all Products
        that are in no ProductSet. If a Product is a member of the specified
        ProductSet in addition to other ProductSets, the Product will still be
        deleted. It is recommended to not delete the specified ProductSet until
        after this operation has completed. It is also recommended to not add
        any of the Products involved in the batch delete to a new ProductSet
        while this operation is running because those Products may still end up
        deleted. It's not possible to undo the PurgeProducts operation.
        Therefore, it is recommended to keep the csv files used in
        ImportProductSets (if that was how you originally built the Product Set)
        before starting PurgeProducts, in case you need to re-import the data
        after deletion. If the plan is to purge all of the Products from a
        ProductSet and then re-use the empty ProductSet to re-import new
        Products into the empty ProductSet, you must wait until the
        PurgeProducts operation has finished for that ProductSet. The
        google.longrunning.Operation API can be used to keep track of the
        progress and results of the request. `Operation.metadata` contains
        `BatchOperationMetadata`. (progress)
      operationId: vision.projects.locations.products.purge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeProductsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}/referenceImages/{referenceImagesId}:
    parameters: *ref_1
    delete:
      description: >-
        Permanently deletes a reference image. The image metadata will be
        deleted right away, but search queries against ProductSets containing
        the image may still work until all related caches are refreshed. The
        actual image files are not deleted from Google Cloud Storage.
      operationId: vision.projects.locations.products.referenceImages.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: path
          name: referenceImagesId
          required: true
          schema:
            type: string
      x-stackQL-resource: reference_images
      x-stackQL-verb: delete
    get:
      description: >-
        Gets information associated with a ReferenceImage. Possible errors: *
        Returns NOT_FOUND if the specified image does not exist.
      operationId: vision.projects.locations.products.referenceImages.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceImage'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: path
          name: referenceImagesId
          required: true
          schema:
            type: string
      x-stackQL-resource: reference_images
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/products/{productsId}/referenceImages:
    parameters: *ref_1
    post:
      description: >-
        Creates and returns a new ReferenceImage resource. The `bounding_poly`
        field is optional. If `bounding_poly` is not specified, the system will
        try to detect regions of interest in the image that are compatible with
        the product_category on the parent product. If it is specified,
        detection is ALWAYS skipped. The system converts polygons into
        non-rotated rectangles. Note that the pipeline will resize the image if
        the image resolution is too large to process (above 50MP). Possible
        errors: * Returns INVALID_ARGUMENT if the image_uri is missing or longer
        than 4096 characters. * Returns INVALID_ARGUMENT if the product does not
        exist. * Returns INVALID_ARGUMENT if bounding_poly is not provided, and
        nothing compatible with the parent product's product_category is
        detected. * Returns INVALID_ARGUMENT if bounding_poly contains more than
        10 polygons.
      operationId: vision.projects.locations.products.referenceImages.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceImage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceImage'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: query
          name: referenceImageId
          schema:
            type: string
      x-stackQL-resource: reference_images
      x-stackQL-verb: insert
    get:
      description: >-
        Lists reference images. Possible errors: * Returns NOT_FOUND if the
        parent product does not exist. * Returns INVALID_ARGUMENT if the
        page_size is greater than 100, or less than 1.
      operationId: vision.projects.locations.products.referenceImages.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReferenceImagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: reference_images
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: vision.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}:removeProduct:
    parameters: *ref_1
    post:
      description: Removes a Product from the specified ProductSet.
      operationId: vision.projects.locations.productSets.removeProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveProductFromProductSetRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets__product
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}:addProduct:
    parameters: *ref_1
    post:
      description: >-
        Adds a Product to the specified ProductSet. If the Product is already
        present, no change is made. One Product can be added to at most 100
        ProductSets. Possible errors: * Returns NOT_FOUND if the Product or the
        ProductSet doesn't exist.
      operationId: vision.projects.locations.productSets.addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProductToProductSetRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets__product
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/productSets:import:
    parameters: *ref_1
    post:
      description: >-
        Asynchronous API that imports a list of reference images to specified
        product sets based on a list of image information. The
        google.longrunning.Operation API can be used to keep track of the
        progress and results of the request. `Operation.metadata` contains
        `BatchOperationMetadata`. (progress) `Operation.response` contains
        `ImportProductSetsResponse`. (results) The input source of this method
        is a csv file on Google Cloud Storage. For the format of the csv file
        please see ImportProductSetsGcsSource.csv_file_uri.
      operationId: vision.projects.locations.productSets.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportProductSetsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}:
    parameters: *ref_1
    patch:
      description: >-
        Makes changes to a ProductSet resource. Only display_name can be updated
        currently. Possible errors: * Returns NOT_FOUND if the ProductSet does
        not exist. * Returns INVALID_ARGUMENT if display_name is present in
        update_mask but missing from the request or longer than 4096 characters.
      operationId: vision.projects.locations.productSets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-verb: exec
    get:
      description: >-
        Gets information associated with a ProductSet. Possible errors: *
        Returns NOT_FOUND if the ProductSet does not exist.
      operationId: vision.projects.locations.productSets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-verb: select
    delete:
      description: >-
        Permanently deletes a ProductSet. Products and ReferenceImages in the
        ProductSet are not deleted. The actual image files are not deleted from
        Google Cloud Storage.
      operationId: vision.projects.locations.productSets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/productSets:
    parameters: *ref_1
    post:
      description: >-
        Creates and returns a new ProductSet resource. Possible errors: *
        Returns INVALID_ARGUMENT if display_name is missing, or is longer than
        4096 characters.
      operationId: vision.projects.locations.productSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: productSetId
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-verb: insert
    get:
      description: >-
        Lists ProductSets in an unspecified order. Possible errors: * Returns
        INVALID_ARGUMENT if page_size is greater than 100, or less than 1.
      operationId: vision.projects.locations.productSets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductSetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: product_sets
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/productSets/{productSetsId}/products:
    parameters: *ref_1
    get:
      description: >-
        Lists the Products in a ProductSet, in an unspecified order. If the
        ProductSet does not exist, the products field of the response will be
        empty. Possible errors: * Returns INVALID_ARGUMENT if page_size is
        greater than 100 or less than 1.
      operationId: vision.projects.locations.productSets.products.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsInProductSetResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: productSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: products
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/files:asyncBatchAnnotate:
    parameters: *ref_1
    post:
      description: >-
        Run asynchronous image detection and annotation for a list of generic
        files, such as PDF files, which may contain multiple pages and multiple
        images per page. Progress and results can be retrieved through the
        `google.longrunning.Operations` interface. `Operation.metadata` contains
        `OperationMetadata` (metadata). `Operation.response` contains
        `AsyncBatchAnnotateFilesResponse` (results).
      operationId: vision.projects.locations.files.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/files:annotate:
    parameters: *ref_1
    post:
      description: >-
        Service that performs image detection and annotation for a batch of
        files. Now only "application/pdf", "image/tiff" and "image/gif" are
        supported. This service will extract at most 5 (customers can specify
        which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or
        tiff) from each file provided and perform detection and annotation for
        each image extracted.
      operationId: vision.projects.locations.files.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/images:asyncBatchAnnotate:
    parameters: *ref_1
    post:
      description: >-
        Run asynchronous image detection and annotation for a list of images.
        Progress and results can be retrieved through the
        `google.longrunning.Operations` interface. `Operation.metadata` contains
        `OperationMetadata` (metadata). `Operation.response` contains
        `AsyncBatchAnnotateImagesResponse` (results). This service will write
        image annotation outputs to json files in customer GCS bucket, each json
        file containing BatchAnnotateImagesResponse proto.
      operationId: vision.projects.locations.images.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/images:annotate:
    parameters: *ref_1
    post:
      description: Run image detection and annotation for a batch of images.
      operationId: vision.projects.locations.images.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateImagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: vision.projects.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/images:asyncBatchAnnotate:
    parameters: *ref_1
    post:
      description: >-
        Run asynchronous image detection and annotation for a list of images.
        Progress and results can be retrieved through the
        `google.longrunning.Operations` interface. `Operation.metadata` contains
        `OperationMetadata` (metadata). `Operation.response` contains
        `AsyncBatchAnnotateImagesResponse` (results). This service will write
        image annotation outputs to json files in customer GCS bucket, each json
        file containing BatchAnnotateImagesResponse proto.
      operationId: vision.projects.images.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/images:annotate:
    parameters: *ref_1
    post:
      description: Run image detection and annotation for a batch of images.
      operationId: vision.projects.images.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateImagesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateImagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: images
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/files:asyncBatchAnnotate:
    parameters: *ref_1
    post:
      description: >-
        Run asynchronous image detection and annotation for a list of generic
        files, such as PDF files, which may contain multiple pages and multiple
        images per page. Progress and results can be retrieved through the
        `google.longrunning.Operations` interface. `Operation.metadata` contains
        `OperationMetadata` (metadata). `Operation.response` contains
        `AsyncBatchAnnotateFilesResponse` (results).
      operationId: vision.projects.files.asyncBatchAnnotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AsyncBatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/files:annotate:
    parameters: *ref_1
    post:
      description: >-
        Service that performs image detection and annotation for a batch of
        files. Now only "application/pdf", "image/tiff" and "image/gif" are
        supported. This service will extract at most 5 (customers can specify
        which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or
        tiff) from each file provided and perform detection and annotation for
        each image extracted.
      operationId: vision.projects.files.annotate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchAnnotateFilesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-vision
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-vision
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchAnnotateFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: exec
