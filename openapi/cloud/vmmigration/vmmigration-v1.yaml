openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: VM Migration API
  description: >-
    Use the Migrate to Virtual Machines API to programmatically migrate
    workloads. 
  version: v1
  x-discovery-doc-revision: '20230615'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/migrate/virtual-machines
servers:
  - url: https://vmmigration.googleapis.com
components:
  schemas:
    TargetProject:
      id: TargetProject
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          description: >-
            Output only. The time this target project resource was created (not
            related to when the Compute Engine project it points to was
            created).
          type: string
        project:
          description: The target project ID (number) or project name.
          type: string
        description:
          type: string
          description: The target project's description.
        name:
          type: string
          readOnly: true
          description: Output only. The name of the target project.
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The last time the target project resource was updated.
          readOnly: true
      type: object
      description: >-
        TargetProject message represents a target Compute Engine project for a
        migration or a clone.
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: Status
      type: object
      properties:
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        code:
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
        details:
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      type: object
      id: ListOperationsResponse
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: >-
            A list of operations that matches the specified filter in the
            request.
    UpgradeApplianceRequest:
      properties:
        requestId:
          description: >-
            A request ID to identify requests. Specify a unique request ID so
            that if you must retry your request, the server will know to ignore
            the request if it has already been completed. The server will
            guarantee that for at least 60 minutes after the first request. For
            example, consider a situation where you make an initial request and
            the request times out. If you make the request again with the same
            request ID, the server can check if original operation with the same
            request ID was received, and if so, will ignore the second request.
            This prevents clients from accidentally creating duplicate
            commitments. The request ID must be a valid UUID with the exception
            that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
      id: UpgradeApplianceRequest
      type: object
      description: Request message for 'UpgradeAppliance' request.
    VmUtilizationMetrics:
      id: VmUtilizationMetrics
      description: Utilization metrics values for a single VM.
      type: object
      properties:
        memoryAveragePercent:
          format: int32
          type: integer
          description: Average memory usage, percent.
        diskIoRateAverageKbps:
          format: int64
          description: Average disk IO rate, in kilobytes per second.
          type: string
        networkThroughputAverageKbps:
          format: int64
          description: >-
            Average network throughput (combined transmit-rates and
            receive-rates), in kilobytes per second.
          type: string
        cpuMaxPercent:
          type: integer
          description: Max CPU usage, percent.
          format: int32
        memoryMaxPercent:
          description: Max memory usage, percent.
          type: integer
          format: int32
        diskIoRateMaxKbps:
          type: string
          description: Max disk IO rate, in kilobytes per second.
          format: int64
        networkThroughputMaxKbps:
          format: int64
          type: string
          description: >-
            Max network throughput (combined transmit-rates and receive-rates),
            in kilobytes per second.
        cpuAveragePercent:
          type: integer
          description: Average CPU usage, percent.
          format: int32
    AwsVmDetails:
      properties:
        sourceDescription:
          description: The descriptive name of the AWS's source this VM is connected to.
          type: string
        virtualizationType:
          description: The virtualization type.
          enumDescriptions:
            - The virtualization type is unknown.
            - The virtualziation type is HVM.
            - The virtualziation type is PARAVIRTUAL.
          type: string
          enum:
            - VM_VIRTUALIZATION_TYPE_UNSPECIFIED
            - HVM
            - PARAVIRTUAL
        memoryMb:
          type: integer
          format: int32
          description: The memory size of the VM in MB.
        powerState:
          description: Output only. The power state of the VM at the moment list was taken.
          type: string
          readOnly: true
          enumDescriptions:
            - Power state is not specified.
            - The VM is turned on.
            - The VM is turned off.
            - The VM is suspended. This is similar to hibernation or sleep mode.
            - The VM is starting.
          enum:
            - POWER_STATE_UNSPECIFIED
            - 'ON'
            - 'OFF'
            - SUSPENDED
            - PENDING
        cpuCount:
          type: integer
          description: The number of cpus the VM has.
          format: int32
        securityGroups:
          items:
            $ref: '#/components/schemas/AwsSecurityGroup'
          type: array
          description: The security groups the VM belongs to.
        zone:
          description: The AWS zone of the VM.
          type: string
        committedStorageMb:
          type: string
          description: The total size of the storage allocated to the VM in MB.
          format: int64
        bootOption:
          description: The VM Boot Option.
          enum:
            - BOOT_OPTION_UNSPECIFIED
            - EFI
            - BIOS
          type: string
          enumDescriptions:
            - The boot option is unknown.
            - The boot option is UEFI.
            - The boot option is LEGACY-BIOS.
        displayName:
          description: >-
            The display name of the VM. Note that this value is not necessarily
            unique.
          type: string
        sourceId:
          type: string
          description: The id of the AWS's source this VM is connected to.
        vpcId:
          type: string
          description: The VPC ID the VM belongs to.
        osDescription:
          type: string
          description: The VM's OS.
        vmId:
          description: The VM ID in AWS.
          type: string
        tags:
          additionalProperties:
            type: string
          description: The tags of the VM.
          type: object
        diskCount:
          description: The number of disks the VM has.
          type: integer
          format: int32
        instanceType:
          description: The instance type of the VM.
          type: string
        architecture:
          enum:
            - VM_ARCHITECTURE_UNSPECIFIED
            - I386
            - X86_64
            - ARM64
            - X86_64_MAC
          description: The CPU architecture.
          type: string
          enumDescriptions:
            - The architecture is unknown.
            - The architecture is I386.
            - The architecture is X86_64.
            - The architecture is ARM64.
            - The architecture is X86_64_MAC.
      description: AwsVmDetails describes a VM in AWS.
      id: AwsVmDetails
      type: object
    ShuttingDownSourceVMStep:
      id: ShuttingDownSourceVMStep
      properties: {}
      description: ShuttingDownSourceVMStep contains specific step details.
      type: object
    AdaptingOSStep:
      id: AdaptingOSStep
      type: object
      properties: {}
      description: AdaptingOSStep contains specific step details.
    AccessKeyCredentials:
      properties:
        sessionToken:
          description: >-
            Input only. AWS session token. Used only when AWS security token
            service (STS) is responsible for creating the temporary credentials.
          type: string
        accessKeyId:
          description: AWS access key ID.
          type: string
        secretAccessKey:
          description: Input only. AWS secret access key.
          type: string
      id: AccessKeyCredentials
      type: object
      description: Message describing AWS Credentials using access key id and secret.
    MigrationError:
      type: object
      properties:
        actionItem:
          $ref: '#/components/schemas/LocalizedMessage'
          readOnly: true
          description: Output only. Suggested action for solving the error.
        helpLinks:
          items:
            $ref: '#/components/schemas/Link'
          description: >-
            Output only. URL(s) pointing to additional information on handling
            the current error.
          readOnly: true
          type: array
        errorMessage:
          $ref: '#/components/schemas/LocalizedMessage'
          description: Output only. The localized error message.
          readOnly: true
        code:
          readOnly: true
          type: string
          description: Output only. The error code.
          enumDescriptions:
            - Default value. This value is not used.
            - Migrate for Compute encountered an unknown error.
            - >-
              Migrate for Compute encountered an error while validating
              replication source health.
            - >-
              Migrate for Compute encountered an error during source data
              operation.
            - >-
              Migrate for Compute encountered an error during target data
              operation.
            - Migrate for Compute encountered an error during OS adaptation.
            - Migrate for Compute encountered an error in clone operation.
            - Migrate for Compute encountered an error in cutover operation.
            - >-
              Migrate for Compute encountered an error during utilization report
              creation.
            - Migrate for Compute encountered an error during appliance upgrade.
          enum:
            - ERROR_CODE_UNSPECIFIED
            - UNKNOWN_ERROR
            - SOURCE_VALIDATION_ERROR
            - SOURCE_REPLICATION_ERROR
            - TARGET_REPLICATION_ERROR
            - OS_ADAPTATION_ERROR
            - CLONE_ERROR
            - CUTOVER_ERROR
            - UTILIZATION_REPORT_ERROR
            - APPLIANCE_UPGRADE_ERROR
        errorTime:
          format: google-datetime
          description: Output only. The time the error occurred.
          readOnly: true
          type: string
      description: >-
        Represents migration resource error information that can be used with
        google.rpc.Status message. MigrationError is used to present the user
        with error information in migration operations.
      id: MigrationError
    CancelCloneJobRequest:
      description: Request message for 'CancelCloneJob' request.
      type: object
      id: CancelCloneJobRequest
      properties: {}
    DatacenterConnector:
      properties:
        state:
          enumDescriptions:
            - >-
              The state is unknown. This is used for API compatibility only and
              is not used by the system.
            - The state was not sampled by the health checks yet.
            - The source was sampled by health checks and is not available.
            - >-
              The source is available but might not be usable yet due to
              unvalidated credentials or another reason. The credentials
              referred to are the ones to the Source. The error message will
              contain further details.
            - The source exists and its credentials were verified.
          description: >-
            Output only. State of the DatacenterConnector, as determined by the
            health checks.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - OFFLINE
            - FAILED
            - ACTIVE
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
          description: Output only. The connector's name.
        stateTime:
          description: Output only. The time the state was last set.
          format: google-datetime
          readOnly: true
          type: string
        version:
          type: string
          description: >-
            The version running in the DatacenterConnector. This is supplied by
            the OVA connector during the registration process and can not be
            modified.
        applianceInfrastructureVersion:
          type: string
          description: >-
            Output only. Appliance OVA version. This is the OVA which is
            manually installed by the user and contains the infrastructure for
            the automatically updatable components on the appliance.
          readOnly: true
        error:
          description: >-
            Output only. Provides details on the state of the Datacenter
            Connector in case of an error.
          readOnly: true
          $ref: '#/components/schemas/Status'
        bucket:
          type: string
          description: >-
            Output only. The communication channel between the datacenter
            connector and Google Cloud.
          readOnly: true
        updateTime:
          type: string
          description: >-
            Output only. The last time the connector was updated with an API
            call.
          readOnly: true
          format: google-datetime
        upgradeStatus:
          readOnly: true
          $ref: '#/components/schemas/UpgradeStatus'
          description: >-
            Output only. The status of the current / last upgradeAppliance
            operation.
        applianceSoftwareVersion:
          readOnly: true
          description: >-
            Output only. Appliance last installed update bundle version. This is
            the version of the automatically updatable components on the
            appliance.
          type: string
        registrationId:
          type: string
          description: >-
            Immutable. A unique key for this connector. This key is internal to
            the OVA connector and is supplied with its creation during the
            registration process and can not be modified.
        availableVersions:
          readOnly: true
          $ref: '#/components/schemas/AvailableUpdates'
          description: Output only. The available versions for updating this appliance.
        serviceAccount:
          type: string
          description: >-
            The service account to use in the connector when communicating with
            the cloud.
        createTime:
          readOnly: true
          description: >-
            Output only. The time the connector was created (as an API call, not
            when it was actually installed).
          format: google-datetime
          type: string
      type: object
      id: DatacenterConnector
      description: >-
        DatacenterConnector message describes a connector between the Source and
        Google Cloud, which is installed on a vmware datacenter (an OVA vm
        installed by the user) to connect the Datacenter to Google Cloud and
        support vm migration data transfer.
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
          description: >-
            A list of locations that matches the specified filter in the
            request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      type: object
      id: ListLocationsResponse
    ReplicationSync:
      id: ReplicationSync
      type: object
      description: >-
        ReplicationSync contain information about the last replica sync to the
        cloud.
      properties:
        lastSyncTime:
          description: >-
            The most updated snapshot created time in the source that finished
            replication.
          type: string
          format: google-datetime
    VmwareSourceDetails:
      id: VmwareSourceDetails
      properties:
        password:
          description: >-
            Input only. The credentials password. This is write only and can not
            be read in a GET operation.
          type: string
        resolvedVcenterHost:
          type: string
          description: The hostname of the vcenter.
        vcenterIp:
          type: string
          description: The ip address of the vcenter this Source represents.
        thumbprint:
          description: The thumbprint representing the certificate for the vcenter.
          type: string
        username:
          type: string
          description: The credentials username.
      description: >-
        VmwareSourceDetails message describes a specific source details for the
        vmware source type.
      type: object
    AwsVmsDetails:
      type: object
      id: AwsVmsDetails
      description: AWSVmsDetails describes VMs in AWS.
      properties:
        details:
          description: The details of the AWS VMs.
          type: array
          items:
            $ref: '#/components/schemas/AwsVmDetails'
    CutoverStep:
      properties:
        preparingVmDisks:
          description: Preparing VM disks step.
          $ref: '#/components/schemas/PreparingVMDisksStep'
        shuttingDownSourceVm:
          description: Shutting down VM step.
          $ref: '#/components/schemas/ShuttingDownSourceVMStep'
        finalSync:
          description: Final sync step.
          $ref: '#/components/schemas/ReplicationCycle'
        previousReplicationCycle:
          description: A replication cycle prior cutover step.
          $ref: '#/components/schemas/ReplicationCycle'
        startTime:
          format: google-datetime
          description: The time the step has started.
          type: string
        endTime:
          description: The time the step has ended.
          format: google-datetime
          type: string
        instantiatingMigratedVm:
          description: Instantiating migrated VM step.
          $ref: '#/components/schemas/InstantiatingMigratedVMStep'
      id: CutoverStep
      type: object
      description: CutoverStep holds information about the cutover step progress.
    ListMigratingVmsResponse:
      type: object
      properties:
        nextPageToken:
          description: >-
            Output only. A token, which can be sent as `page_token` to retrieve
            the next page. If this field is omitted, there are no subsequent
            pages.
          type: string
          readOnly: true
        migratingVms:
          readOnly: true
          items:
            $ref: '#/components/schemas/MigratingVm'
          type: array
          description: Output only. The list of Migrating VMs response.
        unreachable:
          readOnly: true
          items:
            type: string
          description: Output only. Locations that could not be reached.
          type: array
      id: ListMigratingVmsResponse
      description: Response message for 'ListMigratingVms' request.
    CycleStep:
      id: CycleStep
      properties:
        startTime:
          type: string
          format: google-datetime
          description: The time the cycle step has started.
        postProcessing:
          description: Post processing step.
          $ref: '#/components/schemas/PostProcessingStep'
        replicating:
          $ref: '#/components/schemas/ReplicatingStep'
          description: Replicating step.
        endTime:
          type: string
          description: The time the cycle step has ended.
          format: google-datetime
        initializingReplication:
          $ref: '#/components/schemas/InitializingReplicationStep'
          description: Initializing replication step.
      description: CycleStep holds information about a step progress.
      type: object
    ListCloneJobsResponse:
      type: object
      id: ListCloneJobsResponse
      description: Response message for 'ListCloneJobs' request.
      properties:
        nextPageToken:
          readOnly: true
          description: >-
            Output only. A token, which can be sent as `page_token` to retrieve
            the next page. If this field is omitted, there are no subsequent
            pages.
          type: string
        cloneJobs:
          readOnly: true
          type: array
          description: Output only. The list of clone jobs response.
          items:
            $ref: '#/components/schemas/CloneJob'
        unreachable:
          readOnly: true
          description: Output only. Locations that could not be reached.
          type: array
          items:
            type: string
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      id: OperationMetadata
      type: object
      properties:
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
        verb:
          readOnly: true
          type: string
          description: Output only. Name of the verb executed by the operation.
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          type: string
          readOnly: true
        apiVersion:
          readOnly: true
          type: string
          description: Output only. API version used to start the operation.
        target:
          readOnly: true
          type: string
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          type: boolean
          readOnly: true
    ComputeEngineTargetDefaults:
      description: >-
        ComputeEngineTargetDefaults is a collection of details for creating a VM
        in a target Compute Engine project.
      type: object
      id: ComputeEngineTargetDefaults
      properties:
        computeScheduling:
          description: Compute instance scheduling information (if empty default is used).
          $ref: '#/components/schemas/ComputeScheduling'
        additionalLicenses:
          items:
            type: string
          description: Additional licenses to assign to the VM.
          type: array
        vmName:
          description: The name of the VM to create.
          type: string
        bootOption:
          enum:
            - COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED
            - COMPUTE_ENGINE_BOOT_OPTION_EFI
            - COMPUTE_ENGINE_BOOT_OPTION_BIOS
          description: Output only. The VM Boot Option, as set in the source vm.
          type: string
          readOnly: true
          enumDescriptions:
            - The boot option is unknown.
            - The boot option is EFI.
            - The boot option is BIOS.
        licenseType:
          type: string
          description: The license type to use in OS adaptation.
          enum:
            - COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT
            - COMPUTE_ENGINE_LICENSE_TYPE_PAYG
            - COMPUTE_ENGINE_LICENSE_TYPE_BYOL
          enumDescriptions:
            - The license type is the default for the OS.
            - The license type is Pay As You Go license type.
            - The license type is Bring Your Own License type.
        metadata:
          additionalProperties:
            type: string
          description: The metadata key/value pairs to assign to the VM.
          type: object
        networkInterfaces:
          items:
            $ref: '#/components/schemas/NetworkInterface'
          description: List of NICs connected to this VM.
          type: array
        machineType:
          description: The machine type to create the VM with.
          type: string
        networkTags:
          description: A map of network tags to associate with the VM.
          type: array
          items:
            type: string
        hostname:
          description: The hostname to assign to the VM.
          type: string
        labels:
          description: A map of labels to associate with the VM.
          additionalProperties:
            type: string
          type: object
        serviceAccount:
          type: string
          description: The service account to associate the VM with.
        diskType:
          type: string
          description: The disk type to use in the VM.
          enumDescriptions:
            - An unspecified disk type. Will be used as STANDARD.
            - A Standard disk type.
            - SSD hard disk type.
            - >-
              An alternative to SSD persistent disks that balance performance
              and cost.
          enum:
            - COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED
            - COMPUTE_ENGINE_DISK_TYPE_STANDARD
            - COMPUTE_ENGINE_DISK_TYPE_SSD
            - COMPUTE_ENGINE_DISK_TYPE_BALANCED
        machineTypeSeries:
          description: The machine type series to create the VM with.
          type: string
        zone:
          type: string
          description: The zone in which to create the VM.
        secureBoot:
          type: boolean
          description: >-
            Defines whether the instance has Secure Boot enabled. This can be
            set to true only if the vm boot option is EFI.
        appliedLicense:
          readOnly: true
          $ref: '#/components/schemas/AppliedLicense'
          description: >-
            Output only. The OS license returned from the adaptation module
            report.
        targetProject:
          type: string
          description: >-
            The full path of the resource of type TargetProject which represents
            the Compute Engine project in which to create this VM.
    ComputeScheduling:
      id: ComputeScheduling
      properties:
        onHostMaintenance:
          enum:
            - ON_HOST_MAINTENANCE_UNSPECIFIED
            - TERMINATE
            - MIGRATE
          type: string
          enumDescriptions:
            - An unknown, unexpected behavior.
            - >-
              Terminate the instance when the host machine undergoes
              maintenance.
            - Migrate the instance when the host machine undergoes maintenance.
          description: >-
            How the instance should behave when the host machine undergoes
            maintenance that may temporarily impact instance performance.
        nodeAffinities:
          type: array
          description: >-
            A set of node affinity and anti-affinity configurations for sole
            tenant nodes.
          items:
            $ref: '#/components/schemas/SchedulingNodeAffinity'
        minNodeCpus:
          format: int32
          type: integer
          description: >-
            The minimum number of virtual CPUs this instance will consume when
            running on a sole-tenant node. Ignored if no node_affinites are
            configured.
        restartType:
          description: >-
            Whether the Instance should be automatically restarted whenever it
            is terminated by Compute Engine (not terminated by user). This
            configuration is identical to `automaticRestart` field in Compute
            Engine create instance under scheduling. It was changed to an enum
            (instead of a boolean) to match the default value in Compute Engine
            which is automatic restart.
          enumDescriptions:
            - Unspecified behavior. This will use the default.
            - >-
              The Instance should be automatically restarted whenever it is
              terminated by Compute Engine.
            - >-
              The Instance isn't automatically restarted whenever it is
              terminated by Compute Engine.
          type: string
          enum:
            - RESTART_TYPE_UNSPECIFIED
            - AUTOMATIC_RESTART
            - NO_AUTOMATIC_RESTART
      description: >-
        Scheduling information for VM on maintenance/restart behaviour and node
        allocation in sole tenant nodes.
      type: object
    AwsSecurityGroup:
      type: object
      properties:
        id:
          type: string
          description: The AWS security group id.
        name:
          description: The AWS security group name.
          type: string
      description: AwsSecurityGroup describes a security group of an AWS VM.
      id: AwsSecurityGroup
    MigrationWarning:
      id: MigrationWarning
      description: >-
        Represents migration resource warning information that can be used with
        google.rpc.Status message. MigrationWarning is used to present the user
        with warning information in migration operations.
      properties:
        actionItem:
          description: Suggested action for solving the warning.
          $ref: '#/components/schemas/LocalizedMessage'
        warningTime:
          type: string
          format: google-datetime
          description: The time the warning occurred.
        helpLinks:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          description: >-
            URL(s) pointing to additional information on handling the current
            warning.
        code:
          enumDescriptions:
            - Default value. This value is not used.
            - A warning originated from OS Adaptation.
          description: The warning code.
          type: string
          enum:
            - WARNING_CODE_UNSPECIFIED
            - ADAPTATION_WARNING
        warningMessage:
          description: The localized warning message.
          $ref: '#/components/schemas/LocalizedMessage'
      type: object
    CancelCutoverJobRequest:
      id: CancelCutoverJobRequest
      properties: {}
      description: Request message for 'CancelCutoverJob' request.
      type: object
    AddGroupMigrationRequest:
      id: AddGroupMigrationRequest
      properties:
        migratingVm:
          type: string
          description: The full path name of the MigratingVm to add.
      description: Request message for 'AddGroupMigration' request.
      type: object
    AwsSourceVmDetails:
      description: Represent the source AWS VM details.
      id: AwsSourceVmDetails
      properties:
        committedStorageBytes:
          format: int64
          description: The total size of the disks being migrated in bytes.
          type: string
        disks:
          type: array
          description: The disks attached to the source VM.
          items:
            $ref: '#/components/schemas/AwsDiskDetails'
        firmware:
          enumDescriptions:
            - The firmware is unknown.
            - The firmware is EFI.
            - The firmware is BIOS.
          type: string
          description: The firmware type of the source VM.
          enum:
            - FIRMWARE_UNSPECIFIED
            - EFI
            - BIOS
      type: object
    ListGroupsResponse:
      id: ListGroupsResponse
      type: object
      description: Response message for 'ListGroups' request.
      properties:
        groups:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Group'
          description: Output only. The list of groups response.
        unreachable:
          description: Output only. Locations that could not be reached.
          items:
            type: string
          type: array
          readOnly: true
        nextPageToken:
          description: >-
            Output only. A token, which can be sent as `page_token` to retrieve
            the next page. If this field is omitted, there are no subsequent
            pages.
          readOnly: true
          type: string
    CloneStep:
      description: CloneStep holds information about the clone step progress.
      id: CloneStep
      type: object
      properties:
        preparingVmDisks:
          description: Preparing VM disks step.
          $ref: '#/components/schemas/PreparingVMDisksStep'
        adaptingOs:
          description: Adapting OS step.
          $ref: '#/components/schemas/AdaptingOSStep'
        instantiatingMigratedVm:
          description: Instantiating migrated VM step.
          $ref: '#/components/schemas/InstantiatingMigratedVMStep'
        endTime:
          format: google-datetime
          type: string
          description: The time the step has ended.
        startTime:
          description: The time the step has started.
          type: string
          format: google-datetime
    ListCutoverJobsResponse:
      type: object
      properties:
        cutoverJobs:
          items:
            $ref: '#/components/schemas/CutoverJob'
          readOnly: true
          description: Output only. The list of cutover jobs response.
          type: array
        nextPageToken:
          type: string
          description: >-
            Output only. A token, which can be sent as `page_token` to retrieve
            the next page. If this field is omitted, there are no subsequent
            pages.
          readOnly: true
        unreachable:
          type: array
          items:
            type: string
          description: Output only. Locations that could not be reached.
          readOnly: true
      id: ListCutoverJobsResponse
      description: Response message for 'ListCutoverJobs' request.
    AwsDiskDetails:
      properties:
        volumeId:
          type: string
          description: AWS volume ID.
        diskNumber:
          format: int32
          type: integer
          description: The ordinal number of the disk.
        sizeGb:
          format: int64
          description: Size in GB.
          type: string
      description: The details of an AWS instance disk.
      id: AwsDiskDetails
      type: object
    ResumeMigrationRequest:
      description: Request message for 'ResumeMigration' request.
      properties: {}
      type: object
      id: ResumeMigrationRequest
    SchedulePolicy:
      type: object
      properties:
        idleDuration:
          type: string
          description: The idle duration between replication stages.
          format: google-duration
        skipOsAdaptation:
          type: boolean
          description: >-
            A flag to indicate whether to skip OS adaptation during the
            replication sync. OS adaptation is a process where the VM's
            operating system undergoes changes and adaptations to fully function
            on Compute Engine.
      id: SchedulePolicy
      description: A policy for scheduling replications.
    AvailableUpdates:
      properties:
        inPlaceUpdate:
          description: >-
            The latest version for in place update. The current appliance can be
            updated to this version using the API or m4c CLI.
          $ref: '#/components/schemas/ApplianceVersion'
        newDeployableAppliance:
          $ref: '#/components/schemas/ApplianceVersion'
          description: >-
            The newest deployable version of the appliance. The current
            appliance can't be updated into this version, and the owner must
            manually deploy this OVA to a new appliance.
      description: Holds informatiom about the available versions for upgrade.
      id: AvailableUpdates
      type: object
    AwsSourceDetails:
      type: object
      id: AwsSourceDetails
      properties:
        inventorySecurityGroupNames:
          type: array
          items:
            type: string
          description: AWS security group names to limit the scope of the source inventory.
        error:
          description: >-
            Output only. Provides details on the state of the Source in case of
            an error.
          $ref: '#/components/schemas/Status'
          readOnly: true
        awsRegion:
          description: Immutable. The AWS region that the source VMs will be migrated from.
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - FAILED
            - ACTIVE
          type: string
          description: Output only. State of the source as determined by the health check.
          enumDescriptions:
            - >-
              The state is unknown. This is used for API compatibility only and
              is not used by the system.
            - The state was not sampled by the health checks yet.
            - >-
              The source is available but might not be usable yet due to invalid
              credentials or another reason. The error message will contain
              further details.
            - The source exists and its credentials were verified.
          readOnly: true
        publicIp:
          readOnly: true
          description: >-
            Output only. The source's public IP. All communication initiated by
            this source will originate from this IP.
          type: string
        migrationResourcesUserTags:
          additionalProperties:
            type: string
          description: >-
            User specified tags to add to every M2VM generated resource in AWS.
            These tags will be set in addition to the default tags that are set
            as part of the migration process. The tags must not begin with the
            reserved prefix `m2vm`.
          type: object
        accessKeyCreds:
          $ref: '#/components/schemas/AccessKeyCredentials'
          description: AWS Credentials using access key id and secret.
        inventoryTagList:
          items:
            $ref: '#/components/schemas/Tag'
          description: AWS resource tags to limit the scope of the source inventory.
          type: array
      description: >-
        AwsSourceDetails message describes a specific source details for the AWS
        source type.
    RemoveGroupMigrationRequest:
      id: RemoveGroupMigrationRequest
      description: Request message for 'RemoveMigration' request.
      type: object
      properties:
        migratingVm:
          description: The MigratingVm to remove.
          type: string
    Tag:
      type: object
      id: Tag
      properties:
        key:
          type: string
          description: Key of tag.
        value:
          type: string
          description: Value of tag.
      description: Tag is an AWS tag representation.
    FetchInventoryResponse:
      description: Response message for fetchInventory.
      type: object
      properties:
        vmwareVms:
          $ref: '#/components/schemas/VmwareVmsDetails'
          description: The description of the VMs in a Source of type Vmware.
        nextPageToken:
          readOnly: true
          type: string
          description: >-
            Output only. A token, which can be sent as `page_token` to retrieve
            the next page. If this field is omitted, there are no subsequent
            pages.
        updateTime:
          description: >-
            Output only. The timestamp when the source was last queried (if the
            result is from the cache).
          readOnly: true
          type: string
          format: google-datetime
        awsVms:
          $ref: '#/components/schemas/AwsVmsDetails'
          description: The description of the VMs in a Source of type AWS.
      id: FetchInventoryResponse
    LocalizedMessage:
      id: LocalizedMessage
      properties:
        locale:
          description: >-
            The locale used following the specification defined at
            https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Examples are: "en-US",
            "fr-CH", "es-MX"
          type: string
        message:
          description: The localized error message in the above locale.
          type: string
      type: object
      description: >-
        Provides a localized error message that is safe to return to the user
        which can be attached to an RPC error.
    AppliedLicense:
      properties:
        type:
          type: string
          description: The license type that was used in OS adaptation.
          enumDescriptions:
            - Unspecified license for the OS.
            - No license available for the OS.
            - The license type is Pay As You Go license type.
            - The license type is Bring Your Own License type.
          enum:
            - TYPE_UNSPECIFIED
            - NONE
            - PAYG
            - BYOL
        osLicense:
          description: The OS license returned from the adaptation module's report.
          type: string
      description: >-
        AppliedLicense holds the license data returned by adaptation module
        report.
      type: object
      id: AppliedLicense
    ListReplicationCyclesResponse:
      properties:
        unreachable:
          readOnly: true
          items:
            type: string
          description: Output only. Locations that could not be reached.
          type: array
        nextPageToken:
          type: string
          description: >-
            Output only. A token, which can be sent as `page_token` to retrieve
            the next page. If this field is omitted, there are no subsequent
            pages.
          readOnly: true
        replicationCycles:
          readOnly: true
          items:
            $ref: '#/components/schemas/ReplicationCycle'
          type: array
          description: Output only. The list of replication cycles response.
      description: Response message for 'ListReplicationCycles' request.
      type: object
      id: ListReplicationCyclesResponse
    Location:
      description: A resource that represents a Google Cloud location.
      type: object
      id: Location
      properties:
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        labels:
          additionalProperties:
            type: string
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
        name:
          type: string
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
    Link:
      properties:
        description:
          type: string
          description: Describes what the link offers.
        url:
          type: string
          description: The URL of the link.
      type: object
      description: Describes a URL link.
      id: Link
    FinalizeMigrationRequest:
      id: FinalizeMigrationRequest
      type: object
      properties: {}
      description: Request message for 'FinalizeMigration' request.
    ListTargetProjectsResponse:
      properties:
        targetProjects:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TargetProject'
          description: Output only. The list of target response.
        nextPageToken:
          type: string
          readOnly: true
          description: >-
            Output only. A token, which can be sent as `page_token` to retrieve
            the next page. If this field is omitted, there are no subsequent
            pages.
        unreachable:
          readOnly: true
          items:
            type: string
          type: array
          description: Output only. Locations that could not be reached.
      id: ListTargetProjectsResponse
      type: object
      description: Response message for 'ListTargetProjects' call.
    InstantiatingMigratedVMStep:
      type: object
      description: InstantiatingMigratedVMStep contains specific step details.
      id: InstantiatingMigratedVMStep
      properties: {}
    PostProcessingStep:
      id: PostProcessingStep
      properties: {}
      type: object
      description: PostProcessingStep contains specific step details.
    MigratingVm:
      id: MigratingVm
      properties:
        computeEngineTargetDefaults:
          $ref: '#/components/schemas/ComputeEngineTargetDefaults'
          description: Details of the target VM in Compute Engine.
        cutoverForecast:
          $ref: '#/components/schemas/CutoverForecast'
          description: >-
            Output only. Provides details of future CutoverJobs of a
            MigratingVm. Set to empty when cutover forecast is unavailable.
          readOnly: true
        stateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The last time the migrating VM state was updated.
        recentCloneJobs:
          items:
            $ref: '#/components/schemas/CloneJob'
          description: >-
            Output only. The recent clone jobs performed on the migrating VM.
            This field holds the vm's last completed clone job and the vm's
            running clone job, if one exists. Note: To have this field populated
            you need to explicitly request it via the "view" parameter of the
            Get/List request.
          type: array
          readOnly: true
        displayName:
          description: The display name attached to the MigratingVm by the user.
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels of the migrating VM.
          type: object
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The last time the migrating VM resource was updated.
          readOnly: true
        policy:
          description: The replication schedule policy.
          $ref: '#/components/schemas/SchedulePolicy'
        createTime:
          description: >-
            Output only. The time the migrating VM was created (this refers to
            this resource and not to the time it was installed in the source).
          readOnly: true
          type: string
          format: google-datetime
        awsSourceVmDetails:
          description: Output only. Details of the VM from an AWS source.
          $ref: '#/components/schemas/AwsSourceVmDetails'
          readOnly: true
        lastSync:
          readOnly: true
          description: >-
            Output only. The most updated snapshot created time in the source
            that finished replication.
          $ref: '#/components/schemas/ReplicationSync'
        group:
          description: >-
            Output only. The group this migrating vm is included in, if any. The
            group is represented by the full path of the appropriate Group
            resource.
          readOnly: true
          type: string
        recentCutoverJobs:
          description: >-
            Output only. The recent cutover jobs performed on the migrating VM.
            This field holds the vm's last completed cutover job and the vm's
            running cutover job, if one exists. Note: To have this field
            populated you need to explicitly request it via the "view" parameter
            of the Get/List request.
          items:
            $ref: '#/components/schemas/CutoverJob'
          readOnly: true
          type: array
        sourceVmId:
          type: string
          description: >-
            The unique ID of the VM in the source. The VM's name in vSphere can
            be changed, so this is not the VM's name but rather its moRef id.
            This id is of the form vm-.
        description:
          description: The description attached to the migrating VM by the user.
          type: string
        lastReplicationCycle:
          $ref: '#/components/schemas/ReplicationCycle'
          description: >-
            Output only. Details of the last replication cycle. This will be
            updated whenever a replication cycle is finished and is not to be
            confused with last_sync which is only updated on successful
            replication cycles.
          readOnly: true
        name:
          readOnly: true
          type: string
          description: Output only. The identifier of the MigratingVm.
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            Output only. Provides details on the state of the Migrating VM in
            case of an error in replication.
          readOnly: true
        currentSyncInfo:
          readOnly: true
          $ref: '#/components/schemas/ReplicationCycle'
          description: Output only. Details of the current running replication cycle.
        state:
          description: Output only. State of the MigratingVm.
          readOnly: true
          enumDescriptions:
            - The state was not sampled by the health checks yet.
            - The VM in the source is being verified.
            - The source VM was verified, and it's ready to start replication.
            - Migration is going through the first sync cycle.
            - The replication is active, and it's running or scheduled to run.
            - >-
              The source VM is being turned off, and a final replication is
              currently running.
            - >-
              The source VM was stopped and replicated. The replication is
              currently paused.
            - >-
              A cutover job is active and replication cycle is running the final
              sync.
            - >-
              The replication was paused by the user and no cycles are scheduled
              to run.
            - >-
              The migrating VM is being finalized and migration resources are
              being removed.
            - >-
              The replication process is done. The migrating VM is finalized and
              no longer consumes billable resources.
            - >-
              The replication process encountered an unrecoverable error and was
              aborted.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - READY
            - FIRST_SYNC
            - ACTIVE
            - CUTTING_OVER
            - CUTOVER
            - FINAL_SYNC
            - PAUSED
            - FINALIZING
            - FINALIZED
            - ERROR
      description: >-
        MigratingVm describes the VM that will be migrated from a Source
        environment and its replication state.
      type: object
    Empty:
      type: object
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      id: Empty
      properties: {}
    ListUtilizationReportsResponse:
      type: object
      properties:
        utilizationReports:
          description: Output only. The list of reports.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UtilizationReport'
        unreachable:
          items:
            type: string
          readOnly: true
          description: Output only. Locations that could not be reached.
          type: array
        nextPageToken:
          readOnly: true
          type: string
          description: >-
            Output only. A token, which can be sent as `page_token` to retrieve
            the next page. If this field is omitted, there are no subsequent
            pages.
      description: Response message for 'ListUtilizationReports' request.
      id: ListUtilizationReportsResponse
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      properties:
        response:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
      id: Operation
      type: object
    UtilizationReport:
      properties:
        stateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the state was last set.
          type: string
        error:
          $ref: '#/components/schemas/Status'
          readOnly: true
          description: >-
            Output only. Provides details on the state of the report in case of
            an error.
        vmCount:
          type: integer
          description: Output only. Total number of VMs included in the report.
          format: int32
          readOnly: true
        createTime:
          format: google-datetime
          description: >-
            Output only. The time the report was created (this refers to the
            time of the request, not the time the report creation completed).
          type: string
          readOnly: true
        vms:
          items:
            $ref: '#/components/schemas/VmUtilizationInfo'
          type: array
          description: >-
            List of utilization information per VM. When sent as part of the
            request, the "vm_id" field is used in order to specify which VMs to
            include in the report. In that case all other fields are ignored.
        displayName:
          type: string
          description: The report display name, as assigned by the user.
        state:
          type: string
          description: Output only. Current state of the report.
          enumDescriptions:
            - The state is unknown. This value is not in use.
            - The report is in the making.
            - Report creation completed successfully.
            - Report creation failed.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - SUCCEEDED
            - FAILED
          readOnly: true
        name:
          description: Output only. The report unique name.
          type: string
          readOnly: true
        frameEndTime:
          format: google-datetime
          type: string
          readOnly: true
          description: >-
            Output only. The point in time when the time frame ends. Notice that
            the time frame is counted backwards. For instance if the
            "frame_end_time" value is 2021/01/20 and the time frame is WEEK then
            the report covers the week between 2021/01/20 and 2021/01/14.
        timeFrame:
          type: string
          enum:
            - TIME_FRAME_UNSPECIFIED
            - WEEK
            - MONTH
            - YEAR
          description: Time frame of the report.
          enumDescriptions:
            - The time frame was not specified and will default to WEEK.
            - One week.
            - One month.
            - One year.
      type: object
      description: >-
        Utilization report details the utilization (CPU, memory, etc.) of
        selected source VMs.
      id: UtilizationReport
    VmwareVmsDetails:
      description: VmwareVmsDetails describes VMs in vCenter.
      properties:
        details:
          items:
            $ref: '#/components/schemas/VmwareVmDetails'
          type: array
          description: The details of the vmware VMs.
      id: VmwareVmsDetails
      type: object
    ReplicationCycle:
      description: >-
        ReplicationCycle contains information about the current replication
        cycle status.
      properties:
        progressPercent:
          format: int32
          description: >-
            The current progress in percentage of this cycle. Was replaced by
            'steps' field, which breaks down the cycle progression more
            accurately.
          type: integer
        steps:
          description: The cycle's steps list representing its progress.
          type: array
          items:
            $ref: '#/components/schemas/CycleStep'
        state:
          enumDescriptions:
            - >-
              The state is unknown. This is used for API compatibility only and
              is not used by the system.
            - The replication cycle is running.
            - The replication cycle is paused.
            - The replication cycle finished with errors.
            - The replication cycle finished successfully.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - PAUSED
            - FAILED
            - SUCCEEDED
          description: State of the ReplicationCycle.
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/MigrationWarning'
          readOnly: true
          description: Output only. Warnings that occurred during the cycle.
        cycleNumber:
          format: int32
          type: integer
          description: The cycle's ordinal number.
        endTime:
          format: google-datetime
          type: string
          description: The time the replication cycle has ended.
        startTime:
          type: string
          format: google-datetime
          description: The time the replication cycle has started.
        error:
          $ref: '#/components/schemas/Status'
          description: Provides details on the state of the cycle in case of an error.
        name:
          type: string
          description: The identifier of the ReplicationCycle.
        totalPauseDuration:
          format: google-duration
          description: The accumulated duration the replication cycle was paused.
          type: string
      id: ReplicationCycle
      type: object
    CancelOperationRequest:
      properties: {}
      id: CancelOperationRequest
      type: object
      description: The request message for Operations.CancelOperation.
    InitializingReplicationStep:
      properties: {}
      description: InitializingReplicationStep contains specific step details.
      type: object
      id: InitializingReplicationStep
    VmwareVmDetails:
      type: object
      description: VmwareVmDetails describes a VM in vCenter.
      id: VmwareVmDetails
      properties:
        datacenterId:
          description: The id of the vCenter's datacenter this VM is contained in.
          type: string
        cpuCount:
          description: The number of cpus in the VM.
          format: int32
          type: integer
        datacenterDescription:
          type: string
          description: >-
            The descriptive name of the vCenter's datacenter this VM is
            contained in.
        guestDescription:
          type: string
          description: >-
            The VM's OS. See for example
            https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html
            for types of strings this might hold.
        uuid:
          description: The unique identifier of the VM in vCenter.
          type: string
        diskCount:
          format: int32
          description: The number of disks the VM has.
          type: integer
        bootOption:
          description: Output only. The VM Boot Option.
          enum:
            - BOOT_OPTION_UNSPECIFIED
            - EFI
            - BIOS
          readOnly: true
          type: string
          enumDescriptions:
            - The boot option is unknown.
            - The boot option is EFI.
            - The boot option is BIOS.
        powerState:
          enum:
            - POWER_STATE_UNSPECIFIED
            - 'ON'
            - 'OFF'
            - SUSPENDED
          description: The power state of the VM at the moment list was taken.
          enumDescriptions:
            - Power state is not specified.
            - The VM is turned ON.
            - The VM is turned OFF.
            - The VM is suspended. This is similar to hibernation or sleep mode.
          type: string
        memoryMb:
          type: integer
          description: The size of the memory of the VM in MB.
          format: int32
        displayName:
          description: >-
            The display name of the VM. Note that this is not necessarily
            unique.
          type: string
        committedStorageMb:
          format: int64
          type: string
          description: The total size of the storage allocated to the VM in MB.
        vmId:
          type: string
          description: >-
            The VM's id in the source (note that this is not the MigratingVm's
            id). This is the moref id of the VM.
    ReplicatingStep:
      id: ReplicatingStep
      type: object
      properties:
        replicatedBytes:
          description: Replicated bytes in the step.
          type: string
          format: int64
        lastThirtyMinutesAverageBytesPerSecond:
          format: int64
          type: string
          description: >-
            The source disks replication rate for the last 30 minutes in bytes
            per second.
        totalBytes:
          format: int64
          type: string
          description: Total bytes to be handled in the step.
        lastTwoMinutesAverageBytesPerSecond:
          description: >-
            The source disks replication rate for the last 2 minutes in bytes
            per second.
          type: string
          format: int64
      description: ReplicatingStep contains specific step details.
    Group:
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The update time timestamp.
        name:
          type: string
          readOnly: true
          description: Output only. The Group name.
        displayName:
          description: >-
            Display name is a user defined name for this group which can be
            updated.
          type: string
        description:
          description: User-provided description of the group.
          type: string
        createTime:
          readOnly: true
          description: Output only. The create time timestamp.
          format: google-datetime
          type: string
      description: >-
        Describes message for 'Group' resource. The Group is a collections of
        several MigratingVms.
      type: object
      id: Group
    CutoverForecast:
      id: CutoverForecast
      properties:
        estimatedCutoverJobDuration:
          readOnly: true
          description: Output only. Estimation of the CutoverJob duration.
          format: google-duration
          type: string
      description: >-
        CutoverForecast holds information about future CutoverJobs of a
        MigratingVm.
      type: object
    CutoverJob:
      properties:
        state:
          description: Output only. State of the cutover job.
          enumDescriptions:
            - >-
              The state is unknown. This is used for API compatibility only and
              is not used by the system.
            - The cutover job has not yet started.
            - The cutover job finished with errors.
            - The cutover job finished successfully.
            - The cutover job was cancelled.
            - The cutover job is being cancelled.
            - The cutover job is active and running.
            - >-
              OS adaptation is running as part of the cutover job to generate
              license.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - FAILED
            - SUCCEEDED
            - CANCELLED
            - CANCELLING
            - ACTIVE
            - ADAPTING_OS
          type: string
          readOnly: true
        progressPercent:
          type: integer
          format: int32
          readOnly: true
          description: Output only. The current progress in percentage of the cutover job.
        error:
          description: >-
            Output only. Provides details for the errors that led to the Cutover
            Job's state.
          $ref: '#/components/schemas/Status'
          readOnly: true
        createTime:
          description: >-
            Output only. The time the cutover job was created (as an API call,
            not when it was actually created in the target).
          type: string
          readOnly: true
          format: google-datetime
        stateMessage:
          type: string
          readOnly: true
          description: >-
            Output only. A message providing possible extra details about the
            current state.
        name:
          readOnly: true
          description: Output only. The name of the cutover job.
          type: string
        computeEngineTargetDetails:
          $ref: '#/components/schemas/ComputeEngineTargetDetails'
          readOnly: true
          description: Output only. Details of the target VM in Compute Engine.
        endTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time the cutover job had finished.
        steps:
          items:
            $ref: '#/components/schemas/CutoverStep'
          type: array
          description: Output only. The cutover steps list representing its progress.
          readOnly: true
        stateTime:
          type: string
          description: Output only. The time the state was last updated.
          readOnly: true
          format: google-datetime
      type: object
      description: >-
        CutoverJob message describes a cutover of a migrating VM. The CutoverJob
        is the operation of shutting down the VM, creating a snapshot and
        clonning the VM using the replicated snapshot.
      id: CutoverJob
    UpgradeStatus:
      description: UpgradeStatus contains information about upgradeAppliance operation.
      id: UpgradeStatus
      properties:
        previousVersion:
          description: The version from which we upgraded.
          type: string
        startTime:
          format: google-datetime
          type: string
          description: The time the operation was started.
        state:
          enumDescriptions:
            - The state was not sampled by the health checks yet.
            - The upgrade has started.
            - The upgrade failed.
            - The upgrade finished successfully.
          type: string
          description: The state of the upgradeAppliance operation.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - FAILED
            - SUCCEEDED
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            Provides details on the state of the upgrade operation in case of an
            error.
        version:
          description: The version to upgrade to.
          type: string
      type: object
    PreparingVMDisksStep:
      type: object
      description: PreparingVMDisksStep contains specific step details.
      properties: {}
      id: PreparingVMDisksStep
    StartMigrationRequest:
      properties: {}
      type: object
      id: StartMigrationRequest
      description: Request message for 'StartMigrationRequest' request.
    NetworkInterface:
      id: NetworkInterface
      type: object
      description: NetworkInterface represents a NIC of a VM.
      properties:
        internalIp:
          description: >-
            The internal IP to define in the NIC. The formats accepted are:
            `ephemeral` \ ipv4 address \ a named address resource full path.
          type: string
        network:
          type: string
          description: The network to connect the NIC to.
        subnetwork:
          description: The subnetwork to connect the NIC to.
          type: string
        externalIp:
          description: The external IP to define in the NIC.
          type: string
    ApplianceVersion:
      properties:
        critical:
          type: boolean
          description: >-
            Determine whether it's critical to upgrade the appliance to this
            version.
        uri:
          description: A link for downloading the version.
          type: string
        releaseNotesUri:
          type: string
          description: Link to a page that contains the version release notes.
        version:
          description: The appliance version.
          type: string
      id: ApplianceVersion
      type: object
      description: Describes an appliance version.
    Source:
      description: >-
        Source message describes a specific vm migration Source resource. It
        contains the source environment information.
      properties:
        description:
          type: string
          description: User-provided description of the source.
        name:
          type: string
          description: Output only. The Source name.
          readOnly: true
        updateTime:
          description: Output only. The update time timestamp.
          readOnly: true
          type: string
          format: google-datetime
        createTime:
          readOnly: true
          type: string
          description: Output only. The create time timestamp.
          format: google-datetime
        labels:
          description: The labels of the source.
          additionalProperties:
            type: string
          type: object
        vmware:
          description: Vmware type source details.
          $ref: '#/components/schemas/VmwareSourceDetails'
        aws:
          description: AWS type source details.
          $ref: '#/components/schemas/AwsSourceDetails'
      type: object
      id: Source
    ListSourcesResponse:
      id: ListSourcesResponse
      description: Response message for 'ListSources' request.
      type: object
      properties:
        sources:
          items:
            $ref: '#/components/schemas/Source'
          readOnly: true
          description: Output only. The list of sources response.
          type: array
        unreachable:
          type: array
          description: Output only. Locations that could not be reached.
          items:
            type: string
          readOnly: true
        nextPageToken:
          type: string
          description: >-
            Output only. A token, which can be sent as `page_token` to retrieve
            the next page. If this field is omitted, there are no subsequent
            pages.
          readOnly: true
    ComputeEngineTargetDetails:
      properties:
        machineTypeSeries:
          description: The machine type series to create the VM with.
          type: string
        networkTags:
          type: array
          items:
            type: string
          description: A map of network tags to associate with the VM.
        vmName:
          type: string
          description: The name of the VM to create.
        secureBoot:
          description: >-
            Defines whether the instance has Secure Boot enabled. This can be
            set to true only if the vm boot option is EFI.
          type: boolean
        networkInterfaces:
          items:
            $ref: '#/components/schemas/NetworkInterface'
          type: array
          description: List of NICs connected to this VM.
        diskType:
          type: string
          enumDescriptions:
            - An unspecified disk type. Will be used as STANDARD.
            - A Standard disk type.
            - SSD hard disk type.
            - >-
              An alternative to SSD persistent disks that balance performance
              and cost.
          enum:
            - COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED
            - COMPUTE_ENGINE_DISK_TYPE_STANDARD
            - COMPUTE_ENGINE_DISK_TYPE_SSD
            - COMPUTE_ENGINE_DISK_TYPE_BALANCED
          description: The disk type to use in the VM.
        machineType:
          description: The machine type to create the VM with.
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
          description: The metadata key/value pairs to assign to the VM.
        licenseType:
          description: The license type to use in OS adaptation.
          enumDescriptions:
            - The license type is the default for the OS.
            - The license type is Pay As You Go license type.
            - The license type is Bring Your Own License type.
          enum:
            - COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT
            - COMPUTE_ENGINE_LICENSE_TYPE_PAYG
            - COMPUTE_ENGINE_LICENSE_TYPE_BYOL
          type: string
        appliedLicense:
          description: The OS license returned from the adaptation module report.
          $ref: '#/components/schemas/AppliedLicense'
        bootOption:
          type: string
          description: The VM Boot Option, as set in the source vm.
          enumDescriptions:
            - The boot option is unknown.
            - The boot option is EFI.
            - The boot option is BIOS.
          enum:
            - COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED
            - COMPUTE_ENGINE_BOOT_OPTION_EFI
            - COMPUTE_ENGINE_BOOT_OPTION_BIOS
        zone:
          description: The zone in which to create the VM.
          type: string
        additionalLicenses:
          items:
            type: string
          type: array
          description: Additional licenses to assign to the VM.
        labels:
          additionalProperties:
            type: string
          description: A map of labels to associate with the VM.
          type: object
        serviceAccount:
          type: string
          description: The service account to associate the VM with.
        hostname:
          type: string
          description: The hostname to assign to the VM.
        computeScheduling:
          description: Compute instance scheduling information (if empty default is used).
          $ref: '#/components/schemas/ComputeScheduling'
        project:
          description: The Google Cloud target project ID or project name.
          type: string
      id: ComputeEngineTargetDetails
      type: object
      description: >-
        ComputeEngineTargetDetails is a collection of details for creating a VM
        in a target Compute Engine project.
    ListDatacenterConnectorsResponse:
      id: ListDatacenterConnectorsResponse
      description: Response message for 'ListDatacenterConnectors' request.
      properties:
        nextPageToken:
          readOnly: true
          description: >-
            Output only. A token, which can be sent as `page_token` to retrieve
            the next page. If this field is omitted, there are no subsequent
            pages.
          type: string
        datacenterConnectors:
          description: Output only. The list of sources response.
          readOnly: true
          items:
            $ref: '#/components/schemas/DatacenterConnector'
          type: array
        unreachable:
          type: array
          readOnly: true
          description: Output only. Locations that could not be reached.
          items:
            type: string
      type: object
    VmUtilizationInfo:
      id: VmUtilizationInfo
      properties:
        vmwareVmDetails:
          $ref: '#/components/schemas/VmwareVmDetails'
          description: The description of the VM in a Source of type Vmware.
        vmId:
          description: The VM's ID in the source.
          type: string
        utilization:
          description: Utilization metrics for this VM.
          $ref: '#/components/schemas/VmUtilizationMetrics'
      type: object
      description: Utilization information of a single VM.
    SchedulingNodeAffinity:
      id: SchedulingNodeAffinity
      description: >-
        Node Affinity: the configuration of desired nodes onto which this
        Instance could be scheduled. Based on
        https://cloud.google.com/compute/docs/reference/rest/v1/instances/setScheduling
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: Corresponds to the label values of Node resource.
        operator:
          enum:
            - OPERATOR_UNSPECIFIED
            - IN
            - NOT_IN
          enumDescriptions:
            - An unknown, unexpected behavior.
            - The node resource group should be in these resources affinity.
            - The node resource group should not be in these resources affinity.
          type: string
          description: >-
            The operator to use for the node resources specified in the `values`
            parameter.
        key:
          type: string
          description: The label key of Node resource to reference.
    CloneJob:
      id: CloneJob
      description: >-
        CloneJob describes the process of creating a clone of a MigratingVM to
        the requested target based on the latest successful uploaded snapshots.
        While the migration cycles of a MigratingVm take place, it is possible
        to verify the uploaded VM can be started in the cloud, by creating a
        clone. The clone can be created without any downtime, and it is created
        using the latest snapshots which are already in the cloud. The cloneJob
        is only responsible for its work, not its products, which means once it
        is finished, it will never touch the instance it created. It will only
        delete it in case of the CloneJob being cancelled or upon failure to
        clone.
      properties:
        computeEngineTargetDetails:
          $ref: '#/components/schemas/ComputeEngineTargetDetails'
          readOnly: true
          description: Output only. Details of the target VM in Compute Engine.
        stateTime:
          readOnly: true
          description: Output only. The time the state was last updated.
          format: google-datetime
          type: string
        createTime:
          description: >-
            Output only. The time the clone job was created (as an API call, not
            when it was actually created in the target).
          format: google-datetime
          readOnly: true
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - ACTIVE
            - FAILED
            - SUCCEEDED
            - CANCELLED
            - CANCELLING
            - ADAPTING_OS
          type: string
          readOnly: true
          enumDescriptions:
            - >-
              The state is unknown. This is used for API compatibility only and
              is not used by the system.
            - The clone job has not yet started.
            - The clone job is active and running.
            - The clone job finished with errors.
            - The clone job finished successfully.
            - The clone job was cancelled.
            - The clone job is being cancelled.
            - >-
              OS adaptation is running as part of the clone job to generate
              license.
          description: Output only. State of the clone job.
        steps:
          items:
            $ref: '#/components/schemas/CloneStep'
          type: array
          description: Output only. The clone steps list representing its progress.
          readOnly: true
        endTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the clone job was ended.
        error:
          $ref: '#/components/schemas/Status'
          readOnly: true
          description: >-
            Output only. Provides details for the errors that led to the Clone
            Job's state.
        name:
          readOnly: true
          type: string
          description: Output only. The name of the clone.
      type: object
    PauseMigrationRequest:
      type: object
      properties: {}
      description: Request message for 'PauseMigration' request.
      id: PauseMigrationRequest
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: vmmigration.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: vmmigration.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: vmmigration.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: vmmigration.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: vmmigration.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: vmmigration.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}:
    parameters: *ref_1
    delete:
      description: Deletes a single Source.
      operationId: vmmigration.projects.locations.sources.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: delete
    get:
      description: Gets details of a single Source.
      operationId: vmmigration.projects.locations.sources.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single Source.
      operationId: vmmigration.projects.locations.sources.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}:fetchInventory:
    parameters: *ref_1
    get:
      description: >-
        List remote source's inventory of VMs. The remote source is the onprem
        vCenter (remote in the sense it's not in Compute Engine). The inventory
        describes the list of existing VMs in that source. Note that this
        operation lists the VMs on the remote source, as opposed to listing the
        MigratingVms resources in the vmmigration service.
      operationId: vmmigration.projects.locations.sources.fetchInventory
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchInventoryResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: forceRefresh
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: sources__inventory
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources:
    parameters: *ref_1
    get:
      description: Lists Sources in a given project and location.
      operationId: vmmigration.projects.locations.sources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: select
    post:
      description: Creates a new Source in a given project and location.
      operationId: vmmigration.projects.locations.sources.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: sourceId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single CutoverJob.
      operationId: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CutoverJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: cutoverJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: cutover_jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs/{cutoverJobsId}:cancel:
    parameters: *ref_1
    post:
      description: Initiates the cancellation of a running cutover job.
      operationId: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelCutoverJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: cutoverJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: cutover_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cutoverJobs:
    parameters: *ref_1
    get:
      description: Lists CutoverJobs of a given migrating VM.
      operationId: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCutoverJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: cutover_jobs
      x-stackQL-verb: select
    post:
      description: >-
        Initiates a Cutover of a specific migrating VM. The returned LRO is
        completed when the cutover job resource is created and the job is
        initiated.
      operationId: vmmigration.projects.locations.sources.migratingVms.cutoverJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CutoverJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: cutoverJobId
          schema:
            type: string
      x-stackQL-resource: cutover_jobs
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/replicationCycles/{replicationCyclesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ReplicationCycle.
      operationId: >-
        vmmigration.projects.locations.sources.migratingVms.replicationCycles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationCycle'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: replicationCyclesId
          required: true
          schema:
            type: string
      x-stackQL-resource: replication_cycles
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/replicationCycles:
    parameters: *ref_1
    get:
      description: Lists ReplicationCycles in a given MigratingVM.
      operationId: >-
        vmmigration.projects.locations.sources.migratingVms.replicationCycles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReplicationCyclesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: replication_cycles
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs:
    parameters: *ref_1
    get:
      description: Lists CloneJobs of a given migrating VM.
      operationId: vmmigration.projects.locations.sources.migratingVms.cloneJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCloneJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: clone_jobs
      x-stackQL-verb: select
    post:
      description: Initiates a Clone of a specific migrating VM.
      operationId: vmmigration.projects.locations.sources.migratingVms.cloneJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: cloneJobId
          schema:
            type: string
      x-stackQL-resource: clone_jobs
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}:cancel:
    parameters: *ref_1
    post:
      description: Initiates the cancellation of a running clone job.
      operationId: vmmigration.projects.locations.sources.migratingVms.cloneJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelCloneJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: cloneJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: clone_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}/cloneJobs/{cloneJobsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single CloneJob.
      operationId: vmmigration.projects.locations.sources.migratingVms.cloneJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloneJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: path
          name: cloneJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: clone_jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:finalizeMigration:
    parameters: *ref_1
    post:
      description: >-
        Marks a migration as completed, deleting migration resources that are no
        longer being used. Only applicable after cutover is done.
      operationId: vmmigration.projects.locations.sources.migratingVms.finalizeMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinalizeMigrationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single MigratingVm.
      operationId: vmmigration.projects.locations.sources.migratingVms.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigratingVm'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single MigratingVm.
      operationId: vmmigration.projects.locations.sources.migratingVms.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigratingVm'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: exec
    delete:
      description: Deletes a single MigratingVm.
      operationId: vmmigration.projects.locations.sources.migratingVms.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms:
    parameters: *ref_1
    get:
      description: Lists MigratingVms in a given Source.
      operationId: vmmigration.projects.locations.sources.migratingVms.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMigratingVmsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: select
    post:
      description: Creates a new MigratingVm in a given Source.
      operationId: vmmigration.projects.locations.sources.migratingVms.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigratingVm'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: migratingVmId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:startMigration:
    parameters: *ref_1
    post:
      description: >-
        Starts migration for a VM. Starts the process of uploading data and
        creating snapshots, in replication cycles scheduled by the policy.
      operationId: vmmigration.projects.locations.sources.migratingVms.startMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartMigrationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:resumeMigration:
    parameters: *ref_1
    post:
      description: >-
        Resumes a migration for a VM. When called on a paused migration, will
        start the process of uploading data and creating snapshots; when called
        on a completed cut-over migration, will update the migration to active
        state and start the process of uploading data and creating snapshots.
      operationId: vmmigration.projects.locations.sources.migratingVms.resumeMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeMigrationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/migratingVms/{migratingVmsId}:pauseMigration:
    parameters: *ref_1
    post:
      description: >-
        Pauses a migration for a VM. If cycle tasks are running they will be
        cancelled, preserving source task data. Further replication cycles will
        not be triggered while the VM is paused.
      operationId: vmmigration.projects.locations.sources.migratingVms.pauseMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseMigrationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: migratingVmsId
          required: true
          schema:
            type: string
      x-stackQL-resource: migrating_vms
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}:upgradeAppliance:
    parameters: *ref_1
    post:
      description: >-
        Upgrades the appliance relate to this DatacenterConnector to the
        in-place updateable version.
      operationId: >-
        vmmigration.projects.locations.sources.datacenterConnectors.upgradeAppliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeApplianceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: datacenterConnectorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors/{datacenterConnectorsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single DatacenterConnector.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacenterConnector'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: datacenterConnectorsId
          required: true
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-verb: select
    delete:
      description: Deletes a single DatacenterConnector.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: datacenterConnectorsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/datacenterConnectors:
    parameters: *ref_1
    get:
      description: Lists DatacenterConnectors in a given Source.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatacenterConnectorsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: datacenter_connectors
      x-stackQL-verb: select
    post:
      description: Creates a new DatacenterConnector in a given Source.
      operationId: vmmigration.projects.locations.sources.datacenterConnectors.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatacenterConnector'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: datacenterConnectorId
          schema:
            type: string
      x-stackQL-resource: datacenter_connectors
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports:
    parameters: *ref_1
    post:
      description: Creates a new UtilizationReport.
      operationId: vmmigration.projects.locations.sources.utilizationReports.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtilizationReport'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: utilizationReportId
          schema:
            type: string
      x-stackQL-resource: utilization_reports
      x-stackQL-verb: insert
    get:
      description: Lists Utilization Reports of the given Source.
      operationId: vmmigration.projects.locations.sources.utilizationReports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUtilizationReportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: utilization_reports
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/utilizationReports/{utilizationReportsId}:
    parameters: *ref_1
    get:
      description: Gets a single Utilization Report.
      operationId: vmmigration.projects.locations.sources.utilizationReports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilizationReport'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: utilizationReportsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: utilization_reports
      x-stackQL-verb: select
    delete:
      description: Deletes a single Utilization Report.
      operationId: vmmigration.projects.locations.sources.utilizationReports.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: utilizationReportsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: utilization_reports
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Group.
      operationId: vmmigration.projects.locations.groups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single Group.
      operationId: vmmigration.projects.locations.groups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: exec
    delete:
      description: Deletes a single Group.
      operationId: vmmigration.projects.locations.groups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/groups:
    parameters: *ref_1
    get:
      description: Lists Groups in a given project and location.
      operationId: vmmigration.projects.locations.groups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: select
    post:
      description: Creates a new Group in a given project and location.
      operationId: vmmigration.projects.locations.groups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: groupId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addGroupMigration:
    parameters: *ref_1
    post:
      description: Adds a MigratingVm to a Group.
      operationId: vmmigration.projects.locations.groups.addGroupMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGroupMigrationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups__group_migration
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeGroupMigration:
    parameters: *ref_1
    post:
      description: Removes a MigratingVm from a Group.
      operationId: vmmigration.projects.locations.groups.removeGroupMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveGroupMigrationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups__group_migration
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/targetProjects:
    parameters: *ref_1
    get:
      description: >-
        Lists TargetProjects in a given project. NOTE: TargetProject is a global
        resource; hence the only supported value for location is `global`.
      operationId: vmmigration.projects.locations.targetProjects.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetProjectsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: target_projects
      x-stackQL-verb: select
    post:
      description: >-
        Creates a new TargetProject in a given project. NOTE: TargetProject is a
        global resource; hence the only supported value for location is
        `global`.
      operationId: vmmigration.projects.locations.targetProjects.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetProject'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: targetProjectId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/targetProjects/{targetProjectsId}:
    parameters: *ref_1
    patch:
      description: >-
        Updates the parameters of a single TargetProject. NOTE: TargetProject is
        a global resource; hence the only supported value for location is
        `global`.
      operationId: vmmigration.projects.locations.targetProjects.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetProject'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetProjectsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-verb: exec
    get:
      description: >-
        Gets details of a single TargetProject. NOTE: TargetProject is a global
        resource; hence the only supported value for location is `global`.
      operationId: vmmigration.projects.locations.targetProjects.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetProject'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetProjectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a single TargetProject. NOTE: TargetProject is a global
        resource; hence the only supported value for location is `global`.
      operationId: vmmigration.projects.locations.targetProjects.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetProjectsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: target_projects
      x-stackQL-verb: delete
