openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: OS Config API
  description: >-
    OS management tools that can be used for patch management, patch compliance,
    and configuration management on VM instances.
  version: v1alpha
  x-discovery-doc-revision: '20230618'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/compute/docs/osconfig/rest
servers:
  - url: https://osconfig.googleapis.com
components:
  schemas:
    OSPolicyResourceExecResource:
      id: OSPolicyResourceExecResource
      type: object
      properties:
        validate:
          $ref: '#/components/schemas/OSPolicyResourceExecResourceExec'
          description: >-
            Required. What to run to validate this resource is in the desired
            state. An exit code of 100 indicates "in desired state", and exit
            code of 101 indicates "not in desired state". Any other exit code
            indicates a failure running validate.
        enforce:
          $ref: '#/components/schemas/OSPolicyResourceExecResourceExec'
          description: >-
            What to run to bring this resource into the desired state. An exit
            code of 100 indicates "success", any other exit code indicates a
            failure running enforce.
      description: >-
        A resource that allows executing scripts on the VM. The `ExecResource`
        has 2 stages: `validate` and `enforce` and both stages accept a script
        as an argument to execute. When the `ExecResource` is applied by the
        agent, it first executes the script in the `validate` stage. The
        `validate` stage can signal that the `ExecResource` is already in the
        desired state by returning an exit code of `100`. If the `ExecResource`
        is not in the desired state, it should return an exit code of `101`. Any
        other exit code returned by this stage is considered an error. If the
        `ExecResource` is not in the desired state based on the exit code from
        the `validate` stage, the agent proceeds to execute the script from the
        `enforce` stage. If the `ExecResource` is already in the desired state,
        the `enforce` stage will not be run. Similar to `validate` stage, the
        `enforce` stage should return an exit code of `100` to indicate that the
        resource in now in its desired state. Any other exit code is considered
        an error. NOTE: An exit code of `100` was chosen over `0` (and `101` vs
        `1`) to have an explicit indicator of `in desired state`, `not in
        desired state` and errors. Because, for example, Powershell will always
        return an exit code of `0` unless an `exit` statement is provided in the
        script. So, for reasons of consistency and being explicit, exit codes
        `100` and `101` were chosen.
    OSPolicyAssignmentReportOSPolicyCompliance:
      type: object
      description: Compliance data for an OS policy
      id: OSPolicyAssignmentReportOSPolicyCompliance
      properties:
        complianceStateReason:
          type: string
          description: >-
            The reason for the OS policy to be in an unknown compliance state.
            This field is always populated when `compliance_state` is `UNKNOWN`.
            If populated, the field can contain one of the following values: *
            `vm-not-running`: The VM was not running. *
            `os-policies-not-supported-by-agent`: The version of the OS Config
            agent running on the VM does not support running OS policies. *
            `no-agent-detected`: The OS Config agent is not detected for the VM.
            * `resource-execution-errors`: The OS Config agent encountered
            errors while executing one or more resources in the policy. See
            `os_policy_resource_compliances` for details. * `task-timeout`: The
            task sent to the agent to apply the policy timed out. *
            `unexpected-agent-state`: The OS Config agent did not report the
            final status of the task that attempted to apply the policy.
            Instead, the agent unexpectedly started working on a different task.
            This mostly happens when the agent or VM unexpectedly restarts while
            applying OS policies. * `internal-service-errors`: Internal service
            errors were encountered while attempting to apply the policy.
        complianceState:
          description: The compliance state of the OS policy.
          type: string
          enum:
            - UNKNOWN
            - COMPLIANT
            - NON_COMPLIANT
          enumDescriptions:
            - >-
              The policy is in an unknown compliance state. Refer to the field
              `compliance_state_reason` to learn the exact reason for the policy
              to be in this compliance state.
            - >-
              Policy is compliant. The policy is compliant if all the underlying
              resources are also compliant.
            - >-
              Policy is non-compliant. The policy is non-compliant if one or
              more underlying resources are non-compliant.
        osPolicyId:
          description: The OS policy id
          type: string
        osPolicyResourceCompliances:
          description: >-
            Compliance data for each resource within the policy that is applied
            to the VM.
          type: array
          items:
            $ref: >-
              #/components/schemas/OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance
    OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep:
      type: object
      properties:
        errorMessage:
          description: >-
            An error message recorded during the execution of this step. Only
            populated if errors were encountered during this step execution.
          type: string
        type:
          enum:
            - TYPE_UNSPECIFIED
            - VALIDATION
            - DESIRED_STATE_CHECK
            - DESIRED_STATE_ENFORCEMENT
            - DESIRED_STATE_CHECK_POST_ENFORCEMENT
          type: string
          description: Configuration step type.
          enumDescriptions:
            - Default value. This value is unused.
            - Checks for resource conflicts such as schema errors.
            - Checks the current status of the desired state for a resource.
            - >-
              Enforces the desired state for a resource that is not in desired
              state.
            - >-
              Re-checks the status of the desired state. This check is done for
              a resource after the enforcement of all OS policies. This step is
              used to determine the final desired state status for the resource.
              It accounts for any resources that might have drifted from their
              desired state due to side effects from executing other resources.
      id: >-
        OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep
      description: >-
        Step performed by the OS Config agent for configuring an `OSPolicy`
        resource to its desired state.
    OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance:
      description: Compliance data for an OS policy resource.
      id: OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance
      properties:
        execResourceOutput:
          $ref: >-
            #/components/schemas/OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput
          description: ExecResource specific output.
        complianceState:
          description: The compliance state of the resource.
          type: string
          enumDescriptions:
            - >-
              The resource is in an unknown compliance state. To get more
              details about why the policy is in this state, review the output
              of the `compliance_state_reason` field.
            - Resource is compliant.
            - Resource is non-compliant.
          enum:
            - UNKNOWN
            - COMPLIANT
            - NON_COMPLIANT
        osPolicyResourceId:
          type: string
          description: The ID of the OS policy resource.
        complianceStateReason:
          description: >-
            A reason for the resource to be in the given compliance state. This
            field is always populated when `compliance_state` is `UNKNOWN`. The
            following values are supported when `compliance_state == UNKNOWN` *
            `execution-errors`: Errors were encountered by the agent while
            executing the resource and the compliance state couldn't be
            determined. * `execution-skipped-by-agent`: Resource execution was
            skipped by the agent because errors were encountered while executing
            prior resources in the OS policy. *
            `os-policy-execution-attempt-failed`: The execution of the OS policy
            containing this resource failed and the compliance state couldn't be
            determined.
          type: string
        configSteps:
          type: array
          description: >-
            Ordered list of configuration completed by the agent for the OS
            policy resource.
          items:
            $ref: >-
              #/components/schemas/OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep
      type: object
    VulnerabilityReportVulnerabilityItem:
      type: object
      properties:
        fixedCpeUri:
          description: >-
            The recommended [CPE URI](https://cpe.mitre.org/specification/)
            update that contains a fix for this vulnerability.
          type: string
        availableInventoryItemId:
          description: >-
            Corresponds to the `AVAILABLE_PACKAGE` inventory item on the VM. If
            the vulnerability report was not updated after the VM inventory
            update, these values might not display in VM inventory. If there is
            no available fix, the field is empty. The `inventory_item` value
            specifies the latest `SoftwarePackage` available to the VM that
            fixes the vulnerability.
          type: string
        upstreamFix:
          description: The upstream OS patch, packages or KB that fixes the vulnerability.
          type: string
        installedInventoryItemId:
          description: >-
            Corresponds to the `INSTALLED_PACKAGE` inventory item on the VM.
            This field displays the inventory items affected by this
            vulnerability. If the vulnerability report was not updated after the
            VM inventory update, these values might not display in VM inventory.
            For some operating systems, this field might be empty.
          type: string
      description: >-
        OS inventory item that is affected by a vulnerability or fixed as a
        result of a vulnerability.
      id: VulnerabilityReportVulnerabilityItem
    InventoryWindowsQuickFixEngineeringPackage:
      properties:
        description:
          description: A textual description of the QFE update.
          type: string
        hotFixId:
          type: string
          description: Unique identifier associated with a particular QFE update.
        caption:
          description: A short textual description of the QFE update.
          type: string
        installTime:
          format: google-datetime
          description: >-
            Date that the QFE update was installed. Mapped from installed_on
            field.
          type: string
      description: >-
        Information related to a Quick Fix Engineering package. Fields are taken
        from Windows QuickFixEngineering Interface and match the source names:
        https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering
      id: InventoryWindowsQuickFixEngineeringPackage
      type: object
    OSPolicyResourceRepositoryResourceGooRepository:
      id: OSPolicyResourceRepositoryResourceGooRepository
      type: object
      properties:
        name:
          type: string
          description: Required. The name of the repository.
        url:
          type: string
          description: Required. The url of the repository.
      description: >-
        Represents a Goo package repository. These are added to a repo file that
        is managed at `C:/ProgramData/GooGet/repos/google_osconfig.repo`.
    ListInventoriesResponse:
      type: object
      description: >-
        A response message for listing inventory data for all VMs in a specified
        location.
      properties:
        inventories:
          description: List of inventory objects.
          items:
            $ref: '#/components/schemas/Inventory'
          type: array
        nextPageToken:
          type: string
          description: The pagination token to retrieve the next page of inventory objects.
      id: ListInventoriesResponse
    OSPolicyAssignmentInstanceFilterInventory:
      id: OSPolicyAssignmentInstanceFilterInventory
      properties:
        osShortName:
          description: Required. The OS short name
          type: string
        osVersion:
          description: >-
            The OS version Prefix matches are supported if asterisk(*) is
            provided as the last character. For example, to match all versions
            with a major version of `7`, specify the following value for this
            field `7.*` An empty string matches all OS versions.
          type: string
      description: VM inventory details.
      type: object
    OSPolicyResourcePackageResourceYUM:
      description: >-
        A package managed by YUM. - install: `yum -y install package` - remove:
        `yum -y remove package`
      type: object
      properties:
        name:
          description: Required. Package name.
          type: string
      id: OSPolicyResourcePackageResourceYUM
    OSPolicyResourcePackageResourceGooGet:
      type: object
      properties:
        name:
          type: string
          description: Required. Package name.
      description: >-
        A package managed by GooGet. - install: `googet -noconfirm install
        package` - remove: `googet -noconfirm remove package`
      id: OSPolicyResourcePackageResourceGooGet
    OSPolicyResource:
      description: >-
        An OS policy resource is used to define the desired state configuration
        and provides a specific functionality like installing/removing packages,
        executing a script etc. The system ensures that resources are always in
        their desired state by taking necessary actions if they have drifted
        from their desired state.
      properties:
        repository:
          $ref: '#/components/schemas/OSPolicyResourceRepositoryResource'
          description: Package repository resource
        pkg:
          $ref: '#/components/schemas/OSPolicyResourcePackageResource'
          description: Package resource
        exec:
          $ref: '#/components/schemas/OSPolicyResourceExecResource'
          description: Exec resource
        file:
          description: File resource
          $ref: '#/components/schemas/OSPolicyResourceFileResource'
        id:
          type: string
          description: >-
            Required. The id of the resource with the following restrictions: *
            Must contain only lowercase letters, numbers, and hyphens. * Must
            start with a letter. * Must be between 1-63 characters. * Must end
            with a number or a letter. * Must be unique within the OS policy.
      id: OSPolicyResource
      type: object
    InventorySoftwarePackage:
      type: object
      id: InventorySoftwarePackage
      description: Software package information of the operating system.
      properties:
        cosPackage:
          $ref: '#/components/schemas/InventoryVersionedPackage'
          description: Details of a COS package.
        zypperPatch:
          description: >-
            Details of a Zypper patch. For details about the Zypper package
            manager, see https://en.opensuse.org/SDB:Zypper_manual.
          $ref: '#/components/schemas/InventoryZypperPatch'
        aptPackage:
          description: >-
            Details of an APT package. For details about the apt package
            manager, see https://wiki.debian.org/Apt.
          $ref: '#/components/schemas/InventoryVersionedPackage'
        wuaPackage:
          description: >-
            Details of a Windows Update package. See
            https://docs.microsoft.com/en-us/windows/win32/api/_wua/ for
            information about Windows Update.
          $ref: '#/components/schemas/InventoryWindowsUpdatePackage'
        qfePackage:
          description: >-
            Details of a Windows Quick Fix engineering package. See
            https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering
            for info in Windows Quick Fix Engineering.
          $ref: '#/components/schemas/InventoryWindowsQuickFixEngineeringPackage'
        googetPackage:
          $ref: '#/components/schemas/InventoryVersionedPackage'
          description: >-
            Details of a Googet package. For details about the googet package
            manager, see https://github.com/google/googet.
        windowsApplication:
          $ref: '#/components/schemas/InventoryWindowsApplication'
          description: Details of Windows Application.
        yumPackage:
          $ref: '#/components/schemas/InventoryVersionedPackage'
          description: >-
            Yum package info. For details about the yum package manager, see
            https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/ch-yum.
        zypperPackage:
          description: >-
            Details of a Zypper package. For details about the Zypper package
            manager, see https://en.opensuse.org/SDB:Zypper_manual.
          $ref: '#/components/schemas/InventoryVersionedPackage'
    InstanceOSPoliciesCompliance:
      id: InstanceOSPoliciesCompliance
      properties:
        detailedStateReason:
          type: string
          description: Output only. The reason for the `detailed_state` of the VM (if any).
          readOnly: true
        detailedState:
          type: string
          readOnly: true
          description: >-
            Output only. Detailed compliance state of the VM. This field is
            populated only when compliance state is `UNKNOWN`. It may contain
            one of the following values: * `no-compliance-data`: Compliance data
            is not available for this VM. * `no-agent-detected`: OS Config agent
            is not detected for this VM. * `config-not-supported-by-agent`: The
            version of the OS Config agent running on this VM does not support
            configuration management. * `inactive`: VM is not running. *
            `internal-service-errors`: There were internal service errors
            encountered while enforcing compliance. * `agent-errors`: OS config
            agent encountered errors while enforcing compliance.
        osPolicyCompliances:
          description: >-
            Output only. Compliance data for each `OSPolicy` that is applied to
            the VM.
          readOnly: true
          type: array
          items:
            $ref: >-
              #/components/schemas/InstanceOSPoliciesComplianceOSPolicyCompliance
        instance:
          readOnly: true
          description: Output only. The Compute Engine VM instance name.
          type: string
        lastComplianceRunId:
          description: >-
            Output only. Unique identifier for the last compliance run. This id
            will be logged by the OS config agent during a compliance run and
            can be used for debugging and tracing purpose.
          readOnly: true
          type: string
        name:
          description: >-
            Output only. The `InstanceOSPoliciesCompliance` API resource name.
            Format:
            `projects/{project_number}/locations/{location}/instanceOSPoliciesCompliances/{instance_id}`
          readOnly: true
          type: string
        lastComplianceCheckTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Timestamp of the last compliance check for the VM.
        state:
          readOnly: true
          description: Output only. Compliance state of the VM.
          enumDescriptions:
            - Default value. This value is unused.
            - Compliant state.
            - Non-compliant state
            - Unknown compliance state.
            - >-
              No applicable OS policies were found for the instance. This state
              is only applicable to the instance.
          enum:
            - OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED
            - COMPLIANT
            - NON_COMPLIANT
            - UNKNOWN
            - NO_OS_POLICIES_APPLICABLE
          type: string
      description: >-
        This API resource represents the OS policies compliance data for a
        Compute Engine virtual machine (VM) instance at a given point in time. A
        Compute Engine VM can have multiple OS policy assignments, and each
        assignment can have multiple OS policies. As a result, multiple OS
        policies could be applied to a single VM. You can use this API resource
        to determine both the compliance state of your VM as well as the
        compliance state of an individual OS policy. For more information, see
        [View
        compliance](https://cloud.google.com/compute/docs/os-configuration-management/view-compliance).
      type: object
    VulnerabilityReportVulnerabilityDetails:
      properties:
        references:
          type: array
          items:
            $ref: >-
              #/components/schemas/VulnerabilityReportVulnerabilityDetailsReference
          description: >-
            Corresponds to the references attached to the
            `VulnerabilityDetails`.
        description:
          type: string
          description: >-
            The note or description describing the vulnerability from the
            distro.
        severity:
          description: Assigned severity/impact ranking from the distro.
          type: string
        cvssV3:
          $ref: '#/components/schemas/CVSSv3'
          description: The full description of the CVSSv3 for this vulnerability from NVD.
        cve:
          description: >-
            The CVE of the vulnerability. CVE cannot be empty and the
            combination of should be unique across vulnerabilities for a VM.
          type: string
        cvssV2Score:
          description: >-
            The CVSS V2 score of this vulnerability. CVSS V2 score is on a scale
            of 0 - 10 where 0 indicates low severity and 10 indicates high
            severity.
          format: float
          type: number
      description: >-
        Contains metadata information for the vulnerability. This information is
        collected from the upstream feed of the operating system.
      id: VulnerabilityReportVulnerabilityDetails
      type: object
    ListInstanceOSPoliciesCompliancesResponse:
      properties:
        instanceOsPoliciesCompliances:
          items:
            $ref: '#/components/schemas/InstanceOSPoliciesCompliance'
          description: List of instance OS policies compliance objects.
          type: array
        nextPageToken:
          description: >-
            The pagination token to retrieve the next page of instance OS
            policies compliance objects.
          type: string
      description: >-
        A response message for listing OS policies compliance data for all
        Compute Engine VMs in the given location.
      id: ListInstanceOSPoliciesCompliancesResponse
      type: object
    OSPolicyResourceComplianceExecResourceOutput:
      description: ExecResource specific output.
      id: OSPolicyResourceComplianceExecResourceOutput
      type: object
      properties:
        enforcementOutput:
          description: >-
            Output from Enforcement phase output file (if run). Output size is
            limited to 100K bytes.
          format: byte
          type: string
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      id: CancelOperationRequest
      type: object
      properties: {}
    OSPolicyResourceExecResourceExec:
      id: OSPolicyResourceExecResourceExec
      description: A file or script to execute.
      type: object
      properties:
        outputFilePath:
          type: string
          description: >-
            Only recorded for enforce Exec. Path to an output file (that is
            created by this Exec) whose content will be recorded in
            OSPolicyResourceCompliance after a successful run. Absence or
            failure to read this file will result in this ExecResource being
            non-compliant. Output file size is limited to 100K bytes.
        script:
          description: An inline script. The size of the script is limited to 32KiB.
          type: string
        file:
          $ref: '#/components/schemas/OSPolicyResourceFile'
          description: A remote or local file.
        args:
          type: array
          description: Optional arguments to pass to the source during execution.
          items:
            type: string
        interpreter:
          type: string
          description: Required. The script interpreter to use.
          enumDescriptions:
            - Invalid value, the request will return validation error.
            - >-
              If an interpreter is not specified, the source is executed
              directly. This execution, without an interpreter, only succeeds
              for executables and scripts that have shebang lines.
            - >-
              Indicates that the script runs with `/bin/sh` on Linux and
              `cmd.exe` on Windows.
            - Indicates that the script runs with PowerShell.
          enum:
            - INTERPRETER_UNSPECIFIED
            - NONE
            - SHELL
            - POWERSHELL
    ListOSPolicyAssignmentsResponse:
      description: A response message for listing all assignments under given parent.
      properties:
        osPolicyAssignments:
          type: array
          description: The list of assignments
          items:
            $ref: '#/components/schemas/OSPolicyAssignment'
        nextPageToken:
          type: string
          description: >-
            The pagination token to retrieve the next page of OS policy
            assignments.
      type: object
      id: ListOSPolicyAssignmentsResponse
    OSPolicyResourceGroup:
      properties:
        inventoryFilters:
          items:
            $ref: '#/components/schemas/OSPolicyInventoryFilter'
          description: >-
            List of inventory filters for the resource group. The resources in
            this resource group are applied to the target VM if it satisfies at
            least one of the following inventory filters. For example, to apply
            this resource group to VMs running either `RHEL` or `CentOS`
            operating systems, specify 2 items for the list with following
            values: inventory_filters[0].os_short_name='rhel' and
            inventory_filters[1].os_short_name='centos' If the list is empty,
            this resource group will be applied to the target VM
            unconditionally.
          type: array
        osFilter:
          $ref: '#/components/schemas/OSPolicyOSFilter'
          description: >-
            Deprecated. Use the `inventory_filters` field instead. Used to
            specify the OS filter for a resource group
        resources:
          description: >-
            Required. List of resources configured for this resource group. The
            resources are executed in the exact order specified here.
          items:
            $ref: '#/components/schemas/OSPolicyResource'
          type: array
      type: object
      id: OSPolicyResourceGroup
      description: >-
        Resource groups provide a mechanism to group OS policy resources.
        Resource groups enable OS policy authors to create a single OS policy to
        be applied to VMs running different operating Systems. When the OS
        policy is applied to a target VM, the appropriate resource group within
        the OS policy is selected based on the `OSFilter` specified within the
        resource group.
    InventoryWindowsUpdatePackageWindowsUpdateCategory:
      id: InventoryWindowsUpdatePackageWindowsUpdateCategory
      type: object
      properties:
        name:
          type: string
          description: The name of the windows update category.
        id:
          type: string
          description: The identifier of the windows update category.
      description: Categories specified by the Windows Update.
    OSPolicyAssignmentLabelSet:
      properties:
        labels:
          description: >-
            Labels are identified by key/value pairs in this map. A VM should
            contain all the key/value pairs specified in this map to be
            selected.
          additionalProperties:
            type: string
          type: object
      description: >-
        Message representing label set. * A label is a key value pair set for a
        VM. * A LabelSet is a set of labels. * Labels within a LabelSet are
        ANDed. In other words, a LabelSet is applicable for a VM only if it
        matches all the labels in the LabelSet. * Example: A LabelSet with 2
        labels: `env=prod` and `type=webserver` will only be applicable for
        those VMs with both labels present.
      type: object
      id: OSPolicyAssignmentLabelSet
    InventoryItem:
      description: A single piece of inventory on a VM.
      type: object
      properties:
        updateTime:
          description: When this inventory item was last modified.
          format: google-datetime
          type: string
        installedPackage:
          $ref: '#/components/schemas/InventorySoftwarePackage'
          description: Software package present on the VM instance.
        id:
          type: string
          description: Identifier for this item, unique across items for this VM.
        type:
          enum:
            - TYPE_UNSPECIFIED
            - INSTALLED_PACKAGE
            - AVAILABLE_PACKAGE
          type: string
          enumDescriptions:
            - Invalid. An type must be specified.
            - This represents a package that is installed on the VM.
            - This represents an update that is available for a package.
          description: The specific type of inventory, correlating to its specific details.
        createTime:
          description: When this inventory item was first detected.
          format: google-datetime
          type: string
        originType:
          type: string
          enumDescriptions:
            - Invalid. An origin type must be specified.
            - >-
              This inventory item was discovered as the result of the agent
              reporting inventory via the reporting API.
          enum:
            - ORIGIN_TYPE_UNSPECIFIED
            - INVENTORY_REPORT
          description: The origin of this inventory item.
        availablePackage:
          description: Software package available to be installed on the VM instance.
          $ref: '#/components/schemas/InventorySoftwarePackage'
      id: InventoryItem
    OSPolicyResourceFileRemote:
      type: object
      id: OSPolicyResourceFileRemote
      description: Specifies a file available via some URI.
      properties:
        uri:
          description: >-
            Required. URI from which to fetch the object. It should contain both
            the protocol and path following the format
            `{protocol}://{location}`.
          type: string
        sha256Checksum:
          description: SHA256 checksum of the remote file.
          type: string
    OSPolicyResourceRepositoryResource:
      description: A resource that manages a package repository.
      id: OSPolicyResourceRepositoryResource
      type: object
      properties:
        yum:
          description: A Yum Repository.
          $ref: '#/components/schemas/OSPolicyResourceRepositoryResourceYumRepository'
        goo:
          $ref: '#/components/schemas/OSPolicyResourceRepositoryResourceGooRepository'
          description: A Goo Repository.
        zypper:
          $ref: >-
            #/components/schemas/OSPolicyResourceRepositoryResourceZypperRepository
          description: A Zypper Repository.
        apt:
          description: An Apt Repository.
          $ref: '#/components/schemas/OSPolicyResourceRepositoryResourceAptRepository'
    OSPolicyResourceFileResource:
      properties:
        permissions:
          type: string
          description: >-
            Consists of three octal digits which represent, in order, the
            permissions of the owner, group, and other users for the file
            (similarly to the numeric mode used in the linux chmod utility).
            Each digit represents a three bit number with the 4 bit
            corresponding to the read permissions, the 2 bit corresponds to the
            write bit, and the one bit corresponds to the execute permission.
            Default behavior is 755. Below are some examples of permissions and
            their associated values: read, write, and execute: 7 read and
            execute: 5 read and write: 6 read only: 4
        state:
          enum:
            - DESIRED_STATE_UNSPECIFIED
            - PRESENT
            - ABSENT
            - CONTENTS_MATCH
          enumDescriptions:
            - Unspecified is invalid.
            - Ensure file at path is present.
            - Ensure file at path is absent.
            - >-
              Ensure the contents of the file at path matches. If the file does
              not exist it will be created.
          description: Required. Desired state of the file.
          type: string
        path:
          description: Required. The absolute path of the file within the VM.
          type: string
        content:
          description: >-
            A a file with this content. The size of the content is limited to
            32KiB.
          type: string
        file:
          description: A remote or local source.
          $ref: '#/components/schemas/OSPolicyResourceFile'
      type: object
      description: A resource that manages the state of a file.
      id: OSPolicyResourceFileResource
    InventoryVersionedPackage:
      id: InventoryVersionedPackage
      type: object
      properties:
        version:
          description: The version of the package.
          type: string
        packageName:
          type: string
          description: The name of the package.
        architecture:
          description: The system architecture this package is intended for.
          type: string
      description: >-
        Information related to the a standard versioned package. This includes
        package info for APT, Yum, Zypper, and Googet package managers.
    GoogleCloudOsconfigV1__OSPolicyAssignmentOperationMetadata:
      id: GoogleCloudOsconfigV1__OSPolicyAssignmentOperationMetadata
      description: >-
        OS policy assignment operation metadata provided by OS policy assignment
        API methods that return long running operations.
      type: object
      properties:
        apiMethod:
          enumDescriptions:
            - Invalid value
            - Create OS policy assignment API method
            - Update OS policy assignment API method
            - Delete OS policy assignment API method
          enum:
            - API_METHOD_UNSPECIFIED
            - CREATE
            - UPDATE
            - DELETE
          description: The OS policy assignment API method.
          type: string
        osPolicyAssignment:
          type: string
          description: >-
            Reference to the `OSPolicyAssignment` API resource. Format:
            `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`
        rolloutUpdateTime:
          type: string
          format: google-datetime
          description: Rollout update time
        rolloutState:
          enum:
            - ROLLOUT_STATE_UNSPECIFIED
            - IN_PROGRESS
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
          enumDescriptions:
            - Invalid value
            - The rollout is in progress.
            - The rollout is being cancelled.
            - The rollout is cancelled.
            - The rollout has completed successfully.
          type: string
          description: State of the rollout
        rolloutStartTime:
          description: Rollout start time
          format: google-datetime
          type: string
    Operation:
      type: object
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      id: Operation
      properties:
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
    InstanceOSPoliciesComplianceOSPolicyCompliance:
      description: Compliance data for an OS policy
      type: object
      properties:
        osPolicyAssignment:
          description: >-
            Reference to the `OSPolicyAssignment` API resource that the
            `OSPolicy` belongs to. Format:
            `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`
          type: string
        osPolicyResourceCompliances:
          type: array
          description: >-
            Compliance data for each `OSPolicyResource` that is applied to the
            VM.
          items:
            $ref: '#/components/schemas/OSPolicyResourceCompliance'
        osPolicyId:
          description: The OS policy id
          type: string
        state:
          description: Compliance state of the OS policy.
          enumDescriptions:
            - Default value. This value is unused.
            - Compliant state.
            - Non-compliant state
            - Unknown compliance state.
            - >-
              No applicable OS policies were found for the instance. This state
              is only applicable to the instance.
          enum:
            - OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED
            - COMPLIANT
            - NON_COMPLIANT
            - UNKNOWN
            - NO_OS_POLICIES_APPLICABLE
          type: string
      id: InstanceOSPoliciesComplianceOSPolicyCompliance
    FixedOrPercent:
      properties:
        fixed:
          format: int32
          type: integer
          description: Specifies a fixed value.
        percent:
          description: >-
            Specifies the relative value defined as a percentage, which will be
            multiplied by a reference value.
          format: int32
          type: integer
      description: >-
        Message encapsulating a value that can be either absolute ("fixed") or
        relative ("percent") to a value.
      type: object
      id: FixedOrPercent
    CVSSv3:
      type: object
      description: >-
        Common Vulnerability Scoring System version 3. For details, see
        https://www.first.org/cvss/specification-document
      properties:
        integrityImpact:
          description: >-
            This metric measures the impact to integrity of a successfully
            exploited vulnerability.
          type: string
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
        impactScore:
          format: float
          description: >-
            The Impact sub-score equation is derived from the Base Impact
            metrics.
          type: number
        attackVector:
          enum:
            - ATTACK_VECTOR_UNSPECIFIED
            - ATTACK_VECTOR_NETWORK
            - ATTACK_VECTOR_ADJACENT
            - ATTACK_VECTOR_LOCAL
            - ATTACK_VECTOR_PHYSICAL
          description: >-
            This metric reflects the context by which vulnerability exploitation
            is possible.
          enumDescriptions:
            - Invalid value.
            - >-
              The vulnerable component is bound to the network stack and the set
              of possible attackers extends beyond the other options listed
              below, up to and including the entire Internet.
            - >-
              The vulnerable component is bound to the network stack, but the
              attack is limited at the protocol level to a logically adjacent
              topology.
            - >-
              The vulnerable component is not bound to the network stack and the
              attacker's path is via read/write/execute capabilities.
            - >-
              The attack requires the attacker to physically touch or manipulate
              the vulnerable component.
          type: string
        baseScore:
          description: >-
            The base score is a function of the base metric scores.
            https://www.first.org/cvss/specification-document#Base-Metrics
          type: number
          format: float
        privilegesRequired:
          description: >-
            This metric describes the level of privileges an attacker must
            possess before successfully exploiting the vulnerability.
          enum:
            - PRIVILEGES_REQUIRED_UNSPECIFIED
            - PRIVILEGES_REQUIRED_NONE
            - PRIVILEGES_REQUIRED_LOW
            - PRIVILEGES_REQUIRED_HIGH
          type: string
          enumDescriptions:
            - Invalid value.
            - >-
              The attacker is unauthorized prior to attack, and therefore does
              not require any access to settings or files of the vulnerable
              system to carry out an attack.
            - >-
              The attacker requires privileges that provide basic user
              capabilities that could normally affect only settings and files
              owned by a user. Alternatively, an attacker with Low privileges
              has the ability to access only non-sensitive resources.
            - >-
              The attacker requires privileges that provide significant (e.g.,
              administrative) control over the vulnerable component allowing
              access to component-wide settings and files.
        userInteraction:
          description: >-
            This metric captures the requirement for a human user, other than
            the attacker, to participate in the successful compromise of the
            vulnerable component.
          enum:
            - USER_INTERACTION_UNSPECIFIED
            - USER_INTERACTION_NONE
            - USER_INTERACTION_REQUIRED
          type: string
          enumDescriptions:
            - Invalid value.
            - >-
              The vulnerable system can be exploited without interaction from
              any user.
            - >-
              Successful exploitation of this vulnerability requires a user to
              take some action before the vulnerability can be exploited.
        scope:
          enum:
            - SCOPE_UNSPECIFIED
            - SCOPE_UNCHANGED
            - SCOPE_CHANGED
          enumDescriptions:
            - Invalid value.
            - >-
              An exploited vulnerability can only affect resources managed by
              the same security authority.
            - >-
              An exploited vulnerability can affect resources beyond the
              security scope managed by the security authority of the vulnerable
              component.
          type: string
          description: >-
            The Scope metric captures whether a vulnerability in one vulnerable
            component impacts resources in components beyond its security scope.
        exploitabilityScore:
          description: >-
            The Exploitability sub-score equation is derived from the Base
            Exploitability metrics.
            https://www.first.org/cvss/specification-document#2-1-Exploitability-Metrics
          format: float
          type: number
        attackComplexity:
          type: string
          enumDescriptions:
            - Invalid value.
            - >-
              Specialized access conditions or extenuating circumstances do not
              exist. An attacker can expect repeatable success when attacking
              the vulnerable component.
            - >-
              A successful attack depends on conditions beyond the attacker's
              control. That is, a successful attack cannot be accomplished at
              will, but requires the attacker to invest in some measurable
              amount of effort in preparation or execution against the
              vulnerable component before a successful attack can be expected.
          enum:
            - ATTACK_COMPLEXITY_UNSPECIFIED
            - ATTACK_COMPLEXITY_LOW
            - ATTACK_COMPLEXITY_HIGH
          description: >-
            This metric describes the conditions beyond the attacker's control
            that must exist in order to exploit the vulnerability.
        availabilityImpact:
          description: >-
            This metric measures the impact to the availability of the impacted
            component resulting from a successfully exploited vulnerability.
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
          type: string
        confidentialityImpact:
          type: string
          description: >-
            This metric measures the impact to the confidentiality of the
            information resources managed by a software component due to a
            successfully exploited vulnerability.
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
      id: CVSSv3
    OSPolicyResourceCompliance:
      type: object
      properties:
        osPolicyResourceId:
          type: string
          description: The id of the OS policy resource.
        execResourceOutput:
          $ref: '#/components/schemas/OSPolicyResourceComplianceExecResourceOutput'
          description: ExecResource specific output.
        state:
          type: string
          enum:
            - OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED
            - COMPLIANT
            - NON_COMPLIANT
            - UNKNOWN
            - NO_OS_POLICIES_APPLICABLE
          description: Compliance state of the OS policy resource.
          enumDescriptions:
            - Default value. This value is unused.
            - Compliant state.
            - Non-compliant state
            - Unknown compliance state.
            - >-
              No applicable OS policies were found for the instance. This state
              is only applicable to the instance.
        configSteps:
          items:
            $ref: '#/components/schemas/OSPolicyResourceConfigStep'
          description: >-
            Ordered list of configuration steps taken by the agent for the OS
            policy resource.
          type: array
      id: OSPolicyResourceCompliance
      description: Compliance data for an OS policy resource.
    OSPolicyResourceRepositoryResourceYumRepository:
      description: >-
        Represents a single yum package repository. These are added to a repo
        file that is managed at `/etc/yum.repos.d/google_osconfig.repo`.
      properties:
        baseUrl:
          description: Required. The location of the repository directory.
          type: string
        gpgKeys:
          description: URIs of GPG keys.
          type: array
          items:
            type: string
        id:
          description: >-
            Required. A one word, unique name for this repository. This is the
            `repo id` in the yum config file and also the `display_name` if
            `display_name` is omitted. This id is also used as the unique
            identifier when checking for resource conflicts.
          type: string
        displayName:
          description: The display name of the repository.
          type: string
      type: object
      id: OSPolicyResourceRepositoryResourceYumRepository
    ListVulnerabilityReportsResponse:
      properties:
        vulnerabilityReports:
          description: List of vulnerabilityReport objects.
          items:
            $ref: '#/components/schemas/VulnerabilityReport'
          type: array
        nextPageToken:
          description: >-
            The pagination token to retrieve the next page of
            vulnerabilityReports object.
          type: string
      id: ListVulnerabilityReportsResponse
      description: >-
        A response message for listing vulnerability reports for all VM
        instances in the specified location.
      type: object
    OSPolicyAssignmentRollout:
      type: object
      description: >-
        Message to configure the rollout at the zonal level for the OS policy
        assignment.
      properties:
        disruptionBudget:
          $ref: '#/components/schemas/FixedOrPercent'
          description: >-
            Required. The maximum number (or percentage) of VMs per zone to
            disrupt at any given moment.
        minWaitDuration:
          type: string
          format: google-duration
          description: >-
            Required. This determines the minimum duration of time to wait after
            the configuration changes are applied through the current rollout. A
            VM continues to count towards the `disruption_budget` at least until
            this duration of time has passed after configuration changes are
            applied.
      id: OSPolicyAssignmentRollout
    OSPolicyResourcePackageResource:
      id: OSPolicyResourcePackageResource
      properties:
        desiredState:
          enum:
            - DESIRED_STATE_UNSPECIFIED
            - INSTALLED
            - REMOVED
          enumDescriptions:
            - Unspecified is invalid.
            - Ensure that the package is installed.
            - >-
              The agent ensures that the package is not installed and uninstalls
              it if detected.
          type: string
          description: >-
            Required. The desired state the agent should maintain for this
            package.
        msi:
          description: An MSI package.
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceMSI'
        yum:
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceYUM'
          description: A package managed by YUM.
        rpm:
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceRPM'
          description: An rpm package file.
        apt:
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceAPT'
          description: A package managed by Apt.
        googet:
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceGooGet'
          description: A package managed by GooGet.
        zypper:
          description: A package managed by Zypper.
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceZypper'
        deb:
          description: A deb package file.
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceDeb'
      type: object
      description: A resource that manages a system package.
    InventoryOsInfo:
      properties:
        version:
          description: The version of the operating system.
          type: string
        shortName:
          type: string
          description: The operating system short name. For example, 'windows' or 'debian'.
        hostname:
          description: The VM hostname.
          type: string
        kernelVersion:
          type: string
          description: The kernel version of the operating system.
        kernelRelease:
          type: string
          description: The kernel release of the operating system.
        longName:
          type: string
          description: >-
            The operating system long name. For example 'Debian GNU/Linux 9' or
            'Microsoft Window Server 2019 Datacenter'.
        osconfigAgentVersion:
          description: The current version of the OS Config agent running on the VM.
          type: string
        architecture:
          type: string
          description: The system architecture of the operating system.
      type: object
      description: Operating system information for the VM.
      id: InventoryOsInfo
    OSPolicyAssignmentInstanceFilter:
      id: OSPolicyAssignmentInstanceFilter
      properties:
        inclusionLabels:
          description: >-
            List of label sets used for VM inclusion. If the list has more than
            one `LabelSet`, the VM is included if any of the label sets are
            applicable for the VM.
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentLabelSet'
          type: array
        inventories:
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentInstanceFilterInventory'
          description: >-
            List of inventories to select VMs. A VM is selected if its inventory
            data matches at least one of the following inventories.
          type: array
        all:
          type: boolean
          description: >-
            Target all VMs in the project. If true, no other criteria is
            permitted.
        exclusionLabels:
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentLabelSet'
          type: array
          description: >-
            List of label sets used for VM exclusion. If the list has more than
            one label set, the VM is excluded if any of the label sets are
            applicable for the VM.
        osShortNames:
          items:
            type: string
          type: array
          description: >-
            Deprecated. Use the `inventories` field instead. A VM is selected if
            it's OS short name matches with any of the values provided in this
            list.
      description: >-
        Filters to select target VMs for an assignment. If more than one filter
        criteria is specified below, a VM will be selected if and only if it
        satisfies all of them.
      type: object
    VulnerabilityReportVulnerabilityDetailsReference:
      properties:
        source:
          description: The source of the reference e.g. NVD.
          type: string
        url:
          description: The url of the reference.
          type: string
      id: VulnerabilityReportVulnerabilityDetailsReference
      description: A reference for this vulnerability.
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      id: Status
      properties:
        code:
          type: integer
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
        details:
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
    OSPolicyResourceFileGcs:
      properties:
        generation:
          format: int64
          description: Generation number of the Cloud Storage object.
          type: string
        bucket:
          description: Required. Bucket of the Cloud Storage object.
          type: string
        object:
          description: Required. Name of the Cloud Storage object.
          type: string
      description: Specifies a file available as a Cloud Storage Object.
      id: OSPolicyResourceFileGcs
      type: object
    ListOSPolicyAssignmentReportsResponse:
      properties:
        osPolicyAssignmentReports:
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentReport'
          type: array
          description: List of OS policy assignment reports.
        nextPageToken:
          type: string
          description: >-
            The pagination token to retrieve the next page of OS policy
            assignment report objects.
      type: object
      description: >-
        A response message for listing OS Policy assignment reports including
        the page of results and page token.
      id: ListOSPolicyAssignmentReportsResponse
    ListOSPolicyAssignmentRevisionsResponse:
      id: ListOSPolicyAssignmentRevisionsResponse
      properties:
        osPolicyAssignments:
          items:
            $ref: '#/components/schemas/OSPolicyAssignment'
          description: The OS policy assignment revisions
          type: array
        nextPageToken:
          type: string
          description: >-
            The pagination token to retrieve the next page of OS policy
            assignment revisions.
      description: A response message for listing all revisions for a OS policy assignment.
      type: object
    OSPolicy:
      properties:
        allowNoResourceGroupMatch:
          description: >-
            This flag determines the OS policy compliance status when none of
            the resource groups within the policy are applicable for a VM. Set
            this value to `true` if the policy needs to be reported as compliant
            even if the policy has nothing to validate or enforce.
          type: boolean
        resourceGroups:
          type: array
          description: >-
            Required. List of resource groups for the policy. For a particular
            VM, resource groups are evaluated in the order specified and the
            first resource group that is applicable is selected and the rest are
            ignored. If none of the resource groups are applicable for a VM, the
            VM is considered to be non-compliant w.r.t this policy. This
            behavior can be toggled by the flag `allow_no_resource_group_match`
          items:
            $ref: '#/components/schemas/OSPolicyResourceGroup'
        id:
          description: >-
            Required. The id of the OS policy with the following restrictions: *
            Must contain only lowercase letters, numbers, and hyphens. * Must
            start with a letter. * Must be between 1-63 characters. * Must end
            with a number or a letter. * Must be unique within the assignment.
          type: string
        description:
          description: >-
            Policy description. Length of the description is limited to 1024
            characters.
          type: string
        mode:
          enum:
            - MODE_UNSPECIFIED
            - VALIDATION
            - ENFORCEMENT
          enumDescriptions:
            - Invalid mode
            - >-
              This mode checks if the configuration resources in the policy are
              in their desired state. No actions are performed if they are not
              in the desired state. This mode is used for reporting purposes.
            - >-
              This mode checks if the configuration resources in the policy are
              in their desired state, and if not, enforces the desired state.
          type: string
          description: Required. Policy mode
      description: An OS policy defines the desired state configuration for a VM.
      type: object
      id: OSPolicy
    InventoryZypperPatch:
      type: object
      id: InventoryZypperPatch
      properties:
        patchName:
          description: The name of the patch.
          type: string
        severity:
          description: The severity specified for this patch
          type: string
        category:
          description: The category of the patch.
          type: string
        summary:
          description: Any summary information provided about this patch.
          type: string
      description: Details related to a Zypper Patch.
    VulnerabilityReportVulnerability:
      properties:
        items:
          type: array
          description: List of items affected by the vulnerability.
          items:
            $ref: '#/components/schemas/VulnerabilityReportVulnerabilityItem'
        updateTime:
          type: string
          description: The timestamp for when the vulnerability was last modified.
          format: google-datetime
        installedInventoryItemIds:
          description: >-
            Corresponds to the `INSTALLED_PACKAGE` inventory item on the VM.
            This field displays the inventory items affected by this
            vulnerability. If the vulnerability report was not updated after the
            VM inventory update, these values might not display in VM inventory.
            For some distros, this field may be empty.
          type: array
          items:
            type: string
        createTime:
          type: string
          format: google-datetime
          description: The timestamp for when the vulnerability was first detected.
        availableInventoryItemIds:
          items:
            type: string
          type: array
          description: >-
            Corresponds to the `AVAILABLE_PACKAGE` inventory item on the VM. If
            the vulnerability report was not updated after the VM inventory
            update, these values might not display in VM inventory. If there is
            no available fix, the field is empty. The `inventory_item` value
            specifies the latest `SoftwarePackage` available to the VM that
            fixes the vulnerability.
        details:
          $ref: '#/components/schemas/VulnerabilityReportVulnerabilityDetails'
          description: >-
            Contains metadata as per the upstream feed of the operating system
            and NVD.
      id: VulnerabilityReportVulnerability
      description: A vulnerability affecting the VM instance.
      type: object
    InventoryWindowsApplication:
      description: >-
        Contains information about a Windows application that is retrieved from
        the Windows Registry. For more information about these fields, see:
        https://docs.microsoft.com/en-us/windows/win32/msi/uninstall-registry-key
      type: object
      id: InventoryWindowsApplication
      properties:
        helpLink:
          description: The internet address for technical support.
          type: string
        installDate:
          description: >-
            The last time this product received service. The value of this
            property is replaced each time a patch is applied or removed from
            the product or the command-line option is used to repair the
            product.
          $ref: '#/components/schemas/Date'
        displayName:
          type: string
          description: The name of the application or product.
        publisher:
          type: string
          description: The name of the manufacturer for the product or application.
        displayVersion:
          description: The version of the product or application in string format.
          type: string
    OSPolicyResourcePackageResourceZypper:
      description: >-
        A package managed by Zypper. - install: `zypper -y install package` -
        remove: `zypper -y rm package`
      properties:
        name:
          description: Required. Package name.
          type: string
      id: OSPolicyResourcePackageResourceZypper
      type: object
    InventoryWindowsUpdatePackage:
      description: >-
        Details related to a Windows Update package. Field data and names are
        taken from Windows Update API IUpdate Interface:
        https://docs.microsoft.com/en-us/windows/win32/api/_wua/ Descriptive
        fields like title, and description are localized based on the locale of
        the VM being updated.
      type: object
      properties:
        revisionNumber:
          description: The revision number of this update package.
          type: integer
          format: int32
        updateId:
          type: string
          description: >-
            Gets the identifier of an update package. Stays the same across
            revisions.
        description:
          type: string
          description: The localized description of the update package.
        lastDeploymentChangeTime:
          description: The last published date of the update, in (UTC) date and time.
          format: google-datetime
          type: string
        categories:
          description: The categories that are associated with this update package.
          items:
            $ref: >-
              #/components/schemas/InventoryWindowsUpdatePackageWindowsUpdateCategory
          type: array
        title:
          type: string
          description: The localized title of the update package.
        supportUrl:
          type: string
          description: >-
            A hyperlink to the language-specific support information for the
            update.
        moreInfoUrls:
          items:
            type: string
          type: array
          description: >-
            A collection of URLs that provide more information about the update
            package.
        kbArticleIds:
          items:
            type: string
          type: array
          description: >-
            A collection of Microsoft Knowledge Base article IDs that are
            associated with the update package.
      id: InventoryWindowsUpdatePackage
    Inventory:
      properties:
        updateTime:
          description: Output only. Timestamp of the last reported inventory for the VM.
          readOnly: true
          format: google-datetime
          type: string
        items:
          type: object
          description: >-
            Output only. Inventory items related to the VM keyed by an opaque
            unique identifier for each inventory item. The identifier is unique
            to each distinct and addressable inventory item and will change,
            when there is a new package version.
          additionalProperties:
            $ref: '#/components/schemas/InventoryItem'
          readOnly: true
        name:
          type: string
          description: >-
            Output only. The `Inventory` API resource name. Format:
            `projects/{project_number}/locations/{location}/instances/{instance_id}/inventory`
          readOnly: true
        osInfo:
          readOnly: true
          description: Output only. Base level operating system information for the VM.
          $ref: '#/components/schemas/InventoryOsInfo'
      id: Inventory
      type: object
      description: >-
        This API resource represents the available inventory data for a Compute
        Engine virtual machine (VM) instance at a given point in time. You can
        use this API resource to determine the inventory data of your VM. For
        more information, see [Information provided by OS inventory
        management](https://cloud.google.com/compute/docs/instances/os-inventory-management#data-collected).
    OSPolicyResourceConfigStep:
      properties:
        outcome:
          description: Outcome of the configuration step.
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - The step succeeded.
            - The step failed.
          enum:
            - OUTCOME_UNSPECIFIED
            - SUCCEEDED
            - FAILED
        type:
          type: string
          enumDescriptions:
            - Default value. This value is unused.
            - Validation to detect resource conflicts, schema errors, etc.
            - Check the current desired state status of the resource.
            - >-
              Enforce the desired state for a resource that is not in desired
              state.
            - >-
              Re-check desired state status for a resource after enforcement of
              all resources in the current configuration run. This step is used
              to determine the final desired state status for the resource. It
              accounts for any resources that might have drifted from their
              desired state due to side effects from configuring other resources
              during the current configuration run.
          description: Configuration step type.
          enum:
            - TYPE_UNSPECIFIED
            - VALIDATION
            - DESIRED_STATE_CHECK
            - DESIRED_STATE_ENFORCEMENT
            - DESIRED_STATE_CHECK_POST_ENFORCEMENT
        errorMessage:
          type: string
          description: >-
            An error message recorded during the execution of this step. Only
            populated when outcome is FAILED.
      id: OSPolicyResourceConfigStep
      type: object
      description: >-
        Step performed by the OS Config agent for configuring an
        `OSPolicyResource` to its desired state.
    OSPolicyAssignmentReport:
      properties:
        lastRunId:
          description: >-
            Unique identifier of the last attempted run to apply the OS policies
            associated with this assignment on the VM. This ID is logged by the
            OS Config agent while applying the OS policies associated with this
            assignment on the VM. NOTE: If the service is unable to successfully
            connect to the agent for this run, then this id will not be
            available in the agent logs.
          type: string
        osPolicyCompliances:
          description: Compliance data for each `OSPolicy` that is applied to the VM.
          type: array
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentReportOSPolicyCompliance'
        osPolicyAssignment:
          description: >-
            Reference to the `OSPolicyAssignment` API resource that the
            `OSPolicy` belongs to. Format:
            `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`
          type: string
        name:
          description: >-
            The `OSPolicyAssignmentReport` API resource name. Format:
            `projects/{project_number}/locations/{location}/instances/{instance_id}/osPolicyAssignments/{os_policy_assignment_id}/report`
          type: string
        instance:
          description: The Compute Engine VM instance name.
          type: string
        updateTime:
          format: google-datetime
          description: Timestamp for when the report was last generated.
          type: string
      description: A report of the OS policy assignment status for a given instance.
      id: OSPolicyAssignmentReport
      type: object
    OSPolicyResourcePackageResourceAPT:
      properties:
        name:
          description: Required. Package name.
          type: string
      description: >-
        A package managed by APT. - install: `apt-get update && apt-get -y
        install [name]` - remove: `apt-get -y remove [name]`
      id: OSPolicyResourcePackageResourceAPT
      type: object
    OSPolicyResourceRepositoryResourceZypperRepository:
      type: object
      description: >-
        Represents a single zypper package repository. These are added to a repo
        file that is managed at `/etc/zypp/repos.d/google_osconfig.repo`.
      properties:
        displayName:
          type: string
          description: The display name of the repository.
        id:
          type: string
          description: >-
            Required. A one word, unique name for this repository. This is the
            `repo id` in the zypper config file and also the `display_name` if
            `display_name` is omitted. This id is also used as the unique
            identifier when checking for GuestPolicy conflicts.
        gpgKeys:
          type: array
          description: URIs of GPG keys.
          items:
            type: string
        baseUrl:
          type: string
          description: Required. The location of the repository directory.
      id: OSPolicyResourceRepositoryResourceZypperRepository
    Date:
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      id: Date
      type: object
      properties:
        month:
          type: integer
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          format: int32
        day:
          format: int32
          type: integer
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
        year:
          format: int32
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
          type: integer
    OSPolicyInventoryFilter:
      id: OSPolicyInventoryFilter
      description: Filtering criteria to select VMs based on inventory details.
      type: object
      properties:
        osVersion:
          description: >-
            The OS version Prefix matches are supported if asterisk(*) is
            provided as the last character. For example, to match all versions
            with a major version of `7`, specify the following value for this
            field `7.*` An empty string matches all OS versions.
          type: string
        osShortName:
          description: Required. The OS short name
          type: string
    OSPolicyResourceFile:
      type: object
      id: OSPolicyResourceFile
      description: A remote or local file.
      properties:
        localPath:
          type: string
          description: A local path within the VM to use.
        allowInsecure:
          type: boolean
          description: >-
            Defaults to false. When false, files are subject to validations
            based on the file type: Remote: A checksum must be specified. Cloud
            Storage: An object generation number must be specified.
        remote:
          description: A generic remote file.
          $ref: '#/components/schemas/OSPolicyResourceFileRemote'
        gcs:
          $ref: '#/components/schemas/OSPolicyResourceFileGcs'
          description: A Cloud Storage object.
    OSPolicyAssignment:
      type: object
      description: >-
        OS policy assignment is an API resource that is used to apply a set of
        OS policies to a dynamically targeted group of Compute Engine VM
        instances. An OS policy is used to define the desired state
        configuration for a Compute Engine VM instance through a set of
        configuration resources that provide capabilities such as installing or
        removing software packages, or executing a script. For more information,
        see [OS policy and OS policy
        assignment](https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies).
      id: OSPolicyAssignment
      properties:
        baseline:
          description: >-
            Output only. Indicates that this revision has been successfully
            rolled out in this zone and new VMs will be assigned OS policies
            from this revision. For a given OS policy assignment, there is only
            one revision with a value of `true` for this field.
          readOnly: true
          type: boolean
        revisionId:
          description: >-
            Output only. The assignment revision ID A new revision is committed
            whenever a rollout is triggered for a OS policy assignment
          readOnly: true
          type: string
        rolloutState:
          enumDescriptions:
            - Invalid value
            - The rollout is in progress.
            - The rollout is being cancelled.
            - The rollout is cancelled.
            - The rollout has completed successfully.
          readOnly: true
          description: Output only. OS policy assignment rollout state
          type: string
          enum:
            - ROLLOUT_STATE_UNSPECIFIED
            - IN_PROGRESS
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
        revisionCreateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The timestamp that the revision was created.
        name:
          description: >-
            Resource name. Format:
            `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id}`
            This field is ignored when you create an OS policy assignment.
          type: string
        rollout:
          $ref: '#/components/schemas/OSPolicyAssignmentRollout'
          description: >-
            Required. Rollout to deploy the OS policy assignment. A rollout is
            triggered in the following situations: 1) OSPolicyAssignment is
            created. 2) OSPolicyAssignment is updated and the update contains
            changes to one of the following fields: - instance_filter -
            os_policies 3) OSPolicyAssignment is deleted.
        instanceFilter:
          description: Required. Filter to select VMs.
          $ref: '#/components/schemas/OSPolicyAssignmentInstanceFilter'
        reconciling:
          type: boolean
          readOnly: true
          description: >-
            Output only. Indicates that reconciliation is in progress for the
            revision. This value is `true` when the `rollout_state` is one of: *
            IN_PROGRESS * CANCELLING
        description:
          type: string
          description: >-
            OS policy assignment description. Length of the description is
            limited to 1024 characters.
        deleted:
          readOnly: true
          type: boolean
          description: >-
            Output only. Indicates that this revision deletes the OS policy
            assignment.
        etag:
          description: >-
            The etag for this OS policy assignment. If this is provided on
            update, it must match the server's etag.
          type: string
        uid:
          type: string
          readOnly: true
          description: >-
            Output only. Server generated unique id for the OS policy assignment
            resource.
        osPolicies:
          items:
            $ref: '#/components/schemas/OSPolicy'
          description: Required. List of OS policies to be applied to the VMs.
          type: array
    OSPolicyResourcePackageResourceDeb:
      description: A deb package file. dpkg packages only support INSTALLED state.
      type: object
      properties:
        source:
          $ref: '#/components/schemas/OSPolicyResourceFile'
          description: Required. A deb package.
        pullDeps:
          description: >-
            Whether dependencies should also be installed. - install when false:
            `dpkg -i package` - install when true: `apt-get update && apt-get -y
            install package.deb`
          type: boolean
      id: OSPolicyResourcePackageResourceDeb
    OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput:
      id: >-
        OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput
      properties:
        enforcementOutput:
          type: string
          format: byte
          description: >-
            Output from enforcement phase output file (if run). Output size is
            limited to 100K bytes.
      description: ExecResource specific output.
      type: object
    OSPolicyResourcePackageResourceMSI:
      properties:
        source:
          description: Required. The MSI package.
          $ref: '#/components/schemas/OSPolicyResourceFile'
        properties:
          description: >-
            Additional properties to use during installation. This should be in
            the format of Property=Setting. Appended to the defaults of
            `ACTION=INSTALL REBOOT=ReallySuppress`.
          items:
            type: string
          type: array
      description: An MSI package. MSI packages only support INSTALLED state.
      id: OSPolicyResourcePackageResourceMSI
      type: object
    OSPolicyResourcePackageResourceRPM:
      properties:
        source:
          description: Required. An rpm package.
          $ref: '#/components/schemas/OSPolicyResourceFile'
        pullDeps:
          type: boolean
          description: >-
            Whether dependencies should also be installed. - install when false:
            `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum
            -y install package.rpm` or `zypper -y install package.rpm`
      id: OSPolicyResourcePackageResourceRPM
      type: object
      description: An RPM package file. RPM packages only support INSTALLED state.
    Empty:
      properties: {}
      id: Empty
      type: object
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    OSPolicyAssignmentOperationMetadata:
      properties:
        rolloutUpdateTime:
          type: string
          format: google-datetime
          description: Rollout update time
        apiMethod:
          enum:
            - API_METHOD_UNSPECIFIED
            - CREATE
            - UPDATE
            - DELETE
          description: The OS policy assignment API method.
          type: string
          enumDescriptions:
            - Invalid value
            - Create OS policy assignment API method
            - Update OS policy assignment API method
            - Delete OS policy assignment API method
        rolloutState:
          enumDescriptions:
            - Invalid value
            - The rollout is in progress.
            - The rollout is being cancelled.
            - The rollout is cancelled.
            - The rollout has completed successfully.
          type: string
          description: State of the rollout
          enum:
            - ROLLOUT_STATE_UNSPECIFIED
            - IN_PROGRESS
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
        rolloutStartTime:
          format: google-datetime
          description: Rollout start time
          type: string
        osPolicyAssignment:
          description: >-
            Reference to the `OSPolicyAssignment` API resource. Format:
            `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`
          type: string
      type: object
      id: OSPolicyAssignmentOperationMetadata
      description: >-
        OS policy assignment operation metadata provided by OS policy assignment
        API methods that return long running operations.
    VulnerabilityReport:
      properties:
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: >-
            Output only. The timestamp for when the last vulnerability report
            was generated for the VM.
        vulnerabilities:
          description: Output only. List of vulnerabilities affecting the VM.
          type: array
          items:
            $ref: '#/components/schemas/VulnerabilityReportVulnerability'
          readOnly: true
        name:
          description: >-
            Output only. The `vulnerabilityReport` API resource name. Format:
            `projects/{project_number}/locations/{location}/instances/{instance_id}/vulnerabilityReport`
          type: string
          readOnly: true
      id: VulnerabilityReport
      description: >-
        This API resource represents the vulnerability report for a specified
        Compute Engine virtual machine (VM) instance at a given point in time.
        For more information, see [Vulnerability
        reports](https://cloud.google.com/compute/docs/instances/os-inventory-management#vulnerability-reports).
      type: object
    OSPolicyResourceRepositoryResourceAptRepository:
      properties:
        archiveType:
          enumDescriptions:
            - Unspecified is invalid.
            - Deb indicates that the archive contains binary files.
            - Deb-src indicates that the archive contains source files.
          description: Required. Type of archive files in this repository.
          enum:
            - ARCHIVE_TYPE_UNSPECIFIED
            - DEB
            - DEB_SRC
          type: string
        distribution:
          description: Required. Distribution of this repository.
          type: string
        gpgKey:
          description: >-
            URI of the key file for this repository. The agent maintains a
            keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg`.
          type: string
        uri:
          type: string
          description: Required. URI for this repository.
        components:
          description: >-
            Required. List of components for this repository. Must contain at
            least one item.
          type: array
          items:
            type: string
      description: >-
        Represents a single apt package repository. These will be added to a
        repo file that will be managed at
        `/etc/apt/sources.list.d/google_osconfig.list`.
      type: object
      id: OSPolicyResourceRepositoryResourceAptRepository
    OSPolicyOSFilter:
      description: Filtering criteria to select VMs based on OS details.
      properties:
        osShortName:
          type: string
          description: >-
            This should match OS short name emitted by the OS inventory agent.
            An empty value matches any OS.
        osVersion:
          description: >-
            This value should match the version emitted by the OS inventory
            agent. Prefix matches are supported if asterisk(*) is provided as
            the last character. For example, to match all versions with a major
            version of `7`, specify the following value for this field `7.*`
          type: string
      id: OSPolicyOSFilter
      type: object
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1alpha/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
    post:
      description: >-
        Create an OS policy assignment. This method also creates the first
        revision of the OS policy assignment. This method returns a long running
        operation (LRO) that contains the rollout details. The rollout can be
        cancelled by cancelling the LRO. For more information, see [Method:
        projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1alpha/projects.locations.osPolicyAssignments.operations/cancel).
      operationId: osconfig.projects.locations.osPolicyAssignments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSPolicyAssignment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: osPolicyAssignmentId
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments
      x-stackQL-verb: insert
    get:
      description: >-
        List the OS policy assignments under the parent resource. For each OS
        policy assignment, the latest revision is returned.
      operationId: osconfig.projects.locations.osPolicyAssignments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOSPolicyAssignmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: os_policy_assignments
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}:
    parameters: *ref_1
    get:
      description: >-
        Retrieve an existing OS policy assignment. This method always returns
        the latest revision. In order to retrieve a previous revision of the
        assignment, also provide the revision ID in the `name` parameter.
      operationId: osconfig.projects.locations.osPolicyAssignments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPolicyAssignment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments
      x-stackQL-verb: select
    delete:
      description: >-
        Delete the OS policy assignment. This method creates a new revision of
        the OS policy assignment. This method returns a long running operation
        (LRO) that contains the rollout details. The rollout can be cancelled by
        cancelling the LRO. If the LRO completes and is not cancelled, all
        revisions associated with the OS policy assignment are deleted. For more
        information, see [Method:
        projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1alpha/projects.locations.osPolicyAssignments.operations/cancel).
      operationId: osconfig.projects.locations.osPolicyAssignments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments
      x-stackQL-verb: delete
    patch:
      description: >-
        Update an existing OS policy assignment. This method creates a new
        revision of the OS policy assignment. This method returns a long running
        operation (LRO) that contains the rollout details. The rollout can be
        cancelled by cancelling the LRO. For more information, see [Method:
        projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1alpha/projects.locations.osPolicyAssignments.operations/cancel).
      operationId: osconfig.projects.locations.osPolicyAssignments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSPolicyAssignment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments
      x-stackQL-verb: exec
  /v1alpha/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}:listRevisions:
    parameters: *ref_1
    get:
      description: >-
        List the OS policy assignment revisions for a given OS policy
        assignment.
      operationId: osconfig.projects.locations.osPolicyAssignments.listRevisions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOSPolicyAssignmentRevisionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments__revisions
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: osconfig.projects.locations.osPolicyAssignments.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1alpha/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: osconfig.projects.locations.osPolicyAssignments.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/locations/{locationsId}/instanceOSPoliciesCompliances:
    parameters: *ref_1
    get:
      description: >-
        List OS policies compliance data for all Compute Engine VM instances in
        the specified zone.
      operationId: osconfig.projects.locations.instanceOSPoliciesCompliances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceOSPoliciesCompliancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: instance_o_s_policies_compliances
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/locations/{locationsId}/instanceOSPoliciesCompliances/{instanceOSPoliciesCompliancesId}:
    parameters: *ref_1
    get:
      description: >-
        Get OS policies compliance data for the specified Compute Engine VM
        instance.
      operationId: osconfig.projects.locations.instanceOSPoliciesCompliances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceOSPoliciesCompliance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instanceOSPoliciesCompliancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instance_o_s_policies_compliances
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/osPolicyAssignments/{osPolicyAssignmentsId}/reports:
    parameters: *ref_1
    get:
      description: >-
        List OS policy assignment reports for all Compute Engine VM instances in
        the specified zone.
      operationId: osconfig.projects.locations.instances.osPolicyAssignments.reports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOSPolicyAssignmentReportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/osPolicyAssignments/{osPolicyAssignmentsId}/report:
    parameters: *ref_1
    get:
      description: >-
        Get the OS policy assignment report for the specified Compute Engine VM
        instance.
      operationId: osconfig.projects.locations.instances.osPolicyAssignments.reports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPolicyAssignmentReport'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/inventory:
    parameters: *ref_1
    get:
      description: >-
        Get inventory data for the specified VM instance. If the VM has no
        associated inventory, the message `NOT_FOUND` is returned.
      operationId: osconfig.projects.locations.instances.inventories.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: inventories
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/inventories:
    parameters: *ref_1
    get:
      description: List inventory data for all VM instances in the specified zone.
      operationId: osconfig.projects.locations.instances.inventories.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInventoriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: inventories
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/vulnerabilityReports:
    parameters: *ref_1
    get:
      description: List vulnerability reports for all VM instances in the specified zone.
      operationId: osconfig.projects.locations.instances.vulnerabilityReports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVulnerabilityReportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: vulnerability_reports
      x-stackQL-verb: select
  /v1alpha/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/vulnerabilityReport:
    parameters: *ref_1
    get:
      description: >-
        Gets the vulnerability report for the specified VM instance. Only VMs
        with inventory data have vulnerability reports associated with them.
      operationId: osconfig.projects.locations.instances.vulnerabilityReports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityReport'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: vulnerability_reports
      x-stackQL-verb: select
