openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: OS Config API
  description: >-
    OS management tools that can be used for patch management, patch compliance,
    and configuration management on VM instances.
  version: v1
  x-discovery-doc-revision: '20230618'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/compute/docs/osconfig/rest
servers:
  - url: https://osconfig.googleapis.com
components:
  schemas:
    PatchInstanceFilter:
      properties:
        instances:
          items:
            type: string
          type: array
          description: >-
            Targets any of the VM instances specified. Instances are specified
            by their URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`,
            `projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`, or
            `https://www.googleapis.com/compute/v1/projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`
        groupLabels:
          description: >-
            Targets VM instances matching ANY of these GroupLabels. This allows
            targeting of disparate groups of VM instances.
          items:
            $ref: '#/components/schemas/PatchInstanceFilterGroupLabel'
          type: array
        all:
          type: boolean
          description: >-
            Target all VM instances in the project. If true, no other criteria
            is permitted.
        zones:
          type: array
          items:
            type: string
          description: >-
            Targets VM instances in ANY of these zones. Leave empty to target VM
            instances in any zone.
        instanceNamePrefixes:
          type: array
          items:
            type: string
          description: >-
            Targets VMs whose name starts with one of these prefixes. Similar to
            labels, this is another way to group VMs when targeting configs, for
            example prefix="prod-".
      id: PatchInstanceFilter
      type: object
      description: >-
        A filter to target VM instances for patching. The targeted VMs must meet
        all criteria specified. So if both labels and zones are specified, the
        patch job targets only VMs with those labels and in those zones.
    InventoryZypperPatch:
      properties:
        category:
          type: string
          description: The category of the patch.
        patchName:
          description: The name of the patch.
          type: string
        severity:
          description: The severity specified for this patch
          type: string
        summary:
          description: Any summary information provided about this patch.
          type: string
      type: object
      description: Details related to a Zypper Patch.
      id: InventoryZypperPatch
    OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance:
      properties:
        osPolicyResourceId:
          description: The ID of the OS policy resource.
          type: string
        complianceStateReason:
          description: >-
            A reason for the resource to be in the given compliance state. This
            field is always populated when `compliance_state` is `UNKNOWN`. The
            following values are supported when `compliance_state == UNKNOWN` *
            `execution-errors`: Errors were encountered by the agent while
            executing the resource and the compliance state couldn't be
            determined. * `execution-skipped-by-agent`: Resource execution was
            skipped by the agent because errors were encountered while executing
            prior resources in the OS policy. *
            `os-policy-execution-attempt-failed`: The execution of the OS policy
            containing this resource failed and the compliance state couldn't be
            determined.
          type: string
        complianceState:
          type: string
          enum:
            - UNKNOWN
            - COMPLIANT
            - NON_COMPLIANT
          enumDescriptions:
            - >-
              The resource is in an unknown compliance state. To get more
              details about why the policy is in this state, review the output
              of the `compliance_state_reason` field.
            - Resource is compliant.
            - Resource is non-compliant.
          description: The compliance state of the resource.
        configSteps:
          type: array
          description: >-
            Ordered list of configuration completed by the agent for the OS
            policy resource.
          items:
            $ref: >-
              #/components/schemas/OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep
        execResourceOutput:
          description: ExecResource specific output.
          $ref: >-
            #/components/schemas/OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput
      type: object
      id: OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance
      description: Compliance data for an OS policy resource.
    PatchDeployment:
      description: >-
        Patch deployments are configurations that individual patch jobs use to
        complete a patch. These configurations include instance filter, package
        repository settings, and a schedule. For more information about creating
        and managing patch deployments, see [Scheduling patch
        jobs](https://cloud.google.com/compute/docs/os-patch-management/schedule-patch-jobs).
      properties:
        createTime:
          type: string
          format: google-datetime
          description: >-
            Output only. Time the patch deployment was created. Timestamp is in
            [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          readOnly: true
        oneTimeSchedule:
          $ref: '#/components/schemas/OneTimeSchedule'
          description: Required. Schedule a one-time execution.
        state:
          type: string
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - Active value means that patch deployment generates Patch Jobs.
            - >-
              Paused value means that patch deployment does not generate Patch
              jobs. Requires user action to move in and out from this state.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PAUSED
          description: Output only. Current state of the patch deployment.
        updateTime:
          readOnly: true
          description: >-
            Output only. Time the patch deployment was last updated. Timestamp
            is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          format: google-datetime
          type: string
        description:
          type: string
          description: >-
            Optional. Description of the patch deployment. Length of the
            description is limited to 1024 characters.
        recurringSchedule:
          description: Required. Schedule recurring executions.
          $ref: '#/components/schemas/RecurringSchedule'
        lastExecuteTime:
          readOnly: true
          description: >-
            Output only. The last time a patch job was started by this
            deployment. Timestamp is in
            [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: google-datetime
        instanceFilter:
          description: Required. VM instances to patch.
          $ref: '#/components/schemas/PatchInstanceFilter'
        rollout:
          description: Optional. Rollout strategy of the patch job.
          $ref: '#/components/schemas/PatchRollout'
        patchConfig:
          description: Optional. Patch configuration that is applied.
          $ref: '#/components/schemas/PatchConfig'
        duration:
          type: string
          format: google-duration
          description: >-
            Optional. Duration of the patch. After the duration ends, the patch
            times out.
        name:
          type: string
          description: >-
            Unique name for the patch deployment resource in a project. The
            patch deployment name is in the form:
            `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This
            field is ignored when you create a new patch deployment.
      id: PatchDeployment
      type: object
    ListPatchJobsResponse:
      id: ListPatchJobsResponse
      type: object
      properties:
        patchJobs:
          type: array
          description: The list of patch jobs.
          items:
            $ref: '#/components/schemas/PatchJob'
        nextPageToken:
          type: string
          description: A pagination token that can be used to get the next page of results.
      description: A response message for listing patch jobs.
    GooSettings:
      type: object
      description: Googet patching is performed by running `googet update`.
      properties: {}
      id: GooSettings
    OSPolicyResourceExecResourceExec:
      id: OSPolicyResourceExecResourceExec
      description: A file or script to execute.
      type: object
      properties:
        args:
          description: Optional arguments to pass to the source during execution.
          type: array
          items:
            type: string
        outputFilePath:
          type: string
          description: >-
            Only recorded for enforce Exec. Path to an output file (that is
            created by this Exec) whose content will be recorded in
            OSPolicyResourceCompliance after a successful run. Absence or
            failure to read this file will result in this ExecResource being
            non-compliant. Output file size is limited to 100K bytes.
        interpreter:
          enum:
            - INTERPRETER_UNSPECIFIED
            - NONE
            - SHELL
            - POWERSHELL
          description: Required. The script interpreter to use.
          enumDescriptions:
            - Invalid value, the request will return validation error.
            - >-
              If an interpreter is not specified, the source is executed
              directly. This execution, without an interpreter, only succeeds
              for executables and scripts that have shebang lines.
            - >-
              Indicates that the script runs with `/bin/sh` on Linux and
              `cmd.exe` on Windows.
            - Indicates that the script runs with PowerShell.
          type: string
        file:
          description: A remote or local file.
          $ref: '#/components/schemas/OSPolicyResourceFile'
        script:
          description: An inline script. The size of the script is limited to 32KiB.
          type: string
    RecurringSchedule:
      id: RecurringSchedule
      properties:
        timeZone:
          description: >-
            Required. Defines the time zone that `time_of_day` is relative to.
            The rules for daylight saving time are determined by the chosen time
            zone.
          $ref: '#/components/schemas/TimeZone'
        frequency:
          type: string
          description: Required. The frequency unit of this recurring schedule.
          enum:
            - FREQUENCY_UNSPECIFIED
            - WEEKLY
            - MONTHLY
            - DAILY
          enumDescriptions:
            - Invalid. A frequency must be specified.
            - >-
              Indicates that the frequency of recurrence should be expressed in
              terms of weeks.
            - >-
              Indicates that the frequency of recurrence should be expressed in
              terms of months.
            - >-
              Indicates that the frequency of recurrence should be expressed in
              terms of days.
        lastExecuteTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The time the last patch job ran successfully.
        endTime:
          format: google-datetime
          description: >-
            Optional. The end time at which a recurring patch deployment
            schedule is no longer active.
          type: string
        weekly:
          $ref: '#/components/schemas/WeeklySchedule'
          description: Required. Schedule with weekly executions.
        monthly:
          description: Required. Schedule with monthly executions.
          $ref: '#/components/schemas/MonthlySchedule'
        nextExecuteTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the next patch job is scheduled to run.
        timeOfDay:
          $ref: '#/components/schemas/TimeOfDay'
          description: Required. Time of the day to run a recurring deployment.
        startTime:
          description: >-
            Optional. The time that the recurring schedule becomes effective.
            Defaults to `create_time` of the patch deployment.
          format: google-datetime
          type: string
      type: object
      description: Sets the time for recurring patch deployments.
    OSPolicyResourcePackageResourceGooGet:
      description: >-
        A package managed by GooGet. - install: `googet -noconfirm install
        package` - remove: `googet -noconfirm remove package`
      id: OSPolicyResourcePackageResourceGooGet
      type: object
      properties:
        name:
          type: string
          description: Required. Package name.
    PausePatchDeploymentRequest:
      id: PausePatchDeploymentRequest
      type: object
      properties: {}
      description: A request message for pausing a patch deployment.
    OSPolicyResourceRepositoryResourceZypperRepository:
      type: object
      properties:
        displayName:
          type: string
          description: The display name of the repository.
        baseUrl:
          type: string
          description: Required. The location of the repository directory.
        id:
          description: >-
            Required. A one word, unique name for this repository. This is the
            `repo id` in the zypper config file and also the `display_name` if
            `display_name` is omitted. This id is also used as the unique
            identifier when checking for GuestPolicy conflicts.
          type: string
        gpgKeys:
          type: array
          items:
            type: string
          description: URIs of GPG keys.
      id: OSPolicyResourceRepositoryResourceZypperRepository
      description: >-
        Represents a single zypper package repository. These are added to a repo
        file that is managed at `/etc/zypp/repos.d/google_osconfig.repo`.
    Inventory:
      description: >-
        This API resource represents the available inventory data for a Compute
        Engine virtual machine (VM) instance at a given point in time. You can
        use this API resource to determine the inventory data of your VM. For
        more information, see [Information provided by OS inventory
        management](https://cloud.google.com/compute/docs/instances/os-inventory-management#data-collected).
      id: Inventory
      properties:
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Timestamp of the last reported inventory for the VM.
        name:
          type: string
          description: >-
            Output only. The `Inventory` API resource name. Format:
            `projects/{project_number}/locations/{location}/instances/{instance_id}/inventory`
          readOnly: true
        osInfo:
          description: Base level operating system information for the VM.
          $ref: '#/components/schemas/InventoryOsInfo'
        items:
          description: >-
            Inventory items related to the VM keyed by an opaque unique
            identifier for each inventory item. The identifier is unique to each
            distinct and addressable inventory item and will change, when there
            is a new package version.
          additionalProperties:
            $ref: '#/components/schemas/InventoryItem'
          type: object
      type: object
    OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep:
      id: >-
        OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep
      properties:
        type:
          description: Configuration step type.
          enumDescriptions:
            - Default value. This value is unused.
            - Checks for resource conflicts such as schema errors.
            - Checks the current status of the desired state for a resource.
            - >-
              Enforces the desired state for a resource that is not in desired
              state.
            - >-
              Re-checks the status of the desired state. This check is done for
              a resource after the enforcement of all OS policies. This step is
              used to determine the final desired state status for the resource.
              It accounts for any resources that might have drifted from their
              desired state due to side effects from executing other resources.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - VALIDATION
            - DESIRED_STATE_CHECK
            - DESIRED_STATE_ENFORCEMENT
            - DESIRED_STATE_CHECK_POST_ENFORCEMENT
        errorMessage:
          description: >-
            An error message recorded during the execution of this step. Only
            populated if errors were encountered during this step execution.
          type: string
      type: object
      description: >-
        Step performed by the OS Config agent for configuring an `OSPolicy`
        resource to its desired state.
    ExecutePatchJobRequest:
      description: A request message to initiate patching across Compute Engine instances.
      type: object
      id: ExecutePatchJobRequest
      properties:
        instanceFilter:
          $ref: '#/components/schemas/PatchInstanceFilter'
          description: >-
            Required. Instances to patch, either explicitly or filtered by some
            criteria such as zone or labels.
        patchConfig:
          description: >-
            Patch configuration being applied. If omitted, instances are patched
            using the default configurations.
          $ref: '#/components/schemas/PatchConfig'
        description:
          description: >-
            Description of the patch job. Length of the description is limited
            to 1024 characters.
          type: string
        dryRun:
          type: boolean
          description: >-
            If this patch is a dry-run only, instances are contacted but will do
            nothing.
        duration:
          format: google-duration
          type: string
          description: >-
            Duration of the patch job. After the duration ends, the patch job
            times out.
        displayName:
          description: Display name for this patch job. This does not have to be unique.
          type: string
        rollout:
          description: Rollout strategy of the patch job.
          $ref: '#/components/schemas/PatchRollout'
    OSPolicyAssignmentReport:
      properties:
        lastRunId:
          type: string
          description: >-
            Unique identifier of the last attempted run to apply the OS policies
            associated with this assignment on the VM. This ID is logged by the
            OS Config agent while applying the OS policies associated with this
            assignment on the VM. NOTE: If the service is unable to successfully
            connect to the agent for this run, then this id will not be
            available in the agent logs.
        updateTime:
          format: google-datetime
          description: Timestamp for when the report was last generated.
          type: string
        osPolicyAssignment:
          type: string
          description: >-
            Reference to the `OSPolicyAssignment` API resource that the
            `OSPolicy` belongs to. Format:
            `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`
        instance:
          type: string
          description: The Compute Engine VM instance name.
        osPolicyCompliances:
          type: array
          description: Compliance data for each `OSPolicy` that is applied to the VM.
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentReportOSPolicyCompliance'
        name:
          description: >-
            The `OSPolicyAssignmentReport` API resource name. Format:
            `projects/{project_number}/locations/{location}/instances/{instance_id}/osPolicyAssignments/{os_policy_assignment_id}/report`
          type: string
      type: object
      id: OSPolicyAssignmentReport
      description: A report of the OS policy assignment status for a given instance.
    VulnerabilityReportVulnerabilityDetails:
      description: >-
        Contains metadata information for the vulnerability. This information is
        collected from the upstream feed of the operating system.
      properties:
        description:
          description: >-
            The note or description describing the vulnerability from the
            distro.
          type: string
        cve:
          description: >-
            The CVE of the vulnerability. CVE cannot be empty and the
            combination of should be unique across vulnerabilities for a VM.
          type: string
        cvssV3:
          $ref: '#/components/schemas/CVSSv3'
          description: The full description of the CVSSv3 for this vulnerability from NVD.
        severity:
          description: Assigned severity/impact ranking from the distro.
          type: string
        cvssV2Score:
          type: number
          format: float
          description: >-
            The CVSS V2 score of this vulnerability. CVSS V2 score is on a scale
            of 0 - 10 where 0 indicates low severity and 10 indicates high
            severity.
        references:
          items:
            $ref: >-
              #/components/schemas/VulnerabilityReportVulnerabilityDetailsReference
          description: >-
            Corresponds to the references attached to the
            `VulnerabilityDetails`.
          type: array
      type: object
      id: VulnerabilityReportVulnerabilityDetails
    TimeOfDay:
      properties:
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          format: int32
          type: integer
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          format: int32
          type: integer
        hours:
          type: integer
          description: >-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may
            choose to allow the value "24:00:00" for scenarios like business
            closing time.
          format: int32
        seconds:
          format: int32
          description: >-
            Seconds of minutes of the time. Must normally be from 0 to 59. An
            API may allow the value 60 if it allows leap-seconds.
          type: integer
      description: >-
        Represents a time of day. The date and time zone are either not
        significant or are specified elsewhere. An API may choose to allow leap
        seconds. Related types are google.type.Date and
        `google.protobuf.Timestamp`.
      type: object
      id: TimeOfDay
    ListOSPolicyAssignmentRevisionsResponse:
      properties:
        nextPageToken:
          description: >-
            The pagination token to retrieve the next page of OS policy
            assignment revisions.
          type: string
        osPolicyAssignments:
          type: array
          items:
            $ref: '#/components/schemas/OSPolicyAssignment'
          description: The OS policy assignment revisions
      id: ListOSPolicyAssignmentRevisionsResponse
      description: A response message for listing all revisions for a OS policy assignment.
      type: object
    InventoryOsInfo:
      description: Operating system information for the VM.
      properties:
        osconfigAgentVersion:
          type: string
          description: The current version of the OS Config agent running on the VM.
        version:
          type: string
          description: The version of the operating system.
        kernelVersion:
          type: string
          description: The kernel version of the operating system.
        hostname:
          description: The VM hostname.
          type: string
        longName:
          description: >-
            The operating system long name. For example 'Debian GNU/Linux 9' or
            'Microsoft Window Server 2019 Datacenter'.
          type: string
        shortName:
          type: string
          description: The operating system short name. For example, 'windows' or 'debian'.
        architecture:
          type: string
          description: The system architecture of the operating system.
        kernelRelease:
          type: string
          description: The kernel release of the operating system.
      id: InventoryOsInfo
      type: object
    GoogleCloudOsconfigV1__OSPolicyAssignmentOperationMetadata:
      id: GoogleCloudOsconfigV1__OSPolicyAssignmentOperationMetadata
      type: object
      properties:
        apiMethod:
          enum:
            - API_METHOD_UNSPECIFIED
            - CREATE
            - UPDATE
            - DELETE
          description: The OS policy assignment API method.
          enumDescriptions:
            - Invalid value
            - Create OS policy assignment API method
            - Update OS policy assignment API method
            - Delete OS policy assignment API method
          type: string
        rolloutStartTime:
          type: string
          description: Rollout start time
          format: google-datetime
        osPolicyAssignment:
          description: >-
            Reference to the `OSPolicyAssignment` API resource. Format:
            `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`
          type: string
        rolloutState:
          enumDescriptions:
            - Invalid value
            - The rollout is in progress.
            - The rollout is being cancelled.
            - The rollout is cancelled.
            - The rollout has completed successfully.
          type: string
          description: State of the rollout
          enum:
            - ROLLOUT_STATE_UNSPECIFIED
            - IN_PROGRESS
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
        rolloutUpdateTime:
          description: Rollout update time
          type: string
          format: google-datetime
      description: >-
        OS policy assignment operation metadata provided by OS policy assignment
        API methods that return long running operations.
    WeekDayOfMonth:
      properties:
        weekOrdinal:
          type: integer
          format: int32
          description: >-
            Required. Week number in a month. 1-4 indicates the 1st to 4th week
            of the month. -1 indicates the last week of the month.
        dayOfWeek:
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          description: Required. A day of the week.
          type: string
        dayOffset:
          type: integer
          format: int32
          description: >-
            Optional. Represents the number of days before or after the given
            week day of month that the patch deployment is scheduled for. For
            example if `week_ordinal` and `day_of_week` values point to the
            second day of the month and this `day_offset` value is set to `3`,
            the patch deployment takes place three days after the second Tuesday
            of the month. If this value is negative, for example -5, the patches
            are deployed five days before before the second Tuesday of the
            month. Allowed values are in range [-30, 30].
      description: Represents one week day in a month. An example is "the 4th Sunday".
      type: object
      id: WeekDayOfMonth
    OSPolicyAssignmentReportOSPolicyCompliance:
      description: Compliance data for an OS policy
      id: OSPolicyAssignmentReportOSPolicyCompliance
      type: object
      properties:
        complianceState:
          description: The compliance state of the OS policy.
          enum:
            - UNKNOWN
            - COMPLIANT
            - NON_COMPLIANT
          type: string
          enumDescriptions:
            - >-
              The policy is in an unknown compliance state. Refer to the field
              `compliance_state_reason` to learn the exact reason for the policy
              to be in this compliance state.
            - >-
              Policy is compliant. The policy is compliant if all the underlying
              resources are also compliant.
            - >-
              Policy is non-compliant. The policy is non-compliant if one or
              more underlying resources are non-compliant.
        osPolicyId:
          type: string
          description: The OS policy id
        osPolicyResourceCompliances:
          description: >-
            Compliance data for each resource within the policy that is applied
            to the VM.
          items:
            $ref: >-
              #/components/schemas/OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance
          type: array
        complianceStateReason:
          type: string
          description: >-
            The reason for the OS policy to be in an unknown compliance state.
            This field is always populated when `compliance_state` is `UNKNOWN`.
            If populated, the field can contain one of the following values: *
            `vm-not-running`: The VM was not running. *
            `os-policies-not-supported-by-agent`: The version of the OS Config
            agent running on the VM does not support running OS policies. *
            `no-agent-detected`: The OS Config agent is not detected for the VM.
            * `resource-execution-errors`: The OS Config agent encountered
            errors while executing one or more resources in the policy. See
            `os_policy_resource_compliances` for details. * `task-timeout`: The
            task sent to the agent to apply the policy timed out. *
            `unexpected-agent-state`: The OS Config agent did not report the
            final status of the task that attempted to apply the policy.
            Instead, the agent unexpectedly started working on a different task.
            This mostly happens when the agent or VM unexpectedly restarts while
            applying OS policies. * `internal-service-errors`: Internal service
            errors were encountered while attempting to apply the policy.
    ListVulnerabilityReportsResponse:
      type: object
      id: ListVulnerabilityReportsResponse
      description: >-
        A response message for listing vulnerability reports for all VM
        instances in the specified location.
      properties:
        nextPageToken:
          description: >-
            The pagination token to retrieve the next page of
            vulnerabilityReports object.
          type: string
        vulnerabilityReports:
          description: List of vulnerabilityReport objects.
          type: array
          items:
            $ref: '#/components/schemas/VulnerabilityReport'
    InventoryItem:
      type: object
      description: A single piece of inventory on a VM.
      id: InventoryItem
      properties:
        id:
          type: string
          description: Identifier for this item, unique across items for this VM.
        originType:
          enumDescriptions:
            - Invalid. An origin type must be specified.
            - >-
              This inventory item was discovered as the result of the agent
              reporting inventory via the reporting API.
          type: string
          enum:
            - ORIGIN_TYPE_UNSPECIFIED
            - INVENTORY_REPORT
          description: The origin of this inventory item.
        type:
          enumDescriptions:
            - Invalid. An type must be specified.
            - This represents a package that is installed on the VM.
            - This represents an update that is available for a package.
          type: string
          description: The specific type of inventory, correlating to its specific details.
          enum:
            - TYPE_UNSPECIFIED
            - INSTALLED_PACKAGE
            - AVAILABLE_PACKAGE
        createTime:
          format: google-datetime
          type: string
          description: When this inventory item was first detected.
        installedPackage:
          $ref: '#/components/schemas/InventorySoftwarePackage'
          description: Software package present on the VM instance.
        availablePackage:
          $ref: '#/components/schemas/InventorySoftwarePackage'
          description: Software package available to be installed on the VM instance.
        updateTime:
          format: google-datetime
          description: When this inventory item was last modified.
          type: string
    AptSettings:
      properties:
        exclusivePackages:
          description: >-
            An exclusive list of packages to be updated. These are the only
            packages that will be updated. If these packages are not installed,
            they will be ignored. This field cannot be specified with any other
            patch configuration fields.
          type: array
          items:
            type: string
        excludes:
          items:
            type: string
          description: >-
            List of packages to exclude from update. These packages will be
            excluded
          type: array
        type:
          enumDescriptions:
            - By default, upgrade will be performed.
            - Runs `apt-get dist-upgrade`.
            - Runs `apt-get upgrade`.
          description: >-
            By changing the type to DIST, the patching is performed using
            `apt-get dist-upgrade` instead.
          enum:
            - TYPE_UNSPECIFIED
            - DIST
            - UPGRADE
          type: string
      type: object
      description: >-
        Apt patching is completed by executing `apt-get update && apt-get
        upgrade`. Additional options can be set to control how this is executed.
      id: AptSettings
    ListInventoriesResponse:
      properties:
        inventories:
          items:
            $ref: '#/components/schemas/Inventory'
          description: List of inventory objects.
          type: array
        nextPageToken:
          type: string
          description: The pagination token to retrieve the next page of inventory objects.
      id: ListInventoriesResponse
      description: >-
        A response message for listing inventory data for all VMs in a specified
        location.
      type: object
    OSPolicyResourcePackageResource:
      description: A resource that manages a system package.
      properties:
        yum:
          description: A package managed by YUM.
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceYUM'
        desiredState:
          description: >-
            Required. The desired state the agent should maintain for this
            package.
          enum:
            - DESIRED_STATE_UNSPECIFIED
            - INSTALLED
            - REMOVED
          type: string
          enumDescriptions:
            - Unspecified is invalid.
            - Ensure that the package is installed.
            - >-
              The agent ensures that the package is not installed and uninstalls
              it if detected.
        deb:
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceDeb'
          description: A deb package file.
        rpm:
          description: An rpm package file.
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceRPM'
        apt:
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceAPT'
          description: A package managed by Apt.
        msi:
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceMSI'
          description: An MSI package.
        zypper:
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceZypper'
          description: A package managed by Zypper.
        googet:
          $ref: '#/components/schemas/OSPolicyResourcePackageResourceGooGet'
          description: A package managed by GooGet.
      id: OSPolicyResourcePackageResource
      type: object
    OSPolicyInventoryFilter:
      description: Filtering criteria to select VMs based on inventory details.
      properties:
        osVersion:
          type: string
          description: >-
            The OS version Prefix matches are supported if asterisk(*) is
            provided as the last character. For example, to match all versions
            with a major version of `7`, specify the following value for this
            field `7.*` An empty string matches all OS versions.
        osShortName:
          type: string
          description: Required. The OS short name
      id: OSPolicyInventoryFilter
      type: object
    VulnerabilityReportVulnerabilityItem:
      description: >-
        OS inventory item that is affected by a vulnerability or fixed as a
        result of a vulnerability.
      type: object
      properties:
        installedInventoryItemId:
          description: >-
            Corresponds to the `INSTALLED_PACKAGE` inventory item on the VM.
            This field displays the inventory items affected by this
            vulnerability. If the vulnerability report was not updated after the
            VM inventory update, these values might not display in VM inventory.
            For some operating systems, this field might be empty.
          type: string
        upstreamFix:
          description: The upstream OS patch, packages or KB that fixes the vulnerability.
          type: string
        fixedCpeUri:
          type: string
          description: >-
            The recommended [CPE URI](https://cpe.mitre.org/specification/)
            update that contains a fix for this vulnerability.
        availableInventoryItemId:
          description: >-
            Corresponds to the `AVAILABLE_PACKAGE` inventory item on the VM. If
            the vulnerability report was not updated after the VM inventory
            update, these values might not display in VM inventory. If there is
            no available fix, the field is empty. The `inventory_item` value
            specifies the latest `SoftwarePackage` available to the VM that
            fixes the vulnerability.
          type: string
      id: VulnerabilityReportVulnerabilityItem
    OSPolicyResourceFileGcs:
      properties:
        bucket:
          description: Required. Bucket of the Cloud Storage object.
          type: string
        object:
          type: string
          description: Required. Name of the Cloud Storage object.
        generation:
          description: Generation number of the Cloud Storage object.
          format: int64
          type: string
      id: OSPolicyResourceFileGcs
      type: object
      description: Specifies a file available as a Cloud Storage Object.
    OSPolicyResourceRepositoryResourceAptRepository:
      type: object
      description: >-
        Represents a single apt package repository. These will be added to a
        repo file that will be managed at
        `/etc/apt/sources.list.d/google_osconfig.list`.
      id: OSPolicyResourceRepositoryResourceAptRepository
      properties:
        archiveType:
          description: Required. Type of archive files in this repository.
          enum:
            - ARCHIVE_TYPE_UNSPECIFIED
            - DEB
            - DEB_SRC
          type: string
          enumDescriptions:
            - Unspecified is invalid.
            - Deb indicates that the archive contains binary files.
            - Deb-src indicates that the archive contains source files.
        components:
          items:
            type: string
          type: array
          description: >-
            Required. List of components for this repository. Must contain at
            least one item.
        distribution:
          description: Required. Distribution of this repository.
          type: string
        gpgKey:
          description: >-
            URI of the key file for this repository. The agent maintains a
            keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg`.
          type: string
        uri:
          type: string
          description: Required. URI for this repository.
    PatchConfig:
      description: >-
        Patch configuration specifications. Contains details on how to apply the
        patch(es) to a VM instance.
      properties:
        postStep:
          $ref: '#/components/schemas/ExecStep'
          description: The `ExecStep` to run after the patch update.
        windowsUpdate:
          $ref: '#/components/schemas/WindowsUpdateSettings'
          description: >-
            Windows update settings. Use this override the default windows patch
            rules.
        rebootConfig:
          enumDescriptions:
            - The default behavior is DEFAULT.
            - >-
              The agent decides if a reboot is necessary by checking signals
              such as registry keys on Windows or `/var/run/reboot-required` on
              APT based systems. On RPM based systems, a set of core system
              package install times are compared with system boot time.
            - Always reboot the machine after the update completes.
            - Never reboot the machine after the update completes.
          type: string
          enum:
            - REBOOT_CONFIG_UNSPECIFIED
            - DEFAULT
            - ALWAYS
            - NEVER
          description: Post-patch reboot settings.
        preStep:
          $ref: '#/components/schemas/ExecStep'
          description: The `ExecStep` to run before the patch update.
        goo:
          $ref: '#/components/schemas/GooSettings'
          description: >-
            Goo update settings. Use this setting to override the default `goo`
            patch rules.
        migInstancesAllowed:
          description: Allows the patch job to run on Managed instance groups (MIGs).
          type: boolean
        yum:
          $ref: '#/components/schemas/YumSettings'
          description: >-
            Yum update settings. Use this setting to override the default `yum`
            patch rules.
        zypper:
          $ref: '#/components/schemas/ZypperSettings'
          description: >-
            Zypper update settings. Use this setting to override the default
            `zypper` patch rules.
        apt:
          description: >-
            Apt update settings. Use this setting to override the default `apt`
            patch rules.
          $ref: '#/components/schemas/AptSettings'
      id: PatchConfig
      type: object
    VulnerabilityReportVulnerability:
      properties:
        items:
          type: array
          description: List of items affected by the vulnerability.
          items:
            $ref: '#/components/schemas/VulnerabilityReportVulnerabilityItem'
        updateTime:
          format: google-datetime
          type: string
          description: The timestamp for when the vulnerability was last modified.
        availableInventoryItemIds:
          description: >-
            Corresponds to the `AVAILABLE_PACKAGE` inventory item on the VM. If
            the vulnerability report was not updated after the VM inventory
            update, these values might not display in VM inventory. If there is
            no available fix, the field is empty. The `inventory_item` value
            specifies the latest `SoftwarePackage` available to the VM that
            fixes the vulnerability.
          type: array
          items:
            type: string
        installedInventoryItemIds:
          items:
            type: string
          description: >-
            Corresponds to the `INSTALLED_PACKAGE` inventory item on the VM.
            This field displays the inventory items affected by this
            vulnerability. If the vulnerability report was not updated after the
            VM inventory update, these values might not display in VM inventory.
            For some distros, this field may be empty.
          type: array
        createTime:
          format: google-datetime
          type: string
          description: The timestamp for when the vulnerability was first detected.
        details:
          description: >-
            Contains metadata as per the upstream feed of the operating system
            and NVD.
          $ref: '#/components/schemas/VulnerabilityReportVulnerabilityDetails'
      type: object
      description: A vulnerability affecting the VM instance.
      id: VulnerabilityReportVulnerability
    ExecStep:
      properties:
        windowsExecStepConfig:
          description: The ExecStepConfig for all Windows VMs targeted by the PatchJob.
          $ref: '#/components/schemas/ExecStepConfig'
        linuxExecStepConfig:
          description: The ExecStepConfig for all Linux VMs targeted by the PatchJob.
          $ref: '#/components/schemas/ExecStepConfig'
      id: ExecStep
      type: object
      description: A step that runs an executable for a PatchJob.
    OSPolicyResourcePackageResourceDeb:
      description: A deb package file. dpkg packages only support INSTALLED state.
      type: object
      properties:
        source:
          description: Required. A deb package.
          $ref: '#/components/schemas/OSPolicyResourceFile'
        pullDeps:
          type: boolean
          description: >-
            Whether dependencies should also be installed. - install when false:
            `dpkg -i package` - install when true: `apt-get update && apt-get -y
            install package.deb`
      id: OSPolicyResourcePackageResourceDeb
    OSPolicyResourceExecResource:
      type: object
      description: >-
        A resource that allows executing scripts on the VM. The `ExecResource`
        has 2 stages: `validate` and `enforce` and both stages accept a script
        as an argument to execute. When the `ExecResource` is applied by the
        agent, it first executes the script in the `validate` stage. The
        `validate` stage can signal that the `ExecResource` is already in the
        desired state by returning an exit code of `100`. If the `ExecResource`
        is not in the desired state, it should return an exit code of `101`. Any
        other exit code returned by this stage is considered an error. If the
        `ExecResource` is not in the desired state based on the exit code from
        the `validate` stage, the agent proceeds to execute the script from the
        `enforce` stage. If the `ExecResource` is already in the desired state,
        the `enforce` stage will not be run. Similar to `validate` stage, the
        `enforce` stage should return an exit code of `100` to indicate that the
        resource in now in its desired state. Any other exit code is considered
        an error. NOTE: An exit code of `100` was chosen over `0` (and `101` vs
        `1`) to have an explicit indicator of `in desired state`, `not in
        desired state` and errors. Because, for example, Powershell will always
        return an exit code of `0` unless an `exit` statement is provided in the
        script. So, for reasons of consistency and being explicit, exit codes
        `100` and `101` were chosen.
      id: OSPolicyResourceExecResource
      properties:
        enforce:
          description: >-
            What to run to bring this resource into the desired state. An exit
            code of 100 indicates "success", any other exit code indicates a
            failure running enforce.
          $ref: '#/components/schemas/OSPolicyResourceExecResourceExec'
        validate:
          description: >-
            Required. What to run to validate this resource is in the desired
            state. An exit code of 100 indicates "in desired state", and exit
            code of 101 indicates "not in desired state". Any other exit code
            indicates a failure running validate.
          $ref: '#/components/schemas/OSPolicyResourceExecResourceExec'
    InventoryVersionedPackage:
      properties:
        packageName:
          description: The name of the package.
          type: string
        version:
          description: The version of the package.
          type: string
        architecture:
          type: string
          description: The system architecture this package is intended for.
      id: InventoryVersionedPackage
      type: object
      description: >-
        Information related to the a standard versioned package. This includes
        package info for APT, Yum, Zypper, and Googet package managers.
    ResumePatchDeploymentRequest:
      properties: {}
      id: ResumePatchDeploymentRequest
      type: object
      description: A request message for resuming a patch deployment.
    ListPatchDeploymentsResponse:
      description: A response message for listing patch deployments.
      properties:
        nextPageToken:
          description: >-
            A pagination token that can be used to get the next page of patch
            deployments.
          type: string
        patchDeployments:
          type: array
          description: The list of patch deployments.
          items:
            $ref: '#/components/schemas/PatchDeployment'
      type: object
      id: ListPatchDeploymentsResponse
    PatchInstanceFilterGroupLabel:
      id: PatchInstanceFilterGroupLabel
      type: object
      description: >-
        Targets a group of VM instances by using their [assigned
        labels](https://cloud.google.com/compute/docs/labeling-resources).
        Labels are key-value pairs. A `GroupLabel` is a combination of labels
        that is used to target VMs for a patch job. For example, a patch job can
        target VMs that have the following `GroupLabel`: `{"env":"test",
        "app":"web"}`. This means that the patch job is applied to VMs that have
        both the labels `env=test` and `app=web`.
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            Compute Engine instance labels that must be present for a VM
            instance to be targeted by this filter.
    OSPolicyAssignmentRollout:
      description: >-
        Message to configure the rollout at the zonal level for the OS policy
        assignment.
      type: object
      id: OSPolicyAssignmentRollout
      properties:
        disruptionBudget:
          $ref: '#/components/schemas/FixedOrPercent'
          description: >-
            Required. The maximum number (or percentage) of VMs per zone to
            disrupt at any given moment.
        minWaitDuration:
          type: string
          format: google-duration
          description: >-
            Required. This determines the minimum duration of time to wait after
            the configuration changes are applied through the current rollout. A
            VM continues to count towards the `disruption_budget` at least until
            this duration of time has passed after configuration changes are
            applied.
    Date:
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      type: object
      id: Date
      properties:
        month:
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          format: int32
          type: integer
        year:
          format: int32
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
          type: integer
        day:
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
          type: integer
          format: int32
    OSPolicyAssignmentLabelSet:
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            Labels are identified by key/value pairs in this map. A VM should
            contain all the key/value pairs specified in this map to be
            selected.
      id: OSPolicyAssignmentLabelSet
      type: object
      description: >-
        Message representing label set. * A label is a key value pair set for a
        VM. * A LabelSet is a set of labels. * Labels within a LabelSet are
        ANDed. In other words, a LabelSet is applicable for a VM only if it
        matches all the labels in the LabelSet. * Example: A LabelSet with 2
        labels: `env=prod` and `type=webserver` will only be applicable for
        those VMs with both labels present.
    PatchJob:
      type: object
      description: >-
        A high level representation of a patch job that is either in progress or
        has completed. Instance details are not included in the job. To paginate
        through instance details, use `ListPatchJobInstanceDetails`. For more
        information about patch jobs, see [Creating patch
        jobs](https://cloud.google.com/compute/docs/os-patch-management/create-patch-job).
      id: PatchJob
      properties:
        createTime:
          description: Time this patch job was created.
          format: google-datetime
          type: string
        duration:
          description: >-
            Duration of the patch job. After the duration ends, the patch job
            times out.
          type: string
          format: google-duration
        instanceFilter:
          $ref: '#/components/schemas/PatchInstanceFilter'
          description: Instances to patch.
        patchDeployment:
          description: >-
            Output only. Name of the patch deployment that created this patch
            job.
          readOnly: true
          type: string
        rollout:
          description: Rollout strategy being applied.
          $ref: '#/components/schemas/PatchRollout'
        instanceDetailsSummary:
          $ref: '#/components/schemas/PatchJobInstanceDetailsSummary'
          description: Summary of instance details.
        name:
          type: string
          description: >-
            Unique identifier for this patch job in the form
            `projects/*/patchJobs/*`
        errorMessage:
          description: >-
            If this patch job failed, this message provides information about
            the failure.
          type: string
        description:
          description: >-
            Description of the patch job. Length of the description is limited
            to 1024 characters.
          type: string
        displayName:
          type: string
          description: Display name for this patch job. This is not a unique identifier.
        updateTime:
          format: google-datetime
          description: Last time this patch job was updated.
          type: string
        state:
          enumDescriptions:
            - State must be specified.
            - The patch job was successfully initiated.
            - The patch job is looking up instances to run the patch on.
            - Instances are being patched.
            - Patch job completed successfully.
            - Patch job completed but there were errors.
            - The patch job was canceled.
            - The patch job timed out.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - STARTED
            - INSTANCE_LOOKUP
            - PATCHING
            - SUCCEEDED
            - COMPLETED_WITH_ERRORS
            - CANCELED
            - TIMED_OUT
          description: The current state of the PatchJob.
        percentComplete:
          description: >-
            Reflects the overall progress of the patch job in the range of 0.0
            being no progress to 100.0 being complete.
          format: double
          type: number
        patchConfig:
          $ref: '#/components/schemas/PatchConfig'
          description: Patch configuration being applied.
        dryRun:
          type: boolean
          description: >-
            If this patch job is a dry run, the agent reports that it has
            finished without running any updates on the VM instance.
    OSPolicyResourcePackageResourceAPT:
      properties:
        name:
          description: Required. Package name.
          type: string
      description: >-
        A package managed by APT. - install: `apt-get update && apt-get -y
        install [name]` - remove: `apt-get -y remove [name]`
      type: object
      id: OSPolicyResourcePackageResourceAPT
    OSPolicyResourceFile:
      properties:
        localPath:
          type: string
          description: A local path within the VM to use.
        allowInsecure:
          type: boolean
          description: >-
            Defaults to false. When false, files are subject to validations
            based on the file type: Remote: A checksum must be specified. Cloud
            Storage: An object generation number must be specified.
        remote:
          description: A generic remote file.
          $ref: '#/components/schemas/OSPolicyResourceFileRemote'
        gcs:
          description: A Cloud Storage object.
          $ref: '#/components/schemas/OSPolicyResourceFileGcs'
      id: OSPolicyResourceFile
      type: object
      description: A remote or local file.
    OSPolicyAssignment:
      description: >-
        OS policy assignment is an API resource that is used to apply a set of
        OS policies to a dynamically targeted group of Compute Engine VM
        instances. An OS policy is used to define the desired state
        configuration for a Compute Engine VM instance through a set of
        configuration resources that provide capabilities such as installing or
        removing software packages, or executing a script. For more information
        about the OS policy resource definitions and examples, see [OS policy
        and OS policy
        assignment](https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies).
      type: object
      id: OSPolicyAssignment
      properties:
        reconciling:
          readOnly: true
          description: >-
            Output only. Indicates that reconciliation is in progress for the
            revision. This value is `true` when the `rollout_state` is one of: *
            IN_PROGRESS * CANCELLING
          type: boolean
        baseline:
          description: >-
            Output only. Indicates that this revision has been successfully
            rolled out in this zone and new VMs will be assigned OS policies
            from this revision. For a given OS policy assignment, there is only
            one revision with a value of `true` for this field.
          type: boolean
          readOnly: true
        description:
          type: string
          description: >-
            OS policy assignment description. Length of the description is
            limited to 1024 characters.
        revisionId:
          description: >-
            Output only. The assignment revision ID A new revision is committed
            whenever a rollout is triggered for a OS policy assignment
          type: string
          readOnly: true
        rolloutState:
          enumDescriptions:
            - Invalid value
            - The rollout is in progress.
            - The rollout is being cancelled.
            - The rollout is cancelled.
            - The rollout has completed successfully.
          type: string
          readOnly: true
          description: Output only. OS policy assignment rollout state
          enum:
            - ROLLOUT_STATE_UNSPECIFIED
            - IN_PROGRESS
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
        rollout:
          $ref: '#/components/schemas/OSPolicyAssignmentRollout'
          description: >-
            Required. Rollout to deploy the OS policy assignment. A rollout is
            triggered in the following situations: 1) OSPolicyAssignment is
            created. 2) OSPolicyAssignment is updated and the update contains
            changes to one of the following fields: - instance_filter -
            os_policies 3) OSPolicyAssignment is deleted.
        revisionCreateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The timestamp that the revision was created.
          type: string
        uid:
          type: string
          readOnly: true
          description: >-
            Output only. Server generated unique id for the OS policy assignment
            resource.
        name:
          type: string
          description: >-
            Resource name. Format:
            `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id}`
            This field is ignored when you create an OS policy assignment.
        deleted:
          readOnly: true
          type: boolean
          description: >-
            Output only. Indicates that this revision deletes the OS policy
            assignment.
        etag:
          type: string
          description: >-
            The etag for this OS policy assignment. If this is provided on
            update, it must match the server's etag.
        osPolicies:
          items:
            $ref: '#/components/schemas/OSPolicy'
          description: Required. List of OS policies to be applied to the VMs.
          type: array
        instanceFilter:
          description: Required. Filter to select VMs.
          $ref: '#/components/schemas/OSPolicyAssignmentInstanceFilter'
    OSPolicyAssignmentInstanceFilter:
      type: object
      description: >-
        Filters to select target VMs for an assignment. If more than one filter
        criteria is specified below, a VM will be selected if and only if it
        satisfies all of them.
      properties:
        all:
          type: boolean
          description: >-
            Target all VMs in the project. If true, no other criteria is
            permitted.
        inventories:
          description: >-
            List of inventories to select VMs. A VM is selected if its inventory
            data matches at least one of the following inventories.
          type: array
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentInstanceFilterInventory'
        inclusionLabels:
          type: array
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentLabelSet'
          description: >-
            List of label sets used for VM inclusion. If the list has more than
            one `LabelSet`, the VM is included if any of the label sets are
            applicable for the VM.
        exclusionLabels:
          description: >-
            List of label sets used for VM exclusion. If the list has more than
            one label set, the VM is excluded if any of the label sets are
            applicable for the VM.
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentLabelSet'
          type: array
      id: OSPolicyAssignmentInstanceFilter
    MonthlySchedule:
      id: MonthlySchedule
      description: >-
        Represents a monthly schedule. An example of a valid monthly schedule is
        "on the third Tuesday of the month" or "on the 15th of the month".
      properties:
        monthDay:
          description: >-
            Required. One day of the month. 1-31 indicates the 1st to the 31st
            day. -1 indicates the last day of the month. Months without the
            target day will be skipped. For example, a schedule to run "every
            month on the 31st" will not run in February, April, June, etc.
          format: int32
          type: integer
        weekDayOfMonth:
          $ref: '#/components/schemas/WeekDayOfMonth'
          description: Required. Week day in a month.
      type: object
    InventoryWindowsApplication:
      properties:
        helpLink:
          type: string
          description: The internet address for technical support.
        installDate:
          $ref: '#/components/schemas/Date'
          description: >-
            The last time this product received service. The value of this
            property is replaced each time a patch is applied or removed from
            the product or the command-line option is used to repair the
            product.
        publisher:
          type: string
          description: The name of the manufacturer for the product or application.
        displayVersion:
          type: string
          description: The version of the product or application in string format.
        displayName:
          type: string
          description: The name of the application or product.
      description: >-
        Contains information about a Windows application that is retrieved from
        the Windows Registry. For more information about these fields, see:
        https://docs.microsoft.com/en-us/windows/win32/msi/uninstall-registry-key
      type: object
      id: InventoryWindowsApplication
    OSPolicyResourceFileResource:
      properties:
        file:
          description: A remote or local source.
          $ref: '#/components/schemas/OSPolicyResourceFile'
        state:
          enum:
            - DESIRED_STATE_UNSPECIFIED
            - PRESENT
            - ABSENT
            - CONTENTS_MATCH
          type: string
          enumDescriptions:
            - Unspecified is invalid.
            - Ensure file at path is present.
            - Ensure file at path is absent.
            - >-
              Ensure the contents of the file at path matches. If the file does
              not exist it will be created.
          description: Required. Desired state of the file.
        permissions:
          type: string
          description: >-
            Consists of three octal digits which represent, in order, the
            permissions of the owner, group, and other users for the file
            (similarly to the numeric mode used in the linux chmod utility).
            Each digit represents a three bit number with the 4 bit
            corresponding to the read permissions, the 2 bit corresponds to the
            write bit, and the one bit corresponds to the execute permission.
            Default behavior is 755. Below are some examples of permissions and
            their associated values: read, write, and execute: 7 read and
            execute: 5 read and write: 6 read only: 4
        content:
          type: string
          description: >-
            A a file with this content. The size of the content is limited to
            32KiB.
        path:
          description: Required. The absolute path of the file within the VM.
          type: string
      id: OSPolicyResourceFileResource
      description: A resource that manages the state of a file.
      type: object
    ListPatchJobInstanceDetailsResponse:
      id: ListPatchJobInstanceDetailsResponse
      properties:
        nextPageToken:
          description: A pagination token that can be used to get the next page of results.
          type: string
        patchJobInstanceDetails:
          type: array
          items:
            $ref: '#/components/schemas/PatchJobInstanceDetails'
          description: A list of instance status.
      type: object
      description: A response message for listing the instances details for a patch job.
    Empty:
      type: object
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      id: Empty
      properties: {}
    OSPolicyResourceRepositoryResource:
      id: OSPolicyResourceRepositoryResource
      type: object
      properties:
        yum:
          description: A Yum Repository.
          $ref: '#/components/schemas/OSPolicyResourceRepositoryResourceYumRepository'
        goo:
          description: A Goo Repository.
          $ref: '#/components/schemas/OSPolicyResourceRepositoryResourceGooRepository'
        zypper:
          description: A Zypper Repository.
          $ref: >-
            #/components/schemas/OSPolicyResourceRepositoryResourceZypperRepository
        apt:
          $ref: '#/components/schemas/OSPolicyResourceRepositoryResourceAptRepository'
          description: An Apt Repository.
      description: A resource that manages a package repository.
    WeeklySchedule:
      properties:
        dayOfWeek:
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          type: string
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          description: Required. Day of the week.
      id: WeeklySchedule
      type: object
      description: Represents a weekly schedule.
    OSPolicyAssignmentInstanceFilterInventory:
      properties:
        osShortName:
          type: string
          description: Required. The OS short name
        osVersion:
          type: string
          description: >-
            The OS version Prefix matches are supported if asterisk(*) is
            provided as the last character. For example, to match all versions
            with a major version of `7`, specify the following value for this
            field `7.*` An empty string matches all OS versions.
      description: VM inventory details.
      id: OSPolicyAssignmentInstanceFilterInventory
      type: object
    InventoryWindowsUpdatePackageWindowsUpdateCategory:
      id: InventoryWindowsUpdatePackageWindowsUpdateCategory
      type: object
      properties:
        name:
          type: string
          description: The name of the windows update category.
        id:
          description: The identifier of the windows update category.
          type: string
      description: Categories specified by the Windows Update.
    PatchJobInstanceDetails:
      properties:
        attemptCount:
          type: string
          format: int64
          description: >-
            The number of times the agent that the agent attempts to apply the
            patch.
        instanceSystemId:
          description: >-
            The unique identifier for the instance. This identifier is defined
            by the server.
          type: string
        state:
          type: string
          enumDescriptions:
            - Unspecified.
            - The instance is not yet notified.
            - Instance is inactive and cannot be patched.
            - The instance is notified that it should be patched.
            - The instance has started the patching process.
            - The instance is downloading patches.
            - The instance is applying patches.
            - The instance is rebooting.
            - The instance has completed applying patches.
            - >-
              The instance has completed applying patches but a reboot is
              required.
            - The instance has failed to apply the patch.
            - The instance acked the notification and will start shortly.
            - The instance exceeded the time out while applying the patch.
            - The instance is running the pre-patch step.
            - The instance is running the post-patch step.
            - >-
              The service could not detect the presence of the agent. Check to
              ensure that the agent is installed, running, and able to
              communicate with the service.
          enum:
            - PATCH_STATE_UNSPECIFIED
            - PENDING
            - INACTIVE
            - NOTIFIED
            - STARTED
            - DOWNLOADING_PATCHES
            - APPLYING_PATCHES
            - REBOOTING
            - SUCCEEDED
            - SUCCEEDED_REBOOT_REQUIRED
            - FAILED
            - ACKED
            - TIMED_OUT
            - RUNNING_PRE_PATCH_STEP
            - RUNNING_POST_PATCH_STEP
            - NO_AGENT_DETECTED
          description: Current state of instance patch.
        failureReason:
          type: string
          description: If the patch fails, this field provides the reason.
        name:
          type: string
          description: The instance name in the form `projects/*/zones/*/instances/*`
      type: object
      id: PatchJobInstanceDetails
      description: >-
        Patch details for a VM instance. For more information about reviewing VM
        instance details, see [Listing all VM instance details for a specific
        patch
        job](https://cloud.google.com/compute/docs/os-patch-management/manage-patch-jobs#list-instance-details).
    VulnerabilityReport:
      properties:
        name:
          readOnly: true
          description: >-
            Output only. The `vulnerabilityReport` API resource name. Format:
            `projects/{project_number}/locations/{location}/instances/{instance_id}/vulnerabilityReport`
          type: string
        vulnerabilities:
          description: Output only. List of vulnerabilities affecting the VM.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/VulnerabilityReportVulnerability'
        updateTime:
          readOnly: true
          format: google-datetime
          description: >-
            Output only. The timestamp for when the last vulnerability report
            was generated for the VM.
          type: string
      description: >-
        This API resource represents the vulnerability report for a specified
        Compute Engine virtual machine (VM) instance at a given point in time.
        For more information, see [Vulnerability
        reports](https://cloud.google.com/compute/docs/instances/os-inventory-management#vulnerability-reports).
      id: VulnerabilityReport
      type: object
    OSPolicyAssignmentOperationMetadata:
      type: object
      properties:
        rolloutUpdateTime:
          format: google-datetime
          description: Rollout update time
          type: string
        rolloutStartTime:
          format: google-datetime
          type: string
          description: Rollout start time
        rolloutState:
          type: string
          enum:
            - ROLLOUT_STATE_UNSPECIFIED
            - IN_PROGRESS
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
          enumDescriptions:
            - Invalid value
            - The rollout is in progress.
            - The rollout is being cancelled.
            - The rollout is cancelled.
            - The rollout has completed successfully.
          description: State of the rollout
        osPolicyAssignment:
          description: >-
            Reference to the `OSPolicyAssignment` API resource. Format:
            `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`
          type: string
        apiMethod:
          enum:
            - API_METHOD_UNSPECIFIED
            - CREATE
            - UPDATE
            - DELETE
          enumDescriptions:
            - Invalid value
            - Create OS policy assignment API method
            - Update OS policy assignment API method
            - Delete OS policy assignment API method
          type: string
          description: The OS policy assignment API method.
      id: OSPolicyAssignmentOperationMetadata
      description: >-
        OS policy assignment operation metadata provided by OS policy assignment
        API methods that return long running operations.
    ExecStepConfig:
      properties:
        localPath:
          description: An absolute path to the executable on the VM.
          type: string
        interpreter:
          enumDescriptions:
            - If the interpreter is not specified, the value defaults to `NONE`.
            - >-
              Indicates that the file is run as follows on each operating
              system: + For Linux VMs, the file is ran as an executable and the
              interpreter might be parsed from the [shebang
              line](https://wikipedia.org/wiki/Shebang_(Unix)) of the file. +
              For Windows VM, this value is not supported.
            - >-
              Indicates that the file is run with `/bin/sh` on Linux and `cmd`
              on Windows.
            - Indicates that the file is run with PowerShell.
          type: string
          enum:
            - INTERPRETER_UNSPECIFIED
            - NONE
            - SHELL
            - POWERSHELL
          description: >-
            The script interpreter to use to run the script. If no interpreter
            is specified the script will be executed directly, which will likely
            only succeed for scripts with [shebang lines]
            (https://en.wikipedia.org/wiki/Shebang_\(Unix\)).
        allowedSuccessCodes:
          type: array
          items:
            format: int32
            type: integer
          description: >-
            Defaults to [0]. A list of possible return values that the execution
            can return to indicate a success.
        gcsObject:
          $ref: '#/components/schemas/GcsObject'
          description: A Cloud Storage object containing the executable.
      type: object
      id: ExecStepConfig
      description: Common configurations for an ExecStep.
    OSPolicyResourceRepositoryResourceYumRepository:
      id: OSPolicyResourceRepositoryResourceYumRepository
      type: object
      description: >-
        Represents a single yum package repository. These are added to a repo
        file that is managed at `/etc/yum.repos.d/google_osconfig.repo`.
      properties:
        gpgKeys:
          items:
            type: string
          description: URIs of GPG keys.
          type: array
        displayName:
          type: string
          description: The display name of the repository.
        id:
          type: string
          description: >-
            Required. A one word, unique name for this repository. This is the
            `repo id` in the yum config file and also the `display_name` if
            `display_name` is omitted. This id is also used as the unique
            identifier when checking for resource conflicts.
        baseUrl:
          description: Required. The location of the repository directory.
          type: string
    CancelPatchJobRequest:
      type: object
      description: Message for canceling a patch job.
      id: CancelPatchJobRequest
      properties: {}
    ZypperSettings:
      description: >-
        Zypper patching is performed by running `zypper patch`. See also
        https://en.opensuse.org/SDB:Zypper_manual.
      properties:
        withOptional:
          type: boolean
          description: Adds the `--with-optional` flag to `zypper patch`.
        severities:
          type: array
          description: >-
            Install only patches with these severities. Common severities
            include critical, important, moderate, and low.
          items:
            type: string
        withUpdate:
          type: boolean
          description: Adds the `--with-update` flag, to `zypper patch`.
        categories:
          description: >-
            Install only patches with these categories. Common categories
            include security, recommended, and feature.
          items:
            type: string
          type: array
        exclusivePatches:
          type: array
          items:
            type: string
          description: >-
            An exclusive list of patches to be updated. These are the only
            patches that will be installed using 'zypper patch patch:' command.
            This field must not be used with any other patch configuration
            fields.
        excludes:
          type: array
          description: List of patches to exclude from update.
          items:
            type: string
      id: ZypperSettings
      type: object
    ListOSPolicyAssignmentReportsResponse:
      type: object
      properties:
        nextPageToken:
          description: >-
            The pagination token to retrieve the next page of OS policy
            assignment report objects.
          type: string
        osPolicyAssignmentReports:
          items:
            $ref: '#/components/schemas/OSPolicyAssignmentReport'
          description: List of OS policy assignment reports.
          type: array
      id: ListOSPolicyAssignmentReportsResponse
      description: >-
        A response message for listing OS Policy assignment reports including
        the page of results and page token.
    OSPolicyResourceFileRemote:
      description: Specifies a file available via some URI.
      id: OSPolicyResourceFileRemote
      properties:
        sha256Checksum:
          description: SHA256 checksum of the remote file.
          type: string
        uri:
          type: string
          description: >-
            Required. URI from which to fetch the object. It should contain both
            the protocol and path following the format
            `{protocol}://{location}`.
      type: object
    PatchRollout:
      description: >-
        Patch rollout configuration specifications. Contains details on the
        concurrency control when applying patch(es) to all targeted VMs.
      type: object
      properties:
        mode:
          enumDescriptions:
            - Mode must be specified.
            - >-
              Patches are applied one zone at a time. The patch job begins in
              the region with the lowest number of targeted VMs. Within the
              region, patching begins in the zone with the lowest number of
              targeted VMs. If multiple regions (or zones within a region) have
              the same number of targeted VMs, a tie-breaker is achieved by
              sorting the regions or zones in alphabetical order.
            - Patches are applied to VMs in all zones at the same time.
          type: string
          description: Mode of the patch rollout.
          enum:
            - MODE_UNSPECIFIED
            - ZONE_BY_ZONE
            - CONCURRENT_ZONES
        disruptionBudget:
          description: >-
            The maximum number (or percentage) of VMs per zone to disrupt at any
            given moment. The number of VMs calculated from multiplying the
            percentage by the total number of VMs in a zone is rounded up.
            During patching, a VM is considered disrupted from the time the
            agent is notified to begin until patching has completed. This
            disruption time includes the time to complete reboot and any
            post-patch steps. A VM contributes to the disruption budget if its
            patching operation fails either when applying the patches, running
            pre or post patch steps, or if it fails to respond with a success
            notification before timing out. VMs that are not running or do not
            have an active agent do not count toward this disruption budget. For
            zone-by-zone rollouts, if the disruption budget in a zone is
            exceeded, the patch job stops, because continuing to the next zone
            requires completion of the patch process in the previous zone. For
            example, if the disruption budget has a fixed value of `10`, and 8
            VMs fail to patch in the current zone, the patch job continues to
            patch 2 VMs at a time until the zone is completed. When that zone is
            completed successfully, patching begins with 10 VMs at a time in the
            next zone. If 10 VMs in the next zone fail to patch, the patch job
            stops.
          $ref: '#/components/schemas/FixedOrPercent'
      id: PatchRollout
    FixedOrPercent:
      type: object
      description: >-
        Message encapsulating a value that can be either absolute ("fixed") or
        relative ("percent") to a value.
      properties:
        fixed:
          format: int32
          type: integer
          description: Specifies a fixed value.
        percent:
          format: int32
          description: >-
            Specifies the relative value defined as a percentage, which will be
            multiplied by a reference value.
          type: integer
      id: FixedOrPercent
    OSPolicy:
      id: OSPolicy
      type: object
      properties:
        allowNoResourceGroupMatch:
          type: boolean
          description: >-
            This flag determines the OS policy compliance status when none of
            the resource groups within the policy are applicable for a VM. Set
            this value to `true` if the policy needs to be reported as compliant
            even if the policy has nothing to validate or enforce.
        id:
          type: string
          description: >-
            Required. The id of the OS policy with the following restrictions: *
            Must contain only lowercase letters, numbers, and hyphens. * Must
            start with a letter. * Must be between 1-63 characters. * Must end
            with a number or a letter. * Must be unique within the assignment.
        description:
          description: >-
            Policy description. Length of the description is limited to 1024
            characters.
          type: string
        mode:
          type: string
          enum:
            - MODE_UNSPECIFIED
            - VALIDATION
            - ENFORCEMENT
          description: Required. Policy mode
          enumDescriptions:
            - Invalid mode
            - >-
              This mode checks if the configuration resources in the policy are
              in their desired state. No actions are performed if they are not
              in the desired state. This mode is used for reporting purposes.
            - >-
              This mode checks if the configuration resources in the policy are
              in their desired state, and if not, enforces the desired state.
        resourceGroups:
          type: array
          description: >-
            Required. List of resource groups for the policy. For a particular
            VM, resource groups are evaluated in the order specified and the
            first resource group that is applicable is selected and the rest are
            ignored. If none of the resource groups are applicable for a VM, the
            VM is considered to be non-compliant w.r.t this policy. This
            behavior can be toggled by the flag `allow_no_resource_group_match`
          items:
            $ref: '#/components/schemas/OSPolicyResourceGroup'
      description: An OS policy defines the desired state configuration for a VM.
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
      id: CancelOperationRequest
    OSPolicyResourcePackageResourceYUM:
      description: >-
        A package managed by YUM. - install: `yum -y install package` - remove:
        `yum -y remove package`
      type: object
      properties:
        name:
          type: string
          description: Required. Package name.
      id: OSPolicyResourcePackageResourceYUM
    OSPolicyResourcePackageResourceMSI:
      properties:
        source:
          description: Required. The MSI package.
          $ref: '#/components/schemas/OSPolicyResourceFile'
        properties:
          type: array
          items:
            type: string
          description: >-
            Additional properties to use during installation. This should be in
            the format of Property=Setting. Appended to the defaults of
            `ACTION=INSTALL REBOOT=ReallySuppress`.
      description: An MSI package. MSI packages only support INSTALLED state.
      id: OSPolicyResourcePackageResourceMSI
      type: object
    PatchJobInstanceDetailsSummary:
      type: object
      description: >-
        A summary of the current patch state across all instances that this
        patch job affects. Contains counts of instances in different states.
        These states map to `InstancePatchState`. List patch job instance
        details to see the specific states of each instance.
      id: PatchJobInstanceDetailsSummary
      properties:
        inactiveInstanceCount:
          format: int64
          type: string
          description: Number of instances that are inactive.
        notifiedInstanceCount:
          type: string
          format: int64
          description: Number of instances notified about patch job.
        noAgentDetectedInstanceCount:
          description: >-
            Number of instances that do not appear to be running the agent.
            Check to ensure that the agent is installed, running, and able to
            communicate with the service.
          type: string
          format: int64
        downloadingPatchesInstanceCount:
          type: string
          format: int64
          description: Number of instances that are downloading patches.
        pendingInstanceCount:
          format: int64
          type: string
          description: Number of instances pending patch job.
        startedInstanceCount:
          type: string
          format: int64
          description: Number of instances that have started.
        rebootingInstanceCount:
          description: Number of instances rebooting.
          type: string
          format: int64
        prePatchStepInstanceCount:
          format: int64
          type: string
          description: Number of instances that are running the pre-patch step.
        failedInstanceCount:
          description: Number of instances that failed.
          format: int64
          type: string
        timedOutInstanceCount:
          type: string
          description: >-
            Number of instances that exceeded the time out while applying the
            patch.
          format: int64
        succeededRebootRequiredInstanceCount:
          description: Number of instances that require reboot.
          format: int64
          type: string
        ackedInstanceCount:
          type: string
          description: Number of instances that have acked and will start shortly.
          format: int64
        succeededInstanceCount:
          type: string
          description: Number of instances that have completed successfully.
          format: int64
        postPatchStepInstanceCount:
          type: string
          format: int64
          description: Number of instances that are running the post-patch step.
        applyingPatchesInstanceCount:
          format: int64
          description: Number of instances that are applying patches.
          type: string
    CVSSv3:
      type: object
      id: CVSSv3
      description: >-
        Common Vulnerability Scoring System version 3. For details, see
        https://www.first.org/cvss/specification-document
      properties:
        attackComplexity:
          enumDescriptions:
            - Invalid value.
            - >-
              Specialized access conditions or extenuating circumstances do not
              exist. An attacker can expect repeatable success when attacking
              the vulnerable component.
            - >-
              A successful attack depends on conditions beyond the attacker's
              control. That is, a successful attack cannot be accomplished at
              will, but requires the attacker to invest in some measurable
              amount of effort in preparation or execution against the
              vulnerable component before a successful attack can be expected.
          type: string
          description: >-
            This metric describes the conditions beyond the attacker's control
            that must exist in order to exploit the vulnerability.
          enum:
            - ATTACK_COMPLEXITY_UNSPECIFIED
            - ATTACK_COMPLEXITY_LOW
            - ATTACK_COMPLEXITY_HIGH
        availabilityImpact:
          description: >-
            This metric measures the impact to the availability of the impacted
            component resulting from a successfully exploited vulnerability.
          type: string
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
        confidentialityImpact:
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          type: string
          description: >-
            This metric measures the impact to the confidentiality of the
            information resources managed by a software component due to a
            successfully exploited vulnerability.
        baseScore:
          format: float
          description: >-
            The base score is a function of the base metric scores.
            https://www.first.org/cvss/specification-document#Base-Metrics
          type: number
        privilegesRequired:
          enum:
            - PRIVILEGES_REQUIRED_UNSPECIFIED
            - PRIVILEGES_REQUIRED_NONE
            - PRIVILEGES_REQUIRED_LOW
            - PRIVILEGES_REQUIRED_HIGH
          description: >-
            This metric describes the level of privileges an attacker must
            possess before successfully exploiting the vulnerability.
          enumDescriptions:
            - Invalid value.
            - >-
              The attacker is unauthorized prior to attack, and therefore does
              not require any access to settings or files of the vulnerable
              system to carry out an attack.
            - >-
              The attacker requires privileges that provide basic user
              capabilities that could normally affect only settings and files
              owned by a user. Alternatively, an attacker with Low privileges
              has the ability to access only non-sensitive resources.
            - >-
              The attacker requires privileges that provide significant (e.g.,
              administrative) control over the vulnerable component allowing
              access to component-wide settings and files.
          type: string
        exploitabilityScore:
          description: >-
            The Exploitability sub-score equation is derived from the Base
            Exploitability metrics.
            https://www.first.org/cvss/specification-document#2-1-Exploitability-Metrics
          type: number
          format: float
        scope:
          enumDescriptions:
            - Invalid value.
            - >-
              An exploited vulnerability can only affect resources managed by
              the same security authority.
            - >-
              An exploited vulnerability can affect resources beyond the
              security scope managed by the security authority of the vulnerable
              component.
          enum:
            - SCOPE_UNSPECIFIED
            - SCOPE_UNCHANGED
            - SCOPE_CHANGED
          type: string
          description: >-
            The Scope metric captures whether a vulnerability in one vulnerable
            component impacts resources in components beyond its security scope.
        integrityImpact:
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
          description: >-
            This metric measures the impact to integrity of a successfully
            exploited vulnerability.
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          type: string
        attackVector:
          description: >-
            This metric reflects the context by which vulnerability exploitation
            is possible.
          enumDescriptions:
            - Invalid value.
            - >-
              The vulnerable component is bound to the network stack and the set
              of possible attackers extends beyond the other options listed
              below, up to and including the entire Internet.
            - >-
              The vulnerable component is bound to the network stack, but the
              attack is limited at the protocol level to a logically adjacent
              topology.
            - >-
              The vulnerable component is not bound to the network stack and the
              attacker's path is via read/write/execute capabilities.
            - >-
              The attack requires the attacker to physically touch or manipulate
              the vulnerable component.
          type: string
          enum:
            - ATTACK_VECTOR_UNSPECIFIED
            - ATTACK_VECTOR_NETWORK
            - ATTACK_VECTOR_ADJACENT
            - ATTACK_VECTOR_LOCAL
            - ATTACK_VECTOR_PHYSICAL
        userInteraction:
          enumDescriptions:
            - Invalid value.
            - >-
              The vulnerable system can be exploited without interaction from
              any user.
            - >-
              Successful exploitation of this vulnerability requires a user to
              take some action before the vulnerability can be exploited.
          enum:
            - USER_INTERACTION_UNSPECIFIED
            - USER_INTERACTION_NONE
            - USER_INTERACTION_REQUIRED
          type: string
          description: >-
            This metric captures the requirement for a human user, other than
            the attacker, to participate in the successful compromise of the
            vulnerable component.
        impactScore:
          type: number
          format: float
          description: >-
            The Impact sub-score equation is derived from the Base Impact
            metrics.
    TimeZone:
      type: object
      properties:
        id:
          description: IANA Time Zone Database time zone, e.g. "America/New_York".
          type: string
        version:
          description: Optional. IANA Time Zone Database version number, e.g. "2019a".
          type: string
      id: TimeZone
      description: >-
        Represents a time zone from the [IANA Time Zone
        Database](https://www.iana.org/time-zones).
    GcsObject:
      properties:
        generationNumber:
          format: int64
          description: >-
            Required. Generation number of the Cloud Storage object. This is
            used to ensure that the ExecStep specified by this PatchJob does not
            change.
          type: string
        object:
          description: Required. Name of the Cloud Storage object.
          type: string
        bucket:
          description: Required. Bucket of the Cloud Storage object.
          type: string
      description: Cloud Storage object representation.
      id: GcsObject
      type: object
    Status:
      id: Status
      type: object
      properties:
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
    ListOSPolicyAssignmentsResponse:
      properties:
        nextPageToken:
          description: >-
            The pagination token to retrieve the next page of OS policy
            assignments.
          type: string
        osPolicyAssignments:
          type: array
          description: The list of assignments
          items:
            $ref: '#/components/schemas/OSPolicyAssignment'
      type: object
      id: ListOSPolicyAssignmentsResponse
      description: A response message for listing all assignments under given parent.
    WindowsUpdateSettings:
      properties:
        classifications:
          description: >-
            Only apply updates of these windows update classifications. If
            empty, all updates are applied.
          type: array
          items:
            type: string
            enum:
              - CLASSIFICATION_UNSPECIFIED
              - CRITICAL
              - SECURITY
              - DEFINITION
              - DRIVER
              - FEATURE_PACK
              - SERVICE_PACK
              - TOOL
              - UPDATE_ROLLUP
              - UPDATE
            enumDescriptions:
              - >-
                Invalid. If classifications are included, they must be
                specified.
              - >-
                "A widely released fix for a specific problem that addresses a
                critical, non-security-related bug." [1]
              - >-
                "A widely released fix for a product-specific, security-related
                vulnerability. Security vulnerabilities are rated by their
                severity. The severity rating is indicated in the Microsoft
                security bulletin as critical, important, moderate, or low." [1]
              - >-
                "A widely released and frequent software update that contains
                additions to a product's definition database. Definition
                databases are often used to detect objects that have specific
                attributes, such as malicious code, phishing websites, or junk
                mail." [1]
              - '"Software that controls the input and output of a device." [1]'
              - >-
                "New product functionality that is first distributed outside the
                context of a product release and that is typically included in
                the next full product release." [1]
              - >-
                "A tested, cumulative set of all hotfixes, security updates,
                critical updates, and updates. Additionally, service packs may
                contain additional fixes for problems that are found internally
                since the release of the product. Service packs my also contain
                a limited number of customer-requested design changes or
                features." [1]
              - >-
                "A utility or feature that helps complete a task or set of
                tasks." [1]
              - >-
                "A tested, cumulative set of hotfixes, security updates,
                critical updates, and updates that are packaged together for
                easy deployment. A rollup generally targets a specific area,
                such as security, or a component of a product, such as Internet
                Information Services (IIS)." [1]
              - >-
                "A widely released fix for a specific problem. An update
                addresses a noncritical, non-security-related bug." [1]
        excludes:
          type: array
          description: List of KBs to exclude from update.
          items:
            type: string
        exclusivePatches:
          description: >-
            An exclusive list of kbs to be updated. These are the only patches
            that will be updated. This field must not be used with other patch
            configurations.
          type: array
          items:
            type: string
      type: object
      description: Windows patching is performed using the Windows Update Agent.
      id: WindowsUpdateSettings
    OSPolicyResourceRepositoryResourceGooRepository:
      description: >-
        Represents a Goo package repository. These are added to a repo file that
        is managed at `C:/ProgramData/GooGet/repos/google_osconfig.repo`.
      type: object
      id: OSPolicyResourceRepositoryResourceGooRepository
      properties:
        url:
          description: Required. The url of the repository.
          type: string
        name:
          type: string
          description: Required. The name of the repository.
    VulnerabilityReportVulnerabilityDetailsReference:
      type: object
      id: VulnerabilityReportVulnerabilityDetailsReference
      description: A reference for this vulnerability.
      properties:
        source:
          description: The source of the reference e.g. NVD.
          type: string
        url:
          type: string
          description: The url of the reference.
    InventoryWindowsUpdatePackage:
      type: object
      description: >-
        Details related to a Windows Update package. Field data and names are
        taken from Windows Update API IUpdate Interface:
        https://docs.microsoft.com/en-us/windows/win32/api/_wua/ Descriptive
        fields like title, and description are localized based on the locale of
        the VM being updated.
      properties:
        kbArticleIds:
          items:
            type: string
          description: >-
            A collection of Microsoft Knowledge Base article IDs that are
            associated with the update package.
          type: array
        title:
          type: string
          description: The localized title of the update package.
        supportUrl:
          type: string
          description: >-
            A hyperlink to the language-specific support information for the
            update.
        lastDeploymentChangeTime:
          type: string
          format: google-datetime
          description: The last published date of the update, in (UTC) date and time.
        moreInfoUrls:
          items:
            type: string
          type: array
          description: >-
            A collection of URLs that provide more information about the update
            package.
        revisionNumber:
          description: The revision number of this update package.
          format: int32
          type: integer
        updateId:
          description: >-
            Gets the identifier of an update package. Stays the same across
            revisions.
          type: string
        description:
          description: The localized description of the update package.
          type: string
        categories:
          description: The categories that are associated with this update package.
          type: array
          items:
            $ref: >-
              #/components/schemas/InventoryWindowsUpdatePackageWindowsUpdateCategory
      id: InventoryWindowsUpdatePackage
    Operation:
      type: object
      properties:
        response:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          type: object
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
    OSPolicyResourceGroup:
      id: OSPolicyResourceGroup
      description: >-
        Resource groups provide a mechanism to group OS policy resources.
        Resource groups enable OS policy authors to create a single OS policy to
        be applied to VMs running different operating Systems. When the OS
        policy is applied to a target VM, the appropriate resource group within
        the OS policy is selected based on the `OSFilter` specified within the
        resource group.
      properties:
        inventoryFilters:
          type: array
          items:
            $ref: '#/components/schemas/OSPolicyInventoryFilter'
          description: >-
            List of inventory filters for the resource group. The resources in
            this resource group are applied to the target VM if it satisfies at
            least one of the following inventory filters. For example, to apply
            this resource group to VMs running either `RHEL` or `CentOS`
            operating systems, specify 2 items for the list with following
            values: inventory_filters[0].os_short_name='rhel' and
            inventory_filters[1].os_short_name='centos' If the list is empty,
            this resource group will be applied to the target VM
            unconditionally.
        resources:
          items:
            $ref: '#/components/schemas/OSPolicyResource'
          description: >-
            Required. List of resources configured for this resource group. The
            resources are executed in the exact order specified here.
          type: array
      type: object
    OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput:
      id: >-
        OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput
      type: object
      description: ExecResource specific output.
      properties:
        enforcementOutput:
          format: byte
          type: string
          description: >-
            Output from enforcement phase output file (if run). Output size is
            limited to 100K bytes.
    OneTimeSchedule:
      description: >-
        Sets the time for a one time patch deployment. Timestamp is in
        [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
      type: object
      properties:
        executeTime:
          format: google-datetime
          type: string
          description: Required. The desired patch job execution time.
      id: OneTimeSchedule
    InventoryWindowsQuickFixEngineeringPackage:
      id: InventoryWindowsQuickFixEngineeringPackage
      description: >-
        Information related to a Quick Fix Engineering package. Fields are taken
        from Windows QuickFixEngineering Interface and match the source names:
        https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering
      type: object
      properties:
        hotFixId:
          type: string
          description: Unique identifier associated with a particular QFE update.
        caption:
          type: string
          description: A short textual description of the QFE update.
        description:
          description: A textual description of the QFE update.
          type: string
        installTime:
          format: google-datetime
          type: string
          description: >-
            Date that the QFE update was installed. Mapped from installed_on
            field.
    OSPolicyResource:
      type: object
      id: OSPolicyResource
      properties:
        id:
          description: >-
            Required. The id of the resource with the following restrictions: *
            Must contain only lowercase letters, numbers, and hyphens. * Must
            start with a letter. * Must be between 1-63 characters. * Must end
            with a number or a letter. * Must be unique within the OS policy.
          type: string
        file:
          description: File resource
          $ref: '#/components/schemas/OSPolicyResourceFileResource'
        repository:
          description: Package repository resource
          $ref: '#/components/schemas/OSPolicyResourceRepositoryResource'
        exec:
          $ref: '#/components/schemas/OSPolicyResourceExecResource'
          description: Exec resource
        pkg:
          $ref: '#/components/schemas/OSPolicyResourcePackageResource'
          description: Package resource
      description: >-
        An OS policy resource is used to define the desired state configuration
        and provides a specific functionality like installing/removing packages,
        executing a script etc. The system ensures that resources are always in
        their desired state by taking necessary actions if they have drifted
        from their desired state.
    YumSettings:
      properties:
        minimal:
          type: boolean
          description: Will cause patch to run `yum update-minimal` instead.
        security:
          description: >-
            Adds the `--security` flag to `yum update`. Not supported on all
            platforms.
          type: boolean
        excludes:
          description: >-
            List of packages to exclude from update. These packages are excluded
            by using the yum `--exclude` flag.
          type: array
          items:
            type: string
        exclusivePackages:
          items:
            type: string
          type: array
          description: >-
            An exclusive list of packages to be updated. These are the only
            packages that will be updated. If these packages are not installed,
            they will be ignored. This field must not be specified with any
            other patch configuration fields.
      description: >-
        Yum patching is performed by executing `yum update`. Additional options
        can be set to control how this is executed. Note that not all settings
        are supported on all platforms.
      id: YumSettings
      type: object
    OSPolicyResourcePackageResourceRPM:
      type: object
      properties:
        source:
          description: Required. An rpm package.
          $ref: '#/components/schemas/OSPolicyResourceFile'
        pullDeps:
          description: >-
            Whether dependencies should also be installed. - install when false:
            `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum
            -y install package.rpm` or `zypper -y install package.rpm`
          type: boolean
      description: An RPM package file. RPM packages only support INSTALLED state.
      id: OSPolicyResourcePackageResourceRPM
    InventorySoftwarePackage:
      id: InventorySoftwarePackage
      properties:
        aptPackage:
          $ref: '#/components/schemas/InventoryVersionedPackage'
          description: >-
            Details of an APT package. For details about the apt package
            manager, see https://wiki.debian.org/Apt.
        zypperPatch:
          $ref: '#/components/schemas/InventoryZypperPatch'
          description: >-
            Details of a Zypper patch. For details about the Zypper package
            manager, see https://en.opensuse.org/SDB:Zypper_manual.
        googetPackage:
          $ref: '#/components/schemas/InventoryVersionedPackage'
          description: >-
            Details of a Googet package. For details about the googet package
            manager, see https://github.com/google/googet.
        cosPackage:
          $ref: '#/components/schemas/InventoryVersionedPackage'
          description: Details of a COS package.
        wuaPackage:
          description: >-
            Details of a Windows Update package. See
            https://docs.microsoft.com/en-us/windows/win32/api/_wua/ for
            information about Windows Update.
          $ref: '#/components/schemas/InventoryWindowsUpdatePackage'
        yumPackage:
          $ref: '#/components/schemas/InventoryVersionedPackage'
          description: >-
            Yum package info. For details about the yum package manager, see
            https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/ch-yum.
        windowsApplication:
          $ref: '#/components/schemas/InventoryWindowsApplication'
          description: Details of Windows Application.
        qfePackage:
          description: >-
            Details of a Windows Quick Fix engineering package. See
            https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering
            for info in Windows Quick Fix Engineering.
          $ref: '#/components/schemas/InventoryWindowsQuickFixEngineeringPackage'
        zypperPackage:
          $ref: '#/components/schemas/InventoryVersionedPackage'
          description: >-
            Details of a Zypper package. For details about the Zypper package
            manager, see https://en.opensuse.org/SDB:Zypper_manual.
      description: Software package information of the operating system.
      type: object
    OSPolicyResourcePackageResourceZypper:
      id: OSPolicyResourcePackageResourceZypper
      properties:
        name:
          type: string
          description: Required. Package name.
      type: object
      description: >-
        A package managed by Zypper. - install: `zypper -y install package` -
        remove: `zypper -y rm package`
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}/operations/{operationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/oauth_token'
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: osconfig.projects.locations.osPolicyAssignments.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: osconfig.projects.locations.osPolicyAssignments.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments:
    parameters: *ref_1
    post:
      description: >-
        Create an OS policy assignment. This method also creates the first
        revision of the OS policy assignment. This method returns a long running
        operation (LRO) that contains the rollout details. The rollout can be
        cancelled by cancelling the LRO. For more information, see [Method:
        projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1/projects.locations.osPolicyAssignments.operations/cancel).
      operationId: osconfig.projects.locations.osPolicyAssignments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSPolicyAssignment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: osPolicyAssignmentId
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments
      x-stackQL-verb: insert
    get:
      description: >-
        List the OS policy assignments under the parent resource. For each OS
        policy assignment, the latest revision is returned.
      operationId: osconfig.projects.locations.osPolicyAssignments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOSPolicyAssignmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: os_policy_assignments
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}:
    parameters: *ref_1
    patch:
      description: >-
        Update an existing OS policy assignment. This method creates a new
        revision of the OS policy assignment. This method returns a long running
        operation (LRO) that contains the rollout details. The rollout can be
        cancelled by cancelling the LRO. For more information, see [Method:
        projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1/projects.locations.osPolicyAssignments.operations/cancel).
      operationId: osconfig.projects.locations.osPolicyAssignments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSPolicyAssignment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments
      x-stackQL-verb: exec
    get:
      description: >-
        Retrieve an existing OS policy assignment. This method always returns
        the latest revision. In order to retrieve a previous revision of the
        assignment, also provide the revision ID in the `name` parameter.
      operationId: osconfig.projects.locations.osPolicyAssignments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPolicyAssignment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments
      x-stackQL-verb: select
    delete:
      description: >-
        Delete the OS policy assignment. This method creates a new revision of
        the OS policy assignment. This method returns a long running operation
        (LRO) that contains the rollout details. The rollout can be cancelled by
        cancelling the LRO. If the LRO completes and is not cancelled, all
        revisions associated with the OS policy assignment are deleted. For more
        information, see [Method:
        projects.locations.osPolicyAssignments.operations.cancel](https://cloud.google.com/compute/docs/osconfig/rest/v1/projects.locations.osPolicyAssignments.operations/cancel).
      operationId: osconfig.projects.locations.osPolicyAssignments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/osPolicyAssignments/{osPolicyAssignmentsId}:listRevisions:
    parameters: *ref_1
    get:
      description: >-
        List the OS policy assignment revisions for a given OS policy
        assignment.
      operationId: osconfig.projects.locations.osPolicyAssignments.listRevisions
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOSPolicyAssignmentRevisionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: os_policy_assignments__revisions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/vulnerabilityReport:
    parameters: *ref_1
    get:
      description: >-
        Gets the vulnerability report for the specified VM instance. Only VMs
        with inventory data have vulnerability reports associated with them.
      operationId: osconfig.projects.locations.instances.vulnerabilityReports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityReport'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: vulnerability_reports
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/vulnerabilityReports:
    parameters: *ref_1
    get:
      description: List vulnerability reports for all VM instances in the specified zone.
      operationId: osconfig.projects.locations.instances.vulnerabilityReports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVulnerabilityReportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: vulnerability_reports
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/osPolicyAssignments/{osPolicyAssignmentsId}/reports:
    parameters: *ref_1
    get:
      description: >-
        List OS policy assignment reports for all Compute Engine VM instances in
        the specified zone.
      operationId: osconfig.projects.locations.instances.osPolicyAssignments.reports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOSPolicyAssignmentReportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: reports
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/osPolicyAssignments/{osPolicyAssignmentsId}/report:
    parameters: *ref_1
    get:
      description: >-
        Get the OS policy assignment report for the specified Compute Engine VM
        instance.
      operationId: osconfig.projects.locations.instances.osPolicyAssignments.reports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPolicyAssignmentReport'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: osPolicyAssignmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/inventory:
    parameters: *ref_1
    get:
      description: >-
        Get inventory data for the specified VM instance. If the VM has no
        associated inventory, the message `NOT_FOUND` is returned.
      operationId: osconfig.projects.locations.instances.inventories.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: inventories
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/inventories:
    parameters: *ref_1
    get:
      description: List inventory data for all VM instances in the specified zone.
      operationId: osconfig.projects.locations.instances.inventories.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInventoriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: inventories
      x-stackQL-verb: select
  /v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}:
    parameters: *ref_1
    get:
      description: Get an OS Config patch deployment.
      operationId: osconfig.projects.patchDeployments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchDeployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchDeploymentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_deployments
      x-stackQL-verb: select
    delete:
      description: Delete an OS Config patch deployment.
      operationId: osconfig.projects.patchDeployments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchDeploymentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_deployments
      x-stackQL-verb: delete
    patch:
      description: Update an OS Config patch deployment.
      operationId: osconfig.projects.patchDeployments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchDeployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchDeploymentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: patch_deployments
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}:pause:
    parameters: *ref_1
    post:
      description: >-
        Change state of patch deployment to "PAUSED". Patch deployment in paused
        state doesn't generate patch jobs.
      operationId: osconfig.projects.patchDeployments.pause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PausePatchDeploymentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchDeployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchDeploymentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_deployments
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/patchDeployments:
    parameters: *ref_1
    get:
      description: Get a page of OS Config patch deployments.
      operationId: osconfig.projects.patchDeployments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPatchDeploymentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: patch_deployments
      x-stackQL-verb: select
    post:
      description: Create an OS Config patch deployment.
      operationId: osconfig.projects.patchDeployments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDeployment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchDeployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: patchDeploymentId
          schema:
            type: string
      x-stackQL-resource: patch_deployments
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/patchDeployments/{patchDeploymentsId}:resume:
    parameters: *ref_1
    post:
      description: >-
        Change state of patch deployment back to "ACTIVE". Patch deployment in
        active state continues to generate patch jobs.
      operationId: osconfig.projects.patchDeployments.resume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumePatchDeploymentRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchDeployment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchDeploymentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_deployments
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/patchJobs:
    parameters: *ref_1
    get:
      description: Get a list of patch jobs.
      operationId: osconfig.projects.patchJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPatchJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: patch_jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/patchJobs/{patchJobsId}:
    parameters: *ref_1
    get:
      description: >-
        Get the patch job. This can be used to track the progress of an ongoing
        patch job or review the details of completed jobs.
      operationId: osconfig.projects.patchJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_jobs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/patchJobs/{patchJobsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Cancel a patch job. The patch job must be active. Canceled patch jobs
        cannot be restarted.
      operationId: osconfig.projects.patchJobs.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelPatchJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/patchJobs:execute:
    parameters: *ref_1
    post:
      description: Patch VM instances by creating and running a patch job.
      operationId: osconfig.projects.patchJobs.execute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutePatchJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: patch_jobs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/patchJobs/{patchJobsId}/instanceDetails:
    parameters: *ref_1
    get:
      description: Get a list of instance details for a given patch job.
      operationId: osconfig.projects.patchJobs.instanceDetails.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPatchJobInstanceDetailsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: patchJobsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: instance_details
      x-stackQL-verb: select
