openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Cloud Deploy API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230609'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/deploy/
servers:
  - url: https://clouddeploy.googleapis.com
components:
  schemas:
    Canary:
      type: object
      description: Canary represents the canary deployment strategy.
      properties:
        customCanaryDeployment:
          $ref: '#/components/schemas/CustomCanaryDeployment'
          description: >-
            Configures the progressive based deployment for a Target, but allows
            customizing at the phase level where a phase represents each of the
            percentage deployments.
        canaryDeployment:
          $ref: '#/components/schemas/CanaryDeployment'
          description: Configures the progressive based deployment for a Target.
        runtimeConfig:
          description: >-
            Optional. Runtime specific configurations for the deployment
            strategy. The runtime configuration is used to determine how Cloud
            Deploy will split traffic to enable a progressive deployment.
          $ref: '#/components/schemas/RuntimeConfig'
      id: Canary
    AdvanceRolloutRequest:
      properties:
        phaseId:
          description: Required. The phase ID to advance the `Rollout` to.
          type: string
      type: object
      description: The request object used by `AdvanceRollout`.
      id: AdvanceRolloutRequest
    PrivatePool:
      properties:
        workerPool:
          type: string
          description: >-
            Required. Resource name of the Cloud Build worker pool to use. The
            format is
            `projects/{project}/locations/{location}/workerPools/{pool}`.
        artifactStorage:
          description: >-
            Optional. Cloud Storage location where execution outputs should be
            stored. This can either be a bucket ("gs://my-bucket") or a path
            within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default
            bucket located in the same region will be used.
          type: string
        serviceAccount:
          type: string
          description: >-
            Optional. Google service account to use for execution. If
            unspecified, the project execution service account
            (-compute@developer.gserviceaccount.com) will be used.
      id: PrivatePool
      type: object
      description: Execution using a private Cloud Build pool.
    Release:
      properties:
        skaffoldConfigUri:
          description: >-
            Cloud Storage URI of tar.gz archive containing Skaffold
            configuration.
          type: string
        deliveryPipelineSnapshot:
          readOnly: true
          description: >-
            Output only. Snapshot of the parent pipeline taken at release
            creation time.
          $ref: '#/components/schemas/DeliveryPipeline'
        abandoned:
          readOnly: true
          type: boolean
          description: Output only. Indicates whether this is an abandoned release.
        renderState:
          type: string
          enumDescriptions:
            - The render state is unspecified.
            - All rendering operations have completed successfully.
            - >-
              All rendering operations have completed, and one or more have
              failed.
            - Rendering has started and is not complete.
          readOnly: true
          description: Output only. Current state of the render operation.
          enum:
            - RENDER_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
        description:
          type: string
          description: Description of the `Release`. Max length is 255 characters.
        skaffoldVersion:
          type: string
          description: >-
            The Skaffold version to use when operating on this release, such as
            "1.20.0". Not all versions are valid; Google Cloud Deploy supports a
            specific set of versions. If unset, the most recent supported
            Skaffold version will be used.
        condition:
          $ref: '#/components/schemas/ReleaseCondition'
          description: Output only. Information around the state of the Release.
          readOnly: true
        targetRenders:
          type: object
          description: >-
            Output only. Map from target ID to details of the render operation
            for that target.
          additionalProperties:
            $ref: '#/components/schemas/TargetRender'
          readOnly: true
        createTime:
          format: google-datetime
          description: Output only. Time at which the `Release` was created.
          readOnly: true
          type: string
        buildArtifacts:
          items:
            $ref: '#/components/schemas/BuildArtifact'
          type: array
          description: List of artifacts to pass through to Skaffold command.
        renderStartTime:
          description: Output only. Time at which the render began.
          readOnly: true
          format: google-datetime
          type: string
        targetSnapshots:
          items:
            $ref: '#/components/schemas/Target'
          type: array
          readOnly: true
          description: Output only. Snapshot of the targets taken at release creation time.
        uid:
          description: Output only. Unique identifier of the `Release`.
          type: string
          readOnly: true
        targetArtifacts:
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/TargetArtifact'
          description: >-
            Output only. Map from target ID to the target artifacts created
            during the render operation.
          type: object
        name:
          type: string
          description: >-
            Optional. Name of the `Release`. Format is projects/{project}/
            locations/{location}/deliveryPipelines/{deliveryPipeline}/
            releases/a-z{0,62}.
        labels:
          type: object
          description: >-
            Labels are attributes that can be set and used by both the user and
            by Google Cloud Deploy. Labels must meet the following constraints:
            * Keys and values can contain only lowercase letters, numeric
            characters, underscores, and dashes. * All characters must use UTF-8
            encoding, and international characters are allowed. * Keys must
            start with a lowercase letter or international character. * Each
            resource is limited to a maximum of 64 labels. Both keys and values
            are additionally constrained to be <= 128 bytes.
          additionalProperties:
            type: string
        skaffoldConfigPath:
          description: Filepath of the Skaffold config inside of the config URI.
          type: string
        deployParameters:
          type: object
          description: >-
            Optional. The deploy parameters to use for all targets in this
            release.
          additionalProperties:
            type: string
        etag:
          type: string
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding.
        renderEndTime:
          format: google-datetime
          description: Output only. Time at which the render completed.
          readOnly: true
          type: string
        annotations:
          description: >-
            User annotations. These attributes can only be set and used by the
            user, and not by Google Cloud Deploy. See
            https://google.aip.dev/128#annotations for more details such as
            format and size limitations.
          type: object
          additionalProperties:
            type: string
      id: Release
      type: object
      description: >-
        A `Release` resource in the Google Cloud Deploy API. A `Release` defines
        a specific Skaffold configuration instance that can be deployed.
    Date:
      properties:
        month:
          format: int32
          type: integer
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
        day:
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
          type: integer
          format: int32
        year:
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
          format: int32
          type: integer
      type: object
      id: Date
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
    AdvanceRolloutResponse:
      description: The response object from `AdvanceRollout`.
      id: AdvanceRolloutResponse
      type: object
      properties: {}
    CreateChildRolloutJob:
      type: object
      description: A createChildRollout Job.
      properties: {}
      id: CreateChildRolloutJob
    Phase:
      type: object
      properties:
        skipMessage:
          type: string
          description: >-
            Output only. Additional information on why the Phase was skipped, if
            available.
          readOnly: true
        deploymentJobs:
          $ref: '#/components/schemas/DeploymentJobs'
          description: Output only. Deployment job composition.
          readOnly: true
        state:
          enumDescriptions:
            - The Phase has an unspecified state.
            - The Phase is waiting for an earlier Phase(s) to complete.
            - The Phase is in progress.
            - The Phase has succeeded.
            - The Phase has failed.
            - The Phase was aborted.
            - The Phase was skipped.
          description: Output only. Current state of the Phase.
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - ABORTED
            - SKIPPED
        childRolloutJobs:
          description: Output only. ChildRollout job composition.
          readOnly: true
          $ref: '#/components/schemas/ChildRolloutJobs'
        id:
          type: string
          readOnly: true
          description: Output only. The ID of the Phase.
      description: >-
        Phase represents a collection of jobs that are logically grouped
        together for a `Rollout`.
      id: Phase
    DeliveryPipelineNotificationEvent:
      properties:
        message:
          type: string
          description: Debug message for when a notification fails to send.
        type:
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          description: Type of this notification, e.g. for a Pub/Sub failure.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RENDER_STATUES_CHANGE
        deliveryPipeline:
          type: string
          description: The name of the `Delivery Pipeline`.
      description: >-
        Payload proto for
        "clouddeploy.googleapis.com/deliverypipeline_notification" Platform Log
        event that describes the failure to send delivery pipeline status change
        Pub/Sub notification.
      type: object
      id: DeliveryPipelineNotificationEvent
    DeploymentJobs:
      type: object
      id: DeploymentJobs
      description: Deployment job composition.
      properties:
        deployJob:
          $ref: '#/components/schemas/Job'
          readOnly: true
          description: Output only. The deploy Job. This is the deploy job in the phase.
        verifyJob:
          description: >-
            Output only. The verify Job. Runs after a deploy if the deploy
            succeeds.
          readOnly: true
          $ref: '#/components/schemas/Job'
    KubernetesConfig:
      type: object
      id: KubernetesConfig
      properties:
        gatewayServiceMesh:
          description: Kubernetes Gateway API service mesh configuration.
          $ref: '#/components/schemas/GatewayServiceMesh'
        serviceNetworking:
          description: Kubernetes Service networking configuration.
          $ref: '#/components/schemas/ServiceNetworking'
      description: KubernetesConfig contains the Kubernetes runtime configuration.
    CancelRolloutResponse:
      type: object
      description: The response object from `CancelRollout`.
      id: CancelRolloutResponse
      properties: {}
    GatewayServiceMesh:
      properties:
        deployment:
          description: >-
            Required. Name of the Kubernetes Deployment whose traffic is managed
            by the specified HTTPRoute and Service.
          type: string
        httpRoute:
          type: string
          description: Required. Name of the Gateway API HTTPRoute.
        service:
          type: string
          description: Required. Name of the Kubernetes Service.
      description: Information about the Kubernetes Gateway API service mesh configuration.
      id: GatewayServiceMesh
      type: object
    RetryJobResponse:
      id: RetryJobResponse
      type: object
      description: The response object from 'RetryJob'.
      properties: {}
    TargetArtifact:
      description: The artifacts produced by a target render operation.
      id: TargetArtifact
      properties:
        phaseArtifacts:
          readOnly: true
          description: >-
            Output only. Map from the phase ID to the phase artifacts for the
            `Target`.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PhaseArtifact'
        manifestPath:
          type: string
          readOnly: true
          description: Output only. File path of the rendered manifest relative to the URI.
        artifactUri:
          readOnly: true
          description: >-
            Output only. URI of a directory containing the artifacts. This
            contains deployment configuration used by Skaffold during a rollout,
            and all paths are relative to this location.
          type: string
        skaffoldConfigPath:
          type: string
          description: >-
            Output only. File path of the resolved Skaffold configuration
            relative to the URI.
          readOnly: true
      type: object
    Location:
      id: Location
      type: object
      description: A resource that represents a Google Cloud location.
      properties:
        name:
          type: string
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          additionalProperties:
            type: string
          type: object
        displayName:
          type: string
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
    ListDeliveryPipelinesResponse:
      description: The response object from `ListDeliveryPipelines`.
      properties:
        deliveryPipelines:
          description: The `DeliveryPipeline` objects.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryPipeline'
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
      id: ListDeliveryPipelinesResponse
      type: object
    CloudRunConfig:
      id: CloudRunConfig
      properties:
        automaticTrafficControl:
          description: >-
            Whether Cloud Deploy should update the traffic stanza in a Cloud Run
            Service on the user's behalf to facilitate traffic splitting. This
            is required to be true for CanaryDeployments, but optional for
            CustomCanaryDeployments.
          type: boolean
      type: object
      description: CloudRunConfig contains the Cloud Run runtime configuration.
    Metadata:
      properties:
        cloudRun:
          description: >-
            Output only. The name of the Cloud Run Service that is associated
            with a `Rollout`.
          readOnly: true
          $ref: '#/components/schemas/CloudRunMetadata'
      type: object
      description: Metadata includes information associated with a `Rollout`.
      id: Metadata
    Rollout:
      properties:
        approveTime:
          type: string
          readOnly: true
          description: Output only. Time at which the `Rollout` was approved.
          format: google-datetime
        name:
          type: string
          description: >-
            Optional. Name of the `Rollout`. Format is projects/{project}/
            locations/{location}/deliveryPipelines/{deliveryPipeline}/
            releases/{release}/rollouts/a-z{0,62}.
        deployEndTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Time at which the `Rollout` finished deploying.
        failureReason:
          type: string
          description: >-
            Output only. Additional information about the rollout failure, if
            available.
          readOnly: true
        enqueueTime:
          description: Output only. Time at which the `Rollout` was enqueued.
          format: google-datetime
          type: string
          readOnly: true
        deployStartTime:
          description: Output only. Time at which the `Rollout` started deploying.
          format: google-datetime
          readOnly: true
          type: string
        deployFailureCause:
          type: string
          readOnly: true
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - RELEASE_FAILED
            - RELEASE_ABANDONED
            - VERIFICATION_CONFIG_NOT_FOUND
            - CLOUD_BUILD_REQUEST_FAILED
          enumDescriptions:
            - No reason for failure is specified.
            - >-
              Cloud Build is not available, either because it is not enabled or
              because Cloud Deploy has insufficient permissions. See [required
              permission](/deploy/docs/cloud-deploy-service-account#required_permissions).
            - >-
              The deploy operation did not complete successfully; check Cloud
              Build logs.
            - Deployment did not complete within the alloted time.
            - Release is in a failed state.
            - Release is abandoned.
            - No skaffold verify configuration was found.
            - >-
              Cloud Build failed to fulfill Google Cloud Deploy's request. See
              failure_message for additional details.
          description: >-
            Output only. The reason this rollout failed. This will always be
            unspecified while the rollout is in progress.
        approvalState:
          type: string
          enum:
            - APPROVAL_STATE_UNSPECIFIED
            - NEEDS_APPROVAL
            - DOES_NOT_NEED_APPROVAL
            - APPROVED
            - REJECTED
          enumDescriptions:
            - The `Rollout` has an unspecified approval state.
            - The `Rollout` requires approval.
            - The `Rollout` does not require approval.
            - The `Rollout` has been approved.
            - The `Rollout` has been rejected.
          readOnly: true
          description: Output only. Approval state of the `Rollout`.
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Time at which the `Rollout` was created.
        annotations:
          additionalProperties:
            type: string
          type: object
          description: >-
            User annotations. These attributes can only be set and used by the
            user, and not by Google Cloud Deploy. See
            https://google.aip.dev/128#annotations for more details such as
            format and size limitations.
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            Labels are attributes that can be set and used by both the user and
            by Google Cloud Deploy. Labels must meet the following constraints:
            * Keys and values can contain only lowercase letters, numeric
            characters, underscores, and dashes. * All characters must use UTF-8
            encoding, and international characters are allowed. * Keys must
            start with a lowercase letter or international character. * Each
            resource is limited to a maximum of 64 labels. Both keys and values
            are additionally constrained to be <= 128 bytes.
        metadata:
          readOnly: true
          description: Output only. Metadata contains information about the rollout.
          $ref: '#/components/schemas/Metadata'
        deployingBuild:
          type: string
          description: >-
            Output only. The resource name of the Cloud Build `Build` object
            that is used to deploy the Rollout. Format is
            `projects/{project}/locations/{location}/builds/{build}`.
          readOnly: true
        description:
          description: >-
            Description of the `Rollout` for user purposes. Max length is 255
            characters.
          type: string
        targetId:
          type: string
          description: Required. The ID of Target to which this `Rollout` is deploying.
        uid:
          type: string
          description: Output only. Unique identifier of the `Rollout`.
          readOnly: true
        state:
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
            - PENDING_APPROVAL
            - APPROVAL_REJECTED
            - PENDING
            - PENDING_RELEASE
            - CANCELLING
            - CANCELLED
            - HALTED
          enumDescriptions:
            - The `Rollout` has an unspecified state.
            - The `Rollout` has completed successfully.
            - The `Rollout` has failed.
            - The `Rollout` is being deployed.
            - The `Rollout` needs approval.
            - An approver rejected the `Rollout`.
            - >-
              The `Rollout` is waiting for an earlier Rollout(s) to complete on
              this `Target`.
            - The `Rollout` is waiting for the `Release` to be fully rendered.
            - The `Rollout` is in the process of being cancelled.
            - The `Rollout` has been cancelled.
            - The `Rollout` is halted.
          type: string
          description: Output only. Current state of the `Rollout`.
          readOnly: true
        etag:
          type: string
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding.
        phases:
          description: >-
            Output only. The phases that represent the workflows of this
            `Rollout`.
          items:
            $ref: '#/components/schemas/Phase'
          readOnly: true
          type: array
        controllerRollout:
          type: string
          description: >-
            Output only. Name of the `ControllerRollout`. Format is
            projects/{project}/
            locations/{location}/deliveryPipelines/{deliveryPipeline}/
            releases/{release}/rollouts/a-z{0,62}.
          readOnly: true
      id: Rollout
      type: object
      description: >-
        A `Rollout` resource in the Google Cloud Deploy API. A `Rollout`
        contains information around a specific deployment to a `Target`.
    PhaseArtifact:
      type: object
      id: PhaseArtifact
      properties:
        manifestPath:
          readOnly: true
          description: Output only. File path of the rendered manifest relative to the URI.
          type: string
        skaffoldConfigPath:
          type: string
          readOnly: true
          description: >-
            Output only. File path of the resolved Skaffold configuration
            relative to the URI.
        jobManifestsPath:
          type: string
          description: >-
            Output only. File path of the directory of rendered job manifests
            relative to the URI. This is only set if it is applicable.
          readOnly: true
      description: Contains the paths to the artifacts, relative to the URI, for a phase.
    AbandonReleaseRequest:
      id: AbandonReleaseRequest
      description: The request object used by `AbandonRelease`.
      type: object
      properties: {}
    TerminateJobRunResponse:
      id: TerminateJobRunResponse
      type: object
      properties: {}
      description: The response object from `TerminateJobRun`.
    CustomCanaryDeployment:
      id: CustomCanaryDeployment
      type: object
      description: >-
        CustomCanaryDeployment represents the custom canary deployment
        configuration.
      properties:
        phaseConfigs:
          items:
            $ref: '#/components/schemas/PhaseConfig'
          description: >-
            Required. Configuration for each phase in the canary deployment in
            the order executed.
          type: array
    Status:
      type: object
      properties:
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
    Strategy:
      id: Strategy
      type: object
      properties:
        standard:
          $ref: '#/components/schemas/Standard'
          description: >-
            Standard deployment strategy executes a single deploy and allows
            verifying the deployment.
        canary:
          description: >-
            Canary deployment strategy provides progressive percentage based
            deployments to a Target.
          $ref: '#/components/schemas/Canary'
      description: Strategy contains deployment strategy information.
    ReleaseNotificationEvent:
      properties:
        release:
          type: string
          description: The name of the `Release`.
        type:
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          type: string
          description: Type of this notification, e.g. for a Pub/Sub failure.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RENDER_STATUES_CHANGE
        message:
          type: string
          description: Debug message for when a notification fails to send.
      description: >-
        Payload proto for "clouddeploy.googleapis.com/release_notification"
        Platform Log event that describes the failure to send release status
        change Pub/Sub notification.
      type: object
      id: ReleaseNotificationEvent
    Binding:
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
        members:
          items:
            type: string
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding.
          type: array
        role:
          type: string
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`.
      id: Binding
    TargetNotificationEvent:
      properties:
        type:
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          description: Type of this notification, e.g. for a Pub/Sub failure.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RENDER_STATUES_CHANGE
          type: string
        message:
          type: string
          description: Debug message for when a notification fails to send.
        target:
          description: The name of the `Target`.
          type: string
      id: TargetNotificationEvent
      type: object
      description: >-
        Payload proto for "clouddeploy.googleapis.com/target_notification"
        Platform Log event that describes the failure to send target status
        change Pub/Sub notification.
    SerialPipeline:
      type: object
      description: >-
        SerialPipeline defines a sequential set of stages for a
        `DeliveryPipeline`.
      id: SerialPipeline
      properties:
        stages:
          items:
            $ref: '#/components/schemas/Stage'
          description: >-
            Each stage specifies configuration for a `Target`. The ordering of
            this list defines the promotion flow.
          type: array
    VerifyJob:
      id: VerifyJob
      properties: {}
      description: A verify Job.
      type: object
    AuditConfig:
      id: AuditConfig
      properties:
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
      type: object
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
    DeployParameters:
      properties:
        matchTargetLabels:
          additionalProperties:
            type: string
          type: object
          description: >-
            Optional. Deploy parameters are applied to targets with match
            labels. If unspecified, deploy parameters are applied to all targets
            (including child targets of a multi-target).
        values:
          description: Required. Values are deploy parameters in key-value pairs.
          additionalProperties:
            type: string
          type: object
      type: object
      description: DeployParameters contains deploy parameters information.
      id: DeployParameters
    Policy:
      type: object
      properties:
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
        auditConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
        version:
          type: integer
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          format: int32
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
        user:mike@example.com - group:admins@example.com - domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For
        a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
    Expr:
      type: object
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      id: Expr
      properties:
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
    TargetRender:
      id: TargetRender
      properties:
        failureMessage:
          readOnly: true
          description: >-
            Output only. Additional information about the render failure, if
            available.
          type: string
        metadata:
          description: >-
            Output only. Metadata related to the `Release` render for this
            Target.
          readOnly: true
          $ref: '#/components/schemas/RenderMetadata'
        renderingBuild:
          readOnly: true
          type: string
          description: >-
            Output only. The resource name of the Cloud Build `Build` object
            that is used to render the manifest for this target. Format is
            `projects/{project}/locations/{location}/builds/{build}`.
        renderingState:
          enumDescriptions:
            - The render operation state is unspecified.
            - The render operation has completed successfully.
            - The render operation has failed.
            - The render operation is in progress.
          description: Output only. Current state of the render operation for this Target.
          readOnly: true
          enum:
            - TARGET_RENDER_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
          type: string
        failureCause:
          enumDescriptions:
            - No reason for failure is specified.
            - >-
              Cloud Build is not available, either because it is not enabled or
              because Google Cloud Deploy has insufficient permissions. See
              [required
              permission](/deploy/docs/cloud-deploy-service-account#required_permissions).
            - >-
              The render operation did not complete successfully; check Cloud
              Build logs.
            - >-
              Cloud Build failed to fulfill Google Cloud Deploy's request. See
              failure_message for additional details.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - CLOUD_BUILD_REQUEST_FAILED
          type: string
          readOnly: true
          description: >-
            Output only. Reason this render failed. This will always be
            unspecified while the render in progress.
      type: object
      description: Details of rendering for a single target.
    DeployJob:
      description: A deploy Job.
      properties: {}
      type: object
      id: DeployJob
    DeployJobRunMetadata:
      id: DeployJobRunMetadata
      properties:
        cloudRun:
          $ref: '#/components/schemas/CloudRunMetadata'
          description: >-
            Output only. The name of the Cloud Run Service that is associated
            with a `DeployJobRun`.
          readOnly: true
      description: >-
        DeployJobRunMetadata surfaces information associated with a
        `DeployJobRun` to the user.
      type: object
    TestIamPermissionsResponse:
      type: object
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
    GkeCluster:
      id: GkeCluster
      properties:
        cluster:
          type: string
          description: >-
            Information specifying a GKE Cluster. Format is
            `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}.
        internalIp:
          description: >-
            Optional. If true, `cluster` is accessed using the private IP
            address of the control plane endpoint. Otherwise, the default IP
            address of the control plane endpoint is used. The default IP
            address is the private IP address for clusters with private
            control-plane endpoints and the public IP address otherwise. Only
            specify this option when `cluster` is a [private GKE
            cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).
          type: boolean
      type: object
      description: Information specifying a GKE Cluster.
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      description: Request message for `TestIamPermissions` method.
    ListJobRunsResponse:
      id: ListJobRunsResponse
      description: ListJobRunsResponse is the response object returned by `ListJobRuns`.
      type: object
      properties:
        jobRuns:
          type: array
          items:
            $ref: '#/components/schemas/JobRun'
          description: The `JobRun` objects.
        unreachable:
          items:
            type: string
          description: Locations that could not be reached
          type: array
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
    MultiTarget:
      id: MultiTarget
      description: Information specifying a multiTarget.
      type: object
      properties:
        targetIds:
          description: Required. The target_ids of this multiTarget.
          items:
            type: string
          type: array
    ReleaseRenderEvent:
      type: object
      properties:
        release:
          type: string
          description: The name of the `Release`.
        message:
          type: string
          description: >-
            Debug message for when a render transition occurs. Provides further
            details as rendering progresses through render states.
      description: >-
        Payload proto for "clouddeploy.googleapis.com/release_render" Platform
        Log event that describes the render status change.
      id: ReleaseRenderEvent
    IgnoreJobRequest:
      id: IgnoreJobRequest
      description: The request object used by `IgnoreJob`.
      properties:
        phaseId:
          description: Required. The phase ID the Job to ignore belongs to.
          type: string
        jobId:
          type: string
          description: Required. The job ID for the Job to ignore.
      type: object
    AdvanceChildRolloutJob:
      properties: {}
      id: AdvanceChildRolloutJob
      type: object
      description: An advanceChildRollout Job.
    OperationMetadata:
      id: OperationMetadata
      type: object
      description: Represents the metadata of the long-running operation.
      properties:
        target:
          readOnly: true
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        apiVersion:
          readOnly: true
          type: string
          description: Output only. API version used to start the operation.
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          type: boolean
          readOnly: true
        createTime:
          format: google-datetime
          description: Output only. The time the operation was created.
          type: string
          readOnly: true
    TargetsTypeCondition:
      properties:
        errorDetails:
          description: Human readable error message.
          type: string
        status:
          description: >-
            True if the targets are all a comparable type. For example this is
            true if all targets are GKE clusters. This is false if some targets
            are Cloud Run targets and others are GKE clusters.
          type: boolean
      description: >-
        TargetsTypeCondition contains information on whether the Targets defined
        in the Delivery Pipeline are of the same type.
      id: TargetsTypeCondition
      type: object
    JobRun:
      properties:
        advanceChildRolloutJobRun:
          readOnly: true
          description: Output only. Information specific to an advanceChildRollout `JobRun`
          $ref: '#/components/schemas/AdvanceChildRolloutJobRun'
        verifyJobRun:
          description: Output only. Information specific to a verify `JobRun`.
          $ref: '#/components/schemas/VerifyJobRun'
          readOnly: true
        name:
          type: string
          description: >-
            Optional. Name of the `JobRun`. Format is
            projects/{project}/locations/{location}/
            deliveryPipelines/{deliveryPipeline}/releases/{releases}/rollouts/
            {rollouts}/jobRuns/{uuid}.
        deployJobRun:
          description: Output only. Information specific to a deploy `JobRun`.
          readOnly: true
          $ref: '#/components/schemas/DeployJobRun'
        jobId:
          type: string
          description: Output only. ID of the `Rollout` job this `JobRun` corresponds to.
          readOnly: true
        uid:
          readOnly: true
          type: string
          description: Output only. Unique identifier of the `JobRun`.
        endTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Time at which the `JobRun` ended.
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. Time at which the `JobRun` was created.
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - TERMINATING
            - TERMINATED
          type: string
          enumDescriptions:
            - The `JobRun` has an unspecified state.
            - The `JobRun` is in progress.
            - The `JobRun` has succeeded.
            - The `JobRun` has failed.
            - The `JobRun` is terminating.
            - The `JobRun` was terminated.
          description: Output only. The current state of the `JobRun`.
          readOnly: true
        phaseId:
          readOnly: true
          description: Output only. ID of the `Rollout` phase this `JobRun` belongs in.
          type: string
        etag:
          type: string
          description: >-
            Output only. This checksum is computed by the server based on the
            value of other fields, and may be sent on update and delete requests
            to ensure the client has an up-to-date value before proceeding.
          readOnly: true
        startTime:
          type: string
          readOnly: true
          description: Output only. Time at which the `JobRun` was started.
          format: google-datetime
        createChildRolloutJobRun:
          readOnly: true
          description: Output only. Information specific to a createChildRollout `JobRun`.
          $ref: '#/components/schemas/CreateChildRolloutJobRun'
      type: object
      id: JobRun
      description: >-
        A `JobRun` resource in the Google Cloud Deploy API. A `JobRun` contains
        information of a single `Rollout` job evaluation.
    PhaseConfig:
      description: >-
        PhaseConfig represents the configuration for a phase in the custom
        canary deployment.
      id: PhaseConfig
      properties:
        percentage:
          description: Required. Percentage deployment for the phase.
          format: int32
          type: integer
        phaseId:
          description: >-
            Required. The ID to assign to the `Rollout` phase. This value must
            consist of lower-case letters, numbers, and hyphens, start with a
            letter and end with a letter or a number, and have a max length of
            63 characters. In other words, it must match the following regex:
            `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
          type: string
        verify:
          type: boolean
          description: Whether to run verify tests after the deployment.
        profiles:
          type: array
          items:
            type: string
          description: >-
            Skaffold profiles to use when rendering the manifest for this phase.
            These are in addition to the profiles list specified in the
            `DeliveryPipeline` stage.
      type: object
    ReleaseReadyCondition:
      properties:
        status:
          description: >-
            True if the Release is in a valid state. Otherwise at least one
            condition in `ReleaseCondition` is in an invalid state. Iterate over
            those conditions and see which condition(s) has status = false to
            find out what is wrong with the Release.
          type: boolean
      description: >-
        ReleaseReadyCondition contains information around the status of the
        Release. If a release is not ready, you cannot create a rollout with the
        release.
      type: object
      id: ReleaseReadyCondition
    RenderMetadata:
      properties:
        cloudRun:
          description: Output only. Metadata associated with rendering for Cloud Run.
          readOnly: true
          $ref: '#/components/schemas/CloudRunRenderMetadata'
      description: RenderMetadata includes information associated with a `Release` render.
      type: object
      id: RenderMetadata
    ServiceNetworking:
      properties:
        deployment:
          type: string
          description: >-
            Required. Name of the Kubernetes Deployment whose traffic is managed
            by the specified Service.
        service:
          type: string
          description: Required. Name of the Kubernetes Service.
        disablePodOverprovisioning:
          description: >-
            Optional. Whether to disable Pod overprovisioning. If Pod
            overprovisioning is disabled then Cloud Deploy will limit the number
            of total Pods used for the deployment strategy to the number of Pods
            the Deployment has on the cluster.
          type: boolean
      description: Information about the Kubernetes Service networking configuration.
      id: ServiceNetworking
      type: object
    IgnoreJobResponse:
      properties: {}
      id: IgnoreJobResponse
      type: object
      description: The response object from `IgnoreJob`.
    DeployArtifact:
      description: The artifacts produced by a deploy operation.
      properties:
        artifactUri:
          readOnly: true
          type: string
          description: >-
            Output only. URI of a directory containing the artifacts. All paths
            are relative to this location.
        manifestPaths:
          type: array
          items:
            type: string
          description: >-
            Output only. File paths of the manifests applied during the deploy
            operation relative to the URI.
          readOnly: true
      type: object
      id: DeployArtifact
    Job:
      type: object
      id: Job
      description: Job represents an operation for a `Rollout`.
      properties:
        skipMessage:
          type: string
          description: >-
            Output only. Additional information on why the Job was skipped, if
            available.
          readOnly: true
        advanceChildRolloutJob:
          description: Output only. An advanceChildRollout Job.
          $ref: '#/components/schemas/AdvanceChildRolloutJob'
          readOnly: true
        jobRun:
          readOnly: true
          type: string
          description: >-
            Output only. The name of the `JobRun` responsible for the most
            recent invocation of this Job.
        verifyJob:
          description: Output only. A verify Job.
          readOnly: true
          $ref: '#/components/schemas/VerifyJob'
        id:
          readOnly: true
          type: string
          description: Output only. The ID of the Job.
        state:
          type: string
          description: Output only. The current state of the Job.
          enumDescriptions:
            - The Job has an unspecified state.
            - The Job is waiting for an earlier Phase(s) or Job(s) to complete.
            - The Job is disabled.
            - The Job is in progress.
            - The Job succeeded.
            - The Job failed.
            - The Job was aborted.
            - The Job was skipped.
            - The Job was ignored.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - DISABLED
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - ABORTED
            - SKIPPED
            - IGNORED
        deployJob:
          $ref: '#/components/schemas/DeployJob'
          description: Output only. A deploy Job.
          readOnly: true
        createChildRolloutJob:
          $ref: '#/components/schemas/CreateChildRolloutJob'
          readOnly: true
          description: Output only. A createChildRollout Job.
    SkaffoldVersion:
      id: SkaffoldVersion
      type: object
      properties:
        supportExpirationTime:
          description: >-
            The time at which this version of skaffold will no longer be
            supported.
          type: string
          format: google-datetime
        supportEndDate:
          description: Date when this version is expected to no longer be supported.
          $ref: '#/components/schemas/Date'
        maintenanceModeTime:
          format: google-datetime
          description: >-
            The time at which this version of skaffold will enter maintenance
            mode.
          type: string
        version:
          description: Release version number. For example, "1.20.3".
          type: string
      description: Details of a supported Skaffold version.
    AdvanceChildRolloutJobRun:
      id: AdvanceChildRolloutJobRun
      type: object
      description: >-
        AdvanceChildRolloutJobRun contains information specific to a
        advanceChildRollout `JobRun`.
      properties:
        rolloutPhaseId:
          readOnly: true
          description: Output only. the ID of the ChildRollout's Phase.
          type: string
        rollout:
          readOnly: true
          description: >-
            Output only. Name of the `ChildRollout`. Format is
            projects/{project}/
            locations/{location}/deliveryPipelines/{deliveryPipeline}/
            releases/{release}/rollouts/a-z{0,62}.
          type: string
    Standard:
      description: Standard represents the standard deployment strategy.
      type: object
      id: Standard
      properties:
        verify:
          type: boolean
          description: Whether to verify a deployment.
    ListOperationsResponse:
      type: object
      description: The response message for Operations.ListOperations.
      id: ListOperationsResponse
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: >-
            A list of operations that matches the specified filter in the
            request.
        nextPageToken:
          description: The standard List next-page token.
          type: string
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          format: google-fieldmask
          type: string
      id: SetIamPolicyRequest
    CancelOperationRequest:
      type: object
      description: The request message for Operations.CancelOperation.
      properties: {}
      id: CancelOperationRequest
    BuildArtifact:
      properties:
        image:
          description: Image name in Skaffold configuration.
          type: string
        tag:
          type: string
          description: >-
            Image tag to use. This will generally be the full path to an image,
            such as "gcr.io/my-project/busybox:1.2.3" or
            "gcr.io/my-project/busybox@sha256:abc123".
      description: Description of an a image to use during Skaffold rendering.
      id: BuildArtifact
      type: object
    AuditLogConfig:
      properties:
        logType:
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
    CloudRunMetadata:
      description: CloudRunMetadata contains information from a Cloud Run deployment.
      type: object
      properties:
        service:
          type: string
          readOnly: true
          description: >-
            Output only. The name of the Cloud Run Service that is associated
            with a `Rollout`. Format is
            projects/{project}/locations/{location}/services/{service}.
        serviceUrls:
          type: array
          items:
            type: string
          readOnly: true
          description: >-
            Output only. The Cloud Run Service urls that are associated with a
            `Rollout`.
        revision:
          type: string
          readOnly: true
          description: Output only. The Cloud Run Revision id associated with a `Rollout`.
      id: CloudRunMetadata
    AnthosCluster:
      description: Information specifying an Anthos Cluster.
      id: AnthosCluster
      type: object
      properties:
        membership:
          description: >-
            Membership of the GKE Hub-registered cluster to which to apply the
            Skaffold configuration. Format is
            `projects/{project}/locations/{location}/memberships/{membership_name}`.
          type: string
    ReleaseCondition:
      type: object
      id: ReleaseCondition
      description: ReleaseCondition contains all conditions relevant to a Release.
      properties:
        releaseReadyCondition:
          $ref: '#/components/schemas/ReleaseReadyCondition'
          description: Details around the Releases's overall status.
        skaffoldSupportedCondition:
          $ref: '#/components/schemas/SkaffoldSupportedCondition'
          description: Details around the support state of the release's skaffold version.
    RuntimeConfig:
      type: object
      id: RuntimeConfig
      properties:
        cloudRun:
          description: Cloud Run runtime configuration.
          $ref: '#/components/schemas/CloudRunConfig'
        kubernetes:
          $ref: '#/components/schemas/KubernetesConfig'
          description: Kubernetes runtime configuration.
      description: >-
        RuntimeConfig contains the runtime specific configurations for a
        deployment strategy.
    VerifyJobRun:
      type: object
      id: VerifyJobRun
      properties:
        eventLogPath:
          description: >-
            Output only. File path of the Skaffold event log relative to the
            artifact URI.
          type: string
          readOnly: true
        failureMessage:
          type: string
          description: >-
            Output only. Additional information about the verify failure, if
            available.
          readOnly: true
        failureCause:
          readOnly: true
          description: >-
            Output only. The reason the verify failed. This will always be
            unspecified while the verify is in progress or if it succeeded.
          enumDescriptions:
            - No reason for failure is specified.
            - >-
              Cloud Build is not available, either because it is not enabled or
              because Google Cloud Deploy has insufficient permissions. See
              [required
              permission](/deploy/docs/cloud-deploy-service-account#required_permissions).
            - >-
              The verify operation did not complete successfully; check Cloud
              Build logs.
            - The verify build did not complete within the alloted time.
            - No Skaffold verify configuration was found.
            - >-
              Cloud Build failed to fulfill Google Cloud Deploy's request. See
              failure_message for additional details.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - VERIFICATION_CONFIG_NOT_FOUND
            - CLOUD_BUILD_REQUEST_FAILED
          type: string
        artifactUri:
          type: string
          description: >-
            Output only. URI of a directory containing the verify artifacts.
            This contains the Skaffold event log.
          readOnly: true
        build:
          type: string
          description: >-
            Output only. The resource name of the Cloud Build `Build` object
            that is used to verify. Format is
            projects/{project}/locations/{location}/builds/{build}.
          readOnly: true
      description: VerifyJobRun contains information specific to a verify `JobRun`.
    CancelRolloutRequest:
      description: The request object used by `CancelRollout`.
      id: CancelRolloutRequest
      properties: {}
      type: object
    CreateChildRolloutJobRun:
      type: object
      id: CreateChildRolloutJobRun
      description: >-
        CreateChildRolloutJobRun contains information specific to a
        createChildRollout `JobRun`.
      properties:
        rolloutPhaseId:
          type: string
          readOnly: true
          description: >-
            Output only. The ID of the childRollout Phase initiated by this
            JobRun.
        rollout:
          description: >-
            Output only. Name of the `ChildRollout`. Format is
            projects/{project}/
            locations/{location}/deliveryPipelines/{deliveryPipeline}/
            releases/{release}/rollouts/a-z{0,62}.
          readOnly: true
          type: string
    Operation:
      id: Operation
      type: object
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        response:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
    RolloutNotificationEvent:
      properties:
        targetId:
          description: ID of the `Target` that the rollout is deployed to.
          type: string
        rollout:
          type: string
          description: The name of the `Rollout`.
        type:
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RENDER_STATUES_CHANGE
          description: Type of this notification, e.g. for a Pub/Sub failure.
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
          type: string
        releaseUid:
          description: Unique identifier of the `Release`.
          type: string
        message:
          description: Debug message for when a notification fails to send.
          type: string
        pipelineUid:
          type: string
          description: Unique identifier of the `DeliveryPipeline`.
      id: RolloutNotificationEvent
      type: object
      description: >-
        Payload proto for "clouddeploy.googleapis.com/rollout_notification"
        Platform Log event that describes the failure to send rollout status
        change Pub/Sub notification.
    CloudRunRenderMetadata:
      description: >-
        CloudRunRenderMetadata contains Cloud Run information associated with a
        `Release` render.
      id: CloudRunRenderMetadata
      type: object
      properties:
        service:
          readOnly: true
          type: string
          description: >-
            Output only. The name of the Cloud Run Service in the rendered
            manifest. Format is
            projects/{project}/locations/{location}/services/{service}.
    Stage:
      type: object
      id: Stage
      properties:
        profiles:
          items:
            type: string
          description: >-
            Skaffold profiles to use when rendering the manifest for this
            stage's `Target`.
          type: array
        targetId:
          description: >-
            The target_id to which this stage points. This field refers
            exclusively to the last segment of a target name. For example, this
            field would just be `my-target` (rather than
            `projects/project/locations/location/targets/my-target`). The
            location of the `Target` is inferred to be the same as the location
            of the `DeliveryPipeline` that contains this `Stage`.
          type: string
        strategy:
          $ref: '#/components/schemas/Strategy'
          description: Optional. The strategy to use for a `Rollout` to this stage.
        deployParameters:
          type: array
          description: Optional. The deploy parameters to use for the target in this stage.
          items:
            $ref: '#/components/schemas/DeployParameters'
      description: Stage specifies a location to which to deploy.
    ListLocationsResponse:
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          type: array
          description: >-
            A list of locations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Location'
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
      id: Empty
      type: object
    ApproveRolloutRequest:
      id: ApproveRolloutRequest
      type: object
      description: The request object used by `ApproveRollout`.
      properties:
        approved:
          description: Required. True = approve; false = reject
          type: boolean
    ListReleasesResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        releases:
          items:
            $ref: '#/components/schemas/Release'
          description: The `Release` objects.
          type: array
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
      description: The response object from `ListReleases`.
      id: ListReleasesResponse
      type: object
    PipelineCondition:
      properties:
        pipelineReadyCondition:
          $ref: '#/components/schemas/PipelineReadyCondition'
          description: Details around the Pipeline's overall status.
        targetsPresentCondition:
          $ref: '#/components/schemas/TargetsPresentCondition'
          description: Details around targets enumerated in the pipeline.
        targetsTypeCondition:
          description: >-
            Details on the whether the targets enumerated in the pipeline are of
            the same type.
          $ref: '#/components/schemas/TargetsTypeCondition'
      id: PipelineCondition
      description: >-
        PipelineCondition contains all conditions relevant to a Delivery
        Pipeline.
      type: object
    RetryJobRequest:
      type: object
      properties:
        jobId:
          description: Required. The job ID for the Job to retry.
          type: string
        phaseId:
          description: Required. The phase ID the Job to retry belongs to.
          type: string
      description: RetryJobRequest is the request object used by `RetryJob`.
      id: RetryJobRequest
    DeployJobRun:
      description: DeployJobRun contains information specific to a deploy `JobRun`.
      properties:
        failureMessage:
          description: >-
            Output only. Additional information about the deploy failure, if
            available.
          readOnly: true
          type: string
        metadata:
          $ref: '#/components/schemas/DeployJobRunMetadata'
          readOnly: true
          description: >-
            Output only. Metadata containing information about the deploy job
            run.
        artifact:
          readOnly: true
          description: Output only. The artifact of a deploy job run, if available.
          $ref: '#/components/schemas/DeployArtifact'
        build:
          description: >-
            Output only. The resource name of the Cloud Build `Build` object
            that is used to deploy. Format is
            projects/{project}/locations/{location}/builds/{build}.
          readOnly: true
          type: string
        failureCause:
          type: string
          description: >-
            Output only. The reason the deploy failed. This will always be
            unspecified while the deploy is in progress or if it succeeded.
          enumDescriptions:
            - No reason for failure is specified.
            - >-
              Cloud Build is not available, either because it is not enabled or
              because Google Cloud Deploy has insufficient permissions. See
              [Required
              permission](/deploy/docs/cloud-deploy-service-account#required_permissions).
            - >-
              The deploy operation did not complete successfully; check Cloud
              Build logs.
            - The deploy build did not complete within the alloted time.
            - >-
              There were missing resources in the runtime environment required
              for a canary deployment. Check the Cloud Build logs for more
              information.
            - >-
              Cloud Build failed to fulfill Google Cloud Deploy's request. See
              failure_message for additional details.
          readOnly: true
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - MISSING_RESOURCES_FOR_CANARY
            - CLOUD_BUILD_REQUEST_FAILED
      id: DeployJobRun
      type: object
    ExecutionConfig:
      id: ExecutionConfig
      type: object
      description: Configuration of the environment to use when calling Skaffold.
      properties:
        executionTimeout:
          type: string
          description: >-
            Optional. Execution timeout for a Cloud Build Execution. This must
            be between 10m and 24h in seconds format. If unspecified, a default
            timeout of 1h is used.
          format: google-duration
        defaultPool:
          $ref: '#/components/schemas/DefaultPool'
          description: Optional. Use default Cloud Build pool.
        usages:
          description: Required. Usages when this configuration should be applied.
          items:
            enumDescriptions:
              - Default value. This value is unused.
              - Use for rendering.
              - Use for deploying and deployment hooks.
              - Use for deployment verification.
            enum:
              - EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED
              - RENDER
              - DEPLOY
              - VERIFY
            type: string
          type: array
        artifactStorage:
          type: string
          description: >-
            Optional. Cloud Storage location in which to store execution
            outputs. This can either be a bucket ("gs://my-bucket") or a path
            within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default
            bucket located in the same region will be used.
        workerPool:
          description: >-
            Optional. The resource name of the `WorkerPool`, with the format
            `projects/{project}/locations/{location}/workerPools/{worker_pool}`.
            If this optional field is unspecified, the default Cloud Build pool
            will be used.
          type: string
        privatePool:
          $ref: '#/components/schemas/PrivatePool'
          description: Optional. Use private Cloud Build pool.
        serviceAccount:
          description: >-
            Optional. Google service account to use for execution. If
            unspecified, the project execution service account
            (-compute@developer.gserviceaccount.com) is used.
          type: string
    Config:
      properties:
        supportedVersions:
          type: array
          description: All supported versions of Skaffold.
          items:
            $ref: '#/components/schemas/SkaffoldVersion'
        name:
          type: string
          description: Name of the configuration.
        defaultSkaffoldVersion:
          type: string
          description: >-
            Default Skaffold version that is assigned when a Release is created
            without specifying a Skaffold version.
      id: Config
      type: object
      description: Service-wide configuration.
    CloudRunLocation:
      properties:
        location:
          type: string
          description: >-
            Required. The location for the Cloud Run Service. Format must be
            `projects/{project}/locations/{location}`.
      type: object
      id: CloudRunLocation
      description: Information specifying where to deploy a Cloud Run Service.
    ChildRolloutJobs:
      description: ChildRollouts job composition
      type: object
      properties:
        advanceRolloutJobs:
          type: array
          items:
            $ref: '#/components/schemas/Job'
          readOnly: true
          description: Output only. List of AdvanceChildRolloutJobs
        createRolloutJobs:
          items:
            $ref: '#/components/schemas/Job'
          type: array
          readOnly: true
          description: Output only. List of CreateChildRolloutJobs
      id: ChildRolloutJobs
    ListTargetsResponse:
      properties:
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        targets:
          items:
            $ref: '#/components/schemas/Target'
          description: The `Target` objects.
          type: array
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
      id: ListTargetsResponse
      description: The response object from `ListTargets`.
      type: object
    CanaryDeployment:
      id: CanaryDeployment
      type: object
      properties:
        percentages:
          type: array
          description: >-
            Required. The percentage based deployments that will occur as a part
            of a `Rollout`. List is expected in ascending order and each integer
            n is 0 <= n < 100.
          items:
            type: integer
            format: int32
        verify:
          type: boolean
          description: Whether to run verify tests after each percentage deployment.
      description: CanaryDeployment represents the canary deployment configuration
    DeliveryPipeline:
      type: object
      id: DeliveryPipeline
      description: >-
        A `DeliveryPipeline` resource in the Google Cloud Deploy API. A
        `DeliveryPipeline` defines a pipeline through which a Skaffold
        configuration can progress.
      properties:
        suspended:
          type: boolean
          description: >-
            When suspended, no new releases or rollouts can be created, but
            in-progress ones will complete.
        annotations:
          additionalProperties:
            type: string
          description: >-
            User annotations. These attributes can only be set and used by the
            user, and not by Google Cloud Deploy.
          type: object
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Most recent time at which the pipeline was updated.
        condition:
          $ref: '#/components/schemas/PipelineCondition'
          description: Output only. Information around the state of the Delivery Pipeline.
          readOnly: true
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Time at which the pipeline was created.
        uid:
          description: Output only. Unique identifier of the `DeliveryPipeline`.
          type: string
          readOnly: true
        description:
          type: string
          description: Description of the `DeliveryPipeline`. Max length is 255 characters.
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            Labels are attributes that can be set and used by both the user and
            by Google Cloud Deploy. Labels must meet the following constraints:
            * Keys and values can contain only lowercase letters, numeric
            characters, underscores, and dashes. * All characters must use UTF-8
            encoding, and international characters are allowed. * Keys must
            start with a lowercase letter or international character. * Each
            resource is limited to a maximum of 64 labels. Both keys and values
            are additionally constrained to be <= 128 bytes.
        name:
          description: >-
            Optional. Name of the `DeliveryPipeline`. Format is
            projects/{project}/
            locations/{location}/deliveryPipelines/a-z{0,62}.
          type: string
        etag:
          type: string
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding.
        serialPipeline:
          $ref: '#/components/schemas/SerialPipeline'
          description: >-
            SerialPipeline defines a sequential set of stages for a
            `DeliveryPipeline`.
    PipelineReadyCondition:
      type: object
      description: >-
        PipelineReadyCondition contains information around the status of the
        Pipeline.
      properties:
        updateTime:
          type: string
          description: Last time the condition was updated.
          format: google-datetime
        status:
          type: boolean
          description: >-
            True if the Pipeline is in a valid state. Otherwise at least one
            condition in `PipelineCondition` is in an invalid state. Iterate
            over those conditions and see which condition(s) has status = false
            to find out what is wrong with the Pipeline.
      id: PipelineReadyCondition
    AbandonReleaseResponse:
      id: AbandonReleaseResponse
      description: The response object for `AbandonRelease`.
      properties: {}
      type: object
    Target:
      properties:
        run:
          description: Information specifying a Cloud Run deployment target.
          $ref: '#/components/schemas/CloudRunLocation'
        updateTime:
          readOnly: true
          description: Output only. Most recent time at which the `Target` was updated.
          format: google-datetime
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            Optional. Labels are attributes that can be set and used by both the
            user and by Google Cloud Deploy. Labels must meet the following
            constraints: * Keys and values can contain only lowercase letters,
            numeric characters, underscores, and dashes. * All characters must
            use UTF-8 encoding, and international characters are allowed. * Keys
            must start with a lowercase letter or international character. *
            Each resource is limited to a maximum of 64 labels. Both keys and
            values are additionally constrained to be <= 128 bytes.
        annotations:
          additionalProperties:
            type: string
          description: >-
            Optional. User annotations. These attributes can only be set and
            used by the user, and not by Google Cloud Deploy. See
            https://google.aip.dev/128#annotations for more details such as
            format and size limitations.
          type: object
        executionConfigs:
          items:
            $ref: '#/components/schemas/ExecutionConfig'
          type: array
          description: >-
            Configurations for all execution that relates to this `Target`. Each
            `ExecutionEnvironmentUsage` value may only be used in a single
            configuration; using the same value multiple times is an error. When
            one or more configurations are specified, they must include the
            `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no
            configurations are specified, execution will use the default
            specified in `DefaultPool`.
        anthosCluster:
          description: Information specifying an Anthos Cluster.
          $ref: '#/components/schemas/AnthosCluster'
        deployParameters:
          description: Optional. The deploy parameters to use for this target.
          additionalProperties:
            type: string
          type: object
        targetId:
          type: string
          description: Output only. Resource id of the `Target`.
          readOnly: true
        gke:
          $ref: '#/components/schemas/GkeCluster'
          description: Information specifying a GKE Cluster.
        name:
          type: string
          description: >-
            Optional. Name of the `Target`. Format is
            projects/{project}/locations/{location}/targets/a-z{0,62}.
        createTime:
          format: google-datetime
          type: string
          description: Output only. Time at which the `Target` was created.
          readOnly: true
        requireApproval:
          description: Optional. Whether or not the `Target` requires approval.
          type: boolean
        uid:
          readOnly: true
          description: Output only. Unique identifier of the `Target`.
          type: string
        etag:
          type: string
          description: >-
            Optional. This checksum is computed by the server based on the value
            of other fields, and may be sent on update and delete requests to
            ensure the client has an up-to-date value before proceeding.
        description:
          type: string
          description: Optional. Description of the `Target`. Max length is 255 characters.
        multiTarget:
          description: Information specifying a multiTarget.
          $ref: '#/components/schemas/MultiTarget'
      id: Target
      description: >-
        A `Target` resource in the Google Cloud Deploy API. A `Target` defines a
        location to which a Skaffold configuration can be deployed.
      type: object
    JobRunNotificationEvent:
      id: JobRunNotificationEvent
      properties:
        type:
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RENDER_STATUES_CHANGE
          description: Type of this notification, e.g. for a Pub/Sub failure.
          type: string
          enumDescriptions:
            - Type is unspecified.
            - A Pub/Sub notification failed to be sent.
            - Resource state changed.
            - A process aborted.
            - >-
              Deprecated: This field is never used. Use release_render log type
              instead.
        pipelineUid:
          type: string
          description: Unique identifier of the `DeliveryPipeline`.
        rolloutUid:
          description: Unique identifier of the `Rollout`.
          type: string
        targetId:
          description: ID of the `Target`.
          type: string
        message:
          type: string
          description: Debug message for when a notification fails to send.
        jobRun:
          type: string
          description: The name of the `JobRun`.
        releaseUid:
          type: string
          description: Unique identifier of the `Release`.
      type: object
      description: >-
        Payload proto for "clouddeploy.googleapis.com/jobrun_notification"
        Platform Log event that describes the failure to send JobRun resource
        update Pub/Sub notification.
    SkaffoldSupportedCondition:
      description: >-
        SkaffoldSupportedCondition contains information about when support for
        the release's version of skaffold ends.
      type: object
      properties:
        status:
          type: boolean
          description: True if the version of skaffold used by this release is supported.
        skaffoldSupportState:
          enum:
            - SKAFFOLD_SUPPORT_STATE_UNSPECIFIED
            - SKAFFOLD_SUPPORT_STATE_SUPPORTED
            - SKAFFOLD_SUPPORT_STATE_MAINTENANCE_MODE
            - SKAFFOLD_SUPPORT_STATE_UNSUPPORTED
          enumDescriptions:
            - Default value. This value is unused.
            - This skaffold version is currently supported.
            - This skaffold version is in maintenance mode.
            - This skaffold version is no longer supported.
          type: string
          description: The skaffold support state for this release's version of skaffold.
        maintenanceModeTime:
          format: google-datetime
          type: string
          description: >-
            The time at which this release's version of skaffold will enter
            maintenance mode.
        supportExpirationTime:
          type: string
          description: >-
            The time at which this release's version of skaffold will no longer
            be supported.
          format: google-datetime
      id: SkaffoldSupportedCondition
    ApproveRolloutResponse:
      type: object
      description: The response object from `ApproveRollout`.
      properties: {}
      id: ApproveRolloutResponse
    DefaultPool:
      properties:
        artifactStorage:
          description: >-
            Optional. Cloud Storage location where execution outputs should be
            stored. This can either be a bucket ("gs://my-bucket") or a path
            within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default
            bucket located in the same region will be used.
          type: string
        serviceAccount:
          type: string
          description: >-
            Optional. Google service account to use for execution. If
            unspecified, the project execution service account
            (-compute@developer.gserviceaccount.com) will be used.
      description: Execution using the default Cloud Build pool.
      type: object
      id: DefaultPool
    TerminateJobRunRequest:
      id: TerminateJobRunRequest
      description: The request object used by `TerminateJobRun`.
      type: object
      properties: {}
    TargetsPresentCondition:
      id: TargetsPresentCondition
      description: >-
        TargetsPresentCondition contains information on any Targets defined in
        the Delivery Pipeline that do not actually exist.
      type: object
      properties:
        status:
          type: boolean
          description: True if there aren't any missing Targets.
        updateTime:
          description: Last time the condition was updated.
          type: string
          format: google-datetime
        missingTargets:
          description: >-
            The list of Target names that do not exist. For example,
            projects/{project_id}/locations/{location_name}/targets/{target_name}.
          type: array
          items:
            type: string
    ListRolloutsResponse:
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        rollouts:
          type: array
          description: The `Rollout` objects.
          items:
            $ref: '#/components/schemas/Rollout'
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
      description: ListRolloutsResponse is the response object reutrned by `ListRollouts`.
      type: object
      id: ListRolloutsResponse
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/config:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
    get:
      description: Gets the configuration for a location.
      operationId: clouddeploy.projects.locations.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations__config
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: clouddeploy.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: clouddeploy.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}:abandon:
    parameters: *ref_1
    post:
      description: Abandons a Release in the Delivery Pipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.abandon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbandonReleaseRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbandonReleaseResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Release.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases:
    parameters: *ref_1
    post:
      description: Creates a new Release in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: releaseId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: releases
      x-stackQL-verb: insert
    get:
      description: Lists Releases in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleasesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:cancel:
    parameters: *ref_1
    post:
      description: Cancels a Rollout in a given project and location.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRolloutRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelRolloutResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:approve:
    parameters: *ref_1
    post:
      description: Approves a Rollout.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.approve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveRolloutRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApproveRolloutResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Rollout.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rollout'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:retryJob:
    parameters: *ref_1
    post:
      description: Retries the specified Job in a Rollout.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.retryJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetryJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryJobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts:
    parameters: *ref_1
    post:
      description: Creates a new Rollout in a given project and location.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rollout'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: startingPhaseId
          schema:
            type: string
        - in: query
          name: rolloutId
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-verb: insert
    get:
      description: Lists Rollouts in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolloutsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:advance:
    parameters: *ref_1
    post:
      description: Advances a Rollout in a given project and location.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.advance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvanceRolloutRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvanceRolloutResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}:ignoreJob:
    parameters: *ref_1
    post:
      description: Ignores the specified Job in a Rollout.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.ignoreJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IgnoreJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IgnoreJobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
      x-stackQL-resource: rollouts
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns/{jobRunsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single JobRun.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRun'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
        - in: path
          name: jobRunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: job_runs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns:
    parameters: *ref_1
    get:
      description: Lists JobRuns in a given project and location.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobRunsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: job_runs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}/releases/{releasesId}/rollouts/{rolloutsId}/jobRuns/{jobRunsId}:terminate:
    parameters: *ref_1
    post:
      description: Terminates a Job Run in a given project and location.
      operationId: >-
        clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.terminate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateJobRunRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateJobRunResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
        - in: path
          name: jobRunsId
          required: true
          schema:
            type: string
      x-stackQL-resource: job_runs
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single DeliveryPipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPipeline'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: delivery_pipelines
      x-stackQL-verb: exec
    delete:
      description: Deletes a single DeliveryPipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines
      x-stackQL-verb: delete
    get:
      description: Gets details of a single DeliveryPipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryPipeline'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines:
    parameters: *ref_1
    post:
      description: Creates a new DeliveryPipeline in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryPipeline'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: deliveryPipelineId
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines
      x-stackQL-verb: insert
    get:
      description: Lists DeliveryPipelines in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeliveryPipelinesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: delivery_pipelines
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: clouddeploy.projects.locations.deliveryPipelines.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: clouddeploy.projects.locations.deliveryPipelines.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
      x-stackQL-resource: delivery_pipelines_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/deliveryPipelines/{deliveryPipelinesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: clouddeploy.projects.locations.deliveryPipelines.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: deliveryPipelinesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: delivery_pipelines_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: clouddeploy.projects.locations.targets.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: targets_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:
    parameters: *ref_1
    patch:
      description: Updates the parameters of a single Target.
      operationId: clouddeploy.projects.locations.targets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: targets
      x-stackQL-verb: exec
    get:
      description: Gets details of a single Target.
      operationId: clouddeploy.projects.locations.targets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: targets
      x-stackQL-verb: select
    delete:
      description: Deletes a single Target.
      operationId: clouddeploy.projects.locations.targets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: targets
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/targets:
    parameters: *ref_1
    get:
      description: Lists Targets in a given project and location.
      operationId: clouddeploy.projects.locations.targets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: targets
      x-stackQL-verb: select
    post:
      description: Creates a new Target in a given project and location.
      operationId: clouddeploy.projects.locations.targets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: targetId
          schema:
            type: string
      x-stackQL-resource: targets
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: clouddeploy.projects.locations.targets.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: targets_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/targets/{targetsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: clouddeploy.projects.locations.targets.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: targetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: targets_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: clouddeploy.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: clouddeploy.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: clouddeploy.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: clouddeploy.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
