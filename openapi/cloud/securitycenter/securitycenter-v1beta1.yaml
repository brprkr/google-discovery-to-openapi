openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Security Command Center API
  description: >-
    Security Command Center API provides access to temporal views of assets and
    findings within an organization.
  version: v1beta1
  x-discovery-doc-revision: '20230620'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/security-command-center
servers:
  - url: https://securitycenter.googleapis.com
components:
  schemas:
    AuditConfig:
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          type: array
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      id: AuditConfig
    GoogleCloudSecuritycenterV1Binding:
      type: object
      description: Represents a Kubernetes RoleBinding or ClusterRoleBinding.
      properties:
        subjects:
          description: >-
            Represents one or more subjects that are bound to the role. Not
            always available for PATCH requests.
          type: array
          items:
            $ref: '#/components/schemas/Subject'
        name:
          description: Name for the binding.
          type: string
        role:
          $ref: '#/components/schemas/Role'
          description: The Role or ClusterRole referenced by the binding.
        ns:
          type: string
          description: Namespace for the binding.
      id: GoogleCloudSecuritycenterV1Binding
    Source:
      type: object
      description: >-
        Security Command Center finding source. A finding source is an entity or
        a mechanism that can produce a finding. A source is like a container of
        findings that come from the same scanner, logger, monitor, etc.
      properties:
        description:
          type: string
          description: >-
            The description of the source (max of 1024 characters). Example:
            "Web Security Scanner is a web security scanner for common
            vulnerabilities in App Engine applications. It can automatically
            scan and detect four common vulnerabilities, including
            cross-site-scripting (XSS), Flash injection, mixed content (HTTP in
            HTTPS), and outdated/insecure libraries."
        name:
          type: string
          description: >-
            The relative resource name of this source. See:
            https://cloud.google.com/apis/design/resource_names#relative_resource_name
            Example: "organizations/{organization_id}/sources/{source_id}"
        displayName:
          type: string
          description: >-
            The source's display name. A source's display name must be unique
            amongst its siblings, for example, two sources with the same parent
            can't share the same display name. The display name must have a
            length between 1 and 64 characters (inclusive).
      id: Source
    ListAssetsResult:
      description: Result containing the Asset and its State.
      id: ListAssetsResult
      properties:
        state:
          enumDescriptions:
            - Unspecified state.
            - Request did not specify use of this field in the result.
            - Asset was added between the points in time.
            - Asset was removed between the points in time.
            - Asset was active at both point(s) in time.
          description: State of the asset.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - UNUSED
            - ADDED
            - REMOVED
            - ACTIVE
        asset:
          $ref: '#/components/schemas/Asset'
          description: Asset matching the search request.
      type: object
    ListSourcesResponse:
      properties:
        sources:
          items:
            $ref: '#/components/schemas/Source'
          description: Sources belonging to the requested parent.
          type: array
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results.
      type: object
      id: ListSourcesResponse
      description: Response message for listing sources.
    Contact:
      id: Contact
      description: The email address of a contact.
      type: object
      properties:
        email:
          description: An email address. For example, "`person123@company.com`".
          type: string
    EnvironmentVariable:
      properties:
        val:
          description: Environment variable value as a JSON encoded string.
          type: string
        name:
          description: Environment variable name as a JSON encoded string.
          type: string
      type: object
      id: EnvironmentVariable
      description: >-
        A name-value pair representing an environment variable used in an
        operating system process.
    GroupFindingsRequest:
      properties:
        readTime:
          format: google-datetime
          description: >-
            Time used as a reference point when filtering findings. The filter
            is limited to findings existing at the supplied time and their
            values are those at that specific time. Absence of this field will
            default to the API's version of NOW.
          type: string
        pageToken:
          type: string
          description: >-
            The value returned by the last `GroupFindingsResponse`; indicates
            that this is a continuation of a prior `GroupFindings` call, and
            that the system should return the next page of data.
        groupBy:
          type: string
          description: >-
            Required. Expression that defines what assets fields to use for
            grouping (including `state`). The string value should follow SQL
            syntax: comma separated list of fields. For example:
            "parent,resource_name". The following fields are supported: *
            resource_name * category * state * parent
        pageSize:
          format: int32
          description: >-
            The maximum number of results to return in a single response.
            Default is 10, minimum is 1, maximum is 1000.
          type: integer
        filter:
          type: string
          description: >-
            Expression that defines the filter to apply across findings. The
            expression is a list of one or more restrictions combined via
            logical operators `AND` and `OR`. Parentheses are not supported, and
            `OR` has higher precedence than `AND`. Restrictions have the form `
            ` and may have a `-` character in front of them to indicate
            negation. Examples include: * name * source_properties.a_property *
            security_marks.marks.marka The supported operators are: * `=` for
            all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`,
            meaning substring matching, for strings. The supported value types
            are: * string literals in quotes. * integer literals without quotes.
            * boolean literals `true` and `false` without quotes. For example,
            `source_properties.size = 100` is a valid filter string.
      id: GroupFindingsRequest
      type: object
      description: Request message for grouping by findings.
    Exfiltration:
      id: Exfiltration
      type: object
      description: >-
        Exfiltration represents a data exfiltration attempt from one or more
        sources to one or more targets. The `sources` attribute lists the
        sources of the exfiltrated data. The `targets` attribute lists the
        destinations the data was copied to.
      properties:
        sources:
          type: array
          description: >-
            If there are multiple sources, then the data is considered "joined"
            between them. For instance, BigQuery can join multiple tables, and
            each table would be considered a source.
          items:
            $ref: '#/components/schemas/ExfilResource'
        targets:
          type: array
          description: >-
            If there are multiple targets, each target would get a complete copy
            of the "joined" source data.
          items:
            $ref: '#/components/schemas/ExfilResource'
    SecurityMarks:
      properties:
        marks:
          additionalProperties:
            type: string
          description: >-
            Mutable user specified security marks belonging to the parent
            resource. Constraints are as follows: * Keys and values are treated
            as case insensitive * Keys must be between 1 - 256 characters
            (inclusive) * Keys must be letters, numbers, underscores, or dashes
            * Values have leading and trailing whitespace trimmed, remaining
            characters must be between 1 - 4096 characters (inclusive)
          type: object
        name:
          type: string
          description: >-
            The relative resource name of the SecurityMarks. See:
            https://cloud.google.com/apis/design/resource_names#relative_resource_name
            Examples:
            "organizations/{organization_id}/assets/{asset_id}/securityMarks"
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".
        canonicalName:
          description: >-
            The canonical name of the marks. Examples:
            "organizations/{organization_id}/assets/{asset_id}/securityMarks"
            "folders/{folder_id}/assets/{asset_id}/securityMarks"
            "projects/{project_number}/assets/{asset_id}/securityMarks"
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
            "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
            "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"
          type: string
      type: object
      description: >-
        User specified security marks that are attached to the parent Security
        Command Center resource. Security marks are scoped within a Security
        Command Center organization -- they can be modified and viewed by all
        users who have proper permissions on the organization.
      id: SecurityMarks
    Finding:
      properties:
        canonicalName:
          description: >-
            The canonical name of the finding. It's either
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}",
            "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or
            "projects/{project_number}/sources/{source_id}/findings/{finding_id}",
            depending on the closest CRM ancestor of the resource associated
            with the finding.
          type: string
        exfiltration:
          $ref: '#/components/schemas/Exfiltration'
          description: Represents exfiltrations associated with the finding.
        containers:
          type: array
          description: >-
            Containers associated with the finding. This field provides
            information for both Kubernetes and non-Kubernetes containers.
          items:
            $ref: '#/components/schemas/Container'
        indicator:
          description: >-
            Represents what's commonly known as an *indicator of compromise*
            (IoC) in computer forensics. This is an artifact observed on a
            network or in an operating system that, with high confidence,
            indicates a computer intrusion. For more information, see [Indicator
            of
            compromise](https://en.wikipedia.org/wiki/Indicator_of_compromise).
          $ref: '#/components/schemas/Indicator'
        muteUpdateTime:
          readOnly: true
          description: Output only. The most recent time this finding was muted or unmuted.
          type: string
          format: google-datetime
        name:
          type: string
          description: >-
            The [relative resource
            name](https://cloud.google.com/apis/design/resource_names#relative_resource_name)
            of the finding. Example:
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}",
            "folders/{folder_id}/sources/{source_id}/findings/{finding_id}",
            "projects/{project_id}/sources/{source_id}/findings/{finding_id}".
        externalUri:
          type: string
          description: >-
            The URI that, if available, points to a web page outside of Security
            Command Center where additional information about the finding can be
            found. This field is guaranteed to be either empty or a well formed
            URL.
        moduleName:
          description: >-
            Unique identifier of the module which generated the finding.
            Example:
            folders/598186756061/securityHealthAnalyticsSettings/customModules/56799441161885
          type: string
        files:
          type: array
          description: File associated with the finding.
          items:
            $ref: '#/components/schemas/File'
        eventTime:
          description: >-
            The time the finding was first detected. If an existing finding is
            updated, then this is the time the update occurred. For example, if
            the finding represents an open firewall, this property captures the
            time the detector believes the firewall became open. The accuracy is
            determined by the detector. If the finding is later resolved, then
            this time reflects when the finding was resolved. This must not be
            set to a value greater than the current timestamp.
          type: string
          format: google-datetime
        nextSteps:
          description: Steps to address the finding.
          type: string
        description:
          description: Contains more details about the finding.
          type: string
        kubernetes:
          description: Kubernetes resources associated with the finding.
          $ref: '#/components/schemas/Kubernetes'
        processes:
          items:
            $ref: '#/components/schemas/Process'
          type: array
          description: Represents operating system processes associated with the Finding.
        mute:
          enumDescriptions:
            - Unspecified.
            - Finding has been muted.
            - Finding has been unmuted.
            - Finding has never been muted/unmuted.
          description: >-
            Indicates the mute state of a finding (either muted, unmuted or
            undefined). Unlike other attributes of a finding, a finding provider
            shouldn't set the value of mute.
          enum:
            - MUTE_UNSPECIFIED
            - MUTED
            - UNMUTED
            - UNDEFINED
          type: string
        database:
          $ref: '#/components/schemas/Database'
          description: Database associated with the finding.
        severity:
          type: string
          description: >-
            The severity of the finding. This field is managed by the source
            that writes the finding.
          enum:
            - SEVERITY_UNSPECIFIED
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
          enumDescriptions:
            - >-
              This value is used for findings when a source doesn't write a
              severity value.
            - >-
              Vulnerability: A critical vulnerability is easily discoverable by
              an external actor, exploitable, and results in the direct ability
              to execute arbitrary code, exfiltrate data, and otherwise gain
              additional access and privileges to cloud resources and workloads.
              Examples include publicly accessible unprotected user data and
              public SSH access with weak or no passwords. Threat: Indicates a
              threat that is able to access, modify, or delete data or execute
              unauthorized code within existing resources.
            - >-
              Vulnerability: A high risk vulnerability can be easily discovered
              and exploited in combination with other vulnerabilities in order
              to gain direct access and the ability to execute arbitrary code,
              exfiltrate data, and otherwise gain additional access and
              privileges to cloud resources and workloads. An example is a
              database with weak or no passwords that is only accessible
              internally. This database could easily be compromised by an actor
              that had access to the internal network. Threat: Indicates a
              threat that is able to create new computational resources in an
              environment but not able to access data or execute code in
              existing resources.
            - >-
              Vulnerability: A medium risk vulnerability could be used by an
              actor to gain access to resources or privileges that enable them
              to eventually (through multiple steps or a complex exploit) gain
              access and the ability to execute arbitrary code or exfiltrate
              data. An example is a service account with access to more projects
              than it should have. If an actor gains access to the service
              account, they could potentially use that access to manipulate a
              project the service account was not intended to. Threat: Indicates
              a threat that is able to cause operational impact but may not
              access data or execute unauthorized code.
            - >-
              Vulnerability: A low risk vulnerability hampers a security
              organization's ability to detect vulnerabilities or active threats
              in their deployment, or prevents the root cause investigation of
              security issues. An example is monitoring and logs being disabled
              for resource configurations and access. Threat: Indicates a threat
              that has obtained minimal access to an environment but is not able
              to access data, execute code, or create resources.
        contacts:
          type: object
          description: >-
            Output only. Map containing the points of contact for the given
            finding. The key represents the type of contact, while the value
            contains a list of all the contacts that pertain. Please refer to:
            https://cloud.google.com/resource-manager/docs/managing-notification-contacts#notification-categories
            { "security": { "contacts": [ { "email": "person1@company.com" }, {
            "email": "person2@company.com" } ] } }
          additionalProperties:
            $ref: '#/components/schemas/ContactDetails'
          readOnly: true
        cloudDlpInspection:
          description: >-
            Cloud Data Loss Prevention (Cloud DLP) inspection results that are
            associated with the finding.
          $ref: '#/components/schemas/CloudDlpInspection'
        category:
          type: string
          description: >-
            The additional taxonomy group within findings from a given source.
            This field is immutable after creation time. Example:
            "XSS_FLASH_INJECTION"
        createTime:
          type: string
          format: google-datetime
          description: >-
            The time at which the finding was created in Security Command
            Center.
        access:
          description: >-
            Access details associated with the finding, such as more information
            on the caller, which method was accessed, and from where.
          $ref: '#/components/schemas/Access'
        securityMarks:
          readOnly: true
          description: >-
            Output only. User specified security marks. These marks are entirely
            managed by the user and come from the SecurityMarks resource that
            belongs to the finding.
          $ref: '#/components/schemas/SecurityMarks'
        parentDisplayName:
          type: string
          readOnly: true
          description: >-
            Output only. The human readable display name of the finding source
            such as "Event Threat Detection" or "Security Health Analytics".
        sourceProperties:
          additionalProperties:
            type: any
          type: object
          description: >-
            Source specific properties. These properties are managed by the
            source that writes the finding. The key names in the
            source_properties map must be between 1 and 255 characters, and must
            start with a letter and contain alphanumeric characters or
            underscores only.
        kernelRootkit:
          description: Signature of the kernel rootkit.
          $ref: '#/components/schemas/KernelRootkit'
        iamBindings:
          type: array
          description: Represents IAM bindings associated with the finding.
          items:
            $ref: '#/components/schemas/IamBinding'
        externalSystems:
          description: >-
            Output only. Third party SIEM/SOAR fields within SCC, contains
            external system information and external system finding fields.
          readOnly: true
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudSecuritycenterV1ExternalSystem'
        muteInitiator:
          description: >-
            Records additional information about the mute operation, for
            example, the [mute
            configuration](/security-command-center/docs/how-to-mute-findings)
            that muted the finding and the user who muted the finding.
          type: string
        findingClass:
          description: The class of the finding.
          enum:
            - FINDING_CLASS_UNSPECIFIED
            - THREAT
            - VULNERABILITY
            - MISCONFIGURATION
            - OBSERVATION
            - SCC_ERROR
          enumDescriptions:
            - Unspecified finding class.
            - Describes unwanted or malicious activity.
            - >-
              Describes a potential weakness in software that increases risk to
              Confidentiality & Integrity & Availability.
            - >-
              Describes a potential weakness in cloud resource/asset
              configuration that increases risk.
            - >-
              Describes a security observation that is for informational
              purposes.
            - Describes an error that prevents some SCC functionality.
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
          description: The state of the finding.
          enumDescriptions:
            - Unspecified state.
            - The finding requires attention and has not been addressed yet.
            - >-
              The finding has been fixed, triaged as a non-issue or otherwise
              addressed and is no longer active.
          type: string
        compliances:
          items:
            $ref: '#/components/schemas/Compliance'
          description: >-
            Contains compliance information for security standards associated to
            the finding.
          type: array
        vulnerability:
          $ref: '#/components/schemas/Vulnerability'
          description: >-
            Represents vulnerability-specific fields like CVE and CVSS scores.
            CVE stands for Common Vulnerabilities and Exposures
            (https://cve.mitre.org/about/)
        parent:
          type: string
          description: >-
            The relative resource name of the source the finding belongs to.
            See:
            https://cloud.google.com/apis/design/resource_names#relative_resource_name
            This field is immutable after creation time. For example:
            "organizations/{organization_id}/sources/{source_id}"
        resourceName:
          description: >-
            For findings on Google Cloud resources, the full resource name of
            the Google Cloud resource this finding is for. See:
            https://cloud.google.com/apis/design/resource_names#full_resource_name
            When the finding is for a non-Google Cloud resource, the
            resourceName can be a customer or partner defined string. This field
            is immutable after creation time.
          type: string
        cloudDlpDataProfile:
          description: Cloud DLP data profile that is associated with the finding.
          $ref: '#/components/schemas/CloudDlpDataProfile'
        connections:
          type: array
          items:
            $ref: '#/components/schemas/Connection'
          description: >-
            Contains information about the IP connection associated with the
            finding.
        mitreAttack:
          $ref: '#/components/schemas/MitreAttack'
          description: >-
            MITRE ATT&CK tactics and techniques related to this finding. See:
            https://attack.mitre.org
      id: Finding
      type: object
      description: >-
        Security Command Center finding. A finding is a record of assessment
        data like security, risk, health, or privacy, that is ingested into
        Security Command Center for presentation, notification, analysis, policy
        testing, and enforcement. For example, a cross-site scripting (XSS)
        vulnerability in an App Engine application is a finding.
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
      id: TestIamPermissionsRequest
    GetPolicyOptions:
      description: Encapsulates settings provided to GetIamPolicy.
      id: GetPolicyOptions
      properties:
        requestedPolicyVersion:
          description: >-
            Optional. The maximum policy version that will be used to format the
            policy. Valid values are 0, 1, and 3. Requests specifying an invalid
            value will be rejected. Requests for policies with any conditional
            role bindings must specify version 3. Policies with no conditional
            role bindings may specify any valid value or leave the field unset.
            The policy in the response might use the policy version that you
            specified, or it might use a lower policy version. For example, if
            you specify version 3, but the policy has no conditional role
            bindings, the response uses version 1. To learn which resources
            support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          format: int32
          type: integer
      type: object
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
        updateMask:
          type: string
          format: google-fieldmask
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
      description: Request message for `SetIamPolicy` method.
      type: object
    Reference:
      id: Reference
      description: Additional Links
      properties:
        source:
          description: Source of the reference e.g. NVD
          type: string
        uri:
          description: >-
            Uri for the mentioned source e.g.
            https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527.
          type: string
      type: object
    Policy:
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
        etag:
          format: byte
          type: string
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
        auditConfigs:
          type: array
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: '#/components/schemas/AuditConfig'
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
        user:mike@example.com - group:admins@example.com - domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For
        a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      id: Policy
      type: object
    Container:
      properties:
        imageId:
          type: string
          description: >-
            Optional container image ID, if provided by the container runtime.
            Uniquely identifies the container image launched using a container
            image digest.
        name:
          description: Name of the container.
          type: string
        uri:
          description: >-
            Container image URI provided when configuring a pod or container.
            This string can identify a container image version using mutable
            tags.
          type: string
        labels:
          description: Container labels, as provided by the container runtime.
          type: array
          items:
            $ref: '#/components/schemas/Label'
      description: Container associated with the finding.
      id: Container
      type: object
    Node:
      id: Node
      description: Kubernetes nodes associated with the finding.
      type: object
      properties:
        name:
          type: string
          description: >-
            [Full resource name](https://google.aip.dev/122#full-resource-names)
            of the Compute Engine VM running the cluster node.
    Indicator:
      id: Indicator
      properties:
        ipAddresses:
          description: The list of IP addresses that are associated with the finding.
          items:
            type: string
          type: array
        signatures:
          items:
            $ref: '#/components/schemas/ProcessSignature'
          type: array
          description: >-
            The list of matched signatures indicating that the given process is
            present in the environment.
        uris:
          type: array
          items:
            type: string
          description: The list of URIs associated to the Findings.
        domains:
          description: List of domains associated to the Finding.
          items:
            type: string
          type: array
      description: >-
        Represents what's commonly known as an _indicator of compromise_ (IoC)
        in computer forensics. This is an artifact observed on a network or in
        an operating system that, with high confidence, indicates a computer
        intrusion. For more information, see [Indicator of
        compromise](https://en.wikipedia.org/wiki/Indicator_of_compromise).
      type: object
    GoogleCloudSecuritycenterV1ExternalSystem:
      properties:
        assignees:
          items:
            type: string
          type: array
          description: References primary/secondary etc assignees in the external system.
        externalSystemUpdateTime:
          type: string
          format: google-datetime
          description: >-
            The most recent time when the corresponding finding's ticket/tracker
            was updated in the external system.
        name:
          description: >-
            Full resource name of the external system, for example:
            "organizations/1234/sources/5678/findings/123456/externalSystems/jira",
            "folders/1234/sources/5678/findings/123456/externalSystems/jira",
            "projects/1234/sources/5678/findings/123456/externalSystems/jira"
          type: string
        externalUid:
          description: >-
            Identifier that's used to track the given finding in the external
            system.
          type: string
        status:
          type: string
          description: >-
            Most recent status of the corresponding finding's ticket/tracker in
            the external system.
      type: object
      id: GoogleCloudSecuritycenterV1ExternalSystem
      description: Representation of third party SIEM/SOAR fields within SCC.
    Expr:
      type: object
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      id: Expr
      properties:
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
        title:
          type: string
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
        description:
          type: string
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
    KernelRootkit:
      properties:
        unexpectedCodeModification:
          type: boolean
          description: True if unexpected modifications of kernel code memory are present.
        name:
          description: Rootkit name, when available.
          type: string
        unexpectedProcessesInRunqueue:
          type: boolean
          description: >-
            True if unexpected processes in the scheduler run queue are present.
            Such processes are in the run queue, but not in the process task
            list.
        unexpectedReadOnlyDataModification:
          description: >-
            True if unexpected modifications of kernel read-only data memory are
            present.
          type: boolean
        unexpectedKprobeHandler:
          description: >-
            True if `kprobe` points are present with callbacks pointing to
            regions that are not in the expected kernel or module code range.
          type: boolean
        unexpectedKernelCodePages:
          type: boolean
          description: >-
            True if kernel code pages that are not in the expected kernel or
            module code regions are present.
        unexpectedInterruptHandler:
          type: boolean
          description: >-
            True if interrupt handlers that are are not in the expected kernel
            or module code regions are present.
        unexpectedSystemCallHandler:
          type: boolean
          description: >-
            True if system call handlers that are are not in the expected kernel
            or module code regions are present.
        unexpectedFtraceHandler:
          type: boolean
          description: >-
            True if `ftrace` points are present with callbacks pointing to
            regions that are not in the expected kernel or module code range.
      type: object
      description: Kernel mode rootkit signatures.
      id: KernelRootkit
    Binding:
      type: object
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
        members:
          items:
            type: string
          type: array
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding.
        role:
          type: string
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`.
    GoogleCloudSecuritycenterV1p1beta1Folder:
      description: >-
        Message that contains the resource name and display name of a folder
        resource.
      type: object
      id: GoogleCloudSecuritycenterV1p1beta1Folder
      properties:
        resourceFolderDisplayName:
          type: string
          description: The user defined display name for this folder.
        resourceFolder:
          type: string
          description: >-
            Full resource name of this folder. See:
            https://cloud.google.com/apis/design/resource_names#full_resource_name
    Asset:
      description: >-
        Security Command Center representation of a Google Cloud resource. The
        Asset is a Security Command Center resource that captures information
        about a single Google Cloud resource. All modifications to an Asset are
        only within the context of Security Command Center and don't affect the
        referenced Google Cloud resource.
      properties:
        createTime:
          description: The time at which the asset was created in Security Command Center.
          format: google-datetime
          type: string
        securityMarks:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1beta1SecurityMarks'
          description: >-
            User specified security marks. These marks are entirely managed by
            the user and come from the SecurityMarks resource that belongs to
            the asset.
        resourceProperties:
          description: >-
            Resource managed properties. These properties are managed and
            defined by the Google Cloud resource and cannot be modified by the
            user.
          type: object
          additionalProperties:
            type: any
        securityCenterProperties:
          description: >-
            Security Command Center managed properties. These properties are
            managed by Security Command Center and cannot be modified by the
            user.
          $ref: '#/components/schemas/SecurityCenterProperties'
        updateTime:
          format: google-datetime
          description: >-
            The time at which the asset was last updated, added, or deleted in
            Security Command Center.
          type: string
        name:
          type: string
          description: >-
            The relative resource name of this asset. See:
            https://cloud.google.com/apis/design/resource_names#relative_resource_name
            Example: "organizations/{organization_id}/assets/{asset_id}".
      type: object
      id: Asset
    ListOperationsResponse:
      id: ListOperationsResponse
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          type: array
          description: >-
            A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Operation'
      description: The response message for Operations.ListOperations.
    Label:
      type: object
      properties:
        value:
          description: Value that corresponds to the label's name.
          type: string
        name:
          description: Name of the label.
          type: string
      id: Label
      description: >-
        Represents a generic name-value label. A label has separate name and
        value fields to support filtering with the `contains()` function. For
        more information, see [Filtering on array-type
        fields](https://cloud.google.com/security-command-center/docs/how-to-api-list-findings#array-contains-filtering).
    GoogleCloudSecuritycenterV1EffectiveSecurityHealthAnalyticsCustomModule:
      properties:
        displayName:
          description: >-
            Output only. The display name for the custom module. The name must
            be between 1 and 128 characters, start with a lowercase letter, and
            contain alphanumeric characters or underscores only.
          readOnly: true
          type: string
        enablementState:
          description: >-
            Output only. The effective state of enablement for the module at the
            given level of the hierarchy.
          enumDescriptions:
            - Unspecified enablement state.
            - The module is enabled at the given level.
            - The module is disabled at the given level.
          enum:
            - ENABLEMENT_STATE_UNSPECIFIED
            - ENABLED
            - DISABLED
          readOnly: true
          type: string
        name:
          type: string
          readOnly: true
          description: >-
            Output only. The resource name of the custom module. Its format is
            "organizations/{organization}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}",
            or
            "folders/{folder}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}",
            or
            "projects/{project}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}"
        customConfig:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1CustomConfig'
          description: Output only. The user-specified configuration for the module.
      id: GoogleCloudSecuritycenterV1EffectiveSecurityHealthAnalyticsCustomModule
      type: object
      description: >-
        An EffectiveSecurityHealthAnalyticsCustomModule is the representation of
        a Security Health Analytics custom module at a specified level of the
        resource hierarchy: organization, folder, or project. If a custom module
        is inherited from a parent organization or folder, the value of the
        `enablementState` property in
        EffectiveSecurityHealthAnalyticsCustomModule is set to the value that is
        effective in the parent, instead of `INHERITED`. For example, if the
        module is enabled in a parent organization or folder, the effective
        enablement_state for the module in all child folders or projects is also
        `enabled`. EffectiveSecurityHealthAnalyticsCustomModule is read-only.
    GoogleCloudSecuritycenterV1BulkMuteFindingsResponse:
      id: GoogleCloudSecuritycenterV1BulkMuteFindingsResponse
      description: The response to a BulkMute request. Contains the LRO information.
      type: object
      properties: {}
    GoogleCloudSecuritycenterV1NotificationMessage:
      type: object
      properties:
        resource:
          description: The Cloud resource tied to this notification's Finding.
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1Resource'
        notificationConfigName:
          type: string
          description: Name of the notification config that generated current notification.
        finding:
          description: >-
            If it's a Finding based notification config, this field will be
            populated.
          $ref: '#/components/schemas/Finding'
      description: Cloud SCC's Notification
      id: GoogleCloudSecuritycenterV1NotificationMessage
    Operation:
      id: Operation
      type: object
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      properties:
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
    GoogleCloudSecuritycenterV1beta1Finding:
      id: GoogleCloudSecuritycenterV1beta1Finding
      type: object
      description: >-
        Security Command Center finding. A finding is a record of assessment
        data (security, risk, health or privacy) ingested into Security Command
        Center for presentation, notification, analysis, policy testing, and
        enforcement. For example, an XSS vulnerability in an App Engine
        application is a finding.
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
          enumDescriptions:
            - Unspecified state.
            - The finding requires attention and has not been addressed yet.
            - >-
              The finding has been fixed, triaged as a non-issue or otherwise
              addressed and is no longer active.
          type: string
          description: The state of the finding.
        category:
          description: >-
            The additional taxonomy group within findings from a given source.
            This field is immutable after creation time. Example:
            "XSS_FLASH_INJECTION"
          type: string
        sourceProperties:
          additionalProperties:
            type: any
          description: >-
            Source specific properties. These properties are managed by the
            source that writes the finding. The key names in the
            source_properties map must be between 1 and 255 characters, and must
            start with a letter and contain alphanumeric characters or
            underscores only.
          type: object
        eventTime:
          format: google-datetime
          description: >-
            The time at which the event took place, or when an update to the
            finding occurred. For example, if the finding represents an open
            firewall it would capture the time the detector believes the
            firewall became open. The accuracy is determined by the detector. If
            the finding were to be resolved afterward, this time would reflect
            when the finding was resolved.
          type: string
        externalUri:
          type: string
          description: >-
            The URI that, if available, points to a web page outside of Security
            Command Center where additional information about the finding can be
            found. This field is guaranteed to be either empty or a well formed
            URL.
        securityMarks:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1beta1SecurityMarks'
          readOnly: true
          description: >-
            Output only. User specified security marks. These marks are entirely
            managed by the user and come from the SecurityMarks resource that
            belongs to the finding.
        createTime:
          format: google-datetime
          type: string
          description: >-
            The time at which the finding was created in Security Command
            Center.
        resourceName:
          description: >-
            For findings on Google Cloud resources, the full resource name of
            the Google Cloud resource this finding is for. See:
            https://cloud.google.com/apis/design/resource_names#full_resource_name
            When the finding is for a non-Google Cloud resource, the
            resourceName can be a customer or partner defined string. This field
            is immutable after creation time.
          type: string
        parent:
          description: >-
            Immutable. The relative resource name of the source the finding
            belongs to. See:
            https://cloud.google.com/apis/design/resource_names#relative_resource_name
            This field is immutable after creation time. For example:
            "organizations/{organization_id}/sources/{source_id}"
          type: string
        name:
          type: string
          description: >-
            The relative resource name of this finding. See:
            https://cloud.google.com/apis/design/resource_names#relative_resource_name
            Example:
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
    Process:
      description: Represents an operating system process.
      type: object
      properties:
        envVariablesTruncated:
          type: boolean
          description: True if `env_variables` is incomplete.
        argumentsTruncated:
          description: True if `args` is incomplete.
          type: boolean
        name:
          type: string
          description: >-
            The process name, as displayed in utilities like `top` and `ps`.
            This name can be accessed through `/proc/[pid]/comm` and changed
            with `prctl(PR_SET_NAME)`.
        binary:
          description: File information for the process executable.
          $ref: '#/components/schemas/File'
        libraries:
          type: array
          description: File information for libraries loaded by the process.
          items:
            $ref: '#/components/schemas/File'
        pid:
          type: string
          description: The process ID.
          format: int64
        script:
          $ref: '#/components/schemas/File'
          description: >-
            When the process represents the invocation of a script, `binary`
            provides information about the interpreter, while `script` provides
            information about the script file provided to the interpreter.
        envVariables:
          description: Process environment variables.
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
        parentPid:
          format: int64
          description: The parent process ID.
          type: string
        args:
          type: array
          items:
            type: string
          description: Process arguments as JSON encoded strings.
      id: Process
    Compliance:
      type: object
      id: Compliance
      properties:
        standard:
          description: >-
            Industry-wide compliance standards or benchmarks, such as CIS, PCI,
            and OWASP.
          type: string
        ids:
          description: Policies within the standard or benchmark, for example, A.12.4.1
          type: array
          items:
            type: string
        version:
          type: string
          description: Version of the standard or benchmark, for example, 1.1
      description: >-
        Contains compliance information about a security standard indicating
        unmet recommendations.
    GoogleCloudSecuritycenterV1Resource:
      type: object
      id: GoogleCloudSecuritycenterV1Resource
      description: Information related to the Google Cloud resource.
      properties:
        name:
          type: string
          description: >-
            The full resource name of the resource. See:
            https://cloud.google.com/apis/design/resource_names#full_resource_name
        project:
          description: The full resource name of project that the resource belongs to.
          type: string
        displayName:
          type: string
          description: The human readable name of the resource.
        folders:
          description: >-
            Output only. Contains a Folder message for each folder in the assets
            ancestry. The first folder is the deepest nested folder, and the
            last folder is the folder directly under the Organization.
          type: array
          items:
            $ref: '#/components/schemas/Folder'
          readOnly: true
        parentDisplayName:
          description: The human readable name of resource's parent.
          type: string
        parent:
          description: The full resource name of resource's parent.
          type: string
        projectDisplayName:
          description: The project ID that the resource belongs to.
          type: string
        type:
          type: string
          description: The full resource type of the resource.
    Status:
      type: object
      properties:
        details:
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
    ListAssetsResponse:
      description: Response message for listing assets.
      properties:
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results.
          type: string
        readTime:
          type: string
          description: Time used for executing the list request.
          format: google-datetime
        listAssetsResults:
          type: array
          description: Assets matching the list request.
          items:
            $ref: '#/components/schemas/ListAssetsResult'
        totalSize:
          type: integer
          format: int32
          description: The total number of assets matching the query.
      type: object
      id: ListAssetsResponse
    GoogleCloudSecuritycenterV1p1beta1Resource:
      description: Information related to the Google Cloud resource.
      type: object
      properties:
        name:
          type: string
          description: >-
            The full resource name of the resource. See:
            https://cloud.google.com/apis/design/resource_names#full_resource_name
        project:
          type: string
          description: The full resource name of project that the resource belongs to.
        parent:
          description: The full resource name of resource's parent.
          type: string
        parentDisplayName:
          type: string
          description: The human readable name of resource's parent.
        projectDisplayName:
          description: The project id that the resource belongs to.
          type: string
        folders:
          readOnly: true
          type: array
          description: >-
            Output only. Contains a Folder message for each folder in the assets
            ancestry. The first folder is the deepest nested folder, and the
            last folder is the folder directly under the Organization.
          items:
            $ref: '#/components/schemas/GoogleCloudSecuritycenterV1p1beta1Folder'
      id: GoogleCloudSecuritycenterV1p1beta1Resource
    RunAssetDiscoveryRequest:
      properties: {}
      description: Request message for running asset discovery for an organization.
      type: object
      id: RunAssetDiscoveryRequest
    File:
      type: object
      id: File
      description: >-
        File information about the related binary/library used by an executable,
        or the script used by a script interpreter
      properties:
        sha256:
          type: string
          description: >-
            SHA256 hash of the first hashed_size bytes of the file encoded as a
            hex string. If hashed_size == size, sha256 represents the SHA256
            hash of the entire file.
        hashedSize:
          type: string
          format: int64
          description: >-
            The length in bytes of the file prefix that was hashed. If
            hashed_size == size, any hashes reported represent the entire file.
        contents:
          type: string
          description: Prefix of the file contents as a JSON-encoded string.
        size:
          description: Size of the file in bytes.
          type: string
          format: int64
        path:
          type: string
          description: Absolute path of the file as a JSON encoded string.
        partiallyHashed:
          type: boolean
          description: True when the hash covers only a prefix of the file.
    GoogleCloudSecuritycenterV1p1beta1Finding:
      type: object
      properties:
        name:
          description: >-
            The relative resource name of this finding. See:
            https://cloud.google.com/apis/design/resource_names#relative_resource_name
            Example:
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
          type: string
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
          enumDescriptions:
            - Unspecified state.
            - The finding requires attention and has not been addressed yet.
            - >-
              The finding has been fixed, triaged as a non-issue or otherwise
              addressed and is no longer active.
          description: The state of the finding.
        securityMarks:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1p1beta1SecurityMarks'
          description: >-
            Output only. User specified security marks. These marks are entirely
            managed by the user and come from the SecurityMarks resource that
            belongs to the finding.
          readOnly: true
        externalUri:
          type: string
          description: >-
            The URI that, if available, points to a web page outside of Security
            Command Center where additional information about the finding can be
            found. This field is guaranteed to be either empty or a well formed
            URL.
        resourceName:
          type: string
          description: >-
            For findings on Google Cloud resources, the full resource name of
            the Google Cloud resource this finding is for. See:
            https://cloud.google.com/apis/design/resource_names#full_resource_name
            When the finding is for a non-Google Cloud resource, the
            resourceName can be a customer or partner defined string. This field
            is immutable after creation time.
        createTime:
          format: google-datetime
          type: string
          description: >-
            The time at which the finding was created in Security Command
            Center.
        parent:
          description: >-
            The relative resource name of the source the finding belongs to.
            See:
            https://cloud.google.com/apis/design/resource_names#relative_resource_name
            This field is immutable after creation time. For example:
            "organizations/{organization_id}/sources/{source_id}"
          type: string
        eventTime:
          description: >-
            The time at which the event took place, or when an update to the
            finding occurred. For example, if the finding represents an open
            firewall it would capture the time the detector believes the
            firewall became open. The accuracy is determined by the detector. If
            the finding were to be resolved afterward, this time would reflect
            when the finding was resolved. Must not be set to a value greater
            than the current timestamp.
          format: google-datetime
          type: string
        sourceProperties:
          description: >-
            Source specific properties. These properties are managed by the
            source that writes the finding. The key names in the
            source_properties map must be between 1 and 255 characters, and must
            start with a letter and contain alphanumeric characters or
            underscores only.
          type: object
          additionalProperties:
            type: any
        severity:
          enumDescriptions:
            - No severity specified. The default value.
            - Critical severity.
            - High severity.
            - Medium severity.
            - Low severity.
          enum:
            - SEVERITY_UNSPECIFIED
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
          type: string
          description: >-
            The severity of the finding. This field is managed by the source
            that writes the finding.
        category:
          description: >-
            The additional taxonomy group within findings from a given source.
            This field is immutable after creation time. Example:
            "XSS_FLASH_INJECTION"
          type: string
        canonicalName:
          type: string
          description: >-
            The canonical name of the finding. It's either
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}",
            "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or
            "projects/{project_number}/sources/{source_id}/findings/{finding_id}",
            depending on the closest CRM ancestor of the resource associated
            with the finding.
      description: >-
        Security Command Center finding. A finding is a record of assessment
        data (security, risk, health or privacy) ingested into Security Command
        Center for presentation, notification, analysis, policy testing, and
        enforcement. For example, an XSS vulnerability in an App Engine
        application is a finding.
      id: GoogleCloudSecuritycenterV1p1beta1Finding
    Subject:
      type: object
      properties:
        name:
          type: string
          description: Name for the subject.
        kind:
          enum:
            - AUTH_TYPE_UNSPECIFIED
            - USER
            - SERVICEACCOUNT
            - GROUP
          description: Authentication type for the subject.
          type: string
          enumDescriptions:
            - Authentication is not specified.
            - User with valid certificate.
            - >-
              Users managed by Kubernetes API with credentials stored as
              secrets.
            - Collection of users.
        ns:
          type: string
          description: Namespace for the subject.
      id: Subject
      description: Represents a Kubernetes subject.
    SecurityCenterProperties:
      type: object
      id: SecurityCenterProperties
      properties:
        resourceProject:
          type: string
          description: >-
            The full resource name of the project the resource belongs to. See:
            https://cloud.google.com/apis/design/resource_names#full_resource_name
        resourceType:
          description: >-
            The type of the Google Cloud resource. Examples include:
            APPLICATION, PROJECT, and ORGANIZATION. This is a case insensitive
            field defined by Security Command Center and/or the producer of the
            resource and is immutable after create time.
          type: string
        resourceOwners:
          items:
            type: string
          type: array
          description: Owners of the Google Cloud resource.
        resourceName:
          description: >-
            Immutable. The full resource name of the Google Cloud resource this
            asset represents. This field is immutable after create time. See:
            https://cloud.google.com/apis/design/resource_names#full_resource_name
          type: string
        resourceParent:
          description: >-
            The full resource name of the immediate parent of the resource. See:
            https://cloud.google.com/apis/design/resource_names#full_resource_name
          type: string
      description: >-
        Security Command Center managed properties. These properties are managed
        by Security Command Center and cannot be modified by the user.
    GroupFindingsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results.
        groupByResults:
          description: >-
            Group results. There exists an element for each existing unique
            combination of property/values. The element contains a count for the
            number of times those specific property/values appear.
          type: array
          items:
            $ref: '#/components/schemas/GroupResult'
        readTime:
          format: google-datetime
          type: string
          description: Time used for executing the groupBy request.
      type: object
      id: GroupFindingsResponse
      description: Response message for group by findings.
    GoogleCloudSecuritycenterV1p1beta1SecurityMarks:
      description: >-
        User specified security marks that are attached to the parent Security
        Command Center resource. Security marks are scoped within a Security
        Command Center organization -- they can be modified and viewed by all
        users who have proper permissions on the organization.
      id: GoogleCloudSecuritycenterV1p1beta1SecurityMarks
      properties:
        canonicalName:
          description: >-
            The canonical name of the marks. Examples:
            "organizations/{organization_id}/assets/{asset_id}/securityMarks"
            "folders/{folder_id}/assets/{asset_id}/securityMarks"
            "projects/{project_number}/assets/{asset_id}/securityMarks"
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
            "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks"
            "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"
          type: string
        name:
          type: string
          description: >-
            The relative resource name of the SecurityMarks. See:
            https://cloud.google.com/apis/design/resource_names#relative_resource_name
            Examples:
            "organizations/{organization_id}/assets/{asset_id}/securityMarks"
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".
        marks:
          type: object
          additionalProperties:
            type: string
          description: >-
            Mutable user specified security marks belonging to the parent
            resource. Constraints are as follows: * Keys and values are treated
            as case insensitive * Keys must be between 1 - 256 characters
            (inclusive) * Keys must be letters, numbers, underscores, or dashes
            * Values have leading and trailing whitespace trimmed, remaining
            characters must be between 1 - 4096 characters (inclusive)
      type: object
    GoogleCloudSecuritycenterV1p1beta1NotificationMessage:
      description: Security Command Center's Notification
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1p1beta1Resource'
          description: The Cloud resource tied to the notification.
        notificationConfigName:
          type: string
          description: Name of the notification config that generated current notification.
        finding:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1p1beta1Finding'
          description: >-
            If it's a Finding based notification config, this field will be
            populated.
      id: GoogleCloudSecuritycenterV1p1beta1NotificationMessage
    GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule:
      description: >-
        Represents an instance of a Security Health Analytics custom module,
        including its full module name, display name, enablement state, and last
        updated time. You can create a custom module at the organization,
        folder, or project level. Custom modules that you create at the
        organization or folder level are inherited by the child folders and
        projects.
      id: GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule
      properties:
        customConfig:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1CustomConfig'
          description: The user specified custom configuration for the module.
        ancestorModule:
          type: string
          description: >-
            Output only. If empty, indicates that the custom module was created
            in the organization, folder, or project in which you are viewing the
            custom module. Otherwise, `ancestor_module` specifies the
            organization or folder from which the custom module is inherited.
          readOnly: true
        displayName:
          description: >-
            The display name of the Security Health Analytics custom module.
            This display name becomes the finding category for all findings that
            are returned by this custom module. The display name must be between
            1 and 128 characters, start with a lowercase letter, and contain
            alphanumeric characters or underscores only.
          type: string
        lastEditor:
          readOnly: true
          type: string
          description: Output only. The editor that last updated the custom module.
        enablementState:
          description: The enablement state of the custom module.
          enum:
            - ENABLEMENT_STATE_UNSPECIFIED
            - ENABLED
            - DISABLED
            - INHERITED
          enumDescriptions:
            - Unspecified enablement state.
            - The module is enabled at the given CRM resource.
            - The module is disabled at the given CRM resource.
            - >-
              State is inherited from an ancestor module. The module will either
              be effectively ENABLED or DISABLED based on its closest
              non-inherited ancestor module in the CRM hierarchy.
          type: string
        updateTime:
          format: google-datetime
          description: Output only. The time at which the custom module was last updated.
          type: string
          readOnly: true
        name:
          description: >-
            Immutable. The resource name of the custom module. Its format is
            "organizations/{organization}/securityHealthAnalyticsSettings/customModules/{customModule}",
            or
            "folders/{folder}/securityHealthAnalyticsSettings/customModules/{customModule}",
            or
            "projects/{project}/securityHealthAnalyticsSettings/customModules/{customModule}"
            The id {customModule} is server-generated and is not user settable.
            It will be a numeric id containing 1-20 digits.
          type: string
      type: object
    SetFindingStateRequest:
      type: object
      properties:
        startTime:
          description: Required. The time at which the updated state takes effect.
          type: string
          format: google-datetime
        state:
          description: Required. The desired State of the finding.
          enumDescriptions:
            - Unspecified state.
            - The finding requires attention and has not been addressed yet.
            - >-
              The finding has been fixed, triaged as a non-issue or otherwise
              addressed and is no longer active.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - INACTIVE
      description: Request message for updating a finding's state.
      id: SetFindingStateRequest
    GoogleCloudSecuritycenterV1CustomOutputSpec:
      type: object
      id: GoogleCloudSecuritycenterV1CustomOutputSpec
      properties:
        properties:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudSecuritycenterV1Property'
          description: A list of custom output properties to add to the finding.
      description: >-
        A set of optional name-value pairs that define custom source properties
        to return with each finding that is generated by the custom module. The
        custom source properties that are defined here are included in the
        finding JSON under `sourceProperties`.
    GoogleCloudSecuritycenterV1BigQueryExport:
      properties:
        createTime:
          format: google-datetime
          description: >-
            Output only. The time at which the BigQuery export was created. This
            field is set by the server and will be ignored if provided on export
            on creation.
          type: string
          readOnly: true
        name:
          type: string
          description: >-
            The relative resource name of this export. See:
            https://cloud.google.com/apis/design/resource_names#relative_resource_name.
            Example format:
            "organizations/{organization_id}/bigQueryExports/{export_id}"
            Example format: "folders/{folder_id}/bigQueryExports/{export_id}"
            Example format: "projects/{project_id}/bigQueryExports/{export_id}"
            This field is provided in responses, and is ignored when provided in
            create requests.
        dataset:
          type: string
          description: >-
            The dataset to write findings' updates to. Its format is
            "projects/[project_id]/datasets/[bigquery_dataset_id]". BigQuery
            Dataset unique ID must contain only letters (a-z, A-Z), numbers
            (0-9), or underscores (_).
        updateTime:
          type: string
          description: >-
            Output only. The most recent time at which the BigQuery export was
            updated. This field is set by the server and will be ignored if
            provided on export creation or update.
          format: google-datetime
          readOnly: true
        mostRecentEditor:
          description: >-
            Output only. Email address of the user who last edited the BigQuery
            export. This field is set by the server and will be ignored if
            provided on export creation or update.
          readOnly: true
          type: string
        description:
          description: The description of the export (max of 1024 characters).
          type: string
        filter:
          description: >-
            Expression that defines the filter to apply across create/update
            events of findings. The expression is a list of zero or more
            restrictions combined via logical operators `AND` and `OR`.
            Parentheses are supported, and `OR` has higher precedence than
            `AND`. Restrictions have the form ` ` and may have a `-` character
            in front of them to indicate negation. The fields map to those
            defined in the corresponding resource. The supported operators are:
            * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer
            values. * `:`, meaning substring matching, for strings. The
            supported value types are: * string literals in quotes. * integer
            literals without quotes. * boolean literals `true` and `false`
            without quotes.
          type: string
        principal:
          readOnly: true
          type: string
          description: >-
            Output only. The service account that needs permission to create
            table and upload data to the BigQuery dataset.
      id: GoogleCloudSecuritycenterV1BigQueryExport
      description: Configures how to deliver Findings to BigQuery Instance.
      type: object
    GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse:
      description: Response of asset discovery run
      id: GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse
      type: object
      properties:
        duration:
          type: string
          format: google-duration
          description: The duration between asset discovery run start and end
        state:
          enumDescriptions:
            - Asset discovery run state was unspecified.
            - Asset discovery run completed successfully.
            - >-
              Asset discovery run was cancelled with tasks still pending, as
              another run for the same organization was started with a higher
              priority.
            - Asset discovery run was killed and terminated.
          type: string
          description: The state of an asset discovery run.
          enum:
            - STATE_UNSPECIFIED
            - COMPLETED
            - SUPERSEDED
            - TERMINATED
    GroupAssetsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results.
        groupByResults:
          items:
            $ref: '#/components/schemas/GroupResult'
          type: array
          description: >-
            Group results. There exists an element for each existing unique
            combination of property/values. The element contains a count for the
            number of times those specific property/values appear.
        readTime:
          format: google-datetime
          type: string
          description: Time used for executing the groupBy request.
      type: object
      description: Response message for grouping by assets.
      id: GroupAssetsResponse
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    GetIamPolicyRequest:
      properties:
        options:
          $ref: '#/components/schemas/GetPolicyOptions'
          description: >-
            OPTIONAL: A `GetPolicyOptions` object for specifying options to
            `GetIamPolicy`.
      id: GetIamPolicyRequest
      type: object
      description: Request message for `GetIamPolicy` method.
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
      id: Empty
      type: object
    GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse:
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - COMPLETED
            - SUPERSEDED
            - TERMINATED
          type: string
          enumDescriptions:
            - Asset discovery run state was unspecified.
            - Asset discovery run completed successfully.
            - >-
              Asset discovery run was cancelled with tasks still pending, as
              another run for the same organization was started with a higher
              priority.
            - Asset discovery run was killed and terminated.
          description: The state of an asset discovery run.
        duration:
          description: The duration between asset discovery run start and end
          format: google-duration
          type: string
      type: object
      description: Response of asset discovery run
      id: GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse
    ProcessSignature:
      properties:
        memoryHashSignature:
          description: Signature indicating that a binary family was matched.
          $ref: '#/components/schemas/MemoryHashSignature'
        yaraRuleSignature:
          $ref: '#/components/schemas/YaraRuleSignature'
          description: Signature indicating that a YARA rule was matched.
      id: ProcessSignature
      description: Indicates what signature matched this process.
      type: object
    ExfilResource:
      type: object
      description: Resource where data was exfiltrated from or exfiltrated to.
      id: ExfilResource
      properties:
        name:
          type: string
          description: >-
            The resource's [full resource
            name](https://cloud.google.com/apis/design/resource_names#full_resource_name).
        components:
          items:
            type: string
          type: array
          description: >-
            Subcomponents of the asset that was exfiltrated, like URIs used
            during exfiltration, table names, databases, and filenames. For
            example, multiple tables might have been exfiltrated from the same
            Cloud SQL instance, or multiple files might have been exfiltrated
            from the same Cloud Storage bucket.
    CloudDlpDataProfile:
      properties:
        parentType:
          enum:
            - PARENT_TYPE_UNSPECIFIED
            - ORGANIZATION
            - PROJECT
          type: string
          enumDescriptions:
            - Unspecified parent type.
            - Organization-level configurations.
            - Project-level configurations.
          description: >-
            The resource hierarchy level at which the data profile was
            generated.
        dataProfile:
          description: >-
            Name of the data profile, for example,
            `projects/123/locations/europe/tableProfiles/8383929`.
          type: string
      type: object
      description: >-
        The [data profile](https://cloud.google.com/dlp/docs/data-profiles)
        associated with the finding.
      id: CloudDlpDataProfile
    Folder:
      description: >-
        Message that contains the resource name and display name of a folder
        resource.
      id: Folder
      properties:
        resourceFolder:
          type: string
          description: >-
            Full resource name of this folder. See:
            https://cloud.google.com/apis/design/resource_names#full_resource_name
        resourceFolderDisplayName:
          type: string
          description: The user defined display name for this folder.
      type: object
    Vulnerability:
      type: object
      properties:
        cve:
          $ref: '#/components/schemas/Cve'
          description: >-
            CVE stands for Common Vulnerabilities and Exposures
            (https://cve.mitre.org/about/)
      id: Vulnerability
      description: Refers to common vulnerability fields e.g. cve, cvss, cwe etc.
    Pod:
      type: object
      description: A Kubernetes Pod.
      id: Pod
      properties:
        ns:
          description: Kubernetes Pod namespace.
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
          description: >-
            Pod labels. For Kubernetes containers, these are applied to the
            container.
        containers:
          description: Pod containers associated with this finding, if any.
          items:
            $ref: '#/components/schemas/Container'
          type: array
        name:
          type: string
          description: Kubernetes Pod name.
    GoogleCloudSecuritycenterV1Property:
      id: GoogleCloudSecuritycenterV1Property
      type: object
      description: An individual name-value pair that defines a custom source property.
      properties:
        valueExpression:
          $ref: '#/components/schemas/Expr'
          description: >-
            The CEL expression for the custom output. A resource property can be
            specified to return the value of the property or a text string
            enclosed in quotation marks.
        name:
          description: Name of the property for the custom output.
          type: string
    Role:
      properties:
        name:
          type: string
          description: Role name.
        ns:
          description: Role namespace.
          type: string
        kind:
          type: string
          enumDescriptions:
            - Role type is not specified.
            - Kubernetes Role.
            - Kubernetes ClusterRole.
          enum:
            - KIND_UNSPECIFIED
            - ROLE
            - CLUSTER_ROLE
          description: Role type.
      id: Role
      description: Kubernetes Role or ClusterRole.
      type: object
    ContactDetails:
      id: ContactDetails
      description: Details about specific contacts
      properties:
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: A list of contacts
      type: object
    GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse:
      description: Response of asset discovery run
      type: object
      properties:
        state:
          enumDescriptions:
            - Asset discovery run state was unspecified.
            - Asset discovery run completed successfully.
            - >-
              Asset discovery run was cancelled with tasks still pending, as
              another run for the same organization was started with a higher
              priority.
            - Asset discovery run was killed and terminated.
          enum:
            - STATE_UNSPECIFIED
            - COMPLETED
            - SUPERSEDED
            - TERMINATED
          type: string
          description: The state of an asset discovery run.
        duration:
          format: google-duration
          description: The duration between asset discovery run start and end
          type: string
      id: GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse
    Cvssv3:
      properties:
        attackComplexity:
          enum:
            - ATTACK_COMPLEXITY_UNSPECIFIED
            - ATTACK_COMPLEXITY_LOW
            - ATTACK_COMPLEXITY_HIGH
          enumDescriptions:
            - Invalid value.
            - >-
              Specialized access conditions or extenuating circumstances do not
              exist. An attacker can expect repeatable success when attacking
              the vulnerable component.
            - >-
              A successful attack depends on conditions beyond the attacker's
              control. That is, a successful attack cannot be accomplished at
              will, but requires the attacker to invest in some measurable
              amount of effort in preparation or execution against the
              vulnerable component before a successful attack can be expected.
          description: >-
            This metric describes the conditions beyond the attacker's control
            that must exist in order to exploit the vulnerability.
          type: string
        integrityImpact:
          description: >-
            This metric measures the impact to integrity of a successfully
            exploited vulnerability.
          type: string
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
        confidentialityImpact:
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          description: >-
            This metric measures the impact to the confidentiality of the
            information resources managed by a software component due to a
            successfully exploited vulnerability.
          type: string
        baseScore:
          description: The base score is a function of the base metric scores.
          format: double
          type: number
        scope:
          type: string
          enum:
            - SCOPE_UNSPECIFIED
            - SCOPE_UNCHANGED
            - SCOPE_CHANGED
          enumDescriptions:
            - Invalid value.
            - >-
              An exploited vulnerability can only affect resources managed by
              the same security authority.
            - >-
              An exploited vulnerability can affect resources beyond the
              security scope managed by the security authority of the vulnerable
              component.
          description: >-
            The Scope metric captures whether a vulnerability in one vulnerable
            component impacts resources in components beyond its security scope.
        userInteraction:
          enum:
            - USER_INTERACTION_UNSPECIFIED
            - USER_INTERACTION_NONE
            - USER_INTERACTION_REQUIRED
          type: string
          enumDescriptions:
            - Invalid value.
            - >-
              The vulnerable system can be exploited without interaction from
              any user.
            - >-
              Successful exploitation of this vulnerability requires a user to
              take some action before the vulnerability can be exploited.
          description: >-
            This metric captures the requirement for a human user, other than
            the attacker, to participate in the successful compromise of the
            vulnerable component.
        privilegesRequired:
          type: string
          description: >-
            This metric describes the level of privileges an attacker must
            possess before successfully exploiting the vulnerability.
          enumDescriptions:
            - Invalid value.
            - >-
              The attacker is unauthorized prior to attack, and therefore does
              not require any access to settings or files of the vulnerable
              system to carry out an attack.
            - >-
              The attacker requires privileges that provide basic user
              capabilities that could normally affect only settings and files
              owned by a user. Alternatively, an attacker with Low privileges
              has the ability to access only non-sensitive resources.
            - >-
              The attacker requires privileges that provide significant (e.g.,
              administrative) control over the vulnerable component allowing
              access to component-wide settings and files.
          enum:
            - PRIVILEGES_REQUIRED_UNSPECIFIED
            - PRIVILEGES_REQUIRED_NONE
            - PRIVILEGES_REQUIRED_LOW
            - PRIVILEGES_REQUIRED_HIGH
        availabilityImpact:
          enumDescriptions:
            - Invalid value.
            - High impact.
            - Low impact.
            - No impact.
          description: >-
            This metric measures the impact to the availability of the impacted
            component resulting from a successfully exploited vulnerability.
          enum:
            - IMPACT_UNSPECIFIED
            - IMPACT_HIGH
            - IMPACT_LOW
            - IMPACT_NONE
          type: string
        attackVector:
          enum:
            - ATTACK_VECTOR_UNSPECIFIED
            - ATTACK_VECTOR_NETWORK
            - ATTACK_VECTOR_ADJACENT
            - ATTACK_VECTOR_LOCAL
            - ATTACK_VECTOR_PHYSICAL
          enumDescriptions:
            - Invalid value.
            - >-
              The vulnerable component is bound to the network stack and the set
              of possible attackers extends beyond the other options listed
              below, up to and including the entire Internet.
            - >-
              The vulnerable component is bound to the network stack, but the
              attack is limited at the protocol level to a logically adjacent
              topology.
            - >-
              The vulnerable component is not bound to the network stack and the
              attacker's path is via read/write/execute capabilities.
            - >-
              The attack requires the attacker to physically touch or manipulate
              the vulnerable component.
          type: string
          description: >-
            Base Metrics Represents the intrinsic characteristics of a
            vulnerability that are constant over time and across user
            environments. This metric reflects the context by which
            vulnerability exploitation is possible.
      description: Common Vulnerability Scoring System version 3.
      id: Cvssv3
      type: object
    AuditLogConfig:
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      id: AuditLogConfig
      properties:
        logType:
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          description: The log type that this config enables.
          type: string
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
      type: object
    Detection:
      properties:
        binary:
          type: string
          description: >-
            The name of the binary associated with the memory hash signature
            detection.
        percentPagesMatched:
          format: double
          description: >-
            The percentage of memory page hashes in the signature that were
            matched.
          type: number
      description: Memory hash detection contributing to the binary family match.
      id: Detection
      type: object
    GoogleCloudSecuritycenterV1ResourceSelector:
      type: object
      id: GoogleCloudSecuritycenterV1ResourceSelector
      description: Resource for selecting resource type.
      properties:
        resourceTypes:
          description: The resource types to run the detector on.
          type: array
          items:
            type: string
    Connection:
      type: object
      properties:
        sourceIp:
          type: string
          description: Source IP address.
        protocol:
          description: IANA Internet Protocol Number such as TCP(6) and UDP(17).
          type: string
          enum:
            - PROTOCOL_UNSPECIFIED
            - ICMP
            - TCP
            - UDP
            - GRE
            - ESP
          enumDescriptions:
            - Unspecified protocol (not HOPOPT).
            - Internet Control Message Protocol.
            - Transmission Control Protocol.
            - User Datagram Protocol.
            - Generic Routing Encapsulation.
            - Encap Security Payload.
        destinationPort:
          description: >-
            Destination port. Not present for sockets that are listening and not
            connected.
          type: integer
          format: int32
        sourcePort:
          description: Source port.
          type: integer
          format: int32
        destinationIp:
          type: string
          description: >-
            Destination IP address. Not present for sockets that are listening
            and not connected.
      id: Connection
      description: >-
        Contains information about the IP connection associated with the
        finding.
    Access:
      type: object
      id: Access
      properties:
        userAgentFamily:
          type: string
          description: >-
            Type of user agent associated with the finding. For example, an
            operating system shell or an embedded or standalone application.
        callerIpGeo:
          $ref: '#/components/schemas/Geolocation'
          description: >-
            The caller IP's geolocation, which identifies where the call came
            from.
        serviceAccountKeyName:
          description: >-
            The name of the service account key that was used to create or
            exchange credentials when authenticating the service account that
            made the request. This is a scheme-less URI full resource name. For
            example:
            "//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}". 
          type: string
        serviceName:
          description: >-
            This is the API service that the service account made a call to,
            e.g. "iam.googleapis.com"
          type: string
        callerIp:
          type: string
          description: Caller's IP address, such as "1.1.1.1".
        methodName:
          type: string
          description: The method that the service account called, e.g. "SetIamPolicy".
        principalSubject:
          description: >-
            A string that represents the principal_subject that is associated
            with the identity. Unlike `principal_email`, `principal_subject`
            supports principals that aren't associated with email addresses,
            such as third party principals. For most identities, the format is
            `principal://iam.googleapis.com/{identity pool
            name}/subject/{subject}`. Some GKE identities, such as GKE_WORKLOAD,
            FREEFORM, and GKE_HUB_WORKLOAD, still use the legacy format
            `serviceAccount:{identity pool name}[{subject}]`.
          type: string
        userAgent:
          type: string
          description: The caller's user agent string associated with the finding.
        userName:
          type: string
          description: >-
            A string that represents a username. The username provided depends
            on the type of the finding and is likely not an IAM principal. For
            example, this can be a system username if the finding is related to
            a virtual machine, or it can be an application login username.
        principalEmail:
          description: >-
            Associated email, such as "foo@google.com". The email address of the
            authenticated user or a service account acting on behalf of a third
            party principal making the request. For third party identity
            callers, the `principal_subject` field is populated instead of this
            field. For privacy reasons, the principal email address is sometimes
            redacted. For more information, see [Caller identities in audit
            logs](https://cloud.google.com/logging/docs/audit#user-id).
          type: string
        serviceAccountDelegationInfo:
          description: >-
            The identity delegation history of an authenticated service account
            that made the request. The `serviceAccountDelegationInfo[]` object
            contains information about the real authorities that try to access
            Google Cloud resources by delegating on a service account. When
            multiple authorities are present, they are guaranteed to be sorted
            based on the original ordering of the identity delegation events.
          items:
            $ref: '#/components/schemas/ServiceAccountDelegationInfo'
          type: array
      description: Represents an access event.
    ServiceAccountDelegationInfo:
      type: object
      description: Identity delegation history of an authenticated service account.
      properties:
        principalSubject:
          description: >-
            A string representing the principal_subject associated with the
            identity. As compared to `principal_email`, supports principals that
            aren't associated with email addresses, such as third party
            principals. For most identities, the format will be
            `principal://iam.googleapis.com/{identity pool
            name}/subjects/{subject}` except for some GKE identities
            (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD) that are still in the
            legacy format `serviceAccount:{identity pool name}[{subject}]`
          type: string
        principalEmail:
          type: string
          description: The email address of a Google account.
      id: ServiceAccountDelegationInfo
    Geolocation:
      id: Geolocation
      properties:
        regionCode:
          type: string
          description: A CLDR.
      description: Represents a geographical location for a given access.
      type: object
    GoogleCloudSecuritycenterV1beta1SecurityMarks:
      id: GoogleCloudSecuritycenterV1beta1SecurityMarks
      properties:
        marks:
          description: >-
            Mutable user specified security marks belonging to the parent
            resource. Constraints are as follows: * Keys and values are treated
            as case insensitive * Keys must be between 1 - 256 characters
            (inclusive) * Keys must be letters, numbers, underscores, or dashes
            * Values have leading and trailing whitespace trimmed, remaining
            characters must be between 1 - 4096 characters (inclusive)
          type: object
          additionalProperties:
            type: string
        name:
          type: string
          description: >-
            The relative resource name of the SecurityMarks. See:
            https://cloud.google.com/apis/design/resource_names#relative_resource_name
            Examples:
            "organizations/{organization_id}/assets/{asset_id}/securityMarks"
            "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".
      description: >-
        User specified security marks that are attached to the parent Security
        Command Center resource. Security marks are scoped within a Security
        Command Center organization -- they can be modified and viewed by all
        users who have proper permissions on the organization.
      type: object
    GroupAssetsRequest:
      type: object
      properties:
        pageToken:
          type: string
          description: >-
            The value returned by the last `GroupAssetsResponse`; indicates that
            this is a continuation of a prior `GroupAssets` call, and that the
            system should return the next page of data.
        readTime:
          type: string
          description: >-
            Time used as a reference point when filtering assets. The filter is
            limited to assets existing at the supplied time and their values are
            those at that specific time. Absence of this field will default to
            the API's version of NOW.
          format: google-datetime
        groupBy:
          description: >-
            Required. Expression that defines what assets fields to use for
            grouping. The string value should follow SQL syntax: comma separated
            list of fields. For example:
            "security_center_properties.resource_project,security_center_properties.project".
            The following fields are supported when compare_duration is not set:
            * security_center_properties.resource_project *
            security_center_properties.resource_type *
            security_center_properties.resource_parent The following fields are
            supported when compare_duration is set: *
            security_center_properties.resource_type
          type: string
        compareDuration:
          description: >-
            When compare_duration is set, the Asset's "state" property is
            updated to indicate whether the asset was added, removed, or
            remained present during the compare_duration period of time that
            precedes the read_time. This is the time between (read_time -
            compare_duration) and read_time. The state value is derived based on
            the presence of the asset at the two points in time. Intermediate
            state changes between the two times don't affect the result. For
            example, the results aren't affected if the asset is removed and
            re-created again. Possible "state" values when compare_duration is
            specified: * "ADDED": indicates that the asset was not present
            before compare_duration, but present at reference_time. * "REMOVED":
            indicates that the asset was present at the start of
            compare_duration, but not present at reference_time. * "ACTIVE":
            indicates that the asset was present at both the start and the end
            of the time period defined by compare_duration and reference_time.
            This field is ignored if `state` is not a field in `group_by`.
          type: string
          format: google-duration
        pageSize:
          format: int32
          type: integer
          description: >-
            The maximum number of results to return in a single response.
            Default is 10, minimum is 1, maximum is 1000.
        filter:
          description: >-
            Expression that defines the filter to apply across assets. The
            expression is a list of zero or more restrictions combined via
            logical operators `AND` and `OR`. Parentheses are not supported, and
            `OR` has higher precedence than `AND`. Restrictions have the form `
            ` and may have a `-` character in front of them to indicate
            negation. The fields map to those defined in the Asset resource.
            Examples include: * name * security_center_properties.resource_name
            * resource_properties.a_property * security_marks.marks.marka The
            supported operators are: * `=` for all value types. * `>`, `<`,
            `>=`, `<=` for integer values. * `:`, meaning substring matching,
            for strings. The supported value types are: * string literals in
            quotes. * integer literals without quotes. * boolean literals `true`
            and `false` without quotes. For example, `resource_properties.size =
            100` is a valid filter string.
          type: string
      description: Request message for grouping by assets.
      id: GroupAssetsRequest
    Cve:
      description: >-
        CVE stands for Common Vulnerabilities and Exposures. More information:
        https://cve.mitre.org
      properties:
        id:
          description: The unique identifier for the vulnerability. e.g. CVE-2021-34527
          type: string
        references:
          type: array
          description: >-
            Additional information about the CVE. e.g.
            https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527
          items:
            $ref: '#/components/schemas/Reference'
        upstreamFixAvailable:
          type: boolean
          description: Whether upstream fix is available for the CVE.
        cvssv3:
          $ref: '#/components/schemas/Cvssv3'
          description: >-
            Describe Common Vulnerability Scoring System specified at
            https://www.first.org/cvss/v3.1/specification-document
      id: Cve
      type: object
    YaraRuleSignature:
      properties:
        yaraRule:
          description: The name of the YARA rule.
          type: string
      type: object
      id: YaraRuleSignature
      description: A signature corresponding to a YARA rule.
    Database:
      description: >-
        Represents database access information, such as queries. A database may
        be a sub-resource of an instance (as in the case of Cloud SQL instances
        or Cloud Spanner instances), or the database instance itself. Some
        database resources might not have the [full resource
        name](https://google.aip.dev/122#full-resource-names) populated because
        these resource types, such as Cloud SQL databases, are not yet supported
        by Cloud Asset Inventory. In these cases only the display name is
        provided. Some database resources may not have the [full resource
        name](https://google.aip.dev/122#full-resource-names) populated because
        these resource types are not yet supported by Cloud Asset Inventory
        (e.g. Cloud SQL databases). In these cases only the display name will be
        provided.
      type: object
      properties:
        query:
          description: The SQL statement that is associated with the database access.
          type: string
        name:
          type: string
          description: >-
            The [full resource
            name](https://google.aip.dev/122#full-resource-names) of the
            database that the user connected to, if it is supported by Cloud
            Asset Inventory.
        userName:
          type: string
          description: >-
            The username used to connect to the database. The username might not
            be an IAM principal and does not have a set format.
        grantees:
          items:
            type: string
          type: array
          description: >-
            The target usernames, roles, or groups of an SQL privilege grant,
            which is not an IAM policy change.
        displayName:
          type: string
          description: The human-readable name of the database that the user connected to.
      id: Database
    GoogleCloudSecuritycenterV1CustomConfig:
      properties:
        recommendation:
          description: >-
            An explanation of the recommended steps that security teams can take
            to resolve the detected issue. This explanation is returned with
            each finding generated by this module in the `nextSteps` property of
            the finding JSON.
          type: string
        description:
          type: string
          description: >-
            Text that describes the vulnerability or misconfiguration that the
            custom module detects. This explanation is returned with each
            finding instance to help investigators understand the detected
            issue. The text must be enclosed in quotation marks.
        customOutput:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1CustomOutputSpec'
          description: Custom output properties.
        predicate:
          description: >-
            The CEL expression to evaluate to produce findings. When the
            expression evaluates to true against a resource, a finding is
            generated.
          $ref: '#/components/schemas/Expr'
        resourceSelector:
          $ref: '#/components/schemas/GoogleCloudSecuritycenterV1ResourceSelector'
          description: >-
            The resource types that the custom module operates on. Each custom
            module can specify up to 5 resource types.
        severity:
          enum:
            - SEVERITY_UNSPECIFIED
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
          type: string
          enumDescriptions:
            - Unspecified severity.
            - Critical severity.
            - High severity.
            - Medium severity.
            - Low severity.
          description: The severity to assign to findings generated by the module.
      id: GoogleCloudSecuritycenterV1CustomConfig
      description: >-
        Defines the properties in a custom module configuration for Security
        Health Analytics. Use the custom module configuration to create custom
        detectors that generate custom findings for resources that you specify.
      type: object
    MitreAttack:
      properties:
        version:
          type: string
          description: The MITRE ATT&CK version referenced by the above fields. E.g. "8".
        primaryTactic:
          type: string
          enumDescriptions:
            - Unspecified value.
            - TA0043
            - TA0042
            - TA0001
            - TA0002
            - TA0003
            - TA0004
            - TA0005
            - TA0006
            - TA0007
            - TA0008
            - TA0009
            - TA0011
            - TA0010
            - TA0040
          description: >-
            The MITRE ATT&CK tactic most closely represented by this finding, if
            any.
          enum:
            - TACTIC_UNSPECIFIED
            - RECONNAISSANCE
            - RESOURCE_DEVELOPMENT
            - INITIAL_ACCESS
            - EXECUTION
            - PERSISTENCE
            - PRIVILEGE_ESCALATION
            - DEFENSE_EVASION
            - CREDENTIAL_ACCESS
            - DISCOVERY
            - LATERAL_MOVEMENT
            - COLLECTION
            - COMMAND_AND_CONTROL
            - EXFILTRATION
            - IMPACT
        additionalTactics:
          type: array
          description: Additional MITRE ATT&CK tactics related to this finding, if any.
          items:
            enum:
              - TACTIC_UNSPECIFIED
              - RECONNAISSANCE
              - RESOURCE_DEVELOPMENT
              - INITIAL_ACCESS
              - EXECUTION
              - PERSISTENCE
              - PRIVILEGE_ESCALATION
              - DEFENSE_EVASION
              - CREDENTIAL_ACCESS
              - DISCOVERY
              - LATERAL_MOVEMENT
              - COLLECTION
              - COMMAND_AND_CONTROL
              - EXFILTRATION
              - IMPACT
            type: string
            enumDescriptions:
              - Unspecified value.
              - TA0043
              - TA0042
              - TA0001
              - TA0002
              - TA0003
              - TA0004
              - TA0005
              - TA0006
              - TA0007
              - TA0008
              - TA0009
              - TA0011
              - TA0010
              - TA0040
        primaryTechniques:
          type: array
          items:
            enum:
              - TECHNIQUE_UNSPECIFIED
              - ACTIVE_SCANNING
              - SCANNING_IP_BLOCKS
              - INGRESS_TOOL_TRANSFER
              - NATIVE_API
              - SHARED_MODULES
              - COMMAND_AND_SCRIPTING_INTERPRETER
              - UNIX_SHELL
              - RESOURCE_HIJACKING
              - PROXY
              - EXTERNAL_PROXY
              - MULTI_HOP_PROXY
              - DYNAMIC_RESOLUTION
              - UNSECURED_CREDENTIALS
              - VALID_ACCOUNTS
              - LOCAL_ACCOUNTS
              - CLOUD_ACCOUNTS
              - NETWORK_DENIAL_OF_SERVICE
              - PERMISSION_GROUPS_DISCOVERY
              - CLOUD_GROUPS
              - EXFILTRATION_OVER_WEB_SERVICE
              - EXFILTRATION_TO_CLOUD_STORAGE
              - ACCOUNT_MANIPULATION
              - SSH_AUTHORIZED_KEYS
              - CREATE_OR_MODIFY_SYSTEM_PROCESS
              - STEAL_WEB_SESSION_COOKIE
              - MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE
              - EXPLOIT_PUBLIC_FACING_APPLICATION
              - MODIFY_AUTHENTICATION_PROCESS
              - DATA_DESTRUCTION
              - DOMAIN_POLICY_MODIFICATION
              - IMPAIR_DEFENSES
              - NETWORK_SERVICE_DISCOVERY
              - ACCESS_TOKEN_MANIPULATION
              - ABUSE_ELEVATION_CONTROL_MECHANISM
              - DEFAULT_ACCOUNTS
            enumDescriptions:
              - Unspecified value.
              - T1595
              - T1595.001
              - T1105
              - T1106
              - T1129
              - T1059
              - T1059.004
              - T1496
              - T1090
              - T1090.002
              - T1090.003
              - T1568
              - T1552
              - T1078
              - T1078.003
              - T1078.004
              - T1498
              - T1069
              - T1069.003
              - T1567
              - T1567.002
              - T1098
              - T1098.004
              - T1543
              - T1539
              - T1578
              - T1190
              - T1556
              - T1485
              - T1484
              - T1562
              - T1046
              - T1134
              - T1548
              - T1078.001
            type: string
          description: >-
            The MITRE ATT&CK technique most closely represented by this finding,
            if any. primary_techniques is a repeated field because there are
            multiple levels of MITRE ATT&CK techniques. If the technique most
            closely represented by this finding is a sub-technique (e.g.
            `SCANNING_IP_BLOCKS`), both the sub-technique and its parent
            technique(s) will be listed (e.g. `SCANNING_IP_BLOCKS`,
            `ACTIVE_SCANNING`).
        additionalTechniques:
          items:
            enum:
              - TECHNIQUE_UNSPECIFIED
              - ACTIVE_SCANNING
              - SCANNING_IP_BLOCKS
              - INGRESS_TOOL_TRANSFER
              - NATIVE_API
              - SHARED_MODULES
              - COMMAND_AND_SCRIPTING_INTERPRETER
              - UNIX_SHELL
              - RESOURCE_HIJACKING
              - PROXY
              - EXTERNAL_PROXY
              - MULTI_HOP_PROXY
              - DYNAMIC_RESOLUTION
              - UNSECURED_CREDENTIALS
              - VALID_ACCOUNTS
              - LOCAL_ACCOUNTS
              - CLOUD_ACCOUNTS
              - NETWORK_DENIAL_OF_SERVICE
              - PERMISSION_GROUPS_DISCOVERY
              - CLOUD_GROUPS
              - EXFILTRATION_OVER_WEB_SERVICE
              - EXFILTRATION_TO_CLOUD_STORAGE
              - ACCOUNT_MANIPULATION
              - SSH_AUTHORIZED_KEYS
              - CREATE_OR_MODIFY_SYSTEM_PROCESS
              - STEAL_WEB_SESSION_COOKIE
              - MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE
              - EXPLOIT_PUBLIC_FACING_APPLICATION
              - MODIFY_AUTHENTICATION_PROCESS
              - DATA_DESTRUCTION
              - DOMAIN_POLICY_MODIFICATION
              - IMPAIR_DEFENSES
              - NETWORK_SERVICE_DISCOVERY
              - ACCESS_TOKEN_MANIPULATION
              - ABUSE_ELEVATION_CONTROL_MECHANISM
              - DEFAULT_ACCOUNTS
            type: string
            enumDescriptions:
              - Unspecified value.
              - T1595
              - T1595.001
              - T1105
              - T1106
              - T1129
              - T1059
              - T1059.004
              - T1496
              - T1090
              - T1090.002
              - T1090.003
              - T1568
              - T1552
              - T1078
              - T1078.003
              - T1078.004
              - T1498
              - T1069
              - T1069.003
              - T1567
              - T1567.002
              - T1098
              - T1098.004
              - T1543
              - T1539
              - T1578
              - T1190
              - T1556
              - T1485
              - T1484
              - T1562
              - T1046
              - T1134
              - T1548
              - T1078.001
          type: array
          description: >-
            Additional MITRE ATT&CK techniques related to this finding, if any,
            along with any of their respective parent techniques.
      type: object
      description: >-
        MITRE ATT&CK tactics and techniques related to this finding. See:
        https://attack.mitre.org
      id: MitreAttack
    OrganizationSettings:
      properties:
        enableAssetDiscovery:
          description: >-
            A flag that indicates if Asset Discovery should be enabled. If the
            flag is set to `true`, then discovery of assets will occur. If it is
            set to `false`, all historical assets will remain, but discovery of
            future assets will not occur.
          type: boolean
        assetDiscoveryConfig:
          description: The configuration used for Asset Discovery runs.
          $ref: '#/components/schemas/AssetDiscoveryConfig'
        name:
          description: >-
            The relative resource name of the settings. See:
            https://cloud.google.com/apis/design/resource_names#relative_resource_name
            Example: "organizations/{organization_id}/organizationSettings".
          type: string
      description: >-
        User specified settings that are attached to the Security Command Center
        organization.
      id: OrganizationSettings
      type: object
    TestIamPermissionsResponse:
      type: object
      properties:
        permissions:
          items:
            type: string
          type: array
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
      description: Response message for `TestIamPermissions` method.
      id: TestIamPermissionsResponse
    CloudDlpInspection:
      id: CloudDlpInspection
      type: object
      properties:
        infoTypeCount:
          description: >-
            The number of times Cloud DLP found this infoType within this job
            and resource.
          format: int64
          type: string
        inspectJob:
          type: string
          description: >-
            Name of the inspection job, for example,
            `projects/123/locations/europe/dlpJobs/i-8383929`.
        fullScan:
          description: Whether Cloud DLP scanned the complete resource or a sampled subset.
          type: boolean
        infoType:
          description: >-
            The type of information (or
            *[infoType](https://cloud.google.com/dlp/docs/infotypes-reference)*)
            found, for example, `EMAIL_ADDRESS` or `STREET_ADDRESS`.
          type: string
      description: >-
        Details about the Cloud Data Loss Prevention (Cloud DLP) [inspection
        job](https://cloud.google.com/dlp/docs/concepts-job-triggers) that
        produced the finding.
    NodePool:
      description: Provides GKE node pool information.
      id: NodePool
      properties:
        name:
          type: string
          description: Kubernetes node pool name.
        nodes:
          type: array
          description: Nodes associated with the finding.
          items:
            $ref: '#/components/schemas/Node'
      type: object
    AccessReview:
      type: object
      properties:
        name:
          description: The name of the resource being requested. Empty means all.
          type: string
        ns:
          description: >-
            Namespace of the action being requested. Currently, there is no
            distinction between no namespace and all namespaces. Both are
            represented by "" (empty).
          type: string
        version:
          type: string
          description: The API version of the resource. "*" means all.
        verb:
          type: string
          description: >-
            A Kubernetes resource API verb, like get, list, watch, create,
            update, delete, proxy. "*" means all.
        subresource:
          type: string
          description: The optional subresource type.
        resource:
          description: The optional resource type requested. "*" means all.
          type: string
        group:
          description: The API group of the resource. "*" means all.
          type: string
      id: AccessReview
      description: >-
        Conveys information about a Kubernetes access review (such as one
        returned by a [`kubectl auth
        can-i`](https://kubernetes.io/docs/reference/access-authn-authz/authorization/#checking-api-access)
        command) that was involved in a finding.
    MemoryHashSignature:
      type: object
      properties:
        detections:
          type: array
          items:
            $ref: '#/components/schemas/Detection'
          description: >-
            The list of memory hash detections contributing to the binary family
            match.
        binaryFamily:
          description: The binary family.
          type: string
      id: MemoryHashSignature
      description: A signature corresponding to memory page hashes.
    AssetDiscoveryConfig:
      id: AssetDiscoveryConfig
      type: object
      description: The configuration used for Asset Discovery runs.
      properties:
        projectIds:
          type: array
          description: The project ids to use for filtering asset discovery.
          items:
            type: string
        inclusionMode:
          type: string
          description: The mode to use for filtering asset discovery.
          enum:
            - INCLUSION_MODE_UNSPECIFIED
            - INCLUDE_ONLY
            - EXCLUDE
          enumDescriptions:
            - >-
              Unspecified. Setting the mode with this value will disable
              inclusion/exclusion filtering for Asset Discovery.
            - >-
              Asset Discovery will capture only the resources within the
              projects specified. All other resources will be ignored.
            - >-
              Asset Discovery will ignore all resources under the projects
              specified. All other resources will be retrieved.
    ListFindingsResponse:
      id: ListFindingsResponse
      description: Response message for listing findings.
      type: object
      properties:
        readTime:
          description: Time used for executing the list request.
          type: string
          format: google-datetime
        findings:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudSecuritycenterV1beta1Finding'
          description: Findings matching the list request.
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results.
          type: string
        totalSize:
          description: The total number of findings matching the query.
          type: integer
          format: int32
    GoogleCloudSecuritycenterV1MuteConfig:
      description: >-
        A mute config is a Cloud SCC resource that contains the configuration to
        mute create/update events of findings.
      type: object
      properties:
        createTime:
          format: google-datetime
          readOnly: true
          description: >-
            Output only. The time at which the mute config was created. This
            field is set by the server and will be ignored if provided on config
            creation.
          type: string
        displayName:
          type: string
          description: The human readable name to be displayed for the mute config.
        updateTime:
          readOnly: true
          description: >-
            Output only. The most recent time at which the mute config was
            updated. This field is set by the server and will be ignored if
            provided on config creation or update.
          type: string
          format: google-datetime
        description:
          description: A description of the mute config.
          type: string
        name:
          type: string
          description: >-
            This field will be ignored if provided on config creation. Format
            "organizations/{organization}/muteConfigs/{mute_config}"
            "folders/{folder}/muteConfigs/{mute_config}"
            "projects/{project}/muteConfigs/{mute_config}"
        filter:
          type: string
          description: >-
            Required. An expression that defines the filter to apply across
            create/update events of findings. While creating a filter string, be
            mindful of the scope in which the mute configuration is being
            created. E.g., If a filter contains project = X but is created under
            the project = Y scope, it might not match any findings. The
            following field and operator combinations are supported: * severity:
            `=`, `:` * category: `=`, `:` * resource.name: `=`, `:` *
            resource.project_name: `=`, `:` * resource.project_display_name:
            `=`, `:` * resource.folders.resource_folder: `=`, `:` *
            resource.parent_name: `=`, `:` * resource.parent_display_name: `=`,
            `:` * resource.type: `=`, `:` * finding_class: `=`, `:` *
            indicator.ip_addresses: `=`, `:` * indicator.domains: `=`, `:`
        mostRecentEditor:
          readOnly: true
          type: string
          description: >-
            Output only. Email address of the user who last edited the mute
            config. This field is set by the server and will be ignored if
            provided on config creation or update.
      id: GoogleCloudSecuritycenterV1MuteConfig
    GroupResult:
      properties:
        count:
          format: int64
          type: string
          description: Total count of resources for the given properties.
        properties:
          type: object
          additionalProperties:
            type: any
          description: Properties matching the groupBy fields in the request.
      type: object
      description: Result containing the properties and count of a groupBy request.
      id: GroupResult
    IamBinding:
      properties:
        role:
          description: >-
            Role that is assigned to "members". For example, "roles/viewer",
            "roles/editor", or "roles/owner".
          type: string
        action:
          enum:
            - ACTION_UNSPECIFIED
            - ADD
            - REMOVE
          enumDescriptions:
            - Unspecified.
            - Addition of a Binding.
            - Removal of a Binding.
          type: string
          description: The action that was performed on a Binding.
        member:
          description: >-
            A single identity requesting access for a Cloud Platform resource,
            for example, "foo@google.com".
          type: string
      description: >-
        Represents a particular IAM binding, which captures a member's role
        addition, removal, or state.
      id: IamBinding
      type: object
    Kubernetes:
      description: Kubernetes-related attributes.
      type: object
      id: Kubernetes
      properties:
        accessReviews:
          description: >-
            Provides information on any Kubernetes access reviews (privilege
            checks) relevant to the finding.
          items:
            $ref: '#/components/schemas/AccessReview'
          type: array
        bindings:
          description: >-
            Provides Kubernetes role binding information for findings that
            involve [RoleBindings or
            ClusterRoleBindings](https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control).
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudSecuritycenterV1Binding'
        nodes:
          description: >-
            Provides Kubernetes
            [node](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture#nodes)
            information.
          type: array
          items:
            $ref: '#/components/schemas/Node'
        roles:
          items:
            $ref: '#/components/schemas/Role'
          description: >-
            Provides Kubernetes role information for findings that involve
            [Roles or
            ClusterRoles](https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control).
          type: array
        nodePools:
          description: >-
            GKE [node
            pools](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pools)
            associated with the finding. This field contains node pool
            information for each node, when it is available.
          type: array
          items:
            $ref: '#/components/schemas/NodePool'
        pods:
          items:
            $ref: '#/components/schemas/Pod'
          type: array
          description: >-
            Kubernetes
            [Pods](https://cloud.google.com/kubernetes-engine/docs/concepts/pod)
            associated with the finding. This field contains Pod records for
            each container that is owned by a Pod.
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta1/organizations/{organizationsId}/operations/{operationsId}:cancel:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: securitycenter.organizations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1beta1/organizations/{organizationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: securitycenter.organizations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1beta1/organizations/{organizationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: securitycenter.organizations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: securitycenter.organizations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1beta1/organizations/{organizationsId}/sources/{sourcesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified Source.
      operationId: securitycenter.organizations.sources.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources_iam_policies
      x-stackQL-verb: exec
  /v1beta1/organizations/{organizationsId}/sources:
    parameters: *ref_1
    post:
      description: Creates a source.
      operationId: securitycenter.organizations.sources.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: insert
    get:
      description: Lists all sources belonging to an organization.
      operationId: securitycenter.organizations.sources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourcesResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: sources
      x-stackQL-verb: select
  /v1beta1/organizations/{organizationsId}/sources/{sourcesId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: Gets the access control policy on the specified Source.
      operationId: securitycenter.organizations.sources.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources_iam_policies
      x-stackQL-verb: select
  /v1beta1/organizations/{organizationsId}/sources/{sourcesId}:
    parameters: *ref_1
    get:
      description: Gets a source.
      operationId: securitycenter.organizations.sources.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: select
    patch:
      description: Updates a source.
      operationId: securitycenter.organizations.sources.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: exec
  /v1beta1/organizations/{organizationsId}/sources/{sourcesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: Returns the permissions that a caller has on the specified source.
      operationId: securitycenter.organizations.sources.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources_iam_policies
      x-stackQL-verb: exec
  /v1beta1/organizations/{organizationsId}/sources/{sourcesId}/findings/{findingsId}:
    parameters: *ref_1
    patch:
      description: >-
        Creates or updates a finding. The corresponding source must exist for a
        finding creation to succeed.
      operationId: securitycenter.organizations.sources.findings.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1beta1Finding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1beta1Finding'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1beta1/organizations/{organizationsId}/sources/{sourcesId}/findings:
    parameters: *ref_1
    post:
      description: >-
        Creates a finding. The corresponding source must exist for finding
        creation to succeed.
      operationId: securitycenter.organizations.sources.findings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudSecuritycenterV1beta1Finding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1beta1Finding'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: findingId
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: insert
    get:
      description: >-
        Lists an organization or source's findings. To list across all sources
        provide a `-` as the source id. Example:
        /v1beta1/organizations/{organization_id}/sources/-/findings
      operationId: securitycenter.organizations.sources.findings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: fieldMask
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: readTime
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: select
  /v1beta1/organizations/{organizationsId}/sources/{sourcesId}/findings/{findingsId}:setState:
    parameters: *ref_1
    post:
      description: Updates the state of a finding.
      operationId: securitycenter.organizations.sources.findings.setState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetFindingStateRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudSecuritycenterV1beta1Finding'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1beta1/organizations/{organizationsId}/sources/{sourcesId}/findings:group:
    parameters: *ref_1
    post:
      description: >-
        Filters an organization or source's findings and groups them by their
        specified properties. To group across all sources provide a `-` as the
        source id. Example:
        /v1beta1/organizations/{organization_id}/sources/-/findings
      operationId: securitycenter.organizations.sources.findings.group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupFindingsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupFindingsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1beta1/organizations/{organizationsId}/sources/{sourcesId}/findings/{findingsId}/securityMarks:
    parameters: *ref_1
    patch:
      description: Updates security marks.
      operationId: securitycenter.organizations.sources.findings.updateSecurityMarks
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudSecuritycenterV1beta1SecurityMarks
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudSecuritycenterV1beta1SecurityMarks
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: findingsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
      x-stackQL-resource: findings
      x-stackQL-verb: exec
  /v1beta1/organizations/{organizationsId}/assets:group:
    parameters: *ref_1
    post:
      description: >-
        Filters an organization's assets and groups them by their specified
        properties.
      operationId: securitycenter.organizations.assets.group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupAssetsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupAssetsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: exec
  /v1beta1/organizations/{organizationsId}/assets:runDiscovery:
    parameters: *ref_1
    post:
      description: >-
        Runs asset discovery. The discovery is tracked with a long-running
        operation. This API can only be called with limited frequency for an
        organization. If it is called too frequently the caller will receive a
        TOO_MANY_REQUESTS error.
      operationId: securitycenter.organizations.assets.runDiscovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunAssetDiscoveryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: exec
  /v1beta1/organizations/{organizationsId}/assets/{assetsId}/securityMarks:
    parameters: *ref_1
    patch:
      description: Updates security marks.
      operationId: securitycenter.organizations.assets.updateSecurityMarks
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudSecuritycenterV1beta1SecurityMarks
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudSecuritycenterV1beta1SecurityMarks
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: exec
  /v1beta1/organizations/{organizationsId}/assets:
    parameters: *ref_1
    get:
      description: Lists an organization's assets.
      operationId: securitycenter.organizations.assets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: readTime
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: compareDuration
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: fieldMask
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-verb: select
  /v1beta1/organizations/{organizationsId}/organizationSettings:
    parameters: *ref_1
    patch:
      description: Updates an organization's settings.
      operationId: securitycenter.organizations.updateOrganizationSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSettings'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: organizations
      x-stackQL-verb: exec
    get:
      description: Gets the settings for an organization.
      operationId: securitycenter.organizations.getOrganizationSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSettings'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: organizations__organization_settings
      x-stackQL-verb: select
