openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Datastream API
  description: ''
  version: v1alpha1
  x-discovery-doc-revision: '20230611'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/datastream/
servers:
  - url: https://datastream.googleapis.com
components:
  schemas:
    ConnectionProfile:
      properties:
        staticServiceIpConnectivity:
          description: Static Service IP connectivity.
          $ref: '#/components/schemas/StaticServiceIpConnectivity'
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The create time of the resource.
        gcsProfile:
          description: Cloud Storage ConnectionProfile configuration.
          $ref: '#/components/schemas/GcsProfile'
        mysqlProfile:
          $ref: '#/components/schemas/MysqlProfile'
          description: MySQL ConnectionProfile configuration.
        noConnectivity:
          $ref: '#/components/schemas/NoConnectivitySettings'
          description: No connectivity option chosen.
        displayName:
          description: Required. Display name.
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: Labels.
        forwardSshConnectivity:
          $ref: '#/components/schemas/ForwardSshTunnelConnectivity'
          description: Forward SSH tunnel connectivity.
        name:
          description: Output only. The resource's name.
          readOnly: true
          type: string
        privateConnectivity:
          description: Private connectivity.
          $ref: '#/components/schemas/PrivateConnectivity'
        oracleProfile:
          $ref: '#/components/schemas/OracleProfile'
          description: Oracle ConnectionProfile configuration.
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The update time of the resource.
          readOnly: true
      type: object
      id: ConnectionProfile
    Empty:
      type: object
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
    SourceObjectIdentifier:
      id: SourceObjectIdentifier
      properties:
        oracleIdentifier:
          $ref: '#/components/schemas/OracleObjectIdentifier'
          description: Oracle data source object identifier.
        mysqlIdentifier:
          $ref: '#/components/schemas/MysqlObjectIdentifier'
          description: Mysql data source object identifier.
      type: object
      description: Represents an identifier of an object in the data source.
    SourceConfig:
      properties:
        sourceConnectionProfileName:
          description: Required. Source connection profile identifier.
          type: string
        mysqlSourceConfig:
          description: MySQL data source configuration
          $ref: '#/components/schemas/MysqlSourceConfig'
        oracleSourceConfig:
          description: Oracle data source configuration
          $ref: '#/components/schemas/OracleSourceConfig'
      type: object
      id: SourceConfig
      description: The configuration of the stream source.
    MysqlObjectIdentifier:
      properties:
        table:
          type: string
          description: Required. The table name.
        database:
          type: string
          description: Required. The database name.
      description: Mysql data source object identifier.
      type: object
      id: MysqlObjectIdentifier
    Route:
      description: >-
        The Route resource is the child of the PrivateConnection resource. It
        used to define a route for a PrivateConnection setup.
      type: object
      id: Route
      properties:
        destinationAddress:
          type: string
          description: Required. Destination address for connection
        displayName:
          description: Required. Display name.
          type: string
        createTime:
          type: string
          description: Output only. The create time of the resource.
          readOnly: true
          format: google-datetime
        updateTime:
          readOnly: true
          description: Output only. The update time of the resource.
          format: google-datetime
          type: string
        destinationPort:
          format: int32
          type: integer
          description: Destination port for connection
        labels:
          description: Labels.
          type: object
          additionalProperties:
            type: string
        name:
          readOnly: true
          description: Output only. The resource's name.
          type: string
    DiscoverConnectionProfileRequest:
      description: Request message for 'discover' ConnectionProfile request.
      id: DiscoverConnectionProfileRequest
      type: object
      properties:
        recursive:
          type: boolean
          description: >-
            Whether to retrieve the full hierarchy of data objects (TRUE) or
            only the current level (FALSE).
        oracleRdbms:
          description: Oracle RDBMS to enrich with child data objects and metadata.
          $ref: '#/components/schemas/OracleRdbms'
        recursionDepth:
          description: >-
            The number of hierarchy levels below the current level to be
            retrieved.
          format: int32
          type: integer
        mysqlRdbms:
          $ref: '#/components/schemas/MysqlRdbms'
          description: MySQL RDBMS to enrich with child data objects and metadata.
        connectionProfileName:
          description: A reference to an existing ConnectionProfile.
          type: string
        connectionProfile:
          $ref: '#/components/schemas/ConnectionProfile'
          description: An ad-hoc ConnectionProfile configuration.
    FetchErrorsResponse:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          description: The list of errors on the Stream.
          type: array
      id: FetchErrorsResponse
      type: object
      description: Response message for a 'FetchErrors' response.
    OracleRdbms:
      description: Oracle database structure.
      id: OracleRdbms
      type: object
      properties:
        oracleSchemas:
          type: array
          description: Oracle schemas/databases in the database server.
          items:
            $ref: '#/components/schemas/OracleSchema'
    ValidationResult:
      id: ValidationResult
      properties:
        validations:
          description: >-
            A list of validations (includes both executed as well as not
            executed validations).
          items:
            $ref: '#/components/schemas/Validation'
          type: array
      type: object
      description: Contains the current validation results.
    OracleObjectIdentifier:
      type: object
      properties:
        schema:
          description: Required. The schema name.
          type: string
        table:
          description: Required. The table name.
          type: string
      description: Oracle data source object identifier.
      id: OracleObjectIdentifier
    Validation:
      properties:
        description:
          type: string
          description: A short description of the validation.
        status:
          type: string
          enumDescriptions:
            - Unspecified status.
            - Validation did not execute.
            - Validation failed.
            - Validation passed.
          enum:
            - STATUS_UNSPECIFIED
            - NOT_EXECUTED
            - FAILED
            - PASSED
          description: Validation execution status.
        code:
          type: string
          description: A custom code identifying this validation.
        message:
          items:
            $ref: '#/components/schemas/ValidationMessage'
          type: array
          description: Messages reflecting the validation results.
      type: object
      id: Validation
    JsonFileFormat:
      id: JsonFileFormat
      type: object
      properties:
        compression:
          enum:
            - JSON_COMPRESSION_UNSPECIFIED
            - NO_COMPRESSION
            - GZIP
          enumDescriptions:
            - Unspecified json file compression.
            - Do not compress JSON file.
            - Gzip compression.
          description: Compression of the loaded JSON file.
          type: string
        schemaFileFormat:
          description: The schema file format along JSON data files.
          enum:
            - SCHEMA_FILE_FORMAT_UNSPECIFIED
            - NO_SCHEMA_FILE
            - AVRO_SCHEMA_FILE
          type: string
          enumDescriptions:
            - Unspecified schema file format.
            - Do not attach schema file.
            - Avro schema format.
      description: JSON file format configuration.
    GcsProfile:
      type: object
      properties:
        rootPath:
          description: The root path inside the Cloud Storage bucket.
          type: string
        bucketName:
          description: >-
            Required. The full project and resource path for Cloud Storage
            bucket including the name.
          type: string
      description: Cloud Storage bucket profile.
      id: GcsProfile
    BackfillNoneStrategy:
      properties: {}
      id: BackfillNoneStrategy
      description: >-
        Backfill strategy to disable automatic backfill for the Stream's
        objects.
      type: object
    VpcPeeringConfig:
      description: >-
        The VPC Peering configuration is used to create VPC peering between
        Datastream and the consumer's VPC.
      type: object
      id: VpcPeeringConfig
      properties:
        subnet:
          type: string
          description: Required. A free subnet for peering. (CIDR of /29)
        vpcName:
          description: Required. fully qualified name of the VPC Datastream will peer to.
          type: string
    MysqlTable:
      properties:
        tableName:
          description: Table name.
          type: string
        mysqlColumns:
          items:
            $ref: '#/components/schemas/MysqlColumn'
          description: >-
            MySQL columns in the database. When unspecified as part of
            include/exclude lists, includes/excludes everything.
          type: array
      type: object
      description: MySQL table.
      id: MysqlTable
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: >-
            A list of operations that matches the specified filter in the
            request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      id: ListOperationsResponse
      type: object
    NoConnectivitySettings:
      properties: {}
      type: object
      id: NoConnectivitySettings
      description: No connectivity settings.
    Location:
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        metadata:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
        name:
          type: string
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
      id: Location
    OracleTable:
      description: Oracle table.
      properties:
        oracleColumns:
          items:
            $ref: '#/components/schemas/OracleColumn'
          type: array
          description: >-
            Oracle columns in the schema. When unspecified as part of
            inclue/exclude lists, includes/excludes everything.
        tableName:
          type: string
          description: Table name.
      type: object
      id: OracleTable
    MysqlProfile:
      id: MysqlProfile
      type: object
      properties:
        sslConfig:
          $ref: '#/components/schemas/MysqlSslConfig'
          description: SSL configuration for the MySQL connection.
        port:
          description: Port for the MySQL connection, default value is 3306.
          format: int32
          type: integer
        username:
          type: string
          description: Required. Username for the MySQL connection.
        password:
          description: Required. Input only. Password for the MySQL connection.
          type: string
        hostname:
          description: Required. Hostname for the MySQL connection.
          type: string
      description: MySQL database profile.
    ListStreamObjectsResponse:
      type: object
      id: ListStreamObjectsResponse
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page.
          type: string
        streamObjects:
          items:
            $ref: '#/components/schemas/StreamObject'
          description: List of stream objects.
          type: array
      description: Response containing the objects for a stream.
    MysqlSslConfig:
      type: object
      description: MySQL SSL configuration information.
      properties:
        clientKeySet:
          type: boolean
          readOnly: true
          description: Output only. Indicates whether the client_key field is set.
        clientCertificate:
          description: >-
            Input only. PEM-encoded certificate that will be used by the replica
            to authenticate against the source database server. If this field is
            used then the 'client_key' and the 'ca_certificate' fields are
            mandatory.
          type: string
        clientCertificateSet:
          type: boolean
          readOnly: true
          description: Output only. Indicates whether the client_certificate field is set.
        caCertificate:
          description: >-
            Input only. PEM-encoded certificate of the CA that signed the source
            database server's certificate.
          type: string
        caCertificateSet:
          description: Output only. Indicates whether the ca_certificate field is set.
          readOnly: true
          type: boolean
        clientKey:
          description: >-
            Input only. PEM-encoded private key associated with the Client
            Certificate. If this field is used then the 'client_certificate' and
            the 'ca_certificate' fields are mandatory.
          type: string
      id: MysqlSslConfig
    OracleSchema:
      properties:
        schemaName:
          description: Schema name.
          type: string
        oracleTables:
          items:
            $ref: '#/components/schemas/OracleTable'
          description: Tables in the schema.
          type: array
      id: OracleSchema
      type: object
      description: Oracle schema.
    ListConnectionProfilesResponse:
      id: ListConnectionProfilesResponse
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        connectionProfiles:
          type: array
          description: List of connection profiles.
          items:
            $ref: '#/components/schemas/ConnectionProfile'
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
      type: object
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    FetchStaticIpsResponse:
      description: Response message for a 'FetchStaticIps' response.
      properties:
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
        staticIps:
          type: array
          description: list of static ips by account
          items:
            type: string
      id: FetchStaticIpsResponse
      type: object
    StartBackfillJobResponse:
      description: >-
        Response for manually initiating a backfill job for a specific stream
        object.
      properties:
        object:
          description: The stream object resource a backfill job was started for.
          $ref: '#/components/schemas/StreamObject'
      id: StartBackfillJobResponse
      type: object
    StopBackfillJobResponse:
      type: object
      description: Response for manually stop a backfill job for a specific stream object.
      id: StopBackfillJobResponse
      properties:
        object:
          description: The stream object resource the backfill job was stopped for.
          $ref: '#/components/schemas/StreamObject'
    OperationMetadata:
      type: object
      description: Represents the metadata of the long-running operation.
      id: OperationMetadata
      properties:
        validationResult:
          description: Output only. Results of executed validations if there are any.
          readOnly: true
          $ref: '#/components/schemas/ValidationResult'
        apiVersion:
          readOnly: true
          type: string
          description: Output only. API version used to start the operation.
        statusMessage:
          readOnly: true
          type: string
          description: Output only. Human-readable status of the operation, if any.
        endTime:
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
          format: google-datetime
        verb:
          type: string
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
        target:
          type: string
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
          readOnly: true
        requestedCancellation:
          readOnly: true
          type: boolean
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
    ForwardSshTunnelConnectivity:
      properties:
        username:
          type: string
          description: Required. Username for the SSH tunnel.
        privateKey:
          description: Input only. SSH private key.
          type: string
        port:
          description: Port for the SSH tunnel, default value is 22.
          format: int32
          type: integer
        password:
          description: Input only. SSH password.
          type: string
        hostname:
          description: Required. Hostname for the SSH tunnel.
          type: string
      description: Forward SSH Tunnel connectivity.
      id: ForwardSshTunnelConnectivity
      type: object
    FetchErrorsRequest:
      type: object
      description: Request message for 'FetchErrors' request.
      id: FetchErrorsRequest
      properties: {}
    ValidationMessage:
      id: ValidationMessage
      description: Represent user-facing validation result message.
      type: object
      properties:
        message:
          type: string
          description: The result of the validation.
        code:
          description: A custom code identifying this specific message.
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
          description: Additional metadata related to the result.
        level:
          enum:
            - LEVEL_UNSPECIFIED
            - WARNING
            - ERROR
          type: string
          enumDescriptions:
            - Unspecified level.
            - Potentially cause issues with the Stream.
            - Definitely cause issues with the Stream.
          description: Message severity level (warning or error).
    Stream:
      type: object
      properties:
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The last update time of the stream.
        labels:
          description: Labels.
          additionalProperties:
            type: string
          type: object
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
          readOnly: true
          description: Output only. Errors on the Stream.
        displayName:
          description: Required. Display name.
          type: string
        name:
          type: string
          readOnly: true
          description: Output only. The stream's name.
        createTime:
          format: google-datetime
          readOnly: true
          description: Output only. The creation time of the stream.
          type: string
        sourceConfig:
          $ref: '#/components/schemas/SourceConfig'
          description: Required. Source connection profile configuration.
        customerManagedEncryptionKey:
          description: >-
            Immutable. A reference to a KMS encryption key. If provided, it will
            be used to encrypt the data. If left blank, data will be encrypted
            using an internal Stream-specific encryption key provisioned through
            KMS.
          type: string
        backfillAll:
          $ref: '#/components/schemas/BackfillAllStrategy'
          description: >-
            Automatically backfill objects included in the stream source
            configuration. Specific objects can be excluded.
        destinationConfig:
          description: Required. Destination connection profile configuration.
          $ref: '#/components/schemas/DestinationConfig'
        state:
          description: The state of the stream.
          enumDescriptions:
            - Unspecified stream state.
            - The stream has been created.
            - The stream is running.
            - The stream is paused.
            - >-
              The stream is in maintenance mode. Updates are rejected on the
              resource in this state.
            - >-
              The stream is experiencing an error that is preventing data from
              being streamed.
            - The stream has experienced a terminal failure.
            - The stream is starting, but not yet running.
            - >-
              The Stream is no longer reading new events, but still writing
              events in the buffer.
          enum:
            - STATE_UNSPECIFIED
            - CREATED
            - RUNNING
            - PAUSED
            - MAINTENANCE
            - FAILED
            - FAILED_PERMANENTLY
            - STARTING
            - DRAINING
          type: string
        backfillNone:
          description: Do not automatically backfill any objects.
          $ref: '#/components/schemas/BackfillNoneStrategy'
      id: Stream
    MysqlRdbms:
      description: MySQL database structure
      type: object
      properties:
        mysqlDatabases:
          type: array
          items:
            $ref: '#/components/schemas/MysqlDatabase'
          description: Mysql databases on the server
      id: MysqlRdbms
    MysqlColumn:
      id: MysqlColumn
      type: object
      properties:
        length:
          format: int32
          type: integer
          description: Column length.
        primaryKey:
          type: boolean
          description: Whether or not the column represents a primary key.
        ordinalPosition:
          format: int32
          type: integer
          description: The ordinal position of the column in the table.
        columnName:
          description: Column name.
          type: string
        collation:
          type: string
          description: Column collation.
        dataType:
          description: >-
            The MySQL data type. Full data types list can be found here:
            https://dev.mysql.com/doc/refman/8.0/en/data-types.html
          type: string
        nullable:
          description: Whether or not the column can accept a null value.
          type: boolean
      description: MySQL Column.
    ListPrivateConnectionsResponse:
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        privateConnections:
          items:
            $ref: '#/components/schemas/PrivateConnection'
          description: List of private connectivity configurations.
          type: array
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
      id: ListPrivateConnectionsResponse
      type: object
    OracleColumn:
      description: Oracle Column.
      properties:
        primaryKey:
          type: boolean
          description: Whether or not the column represents a primary key.
        columnName:
          description: Column name.
          type: string
        scale:
          type: integer
          description: Column scale.
          format: int32
        precision:
          description: Column precision.
          format: int32
          type: integer
        length:
          description: Column length.
          type: integer
          format: int32
        dataType:
          type: string
          description: The Oracle data type.
        ordinalPosition:
          format: int32
          type: integer
          description: The ordinal position of the column in the table.
        encoding:
          type: string
          description: Column encoding.
        nullable:
          description: Whether or not the column can accept a null value.
          type: boolean
      type: object
      id: OracleColumn
    OracleProfile:
      description: Oracle database profile.
      type: object
      id: OracleProfile
      properties:
        connectionAttributes:
          additionalProperties:
            type: string
          description: Connection string attributes
          type: object
        port:
          description: Port for the Oracle connection, default value is 1521.
          format: int32
          type: integer
        databaseService:
          description: Required. Database for the Oracle connection.
          type: string
        password:
          type: string
          description: Required. Password for the Oracle connection.
        hostname:
          description: Required. Hostname for the Oracle connection.
          type: string
        username:
          description: Required. Username for the Oracle connection.
          type: string
    BackfillJob:
      properties:
        lastStartTime:
          description: Output only. Backfill job's start time.
          readOnly: true
          type: string
          format: google-datetime
        state:
          enumDescriptions:
            - Default value.
            - >-
              Backfill job was never started for the stream object (stream has
              backfill strategy defined as manual or object was explicitly
              excluded from automatic backfill).
            - Backfill job will start pending available resources.
            - Backfill job is running.
            - Backfill job stopped (next job run will start from beginning).
            - Backfill job failed (due to an error).
            - Backfill completed successfully.
            - >-
              Backfill job failed since the table structure is currently
              unsupported for backfill.
          enum:
            - STATE_UNSPECIFIED
            - NOT_STARTED
            - PENDING
            - ACTIVE
            - STOPPED
            - FAILED
            - COMPLETED
            - UNSUPPORTED
          type: string
          description: Backfill job state.
        trigger:
          type: string
          enumDescriptions:
            - Default value.
            - >-
              Object backfill job was triggered automatically according to the
              stream's backfill strategy.
            - >-
              Object backfill job was triggered manually using the dedicated
              API.
          description: Backfill job's triggering reason.
          enum:
            - TRIGGER_UNSPECIFIED
            - AUTOMATIC
            - MANUAL
        lastEndTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. Backfill job's end time.
        errors:
          readOnly: true
          description: Output only. Errors which caused the backfill job to fail.
          type: array
          items:
            $ref: '#/components/schemas/Error'
      description: Represents a backfill job on a specific stream object.
      id: BackfillJob
      type: object
    MysqlDatabase:
      properties:
        mysqlTables:
          description: Tables in the database.
          type: array
          items:
            $ref: '#/components/schemas/MysqlTable'
        databaseName:
          type: string
          description: Database name.
      description: MySQL database.
      type: object
      id: MysqlDatabase
    ListStreamsResponse:
      type: object
      id: ListStreamsResponse
      properties:
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        streams:
          description: List of streams
          items:
            $ref: '#/components/schemas/Stream'
          type: array
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    Error:
      description: Represent a user-facing Error.
      properties:
        details:
          additionalProperties:
            type: string
          description: Additional information about the error.
          type: object
        errorUuid:
          description: >-
            A unique identifier for this specific error, allowing it to be
            traced throughout the system in logs and API responses.
          type: string
        reason:
          type: string
          description: A title that explains the reason for the error.
        errorTime:
          type: string
          description: The time when the error occurred.
          format: google-datetime
        message:
          description: A message containing more information about the error that occurred.
          type: string
      type: object
      id: Error
    MysqlSourceConfig:
      id: MysqlSourceConfig
      description: MySQL source configuration
      properties:
        allowlist:
          description: MySQL objects to retrieve from the source.
          $ref: '#/components/schemas/MysqlRdbms'
        rejectlist:
          description: MySQL objects to exclude from the stream.
          $ref: '#/components/schemas/MysqlRdbms'
      type: object
    DestinationConfig:
      id: DestinationConfig
      properties:
        destinationConnectionProfileName:
          description: Required. Destination connection profile identifier.
          type: string
        gcsDestinationConfig:
          description: GCS destination configuration.
          $ref: '#/components/schemas/GcsDestinationConfig'
      type: object
      description: The configuration of the stream destination.
    Operation:
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
        metadata:
          type: object
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      id: Operation
    GcsDestinationConfig:
      id: GcsDestinationConfig
      properties:
        fileRotationInterval:
          format: google-duration
          description: >-
            The maximum duration for which new events are added before a file is
            closed and a new file is created.
          type: string
        fileRotationMb:
          type: integer
          description: The maximum file size to be saved in the bucket.
          format: int32
        gcsFileFormat:
          type: string
          enumDescriptions:
            - Unspecified Cloud Storage file format.
            - Avro file format
          enum:
            - GCS_FILE_FORMAT_UNSPECIFIED
            - AVRO
          description: >-
            File format that data should be written in. Deprecated field
            (b/169501737) - use file_format instead.
        avroFileFormat:
          $ref: '#/components/schemas/AvroFileFormat'
          description: AVRO file format configuration.
        jsonFileFormat:
          $ref: '#/components/schemas/JsonFileFormat'
          description: JSON file format configuration.
        path:
          description: Path inside the Cloud Storage bucket to write data to.
          type: string
      description: Google Cloud Storage destination configuration
      type: object
    AvroFileFormat:
      id: AvroFileFormat
      description: AVRO file format configuration.
      properties: {}
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
          description: >-
            A list of locations that matches the specified filter in the
            request.
        nextPageToken:
          description: The standard List next-page token.
          type: string
      id: ListLocationsResponse
      type: object
    PrivateConnection:
      id: PrivateConnection
      description: >-
        The PrivateConnection resource is used to establish private connectivity
        between Datastream and a customer's network.
      properties:
        error:
          readOnly: true
          $ref: '#/components/schemas/Error'
          description: >-
            Output only. In case of error, the details of the error in a
            user-friendly format.
        labels:
          additionalProperties:
            type: string
          description: Labels.
          type: object
        vpcPeeringConfig:
          $ref: '#/components/schemas/VpcPeeringConfig'
          description: VPC Peering Config
        state:
          description: Output only. The state of the Private Connection.
          readOnly: true
          type: string
          enumDescriptions:
            - ''
            - The private connection is in creation state - creating resources.
            - The private connection has been created with all of its resources.
            - The private connection creation has failed.
            - The private connection is being deleted.
            - Delete request has failed, resource is in invalid state.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - CREATED
            - FAILED
            - DELETING
            - FAILED_TO_DELETE
        displayName:
          type: string
          description: Required. Display name.
        name:
          type: string
          readOnly: true
          description: Output only. The resource's name.
        updateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The update time of the resource.
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The create time of the resource.
      type: object
    OracleSourceConfig:
      properties:
        allowlist:
          description: Oracle objects to include in the stream.
          $ref: '#/components/schemas/OracleRdbms'
        rejectlist:
          description: Oracle objects to exclude from the stream.
          $ref: '#/components/schemas/OracleRdbms'
        dropLargeObjects:
          description: Drop large object values.
          $ref: '#/components/schemas/DropLargeObjects'
      type: object
      id: OracleSourceConfig
      description: Oracle data source configuration
    StaticServiceIpConnectivity:
      description: Static IP address connectivity.
      properties: {}
      id: StaticServiceIpConnectivity
      type: object
    PrivateConnectivity:
      description: Private Connectivity
      type: object
      id: PrivateConnectivity
      properties:
        privateConnectionName:
          type: string
    DropLargeObjects:
      properties: {}
      description: Configuration to drop large object values.
      type: object
      id: DropLargeObjects
    DiscoverConnectionProfileResponse:
      properties:
        mysqlRdbms:
          description: Enriched MySQL RDBMS object.
          $ref: '#/components/schemas/MysqlRdbms'
        oracleRdbms:
          $ref: '#/components/schemas/OracleRdbms'
          description: Enriched Oracle RDBMS object.
      id: DiscoverConnectionProfileResponse
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: Status
      properties:
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        code:
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
      type: object
    BackfillAllStrategy:
      type: object
      id: BackfillAllStrategy
      description: >-
        Backfill strategy to automatically backfill the Stream's objects.
        Specific objects can be excluded.
      properties:
        mysqlExcludedObjects:
          description: MySQL data source objects to avoid backfilling.
          $ref: '#/components/schemas/MysqlRdbms'
        oracleExcludedObjects:
          description: Oracle data source objects to avoid backfilling.
          $ref: '#/components/schemas/OracleRdbms'
    StreamObject:
      description: A specific stream object (e.g a specific DB table).
      type: object
      properties:
        updateTime:
          type: string
          description: Output only. The last update time of the object.
          format: google-datetime
          readOnly: true
        errors:
          readOnly: true
          description: Output only. Active errors on the object.
          type: array
          items:
            $ref: '#/components/schemas/Error'
        name:
          description: Output only. The object's name.
          type: string
          readOnly: true
        sourceObject:
          description: The object identifier in the data source.
          $ref: '#/components/schemas/SourceObjectIdentifier'
        createTime:
          description: Output only. The creation time of the object.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. Display name.
          type: string
        backfillJob:
          description: The latest backfill job that was initiated for the stream object.
          $ref: '#/components/schemas/BackfillJob'
      id: StreamObject
    ListRoutesResponse:
      properties:
        routes:
          description: List of Routes.
          type: array
          items:
            $ref: '#/components/schemas/Route'
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      id: ListRoutesResponse
      description: route list response
      type: object
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1alpha1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/fields'
    get:
      description: >-
        The FetchStaticIps API call exposes the static IP addresses used by
        Datastream.
      operationId: datastream.projects.locations.fetchStaticIps
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchStaticIpsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations__static_ips
      x-stackQL-verb: select
  /v1alpha1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: datastream.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1alpha1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: datastream.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: datastream.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: datastream.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: datastream.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: datastream.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:
    parameters: *ref_1
    get:
      description: >-
        Use this method to get details about a private connectivity
        configuration.
      operationId: datastream.projects.locations.privateConnections.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateConnection'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-verb: select
    delete:
      description: Use this method to delete a private connectivity configuration.
      operationId: datastream.projects.locations.privateConnections.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: private_connections
      x-stackQL-verb: delete
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections:
    parameters: *ref_1
    get:
      description: >-
        Use this method to list private connectivity configurations in a project
        and location.
      operationId: datastream.projects.locations.privateConnections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrivateConnectionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-verb: select
    post:
      description: Use this method to create a private connectivity configuration.
      operationId: datastream.projects.locations.privateConnections.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateConnection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: privateConnectionId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-verb: insert
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}:
    parameters: *ref_1
    get:
      description: Use this method to get details about a route.
      operationId: datastream.projects.locations.privateConnections.routes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: path
          name: routesId
          required: true
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-verb: select
    delete:
      description: Use this method to delete a route.
      operationId: datastream.projects.locations.privateConnections.routes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: path
          name: routesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-verb: delete
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes:
    parameters: *ref_1
    get:
      description: >-
        Use this method to list routes created for a private connectivity in a
        project and location.
      operationId: datastream.projects.locations.privateConnections.routes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-verb: select
    post:
      description: >-
        Use this method to create a route for a private connectivity in a
        project and location.
      operationId: datastream.projects.locations.privateConnections.routes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: routeId
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-verb: insert
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:
    parameters: *ref_1
    get:
      description: >-
        Use this method to list connection profiles created in a project and
        location.
      operationId: datastream.projects.locations.connectionProfiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionProfilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: select
    post:
      description: >-
        Use this method to create a connection profile in a project and
        location.
      operationId: datastream.projects.locations.connectionProfiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: connectionProfileId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: insert
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:
    parameters: *ref_1
    patch:
      description: Use this method to update the parameters of a connection profile.
      operationId: datastream.projects.locations.connectionProfiles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: exec
    delete:
      description: Use this method to delete a connection profile..
      operationId: datastream.projects.locations.connectionProfiles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: delete
    get:
      description: Use this method to get details about a connection profile.
      operationId: datastream.projects.locations.connectionProfiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionProfile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: select
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:discover:
    parameters: *ref_1
    post:
      description: >-
        Use this method to discover a connection profile. The discover API call
        exposes the data objects and metadata belonging to the profile.
        Typically, a request returns children data objects under a parent data
        object that's optionally supplied in the request.
      operationId: datastream.projects.locations.connectionProfiles.discover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoverConnectionProfileRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverConnectionProfileResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: exec
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/streams:
    parameters: *ref_1
    post:
      description: Use this method to create a stream.
      operationId: datastream.projects.locations.streams.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stream'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: streamId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: streams
      x-stackQL-verb: insert
    get:
      description: Use this method to list streams in a project and location.
      operationId: datastream.projects.locations.streams.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: streams
      x-stackQL-verb: select
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}:
    parameters: *ref_1
    delete:
      description: Use this method to delete a stream.
      operationId: datastream.projects.locations.streams.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: streams
      x-stackQL-verb: delete
    get:
      description: Use this method to get details about a stream.
      operationId: datastream.projects.locations.streams.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
      x-stackQL-resource: streams
      x-stackQL-verb: select
    patch:
      description: Use this method to update the configuration of a stream.
      operationId: datastream.projects.locations.streams.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stream'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: streams
      x-stackQL-verb: exec
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}:fetchErrors:
    parameters: *ref_1
    post:
      description: Use this method to fetch any errors associated with a stream.
      operationId: datastream.projects.locations.streams.fetchErrors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchErrorsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
      x-stackQL-resource: streams__errors
      x-stackQL-verb: select
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:stopBackfillJob:
    parameters: *ref_1
    post:
      description: Stops the backfill job for the specified stream object.
      operationId: datastream.projects.locations.streams.objects.stopBackfillJob
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopBackfillJobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
        - in: path
          name: objectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-verb: exec
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:startBackfillJob:
    parameters: *ref_1
    post:
      description: Starts backfill job for the specified stream object.
      operationId: datastream.projects.locations.streams.objects.startBackfillJob
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartBackfillJobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
        - in: path
          name: objectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-verb: exec
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects:
    parameters: *ref_1
    get:
      description: Use this method to list the objects of a specific stream.
      operationId: datastream.projects.locations.streams.objects.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamObjectsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: objects
      x-stackQL-verb: select
  /v1alpha1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:
    parameters: *ref_1
    get:
      description: Use this method to get details about a stream object.
      operationId: datastream.projects.locations.streams.objects.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamObject'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
        - in: path
          name: objectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-verb: select
