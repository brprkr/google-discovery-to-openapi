openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Datastream API
  description: ''
  version: v1
  x-discovery-doc-revision: '20230611'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/datastream/
servers:
  - url: https://datastream.googleapis.com
components:
  schemas:
    SourceObjectIdentifier:
      description: Represents an identifier of an object in the data source.
      properties:
        oracleIdentifier:
          description: Oracle data source object identifier.
          $ref: '#/components/schemas/OracleObjectIdentifier'
        mysqlIdentifier:
          description: Mysql data source object identifier.
          $ref: '#/components/schemas/MysqlObjectIdentifier'
        postgresqlIdentifier:
          $ref: '#/components/schemas/PostgresqlObjectIdentifier'
          description: PostgreSQL data source object identifier.
      id: SourceObjectIdentifier
      type: object
    StreamObject:
      type: object
      description: A specific stream object (e.g a specific DB table).
      properties:
        backfillJob:
          $ref: '#/components/schemas/BackfillJob'
          description: The latest backfill job that was initiated for the stream object.
        createTime:
          format: google-datetime
          type: string
          description: Output only. The creation time of the object.
          readOnly: true
        sourceObject:
          description: The object identifier in the data source.
          $ref: '#/components/schemas/SourceObjectIdentifier'
        displayName:
          description: Required. Display name.
          type: string
        name:
          type: string
          description: Output only. The object resource's name.
          readOnly: true
        errors:
          readOnly: true
          items:
            $ref: '#/components/schemas/Error'
          description: Output only. Active errors on the object.
          type: array
        updateTime:
          type: string
          description: Output only. The last update time of the object.
          readOnly: true
          format: google-datetime
      id: StreamObject
    BigQueryDestinationConfig:
      description: BigQuery destination configuration
      properties:
        dataFreshness:
          format: google-duration
          description: >-
            The guaranteed data freshness (in seconds) when querying tables
            created by the stream. Editing this field will only affect new
            tables created in the future, but existing tables will not be
            impacted. Lower values mean that queries will return fresher data,
            but may result in higher cost.
          type: string
        singleTargetDataset:
          description: Single destination dataset.
          $ref: '#/components/schemas/SingleTargetDataset'
        sourceHierarchyDatasets:
          description: Source hierarchy datasets.
          $ref: '#/components/schemas/SourceHierarchyDatasets'
      type: object
      id: BigQueryDestinationConfig
    ListStreamsResponse:
      id: ListStreamsResponse
      type: object
      description: Response message for listing streams.
      properties:
        streams:
          items:
            $ref: '#/components/schemas/Stream'
          type: array
          description: List of streams
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    SourceHierarchyDatasets:
      type: object
      description: >-
        Destination datasets are created so that hierarchy of the destination
        data objects matches the source hierarchy.
      properties:
        datasetTemplate:
          $ref: '#/components/schemas/DatasetTemplate'
          description: The dataset template to use for dynamic dataset creation.
      id: SourceHierarchyDatasets
    Error:
      type: object
      properties:
        reason:
          description: A title that explains the reason for the error.
          type: string
        details:
          type: object
          additionalProperties:
            type: string
          description: Additional information about the error.
        message:
          type: string
          description: A message containing more information about the error that occurred.
        errorUuid:
          type: string
          description: >-
            A unique identifier for this specific error, allowing it to be
            traced throughout the system in logs and API responses.
        errorTime:
          type: string
          description: The time when the error occurred.
          format: google-datetime
      description: Represent a user-facing Error.
      id: Error
    VpcPeeringConfig:
      id: VpcPeeringConfig
      properties:
        subnet:
          description: Required. A free subnet for peering. (CIDR of /29)
          type: string
        vpc:
          type: string
          description: >-
            Required. Fully qualified name of the VPC that Datastream will peer
            to. Format: `projects/{project}/global/{networks}/{name}`
      type: object
      description: >-
        The VPC Peering configuration is used to create VPC peering between
        Datastream and the consumer's VPC.
    MysqlRdbms:
      properties:
        mysqlDatabases:
          items:
            $ref: '#/components/schemas/MysqlDatabase'
          type: array
          description: Mysql databases on the server
      type: object
      description: MySQL database structure
      id: MysqlRdbms
    ConnectionProfile:
      type: object
      description: >-
        A set of reusable connection configurations to be used as a source or
        destination for a stream.
      id: ConnectionProfile
      properties:
        displayName:
          type: string
          description: Required. Display name.
        staticServiceIpConnectivity:
          $ref: '#/components/schemas/StaticServiceIpConnectivity'
          description: Static Service IP connectivity.
        privateConnectivity:
          $ref: '#/components/schemas/PrivateConnectivity'
          description: Private connectivity.
        bigqueryProfile:
          $ref: '#/components/schemas/BigQueryProfile'
          description: BigQuery Connection Profile configuration.
        gcsProfile:
          description: Cloud Storage ConnectionProfile configuration.
          $ref: '#/components/schemas/GcsProfile'
        mysqlProfile:
          description: MySQL ConnectionProfile configuration.
          $ref: '#/components/schemas/MysqlProfile'
        name:
          type: string
          description: Output only. The resource's name.
          readOnly: true
        createTime:
          description: Output only. The create time of the resource.
          type: string
          readOnly: true
          format: google-datetime
        updateTime:
          type: string
          readOnly: true
          description: Output only. The update time of the resource.
          format: google-datetime
        labels:
          type: object
          description: Labels.
          additionalProperties:
            type: string
        forwardSshConnectivity:
          description: Forward SSH tunnel connectivity.
          $ref: '#/components/schemas/ForwardSshTunnelConnectivity'
        oracleProfile:
          description: Oracle ConnectionProfile configuration.
          $ref: '#/components/schemas/OracleProfile'
        postgresqlProfile:
          $ref: '#/components/schemas/PostgresqlProfile'
          description: PostgreSQL Connection Profile configuration.
    StaticServiceIpConnectivity:
      properties: {}
      id: StaticServiceIpConnectivity
      type: object
      description: >-
        Static IP address connectivity. Used when the source database is
        configured to allow incoming connections from the Datastream public IP
        addresses for the region specified in the connection profile.
    MysqlObjectIdentifier:
      description: Mysql data source object identifier.
      id: MysqlObjectIdentifier
      properties:
        table:
          type: string
          description: Required. The table name.
        database:
          type: string
          description: Required. The database name.
      type: object
    FetchStaticIpsResponse:
      description: Response message for a 'FetchStaticIps' response.
      type: object
      id: FetchStaticIpsResponse
      properties:
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
        staticIps:
          type: array
          items:
            type: string
          description: list of static ips by account
    MysqlProfile:
      id: MysqlProfile
      properties:
        username:
          type: string
          description: Required. Username for the MySQL connection.
        sslConfig:
          $ref: '#/components/schemas/MysqlSslConfig'
          description: SSL configuration for the MySQL connection.
        hostname:
          type: string
          description: Required. Hostname for the MySQL connection.
        port:
          type: integer
          format: int32
          description: Port for the MySQL connection, default value is 3306.
        password:
          type: string
          description: Required. Input only. Password for the MySQL connection.
      description: MySQL database profile.
      type: object
    Stream:
      properties:
        destinationConfig:
          $ref: '#/components/schemas/DestinationConfig'
          description: Required. Destination connection profile configuration.
        customerManagedEncryptionKey:
          type: string
          description: >-
            Immutable. A reference to a KMS encryption key. If provided, it will
            be used to encrypt the data. If left blank, data will be encrypted
            using an internal Stream-specific encryption key provisioned through
            KMS.
        backfillNone:
          description: Do not automatically backfill any objects.
          $ref: '#/components/schemas/BackfillNoneStrategy'
        updateTime:
          format: google-datetime
          readOnly: true
          description: Output only. The last update time of the stream.
          type: string
        sourceConfig:
          description: Required. Source connection profile configuration.
          $ref: '#/components/schemas/SourceConfig'
        name:
          description: Output only. The stream's name.
          readOnly: true
          type: string
        labels:
          description: Labels.
          type: object
          additionalProperties:
            type: string
        displayName:
          description: Required. Display name.
          type: string
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The creation time of the stream.
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          readOnly: true
          description: Output only. Errors on the Stream.
        state:
          type: string
          enumDescriptions:
            - Unspecified stream state.
            - >-
              The stream has been created but has not yet started streaming
              data.
            - The stream is running.
            - The stream is paused.
            - >-
              The stream is in maintenance mode. Updates are rejected on the
              resource in this state.
            - >-
              The stream is experiencing an error that is preventing data from
              being streamed.
            - The stream has experienced a terminal failure.
            - The stream is starting, but not yet running.
            - >-
              The Stream is no longer reading new events, but still writing
              events in the buffer.
          description: The state of the stream.
          enum:
            - STATE_UNSPECIFIED
            - NOT_STARTED
            - RUNNING
            - PAUSED
            - MAINTENANCE
            - FAILED
            - FAILED_PERMANENTLY
            - STARTING
            - DRAINING
        backfillAll:
          description: >-
            Automatically backfill objects included in the stream source
            configuration. Specific objects can be excluded.
          $ref: '#/components/schemas/BackfillAllStrategy'
      id: Stream
      type: object
      description: A resource representing streaming data from a source to a destination.
    Route:
      description: >-
        The route resource is the child of the private connection resource, used
        for defining a route for a private connection.
      properties:
        destinationPort:
          type: integer
          format: int32
          description: Destination port for connection
        labels:
          type: object
          description: Labels.
          additionalProperties:
            type: string
        createTime:
          readOnly: true
          description: Output only. The create time of the resource.
          type: string
          format: google-datetime
        displayName:
          description: Required. Display name.
          type: string
        name:
          description: Output only. The resource's name.
          readOnly: true
          type: string
        destinationAddress:
          description: Required. Destination address for connection
          type: string
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. The update time of the resource.
          type: string
      id: Route
      type: object
    DiscoverConnectionProfileRequest:
      id: DiscoverConnectionProfileRequest
      description: Request message for 'discover' ConnectionProfile request.
      properties:
        hierarchyDepth:
          description: >-
            The number of hierarchy levels below the current level to be
            retrieved.
          format: int32
          type: integer
        fullHierarchy:
          description: >-
            Whether to retrieve the full hierarchy of data objects (TRUE) or
            only the current level (FALSE).
          type: boolean
        oracleRdbms:
          $ref: '#/components/schemas/OracleRdbms'
          description: Oracle RDBMS to enrich with child data objects and metadata.
        postgresqlRdbms:
          description: PostgreSQL RDBMS to enrich with child data objects and metadata.
          $ref: '#/components/schemas/PostgresqlRdbms'
        mysqlRdbms:
          description: MySQL RDBMS to enrich with child data objects and metadata.
          $ref: '#/components/schemas/MysqlRdbms'
        connectionProfile:
          description: An ad-hoc connection profile configuration.
          $ref: '#/components/schemas/ConnectionProfile'
        connectionProfileName:
          type: string
          description: A reference to an existing connection profile.
      type: object
    CancelOperationRequest:
      properties: {}
      type: object
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
    MysqlTable:
      properties:
        table:
          description: Table name.
          type: string
        mysqlColumns:
          type: array
          description: >-
            MySQL columns in the database. When unspecified as part of
            include/exclude objects, includes/excludes everything.
          items:
            $ref: '#/components/schemas/MysqlColumn'
      type: object
      id: MysqlTable
      description: MySQL table.
    ForwardSshTunnelConnectivity:
      properties:
        privateKey:
          description: Input only. SSH private key.
          type: string
        password:
          type: string
          description: Input only. SSH password.
        username:
          description: Required. Username for the SSH tunnel.
          type: string
        port:
          type: integer
          format: int32
          description: Port for the SSH tunnel, default value is 22.
        hostname:
          description: Required. Hostname for the SSH tunnel.
          type: string
      type: object
      id: ForwardSshTunnelConnectivity
      description: Forward SSH Tunnel connectivity.
    MysqlSslConfig:
      properties:
        clientCertificateSet:
          description: Output only. Indicates whether the client_certificate field is set.
          readOnly: true
          type: boolean
        clientCertificate:
          description: >-
            Input only. PEM-encoded certificate that will be used by the replica
            to authenticate against the source database server. If this field is
            used then the 'client_key' and the 'ca_certificate' fields are
            mandatory.
          type: string
        caCertificate:
          type: string
          description: >-
            Input only. PEM-encoded certificate of the CA that signed the source
            database server's certificate.
        clientKey:
          description: >-
            Input only. PEM-encoded private key associated with the Client
            Certificate. If this field is used then the 'client_certificate' and
            the 'ca_certificate' fields are mandatory.
          type: string
        caCertificateSet:
          readOnly: true
          type: boolean
          description: Output only. Indicates whether the ca_certificate field is set.
        clientKeySet:
          readOnly: true
          type: boolean
          description: Output only. Indicates whether the client_key field is set.
      type: object
      id: MysqlSslConfig
      description: MySQL SSL configuration information.
    MysqlSourceConfig:
      type: object
      properties:
        maxConcurrentBackfillTasks:
          type: integer
          description: >-
            Maximum number of concurrent backfill tasks. The number should be
            non negative. If not set (or set to 0), the system's default value
            will be used.
          format: int32
        includeObjects:
          description: MySQL objects to retrieve from the source.
          $ref: '#/components/schemas/MysqlRdbms'
        maxConcurrentCdcTasks:
          description: >-
            Maximum number of concurrent CDC tasks. The number should be non
            negative. If not set (or set to 0), the system's default value will
            be used.
          type: integer
          format: int32
        excludeObjects:
          $ref: '#/components/schemas/MysqlRdbms'
          description: MySQL objects to exclude from the stream.
      description: MySQL source configuration
      id: MysqlSourceConfig
    LookupStreamObjectRequest:
      description: >-
        Request for looking up a specific stream object by its source object
        identifier.
      properties:
        sourceObjectIdentifier:
          description: >-
            Required. The source object identifier which maps to the stream
            object.
          $ref: '#/components/schemas/SourceObjectIdentifier'
      type: object
      id: LookupStreamObjectRequest
    PrivateConnection:
      description: >-
        The PrivateConnection resource is used to establish private connectivity
        between Datastream and a customer's network.
      properties:
        state:
          enumDescriptions:
            - Unspecified state.
            - The private connection is in creation state - creating resources.
            - The private connection has been created with all of its resources.
            - The private connection creation has failed.
            - The private connection is being deleted.
            - Delete request has failed, resource is in invalid state.
          readOnly: true
          type: string
          description: Output only. The state of the Private Connection.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - CREATED
            - FAILED
            - DELETING
            - FAILED_TO_DELETE
        updateTime:
          readOnly: true
          description: Output only. The update time of the resource.
          format: google-datetime
          type: string
        displayName:
          type: string
          description: Required. Display name.
        vpcPeeringConfig:
          description: VPC Peering Config.
          $ref: '#/components/schemas/VpcPeeringConfig'
        error:
          $ref: '#/components/schemas/Error'
          description: >-
            Output only. In case of error, the details of the error in a
            user-friendly format.
          readOnly: true
        labels:
          description: Labels.
          type: object
          additionalProperties:
            type: string
        createTime:
          type: string
          format: google-datetime
          description: Output only. The create time of the resource.
          readOnly: true
        name:
          readOnly: true
          type: string
          description: Output only. The resource's name.
      type: object
      id: PrivateConnection
    ListStreamObjectsResponse:
      description: Response containing the objects for a stream.
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page.
        streamObjects:
          description: List of stream objects.
          items:
            $ref: '#/components/schemas/StreamObject'
          type: array
      id: ListStreamObjectsResponse
    OracleRdbms:
      id: OracleRdbms
      description: Oracle database structure.
      type: object
      properties:
        oracleSchemas:
          items:
            $ref: '#/components/schemas/OracleSchema'
          type: array
          description: Oracle schemas/databases in the database server.
    BackfillJob:
      id: BackfillJob
      description: Represents a backfill job on a specific stream object.
      type: object
      properties:
        errors:
          description: Output only. Errors which caused the backfill job to fail.
          readOnly: true
          items:
            $ref: '#/components/schemas/Error'
          type: array
        trigger:
          enum:
            - TRIGGER_UNSPECIFIED
            - AUTOMATIC
            - MANUAL
          enumDescriptions:
            - Default value.
            - >-
              Object backfill job was triggered automatically according to the
              stream's backfill strategy.
            - >-
              Object backfill job was triggered manually using the dedicated
              API.
          description: Backfill job's triggering reason.
          type: string
        lastEndTime:
          description: Output only. Backfill job's end time.
          type: string
          readOnly: true
          format: google-datetime
        state:
          enumDescriptions:
            - Default value.
            - >-
              Backfill job was never started for the stream object (stream has
              backfill strategy defined as manual or object was explicitly
              excluded from automatic backfill).
            - Backfill job will start pending available resources.
            - Backfill job is running.
            - Backfill job stopped (next job run will start from beginning).
            - Backfill job failed (due to an error).
            - Backfill completed successfully.
            - >-
              Backfill job failed since the table structure is currently
              unsupported for backfill.
          readOnly: true
          description: Output only. Backfill job state.
          enum:
            - STATE_UNSPECIFIED
            - NOT_STARTED
            - PENDING
            - ACTIVE
            - STOPPED
            - FAILED
            - COMPLETED
            - UNSUPPORTED
          type: string
        lastStartTime:
          description: Output only. Backfill job's start time.
          type: string
          format: google-datetime
          readOnly: true
    PostgresqlRdbms:
      id: PostgresqlRdbms
      description: PostgreSQL database structure.
      properties:
        postgresqlSchemas:
          type: array
          items:
            $ref: '#/components/schemas/PostgresqlSchema'
          description: PostgreSQL schemas in the database server.
      type: object
    Empty:
      properties: {}
      type: object
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    Operation:
      type: object
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
        response:
          type: object
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      id: Operation
    OracleSourceConfig:
      description: Oracle data source configuration
      type: object
      id: OracleSourceConfig
      properties:
        excludeObjects:
          $ref: '#/components/schemas/OracleRdbms'
          description: Oracle objects to exclude from the stream.
        streamLargeObjects:
          $ref: '#/components/schemas/StreamLargeObjects'
          description: >-
            Stream large object values. NOTE: This feature is currently
            experimental.
        includeObjects:
          description: Oracle objects to include in the stream.
          $ref: '#/components/schemas/OracleRdbms'
        dropLargeObjects:
          $ref: '#/components/schemas/DropLargeObjects'
          description: Drop large object values.
        maxConcurrentCdcTasks:
          description: >-
            Maximum number of concurrent CDC tasks. The number should be
            non-negative. If not set (or set to 0), the system's default value
            is used.
          format: int32
          type: integer
        maxConcurrentBackfillTasks:
          description: >-
            Maximum number of concurrent backfill tasks. The number should be
            non-negative. If not set (or set to 0), the system's default value
            is used.
          format: int32
          type: integer
    BackfillNoneStrategy:
      type: object
      id: BackfillNoneStrategy
      description: >-
        Backfill strategy to disable automatic backfill for the Stream's
        objects.
      properties: {}
    StartBackfillJobRequest:
      properties: {}
      type: object
      description: >-
        Request for manually initiating a backfill job for a specific stream
        object.
      id: StartBackfillJobRequest
    Location:
      description: A resource that represents a Google Cloud location.
      id: Location
      type: object
      properties:
        displayName:
          type: string
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
    AvroFileFormat:
      properties: {}
      description: AVRO file format configuration.
      type: object
      id: AvroFileFormat
    BigQueryProfile:
      type: object
      description: BigQuery warehouse profile.
      properties: {}
      id: BigQueryProfile
    ListConnectionProfilesResponse:
      properties:
        connectionProfiles:
          description: List of connection profiles.
          type: array
          items:
            $ref: '#/components/schemas/ConnectionProfile'
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
      description: Response message for listing connection profiles.
      id: ListConnectionProfilesResponse
      type: object
    SourceConfig:
      id: SourceConfig
      properties:
        oracleSourceConfig:
          $ref: '#/components/schemas/OracleSourceConfig'
          description: Oracle data source configuration.
        sourceConnectionProfile:
          description: >-
            Required. Source connection profile resoource. Format:
            `projects/{project}/locations/{location}/connectionProfiles/{name}`
          type: string
        postgresqlSourceConfig:
          $ref: '#/components/schemas/PostgresqlSourceConfig'
          description: PostgreSQL data source configuration.
        mysqlSourceConfig:
          $ref: '#/components/schemas/MysqlSourceConfig'
          description: MySQL data source configuration.
      description: The configuration of the stream source.
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      id: ListOperationsResponse
    ValidationResult:
      description: Contains the current validation results.
      id: ValidationResult
      type: object
      properties:
        validations:
          items:
            $ref: '#/components/schemas/Validation'
          type: array
          description: >-
            A list of validations (includes both executed as well as not
            executed validations).
    Validation:
      type: object
      properties:
        state:
          readOnly: true
          enumDescriptions:
            - Unspecified state.
            - Validation did not execute.
            - Validation failed.
            - Validation passed.
          enum:
            - STATE_UNSPECIFIED
            - NOT_EXECUTED
            - FAILED
            - PASSED
          type: string
          description: Output only. Validation execution status.
        message:
          description: Messages reflecting the validation results.
          type: array
          items:
            $ref: '#/components/schemas/ValidationMessage'
        code:
          description: A custom code identifying this validation.
          type: string
        description:
          description: A short description of the validation.
          type: string
      description: A validation to perform on a stream.
      id: Validation
    PostgresqlSchema:
      description: PostgreSQL schema.
      properties:
        postgresqlTables:
          type: array
          items:
            $ref: '#/components/schemas/PostgresqlTable'
          description: Tables in the schema.
        schema:
          type: string
          description: Schema name.
      id: PostgresqlSchema
      type: object
    JsonFileFormat:
      type: object
      id: JsonFileFormat
      description: JSON file format configuration.
      properties:
        compression:
          description: Compression of the loaded JSON file.
          enum:
            - JSON_COMPRESSION_UNSPECIFIED
            - NO_COMPRESSION
            - GZIP
          enumDescriptions:
            - Unspecified json file compression.
            - Do not compress JSON file.
            - Gzip compression.
          type: string
        schemaFileFormat:
          enum:
            - SCHEMA_FILE_FORMAT_UNSPECIFIED
            - NO_SCHEMA_FILE
            - AVRO_SCHEMA_FILE
          enumDescriptions:
            - Unspecified schema file format.
            - Do not attach schema file.
            - Avro schema format.
          description: The schema file format along JSON data files.
          type: string
    BackfillAllStrategy:
      description: >-
        Backfill strategy to automatically backfill the Stream's objects.
        Specific objects can be excluded.
      properties:
        mysqlExcludedObjects:
          description: MySQL data source objects to avoid backfilling.
          $ref: '#/components/schemas/MysqlRdbms'
        postgresqlExcludedObjects:
          description: PostgreSQL data source objects to avoid backfilling.
          $ref: '#/components/schemas/PostgresqlRdbms'
        oracleExcludedObjects:
          $ref: '#/components/schemas/OracleRdbms'
          description: Oracle data source objects to avoid backfilling.
      type: object
      id: BackfillAllStrategy
    PostgresqlSourceConfig:
      properties:
        publication:
          type: string
          description: >-
            Required. The name of the publication that includes the set of all
            tables that are defined in the stream's include_objects.
        replicationSlot:
          type: string
          description: >-
            Required. Immutable. The name of the logical replication slot that's
            configured with the pgoutput plugin.
        includeObjects:
          description: PostgreSQL objects to include in the stream.
          $ref: '#/components/schemas/PostgresqlRdbms'
        maxConcurrentBackfillTasks:
          format: int32
          type: integer
          description: >-
            Maximum number of concurrent backfill tasks. The number should be
            non negative. If not set (or set to 0), the system's default value
            will be used.
        excludeObjects:
          $ref: '#/components/schemas/PostgresqlRdbms'
          description: PostgreSQL objects to exclude from the stream.
      type: object
      description: PostgreSQL data source configuration
      id: PostgresqlSourceConfig
    PostgresqlObjectIdentifier:
      description: PostgreSQL data source object identifier.
      type: object
      properties:
        schema:
          description: Required. The schema name.
          type: string
        table:
          description: Required. The table name.
          type: string
      id: PostgresqlObjectIdentifier
    PostgresqlProfile:
      type: object
      description: PostgreSQL database profile.
      properties:
        password:
          description: Required. Password for the PostgreSQL connection.
          type: string
        database:
          type: string
          description: Required. Database for the PostgreSQL connection.
        username:
          type: string
          description: Required. Username for the PostgreSQL connection.
        port:
          format: int32
          description: Port for the PostgreSQL connection, default value is 5432.
          type: integer
        hostname:
          description: Required. Hostname for the PostgreSQL connection.
          type: string
      id: PostgresqlProfile
    ListRoutesResponse:
      type: object
      properties:
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        routes:
          items:
            $ref: '#/components/schemas/Route'
          description: List of Routes.
          type: array
      description: Route list response.
      id: ListRoutesResponse
    OracleColumn:
      id: OracleColumn
      properties:
        column:
          description: Column name.
          type: string
        precision:
          format: int32
          description: Column precision.
          type: integer
        primaryKey:
          description: Whether or not the column represents a primary key.
          type: boolean
        nullable:
          description: Whether or not the column can accept a null value.
          type: boolean
        scale:
          format: int32
          type: integer
          description: Column scale.
        length:
          format: int32
          type: integer
          description: Column length.
        ordinalPosition:
          description: The ordinal position of the column in the table.
          type: integer
          format: int32
        encoding:
          type: string
          description: Column encoding.
        dataType:
          description: The Oracle data type.
          type: string
      description: Oracle Column.
      type: object
    PostgresqlColumn:
      properties:
        precision:
          description: Column precision.
          type: integer
          format: int32
        primaryKey:
          description: Whether or not the column represents a primary key.
          type: boolean
        nullable:
          type: boolean
          description: Whether or not the column can accept a null value.
        dataType:
          description: The PostgreSQL data type.
          type: string
        length:
          format: int32
          type: integer
          description: Column length.
        column:
          type: string
          description: Column name.
        scale:
          type: integer
          format: int32
          description: Column scale.
        ordinalPosition:
          description: The ordinal position of the column in the table.
          type: integer
          format: int32
      description: PostgreSQL Column.
      id: PostgresqlColumn
      type: object
    SingleTargetDataset:
      properties:
        datasetId:
          description: >-
            The dataset ID of the target dataset. DatasetIds allowed characters:
            https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets#datasetreference.
          type: string
      description: A single target dataset to which all data will be streamed.
      id: SingleTargetDataset
      type: object
    ListLocationsResponse:
      id: ListLocationsResponse
      type: object
      description: The response message for Locations.ListLocations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
          description: >-
            A list of locations that matches the specified filter in the
            request.
    GcsDestinationConfig:
      id: GcsDestinationConfig
      description: Google Cloud Storage destination configuration
      type: object
      properties:
        avroFileFormat:
          description: AVRO file format configuration.
          $ref: '#/components/schemas/AvroFileFormat'
        path:
          description: Path inside the Cloud Storage bucket to write data to.
          type: string
        fileRotationInterval:
          format: google-duration
          description: >-
            The maximum duration for which new events are added before a file is
            closed and a new file is created. Values within the range of 15-60
            seconds are allowed.
          type: string
        fileRotationMb:
          format: int32
          description: The maximum file size to be saved in the bucket.
          type: integer
        jsonFileFormat:
          description: JSON file format configuration.
          $ref: '#/components/schemas/JsonFileFormat'
    ListPrivateConnectionsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        privateConnections:
          type: array
          description: List of private connectivity configurations.
          items:
            $ref: '#/components/schemas/PrivateConnection'
      type: object
      id: ListPrivateConnectionsResponse
      description: Response containing a list of private connection configurations.
    OracleTable:
      id: OracleTable
      type: object
      properties:
        oracleColumns:
          description: >-
            Oracle columns in the schema. When unspecified as part of
            include/exclude objects, includes/excludes everything.
          type: array
          items:
            $ref: '#/components/schemas/OracleColumn'
        table:
          type: string
          description: Table name.
      description: Oracle table.
    ValidationMessage:
      type: object
      properties:
        level:
          enum:
            - LEVEL_UNSPECIFIED
            - WARNING
            - ERROR
          enumDescriptions:
            - Unspecified level.
            - Potentially cause issues with the Stream.
            - Definitely cause issues with the Stream.
          description: Message severity level (warning or error).
          type: string
        message:
          type: string
          description: The result of the validation.
        metadata:
          description: Additional metadata related to the result.
          type: object
          additionalProperties:
            type: string
        code:
          type: string
          description: A custom code identifying this specific message.
      id: ValidationMessage
      description: Represent user-facing validation result message.
    StopBackfillJobResponse:
      description: Response for manually stop a backfill job for a specific stream object.
      properties:
        object:
          description: The stream object resource the backfill job was stopped for.
          $ref: '#/components/schemas/StreamObject'
      id: StopBackfillJobResponse
      type: object
    StreamLargeObjects:
      id: StreamLargeObjects
      type: object
      properties: {}
      description: Configuration to stream large object values.
    OracleProfile:
      description: Oracle database profile.
      properties:
        password:
          description: Required. Password for the Oracle connection.
          type: string
        username:
          type: string
          description: Required. Username for the Oracle connection.
        port:
          description: Port for the Oracle connection, default value is 1521.
          format: int32
          type: integer
        hostname:
          type: string
          description: Required. Hostname for the Oracle connection.
        databaseService:
          description: Required. Database for the Oracle connection.
          type: string
        connectionAttributes:
          description: Connection string attributes
          type: object
          additionalProperties:
            type: string
      id: OracleProfile
      type: object
    OracleSchema:
      description: Oracle schema.
      type: object
      properties:
        schema:
          description: Schema name.
          type: string
        oracleTables:
          type: array
          description: Tables in the schema.
          items:
            $ref: '#/components/schemas/OracleTable'
      id: OracleSchema
    MysqlColumn:
      description: MySQL Column.
      type: object
      id: MysqlColumn
      properties:
        dataType:
          description: >-
            The MySQL data type. Full data types list can be found here:
            https://dev.mysql.com/doc/refman/8.0/en/data-types.html
          type: string
        column:
          type: string
          description: Column name.
        primaryKey:
          type: boolean
          description: Whether or not the column represents a primary key.
        length:
          description: Column length.
          format: int32
          type: integer
        ordinalPosition:
          type: integer
          description: The ordinal position of the column in the table.
          format: int32
        nullable:
          type: boolean
          description: Whether or not the column can accept a null value.
        collation:
          description: Column collation.
          type: string
    OperationMetadata:
      type: object
      id: OperationMetadata
      properties:
        requestedCancellation:
          readOnly: true
          type: boolean
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
        validationResult:
          description: Output only. Results of executed validations if there are any.
          readOnly: true
          $ref: '#/components/schemas/ValidationResult'
        createTime:
          format: google-datetime
          type: string
          description: Output only. The time the operation was created.
          readOnly: true
        endTime:
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
        target:
          type: string
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          type: string
          readOnly: true
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
          readOnly: true
      description: Represents the metadata of the long-running operation.
    DestinationConfig:
      id: DestinationConfig
      description: The configuration of the stream destination.
      type: object
      properties:
        destinationConnectionProfile:
          description: >-
            Required. Destination connection profile resource. Format:
            `projects/{project}/locations/{location}/connectionProfiles/{name}`
          type: string
        bigqueryDestinationConfig:
          description: BigQuery destination configuration.
          $ref: '#/components/schemas/BigQueryDestinationConfig'
        gcsDestinationConfig:
          $ref: '#/components/schemas/GcsDestinationConfig'
          description: A configuration for how data should be loaded to Cloud Storage.
    DiscoverConnectionProfileResponse:
      properties:
        mysqlRdbms:
          description: Enriched MySQL RDBMS object.
          $ref: '#/components/schemas/MysqlRdbms'
        oracleRdbms:
          $ref: '#/components/schemas/OracleRdbms'
          description: Enriched Oracle RDBMS object.
        postgresqlRdbms:
          description: Enriched PostgreSQL RDBMS object.
          $ref: '#/components/schemas/PostgresqlRdbms'
      type: object
      id: DiscoverConnectionProfileResponse
      description: Response from a discover request.
    DropLargeObjects:
      properties: {}
      type: object
      description: Configuration to drop large object values.
      id: DropLargeObjects
    DatasetTemplate:
      type: object
      description: Dataset template used for dynamic dataset creation.
      id: DatasetTemplate
      properties:
        datasetIdPrefix:
          description: >-
            If supplied, every created dataset will have its name prefixed by
            the provided value. The prefix and name will be separated by an
            underscore. i.e. _.
          type: string
        kmsKeyName:
          description: >-
            Describes the Cloud KMS encryption key that will be used to protect
            destination BigQuery table. The BigQuery Service Account associated
            with your project requires access to this encryption key. i.e.
            projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{cryptoKey}.
            See
            https://cloud.google.com/bigquery/docs/customer-managed-encryption
            for more information.
          type: string
        location:
          type: string
          description: >-
            Required. The geographic location where the dataset should reside.
            See https://cloud.google.com/bigquery/docs/locations for supported
            locations.
    OracleObjectIdentifier:
      type: object
      description: Oracle data source object identifier.
      id: OracleObjectIdentifier
      properties:
        table:
          type: string
          description: Required. The table name.
        schema:
          description: Required. The schema name.
          type: string
    PostgresqlTable:
      properties:
        table:
          description: Table name.
          type: string
        postgresqlColumns:
          description: >-
            PostgreSQL columns in the schema. When unspecified as part of
            include/exclude objects, includes/excludes everything.
          items:
            $ref: '#/components/schemas/PostgresqlColumn'
          type: array
      id: PostgresqlTable
      description: PostgreSQL table.
      type: object
    MysqlDatabase:
      properties:
        mysqlTables:
          items:
            $ref: '#/components/schemas/MysqlTable'
          type: array
          description: Tables in the database.
        database:
          description: Database name.
          type: string
      id: MysqlDatabase
      type: object
      description: MySQL database.
    GcsProfile:
      description: Cloud Storage bucket profile.
      properties:
        rootPath:
          type: string
          description: The root path inside the Cloud Storage bucket.
        bucket:
          type: string
          description: Required. The Cloud Storage bucket name.
      type: object
      id: GcsProfile
    StopBackfillJobRequest:
      properties: {}
      description: >-
        Request for manually stopping a running backfill job for a specific
        stream object.
      id: StopBackfillJobRequest
      type: object
    PrivateConnectivity:
      id: PrivateConnectivity
      type: object
      description: Private Connectivity
      properties:
        privateConnection:
          description: >-
            Required. A reference to a private connection resource. Format:
            `projects/{project}/locations/{location}/privateConnections/{name}`
          type: string
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      properties:
        details:
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        code:
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
      type: object
    StartBackfillJobResponse:
      description: >-
        Response for manually initiating a backfill job for a specific stream
        object.
      id: StartBackfillJobResponse
      properties:
        object:
          $ref: '#/components/schemas/StreamObject'
          description: The stream object resource a backfill job was started for.
      type: object
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
    get:
      description: Gets information about a location.
      operationId: datastream.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps:
    parameters: *ref_1
    get:
      description: >-
        The FetchStaticIps API call exposes the static IP addresses used by
        Datastream.
      operationId: datastream.projects.locations.fetchStaticIps
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchStaticIpsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations__static_ips
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: datastream.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:discover:
    parameters: *ref_1
    post:
      description: >-
        Use this method to discover a connection profile. The discover API call
        exposes the data objects and metadata belonging to the profile.
        Typically, a request returns children data objects of a parent data
        object that's optionally supplied in the request.
      operationId: datastream.projects.locations.connectionProfiles.discover
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoverConnectionProfileRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverConnectionProfileResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:
    parameters: *ref_1
    post:
      description: >-
        Use this method to create a connection profile in a project and
        location.
      operationId: datastream.projects.locations.connectionProfiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: connectionProfileId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: insert
    get:
      description: >-
        Use this method to list connection profiles created in a project and
        location.
      operationId: datastream.projects.locations.connectionProfiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionProfilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:
    parameters: *ref_1
    get:
      description: Use this method to get details about a connection profile.
      operationId: datastream.projects.locations.connectionProfiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionProfile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: select
    delete:
      description: Use this method to delete a connection profile.
      operationId: datastream.projects.locations.connectionProfiles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: delete
    patch:
      description: Use this method to update the parameters of a connection profile.
      operationId: datastream.projects.locations.connectionProfiles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: connectionProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: connection_profiles
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: datastream.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: datastream.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: datastream.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: datastream.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/privateConnections:
    parameters: *ref_1
    get:
      description: >-
        Use this method to list private connectivity configurations in a project
        and location.
      operationId: datastream.projects.locations.privateConnections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrivateConnectionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-verb: select
    post:
      description: Use this method to create a private connectivity configuration.
      operationId: datastream.projects.locations.privateConnections.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateConnection'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: privateConnectionId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:
    parameters: *ref_1
    get:
      description: >-
        Use this method to get details about a private connectivity
        configuration.
      operationId: datastream.projects.locations.privateConnections.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateConnection'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: private_connections
      x-stackQL-verb: select
    delete:
      description: Use this method to delete a private connectivity configuration.
      operationId: datastream.projects.locations.privateConnections.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: private_connections
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}:
    parameters: *ref_1
    get:
      description: Use this method to get details about a route.
      operationId: datastream.projects.locations.privateConnections.routes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: path
          name: routesId
          required: true
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-verb: select
    delete:
      description: Use this method to delete a route.
      operationId: datastream.projects.locations.privateConnections.routes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: path
          name: routesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes:
    parameters: *ref_1
    post:
      description: >-
        Use this method to create a route for a private connectivity
        configuration in a project and location.
      operationId: datastream.projects.locations.privateConnections.routes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: routeId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-verb: insert
    get:
      description: >-
        Use this method to list routes created for a private connectivity
        configuration in a project and location.
      operationId: datastream.projects.locations.privateConnections.routes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: privateConnectionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/streams:
    parameters: *ref_1
    get:
      description: Use this method to list streams in a project and location.
      operationId: datastream.projects.locations.streams.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: streams
      x-stackQL-verb: select
    post:
      description: Use this method to create a stream.
      operationId: datastream.projects.locations.streams.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stream'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: streamId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
      x-stackQL-resource: streams
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}:
    parameters: *ref_1
    get:
      description: Use this method to get details about a stream.
      operationId: datastream.projects.locations.streams.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
      x-stackQL-resource: streams
      x-stackQL-verb: select
    delete:
      description: Use this method to delete a stream.
      operationId: datastream.projects.locations.streams.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: streams
      x-stackQL-verb: delete
    patch:
      description: Use this method to update the configuration of a stream.
      operationId: datastream.projects.locations.streams.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stream'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: cdcStrategy.specificStartPosition.mysqlLogPosition.logFile
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: cdcStrategy.specificStartPosition.mysqlLogPosition.logPosition
          schema:
            type: integer
      x-stackQL-resource: streams
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:startBackfillJob:
    parameters: *ref_1
    post:
      description: Use this method to start a backfill job for the specified stream object.
      operationId: datastream.projects.locations.streams.objects.startBackfillJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartBackfillJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartBackfillJobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
        - in: path
          name: objectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects:
    parameters: *ref_1
    get:
      description: Use this method to list the objects of a specific stream.
      operationId: datastream.projects.locations.streams.objects.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamObjectsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: objects
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:stopBackfillJob:
    parameters: *ref_1
    post:
      description: Use this method to stop a backfill job for the specified stream object.
      operationId: datastream.projects.locations.streams.objects.stopBackfillJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopBackfillJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopBackfillJobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
        - in: path
          name: objectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:
    parameters: *ref_1
    get:
      description: Use this method to get details about a stream object.
      operationId: datastream.projects.locations.streams.objects.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamObject'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
        - in: path
          name: objectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects:lookup:
    parameters: *ref_1
    post:
      description: >-
        Use this method to look up a stream object by its source object
        identifier.
      operationId: datastream.projects.locations.streams.objects.lookup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupStreamObjectRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamObject'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: streamsId
          required: true
          schema:
            type: string
      x-stackQL-resource: objects
      x-stackQL-verb: exec
