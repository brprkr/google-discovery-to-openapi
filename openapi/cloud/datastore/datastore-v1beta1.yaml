openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Datastore API
  description: >-
    Accesses the schemaless NoSQL database to provide fully managed, robust,
    scalable storage for your application. 
  version: v1beta1
  x-discovery-doc-revision: '20230611'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/datastore/
servers:
  - url: https://datastore.googleapis.com
components:
  schemas:
    GoogleDatastoreAdminV1Progress:
      id: GoogleDatastoreAdminV1Progress
      type: object
      properties:
        workEstimated:
          type: string
          format: int64
          description: >-
            An estimate of how much work needs to be performed. May be zero if
            the work estimate is unavailable.
        workCompleted:
          format: int64
          description: >-
            The amount of work that has been completed. Note that this may be
            greater than work_estimated.
          type: string
      description: Measures the progress of a particular metric.
    GoogleDatastoreAdminV1PrepareStepDetails:
      type: object
      properties:
        concurrencyMode:
          enum:
            - CONCURRENCY_MODE_UNSPECIFIED
            - PESSIMISTIC
            - OPTIMISTIC
            - OPTIMISTIC_WITH_ENTITY_GROUPS
          enumDescriptions:
            - Unspecified.
            - Pessimistic concurrency.
            - Optimistic concurrency.
            - Optimistic concurrency with entity groups.
          type: string
          description: >-
            The concurrency mode this database will use when it reaches the
            `REDIRECT_WRITES` step.
      id: GoogleDatastoreAdminV1PrepareStepDetails
      description: Details for the `PREPARE` step.
    GoogleDatastoreAdminV1ExportEntitiesMetadata:
      type: object
      properties:
        outputUrlPrefix:
          type: string
          description: >-
            Location for the export metadata and data files. This will be the
            same value as the
            google.datastore.admin.v1.ExportEntitiesRequest.output_url_prefix
            field. The final output location is provided in
            google.datastore.admin.v1.ExportEntitiesResponse.output_url.
        progressBytes:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1Progress'
          description: An estimate of the number of bytes processed.
        common:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1CommonMetadata'
          description: Metadata common to all Datastore Admin operations.
        progressEntities:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1Progress'
          description: An estimate of the number of entities processed.
        entityFilter:
          description: Description of which entities are being exported.
          $ref: '#/components/schemas/GoogleDatastoreAdminV1EntityFilter'
      id: GoogleDatastoreAdminV1ExportEntitiesMetadata
      description: Metadata for ExportEntities operations.
    GoogleDatastoreAdminV1beta1EntityFilter:
      type: object
      description: >-
        Identifies a subset of entities in a project. This is specified as
        combinations of kinds and namespaces (either or both of which may be
        all, as described in the following examples). Example usage: Entire
        project: kinds=[], namespace_ids=[] Kinds Foo and Bar in all namespaces:
        kinds=['Foo', 'Bar'], namespace_ids=[] Kinds Foo and Bar only in the
        default namespace: kinds=['Foo', 'Bar'], namespace_ids=[''] Kinds Foo
        and Bar in both the default and Baz namespaces: kinds=['Foo', 'Bar'],
        namespace_ids=['', 'Baz'] The entire Baz namespace: kinds=[],
        namespace_ids=['Baz']
      id: GoogleDatastoreAdminV1beta1EntityFilter
      properties:
        namespaceIds:
          type: array
          description: >-
            An empty list represents all namespaces. This is the preferred usage
            for projects that don't use namespaces. An empty string element
            represents the default namespace. This should be used if the project
            has data in non-default namespaces, but doesn't want to include
            them. Each namespace in this list must be unique.
          items:
            type: string
        kinds:
          type: array
          description: If empty, then this represents all kinds.
          items:
            type: string
    GoogleDatastoreAdminV1beta1Progress:
      description: Measures the progress of a particular metric.
      id: GoogleDatastoreAdminV1beta1Progress
      properties:
        workEstimated:
          format: int64
          type: string
          description: >-
            An estimate of how much work needs to be performed. May be zero if
            the work estimate is unavailable.
        workCompleted:
          format: int64
          description: >-
            The amount of work that has been completed. Note that this may be
            greater than work_estimated.
          type: string
      type: object
    Status:
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          type: array
      id: Status
      type: object
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
    GoogleDatastoreAdminV1ExportEntitiesResponse:
      type: object
      properties:
        outputUrl:
          description: >-
            Location of the output metadata file. This can be used to begin an
            import into Cloud Datastore (this project or another project). See
            google.datastore.admin.v1.ImportEntitiesRequest.input_url. Only
            present if the operation completed successfully.
          type: string
      description: >-
        The response for
        google.datastore.admin.v1.DatastoreAdmin.ExportEntities.
      id: GoogleDatastoreAdminV1ExportEntitiesResponse
    GoogleDatastoreAdminV1IndexOperationMetadata:
      type: object
      description: Metadata for Index operations.
      properties:
        indexId:
          description: The index resource ID that this operation is acting on.
          type: string
        progressEntities:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1Progress'
          description: An estimate of the number of entities processed.
        common:
          description: Metadata common to all Datastore Admin operations.
          $ref: '#/components/schemas/GoogleDatastoreAdminV1CommonMetadata'
      id: GoogleDatastoreAdminV1IndexOperationMetadata
    GoogleDatastoreAdminV1beta1CommonMetadata:
      type: object
      properties:
        startTime:
          format: google-datetime
          description: The time that work began on the operation.
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            The client-assigned labels which were provided when the operation
            was created. May also include additional labels.
        endTime:
          format: google-datetime
          description: The time the operation ended, either successfully or otherwise.
          type: string
        state:
          type: string
          description: The current state of the Operation.
          enumDescriptions:
            - Unspecified.
            - Request is being prepared for processing.
            - Request is actively being processed.
            - >-
              Request is in the process of being cancelled after user called
              google.longrunning.Operations.CancelOperation on the operation.
            - Request has been processed and is in its finalization stage.
            - Request has completed successfully.
            - Request has finished being processed, but encountered an error.
            - >-
              Request has finished being cancelled after user called
              google.longrunning.Operations.CancelOperation.
          enum:
            - STATE_UNSPECIFIED
            - INITIALIZING
            - PROCESSING
            - CANCELLING
            - FINALIZING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
        operationType:
          enumDescriptions:
            - Unspecified.
            - ExportEntities.
            - ImportEntities.
          type: string
          description: >-
            The type of the operation. Can be used as a filter in
            ListOperationsRequest.
          enum:
            - OPERATION_TYPE_UNSPECIFIED
            - EXPORT_ENTITIES
            - IMPORT_ENTITIES
      description: Metadata common to all Datastore Admin operations.
      id: GoogleDatastoreAdminV1beta1CommonMetadata
    GoogleDatastoreAdminV1RedirectWritesStepDetails:
      type: object
      id: GoogleDatastoreAdminV1RedirectWritesStepDetails
      properties:
        concurrencyMode:
          enumDescriptions:
            - Unspecified.
            - Pessimistic concurrency.
            - Optimistic concurrency.
            - Optimistic concurrency with entity groups.
          enum:
            - CONCURRENCY_MODE_UNSPECIFIED
            - PESSIMISTIC
            - OPTIMISTIC
            - OPTIMISTIC_WITH_ENTITY_GROUPS
          description: Ths concurrency mode for this database.
          type: string
      description: Details for the `REDIRECT_WRITES` step.
    GoogleDatastoreAdminV1beta1ImportEntitiesRequest:
      properties:
        labels:
          type: object
          description: Client-assigned labels.
          additionalProperties:
            type: string
        entityFilter:
          description: >-
            Optionally specify which kinds/namespaces are to be imported. If
            provided, the list must be a subset of the EntityFilter used in
            creating the export, otherwise a FAILED_PRECONDITION error will be
            returned. If no filter is specified then all entities from the
            export are imported.
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1EntityFilter'
        inputUrl:
          type: string
          description: >-
            The full resource URL of the external storage location. Currently,
            only Google Cloud Storage is supported. So input_url should be of
            the form:
            `gs://BUCKET_NAME[/NAMESPACE_PATH]/OVERALL_EXPORT_METADATA_FILE`,
            where `BUCKET_NAME` is the name of the Cloud Storage bucket,
            `NAMESPACE_PATH` is an optional Cloud Storage namespace path (this
            is not a Cloud Datastore namespace), and
            `OVERALL_EXPORT_METADATA_FILE` is the metadata file written by the
            ExportEntities operation. For more information about Cloud Storage
            namespace paths, see [Object name
            considerations](https://cloud.google.com/storage/docs/naming#object-considerations).
            For more information, see
            google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url.
      description: >-
        The request for
        google.datastore.admin.v1beta1.DatastoreAdmin.ImportEntities.
      id: GoogleDatastoreAdminV1beta1ImportEntitiesRequest
      type: object
    GoogleDatastoreAdminV1MigrationStateEvent:
      properties:
        state:
          enumDescriptions:
            - Unspecified.
            - The migration is running.
            - The migration is paused.
            - The migration is complete.
          type: string
          description: The new state of the migration.
          enum:
            - MIGRATION_STATE_UNSPECIFIED
            - RUNNING
            - PAUSED
            - COMPLETE
      description: >-
        An event signifying a change in state of a [migration from Cloud
        Datastore to Cloud Firestore in Datastore
        mode](https://cloud.google.com/datastore/docs/upgrade-to-firestore).
      type: object
      id: GoogleDatastoreAdminV1MigrationStateEvent
    GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata:
      properties:
        migrationStep:
          enumDescriptions:
            - Unspecified.
            - 'Pre-migration: the database is prepared for migration.'
            - Start of migration.
            - Writes are applied synchronously to at least one replica.
            - >-
              Data is copied to Cloud Firestore and then verified to match the
              data in Cloud Datastore.
            - Eventually-consistent reads are redirected to Cloud Firestore.
            - Strongly-consistent reads are redirected to Cloud Firestore.
            - Writes are redirected to Cloud Firestore.
          type: string
          enum:
            - MIGRATION_STEP_UNSPECIFIED
            - PREPARE
            - START
            - APPLY_WRITES_SYNCHRONOUSLY
            - COPY_AND_VERIFY
            - REDIRECT_EVENTUALLY_CONSISTENT_READS
            - REDIRECT_STRONGLY_CONSISTENT_READS
            - REDIRECT_WRITES
          description: >-
            The current step of migration from Cloud Datastore to Cloud
            Firestore in Datastore mode.
        migrationState:
          enum:
            - MIGRATION_STATE_UNSPECIFIED
            - RUNNING
            - PAUSED
            - COMPLETE
          type: string
          description: >-
            The current state of migration from Cloud Datastore to Cloud
            Firestore in Datastore mode.
          enumDescriptions:
            - Unspecified.
            - The migration is running.
            - The migration is paused.
            - The migration is complete.
      description: >-
        Metadata for Datastore to Firestore migration operations. The
        DatastoreFirestoreMigration operation is not started by the end-user via
        an explicit "creation" method. This is an intentional deviation from the
        LRO design pattern. This singleton resource can be accessed at:
        "projects/{project_id}/operations/datastore-firestore-migration"
      type: object
      id: GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata
    GoogleDatastoreAdminV1beta1ExportEntitiesMetadata:
      properties:
        outputUrlPrefix:
          description: >-
            Location for the export metadata and data files. This will be the
            same value as the
            google.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix
            field. The final output location is provided in
            google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url.
          type: string
        progressEntities:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1Progress'
          description: An estimate of the number of entities processed.
        entityFilter:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1EntityFilter'
          description: Description of which entities are being exported.
        common:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1CommonMetadata'
          description: Metadata common to all Datastore Admin operations.
        progressBytes:
          description: An estimate of the number of bytes processed.
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1Progress'
      id: GoogleDatastoreAdminV1beta1ExportEntitiesMetadata
      description: Metadata for ExportEntities operations.
      type: object
    GoogleDatastoreAdminV1CommonMetadata:
      properties:
        state:
          enumDescriptions:
            - Unspecified.
            - Request is being prepared for processing.
            - Request is actively being processed.
            - >-
              Request is in the process of being cancelled after user called
              google.longrunning.Operations.CancelOperation on the operation.
            - Request has been processed and is in its finalization stage.
            - Request has completed successfully.
            - Request has finished being processed, but encountered an error.
            - >-
              Request has finished being cancelled after user called
              google.longrunning.Operations.CancelOperation.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - INITIALIZING
            - PROCESSING
            - CANCELLING
            - FINALIZING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
          description: The current state of the Operation.
        labels:
          description: >-
            The client-assigned labels which were provided when the operation
            was created. May also include additional labels.
          type: object
          additionalProperties:
            type: string
        endTime:
          format: google-datetime
          description: The time the operation ended, either successfully or otherwise.
          type: string
        startTime:
          format: google-datetime
          description: The time that work began on the operation.
          type: string
        operationType:
          enum:
            - OPERATION_TYPE_UNSPECIFIED
            - EXPORT_ENTITIES
            - IMPORT_ENTITIES
            - CREATE_INDEX
            - DELETE_INDEX
          description: >-
            The type of the operation. Can be used as a filter in
            ListOperationsRequest.
          enumDescriptions:
            - Unspecified.
            - ExportEntities.
            - ImportEntities.
            - CreateIndex.
            - DeleteIndex.
          type: string
      description: Metadata common to all Datastore Admin operations.
      id: GoogleDatastoreAdminV1CommonMetadata
      type: object
    GoogleLongrunningOperation:
      properties:
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          type: object
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
      id: GoogleLongrunningOperation
      type: object
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
    GoogleDatastoreAdminV1ImportEntitiesMetadata:
      type: object
      description: Metadata for ImportEntities operations.
      id: GoogleDatastoreAdminV1ImportEntitiesMetadata
      properties:
        entityFilter:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1EntityFilter'
          description: Description of which entities are being imported.
        progressEntities:
          description: An estimate of the number of entities processed.
          $ref: '#/components/schemas/GoogleDatastoreAdminV1Progress'
        common:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1CommonMetadata'
          description: Metadata common to all Datastore Admin operations.
        progressBytes:
          description: An estimate of the number of bytes processed.
          $ref: '#/components/schemas/GoogleDatastoreAdminV1Progress'
        inputUrl:
          type: string
          description: >-
            The location of the import metadata file. This will be the same
            value as the
            google.datastore.admin.v1.ExportEntitiesResponse.output_url field.
    GoogleDatastoreAdminV1beta1ImportEntitiesMetadata:
      type: object
      id: GoogleDatastoreAdminV1beta1ImportEntitiesMetadata
      properties:
        common:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1CommonMetadata'
          description: Metadata common to all Datastore Admin operations.
        progressBytes:
          description: An estimate of the number of bytes processed.
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1Progress'
        inputUrl:
          description: >-
            The location of the import metadata file. This will be the same
            value as the
            google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url
            field.
          type: string
        entityFilter:
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1EntityFilter'
          description: Description of which entities are being imported.
        progressEntities:
          description: An estimate of the number of entities processed.
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1Progress'
      description: Metadata for ImportEntities operations.
    GoogleDatastoreAdminV1beta1ExportEntitiesResponse:
      type: object
      id: GoogleDatastoreAdminV1beta1ExportEntitiesResponse
      properties:
        outputUrl:
          description: >-
            Location of the output metadata file. This can be used to begin an
            import into Cloud Datastore (this project or another project). See
            google.datastore.admin.v1beta1.ImportEntitiesRequest.input_url. Only
            present if the operation completed successfully.
          type: string
      description: >-
        The response for
        google.datastore.admin.v1beta1.DatastoreAdmin.ExportEntities.
    GoogleDatastoreAdminV1EntityFilter:
      properties:
        namespaceIds:
          description: >-
            An empty list represents all namespaces. This is the preferred usage
            for projects that don't use namespaces. An empty string element
            represents the default namespace. This should be used if the project
            has data in non-default namespaces, but doesn't want to include
            them. Each namespace in this list must be unique.
          type: array
          items:
            type: string
        kinds:
          type: array
          items:
            type: string
          description: If empty, then this represents all kinds.
      description: >-
        Identifies a subset of entities in a project. This is specified as
        combinations of kinds and namespaces (either or both of which may be
        all, as described in the following examples). Example usage: Entire
        project: kinds=[], namespace_ids=[] Kinds Foo and Bar in all namespaces:
        kinds=['Foo', 'Bar'], namespace_ids=[] Kinds Foo and Bar only in the
        default namespace: kinds=['Foo', 'Bar'], namespace_ids=[''] Kinds Foo
        and Bar in both the default and Baz namespaces: kinds=['Foo', 'Bar'],
        namespace_ids=['', 'Baz'] The entire Baz namespace: kinds=[],
        namespace_ids=['Baz']
      id: GoogleDatastoreAdminV1EntityFilter
      type: object
    GoogleDatastoreAdminV1MigrationProgressEvent:
      id: GoogleDatastoreAdminV1MigrationProgressEvent
      properties:
        prepareStepDetails:
          description: Details for the `PREPARE` step.
          $ref: '#/components/schemas/GoogleDatastoreAdminV1PrepareStepDetails'
        redirectWritesStepDetails:
          description: Details for the `REDIRECT_WRITES` step.
          $ref: '#/components/schemas/GoogleDatastoreAdminV1RedirectWritesStepDetails'
        step:
          enumDescriptions:
            - Unspecified.
            - 'Pre-migration: the database is prepared for migration.'
            - Start of migration.
            - Writes are applied synchronously to at least one replica.
            - >-
              Data is copied to Cloud Firestore and then verified to match the
              data in Cloud Datastore.
            - Eventually-consistent reads are redirected to Cloud Firestore.
            - Strongly-consistent reads are redirected to Cloud Firestore.
            - Writes are redirected to Cloud Firestore.
          description: >-
            The step that is starting. An event with step set to `START`
            indicates that the migration has been reverted back to the initial
            pre-migration state.
          enum:
            - MIGRATION_STEP_UNSPECIFIED
            - PREPARE
            - START
            - APPLY_WRITES_SYNCHRONOUSLY
            - COPY_AND_VERIFY
            - REDIRECT_EVENTUALLY_CONSISTENT_READS
            - REDIRECT_STRONGLY_CONSISTENT_READS
            - REDIRECT_WRITES
          type: string
      type: object
      description: >-
        An event signifying the start of a new step in a [migration from Cloud
        Datastore to Cloud Firestore in Datastore
        mode](https://cloud.google.com/datastore/docs/upgrade-to-firestore).
    GoogleDatastoreAdminV1beta1ExportEntitiesRequest:
      properties:
        outputUrlPrefix:
          description: >-
            Location for the export metadata and data files. The full resource
            URL of the external storage location. Currently, only Google Cloud
            Storage is supported. So output_url_prefix should be of the form:
            `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the name
            of the Cloud Storage bucket and `NAMESPACE_PATH` is an optional
            Cloud Storage namespace path (this is not a Cloud Datastore
            namespace). For more information about Cloud Storage namespace
            paths, see [Object name
            considerations](https://cloud.google.com/storage/docs/naming#object-considerations).
            The resulting files will be nested deeper than the specified URL
            prefix. The final output URL will be provided in the
            google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url
            field. That value should be used for subsequent ImportEntities
            operations. By nesting the data files deeper, the same Cloud Storage
            bucket can be used in multiple ExportEntities operations without
            conflict.
          type: string
        entityFilter:
          description: Description of what data from the project is included in the export.
          $ref: '#/components/schemas/GoogleDatastoreAdminV1beta1EntityFilter'
        labels:
          type: object
          description: Client-assigned labels.
          additionalProperties:
            type: string
      type: object
      id: GoogleDatastoreAdminV1beta1ExportEntitiesRequest
      description: >-
        The request for
        google.datastore.admin.v1beta1.DatastoreAdmin.ExportEntities.
  parameters:
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/datastore: View and manage your Google Cloud Datastore data
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta1/projects/{projectId}:export:
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
    post:
      description: >-
        Exports a copy of all or a subset of entities from Google Cloud
        Datastore to another storage system, such as Google Cloud Storage.
        Recent updates to entities may not be reflected in the export. The
        export occurs in the background and its progress can be monitored and
        managed via the Operation resource that is created. The output of an
        export may only be used once the associated operation is done. If an
        export operation is cancelled before completion it may leave partial
        data behind in Google Cloud Storage.
      operationId: datastore.projects.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleDatastoreAdminV1beta1ExportEntitiesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/datastore
          Oauth2c:
            - https://www.googleapis.com/auth/datastore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-verb: exec
  /v1beta1/projects/{projectId}:import:
    parameters: *ref_1
    post:
      description: >-
        Imports entities into Google Cloud Datastore. Existing entities with the
        same key are overwritten. The import occurs in the background and its
        progress can be monitored and managed via the Operation resource that is
        created. If an ImportEntities operation is cancelled, it is possible
        that a subset of the data has already been imported to Cloud Datastore.
      operationId: datastore.projects.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleDatastoreAdminV1beta1ImportEntitiesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/datastore
          Oauth2c:
            - https://www.googleapis.com/auth/datastore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-verb: exec
