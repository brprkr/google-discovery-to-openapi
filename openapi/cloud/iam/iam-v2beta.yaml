openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Identity and Access Management (IAM) API
  description: >-
    Manages identity and access control for Google Cloud Platform resources,
    including the creation of service accounts, which you can use to
    authenticate to Google and make API calls. 
  version: v2beta
  x-discovery-doc-revision: '20230608'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/iam/
servers:
  - url: https://iam.googleapis.com
components:
  schemas:
    GoogleIamV1LoggingAuditData:
      id: GoogleIamV1LoggingAuditData
      properties:
        policyDelta:
          description: Policy delta between the original policy and the newly set policy.
          $ref: '#/components/schemas/GoogleIamV1PolicyDelta'
      description: >-
        Audit log information specific to Cloud IAM. This message is serialized
        as an `Any` type in the `ServiceData` message of an `AuditLog` message.
      type: object
    GoogleIamV1PolicyDelta:
      id: GoogleIamV1PolicyDelta
      type: object
      description: The difference delta between two policies.
      properties:
        bindingDeltas:
          items:
            $ref: '#/components/schemas/GoogleIamV1BindingDelta'
          description: The delta for Bindings between two policies.
          type: array
    GoogleTypeExpr:
      properties:
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          type: string
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
        description:
          type: string
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      id: GoogleTypeExpr
    GoogleRpcStatus:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: GoogleRpcStatus
      type: object
      properties:
        details:
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
    GoogleIamAdminV1AuditData:
      type: object
      id: GoogleIamAdminV1AuditData
      properties:
        permissionDelta:
          description: The permission_delta when when creating or updating a Role.
          $ref: '#/components/schemas/GoogleIamAdminV1AuditDataPermissionDelta'
      description: >-
        Audit log information specific to Cloud IAM admin APIs. This message is
        serialized as an `Any` type in the `ServiceData` message of an
        `AuditLog` message.
    GoogleIamV1betaWorkloadIdentityPoolOperationMetadata:
      id: GoogleIamV1betaWorkloadIdentityPoolOperationMetadata
      description: Metadata for long-running WorkloadIdentityPool operations.
      properties: {}
      type: object
    GoogleIamV2betaDenyRule:
      properties:
        denialCondition:
          $ref: '#/components/schemas/GoogleTypeExpr'
          description: >-
            The condition that determines whether this deny rule applies to a
            request. If the condition expression evaluates to `true`, then the
            deny rule is applied; otherwise, the deny rule is not applied. Each
            deny rule is evaluated independently. If this deny rule does not
            apply to a request, other deny rules might still apply. The
            condition can use CEL functions that evaluate [resource
            tags](https://cloud.google.com/iam/help/conditions/resource-tags).
            Other functions and operators are not supported.
        exceptionPermissions:
          type: array
          description: >-
            Specifies the permissions that this rule excludes from the set of
            denied permissions given by `denied_permissions`. If a permission
            appears in `denied_permissions` _and_ in `exception_permissions`
            then it will _not_ be denied. The excluded permissions can be
            specified using the same syntax as `denied_permissions`.
          items:
            type: string
        deniedPrincipals:
          type: array
          description: >-
            The identities that are prevented from using one or more permissions
            on Google Cloud resources. This field can contain the following
            values: * `principalSet://goog/public:all`: A special identifier
            that represents any principal that is on the internet, even if they
            do not have a Google Account or are not logged in. *
            `principal://goog/subject/{email_id}`: A specific Google Account.
            Includes Gmail, Cloud Identity, and Google Workspace user accounts.
            For example, `principal://goog/subject/alice@example.com`. *
            `deleted:principal://goog/subject/{email_id}?uid={uid}`: A specific
            Google Account that was deleted recently. For example,
            `deleted:principal://goog/subject/alice@example.com?uid=1234567890`.
            If the Google Account is recovered, this identifier reverts to the
            standard identifier for a Google Account. *
            `principalSet://goog/group/{group_id}`: A Google group. For example,
            `principalSet://goog/group/admins@example.com`. *
            `deleted:principalSet://goog/group/{group_id}?uid={uid}`: A Google
            group that was deleted recently. For example,
            `deleted:principalSet://goog/group/admins@example.com?uid=1234567890`.
            If the Google group is restored, this identifier reverts to the
            standard identifier for a Google group. *
            `principal://iam.googleapis.com/projects/-/serviceAccounts/{service_account_id}`:
            A Google Cloud service account. For example,
            `principal://iam.googleapis.com/projects/-/serviceAccounts/my-service-account@iam.gserviceaccount.com`.
            *
            `deleted:principal://iam.googleapis.com/projects/-/serviceAccounts/{service_account_id}?uid={uid}`:
            A Google Cloud service account that was deleted recently. For
            example,
            `deleted:principal://iam.googleapis.com/projects/-/serviceAccounts/my-service-account@iam.gserviceaccount.com?uid=1234567890`.
            If the service account is undeleted, this identifier reverts to the
            standard identifier for a service account. *
            `principalSet://goog/cloudIdentityCustomerId/{customer_id}`: All of
            the principals associated with the specified Google Workspace or
            Cloud Identity customer ID. For example,
            `principalSet://goog/cloudIdentityCustomerId/C01Abc35`.
          items:
            type: string
        exceptionPrincipals:
          type: array
          description: >-
            The identities that are excluded from the deny rule, even if they
            are listed in the `denied_principals`. For example, you could add a
            Google group to the `denied_principals`, then exclude specific users
            who belong to that group. This field can contain the same values as
            the `denied_principals` field, excluding
            `principalSet://goog/public:all`, which represents all users on the
            internet.
          items:
            type: string
        deniedPermissions:
          description: >-
            The permissions that are explicitly denied by this rule. Each
            permission uses the format `{service_fqdn}/{resource}.{verb}`, where
            `{service_fqdn}` is the fully qualified domain name for the service.
            For example, `iam.googleapis.com/roles.list`.
          items:
            type: string
          type: array
      id: GoogleIamV2betaDenyRule
      description: A deny rule in an IAM deny policy.
      type: object
    GoogleIamV2betaListPoliciesResponse:
      id: GoogleIamV2betaListPoliciesResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            A page token that you can use in a ListPoliciesRequest to retrieve
            the next page. If this field is omitted, there are no additional
            pages.
        policies:
          description: Metadata for the policies that are attached to the resource.
          items:
            $ref: '#/components/schemas/GoogleIamV2betaPolicy'
          type: array
      description: Response message for `ListPolicies`.
      type: object
    GoogleLongrunningOperation:
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        response:
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
      id: GoogleLongrunningOperation
    GoogleIamAdminV1AuditDataPermissionDelta:
      type: object
      id: GoogleIamAdminV1AuditDataPermissionDelta
      description: >-
        A PermissionDelta message to record the added_permissions and
        removed_permissions inside a role.
      properties:
        addedPermissions:
          items:
            type: string
          description: Added permissions.
          type: array
        removedPermissions:
          type: array
          items:
            type: string
          description: Removed permissions.
    GoogleIamV1BindingDelta:
      type: object
      description: >-
        One delta entry for Binding. Each individual change (only one member in
        each entry) to a binding will be a separate entry.
      properties:
        action:
          description: The action that was performed on a Binding. Required
          enum:
            - ACTION_UNSPECIFIED
            - ADD
            - REMOVE
          enumDescriptions:
            - Unspecified.
            - Addition of a Binding.
            - Removal of a Binding.
          type: string
        role:
          type: string
          description: >-
            Role that is assigned to `members`. For example, `roles/viewer`,
            `roles/editor`, or `roles/owner`. Required
        condition:
          $ref: '#/components/schemas/GoogleTypeExpr'
          description: The condition that is associated with this binding.
        member:
          type: string
          description: >-
            A single identity requesting access for a Google Cloud resource.
            Follows the same format of Binding.members. Required
      id: GoogleIamV1BindingDelta
    GoogleIamV2betaPolicy:
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/GoogleIamV2betaPolicyRule'
          description: >-
            A list of rules that specify the behavior of the `Policy`. All of
            the rules should be of the `kind` specified in the `Policy`.
        deleteTime:
          type: string
          description: >-
            Output only. The time when the `Policy` was deleted. Empty if the
            policy is not deleted.
          readOnly: true
          format: google-datetime
        etag:
          type: string
          description: >-
            An opaque tag that identifies the current version of the `Policy`.
            IAM uses this value to help manage concurrent updates, so they do
            not cause one update to be overwritten by another. If this field is
            present in a CreatePolicy request, the value is ignored.
        displayName:
          description: >-
            A user-specified description of the `Policy`. This value can be up
            to 63 characters.
          type: string
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The time when the `Policy` was last updated.
          readOnly: true
        uid:
          type: string
          description: >-
            Immutable. The globally unique ID of the `Policy`. Assigned
            automatically when the `Policy` is created.
        annotations:
          type: object
          additionalProperties:
            type: string
          description: >-
            A key-value map to store arbitrary metadata for the `Policy`. Keys
            can be up to 63 characters. Values can be up to 255 characters.
        kind:
          type: string
          readOnly: true
          description: >-
            Output only. The kind of the `Policy`. Always contains the value
            `DenyPolicy`.
        name:
          description: >-
            Immutable. The resource name of the `Policy`, which must be unique.
            Format: `policies/{attachment_point}/denypolicies/{policy_id}` The
            attachment point is identified by its URL-encoded full resource
            name, which means that the forward-slash character, `/`, must be
            written as `%2F`. For example,
            `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-deny-policy`.
            For organizations and folders, use the numeric ID in the full
            resource name. For projects, requests can use the alphanumeric or
            the numeric ID. Responses always contain the numeric ID.
          type: string
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time when the `Policy` was created.
      type: object
      id: GoogleIamV2betaPolicy
      description: Data for an IAM policy.
    GoogleIamV2betaPolicyRule:
      id: GoogleIamV2betaPolicyRule
      description: A single rule in a `Policy`.
      type: object
      properties:
        denyRule:
          description: A rule for a deny policy.
          $ref: '#/components/schemas/GoogleIamV2betaDenyRule'
        description:
          type: string
          description: >-
            A user-specified description of the rule. This value can be up to
            256 characters.
    GoogleIamV2betaPolicyOperationMetadata:
      description: Metadata for long-running `Policy` operations.
      type: object
      id: GoogleIamV2betaPolicyOperationMetadata
      properties:
        createTime:
          description: Timestamp when the `google.longrunning.Operation` was created.
          format: google-datetime
          type: string
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v2beta/policies/{policiesId}/{policiesId1}/{policiesId2}:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
    delete:
      description: Deletes a policy. This action is permanent.
      operationId: iam.policies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: policiesId
          required: true
          schema:
            type: string
        - in: path
          name: policiesId1
          required: true
          schema:
            type: string
        - in: path
          name: policiesId2
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: policies
      x-stackQL-verb: delete
    get:
      description: Gets a policy.
      operationId: iam.policies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV2betaPolicy'
      parameters:
        - in: path
          name: policiesId
          required: true
          schema:
            type: string
        - in: path
          name: policiesId1
          required: true
          schema:
            type: string
        - in: path
          name: policiesId2
          required: true
          schema:
            type: string
      x-stackQL-resource: policies
      x-stackQL-verb: select
    put:
      description: >-
        Updates the specified policy. You can update only the rules and the
        display name for the policy. To update a policy, you should use a
        read-modify-write loop: 1. Use GetPolicy to read the current version of
        the policy. 2. Modify the policy as needed. 3. Use `UpdatePolicy` to
        write the updated policy. This pattern helps prevent conflicts between
        concurrent updates.
      operationId: iam.policies.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV2betaPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: policiesId
          required: true
          schema:
            type: string
        - in: path
          name: policiesId1
          required: true
          schema:
            type: string
        - in: path
          name: policiesId2
          required: true
          schema:
            type: string
      x-stackQL-resource: policies
      x-stackQL-verb: exec
  /v2beta/policies/{policiesId}/{policiesId1}:
    parameters: *ref_1
    get:
      description: >-
        Retrieves the policies of the specified kind that are attached to a
        resource. The response lists only policy metadata. In particular, policy
        rules are omitted.
      operationId: iam.policies.listPolicies
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleIamV2betaListPoliciesResponse'
      parameters:
        - in: path
          name: policiesId
          required: true
          schema:
            type: string
        - in: path
          name: policiesId1
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: policies__policies
      x-stackQL-verb: select
    post:
      description: Creates a policy.
      operationId: iam.policies.createPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV2betaPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: policiesId
          required: true
          schema:
            type: string
        - in: path
          name: policiesId1
          required: true
          schema:
            type: string
        - in: query
          name: policyId
          schema:
            type: string
      x-stackQL-resource: policies__policy
      x-stackQL-verb: insert
  /v2beta/policies/{policiesId}/{policiesId1}/{policiesId2}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.policies.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: policiesId
          required: true
          schema:
            type: string
        - in: path
          name: policiesId1
          required: true
          schema:
            type: string
        - in: path
          name: policiesId2
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
