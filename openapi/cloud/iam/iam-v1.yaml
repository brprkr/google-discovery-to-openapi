openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Identity and Access Management (IAM) API
  description: >-
    Manages identity and access control for Google Cloud Platform resources,
    including the creation of service accounts, which you can use to
    authenticate to Google and make API calls. 
  version: v1
  x-discovery-doc-revision: '20230608'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/iam/
servers:
  - url: https://iam.googleapis.com
components:
  schemas:
    AdminAuditData:
      type: object
      description: >-
        Audit log information specific to Cloud IAM admin APIs. This message is
        serialized as an `Any` type in the `ServiceData` message of an
        `AuditLog` message.
      id: AdminAuditData
      properties:
        permissionDelta:
          description: The permission_delta when when creating or updating a Role.
          $ref: '#/components/schemas/PermissionDelta'
    SignBlobRequest:
      id: SignBlobRequest
      type: object
      description: >-
        Deprecated. [Migrate to Service Account Credentials
        API](https://cloud.google.com/iam/help/credentials/migrate-api). The
        service account sign blob request.
      properties:
        bytesToSign:
          format: byte
          description: >-
            Required. Deprecated. [Migrate to Service Account Credentials
            API](https://cloud.google.com/iam/help/credentials/migrate-api). The
            bytes to sign.
          type: string
    UndeleteWorkforcePoolSubjectRequest:
      properties: {}
      type: object
      description: Request message for UndeleteWorkforcePoolSubject.
      id: UndeleteWorkforcePoolSubjectRequest
    UndeleteWorkloadIdentityPoolProviderKeyRequest:
      type: object
      description: Request message for UndeleteWorkloadIdentityPoolProviderKey.
      id: UndeleteWorkloadIdentityPoolProviderKeyRequest
      properties: {}
    WorkforcePool:
      properties:
        disabled:
          type: boolean
          description: >-
            Disables the workforce pool. You cannot use a disabled pool to
            exchange tokens, or use existing tokens to access resources. If the
            pool is re-enabled, existing tokens grant access again.
        state:
          enumDescriptions:
            - State unspecified.
            - The pool is active and may be used in Google Cloud policies.
            - >-
              The pool is soft-deleted. Soft-deleted pools are permanently
              deleted after approximately 30 days. You can restore a
              soft-deleted pool using UndeleteWorkforcePool. You cannot reuse
              the ID of a soft-deleted pool until it is permanently deleted.
              While a pool is deleted, you cannot use it to exchange tokens, or
              use existing tokens to access resources. If the pool is undeleted,
              existing tokens grant access again.
          description: Output only. The state of the pool.
          type: string
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
        sessionDuration:
          type: string
          format: google-duration
          description: >-
            Duration that the Google Cloud access tokens, console sign-in
            sessions, and `gcloud` sign-in sessions from this pool are valid.
            Must be greater than 15 minutes (900s) and less than 12 hours
            (43200s). If `session_duration` is not configured, minted
            credentials have a default duration of one hour (3600s). For SAML
            providers, the lifetime of the token is the minimum of the
            `session_duration` and the `SessionNotOnOrAfter` claim in the SAML
            assertion.
        description:
          description: >-
            A user-specified description of the pool. Cannot exceed 256
            characters.
          type: string
        name:
          readOnly: true
          description: >-
            Output only. The resource name of the pool. Format:
            `locations/{location}/workforcePools/{workforce_pool_id}`
          type: string
        displayName:
          description: >-
            A user-specified display name of the pool in Google Cloud Console.
            Cannot exceed 32 characters.
          type: string
        parent:
          description: >-
            Immutable. The resource name of the parent. Format:
            `organizations/{org-id}`.
          type: string
      type: object
      id: WorkforcePool
      description: >-
        Represents a collection of external workforces. Provides namespaces for
        federated users that can be referenced in IAM policies.
    GoogleIamAdminV1WorkforcePoolProviderSaml:
      type: object
      description: Represents a SAML identity provider.
      id: GoogleIamAdminV1WorkforcePoolProviderSaml
      properties:
        idpMetadataXml:
          description: >-
            Required. SAML Identity provider configuration metadata xml doc. The
            xml document should comply with [SAML 2.0
            specification](https://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf).
            The max size of the acceptable xml document will be bounded to 128k
            characters. The metadata xml document should satisfy the following
            constraints: 1) Must contain an Identity Provider Entity ID. 2) Must
            contain at least one non-expired signing key certificate. 3) For
            each signing key: a) Valid from should be no more than 7 days from
            now. b) Valid to should be no more than 14 years in the future. 4)
            Up to 3 IdP signing keys are allowed in the metadata xml. When
            updating the provider's metadata xml, at least one non-expired
            signing key must overlap with the existing metadata. This
            requirement is skipped if there are no non-expired signing keys
            present in the existing metadata.
          type: string
    AuditConfig:
      properties:
        auditLogConfigs:
          type: array
          description: The configuration for logging of each type of permission.
          items:
            $ref: '#/components/schemas/AuditLogConfig'
        service:
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
      id: AuditConfig
    CreateRoleRequest:
      description: The request to create a new role.
      properties:
        roleId:
          type: string
          description: >-
            The role ID to use for this role. A role ID may contain alphanumeric
            characters, underscores (`_`), and periods (`.`). It must contain a
            minimum of 3 characters and a maximum of 64 characters.
        role:
          description: The Role resource to create.
          $ref: '#/components/schemas/Role'
      id: CreateRoleRequest
      type: object
    ListWorkloadIdentityPoolsResponse:
      properties:
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
        workloadIdentityPools:
          type: array
          description: A list of pools.
          items:
            $ref: '#/components/schemas/WorkloadIdentityPool'
      description: Response message for ListWorkloadIdentityPools.
      id: ListWorkloadIdentityPoolsResponse
      type: object
    UndeleteWorkforcePoolProviderRequest:
      type: object
      properties: {}
      description: Request message for UndeleteWorkforcePoolProvider.
      id: UndeleteWorkforcePoolProviderRequest
    GetIamPolicyRequest:
      type: object
      properties:
        options:
          description: >-
            OPTIONAL: A `GetPolicyOptions` object for specifying options to
            `GetIamPolicy`.
          $ref: '#/components/schemas/GetPolicyOptions'
      description: Request message for `GetIamPolicy` method.
      id: GetIamPolicyRequest
    Empty:
      properties: {}
      id: Empty
      type: object
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    ListWorkforcePoolsResponse:
      id: ListWorkforcePoolsResponse
      description: Response message for ListWorkforcePools.
      type: object
      properties:
        workforcePools:
          type: array
          description: A list of pools.
          items:
            $ref: '#/components/schemas/WorkforcePool'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    CreateServiceAccountKeyRequest:
      properties:
        keyAlgorithm:
          enum:
            - KEY_ALG_UNSPECIFIED
            - KEY_ALG_RSA_1024
            - KEY_ALG_RSA_2048
          enumDescriptions:
            - An unspecified key algorithm.
            - 1k RSA Key.
            - 2k RSA Key.
          type: string
          description: >-
            Which type of key and algorithm to use for the key. The default is
            currently a 2K RSA key. However this may change in the future.
        privateKeyType:
          description: >-
            The output format of the private key. The default value is
            `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File
            format.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PKCS12_FILE
            - TYPE_GOOGLE_CREDENTIALS_FILE
          type: string
          enumDescriptions:
            - Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.
            - >-
              PKCS12 format. The password for the PKCS12 file is `notasecret`.
              For more information, see https://tools.ietf.org/html/rfc7292.
            - Google Credentials File format.
      description: The service account key create request.
      id: CreateServiceAccountKeyRequest
      type: object
    UploadServiceAccountKeyRequest:
      description: The service account key upload request.
      id: UploadServiceAccountKeyRequest
      properties:
        publicKeyData:
          type: string
          description: >-
            The public key to associate with the service account. Must be an RSA
            public key that is wrapped in an X.509 v3 certificate. Include the
            first line, `-----BEGIN CERTIFICATE-----`, and the last line,
            `-----END CERTIFICATE-----`.
          format: byte
      type: object
    DisableServiceAccountKeyRequest:
      type: object
      id: DisableServiceAccountKeyRequest
      description: The service account key disable request.
      properties: {}
    WorkforcePoolProviderKey:
      id: WorkforcePoolProviderKey
      type: object
      properties:
        keyData:
          description: Immutable. Public half of the asymmetric key.
          $ref: '#/components/schemas/KeyData'
        use:
          type: string
          description: Required. The purpose of the key.
          enumDescriptions:
            - KeyUse unspecified.
            - The key is used for encryption.
          enum:
            - KEY_USE_UNSPECIFIED
            - ENCRYPTION
        expireTime:
          format: google-datetime
          type: string
          readOnly: true
          description: >-
            Output only. The time after which the key will be permanently
            deleted and cannot be recovered. Note that the key may get purged
            before this time if the total limit of keys per provider is
            exceeded.
        state:
          description: Output only. The state of the key.
          readOnly: true
          enumDescriptions:
            - State unspecified.
            - The key is active.
            - >-
              The key is soft-deleted. Soft-deleted keys are permanently deleted
              after approximately 30 days. You can restore a soft-deleted key
              using UndeleteWorkforcePoolProviderKey.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
        name:
          readOnly: true
          type: string
          description: Output only. The resource name of the key.
      description: >-
        Represents a public key configuration for a Workforce Pool Provider. The
        key can be configured in your identity provider to encrypt SAML
        assertions. Google holds the corresponding private key, which it uses to
        decrypt encrypted tokens.
    AuditLogConfig:
      id: AuditLogConfig
      properties:
        exemptedMembers:
          type: array
          items:
            type: string
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
        logType:
          type: string
          description: The log type that this config enables.
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
    Saml:
      properties:
        idpMetadataXml:
          description: >-
            Required. SAML Identity provider configuration metadata xml doc. The
            xml document should comply with [SAML 2.0
            specification](https://www.oasis-open.org/committees/download.php/56785/sstc-saml-metadata-errata-2.0-wd-05.pdf).
            The max size of the acceptable xml document will be bounded to 128k
            characters. The metadata xml document should satisfy the following
            constraints: 1) Must contain an Identity Provider Entity ID. 2) Must
            contain at least one non-expired signing key certificate. 3) For
            each signing key: a) Valid from should be no more than 7 days from
            now. b) Valid to should be no more than 14 years in the future. 4)
            Upto 3 IdP signing keys are allowed in the metadata xml. When
            updating the provider's metadata xml, at lease one non-expired
            signing key must overlap with the existing metadata. This
            requirement is skipped if there are no non-expired signing keys
            present in the existing metadata
          type: string
      description: Represents an SAML 2.0 identity provider.
      id: Saml
      type: object
    WorkloadIdentityPool:
      id: WorkloadIdentityPool
      type: object
      properties:
        name:
          description: Output only. The resource name of the pool.
          readOnly: true
          type: string
        disabled:
          type: boolean
          description: >-
            Whether the pool is disabled. You cannot use a disabled pool to
            exchange tokens, or use existing tokens to access resources. If the
            pool is re-enabled, existing tokens grant access again.
        state:
          enumDescriptions:
            - State unspecified.
            - The pool is active, and may be used in Google Cloud policies.
            - >-
              The pool is soft-deleted. Soft-deleted pools are permanently
              deleted after approximately 30 days. You can restore a
              soft-deleted pool using UndeleteWorkloadIdentityPool. You cannot
              reuse the ID of a soft-deleted pool until it is permanently
              deleted. While a pool is deleted, you cannot use it to exchange
              tokens, or use existing tokens to access resources. If the pool is
              undeleted, existing tokens grant access again.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
          description: Output only. The state of the pool.
          readOnly: true
        description:
          description: A description of the pool. Cannot exceed 256 characters.
          type: string
        displayName:
          type: string
          description: A display name for the pool. Cannot exceed 32 characters.
      description: >-
        Represents a collection of external workload identities. You can define
        IAM policies to grant these identities access to Google Cloud resources.
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      type: object
      properties:
        permissions:
          items:
            type: string
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
      description: Request message for `TestIamPermissions` method.
    UndeleteServiceAccountResponse:
      id: UndeleteServiceAccountResponse
      type: object
      properties:
        restoredAccount:
          description: Metadata for the restored service account.
          $ref: '#/components/schemas/ServiceAccount'
    WorkforcePoolProvider:
      properties:
        attributeCondition:
          type: string
          description: >-
            A [Common Expression
            Language](https://opensource.google/projects/cel) expression, in
            plain text, to restrict what otherwise valid authentication
            credentials issued by the provider should not be accepted. The
            expression must output a boolean representing whether to allow the
            federation. The following keywords may be referenced in the
            expressions: * `assertion`: JSON representing the authentication
            credential issued by the provider. * `google`: The Google attributes
            mapped from the assertion in the `attribute_mappings`.
            `google.profile_photo` and `google.display_name` are not supported.
            * `attribute`: The custom attributes mapped from the assertion in
            the `attribute_mappings`. The maximum length of the attribute
            condition expression is 4096 characters. If unspecified, all valid
            authentication credentials will be accepted. The following example
            shows how to only allow credentials with a mapped `google.groups`
            value of `admins`: ``` "'admins' in google.groups" ```
        oidc:
          description: An OpenId Connect 1.0 identity provider configuration.
          $ref: '#/components/schemas/GoogleIamAdminV1WorkforcePoolProviderOidc'
        state:
          readOnly: true
          enumDescriptions:
            - State unspecified.
            - >-
              The provider is active and may be used to validate authentication
              credentials.
            - >-
              The provider is soft-deleted. Soft-deleted providers are
              permanently deleted after approximately 30 days. You can restore a
              soft-deleted provider using UndeleteWorkforcePoolProvider.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
          type: string
          description: Output only. The state of the provider.
        description:
          description: >-
            A user-specified description of the provider. Cannot exceed 256
            characters.
          type: string
        name:
          readOnly: true
          description: >-
            Output only. The resource name of the provider. Format:
            `locations/{location}/workforcePools/{workforce_pool_id}/providers/{provider_id}`
          type: string
        displayName:
          type: string
          description: >-
            A user-specified display name for the provider. Cannot exceed 32
            characters.
        attributeMapping:
          type: object
          additionalProperties:
            type: string
          description: >-
            Required. Maps attributes from the authentication credentials issued
            by an external identity provider to Google Cloud attributes, such as
            `subject` and `segment`. Each key must be a string specifying the
            Google Cloud IAM attribute to map to. The following keys are
            supported: * `google.subject`: The principal IAM is authenticating.
            You can reference this value in IAM bindings. This is also the
            subject that appears in Cloud Logging logs. This is a required field
            and the mapped subject cannot exceed 127 bytes. * `google.groups`:
            Groups the authenticating user belongs to. You can grant groups
            access to resources using an IAM `principalSet` binding; access
            applies to all members of the group. * `google.display_name`: The
            name of the authenticated user. This is an optional field and the
            mapped display name cannot exceed 100 bytes. If not set,
            `google.subject` will be displayed instead. This attribute cannot be
            referenced in IAM bindings. * `google.profile_photo`: The URL that
            specifies the authenticated user's thumbnail photo. This is an
            optional field. When set, the image will be visible as the user's
            profile picture. If not set, a generic user icon will be displayed
            instead. This attribute cannot be referenced in IAM bindings. You
            can also provide custom attributes by specifying
            `attribute.{custom_attribute}`, where {custom_attribute} is the name
            of the custom attribute to be mapped. You can define a maximum of 50
            custom attributes. The maximum length of a mapped attribute key is
            100 characters, and the key may only contain the characters
            [a-z0-9_]. You can reference these attributes in IAM policies to
            define fine-grained access for a workforce pool to Google Cloud
            resources. For example: * `google.subject`:
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool}/subject/{value}`
            * `google.groups`:
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool}/group/{value}`
            * `attribute.{custom_attribute}`:
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool}/attribute.{custom_attribute}/{value}`
            Each value must be a [Common Expression Language]
            (https://opensource.google/projects/cel) function that maps an
            identity provider credential to the normalized attribute specified
            by the corresponding map key. You can use the `assertion` keyword in
            the expression to access a JSON representation of the authentication
            credential issued by the provider. The maximum length of an
            attribute mapping expression is 2048 characters. When evaluated, the
            total size of all mapped attributes must not exceed 4KB. For OIDC
            providers, you must supply a custom mapping that includes the
            `google.subject` attribute. For example, the following maps the
            `sub` claim of the incoming credential to the `subject` attribute on
            a Google token: ``` {"google.subject": "assertion.sub"} ```
        disabled:
          description: >-
            Disables the workforce pool provider. You cannot use a disabled
            provider to exchange tokens. However, existing tokens still grant
            access.
          type: boolean
        saml:
          description: A SAML identity provider configuration.
          $ref: '#/components/schemas/GoogleIamAdminV1WorkforcePoolProviderSaml'
      id: WorkforcePoolProvider
      description: A configuration for an external identity provider.
      type: object
    SignJwtRequest:
      properties:
        payload:
          type: string
          description: >-
            Required. Deprecated. [Migrate to Service Account Credentials
            API](https://cloud.google.com/iam/help/credentials/migrate-api). The
            JWT payload to sign. Must be a serialized JSON object that contains
            a JWT Claims Set. For example: `{"sub": "user@example.com", "iat":
            313435}` If the JWT Claims Set contains an expiration time (`exp`)
            claim, it must be an integer timestamp that is not in the past and
            no more than 12 hours in the future. If the JWT Claims Set does not
            contain an expiration time (`exp`) claim, this claim is added
            automatically, with a timestamp that is 1 hour in the future.
      id: SignJwtRequest
      type: object
      description: >-
        Deprecated. [Migrate to Service Account Credentials
        API](https://cloud.google.com/iam/help/credentials/migrate-api). The
        service account sign JWT request.
    LintPolicyRequest:
      properties:
        fullResourceName:
          type: string
          description: >-
            The full resource name of the policy this lint request is about. The
            name follows the Google Cloud format for full resource names. For
            example, a Cloud project with ID `my-project` will be named
            `//cloudresourcemanager.googleapis.com/projects/my-project`. The
            resource name is not used to read a policy from IAM. Only the data
            in the request object is linted.
        condition:
          description: google.iam.v1.Binding.condition object to be linted.
          $ref: '#/components/schemas/Expr'
      type: object
      description: The request to lint a Cloud IAM policy object.
      id: LintPolicyRequest
    PolicyDelta:
      properties:
        bindingDeltas:
          type: array
          description: The delta for Bindings between two policies.
          items:
            $ref: '#/components/schemas/BindingDelta'
      id: PolicyDelta
      description: The difference delta between two policies.
      type: object
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
        response:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
      type: object
      id: Operation
    KeyData:
      properties:
        key:
          description: >-
            Output only. The key data. The format of the key is represented by
            the format field.
          type: string
          readOnly: true
        format:
          enum:
            - KEY_FORMAT_UNSPECIFIED
            - RSA_X509_PEM
          readOnly: true
          description: Output only. The format of the key.
          enumDescriptions:
            - >-
              No format has been specified. This is an invalid format and must
              not be used.
            - >-
              A RSA public key wrapped in an X.509v3 certificate ([RFC5280] (
              https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and
              wrapped in [public certificate
              label](https://datatracker.ietf.org/doc/html/rfc7468#section-5.1).
          type: string
        notAfterTime:
          readOnly: true
          type: string
          format: google-datetime
          description: >-
            Output only. Latest timestamp when this key is valid. Attempts to
            use this key after this time will fail. Only present if the key data
            represents a X.509 certificate.
        keySpec:
          enum:
            - KEY_SPEC_UNSPECIFIED
            - RSA_2048
            - RSA_3072
            - RSA_4096
          enumDescriptions:
            - No key specification specified.
            - A 2048 bit RSA key.
            - A 3072 bit RSA key.
            - A 4096 bit RSA key.
          description: Required. The specifications for the key.
          type: string
        notBeforeTime:
          format: google-datetime
          type: string
          readOnly: true
          description: >-
            Output only. Earliest timestamp when this key is valid. Attempts to
            use this key before this time will fail. Only present if the key
            data represents a X.509 certificate.
      id: KeyData
      type: object
      description: Represents a public key data along with its format.
    QueryGrantableRolesResponse:
      id: QueryGrantableRolesResponse
      description: The grantable role query response.
      properties:
        nextPageToken:
          description: >-
            To retrieve the next page of results, set
            `QueryGrantableRolesRequest.page_token` to this value.
          type: string
        roles:
          items:
            $ref: '#/components/schemas/Role'
          type: array
          description: The list of matching roles.
      type: object
    CreateServiceAccountRequest:
      type: object
      description: The service account create request.
      properties:
        serviceAccount:
          description: >-
            The ServiceAccount resource to create. Currently, only the following
            values are user assignable: `display_name` and `description`.
          $ref: '#/components/schemas/ServiceAccount'
        accountId:
          description: >-
            Required. The account id that is used to generate the service
            account email address and a stable unique id. It is unique within a
            project, must be 6-30 characters long, and match the regular
            expression `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035.
          type: string
      id: CreateServiceAccountRequest
    DisableServiceAccountRequest:
      type: object
      properties: {}
      id: DisableServiceAccountRequest
      description: The service account disable request.
    QueryTestablePermissionsRequest:
      description: A request to get permissions which can be tested on a resource.
      properties:
        pageToken:
          description: >-
            Optional pagination token returned in an earlier
            QueryTestablePermissionsRequest.
          type: string
        pageSize:
          format: int32
          type: integer
          description: >-
            Optional limit on the number of permissions to include in the
            response. The default is 100, and the maximum is 1,000.
        fullResourceName:
          description: >-
            Required. The full resource name to query from the list of testable
            permissions. The name follows the Google Cloud Platform resource
            format. For example, a Cloud Platform project with id `my-project`
            will be named
            `//cloudresourcemanager.googleapis.com/projects/my-project`.
          type: string
      type: object
      id: QueryTestablePermissionsRequest
    Binding:
      id: Binding
      properties:
        condition:
          $ref: '#/components/schemas/Expr'
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        role:
          type: string
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`.
        members:
          type: array
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding.
          items:
            type: string
      type: object
      description: Associates `members`, or principals, with a `role`.
    Permission:
      type: object
      description: A permission which can be included by a role.
      id: Permission
      properties:
        name:
          description: The name of this Permission.
          type: string
        onlyInPredefinedRoles:
          type: boolean
        primaryPermission:
          type: string
          description: >-
            The preferred name for this permission. If present, then this
            permission is an alias of, and equivalent to, the listed
            primary_permission.
        description:
          type: string
          description: >-
            A brief description of what this Permission is used for. This
            permission can ONLY be used in predefined roles.
        stage:
          enumDescriptions:
            - The permission is currently in an alpha phase.
            - The permission is currently in a beta phase.
            - The permission is generally available.
            - The permission is being deprecated.
          description: The current launch stage of the permission.
          enum:
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
          type: string
        title:
          type: string
          description: The title of this Permission.
        apiDisabled:
          type: boolean
          description: The service API associated with the permission is not enabled.
        customRolesSupportLevel:
          description: The current custom role support level.
          type: string
          enumDescriptions:
            - Default state. Permission is fully supported for custom role use.
            - Permission is being tested to check custom role compatibility.
            - Permission is not supported for custom role use.
          enum:
            - SUPPORTED
            - TESTING
            - NOT_SUPPORTED
    UndeleteWorkloadIdentityPoolProviderRequest:
      description: Request message for UndeleteWorkloadIdentityPoolProvider.
      type: object
      properties: {}
      id: UndeleteWorkloadIdentityPoolProviderRequest
    PatchServiceAccountRequest:
      type: object
      properties:
        updateMask:
          type: string
          format: google-fieldmask
        serviceAccount:
          $ref: '#/components/schemas/ServiceAccount'
      id: PatchServiceAccountRequest
      description: >-
        The service account patch request. You can patch only the `display_name`
        and `description` fields. You must use the `update_mask` field to
        specify which of these fields you want to patch. Only the fields
        specified in the request are guaranteed to be returned in the response.
        Other fields may be empty in the response.
    GoogleIamAdminV1WorkforcePoolProviderOidcWebSsoConfig:
      id: GoogleIamAdminV1WorkforcePoolProviderOidcWebSsoConfig
      description: Configuration for web single sign-on for the OIDC provider.
      type: object
      properties:
        responseType:
          enumDescriptions:
            - No Response Type specified.
            - >-
              The `response_type=id_token` selection uses the Implicit Flow for
              web sign-in.
          description: >-
            Required. The Response Type to request for in the OIDC Authorization
            Request for web sign-in.
          type: string
          enum:
            - RESPONSE_TYPE_UNSPECIFIED
            - ID_TOKEN
        assertionClaimsBehavior:
          enum:
            - ASSERTION_CLAIMS_BEHAVIOR_UNSPECIFIED
            - ONLY_ID_TOKEN_CLAIMS
          type: string
          description: >-
            Required. The behavior for how OIDC Claims are included in the
            `assertion` object used for attribute mapping and attribute
            condition.
          enumDescriptions:
            - No assertion claims behavior specified.
            - Only include ID Token Claims.
    QueryGrantableRolesRequest:
      id: QueryGrantableRolesRequest
      type: object
      properties:
        view:
          enumDescriptions:
            - Omits the `included_permissions` field. This is the default value.
            - Returns all fields.
          type: string
          enum:
            - BASIC
            - FULL
        fullResourceName:
          type: string
          description: >-
            Required. The full resource name to query from the list of grantable
            roles. The name follows the Google Cloud Platform resource format.
            For example, a Cloud Platform project with id `my-project` will be
            named `//cloudresourcemanager.googleapis.com/projects/my-project`.
        pageToken:
          type: string
          description: >-
            Optional pagination token returned in an earlier
            QueryGrantableRolesResponse.
        pageSize:
          description: >-
            Optional limit on the number of roles to include in the response.
            The default is 300, and the maximum is 1,000.
          format: int32
          type: integer
      description: The grantable role query request.
    ListServiceAccountsResponse:
      type: object
      properties:
        nextPageToken:
          description: >-
            To retrieve the next page of results, set
            ListServiceAccountsRequest.page_token to this value.
          type: string
        accounts:
          items:
            $ref: '#/components/schemas/ServiceAccount'
          description: The list of matching service accounts.
          type: array
      id: ListServiceAccountsResponse
      description: The service account list response.
    Status:
      type: object
      properties:
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        code:
          format: int32
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
        details:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: Status
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
        updateMask:
          format: google-fieldmask
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          type: string
      id: SetIamPolicyRequest
      type: object
    SignJwtResponse:
      id: SignJwtResponse
      description: >-
        Deprecated. [Migrate to Service Account Credentials
        API](https://cloud.google.com/iam/help/credentials/migrate-api). The
        service account sign JWT response.
      type: object
      properties:
        keyId:
          type: string
          description: >-
            Deprecated. [Migrate to Service Account Credentials
            API](https://cloud.google.com/iam/help/credentials/migrate-api). The
            id of the key used to sign the JWT.
        signedJwt:
          description: >-
            Deprecated. [Migrate to Service Account Credentials
            API](https://cloud.google.com/iam/help/credentials/migrate-api). The
            signed JWT.
          type: string
    BindingDelta:
      id: BindingDelta
      description: >-
        One delta entry for Binding. Each individual change (only one member in
        each entry) to a binding will be a separate entry.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to `members`. For example, `roles/viewer`,
            `roles/editor`, or `roles/owner`. Required
          type: string
        member:
          type: string
          description: >-
            A single identity requesting access for a Google Cloud resource.
            Follows the same format of Binding.members. Required
        condition:
          description: The condition that is associated with this binding.
          $ref: '#/components/schemas/Expr'
        action:
          enumDescriptions:
            - Unspecified.
            - Addition of a Binding.
            - Removal of a Binding.
          type: string
          enum:
            - ACTION_UNSPECIFIED
            - ADD
            - REMOVE
          description: The action that was performed on a Binding. Required
    Role:
      type: object
      id: Role
      description: A role in the Identity and Access Management API.
      properties:
        stage:
          enum:
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
            - DISABLED
            - EAP
          description: >-
            The current launch stage of the role. If the `ALPHA` launch stage
            has been selected for a role, the `stage` field will not be included
            in the returned definition for the role.
          enumDescriptions:
            - >-
              The user has indicated this role is currently in an Alpha phase.
              If this launch stage is selected, the `stage` field will not be
              included when requesting the definition for a given role.
            - The user has indicated this role is currently in a Beta phase.
            - The user has indicated this role is generally available.
            - The user has indicated this role is being deprecated.
            - >-
              This role is disabled and will not contribute permissions to any
              principals it is granted to in policies.
            - The user has indicated this role is currently in an EAP phase.
          type: string
        deleted:
          description: >-
            The current deleted state of the role. This field is read only. It
            will be ignored in calls to CreateRole and UpdateRole.
          type: boolean
        name:
          type: string
          description: >-
            The name of the role. When Role is used in CreateRole, the role name
            must not be set. When Role is used in output and other input such as
            UpdateRole, the role name is the complete path, e.g.,
            roles/logging.viewer for predefined roles and
            organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom
            roles.
        description:
          type: string
          description: Optional. A human-readable description for the role.
        includedPermissions:
          description: >-
            The names of the permissions this role grants when bound in an IAM
            policy.
          items:
            type: string
          type: array
        title:
          type: string
          description: >-
            Optional. A human-readable title for the role. Typically this is
            limited to 100 UTF-8 bytes.
        etag:
          format: byte
          description: Used to perform a consistent read-modify-write.
          type: string
    WorkloadIdentityPoolProvider:
      description: A configuration for an external identity provider.
      id: WorkloadIdentityPoolProvider
      type: object
      properties:
        attributeCondition:
          type: string
          description: >-
            [A Common Expression
            Language](https://opensource.google/projects/cel) expression, in
            plain text, to restrict what otherwise valid authentication
            credentials issued by the provider should not be accepted. The
            expression must output a boolean representing whether to allow the
            federation. The following keywords may be referenced in the
            expressions: * `assertion`: JSON representing the authentication
            credential issued by the provider. * `google`: The Google attributes
            mapped from the assertion in the `attribute_mappings`. *
            `attribute`: The custom attributes mapped from the assertion in the
            `attribute_mappings`. The maximum length of the attribute condition
            expression is 4096 characters. If unspecified, all valid
            authentication credential are accepted. The following example shows
            how to only allow credentials with a mapped `google.groups` value of
            `admins`: ``` "'admins' in google.groups" ```
        description:
          type: string
          description: A description for the provider. Cannot exceed 256 characters.
        name:
          readOnly: true
          description: Output only. The resource name of the provider.
          type: string
        disabled:
          description: >-
            Whether the provider is disabled. You cannot use a disabled provider
            to exchange tokens. However, existing tokens still grant access.
          type: boolean
        oidc:
          $ref: '#/components/schemas/Oidc'
          description: An OpenId Connect 1.0 identity provider.
        attributeMapping:
          type: object
          description: >-
            Maps attributes from authentication credentials issued by an
            external identity provider to Google Cloud attributes, such as
            `subject` and `segment`. Each key must be a string specifying the
            Google Cloud IAM attribute to map to. The following keys are
            supported: * `google.subject`: The principal IAM is authenticating.
            You can reference this value in IAM bindings. This is also the
            subject that appears in Cloud Logging logs. Cannot exceed 127 bytes.
            * `google.groups`: Groups the external identity belongs to. You can
            grant groups access to resources using an IAM `principalSet`
            binding; access applies to all members of the group. You can also
            provide custom attributes by specifying
            `attribute.{custom_attribute}`, where `{custom_attribute}` is the
            name of the custom attribute to be mapped. You can define a maximum
            of 50 custom attributes. The maximum length of a mapped attribute
            key is 100 characters, and the key may only contain the characters
            [a-z0-9_]. You can reference these attributes in IAM policies to
            define fine-grained access for a workload to Google Cloud resources.
            For example: * `google.subject`:
            `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}`
            * `google.groups`:
            `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}`
            * `attribute.{custom_attribute}`:
            `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}`
            Each value must be a [Common Expression Language]
            (https://opensource.google/projects/cel) function that maps an
            identity provider credential to the normalized attribute specified
            by the corresponding map key. You can use the `assertion` keyword in
            the expression to access a JSON representation of the authentication
            credential issued by the provider. The maximum length of an
            attribute mapping expression is 2048 characters. When evaluated, the
            total size of all mapped attributes must not exceed 8KB. For AWS
            providers, if no attribute mapping is defined, the following default
            mapping applies: ``` { "google.subject":"assertion.arn",
            "attribute.aws_role": "assertion.arn.contains('assumed-role')" " ?
            assertion.arn.extract('{account_arn}assumed-role/')" " +
            'assumed-role/'" " +
            assertion.arn.extract('assumed-role/{role_name}/')" " :
            assertion.arn", } ``` If any custom attribute mappings are defined,
            they must include a mapping to the `google.subject` attribute. For
            OIDC providers, you must supply a custom mapping, which must include
            the `google.subject` attribute. For example, the following maps the
            `sub` claim of the incoming credential to the `subject` attribute on
            a Google token: ``` {"google.subject": "assertion.sub"} ```
          additionalProperties:
            type: string
        saml:
          $ref: '#/components/schemas/Saml'
          description: An SAML 2.0 identity provider.
        displayName:
          description: A display name for the provider. Cannot exceed 32 characters.
          type: string
        aws:
          description: An Amazon Web Services identity provider.
          $ref: '#/components/schemas/Aws'
        state:
          description: Output only. The state of the provider.
          enumDescriptions:
            - State unspecified.
            - >-
              The provider is active, and may be used to validate authentication
              credentials.
            - >-
              The provider is soft-deleted. Soft-deleted providers are
              permanently deleted after approximately 30 days. You can restore a
              soft-deleted provider using UndeleteWorkloadIdentityPoolProvider.
              You cannot reuse the ID of a soft-deleted provider until it is
              permanently deleted.
          readOnly: true
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
    UndeleteWorkloadIdentityPoolRequest:
      properties: {}
      type: object
      id: UndeleteWorkloadIdentityPoolRequest
      description: Request message for UndeleteWorkloadIdentityPool.
    QueryAuditableServicesResponse:
      description: A response containing a list of auditable services for a resource.
      properties:
        services:
          items:
            $ref: '#/components/schemas/AuditableService'
          type: array
          description: The auditable services for a resource.
      id: QueryAuditableServicesResponse
      type: object
    LintPolicyResponse:
      description: >-
        The response of a lint operation. An empty response indicates the
        operation was able to fully execute and no lint issue was found.
      id: LintPolicyResponse
      properties:
        lintResults:
          description: List of lint results sorted by `severity` in descending order.
          items:
            $ref: '#/components/schemas/LintResult'
          type: array
      type: object
    UndeleteWorkforcePoolRequest:
      type: object
      id: UndeleteWorkforcePoolRequest
      description: Request message for UndeleteWorkforcePool.
      properties: {}
    Expr:
      properties:
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          type: string
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
    AuditableService:
      properties:
        name:
          type: string
          description: >-
            Public name of the service. For example, the service name for Cloud
            IAM is 'iam.googleapis.com'.
      description: Contains information about an auditable service.
      id: AuditableService
      type: object
    AuditData:
      properties:
        policyDelta:
          description: Policy delta between the original policy and the newly set policy.
          $ref: '#/components/schemas/PolicyDelta'
      type: object
      description: >-
        Audit log information specific to Cloud IAM. This message is serialized
        as an `Any` type in the `ServiceData` message of an `AuditLog` message.
      id: AuditData
    ListServiceAccountKeysResponse:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/ServiceAccountKey'
          description: The public keys for the service account.
      description: The service account keys list response.
      id: ListServiceAccountKeysResponse
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          items:
            type: string
          type: array
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
      id: TestIamPermissionsResponse
      type: object
    GetPolicyOptions:
      description: Encapsulates settings provided to GetIamPolicy.
      type: object
      id: GetPolicyOptions
      properties:
        requestedPolicyVersion:
          description: >-
            Optional. The maximum policy version that will be used to format the
            policy. Valid values are 0, 1, and 3. Requests specifying an invalid
            value will be rejected. Requests for policies with any conditional
            role bindings must specify version 3. Policies with no conditional
            role bindings may specify any valid value or leave the field unset.
            The policy in the response might use the policy version that you
            specified, or it might use a lower policy version. For example, if
            you specify version 3, but the policy has no conditional role
            bindings, the response uses version 1. To learn which resources
            support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
    ListWorkforcePoolProvidersResponse:
      type: object
      id: ListWorkforcePoolProvidersResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        workforcePoolProviders:
          items:
            $ref: '#/components/schemas/WorkforcePoolProvider'
          type: array
          description: A list of providers.
      description: Response message for ListWorkforcePoolProviders.
    EnableServiceAccountKeyRequest:
      properties: {}
      type: object
      id: EnableServiceAccountKeyRequest
      description: The service account key enable request.
    QueryTestablePermissionsResponse:
      id: QueryTestablePermissionsResponse
      type: object
      description: The response containing permissions which can be tested on a resource.
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          description: The Permissions testable on the requested resource.
        nextPageToken:
          description: >-
            To retrieve the next page of results, set
            `QueryTestableRolesRequest.page_token` to this value.
          type: string
    EnableServiceAccountRequest:
      description: The service account enable request.
      id: EnableServiceAccountRequest
      type: object
      properties: {}
    SignBlobResponse:
      description: >-
        Deprecated. [Migrate to Service Account Credentials
        API](https://cloud.google.com/iam/help/credentials/migrate-api). The
        service account sign blob response.
      properties:
        keyId:
          description: >-
            Deprecated. [Migrate to Service Account Credentials
            API](https://cloud.google.com/iam/help/credentials/migrate-api). The
            id of the key used to sign the blob.
          type: string
        signature:
          description: >-
            Deprecated. [Migrate to Service Account Credentials
            API](https://cloud.google.com/iam/help/credentials/migrate-api). The
            signed blob.
          format: byte
          type: string
      id: SignBlobResponse
      type: object
    Oidc:
      type: object
      description: Represents an OpenId Connect 1.0 identity provider.
      properties:
        jwksJson:
          description: >-
            Optional. OIDC JWKs in JSON String format. For details on the
            definition of a JWK, see https://tools.ietf.org/html/rfc7517. If not
            set, the `jwks_uri` from the discovery document(fetched from the
            .well-known path of the `issuer_uri`) will be used. Currently, RSA
            and EC asymmetric keys are supported. The JWK must use following
            format and include only the following fields: { "keys": [ { "kty":
            "RSA/EC", "alg": "", "use": "sig", "kid": "", "n": "", "e": "", "x":
            "", "y": "", "crv": "" } ] }
          type: string
        issuerUri:
          type: string
          description: Required. The OIDC issuer URL. Must be an HTTPS endpoint.
        allowedAudiences:
          description: >-
            Acceptable values for the `aud` field (audience) in the OIDC token.
            Token exchange requests are rejected if the token audience does not
            match one of the configured values. Each audience may be at most 256
            characters. A maximum of 10 audiences may be configured. If this
            list is empty, the OIDC token audience must be equal to the full
            canonical resource name of the WorkloadIdentityPoolProvider, with or
            without the HTTPS prefix. For example: ```
            //iam.googleapis.com/projects//locations//workloadIdentityPools//providers/
            https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/
            ```
          items:
            type: string
          type: array
      id: Oidc
    UndeleteServiceAccountRequest:
      id: UndeleteServiceAccountRequest
      type: object
      properties: {}
      description: The service account undelete request.
    Policy:
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
        etag:
          format: byte
          type: string
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/Binding'
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
        version:
          format: int32
          type: integer
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
        user:mike@example.com - group:admins@example.com - domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For
        a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
    ListRolesResponse:
      id: ListRolesResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            To retrieve the next page of results, set
            `ListRolesRequest.page_token` to this value.
        roles:
          type: array
          description: The Roles defined on this resource.
          items:
            $ref: '#/components/schemas/Role'
      type: object
      description: The response containing the roles defined under a resource.
    Aws:
      id: Aws
      properties:
        accountId:
          type: string
          description: Required. The AWS account ID.
      description: Represents an Amazon Web Services identity provider.
      type: object
    ListWorkforcePoolProviderKeysResponse:
      id: ListWorkforcePoolProviderKeysResponse
      description: Response message for ListWorkforcePoolProviderKeys.
      type: object
      properties:
        workforcePoolProviderKeys:
          type: array
          description: A list of WorkforcePoolProviderKeys.
          items:
            $ref: '#/components/schemas/WorkforcePoolProviderKey'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    LintResult:
      properties:
        level:
          enum:
            - LEVEL_UNSPECIFIED
            - CONDITION
          enumDescriptions:
            - Level is unspecified.
            - >-
              A validation unit which operates on an individual condition within
              a binding.
          description: The validation unit level.
          type: string
        validationUnitName:
          type: string
          description: >-
            The validation unit name, for instance
            "lintValidationUnits/ConditionComplexityCheck".
        severity:
          description: The validation unit severity.
          enumDescriptions:
            - Severity is unspecified.
            - >-
              A validation unit returns an error only for critical issues. If an
              attempt is made to set the problematic policy without rectifying
              the critical issue, it causes the `setPolicy` operation to fail.
            - >-
              Any issue which is severe enough but does not cause an error. For
              example, suspicious constructs in the input object will not
              necessarily fail `setPolicy`, but there is a high likelihood that
              they won't behave as expected during policy evaluation in
              `checkPolicy`. This includes the following common scenarios: -
              Unsatisfiable condition: Expired timestamp in date/time condition.
              - Ineffective condition: Condition on a pair which is granted
              unconditionally in another binding of the same policy.
            - >-
              Reserved for the issues that are not severe as `ERROR`/`WARNING`,
              but need special handling. For instance, messages about skipped
              validation units are issued as `NOTICE`.
            - >-
              Any informative statement which is not severe enough to raise
              `ERROR`/`WARNING`/`NOTICE`, like auto-correction recommendations
              on the input content. Note that current version of the linter does
              not utilize `INFO`.
            - Deprecated severity level.
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARNING
            - NOTICE
            - INFO
            - DEPRECATED
          type: string
        locationOffset:
          type: integer
          description: >-
            0-based character position of problematic construct within the
            object identified by `field_name`. Currently, this is populated only
            for condition expression.
          format: int32
        debugMessage:
          type: string
          description: Human readable debug message associated with the issue.
        fieldName:
          description: >-
            The name of the field for which this lint result is about. For
            nested messages `field_name` consists of names of the embedded
            fields separated by period character. The top-level qualifier is the
            input object to lint in the request. For example, the `field_name`
            value `condition.expression` identifies a lint result for the
            `expression` field of the provided condition.
          type: string
      id: LintResult
      description: Structured response of a single validation unit.
      type: object
    UndeleteWorkforcePoolProviderKeyRequest:
      id: UndeleteWorkforcePoolProviderKeyRequest
      type: object
      description: Request message for UndeleteWorkforcePoolProviderKey.
      properties: {}
    UndeleteRoleRequest:
      description: The request to undelete an existing role.
      type: object
      id: UndeleteRoleRequest
      properties:
        etag:
          description: Used to perform a consistent read-modify-write.
          format: byte
          type: string
    ListWorkloadIdentityPoolProvidersResponse:
      id: ListWorkloadIdentityPoolProvidersResponse
      description: Response message for ListWorkloadIdentityPoolProviders.
      type: object
      properties:
        workloadIdentityPoolProviders:
          items:
            $ref: '#/components/schemas/WorkloadIdentityPoolProvider'
          type: array
          description: A list of providers.
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
    ListWorkloadIdentityPoolProviderKeysResponse:
      type: object
      id: ListWorkloadIdentityPoolProviderKeysResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        workloadIdentityPoolProviderKeys:
          description: A list of WorkloadIdentityPoolProviderKey
          items:
            $ref: '#/components/schemas/WorkloadIdentityPoolProviderKey'
          type: array
      description: Response message for ListWorkloadIdentityPoolProviderKeys.
    WorkloadIdentityPoolProviderKey:
      properties:
        state:
          readOnly: true
          type: string
          enumDescriptions:
            - State unspecified.
            - The key is active.
            - >-
              The key is soft-deleted. Soft-deleted keys are permanently deleted
              after approximately 30 days. You can restore a soft-deleted key
              using UndeleteWorkloadIdentityPoolProviderKey. While a key is
              deleted, you cannot use it during the federation.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
          description: Output only. The state of the key.
        expireTime:
          readOnly: true
          format: google-datetime
          type: string
          description: >-
            Output only. Time after which the key will be permanently purged and
            cannot be recovered. Note that the key may get purged before this
            timestamp if the total limit of keys per provider is crossed.
        name:
          readOnly: true
          type: string
          description: Output only. The resource name of the key.
        keyData:
          description: Immutable. Public half of the asymmetric key.
          $ref: '#/components/schemas/KeyData'
        use:
          enumDescriptions:
            - The key use is not known.
            - The public key is used for encryption purposes.
          description: Required. The purpose of the key.
          enum:
            - KEY_USE_UNSPECIFIED
            - ENCRYPTION
          type: string
      description: >-
        Represents a public key configuration for your workload identity pool
        provider. The key can be configured in your identity provider to encrypt
        the SAML assertions. Google holds the corresponding private key which it
        uses to decrypt encrypted tokens.
      id: WorkloadIdentityPoolProviderKey
      type: object
    GoogleIamAdminV1WorkforcePoolProviderOidc:
      properties:
        issuerUri:
          type: string
          description: >-
            Required. The OIDC issuer URI. Must be a valid URI using the 'https'
            scheme.
        webSsoConfig:
          description: >-
            Required. Configuration for web single sign-on for the OIDC
            provider. Here, web sign-in refers to console sign-in and gcloud
            sign-in through the browser.
          $ref: >-
            #/components/schemas/GoogleIamAdminV1WorkforcePoolProviderOidcWebSsoConfig
        clientId:
          description: >-
            Required. The client ID. Must match the audience claim of the JWT
            issued by the identity provider.
          type: string
      description: Represents an OpenId Connect 1.0 identity provider.
      id: GoogleIamAdminV1WorkforcePoolProviderOidc
      type: object
    QueryAuditableServicesRequest:
      id: QueryAuditableServicesRequest
      type: object
      properties:
        fullResourceName:
          type: string
          description: >-
            Required. The full resource name to query from the list of auditable
            services. The name follows the Google Cloud Platform resource
            format. For example, a Cloud Platform project with id `my-project`
            will be named
            `//cloudresourcemanager.googleapis.com/projects/my-project`.
      description: A request to get the list of auditable services for a resource.
    ServiceAccount:
      description: >-
        An IAM service account. A service account is an account for an
        application or a virtual machine (VM) instance, not a person. You can
        use a service account to call Google APIs. To learn more, read the
        [overview of service
        accounts](https://cloud.google.com/iam/help/service-accounts/overview).
        When you create a service account, you specify the project ID that owns
        the service account, as well as a name that must be unique within the
        project. IAM uses these values to create an email address that
        identifies the service //
      id: ServiceAccount
      properties:
        email:
          type: string
          description: Output only. The email address of the service account.
          readOnly: true
        uniqueId:
          readOnly: true
          type: string
          description: >-
            Output only. The unique, stable numeric ID for the service account.
            Each service account retains its unique ID even if you delete the
            service account. For example, if you delete a service account, then
            create a new service account with the same name, the new service
            account has a different unique ID than the deleted service account.
        name:
          type: string
          description: >-
            The resource name of the service account. Use one of the following
            formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` *
            `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an
            alternative, you can use the `-` wildcard character instead of the
            project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` *
            `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using
            the `-` wildcard character, because it can cause response messages
            to contain misleading error codes. For example, if you try to access
            the service account `projects/-/serviceAccounts/fake@example.com`,
            which does not exist, the response contains an HTTP `403 Forbidden`
            error instead of a `404 Not Found` error.
        description:
          type: string
          description: >-
            Optional. A user-specified, human-readable description of the
            service account. The maximum length is 256 UTF-8 bytes.
        disabled:
          description: Output only. Whether the service account is disabled.
          type: boolean
          readOnly: true
        oauth2ClientId:
          description: Output only. The OAuth 2.0 client ID for the service account.
          type: string
          readOnly: true
        displayName:
          type: string
          description: >-
            Optional. A user-specified, human-readable name for the service
            account. The maximum length is 100 UTF-8 bytes.
        etag:
          format: byte
          description: Deprecated. Do not use.
          type: string
        projectId:
          readOnly: true
          type: string
          description: Output only. The ID of the project that owns the service account.
      type: object
    ServiceAccountKey:
      description: >-
        Represents a service account key. A service account has two sets of
        key-pairs: user-managed, and system-managed. User-managed key-pairs can
        be created and deleted by users. Users are responsible for rotating
        these keys periodically to ensure security of their service accounts.
        Users retain the private key of these key-pairs, and Google retains ONLY
        the public key. System-managed keys are automatically rotated by Google,
        and are used for signing for a maximum of two weeks. The rotation
        process is probabilistic, and usage of the new key will gradually ramp
        up and down over the key's lifetime. If you cache the public key set for
        a service account, we recommend that you update the cache every 15
        minutes. User-managed keys can be added and removed at any time, so it
        is important to update the cache frequently. For Google-managed keys,
        Google will publish a key at least 6 hours before it is first used for
        signing and will keep publishing it for at least 6 hours after it was
        last used for signing. Public keys for all service accounts are also
        published at the OAuth2 Service Account API.
      id: ServiceAccountKey
      properties:
        disabled:
          type: boolean
          description: The key status.
        keyOrigin:
          description: The key origin.
          enumDescriptions:
            - Unspecified key origin.
            - Key is provided by user.
            - Key is provided by Google.
          type: string
          enum:
            - ORIGIN_UNSPECIFIED
            - USER_PROVIDED
            - GOOGLE_PROVIDED
        validBeforeTime:
          description: >-
            The key can be used before this timestamp. For system-managed key
            pairs, this timestamp is the end time for the private key signing
            operation. The public key could still be used for verification for a
            few hours after this time.
          type: string
          format: google-datetime
        keyAlgorithm:
          type: string
          enum:
            - KEY_ALG_UNSPECIFIED
            - KEY_ALG_RSA_1024
            - KEY_ALG_RSA_2048
          description: Specifies the algorithm (and possibly key size) for the key.
          enumDescriptions:
            - An unspecified key algorithm.
            - 1k RSA Key.
            - 2k RSA Key.
        name:
          description: >-
            The resource name of the service account key in the following format
            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
          type: string
        keyType:
          enumDescriptions:
            - >-
              Unspecified key type. The presence of this in the message will
              immediately result in an error.
            - User-managed keys (managed and rotated by the user).
            - System-managed keys (managed and rotated by Google).
          description: The key type.
          type: string
          enum:
            - KEY_TYPE_UNSPECIFIED
            - USER_MANAGED
            - SYSTEM_MANAGED
        publicKeyData:
          description: >-
            The public key data. Only provided in `GetServiceAccountKey`
            responses.
          type: string
          format: byte
        validAfterTime:
          type: string
          description: The key can be used after this timestamp.
          format: google-datetime
        privateKeyType:
          enumDescriptions:
            - Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.
            - >-
              PKCS12 format. The password for the PKCS12 file is `notasecret`.
              For more information, see https://tools.ietf.org/html/rfc7292.
            - Google Credentials File format.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PKCS12_FILE
            - TYPE_GOOGLE_CREDENTIALS_FILE
          description: >-
            The output format for the private key. Only provided in
            `CreateServiceAccountKey` responses, not in `GetServiceAccountKey`
            or `ListServiceAccountKey` responses. Google never exposes
            system-managed private keys, and never retains user-managed private
            keys.
          type: string
        privateKeyData:
          format: byte
          description: >-
            The private key data. Only provided in `CreateServiceAccountKey`
            responses. Make sure to keep the private key data secure because it
            allows for the assertion of the service account identity. When
            base64 decoded, the private key data can be used to authenticate
            with Google API client libraries and with gcloud auth
            activate-service-account.
          type: string
      type: object
    PermissionDelta:
      id: PermissionDelta
      description: >-
        A PermissionDelta message to record the added_permissions and
        removed_permissions inside a role.
      properties:
        addedPermissions:
          items:
            type: string
          description: Added permissions.
          type: array
        removedPermissions:
          description: Removed permissions.
          items:
            type: string
          type: array
      type: object
    WorkloadIdentityPoolOperationMetadata:
      type: object
      id: WorkloadIdentityPoolOperationMetadata
      description: Metadata for long-running WorkloadIdentityPool operations.
      properties: {}
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/locations/{locationsId}/workforcePools:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
    get:
      description: >-
        Lists all non-deleted WorkforcePools under the specified parent. If
        `show_deleted` is set to `true`, then deleted pools are also listed.
      operationId: iam.locations.workforcePools.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkforcePoolsResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: workforce_pools
      x-stackQL-verb: select
    post:
      description: >-
        Creates a new WorkforcePool. You cannot reuse the name of a deleted pool
        until 30 days after deletion.
      operationId: iam.locations.workforcePools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkforcePool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: workforcePoolId
          schema:
            type: string
      x-stackQL-resource: workforce_pools
      x-stackQL-verb: insert
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes a WorkforcePool, as long as it was deleted fewer than 30 days
        ago.
      operationId: iam.locations.workforcePools.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteWorkforcePoolRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workforce_pools
      x-stackQL-verb: exec
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: Gets IAM policies on a WorkforcePool.
      operationId: iam.locations.workforcePools.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workforce_pools_iam_policies
      x-stackQL-verb: select
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}:
    parameters: *ref_1
    patch:
      description: Updates an existing WorkforcePool.
      operationId: iam.locations.workforcePools.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkforcePool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: workforce_pools
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes a WorkforcePool. You cannot use a deleted WorkforcePool to
        exchange external credentials for Google Cloud credentials. However,
        deletion does not revoke credentials that have already been issued.
        Credentials issued for a deleted pool do not grant access to resources.
        If the pool is undeleted, and the credentials are not expired, they
        grant access again. You can undelete a pool for 30 days. After 30 days,
        deletion is permanent. You cannot update deleted pools. However, you can
        view and list them.
      operationId: iam.locations.workforcePools.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workforce_pools
      x-stackQL-verb: delete
    get:
      description: Gets an individual WorkforcePool.
      operationId: iam.locations.workforcePools.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkforcePool'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workforce_pools
      x-stackQL-verb: select
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets IAM policies on a WorkforcePool.
      operationId: iam.locations.workforcePools.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workforce_pools_iam_policies
      x-stackQL-verb: exec
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns the caller's permissions on the WorkforcePool. If the pool does
        not exist, this will return an empty set of permissions, not a
        `NOT_FOUND` error.
      operationId: iam.locations.workforcePools.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workforce_pools_iam_policies
      x-stackQL-verb: exec
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.locations.workforcePools.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/subjects/{subjectsId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes a WorkforcePoolSubject, as long as it was deleted fewer than
        30 days ago.
      operationId: iam.locations.workforcePools.subjects.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteWorkforcePoolSubjectRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: subjectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subjects
      x-stackQL-verb: exec
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/subjects/{subjectsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a WorkforcePoolSubject. Subject must not already be in a deleted
        state. A WorkforcePoolSubject is automatically created the first time an
        external credential is exchanged for a Google Cloud credential with a
        mapped `google.subject` attribute. There is no path to manually create
        WorkforcePoolSubjects. Once deleted, the WorkforcePoolSubject may not be
        used for 30 days. After 30 days, the WorkforcePoolSubject will be
        deleted forever and can be reused in token exchanges with Google Cloud
        STS. This will automatically create a new WorkforcePoolSubject that is
        independent of the previously deleted WorkforcePoolSubject with the same
        google.subject value.
      operationId: iam.locations.workforcePools.subjects.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: subjectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: subjects
      x-stackQL-verb: delete
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/subjects/{subjectsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.locations.workforcePools.subjects.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: subjectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers:
    parameters: *ref_1
    get:
      description: >-
        Lists all non-deleted WorkforcePoolProviders in a WorkforcePool. If
        `show_deleted` is set to `true`, then deleted providers are also listed.
      operationId: iam.locations.workforcePools.providers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkforcePoolProvidersResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: providers
      x-stackQL-verb: select
    post:
      description: >-
        Creates a new WorkforcePoolProvider in a WorkforcePool. You cannot reuse
        the name of a deleted provider until 30 days after deletion.
      operationId: iam.locations.workforcePools.providers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkforcePoolProvider'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: query
          name: workforcePoolProviderId
          schema:
            type: string
      x-stackQL-resource: providers
      x-stackQL-verb: insert
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}:
    parameters: *ref_1
    patch:
      description: Updates an existing WorkforcePoolProvider.
      operationId: iam.locations.workforcePools.providers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkforcePoolProvider'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: providers
      x-stackQL-verb: exec
    get:
      description: Gets an individual WorkforcePoolProvider.
      operationId: iam.locations.workforcePools.providers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkforcePoolProvider'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
      x-stackQL-resource: providers
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a WorkforcePoolProvider. Deleting a provider does not revoke
        credentials that have already been\ issued; they continue to grant
        access. You can undelete a provider for 30 days. After 30 days, deletion
        is permanent. You cannot update deleted providers. However, you can view
        and list them.
      operationId: iam.locations.workforcePools.providers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
      x-stackQL-resource: providers
      x-stackQL-verb: delete
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes a WorkforcePoolProvider, as long as it was deleted fewer than
        30 days ago.
      operationId: iam.locations.workforcePools.providers.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteWorkforcePoolProviderRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
      x-stackQL-resource: providers
      x-stackQL-verb: exec
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}/keys/{keysId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.locations.workforcePools.providers.keys.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}/keys/{keysId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes a WorkforcePoolProviderKey, as long as it was deleted fewer
        than 30 days ago.
      operationId: iam.locations.workforcePools.providers.keys.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteWorkforcePoolProviderKeyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: exec
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}/keys/{keysId}:
    parameters: *ref_1
    get:
      description: Gets a WorkforcePoolProviderKey.
      operationId: iam.locations.workforcePools.providers.keys.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkforcePoolProviderKey'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a WorkforcePoolProviderKey. You can undelete a key for 30 days.
        After 30 days, deletion is permanent.
      operationId: iam.locations.workforcePools.providers.keys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: delete
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}/keys:
    parameters: *ref_1
    get:
      description: >-
        Lists all non-deleted WorkforcePoolProviderKeys in a
        WorkforcePoolProvider. If `show_deleted` is set to `true`, then deleted
        keys are also listed.
      operationId: iam.locations.workforcePools.providers.keys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkforcePoolProviderKeysResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: select
    post:
      description: Creates a new WorkforcePoolProviderKey in a WorkforcePoolProvider.
      operationId: iam.locations.workforcePools.providers.keys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkforcePoolProviderKey'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: workforcePoolProviderKeyId
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: insert
  /v1/locations/{locationsId}/workforcePools/{workforcePoolsId}/providers/{providersId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.locations.workforcePools.providers.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workforcePoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/roles/{rolesId}:
    parameters: *ref_1
    get:
      description: Gets the definition of a Role.
      operationId: iam.roles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
      x-stackQL-resource: roles
      x-stackQL-verb: select
  /v1/roles:
    parameters: *ref_1
    get:
      description: >-
        Lists every predefined Role that IAM supports, or every custom role that
        is defined for an organization or project.
      operationId: iam.roles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolesResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
      x-stackQL-resource: roles
      x-stackQL-verb: select
  /v1/roles:queryGrantableRoles:
    parameters: *ref_1
    post:
      description: >-
        Lists roles that can be granted on a Google Cloud resource. A role is
        grantable if the IAM policy for the resource can contain bindings to the
        role.
      operationId: iam.roles.queryGrantableRoles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryGrantableRolesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryGrantableRolesResponse'
      parameters: []
      x-stackQL-resource: roles
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}:
    parameters: *ref_1
    get:
      description: Gets an individual WorkloadIdentityPoolProvider.
      operationId: iam.projects.locations.workloadIdentityPools.providers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadIdentityPoolProvider'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
      x-stackQL-resource: providers
      x-stackQL-verb: select
    patch:
      description: Updates an existing WorkloadIdentityPoolProvider.
      operationId: iam.projects.locations.workloadIdentityPools.providers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadIdentityPoolProvider'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: providers
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes a WorkloadIdentityPoolProvider. Deleting a provider does not
        revoke credentials that have already been issued; they continue to grant
        access. You can undelete a provider for 30 days. After 30 days, deletion
        is permanent. You cannot update deleted providers. However, you can view
        and list them.
      operationId: iam.projects.locations.workloadIdentityPools.providers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
      x-stackQL-resource: providers
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes a WorkloadIdentityPoolProvider, as long as it was deleted
        fewer than 30 days ago.
      operationId: iam.projects.locations.workloadIdentityPools.providers.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteWorkloadIdentityPoolProviderRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
      x-stackQL-resource: providers
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers:
    parameters: *ref_1
    post:
      description: >-
        Creates a new WorkloadIdentityPoolProvider in a WorkloadIdentityPool.
        You cannot reuse the name of a deleted provider until 30 days after
        deletion.
      operationId: iam.projects.locations.workloadIdentityPools.providers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadIdentityPoolProvider'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: workloadIdentityPoolProviderId
          schema:
            type: string
      x-stackQL-resource: providers
      x-stackQL-verb: insert
    get:
      description: >-
        Lists all non-deleted WorkloadIdentityPoolProviders in a
        WorkloadIdentityPool. If `show_deleted` is set to `true`, then deleted
        providers are also listed.
      operationId: iam.projects.locations.workloadIdentityPools.providers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkloadIdentityPoolProvidersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: providers
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.projects.locations.workloadIdentityPools.providers.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}/keys/{keysId}:
    parameters: *ref_1
    get:
      description: Gets an individual WorkloadIdentityPoolProviderKey.
      operationId: iam.projects.locations.workloadIdentityPools.providers.keys.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadIdentityPoolProviderKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes an WorkloadIdentityPoolProviderKey. You can undelete a key for
        30 days. After 30 days, deletion is permanent.
      operationId: iam.projects.locations.workloadIdentityPools.providers.keys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}/keys:
    parameters: *ref_1
    get:
      description: >-
        Lists all non-deleted WorkloadIdentityPoolProviderKeys in a project. If
        show_deleted is set to `true`, then deleted pools are also listed.
      operationId: iam.projects.locations.workloadIdentityPools.providers.keys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ListWorkloadIdentityPoolProviderKeysResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: showDeleted
          schema:
            type: boolean
      x-stackQL-resource: keys
      x-stackQL-verb: select
    post:
      description: >-
        Create a new WorkloadIdentityPoolProviderKey in a
        WorkloadIdentityPoolProvider.
      operationId: iam.projects.locations.workloadIdentityPools.providers.keys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadIdentityPoolProviderKey'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: query
          name: workloadIdentityPoolProviderKeyId
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}/keys/{keysId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes an WorkloadIdentityPoolProviderKey, as long as it was deleted
        fewer than 30 days ago.
      operationId: iam.projects.locations.workloadIdentityPools.providers.keys.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UndeleteWorkloadIdentityPoolProviderKeyRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}/keys/{keysId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: >-
        iam.projects.locations.workloadIdentityPools.providers.keys.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: providersId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: iam.projects.locations.workloadIdentityPools.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Undeletes a WorkloadIdentityPool, as long as it was deleted fewer than
        30 days ago.
      operationId: iam.projects.locations.workloadIdentityPools.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteWorkloadIdentityPoolRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workload_identity_pools
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools:
    parameters: *ref_1
    post:
      description: >-
        Creates a new WorkloadIdentityPool. You cannot reuse the name of a
        deleted pool until 30 days after deletion.
      operationId: iam.projects.locations.workloadIdentityPools.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadIdentityPool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: workloadIdentityPoolId
          schema:
            type: string
      x-stackQL-resource: workload_identity_pools
      x-stackQL-verb: insert
    get:
      description: >-
        Lists all non-deleted WorkloadIdentityPools in a project. If
        `show_deleted` is set to `true`, then deleted pools are also listed.
      operationId: iam.projects.locations.workloadIdentityPools.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkloadIdentityPoolsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: workload_identity_pools
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}:
    parameters: *ref_1
    patch:
      description: Updates an existing WorkloadIdentityPool.
      operationId: iam.projects.locations.workloadIdentityPools.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadIdentityPool'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: workload_identity_pools
      x-stackQL-verb: exec
    get:
      description: Gets an individual WorkloadIdentityPool.
      operationId: iam.projects.locations.workloadIdentityPools.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadIdentityPool'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workload_identity_pools
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a WorkloadIdentityPool. You cannot use a deleted pool to
        exchange external credentials for Google Cloud credentials. However,
        deletion does not revoke credentials that have already been issued.
        Credentials issued for a deleted pool do not grant access to resources.
        If the pool is undeleted, and the credentials are not expired, they
        grant access again. You can undelete a pool for 30 days. After 30 days,
        deletion is permanent. You cannot update deleted pools. However, you can
        view and list them.
      operationId: iam.projects.locations.workloadIdentityPools.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: workloadIdentityPoolsId
          required: true
          schema:
            type: string
      x-stackQL-resource: workload_identity_pools
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/roles/{rolesId}:undelete:
    parameters: *ref_1
    post:
      description: Undeletes a custom Role.
      operationId: iam.projects.roles.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteRoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
      x-stackQL-resource: roles
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/roles/{rolesId}:
    parameters: *ref_1
    patch:
      description: Updates the definition of a custom Role.
      operationId: iam.projects.roles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: roles
      x-stackQL-verb: exec
    get:
      description: Gets the definition of a Role.
      operationId: iam.projects.roles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
      x-stackQL-resource: roles
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a custom Role. When you delete a custom role, the following
        changes occur immediately: * You cannot bind a principal to the custom
        role in an IAM Policy. * Existing bindings to the custom role are not
        changed, but they have no effect. * By default, the response from
        ListRoles does not include the custom role. You have 7 days to undelete
        the custom role. After 7 days, the following changes occur: * The custom
        role is permanently deleted and cannot be recovered. * If an IAM policy
        contains a binding to the custom role, the binding is permanently
        removed.
      operationId: iam.projects.roles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: roles
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/roles:
    parameters: *ref_1
    get:
      description: >-
        Lists every predefined Role that IAM supports, or every custom role that
        is defined for an organization or project.
      operationId: iam.projects.roles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: roles
      x-stackQL-verb: select
    post:
      description: Creates a new custom Role.
      operationId: iam.projects.roles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: roles
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signBlob:
    parameters: *ref_1
    post:
      description: >-
        **Note:** This method is deprecated. Use the
        [`signBlob`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signBlob)
        method in the IAM Service Account Credentials API instead. If you
        currently use this method, see the [migration
        guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
        instructions. Signs a blob using the system-managed private key for a
        ServiceAccount.
      operationId: iam.projects.serviceAccounts.signBlob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignBlobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignBlobResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_accounts
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Tests whether the caller has the specified permissions on a
        ServiceAccount.
      operationId: iam.projects.serviceAccounts.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_accounts_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/serviceAccounts:
    parameters: *ref_1
    get:
      description: Lists every ServiceAccount that belongs to a specific project.
      operationId: iam.projects.serviceAccounts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceAccountsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: service_accounts
      x-stackQL-verb: select
    post:
      description: Creates a ServiceAccount.
      operationId: iam.projects.serviceAccounts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_accounts
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signJwt:
    parameters: *ref_1
    post:
      description: >-
        **Note:** This method is deprecated. Use the
        [`signJwt`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signJwt)
        method in the IAM Service Account Credentials API instead. If you
        currently use this method, see the [migration
        guide](https://cloud.google.com/iam/help/credentials/migrate-api) for
        instructions. Signs a JSON Web Token (JWT) using the system-managed
        private key for a ServiceAccount.
      operationId: iam.projects.serviceAccounts.signJwt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignJwtRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignJwtResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_accounts
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:
    parameters: *ref_1
    get:
      description: Gets a ServiceAccount.
      operationId: iam.projects.serviceAccounts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_accounts
      x-stackQL-verb: select
    put:
      description: >-
        **Note:** We are in the process of deprecating this method. Use
        PatchServiceAccount instead. Updates a ServiceAccount. You can update
        only the `display_name` field.
      operationId: iam.projects.serviceAccounts.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccount'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_accounts
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes a ServiceAccount. **Warning:** After you delete a service
        account, you might not be able to undelete it. If you know that you need
        to re-enable the service account in the future, use
        DisableServiceAccount instead. If you delete a service account, IAM
        permanently removes the service account 30 days later. Google Cloud
        cannot recover the service account after it is permanently removed, even
        if you file a support request. To help avoid unplanned outages, we
        recommend that you disable the service account before you delete it. Use
        DisableServiceAccount to disable the service account, then wait at least
        24 hours and watch for unintended consequences. If there are no
        unintended consequences, you can delete the service account.
      operationId: iam.projects.serviceAccounts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_accounts
      x-stackQL-verb: delete
    patch:
      description: Patches a ServiceAccount.
      operationId: iam.projects.serviceAccounts.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchServiceAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccount'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_accounts
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the IAM policy that is attached to a ServiceAccount. Use this
        method to grant or revoke access to the service account. For example,
        you could grant a principal the ability to impersonate the service
        account. This method does not enable the service account to access other
        resources. To grant roles to a service account on a resource, follow
        these steps: 1. Call the resource's `getIamPolicy` method to get its
        current IAM policy. 2. Edit the policy so that it binds the service
        account to an IAM role for the resource. 3. Call the resource's
        `setIamPolicy` method to update its IAM policy. For detailed
        instructions, see [Manage access to project, folders, and
        organizations](https://cloud.google.com/iam/help/service-accounts/granting-access-to-service-accounts)
        or [Manage access to other
        resources](https://cloud.google.com/iam/help/access/manage-other-resources).
      operationId: iam.projects.serviceAccounts.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_accounts_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:undelete:
    parameters: *ref_1
    post:
      description: >-
        Restores a deleted ServiceAccount. **Important:** It is not always
        possible to restore a deleted service account. Use this method only as a
        last resort. After you delete a service account, IAM permanently removes
        the service account 30 days later. There is no way to restore a deleted
        service account that has been permanently removed.
      operationId: iam.projects.serviceAccounts.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteServiceAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UndeleteServiceAccountResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_accounts
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:enable:
    parameters: *ref_1
    post:
      description: >-
        Enables a ServiceAccount that was disabled by DisableServiceAccount. If
        the service account is already enabled, then this method has no effect.
        If the service account was disabled by other means—for example, if
        Google disabled the service account because it was compromised—you
        cannot use this method to enable the service account.
      operationId: iam.projects.serviceAccounts.enable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableServiceAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_accounts
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the IAM policy that is attached to a ServiceAccount. This IAM
        policy specifies which principals have access to the service account.
        This method does not tell you whether the service account has been
        granted any roles on other resources. To check whether a service account
        has role grants on a resource, use the `getIamPolicy` method for that
        resource. For example, to view the role grants for a project, call the
        Resource Manager API's
        [`projects.getIamPolicy`](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getIamPolicy)
        method.
      operationId: iam.projects.serviceAccounts.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: service_accounts_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:disable:
    parameters: *ref_1
    post:
      description: >-
        Disables a ServiceAccount immediately. If an application uses the
        service account to authenticate, that application can no longer call
        Google APIs or access Google Cloud resources. Existing access tokens for
        the service account are rejected, and requests for new access tokens
        will fail. To re-enable the service account, use EnableServiceAccount.
        After you re-enable the service account, its existing access tokens will
        be accepted, and you can request new access tokens. To help avoid
        unplanned outages, we recommend that you disable the service account
        before you delete it. Use this method to disable the service account,
        then wait at least 24 hours and watch for unintended consequences. If
        there are no unintended consequences, you can delete the service account
        with DeleteServiceAccount.
      operationId: iam.projects.serviceAccounts.disable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableServiceAccountRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_accounts
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys:upload:
    parameters: *ref_1
    post:
      description: >-
        Uploads the public key portion of a key pair that you manage, and
        associates the public key with a ServiceAccount. After you upload the
        public key, you can use the private key from the key pair as a service
        account key.
      operationId: iam.projects.serviceAccounts.keys.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadServiceAccountKeyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}:disable:
    parameters: *ref_1
    post:
      description: >-
        Disable a ServiceAccountKey. A disabled service account key can be
        re-enabled with EnableServiceAccountKey.
      operationId: iam.projects.serviceAccounts.keys.disable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableServiceAccountKeyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}:enable:
    parameters: *ref_1
    post:
      description: Enable a ServiceAccountKey.
      operationId: iam.projects.serviceAccounts.keys.enable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableServiceAccountKeyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a ServiceAccountKey. Deleting a service account key does not
        revoke short-lived credentials that have been issued based on the
        service account key.
      operationId: iam.projects.serviceAccounts.keys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: delete
    get:
      description: Gets a ServiceAccountKey.
      operationId: iam.projects.serviceAccounts.keys.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
        - in: query
          name: publicKeyType
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: select
  /v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys:
    parameters: *ref_1
    post:
      description: Creates a ServiceAccountKey.
      operationId: iam.projects.serviceAccounts.keys.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceAccountKeyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountKey'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: insert
    get:
      description: Lists every ServiceAccountKey for a service account.
      operationId: iam.projects.serviceAccounts.keys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceAccountKeysResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceAccountsId
          required: true
          schema:
            type: string
        - in: query
          name: keyTypes
          schema:
            type: string
      x-stackQL-resource: keys
      x-stackQL-verb: select
  /v1/iamPolicies:lintPolicy:
    parameters: *ref_1
    post:
      description: >-
        Lints, or validates, an IAM policy. Currently checks the
        google.iam.v1.Binding.condition field, which contains a condition
        expression for a role binding. Successful calls to this method always
        return an HTTP `200 OK` status code, even if the linter detects an issue
        in the IAM policy.
      operationId: iam.iamPolicies.lintPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LintPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LintPolicyResponse'
      parameters: []
      x-stackQL-resource: iam_policies
      x-stackQL-verb: exec
  /v1/iamPolicies:queryAuditableServices:
    parameters: *ref_1
    post:
      description: >-
        Returns a list of services that allow you to opt into audit logs that
        are not generated by default. To learn more about audit logs, see the
        [Logging documentation](https://cloud.google.com/logging/docs/audit).
      operationId: iam.iamPolicies.queryAuditableServices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryAuditableServicesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryAuditableServicesResponse'
      parameters: []
      x-stackQL-resource: iam_policies
      x-stackQL-verb: exec
  /v1/permissions:queryTestablePermissions:
    parameters: *ref_1
    post:
      description: >-
        Lists every permission that you can test on a resource. A permission is
        testable if you can check whether a principal has that permission on the
        resource.
      operationId: iam.permissions.queryTestablePermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryTestablePermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryTestablePermissionsResponse'
      parameters: []
      x-stackQL-resource: permissions
      x-stackQL-verb: exec
  /v1/organizations/{organizationsId}/roles:
    parameters: *ref_1
    post:
      description: Creates a new custom Role.
      operationId: iam.organizations.roles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: roles
      x-stackQL-verb: insert
    get:
      description: >-
        Lists every predefined Role that IAM supports, or every custom role that
        is defined for an organization or project.
      operationId: iam.organizations.roles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolesResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: roles
      x-stackQL-verb: select
  /v1/organizations/{organizationsId}/roles/{rolesId}:
    parameters: *ref_1
    patch:
      description: Updates the definition of a custom Role.
      operationId: iam.organizations.roles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: roles
      x-stackQL-verb: exec
    get:
      description: Gets the definition of a Role.
      operationId: iam.organizations.roles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
      x-stackQL-resource: roles
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a custom Role. When you delete a custom role, the following
        changes occur immediately: * You cannot bind a principal to the custom
        role in an IAM Policy. * Existing bindings to the custom role are not
        changed, but they have no effect. * By default, the response from
        ListRoles does not include the custom role. You have 7 days to undelete
        the custom role. After 7 days, the following changes occur: * The custom
        role is permanently deleted and cannot be recovered. * If an IAM policy
        contains a binding to the custom role, the binding is permanently
        removed.
      operationId: iam.organizations.roles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
      x-stackQL-resource: roles
      x-stackQL-verb: delete
  /v1/organizations/{organizationsId}/roles/{rolesId}:undelete:
    parameters: *ref_1
    post:
      description: Undeletes a custom Role.
      operationId: iam.organizations.roles.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteRoleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: rolesId
          required: true
          schema:
            type: string
      x-stackQL-resource: roles
      x-stackQL-verb: exec
