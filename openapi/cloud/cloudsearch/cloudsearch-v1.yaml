openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Search API
  description: >-
    Cloud Search provides cloud-based search capabilities over Google Workspace
    data. The Cloud Search API allows indexing of non-Google Workspace data into
    Cloud Search.
  version: v1
  x-discovery-doc-revision: '20230614'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/cloud-search/docs/guides/
servers:
  - url: https://cloudsearch.googleapis.com
components:
  schemas:
    SourceConfig:
      properties:
        source:
          description: The source for which this configuration is to be used.
          $ref: '#/components/schemas/Source'
        scoringConfig:
          $ref: '#/components/schemas/SourceScoringConfig'
          description: The scoring configuration for the source.
        crowdingConfig:
          $ref: '#/components/schemas/SourceCrowdingConfig'
          description: The crowding configuration for the source.
      id: SourceConfig
      type: object
      description: >-
        Configurations for a source while processing a Search or Suggest
        request.
    Snippet:
      type: object
      description: >-
        Snippet of the search result, which summarizes the content of the
        resulting page.
      id: Snippet
      properties:
        matchRanges:
          type: array
          description: The matched ranges in the snippet.
          items:
            $ref: '#/components/schemas/MatchRange'
        snippet:
          type: string
          description: >-
            The snippet of the document. The snippet of the document. May
            contain escaped HTML character that should be unescaped prior to
            rendering.
    UnreserveItemsRequest:
      type: object
      properties:
        connectorName:
          description: >-
            The name of connector making this call. Format:
            datasources/{source_id}/connectors/{ID}
          type: string
        queue:
          type: string
          description: The name of a queue to unreserve items from.
        debugOptions:
          $ref: '#/components/schemas/DebugOptions'
          description: Common debug options.
      id: UnreserveItemsRequest
    SearchApplication:
      id: SearchApplication
      properties:
        enableAuditLog:
          description: >-
            Indicates whether audit logging is on/off for requests made for the
            search application in query APIs.
          type: boolean
        defaultSortOptions:
          $ref: '#/components/schemas/SortOptions'
          description: The default options for sorting the search results
        name:
          type: string
          description: >-
            The name of the Search Application. Format:
            searchapplications/{application_id}.
        displayName:
          description: >-
            Display name of the Search Application. The maximum length is 300
            characters.
          type: string
        scoringConfig:
          $ref: '#/components/schemas/ScoringConfig'
          description: Configuration for ranking results.
        defaultFacetOptions:
          type: array
          description: >-
            The default fields for returning facet results. The sources
            specified here also have been included in data_source_restrictions
            above.
          items:
            $ref: '#/components/schemas/FacetOptions'
        sourceConfig:
          type: array
          items:
            $ref: '#/components/schemas/SourceConfig'
          description: Configuration for a sources specified in data_source_restrictions.
        operationIds:
          readOnly: true
          description: >-
            Output only. IDs of the Long Running Operations (LROs) currently
            running for this schema. Output only field.
          type: array
          items:
            type: string
        returnResultThumbnailUrls:
          type: boolean
          description: >-
            With each result we should return the URI for its thumbnail (when
            applicable)
        dataSourceRestrictions:
          type: array
          description: >-
            Retrictions applied to the configurations. The maximum number of
            elements is 10.
          items:
            $ref: '#/components/schemas/DataSourceRestriction'
        queryInterpretationConfig:
          description: The default options for query interpretation
          $ref: '#/components/schemas/QueryInterpretationConfig'
      type: object
      description: SearchApplication
    EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard:
      description: >-
        Contains a list of suggested queries. Allows the user to determine what
        natural language queries they can ask Cloud Search (e.g. "what can I
        search for?").
      id: EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard
      type: object
      properties:
        suggestedQueryCategory:
          items:
            $ref: >-
              #/components/schemas/EnterpriseTopazSidekickAnswerSuggestedQueryCategory
          description: A list of queries to suggest.
          type: array
    EnterpriseTopazSidekickPersonProfileCardRelatedPeople:
      properties:
        relation:
          enumDescriptions:
            - ''
            - ''
            - ''
          description: Relation type.
          enum:
            - UNKNOWN
            - MANAGER
            - DIRECT_REPORT
          type: string
        relatedPerson:
          description: Related people.
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickCommonPerson'
          type: array
      id: EnterpriseTopazSidekickPersonProfileCardRelatedPeople
      type: object
    EnterpriseTopazSidekickAnswerAnswerListLabeledAnswer:
      description: An answer with a corresponding label.
      id: EnterpriseTopazSidekickAnswerAnswerListLabeledAnswer
      type: object
      properties:
        answer:
          description: The free text answer.
          type: string
        label:
          type: string
          description: >-
            A localized label for the answer (e.g. "Cell phone" vs "Desk
            phone").
    PeopleSuggestion:
      description: This field contains information about the person being suggested.
      id: PeopleSuggestion
      properties:
        person:
          $ref: '#/components/schemas/Person'
          description: >-
            Suggested person. All fields of the person object might not be
            populated.
      type: object
    EnterpriseTopazSidekickGenericAnswerCard:
      id: EnterpriseTopazSidekickGenericAnswerCard
      type: object
      properties:
        answer:
          description: The answer.
          type: string
        title:
          description: Title or header of the card.
          type: string
    Item:
      description: >-
        Represents a single object that is an item in the search index, such as
        a file, folder, or a database record.
      id: Item
      properties:
        structuredData:
          $ref: '#/components/schemas/ItemStructuredData'
          description: >-
            The structured data for the item that should conform to a registered
            object definition in the schema for the data source.
        queue:
          description: Queue this item belongs to. The maximum length is 100 characters.
          type: string
        version:
          format: byte
          type: string
          description: >-
            Required. The indexing system stores the version from the datasource
            as a byte string and compares the Item version in the index to the
            version of the queued Item using lexical ordering. Cloud Search
            Indexing won't index or delete any queued item with a version value
            that is less than or equal to the version of the currently indexed
            item. The maximum length for this field is 1024 bytes. For
            information on how item version affects the deletion process, refer
            to [Handle revisions after manual
            deletes](https://developers.google.com/cloud-search/docs/guides/operations).
        acl:
          description: Access control list for this item.
          $ref: '#/components/schemas/ItemAcl'
        itemType:
          enumDescriptions:
            - ''
            - >-
              An item that is indexed for the only purpose of serving
              information. These items cannot be referred in containerName or
              inheritAclFrom fields.
            - >-
              An item that gets indexed and whose purpose is to supply other
              items with ACLs and/or contain other items.
            - >-
              An item that does not get indexed, but otherwise has the same
              purpose as CONTAINER_ITEM.
          type: string
          enum:
            - UNSPECIFIED
            - CONTENT_ITEM
            - CONTAINER_ITEM
            - VIRTUAL_CONTAINER_ITEM
          description: The type for this item.
        name:
          type: string
          description: >-
            The name of the Item. Format:
            datasources/{source_id}/items/{item_id} This is a required field.
            The maximum length is 1536 characters.
        status:
          description: Status of the item. Output only field.
          $ref: '#/components/schemas/ItemStatus'
        payload:
          format: byte
          description: >-
            Additional state connector can store for this item. The maximum
            length is 10000 bytes.
          type: string
        content:
          $ref: '#/components/schemas/ItemContent'
          description: Item content to be indexed and made text searchable.
        metadata:
          $ref: '#/components/schemas/ItemMetadata'
          description: The metadata information.
      type: object
    EnterpriseTopazSidekickAnswerAnswerList:
      description: A list of answers represented as free text.
      properties:
        labeledAnswer:
          items:
            $ref: >-
              #/components/schemas/EnterpriseTopazSidekickAnswerAnswerListLabeledAnswer
          type: array
          description: Answers that have a corresponding label.
        type:
          type: string
          enum:
            - UNKNOWN
            - PERSON_ADDRESS
            - PERSON_BIRTHDAY
            - PERSON_DEPARTMENT
            - PERSON_DESK_LOCATION
            - PERSON_EMAIL
            - PERSON_JOB_TITLE
            - PERSON_PHONE
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: Answer type.
      type: object
      id: EnterpriseTopazSidekickAnswerAnswerList
    RequestOptions:
      description: Shared request options for all RPC methods.
      id: RequestOptions
      type: object
      properties:
        languageCode:
          description: >-
            The BCP-47 language code, such as "en-US" or "sr-Latn". For more
            information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. For
            translations. Set this field using the language set in browser or
            for the page. In the event that the user's language preference is
            known, set this field to the known user language. When specified,
            the documents in search results are biased towards the specified
            language. From Suggest API perspective, for 3p suggest this is used
            as a hint while making predictions to add language boosting.
          type: string
        timeZone:
          type: string
          description: >-
            Current user's time zone id, such as "America/Los_Angeles" or
            "Australia/Sydney". These IDs are defined by [Unicode Common Locale
            Data Repository (CLDR)](http://cldr.unicode.org/) project, and
            currently available in the file
            [timezone.xml](http://unicode.org/repos/cldr/trunk/common/bcp47/timezone.xml).
            This field is used to correctly interpret date and time queries. If
            this field is not specified, the default time zone (UTC) is used.
        debugOptions:
          description: Debug options of the request
          $ref: '#/components/schemas/DebugOptions'
        searchApplicationId:
          description: >-
            The ID generated when you create a search application using the
            [admin console](https://support.google.com/a/answer/9043922).
          type: string
    SourceResultCount:
      id: SourceResultCount
      type: object
      description: Per source result count information.
      properties:
        resultCountExact:
          description: The exact result count for this source.
          type: string
          format: int64
        resultCountEstimate:
          description: The estimated result count for this source.
          format: int64
          type: string
        source:
          description: The source the result count information is associated with.
          $ref: '#/components/schemas/Source'
        hasMoreResults:
          type: boolean
          description: Whether there are more search results for this source.
    EnterpriseTopazSidekickCommonPerson:
      description: Common representation of a person.
      type: object
      properties:
        gaiaId:
          format: int64
          type: string
          description: This field is deprecated. The obfuscated_id should be used instead.
        cellPhone:
          type: string
          description: Cell phone number.
        birthday:
          description: The birthday.
          $ref: '#/components/schemas/EnterpriseTopazSidekickCommonPersonBirthday'
        fullAddress:
          type: string
          description: >-
            The fully formatted address (e.g. 1255 Pear Avenue, Mountain View
            94043, United States).
        streetAddress:
          description: The street address (e.g. 1255 Pear Avenue).
          type: string
        displayName:
          description: The full name.
          type: string
        jobTitle:
          description: The person's job title (e.g. Software Engineer).
          type: string
        givenName:
          type: string
          description: The first name.
        manager:
          $ref: '#/components/schemas/EnterpriseTopazSidekickCommonPerson'
          description: The manager.
        obfuscatedId:
          type: string
          description: The obfuscated GAIA ID.
        deskPhone:
          description: Work desk phone number.
          type: string
        photoUrl:
          description: The URL for the Focus profile picture.
          type: string
        deskLocation:
          type: string
          description: Desk location (e.g. US-MTV-PR55-5-5B1I).
        department:
          description: The department the person works in (e.g. Engineering).
          type: string
        familyName:
          type: string
          description: The last name.
        email:
          description: Email.
          type: string
      id: EnterpriseTopazSidekickCommonPerson
    BooleanPropertyOptions:
      id: BooleanPropertyOptions
      properties:
        operatorOptions:
          $ref: '#/components/schemas/BooleanOperatorOptions'
          description: >-
            If set, describes how the boolean should be used as a search
            operator.
      description: The options for boolean properties.
      type: object
    SortOptions:
      properties:
        operatorName:
          type: string
          description: >-
            The name of the operator corresponding to the field to sort on. The
            corresponding property must be marked as sortable.
        sortOrder:
          type: string
          enum:
            - ASCENDING
            - DESCENDING
          description: Ascending is the default sort order
          enumDescriptions:
            - ''
            - ''
      id: SortOptions
      type: object
    DoubleValues:
      type: object
      properties:
        values:
          items:
            format: double
            type: number
          type: array
      id: DoubleValues
      description: List of double values.
    SearchResult:
      description: Results containing indexed information for a document.
      properties:
        clusteredResults:
          type: array
          description: >-
            If source is clustered, provide list of clustered results. There
            will only be one level of clustered results. If current source is
            not enabled for clustering, this field will be empty.
          items:
            $ref: '#/components/schemas/SearchResult'
        snippet:
          description: >-
            The concatenation of all snippets (summaries) available for this
            result.
          $ref: '#/components/schemas/Snippet'
        debugInfo:
          $ref: '#/components/schemas/ResultDebugInfo'
          description: Debugging information about this search result.
        url:
          description: >-
            The URL of the search result. The URL contains a Google redirect to
            the actual item. This URL is signed and shouldn't be changed.
          type: string
        title:
          type: string
          description: Title of the search result.
        metadata:
          description: Metadata of the search result.
          $ref: '#/components/schemas/Metadata'
      id: SearchResult
      type: object
    EnterpriseTopazSidekickRankingParams:
      id: EnterpriseTopazSidekickRankingParams
      description: Ranking params.
      type: object
      properties:
        startTimeMs:
          type: string
          format: uint64
          description: >-
            The start-time that this object will bid-for If the type is marked
            as FIXED, then this start-time will persist after bidding. If the
            type is marked as FLEXIBLE, then it will occur at the given time or
            sometime after the requested time. Expected to be set for all types.
        type:
          description: The packing type of this object.
          enumDescriptions:
            - Fixed, i.e., the card is time sensitive.
            - Flexible, i.e., the card is not time sensitive.
          enum:
            - FIXED
            - FLEXIBLE
          type: string
        endTimeMs:
          format: uint64
          type: string
          description: >-
            The end-time that this object will expect to occur. If the type is
            marked as FIXED, then this end-time will persist after bidding. If
            the type is marked as FLEXIBLE, this field is NOT expected to be
            filled and will be filled in after it has won a bid. Expected to be
            set when type is set to FIXED.
        score:
          format: float
          description: The score of the card to be used to break priority-ties
          type: number
        priority:
          enum:
            - UNKNOWN
            - CRITICAL
            - IMPORTANT
            - HIGH
            - NORMAL
            - BEST_EFFORT
          description: >-
            The priority to determine between objects that have the same
            start_time_ms The lower-value of priority == ranked higher.
            Max-priority = 0. Expected to be set for all types.
          type: string
          enumDescriptions:
            - Unknown (default).
            - Critical.
            - Important.
            - High.
            - Normal.
            - Best effort.
        spanMs:
          type: string
          format: uint64
          description: >-
            The span that this card will take in the stream Expected to be set
            when type is set to FLEXIBLE.
    EnterpriseTopazSidekickConflictingEventsCardProto:
      description: Conflicting meetings card proto.
      properties:
        mainEvent:
          $ref: '#/components/schemas/EnterpriseTopazSidekickAgendaEntry'
          description: The event identified as being the most important.
        conflictingEvent:
          description: All the events that conflict with main_event.
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickAgendaEntry'
      id: EnterpriseTopazSidekickConflictingEventsCardProto
      type: object
    EnterpriseTopazSidekickMeetingNotesCardRequest:
      id: EnterpriseTopazSidekickMeetingNotesCardRequest
      description: Meeting notes card request.
      properties:
        error:
          $ref: '#/components/schemas/EnterpriseTopazSidekickMeetingNotesCardError'
          description: The error and reason if known error occured.
        event:
          description: The event to request meeting notes creation
          $ref: '#/components/schemas/EnterpriseTopazSidekickAgendaEntry'
        canCreateFor:
          type: array
          description: Who are the meeting notes created for.
          items:
            enum:
              - UNKNOWN
              - MYSELF
              - ALL_ATTENDEES
            type: string
            enumDescriptions:
              - Unknown (default).
              - For the requester.
              - For all the meeting attendees.
      type: object
    DataSourceRestriction:
      id: DataSourceRestriction
      properties:
        source:
          $ref: '#/components/schemas/Source'
          description: The source of restriction.
        filterOptions:
          description: >-
            Filter options restricting the results. If multiple filters are
            present, they are grouped by object type before joining. Filters
            with the same object type are joined conjunctively, then the
            resulting expressions are joined disjunctively. The maximum number
            of elements is 20. NOTE: Suggest API supports only few filters at
            the moment: "objecttype", "type" and "mimetype". For now, schema
            specific filters cannot be used to filter suggestions.
          items:
            $ref: '#/components/schemas/FilterOptions'
          type: array
      description: Restriction on Datasource.
      type: object
    UpdateDataSourceRequest:
      type: object
      id: UpdateDataSourceRequest
      properties:
        debugOptions:
          $ref: '#/components/schemas/DebugOptions'
          description: Common debug options.
        source:
          $ref: '#/components/schemas/DataSource'
        updateMask:
          description: >-
            Only applies to
            [`settings.datasources.patch`](https://developers.google.com/cloud-search/docs/reference/rest/v1/settings.datasources/patch).
            Update mask to control which fields to update. Example field paths:
            `name`, `displayName`. * If `update_mask` is non-empty, then only
            the fields specified in the `update_mask` are updated. * If you
            specify a field in the `update_mask`, but don't specify its value in
            the source, that field is cleared. * If the `update_mask` is not
            present or empty or has the value `*`, then all fields are updated.
          type: string
          format: google-fieldmask
    HtmlPropertyOptions:
      id: HtmlPropertyOptions
      description: The options for html properties.
      type: object
      properties:
        operatorOptions:
          $ref: '#/components/schemas/HtmlOperatorOptions'
          description: >-
            If set, describes how the property should be used as a search
            operator.
        retrievalImportance:
          description: >-
            Indicates the search quality importance of the tokens within the
            field when used for retrieval. Can only be set to DEFAULT or NONE.
          $ref: '#/components/schemas/RetrievalImportance'
    EnterpriseTopazSidekickPeopleDisambiguationCard:
      properties:
        person:
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickCommonPerson'
          type: array
          description: Candidate persons for the query.
      type: object
      id: EnterpriseTopazSidekickPeopleDisambiguationCard
    AuditLoggingSettings:
      properties:
        logAdminReadActions:
          type: boolean
          description: >-
            Indicates whether audit logging is on/off for admin activity read
            APIs i.e. Get/List DataSources, Get/List SearchApplications etc.
        project:
          type: string
          description: >-
            The resource name of the GCP Project to store audit logs. Cloud
            audit logging will be enabled after project_name has been updated
            through CustomerService. Format: projects/{project_id}
        logDataReadActions:
          type: boolean
          description: >-
            Indicates whether audit logging is on/off for data access read APIs
            i.e. ListItems, GetItem etc.
        logDataWriteActions:
          type: boolean
          description: >-
            Indicates whether audit logging is on/off for data access write APIs
            i.e. IndexItem etc.
      id: AuditLoggingSettings
      description: Represents the settings for Cloud audit logging
      type: object
    UserActivity:
      id: UserActivity
      type: object
      properties:
        queryActivity:
          description: Contains data which needs to be logged/removed.
          $ref: '#/components/schemas/QueryActivity'
      description: >-
        User's single or bulk query activity. This can be a logging query or
        deletion query.
    EnterpriseTopazSidekickDocumentPerCategoryListDocumentPerCategoryListEntry:
      properties:
        rationale:
          type: string
          description: Reason this document was selected.
        category:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - >-
              Mention categories. The mention has been viewed by the user, but
              the user has not replied.
            - The user has replied to the mention.
            - The mention has not been viewed by the user.
            - >-
              Share categories. Consists of documents that have been explicitly
              shared with the user. Document has been viewed.
            - Document has not been viewed.
            - Document has been edited.
          enum:
            - UNKNOWN_DOCUMENT
            - ACTIONABLE
            - VIEWED
            - REPLIED
            - MENTION_VIEWED
            - MENTION_REPLIED
            - MENTION_NOT_VIEWED
            - SHARED_AND_VIEWED
            - SHARED_NOT_VIEWED
            - EDITED
          type: string
        document:
          $ref: '#/components/schemas/EnterpriseTopazSidekickCommonDocument'
      id: >-
        EnterpriseTopazSidekickDocumentPerCategoryListDocumentPerCategoryListEntry
      type: object
    Date:
      type: object
      properties:
        day:
          description: Day of month. Must be from 1 to 31 and valid for the year and month.
          format: int32
          type: integer
        month:
          description: Month of date. Must be from 1 to 12.
          format: int32
          type: integer
        year:
          type: integer
          format: int32
          description: Year of date. Must be from 1 to 9999.
      description: >-
        Represents a whole calendar date, for example a date of birth. The time
        of day and time zone are either specified elsewhere or are not
        significant. The date is relative to the [Proleptic Gregorian
        Calendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar).
        The date must be a valid calendar date between the year 1 and 9999.
      id: Date
    EnterpriseTopazSidekickFindMeetingTimeCardProto:
      description: Response to find meeting time among a set of people.
      properties:
        skippedInvitees:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickPerson'
          description: >-
            Invitees that have been skipped in the computation, most likely
            because they are groups.
        scheduledMeeting:
          $ref: '#/components/schemas/EnterpriseTopazSidekickScheduledMeeting'
          description: Details about the scheduled meeting, if one exists.
        invitees:
          type: array
          description: Invitees to the event.
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickPerson'
        requester:
          description: Requester.
          $ref: '#/components/schemas/EnterpriseTopazSidekickPerson'
        timeBoundaries:
          $ref: '#/components/schemas/EnterpriseTopazSidekickTimeSlot'
          description: Min and max timestamp used to find a common available timeslot.
        commonAvailableTimeSlots:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickTimeSlot'
          description: Slots when all attendees have availability.
        timezoneId:
          description: Timezone ID.
          type: string
      id: EnterpriseTopazSidekickFindMeetingTimeCardProto
      type: object
    QueryActivity:
      description: Details about a user's query activity.
      properties:
        query:
          description: User input query to be logged/removed.
          type: string
      id: QueryActivity
      type: object
    EnterpriseTopazSidekickCommonDocumentJustification:
      id: EnterpriseTopazSidekickCommonDocumentJustification
      description: Justification of why we are reporting the document.
      type: object
      properties:
        justification:
          type: string
          description: A locale aware message that explains why this document was selected.
        reason:
          enum:
            - UNKNOWN
            - TRENDING_IN_COLLABORATORS
            - TRENDING_IN_DOMAIN
            - FREQUENTLY_VIEWED
            - FREQUENTLY_EDITED
            - NEW_UPDATES
            - NEW_COMMENTS
            - EVENT_DESCRIPTION
            - EVENT_ATTACHMENT
            - EVENT_METADATA_ATTACHMENT
            - MINED_DOCUMENT
            - NEW_MENTIONS
            - NEW_SHARES
          type: string
          enumDescriptions:
            - Unknown justification.
            - Popular documents within collaborators.
            - Popular documents within the domain.
            - Documents being reviewed frequently by the current user .
            - Documents being edited frequently by the current user .
            - Documents updated since user's last visit.
            - Documents that receive comments since user's last visit.
            - Documents in the calendar event description.
            - Documents in the calendar event attachments section.
            - >-
              Documents attached in calendar event metadata instead of the
              attachment section. Event metadata is not visible to the final
              user. Enterprise assist uses this metadata to store auto-generated
              documents such as meeting notes.
            - >-
              Documents mined, and so, probably related to the request context.
              For example, this category includes documents related to a
              meeting.
            - Documents that contains mentions of the user.
            - Documents that are shared with the user.
          description: >-
            Reason on why the document is selected. Populate for trending
            documents.
    SuggestRequest:
      id: SuggestRequest
      properties:
        dataSourceRestrictions:
          description: >-
            The sources to use for suggestions. If not specified, the data
            sources are taken from the current search application. NOTE:
            Suggestions are only supported for the following sources: *
            Third-party data sources * PredefinedSource.PERSON *
            PredefinedSource.GOOGLE_DRIVE
          items:
            $ref: '#/components/schemas/DataSourceRestriction'
          type: array
        requestOptions:
          $ref: '#/components/schemas/RequestOptions'
          description: Request options, such as the search application and user timezone.
        query:
          description: >-
            Partial query for which autocomplete suggestions will be shown. For
            example, if the query is "sea", then the server might return
            "season", "search", "seagull" and so on.
          type: string
      type: object
      description: Request of suggest API.
    GetCustomerQueryStatsResponse:
      type: object
      properties:
        stats:
          type: array
          items:
            $ref: '#/components/schemas/CustomerQueryStats'
        totalQueryCount:
          type: string
          format: int64
          description: >-
            Total successful query count (status code 200) for the given date
            range.
      id: GetCustomerQueryStatsResponse
    SuggestResponse:
      type: object
      id: SuggestResponse
      description: Response of the suggest API.
      properties:
        suggestResults:
          description: List of suggestions.
          items:
            $ref: '#/components/schemas/SuggestResult'
          type: array
    SearchApplicationUserStats:
      type: object
      properties:
        date:
          description: >-
            The date for which session stats were calculated. Stats calculated
            on the next day close to midnight are returned.
          $ref: '#/components/schemas/Date'
        sevenDaysActiveUsersCount:
          description: The count of unique active users in the past seven days
          type: string
          format: int64
        oneDayActiveUsersCount:
          description: The count of unique active users in the past one day
          format: int64
          type: string
        thirtyDaysActiveUsersCount:
          format: int64
          type: string
          description: The count of unique active users in the past thirty days
      id: SearchApplicationUserStats
    CustomerSettings:
      id: CustomerSettings
      description: Represents settings at a customer level.
      properties:
        vpcSettings:
          $ref: '#/components/schemas/VPCSettings'
          description: >-
            VPC SC settings for the customer. If update_mask is empty then this
            field will be updated based on UpdateCustomerSettings request.
        auditLoggingSettings:
          description: >-
            Audit Logging settings for the customer. If update_mask is empty
            then this field will be updated based on UpdateCustomerSettings
            request.
          $ref: '#/components/schemas/AuditLoggingSettings'
      type: object
    DataSource:
      type: object
      id: DataSource
      properties:
        shortName:
          description: >-
            A short name or alias for the source. This value will be used to
            match the 'source' operator. For example, if the short name is
            *<value>* then queries like *source:<value>* will only return
            results for this source. The value must be unique across all
            datasources. The value must only contain alphanumeric characters
            (a-zA-Z0-9). The value cannot start with 'google' and cannot be one
            of the following: mail, gmail, docs, drive, groups, sites, calendar,
            hangouts, gplus, keep, people, teams. Its maximum length is 32
            characters.
          type: string
        name:
          type: string
          description: >-
            The name of the datasource resource. Format:
            datasources/{source_id}. The name is ignored when creating a
            datasource.
        operationIds:
          type: array
          items:
            type: string
          description: >-
            IDs of the Long Running Operations (LROs) currently running for this
            schema.
        displayName:
          description: >-
            Required. Display name of the datasource The maximum length is 300
            characters.
          type: string
        indexingServiceAccounts:
          type: array
          description: List of service accounts that have indexing access.
          items:
            type: string
        returnThumbnailUrls:
          description: >-
            Can a user request to get thumbnail URI for Items indexed in this
            data source.
          type: boolean
        itemsVisibility:
          items:
            $ref: '#/components/schemas/GSuitePrincipal'
          type: array
          description: >-
            This field restricts visibility to items at the datasource level.
            Items within the datasource are restricted to the union of users and
            groups included in this field. Note that, this does not ensure
            access to a specific item, as users need to have ACL permissions on
            the contained items. This ensures a high level access on the entire
            datasource, and that the individual items are not shared outside
            this visibility.
        disableModifications:
          description: >-
            If true, sets the datasource to read-only mode. In read-only mode,
            the Indexing API rejects any requests to index or delete items in
            this source. Enabling read-only mode does not stop the processing of
            previously accepted data.
          type: boolean
        disableServing:
          description: Disable serving any search or assist results.
          type: boolean
      description: >-
        Datasource is a logical namespace for items to be indexed. All items
        must belong to a datasource. This is the prerequisite before items can
        be indexed into Cloud Search.
    Principal:
      type: object
      properties:
        gsuitePrincipal:
          $ref: '#/components/schemas/GSuitePrincipal'
          description: This principal is a Google Workspace user, group or domain.
        groupResourceName:
          type: string
          description: >-
            This principal is a group identified using an external identity. The
            name field must specify the group resource name with this format:
            identitysources/{source_id}/groups/{ID}
        userResourceName:
          type: string
          description: >-
            This principal is a user identified using an external identity. The
            name field must specify the user resource name with this format:
            identitysources/{source_id}/users/{ID}
      id: Principal
      description: Reference to a user, group, or domain.
    GetCustomerSessionStatsResponse:
      type: object
      id: GetCustomerSessionStatsResponse
      properties:
        stats:
          type: array
          items:
            $ref: '#/components/schemas/CustomerSessionStats'
    DataSourceIndexStats:
      properties:
        date:
          description: >-
            The date for which index stats were calculated. If the date of
            request is not the current date then stats calculated on the next
            day are returned. Stats are calculated close to mid night in this
            case. If date of request is current date, then real time stats are
            returned.
          $ref: '#/components/schemas/Date'
        itemCountByStatus:
          type: array
          description: Number of items aggregrated by status code.
          items:
            $ref: '#/components/schemas/ItemCountByStatus'
      description: Aggregation of items by status code as of the specified date.
      type: object
      id: DataSourceIndexStats
    Filter:
      id: Filter
      description: >-
        A generic way of expressing filters in a query, which supports two
        approaches: **1. Setting a ValueFilter.** The name must match an
        operator_name defined in the schema for your data source. **2. Setting a
        CompositeFilter.** The filters are evaluated using the logical operator.
        The top-level operators can only be either an AND or a NOT. AND can
        appear only at the top-most level. OR can appear only under a top-level
        AND.
      type: object
      properties:
        compositeFilter:
          $ref: '#/components/schemas/CompositeFilter'
        valueFilter:
          $ref: '#/components/schemas/ValueFilter'
    ShareScope:
      properties:
        scope:
          enumDescriptions:
            - ''
            - Only the author can view the post.
            - Viewable only by a set of people.
            - Viewable by extended circles.
            - ''
            - ''
          enum:
            - UNKNOWN
            - PRIVATE
            - LIMITED
            - EXTENDED
            - DASHER_DOMAIN
            - PUBLIC
          description: The scope to which the content was shared.
          type: string
        domain:
          type: string
          description: >-
            If scope is DOMAIN, this field contains the dasher domain, for
            example "google.com".
      type: object
      id: ShareScope
    SuggestResult:
      description: One suggestion result.
      id: SuggestResult
      properties:
        peopleSuggestion:
          $ref: '#/components/schemas/PeopleSuggestion'
          description: >-
            This is present when the suggestion indicates a person. It contains
            more information about the person - like their email ID, name etc.
        source:
          $ref: '#/components/schemas/Source'
          description: The source of the suggestion.
        querySuggestion:
          description: >-
            This field will be present if the suggested query is a word/phrase
            completion.
          $ref: '#/components/schemas/QuerySuggestion'
        suggestedQuery:
          type: string
          description: >-
            The suggested query that will be used for search, when the user
            clicks on the suggestion
      type: object
    EnterpriseTopazSidekickCommonDebugInfo:
      properties:
        message:
          type: string
          description: Debug message.
      id: EnterpriseTopazSidekickCommonDebugInfo
      description: >-
        Container of debugging information in all object levels. Extend as
        needed.
      type: object
    ObjectDefinition:
      properties:
        name:
          description: >-
            The name for the object, which then defines its type. Item indexing
            requests should set the objectType field equal to this value. For
            example, if *name* is *Document*, then indexing requests for items
            of type Document should set objectType equal to *Document*. Each
            object definition must be uniquely named within a schema. The name
            must start with a letter and can only contain letters (A-Z, a-z) or
            numbers (0-9). The maximum length is 256 characters.
          type: string
        options:
          $ref: '#/components/schemas/ObjectOptions'
          description: The optional object-specific options.
        propertyDefinitions:
          type: array
          description: >-
            The property definitions for the object. The maximum number of
            elements is 1000.
          items:
            $ref: '#/components/schemas/PropertyDefinition'
      description: The definition for an object within a data source.
      type: object
      id: ObjectDefinition
    Content:
      properties:
        title:
          description: '[Optional] Title of the card.'
          $ref: '#/components/schemas/BackgroundColoredText'
        subtitle:
          $ref: '#/components/schemas/BackgroundColoredText'
          description: '[Optional] Subtitle of the card.'
        description:
          $ref: '#/components/schemas/SafeHtmlProto'
          description: '[Optional] Description of the card.'
        actions:
          description: '[Optional] Actions for this card.'
          type: array
          items:
            $ref: '#/components/schemas/Action'
      id: Content
      type: object
    Media:
      properties:
        resourceName:
          description: Name of the media resource.
          type: string
      type: object
      description: Media resource.
      id: Media
    HtmlValues:
      type: object
      properties:
        values:
          items:
            type: string
          description: The maximum allowable length for html values is 2048 characters.
          type: array
      id: HtmlValues
      description: List of html values.
    SourceScoringConfig:
      description: >-
        Set the scoring configuration. This allows modifying the ranking of
        results for a source.
      properties:
        sourceImportance:
          enum:
            - DEFAULT
            - LOW
            - HIGH
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          description: Importance of the source.
      id: SourceScoringConfig
      type: object
    RepositoryError:
      description: Errors when the connector is communicating to the source repository.
      type: object
      id: RepositoryError
      properties:
        type:
          description: The type of error.
          enumDescriptions:
            - Unknown error.
            - Unknown or unreachable host.
            - DNS problem, such as the DNS server is not responding.
            - Cannot connect to the repository server.
            - Failed authentication due to incorrect credentials.
            - Service account is not authorized for the repository.
            - Repository server error.
            - Quota exceeded.
            - Server temporarily unavailable.
            - >-
              Client-related error, such as an invalid request from the
              connector to the repository server.
          type: string
          enum:
            - UNKNOWN
            - NETWORK_ERROR
            - DNS_ERROR
            - CONNECTION_ERROR
            - AUTHENTICATION_ERROR
            - AUTHORIZATION_ERROR
            - SERVER_ERROR
            - QUOTA_EXCEEDED
            - SERVICE_UNAVAILABLE
            - CLIENT_ERROR
        errorMessage:
          description: >-
            Message that describes the error. The maximum allowable length of
            the message is 8192 characters.
          type: string
        httpStatusCode:
          description: Error codes. Matches the definition of HTTP status codes.
          format: int32
          type: integer
    PersonCore:
      id: PersonCore
      properties:
        dottedLineManagers:
          description: >-
            The profile owner's direct dotted line managers in no particular
            order. Note that not all fields of these PersonCores will be set, in
            particular, relationships will be empty.
          type: array
          items:
            $ref: '#/components/schemas/PersonCore'
        costCenter:
          type: string
          description: 'Person''s cost center as a string, e.g. "926: Googler Apps".'
        employeeId:
          description: >-
            Person's employee number (external ID of type "organization") For
            google.com this is the badge number (e.g. 2 for Larry Page).
          type: string
        emails:
          items:
            type: string
          type: array
          description: >-
            E-mail addresses of the person. The primary or preferred email
            should be first.
        managers:
          description: >-
            The profile owner's management chain from top to bottom, where
            managers[0] is the CEO, manager[N-2] is the person's manager's
            manager and managers[N-1] is the person's direct manager. Note that
            not all fields of these PersonCores will be set, in particular,
            relationships will be empty.
          type: array
          items:
            $ref: '#/components/schemas/PersonCore'
        keywords:
          description: Custom keywords the domain admin has added.
          type: object
          additionalProperties:
            type: string
        waldoComeBackTime:
          type: string
          format: google-datetime
        geoLocation:
          $ref: '#/components/schemas/MapInfo'
        personId:
          description: The person's obfuscated Gaia ID.
          type: string
        jobTitle:
          description: >-
            Profile owner's job title (e.g. "Software Engineer"). For google.com
            this is the Workday preferred job title.
          type: string
        directReports:
          description: >-
            A subset of the profile owner's direct reports. The number of
            entities here may be less than total_direct_reports_count, because
            typically ProfileResponse does not include all the person's reports,
            if there are too many to retrieve efficiently. Note that not all
            fields of these PersonCores will be set, in particular,
            relationships will be empty.
          items:
            $ref: '#/components/schemas/PersonCore'
          type: array
        location:
          description: >-
            Detailed desk location within the company. For google.com this is
            the desk location code (e.g. "DE-MUC-ARP-6T2-6T2C0C") if the person
            has a desk.
          type: string
        addressMeAs:
          type: string
          description: >-
            Instructions for how to address this person (e.g. custom pronouns).
            For google.com this is a set of pronouns from a defined list of
            options.
        mission:
          type: string
          description: Custom mission statement the profile owner has added.
        department:
          description: >-
            The person's Organization department, e.g. "People Operations". For
            google.com this is usually called "area".
          type: string
        links:
          items:
            $ref: '#/components/schemas/EnterpriseTopazFrontendTeamsLink'
          description: Custom links the profile owner has added.
          type: array
        totalFteCount:
          type: string
          format: int64
          description: >-
            The sum of all profile owner's reports and their own
            full-time-equivalents in ‰ (e.g. 1800 if one report is working 80%
            and profile owner 100%).
        postalAddress:
          type: string
          description: Postal address of office/building.
        availabilityStatus:
          type: string
          enum:
            - UNKNOWN
            - OUT_OF_OFFICE
            - OUTSIDE_WORKING_HOURS
            - AVAILABLE
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        birthday:
          $ref: '#/components/schemas/Date'
          description: Person birthday.
        ftePermille:
          type: string
          description: >-
            Full-time equivalent (in ‰) (e.g. 800 for a person who's working
            80%).
          format: int64
        name:
          type: string
          description: Human-readable Unicode display name.
        chatUrl:
          description: >-
            The URL to start a chat conversation with the profile owner. For
            google.com this is a Hangouts URL.
          $ref: '#/components/schemas/SafeUrlProto'
        photoUrl:
          description: Person photo.
          $ref: '#/components/schemas/SafeUrlProto'
        totalDirectReportsCount:
          description: Total count of the profile owner's direct reports.
          format: int32
          type: integer
        adminTo:
          items:
            $ref: '#/components/schemas/PersonCore'
          description: >-
            People the profile owner is an admin to. Note that not all fields of
            these PersonCores will be set, in particular, relationships will be
            empty.
          type: array
        totalDlrCount:
          description: Total count of the profile owner's dotted-line reports.
          type: integer
          format: int32
        keywordTypes:
          description: List of keys to use from the map 'keywords'.
          items:
            type: string
          type: array
        gmailUrl:
          type: string
        admins:
          type: array
          description: >-
            The profile owner's admins in no particular order. Note that not all
            fields of these PersonCores will be set, in particular,
            relationships will be empty.
          items:
            $ref: '#/components/schemas/PersonCore'
        dottedLineReports:
          type: array
          description: >-
            A subset of the profile owner's dotted-line reports. The number of
            entities here may be less than total_dlr_count. Note that not all
            fields of these PersonCores will be set, in particular,
            relationships will be empty.
          items:
            $ref: '#/components/schemas/PersonCore'
        calendarUrl:
          $ref: '#/components/schemas/SafeUrlProto'
          description: The URL to open the profile owner's primary calendar.
        fingerprint:
          type: string
          description: >-
            A fingerprint used by PAPI to reliably determine if a resource has
            changed Externally it is used as part of the etag.
        username:
          description: >-
            External ID of type "login_id" for the profile. For google.com this
            is the username/LDAP.
          type: string
        phoneNumbers:
          items:
            $ref: >-
              #/components/schemas/EnterpriseTopazFrontendTeamsPersonCorePhoneNumber
          type: array
        officeLocation:
          type: string
          description: >-
            Office/building identifier within the company. For google.com this
            is the office code (e.g. "DE-MUC-ARP").
      description: 'Information for rendering a person. NEXT ID: 37'
      type: object
    EnterpriseTopazSidekickCardMetadata:
      type: object
      description: Card metadata.
      id: EnterpriseTopazSidekickCardMetadata
      properties:
        rankingParams:
          $ref: '#/components/schemas/EnterpriseTopazSidekickRankingParams'
          description: Ranking params.
        debugInfo:
          type: string
          description: Debug info (only reported if request's debug_level > 0).
        cardId:
          type: string
          description: >-
            An ID to identify the card and match actions to it. Be thoughtful of
            new card IDs since actions will be associated to that ID. E.g., if
            two card IDs collide, the system will think that the actions have
            been applied to the same card. Similarly, if EAS can return multiple
            cards of the same type (e.g., Meetings), ensure that the card_id
            identifies a given instance of the card so that, e.g., dismissals
            only affect the dismissed card as opposed to affecting all meeting
            cards.
        cardCategory:
          enum:
            - DEFAULT
            - ANSWER
            - KNOWLEDGE
            - HOMEPAGE
          enumDescriptions:
            - >-
              Let MSCR decide how this card should be packed. Most cards should
              choose this type. This type should largely be considered
              equivalent to ANSWER. However, this is not guaranteed to be the
              case as the request to MSCR may override the static configuration.
            - This card should be rendered as an answer card.
            - >-
              This card should be rendered as a knowledge card (a non-organic
              result).
            - This card should be rendered in the Homepage.
          description: >-
            Declares a preference for how this card should be packed in MSCR.
            All cards in a response must correspond to a single category. As a
            result, cards may be dropped from the response if this field is set.
            Any card that does not match the category of the card with the
            highest priority in the response will be dropped.
          type: string
        renderMode:
          description: Render mode.
          enum:
            - UNKNOWN_RENDER
            - COLLAPSED
            - EXPANDED
          type: string
          enumDescriptions:
            - Unknown mode (default).
            - Collapsed.
            - Expanded.
        nlpMetadata:
          $ref: '#/components/schemas/EnterpriseTopazSidekickNlpMetadata'
          description: Information about the NLP done to get the card.
        chronology:
          type: string
          enum:
            - UNKNOWN
            - PAST
            - RECENTLY_PAST
            - PRESENT
            - NEAR_FUTURE
            - FUTURE
          enumDescriptions:
            - Unknown chronology (default).
            - Past.
            - Recently past.
            - Present.
            - Near future.
            - Future.
          description: Chronology.
    UnmappedIdentity:
      id: UnmappedIdentity
      properties:
        resolutionStatusCode:
          description: The resolution status for the external identity.
          enumDescriptions:
            - >-
              Input-only value. Used to list all unmapped identities regardless
              of status.
            - >-
              The unmapped identity was not found in IDaaS, and needs to be
              provided by the user.
            - >-
              The identity source associated with the identity was either not
              found or deleted.
            - >-
              IDaaS does not understand the identity source, probably because
              the schema was modified in a non compatible way.
            - >-
              The number of users associated with the external identity is too
              large.
            - Internal error.
          type: string
          enum:
            - CODE_UNSPECIFIED
            - NOT_FOUND
            - IDENTITY_SOURCE_NOT_FOUND
            - IDENTITY_SOURCE_MISCONFIGURED
            - TOO_MANY_MAPPINGS_FOUND
            - INTERNAL_ERROR
        externalIdentity:
          description: The resource name for an external user.
          $ref: '#/components/schemas/Principal'
      type: object
    MatchRange:
      properties:
        end:
          description: End of the match in the snippet.
          type: integer
          format: int32
        start:
          type: integer
          description: Starting position of the match in the snippet.
          format: int32
      type: object
      description: Matched range of a snippet [start, end).
      id: MatchRange
    GetCustomerIndexStatsResponse:
      properties:
        averageIndexedItemCount:
          type: string
          description: >-
            Average item count for the given date range for which billing is
            done.
          format: int64
        stats:
          type: array
          description: >-
            Summary of indexed item counts, one for each day in the requested
            range.
          items:
            $ref: '#/components/schemas/CustomerIndexStats'
      type: object
      id: GetCustomerIndexStatsResponse
    StartUploadItemRequest:
      description: Start upload file request.
      id: StartUploadItemRequest
      properties:
        debugOptions:
          description: Common debug options.
          $ref: '#/components/schemas/DebugOptions'
        connectorName:
          description: >-
            The name of connector making this call. Format:
            datasources/{source_id}/connectors/{ID}
          type: string
      type: object
    CheckAccessResponse:
      type: object
      properties:
        hasAccess:
          description: Returns true if principal has access. Returns false otherwise.
          type: boolean
      id: CheckAccessResponse
    Value:
      id: Value
      type: object
      description: Definition of a single value with generic type.
      properties:
        doubleValue:
          type: number
          format: double
        stringValue:
          type: string
        timestampValue:
          format: google-datetime
          type: string
        booleanValue:
          type: boolean
        integerValue:
          type: string
          format: int64
        dateValue:
          $ref: '#/components/schemas/Date'
    EnterpriseTopazSidekickAnswerSuggestedQueryCategory:
      type: object
      properties:
        query:
          items:
            type: string
          description: List of suggested queries to show the user.
          type: array
        isEnabled:
          type: boolean
          description: Whether this category is enabled.
        category:
          description: The query list category.
          type: string
          enum:
            - UNKNOWN
            - CALENDAR
            - DOCUMENT
            - PEOPLE
          enumDescriptions:
            - Unknown.
            - Calendar based queries (e.g. "my agenda for tomorrow").
            - Document based queries (e.g. "files shared with me").
            - People based queries (e.g. "what is x's email address?").
      id: EnterpriseTopazSidekickAnswerSuggestedQueryCategory
      description: Contains a list of suggested queries for a single category.
    EnumPropertyOptions:
      properties:
        orderedRanking:
          enum:
            - NO_ORDER
            - ASCENDING
            - DESCENDING
          enumDescriptions:
            - >-
              There is no ranking order for the property. Results aren't
              adjusted by this property's value.
            - >-
              This property is ranked in ascending order. Lower values indicate
              lower ranking.
            - >-
              This property is ranked in descending order. Lower values indicate
              higher ranking.
          description: >-
            Used to specify the ordered ranking for the enumeration that
            determines how the integer values provided in the possible
            EnumValuePairs are used to rank results. If specified, integer
            values must be provided for all possible EnumValuePair values given
            for this property. Can only be used if isRepeatable is false.
          type: string
        operatorOptions:
          $ref: '#/components/schemas/EnumOperatorOptions'
          description: If set, describes how the enum should be used as a search operator.
        possibleValues:
          type: array
          items:
            $ref: '#/components/schemas/EnumValuePair'
          description: >-
            The list of possible values for the enumeration property. All
            EnumValuePairs must provide a string value. If you specify an
            integer value for one EnumValuePair, then all possible
            EnumValuePairs must provide an integer value. Both the string value
            and integer value must be unique over all possible values. Once set,
            possible values cannot be removed or modified. If you supply an
            ordered ranking and think you might insert additional enum values in
            the future, leave gaps in the initial integer values to allow adding
            a value in between previously registered values. The maximum number
            of elements is 100.
      type: object
      id: EnumPropertyOptions
      description: >-
        The options for enum properties, which allow you to define a restricted
        set of strings to match user queries, set rankings for those string
        values, and define an operator name to be paired with those strings so
        that users can narrow results to only items with a specific value. For
        example, for items in a request tracking system with priority
        information, you could define *p0* as an allowable enum value and tie
        this enum to the operator name *priority* so that search users could add
        *priority:p0* to their query to restrict the set of results to only
        those items indexed with the value *p0*.
    QueryInterpretation:
      id: QueryInterpretation
      properties:
        interpretedQuery:
          description: >-
            The interpretation of the query used in search. For example, queries
            with natural language intent like "email from john" will be
            interpreted as "from:john source:mail". This field will not be
            filled when the reason is NOT_ENOUGH_RESULTS_FOUND_FOR_USER_QUERY.
          type: string
        reason:
          type: string
          enum:
            - UNSPECIFIED
            - QUERY_HAS_NATURAL_LANGUAGE_INTENT
            - NOT_ENOUGH_RESULTS_FOUND_FOR_USER_QUERY
          description: >-
            The reason for interpretation of the query. This field will not be
            UNSPECIFIED if the interpretation type is not NONE.
          enumDescriptions:
            - ''
            - >-
              Natural language interpretation of the query is used to fetch the
              search results.
            - >-
              Query and document terms similarity is used to selectively broaden
              the query to retrieve additional search results since enough
              results were not found for the user query. Interpreted query will
              be empty for this case.
        interpretationType:
          type: string
          enumDescriptions:
            - >-
              Neither the natural language interpretation, nor a broader version
              of the query is used to fetch the search results.
            - >-
              The results from original query are blended with other results.
              The reason for blending these other results with the results from
              original query is populated in the 'Reason' field below.
            - >-
              The results from original query are replaced. The reason for
              replacing the results from original query is populated in the
              'Reason' field below.
          enum:
            - NONE
            - BLEND
            - REPLACE
      type: object
    ObjectValues:
      properties:
        values:
          items:
            $ref: '#/components/schemas/StructuredDataObject'
          type: array
      id: ObjectValues
      description: List of object values.
      type: object
    ObjectDisplayOptions:
      description: The display options for an object.
      type: object
      properties:
        objectDisplayLabel:
          description: >-
            The user friendly label to display in the search result to indicate
            the type of the item. This is OPTIONAL; if not provided, an object
            label isn't displayed on the context line of the search results. The
            maximum length is 64 characters.
          type: string
        metalines:
          description: >-
            Defines the properties that are displayed in the metalines of the
            search results. The property values are displayed in the order given
            here. If a property holds multiple values, all of the values are
            displayed before the next properties. For this reason, it is a good
            practice to specify singular properties before repeated properties
            in this list. All of the properties must set is_returnable to true.
            The maximum number of metalines is 3.
          items:
            $ref: '#/components/schemas/Metaline'
          type: array
      id: ObjectDisplayOptions
    EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader:
      description: Recommended header to display for the card.
      id: EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader
      type: object
      properties:
        title:
          description: The suggested title to display. This defaults to the user's query.
          type: string
    CustomerIndexStats:
      description: Aggregation of items by status code as of the specified date.
      type: object
      id: CustomerIndexStats
      properties:
        date:
          description: The date for which statistics were calculated.
          $ref: '#/components/schemas/Date'
        itemCountByStatus:
          description: Number of items aggregrated by status code.
          type: array
          items:
            $ref: '#/components/schemas/ItemCountByStatus'
    ResultCounts:
      id: ResultCounts
      properties:
        sourceResultCounts:
          description: Result count information for each source with results.
          type: array
          items:
            $ref: '#/components/schemas/SourceResultCount'
      description: Result count information
      type: object
    Metadata:
      type: object
      description: Metadata of a matched search result.
      properties:
        fields:
          type: array
          description: >-
            Indexed fields in structured data, returned as a generic named
            property.
          items:
            $ref: '#/components/schemas/NamedProperty'
        thumbnailUrl:
          description: The thumbnail URL of the result.
          type: string
        objectType:
          type: string
          description: Object type of the search result.
        updateTime:
          format: google-datetime
          description: >-
            The last modified date for the object in the search result. If not
            set in the item, the value returned here is empty. When `updateTime`
            is used for calculating freshness and is not set, this value
            defaults to 2 years from the current time.
          type: string
        source:
          $ref: '#/components/schemas/Source'
          description: The named source for the result, such as Gmail.
        mimeType:
          description: Mime type of the search result.
          type: string
        owner:
          $ref: '#/components/schemas/Person'
          description: >-
            Owner (usually creator) of the document or object of the search
            result.
        displayOptions:
          $ref: '#/components/schemas/ResultDisplayMetadata'
          description: Options that specify how to display a structured data search result.
        createTime:
          description: The creation time for this document or object in the search result.
          type: string
          format: google-datetime
      id: Metadata
    ErrorMessage:
      id: ErrorMessage
      properties:
        source:
          $ref: '#/components/schemas/Source'
        errorMessage:
          type: string
      type: object
      description: Error message per source response.
    DeleteQueueItemsRequest:
      type: object
      id: DeleteQueueItemsRequest
      properties:
        connectorName:
          description: >-
            The name of connector making this call. Format:
            datasources/{source_id}/connectors/{ID}
          type: string
        queue:
          description: The name of a queue to delete items from.
          type: string
        debugOptions:
          $ref: '#/components/schemas/DebugOptions'
          description: Common debug options.
    ItemContent:
      id: ItemContent
      type: object
      properties:
        contentFormat:
          type: string
          enum:
            - UNSPECIFIED
            - HTML
            - TEXT
            - RAW
          enumDescriptions:
            - Invalid value.
            - contentFormat is HTML.
            - contentFormat is free text.
            - contentFormat is raw bytes.
        contentDataRef:
          $ref: '#/components/schemas/UploadItemRef'
          description: >-
            Upload reference ID of a previously uploaded content via write
            method.
        hash:
          description: >-
            Hashing info calculated and provided by the API client for content.
            Can be used with the items.push method to calculate modified state.
            The maximum length is 2048 characters.
          type: string
        inlineContent:
          format: byte
          description: >-
            Content that is supplied inlined within the update method. The
            maximum length is 102400 bytes (100 KiB).
          type: string
      description: >-
        Content of an item to be indexed and surfaced by Cloud Search. Only
        UTF-8 encoded strings are allowed as inlineContent. If the content is
        uploaded and not binary, it must be UTF-8 encoded.
    QuerySuggestion:
      properties: {}
      id: QuerySuggestion
      type: object
      description: >-
        This field does not contain anything as of now and is just used as an
        indicator that the suggest result was a phrase completion.
    SourceCrowdingConfig:
      description: >-
        Set search results crowding limits. Crowding is a situation in which
        multiple results from the same source or host "crowd out" other results,
        diminishing the quality of search for users. To foster better search
        quality and source diversity in search results, you can set a condition
        to reduce repetitive results by source.
      properties:
        numSuggestions:
          format: int32
          description: >-
            Maximum number of suggestions allowed from a source. No limits will
            be set on results if this value is less than or equal to 0.
          type: integer
        numResults:
          format: int32
          type: integer
          description: >-
            Maximum number of results allowed from a datasource in a result page
            as long as results from other sources are not exhausted. Value
            specified must not be negative. A default value is used if this
            value is equal to 0. To disable crowding, set the value greater than
            100.
      id: SourceCrowdingConfig
      type: object
    Interaction:
      type: object
      properties:
        type:
          enumDescriptions:
            - Invalid value.
            - This interaction indicates the user viewed the item.
            - This interaction indicates the user edited the item.
          enum:
            - UNSPECIFIED
            - VIEW
            - EDIT
          type: string
        principal:
          description: The user that acted on the item.
          $ref: '#/components/schemas/Principal'
        interactionTime:
          description: >-
            The time when the user acted on the item. If multiple actions of the
            same type exist for a single user, only the most recent action is
            recorded.
          type: string
          format: google-datetime
      id: Interaction
      description: Represents an interaction between a user and an item.
    PollItemsRequest:
      type: object
      id: PollItemsRequest
      properties:
        statusCodes:
          items:
            enumDescriptions:
              - >-
                Input-only value. Used with Items.list to list all items in the
                queue, regardless of status.
              - >-
                Error encountered by Cloud Search while processing this item.
                Details of the error are in repositoryError.
              - >-
                Item has been modified in the repository, and is out of date
                with the version previously accepted into Cloud Search.
              - >-
                Item is known to exist in the repository, but is not yet
                accepted by Cloud Search. An item can be in this state when
                Items.push has been called for an item of this name that did not
                exist previously.
              - API has accepted the up-to-date data of this item.
            type: string
            enum:
              - CODE_UNSPECIFIED
              - ERROR
              - MODIFIED
              - NEW_ITEM
              - ACCEPTED
          description: Limit the items polled to the ones with these statuses.
          type: array
        connectorName:
          type: string
          description: >-
            The name of connector making this call. Format:
            datasources/{source_id}/connectors/{ID}
        limit:
          format: int32
          type: integer
          description: >-
            Maximum number of items to return. The maximum value is 100 and the
            default value is 20.
        queue:
          description: >-
            Queue name to fetch items from. If unspecified, PollItems will fetch
            from 'default' queue. The maximum length is 100 characters.
          type: string
        debugOptions:
          $ref: '#/components/schemas/DebugOptions'
          description: Common debug options.
    ProcessingError:
      type: object
      id: ProcessingError
      properties:
        code:
          description: Error code indicating the nature of the error.
          type: string
          enum:
            - PROCESSING_ERROR_CODE_UNSPECIFIED
            - MALFORMED_REQUEST
            - UNSUPPORTED_CONTENT_FORMAT
            - INDIRECT_BROKEN_ACL
            - ACL_CYCLE
          enumDescriptions:
            - Input only value. Use this value in Items.
            - >-
              Item's ACL, metadata, or content is malformed or in invalid state.
              FieldViolations contains more details on where the problem is.
            - Countent format is unsupported.
            - >-
              Items with incomplete ACL information due to inheriting other
              items with broken ACL or having groups with unmapped descendants.
            - ACL inheritance graph formed a cycle.
        fieldViolations:
          type: array
          items:
            $ref: '#/components/schemas/FieldViolation'
          description: >-
            In case the item fields are invalid, this field contains the details
            about the validation errors.
        errorMessage:
          type: string
          description: The description of the error.
    TimestampValues:
      id: TimestampValues
      description: List of timestamp values.
      properties:
        values:
          items:
            format: google-datetime
            type: string
          type: array
      type: object
    EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard:
      type: object
      properties:
        header:
          description: The header to display for the card.
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader
        subject:
          description: The profile of the person that was the subject of the query.
          $ref: '#/components/schemas/EnterpriseTopazSidekickCommonPerson'
        disambiguationInfo:
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo
          description: Disambiguation information.
        relatedPeople:
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickCommonPerson'
          type: array
          description: A list of people that are related to the query subject.
        relationType:
          enumDescriptions:
            - Unknown.
            - Direct reports.
            - The manager.
            - The teammates/peers of the subject.
          enum:
            - UNKNOWN
            - DIRECT_REPORTS
            - MANAGER
            - PEERS
          description: >-
            Defines the type of relation the list of people have with the
            subject of the card.
          type: string
        statusMessage:
          type: string
          description: >-
            Localized user friendly message to display to the user in the case
            of missing data or an error.
        responseStatus:
          enum:
            - UNKNOWN
            - SUCCESS
            - MISSING_PERSON
            - MISSING_DATA
          type: string
          description: The response status.
          enumDescriptions:
            - Unknown.
            - Success.
            - No such person was found in the user's domain.
            - >-
              A person was found to match the query, but an answer could not be
              obtained.
      description: >-
        An answer card for a list of people that are related to the subject of
        the query.
      id: EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard
    QueryInterpretationOptions:
      id: QueryInterpretationOptions
      type: object
      description: Options to interpret user query.
      properties:
        disableNlInterpretation:
          description: >-
            Flag to disable natural language (NL) interpretation of queries.
            Default is false, Set to true to disable natural language
            interpretation. NL interpretation only applies to predefined
            datasources.
          type: boolean
        enableVerbatimMode:
          description: >-
            Enable this flag to turn off all internal optimizations like natural
            language (NL) interpretation of queries, supplemental result
            retrieval, and usage of synonyms including custom ones. Nl
            interpretation will be disabled if either one of the two flags is
            true.
          type: boolean
        disableSupplementalResults:
          type: boolean
          description: >-
            Use this flag to disable supplemental results for a query.
            Supplemental results setting chosen at SearchApplication level will
            take precedence if set to True.
    TimestampOperatorOptions:
      type: object
      id: TimestampOperatorOptions
      properties:
        operatorName:
          description: >-
            Indicates the operator name required in the query in order to
            isolate the timestamp property. For example, if operatorName is
            *closedon* and the property's name is *closeDate*, then queries like
            *closedon:<value>* show results only where the value of the property
            named *closeDate* matches *<value>*. By contrast, a search that uses
            the same *<value>* without an operator returns all items where
            *<value>* matches the value of any String properties or text within
            the content field for the item. The operator name can only contain
            lowercase letters (a-z). The maximum length is 32 characters.
          type: string
        lessThanOperatorName:
          description: >-
            Indicates the operator name required in the query in order to
            isolate the timestamp property using the less-than operator. For
            example, if lessThanOperatorName is *closedbefore* and the
            property's name is *closeDate*, then queries like
            *closedbefore:<value>* show results only where the value of the
            property named *closeDate* is earlier than *<value>*. The operator
            name can only contain lowercase letters (a-z). The maximum length is
            32 characters.
          type: string
        greaterThanOperatorName:
          type: string
          description: >-
            Indicates the operator name required in the query in order to
            isolate the timestamp property using the greater-than operator. For
            example, if greaterThanOperatorName is *closedafter* and the
            property's name is *closeDate*, then queries like
            *closedafter:<value>* show results only where the value of the
            property named *closeDate* is later than *<value>*. The operator
            name can only contain lowercase letters (a-z). The maximum length is
            32 characters.
      description: >-
        Used to provide a search operator for timestamp properties. This is
        optional. Search operators let users restrict the query to specific
        fields relevant to the type of item being searched.
    EnterpriseTopazSidekickAgendaGroupCardProtoContext:
      properties:
        eventsRestrict:
          type: string
          description: >-
            Represents restrictions applied to the events requested in the
            user's query.
          enumDescriptions:
            - No specific event was requested.
            - The next meeting was requested.
          enum:
            - NONE
            - NEXT_MEETING
        date:
          type: string
          description: >-
            Localized free text that describes the dates represented by the
            card. Currently, the card will only represent a single day.
        context:
          description: >-
            User friendly free text that describes the context of the card (e.g.
            "Next meeting with Bob"). This is largely only applicable when the
            card is generated from a query.
          type: string
      id: EnterpriseTopazSidekickAgendaGroupCardProtoContext
      type: object
      description: The context that resulted in the generation of the card.
    ListOperationsResponse:
      id: ListOperationsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
          description: >-
            A list of operations that matches the specified filter in the
            request.
      description: The response message for Operations.ListOperations.
    EnterpriseTopazSidekickNlpMetadata:
      type: object
      id: EnterpriseTopazSidekickNlpMetadata
      properties:
        confidence:
          type: number
          format: float
          description: Confidence of the interpretation that generated this card.
      description: Metadata about the NLP interpretation of the query.
    EnterpriseTopazSidekickCommonDocument:
      id: EnterpriseTopazSidekickCommonDocument
      properties:
        justification:
          description: Justification on why the document is selected.
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickCommonDocumentJustification
        accessType:
          enumDescriptions:
            - Unknown access type.
            - Access allowed.
            - Access not allowed.
          type: string
          enum:
            - UNKNOWN_ACCESS
            - ALLOWED
            - NOT_ALLOWED
          description: >-
            Access type, i.e., whether the user has access to the document or
            not.
        provenance:
          description: Document provenance.
          enumDescriptions:
            - Unknown provenance.
            - Calendar event description.
            - Calendar event attachment.
            - Mined (extracted by some offline/online analysis).
            - Attachment created by enterprise assist.
          enum:
            - UNKNOWN_PROVENANCE
            - CALENDAR_DESCRIPTION
            - CALENDAR_ATTACHMENT
            - MINED
            - CALENDAR_ASSIST_ATTACHMENT
          type: string
        genericUrl:
          type: string
          description: >-
            Generic Drive-based url in the format of drive.google.com/open to be
            used for deeplink
        snippet:
          description: A sampling of the text from the document.
          type: string
        documentId:
          type: string
          description: Document id.
        type:
          enumDescriptions:
            - If the type is unknown or not represented in this enum.
            - Drive document types Writely, Word, etc.
            - Presently, PowerPoint, etc.
            - Trix, Excel, etc.
            - File types for Gdrive objects are below. PDF.
            - Image.
            - Fall-back for unknown Gdrive types.
            - Fusion table.
            - Folder.
            - Drawing.
            - Video.
            - Form.
            - Link formats uncategorized URL links
            - meaningful links that should be renderred specifically
            - Link to goo.gl.
            - Link to bit_ly.
            - Link to Gmail.
            - Mailto link.
            - Videos Youtube videos.
            - Live streams (e.g., liveplayer.googleplex.com)
            - Other types. Google Groups.
            - Google News.
            - Google Sites.
            - Google Hangout.
            - Audio files.
            - Microsoft-specific file types.
            - ''
            - ''
            - ''
          enum:
            - UNKNOWN
            - DOCUMENT
            - PRESENTATION
            - SPREADSHEET
            - PDF
            - IMAGE
            - BINARY_BLOB
            - FUSION_TABLE
            - FOLDER
            - DRAWING
            - VIDEO
            - FORM
            - LINK_URL
            - LINK_GO
            - LINK_GOO_GL
            - LINK_BIT_LY
            - LINK_GMAIL
            - LINK_MAILTO
            - VIDEO_YOUTUBE
            - VIDEO_LIVE
            - GROUPS
            - NEWS
            - SITES
            - HANGOUT
            - AUDIO
            - MS_WORD
            - MS_POWERPOINT
            - MS_EXCEL
            - MS_OUTLOOK
          description: Type of the document.
          type: string
        mimeType:
          description: MIME type
          type: string
        reason:
          enumDescriptions:
            - Unknown justification.
            - Popular documents within collaborators.
            - Popular documents within the domain.
            - Documents being reviewed frequently by the current user .
            - Documents being edited frequently by the current user .
            - Documents updated since user's last visit.
            - Documents that receive comments since user's last visit.
            - Documents in the calendar event description.
            - Documents in the calendar event attachments section.
            - >-
              Documents attached in calendar event metadata instead of the
              attachment section. Event metadata is not visible to the final
              user. Enterprise assist uses this metadata to store auto-generated
              documents such as meeting notes.
            - >-
              Documents mined, and so, probably related to the request context.
              For example, this category includes documents related to a
              meeting.
            - Documents that contains mentions of the user.
            - Documents that are shared with the user.
          description: Justification of why this document is being returned.
          enum:
            - UNKNOWN
            - TRENDING_IN_COLLABORATORS
            - TRENDING_IN_DOMAIN
            - FREQUENTLY_VIEWED
            - FREQUENTLY_EDITED
            - NEW_UPDATES
            - NEW_COMMENTS
            - EVENT_DESCRIPTION
            - EVENT_ATTACHMENT
            - EVENT_METADATA_ATTACHMENT
            - MINED_DOCUMENT
            - NEW_MENTIONS
            - NEW_SHARES
          type: string
        url:
          type: string
          description: Absolute URL of the document.
        driveDocumentMetadata:
          description: Drive document metadata.
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata
        title:
          type: string
          description: Title of the document.
        thumbnailUrl:
          type: string
          description: Thumbnail URL.
        debugInfo:
          $ref: '#/components/schemas/EnterpriseTopazSidekickCommonDebugInfo'
          description: Information for debugging.
      type: object
      description: 'Representation of a document. NEXT_TAG: 15'
    ContextAttribute:
      id: ContextAttribute
      type: object
      description: >-
        A named attribute associated with an item which can be used for
        influencing the ranking of the item based on the context in the request.
      properties:
        name:
          type: string
          description: >-
            The name of the attribute. It should not be empty. The maximum
            length is 32 characters. The name must start with a letter and can
            only contain letters (A-Z, a-z) or numbers (0-9). The name will be
            normalized (lower-cased) before being matched.
        values:
          items:
            type: string
          description: >-
            Text values of the attribute. The maximum number of elements is 10.
            The maximum length of an element in the array is 32 characters. The
            value will be normalized (lower-cased) before being matched.
          type: array
    ItemStructuredData:
      description: Available structured data fields for the item.
      properties:
        hash:
          description: >-
            Hashing value provided by the API caller. This can be used with the
            items.push method to calculate modified state. The maximum length is
            2048 characters.
          type: string
        object:
          $ref: '#/components/schemas/StructuredDataObject'
          description: >-
            The structured data object that should conform to a registered
            object definition in the schema for the data source.
      id: ItemStructuredData
      type: object
    GoogleDocsMetadata:
      description: >-
        The corpus specific metadata for office-type documents, from Google Docs
        and other sources. This message is passed to the scorer and beyond. Next
        tag: 9
      properties:
        fileExtension:
          description: >-
            The file extension of the document. NOTE: As of October 2018 this
            field is not backfilled for old documents.
          type: string
        typeInfo:
          $ref: '#/components/schemas/TypeInfo'
          description: >-
            Contains additional information about the document depending on its
            type.
        resultInfo:
          $ref: '#/components/schemas/GoogleDocsResultInfo'
          description: >-
            Additional per-result information, akin to Gmail's
            SingleThreadResponse. Note: GWS no longer seems to use this field,
            but there's still one reference to it for Scribe, so we can't remove
            it.
        documentType:
          enum:
            - UNKNOWN
            - DOCUMENT
            - PRESENTATION
            - SPREADSHEET
            - PDF
            - IMAGE
            - BINARY_BLOB
            - FUSION_TABLE
            - FOLDER
            - DRAWING
            - VIDEO
            - FORM
            - DRAFT_SITE
            - DRAFT_SITE_PAGE
            - JAM
            - SHORTCUT
            - SCRIPT
          type: string
          enumDescriptions:
            - If the type is unknown or not represented in this enum.
            - Writely, Word, etc.
            - Presently, PowerPoint, etc.
            - Trix, Excel, etc.
            - File types for Gdrive objects are below.
            - ''
            - Fall-back for unknown Gdrive types.
            - ''
            - ''
            - ''
            - ''
            - ''
            - For Atari page and site drafts
            - ''
            - Jamboard Jams (go/jam)
            - Drive Shortcuts (go/shortcuts)
            - ''
          description: The conceptual type (presentation, document, etc.) of this document.
        aclInfo:
          $ref: '#/components/schemas/AclInfo'
          description: Contains number of users and groups which can access the document.
        lastContentModifiedTimestamp:
          type: string
          format: int64
          description: >-
            The last time this document was modified, in seconds since epoch.
            Only counts content modifications.
        numSubscribers:
          type: integer
          format: int32
          description: Contains number of subscribers for the document.
        numViewers:
          format: int32
          type: integer
          description: Size of untruncated viewers list.
      id: GoogleDocsMetadata
      type: object
    BackgroundColoredText:
      type: object
      properties:
        backgroundColor:
          type: string
          description: >-
            [Optional] Color of the background. The text color can change
            depending on the selected background color, and the client does not
            have control over this. If missing, the background will be WHITE.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - UNKNOWN_COLOR
            - WHITE
            - YELLOW
            - ORANGE
            - GREEN
            - BLUE
            - GREY
        text:
          type: string
          description: '[Required] The text to display.'
      id: BackgroundColoredText
    CompositeFilter:
      properties:
        subFilters:
          items:
            $ref: '#/components/schemas/Filter'
          description: Sub filters.
          type: array
        logicOperator:
          type: string
          enum:
            - AND
            - OR
            - NOT
          enumDescriptions:
            - Logical operators, which can only be applied to sub filters.
            - ''
            - NOT can only be applied on a single sub filter.
          description: The logic operator of the sub filter.
      type: object
      id: CompositeFilter
    EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard:
      id: EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard
      description: An answer card for a single person.
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/EnterpriseTopazSidekickCommonPerson'
          description: The profile of the person that was the subject of the query.
        statusMessage:
          description: >-
            Localized user friendly message to display to the user in the case
            of missing data or an error.
          type: string
        answerText:
          $ref: '#/components/schemas/EnterpriseTopazSidekickAnswerAnswerList'
          description: List of answers.
        responseStatus:
          description: The response status.
          type: string
          enumDescriptions:
            - Unknown.
            - Success.
            - No such person was found in the user's domain.
            - >-
              A person was found to match the query, but an answer could not be
              obtained.
          enum:
            - UNKNOWN
            - SUCCESS
            - MISSING_PERSON
            - MISSING_DATA
        header:
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickPeopleAnswerPeopleAnswerCardHeader
          description: The header to display for the card.
        answer:
          description: List of answers.
          items:
            $ref: '#/components/schemas/SafeHtmlProto'
          type: array
        disambiguationInfo:
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo
          description: Disambiguation information.
    ValueFilter:
      type: object
      id: ValueFilter
      properties:
        value:
          description: The value to be compared with.
          $ref: '#/components/schemas/Value'
        operatorName:
          type: string
          description: >-
            The `operator_name` applied to the query, such as
            *price_greater_than*. The filter can work against both types of
            filters defined in the schema for your data source: 1.
            `operator_name`, where the query filters results by the property
            that matches the value. 2. `greater_than_operator_name` or
            `less_than_operator_name` in your schema. The query filters the
            results for the property values that are greater than or less than
            the supplied value in the query.
    EnterpriseTopazSidekickPerson:
      id: EnterpriseTopazSidekickPerson
      description: Person.
      type: object
      properties:
        photoUrl:
          type: string
          description: Absolute URL to the profile photo of the person.
        affinityLevel:
          description: The level of affinity this person has with the requesting user.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          enum:
            - UNKNOWN
            - LOW
            - MEDIUM
            - HIGH
          type: string
        obfuscatedGaiaId:
          type: string
          description: Obfuscated Gaia id.
        gaiaId:
          description: Gaia id.
          type: string
          format: int64
        email:
          type: string
          description: Email.
        attendingStatus:
          description: Attendance status of the person when included in a meeting event.
          type: string
          enumDescriptions:
            - Awaiting for the user to set the status.
            - Attending.
            - Not attending.
            - Tentatively attending.
          enum:
            - AWAITING
            - 'YES'
            - 'NO'
            - MAYBE
        name:
          type: string
          description: Name.
        isGroup:
          description: Whether the invitee is a group.
          type: boolean
    EnterpriseTopazSidekickCommonPersonBirthday:
      type: object
      id: EnterpriseTopazSidekickCommonPersonBirthday
      properties:
        value:
          description: Unstructured birthday.
          type: string
    SafeUrlProto:
      type: object
      id: SafeUrlProto
      description: >-
        Message containing a string that is safe to use in URL contexts in DOM
        APIs and HTML documents, where the URL context does not refer to a
        resource that loads code.
      properties:
        privateDoNotAccessOrElseSafeUrlWrappedValue:
          description: >-
            IMPORTANT: Never set or read this field, even from tests, it is
            private. See documentation at the top of .proto file for programming
            language packages with which to create or read this message.
          type: string
    DatePropertyOptions:
      type: object
      description: The options for date properties.
      id: DatePropertyOptions
      properties:
        operatorOptions:
          description: If set, describes how the date should be used as a search operator.
          $ref: '#/components/schemas/DateOperatorOptions'
    EnterpriseTopazSidekickAgendaEntry:
      id: EnterpriseTopazSidekickAgendaEntry
      type: object
      properties:
        invitee:
          description: People attending the meeting.
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickPerson'
        location:
          type: string
          description: Agenda item location.
        showFullEventDetailsToUse:
          type: boolean
          description: Whether the details of this entry should be displayed to the user.
        currentUserAttendingStatus:
          enumDescriptions:
            - Awaiting for the user to set the status.
            - Attending.
            - Not attending.
            - Tentatively attending.
          enum:
            - AWAITING
            - 'YES'
            - 'NO'
            - MAYBE
          type: string
          description: >-
            Attendance status for the current user making the request. This is a
            convenience data member in order to avoid figuring out the same by
            iterating the invitee list above on the caller side.
        hangoutUrl:
          type: string
          description: Absolute URL for the Hangout meeting.
        hangoutId:
          type: string
          description: Hangout meeting identifier.
        agendaItemUrl:
          type: string
          description: URL of the agenda item.
        endTime:
          description: End time (HH:mm) in the user's timezone.
          type: string
        otherAttendeesExcluded:
          type: boolean
          description: >-
            Whether guest list is not returned because number of attendees is
            too large.
        requesterIsOwner:
          type: boolean
          description: Whether the requester is the owner of the agenda entry.
        guestsCanModify:
          type: boolean
          description: Whether the guests can modify the event.
        description:
          type: string
          description: >-
            Description of the agenda item (i.e., typically, summary in calendar
            event).
        guestsCanInviteOthers:
          type: boolean
          description: Whether the guests can invite other guests.
        startTimeMs:
          description: Start time in milliseconds.
          format: int64
          type: string
        chronology:
          enum:
            - STALE
            - ALL_DAY
            - PAST
            - RECENTLY_PAST
            - PRESENT
            - NEAR_FUTURE
            - FUTURE
          description: The chronology from the present.
          type: string
          enumDescriptions:
            - Stale.
            - All day.
            - Past.
            - Recently past.
            - Present.
            - Near future.
            - Future.
        guestsCanSeeGuests:
          type: boolean
          description: >-
            Whether the guests of the event can be seen. If false, the user is
            going to be reported as the only attendee to the meeting, even
            though there may be more attendees.
        timeZone:
          type: string
          description: User's calendar timezone;
        endDate:
          description: End date "Friday, August 26" in the user's timezone.
          type: string
        notifyToUser:
          type: boolean
          description: Whether this should be notified to the user.
        startDate:
          type: string
          description: Start date "Friday, August 26" in the user's timezone.
        document:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickCommonDocument'
          description: >-
            Items related to the current AgendaEntry. E.g., related
            drive/mail/groups documents.
        creator:
          $ref: '#/components/schemas/EnterpriseTopazSidekickPerson'
          description: Person who created the event.
        endTimeMs:
          description: End time in milliseconds
          type: string
          format: int64
        lastModificationTimeMs:
          description: Last time the event was modified.
          format: int64
          type: string
        startTime:
          type: string
          description: Start time (HH:mm) in the user's timezone.
        title:
          type: string
          description: Title of the agenda item.
        eventId:
          description: Event id provided by Calendar API.
          type: string
        isAllDay:
          type: boolean
          description: Whether the entry lasts all day.
      description: An AgendaEntry, e.g., a Calendar Event.
    TextValues:
      description: List of text values.
      id: TextValues
      properties:
        values:
          type: array
          items:
            type: string
          description: The maximum allowable length for text values is 2048 characters.
      type: object
    DriveMimeTypeRestrict:
      type: object
      properties:
        type:
          type: string
          enum:
            - UNSPECIFIED
            - PDF
            - DOCUMENT
            - PRESENTATION
            - SPREADSHEET
            - FORM
            - DRAWING
            - SCRIPT
            - MAP
            - IMAGE
            - AUDIO
            - VIDEO
            - FOLDER
            - ARCHIVE
            - SITE
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
      description: Drive mime-type search restricts (e.g. "type:pdf").
      id: DriveMimeTypeRestrict
    EmailAddress:
      properties:
        emailAddress:
          description: The email address.
          type: string
        customType:
          description: >-
            If the value of type is custom, this property contains the custom
            type string.
          type: string
        emailUrl:
          type: string
          description: The URL to send email.
        primary:
          description: >-
            Indicates if this is the user's primary email. Only one entry can be
            marked as primary.
          type: boolean
        type:
          type: string
          description: >-
            The type of the email account. Acceptable values are: "custom",
            "home", "other", "work".
      description: A person's email address.
      id: EmailAddress
      type: object
    EnterpriseTopazFrontendTeamsPersonCorePhoneNumber:
      id: EnterpriseTopazFrontendTeamsPersonCorePhoneNumber
      properties:
        phoneNumber:
          type: string
          description: >-
            Phone number in no particular format (as comes from the Focus
            profile).
        phoneUrl:
          $ref: '#/components/schemas/SafeUrlProto'
          description: Phone number URL
        type:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          enum:
            - UNKNOWN
            - MOBILE
            - OFFICE
            - OTHER
      type: object
    EnterpriseTopazSidekickPeopleAnswerDisambiguationInfoDisambiguationPerson:
      type: object
      properties:
        person:
          description: The profile of this person.
          $ref: '#/components/schemas/EnterpriseTopazSidekickCommonPerson'
        query:
          type: string
          description: >-
            The query that can be used to produce an answer card with the same
            attribute, but for this person.
      id: >-
        EnterpriseTopazSidekickPeopleAnswerDisambiguationInfoDisambiguationPerson
      description: >-
        A person that also matches the query, but was not selected due to a
        lower affinity with the requesting user.
    EnterpriseTopazSidekickMeetingNotesCardProto:
      type: object
      description: Information about the meeting notes created.
      id: EnterpriseTopazSidekickMeetingNotesCardProto
      properties:
        url:
          description: New URL.
          type: string
        fileId:
          type: string
          description: Google Drive ID (a.k.a. resource ID) of the file.
        event:
          $ref: '#/components/schemas/EnterpriseTopazSidekickAgendaEntry'
          description: The event to request meeting notes creation.
        title:
          type: string
          description: Title we want to show for meeting notes in the answer card
    NamedProperty:
      description: >-
        A typed name-value pair for structured data. The type of the value
        should be the same as the registered type for the `name` property in the
        object definition of `objectType`.
      properties:
        objectValues:
          $ref: '#/components/schemas/ObjectValues'
        dateValues:
          $ref: '#/components/schemas/DateValues'
        name:
          type: string
          description: >-
            The name of the property. This name should correspond to the name of
            the property that was registered for object definition in the
            schema. The maximum allowable length for this property is 256
            characters.
        integerValues:
          $ref: '#/components/schemas/IntegerValues'
        doubleValues:
          $ref: '#/components/schemas/DoubleValues'
        htmlValues:
          $ref: '#/components/schemas/HtmlValues'
        textValues:
          $ref: '#/components/schemas/TextValues'
        timestampValues:
          $ref: '#/components/schemas/TimestampValues'
        booleanValue:
          type: boolean
        enumValues:
          $ref: '#/components/schemas/EnumValues'
      type: object
      id: NamedProperty
    StructuredDataObject:
      type: object
      id: StructuredDataObject
      properties:
        properties:
          type: array
          description: >-
            The properties for the object. The maximum number of elements is
            1000.
          items:
            $ref: '#/components/schemas/NamedProperty'
      description: A structured data object consisting of named properties.
    FacetOptions:
      properties:
        numFacetBuckets:
          format: int32
          type: integer
          description: >-
            Maximum number of facet buckets that should be returned for this
            facet. Defaults to 10. Maximum value is 100.
        operatorName:
          type: string
          description: >-
            The name of the operator chosen for faceting. @see
            cloudsearch.SchemaPropertyOptions
        objectType:
          type: string
          description: >-
            If object_type is set, only those objects of that type will be used
            to compute facets. If empty, then all objects will be used to
            compute facets.
        sourceName:
          description: >-
            Source name to facet on. Format: datasources/{source_id} If empty,
            all data sources will be used.
          type: string
        integerFacetingOptions:
          description: >-
            If set, describes integer faceting options for the given integer
            property. The corresponding integer property in the schema should be
            marked isFacetable. The number of buckets returned would be minimum
            of this and num_facet_buckets.
          $ref: '#/components/schemas/IntegerFacetingOptions'
      type: object
      description: >-
        Specifies operators to return facet results for. There will be one
        FacetResult for every source_name/object_type/operator_name combination.
      id: FacetOptions
    DebugOptions:
      id: DebugOptions
      type: object
      description: Shared request debug options for all cloudsearch RPC methods.
      properties:
        enableDebugging:
          type: boolean
          description: >-
            If you are asked by Google to help with debugging, set this field.
            Otherwise, ignore this field.
    ListSearchApplicationsResponse:
      type: object
      id: ListSearchApplicationsResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
        searchApplications:
          type: array
          items:
            $ref: '#/components/schemas/SearchApplication'
    SearchItemsByViewUrlRequest:
      id: SearchItemsByViewUrlRequest
      type: object
      properties:
        viewUrl:
          type: string
          description: >-
            Specify the full view URL to find the corresponding item. The
            maximum length is 2048 characters.
        debugOptions:
          description: Common debug options.
          $ref: '#/components/schemas/DebugOptions'
        pageToken:
          description: The next_page_token value returned from a previous request, if any.
          type: string
    FieldViolation:
      properties:
        field:
          description: Path of field with violation.
          type: string
        description:
          description: The description of the error.
          type: string
      id: FieldViolation
      type: object
    EnterpriseTopazSidekickGap:
      type: object
      properties:
        startTime:
          description: Localized time string in the format:(Locale CZ) 8:30 odp.
          type: string
        endTime:
          description: Localized time string in the format:(Locale CZ) 8:30 odp.
          type: string
        endTimeMs:
          type: string
          format: uint64
        displayRemainingTime:
          description: 'Localized time string in the format: 1 hour 15 minutes'
          type: string
        remainingTime:
          type: string
          format: google-duration
        startTimeMs:
          format: uint64
          type: string
      id: EnterpriseTopazSidekickGap
    Name:
      properties:
        displayName:
          description: >-
            The read-only display name formatted according to the locale
            specified by the viewer's account or the `Accept-Language` HTTP
            header.
          type: string
      id: Name
      type: object
      description: A person's name.
    MapInfo:
      type: object
      id: MapInfo
      description: >-
        Geo information used for rendering a map that shows the user's work
        location.
      properties:
        long:
          description: Longitude in degrees
          type: number
          format: double
        zoom:
          description: >-
            The zoom level of the map. A constant zoom value of 18 is used for
            now to match the zoom of the map shown on a Moma Teams Profile page
          format: int32
          type: integer
        locationUrl:
          $ref: '#/components/schemas/SafeUrlProto'
          description: >-
            URL to a view of a map centered on the user's work location in
            Campus Maps (for google.com) or Google Maps (external).
        mapTile:
          type: array
          items:
            $ref: '#/components/schemas/MapTile'
          description: MapTiles for the area around a user's work location
        lat:
          description: Latitude in degrees
          format: double
          type: number
    AclInfo:
      id: AclInfo
      type: object
      properties:
        scope:
          type: string
          enumDescriptions:
            - Explicit set of people and groups.
            - Anybody at the same domain with the link.
            - >-
              Now it works only for google.com. Anybody at the same domain. Now
              it works only
            - for google.com. Anybody with the link.
            - Anybody.
            - Special tag to indicate TeamDrive scope.
          enum:
            - LIMITED
            - DASHER_DOMAIN_WITH_LINK
            - DASHER_DOMAIN
            - PUBLIC_WITH_LINK
            - PUBLIC
            - TEAM_DRIVE
          description: The scope to which the content was shared.
        groupsCount:
          description: Number of groups which have at least read access to the document.
          format: int32
          type: integer
        usersCount:
          type: integer
          description: Number of users which have at least read access to the document.
          format: int32
      description: 'Next tag: 4'
    FacetBucket:
      id: FacetBucket
      description: >-
        A bucket in a facet is the basic unit of operation. A bucket can
        comprise either a single value OR a contiguous range of values,
        depending on the type of the field bucketed. FacetBucket is currently
        used only for returning the response object.
      type: object
      properties:
        count:
          format: int32
          type: integer
          description: >-
            Number of results that match the bucket value. Counts are only
            returned for searches when count accuracy is ensured. Cloud Search
            does not guarantee facet counts for any query and facet counts might
            be present only intermittently, even for identical queries. Do not
            build dependencies on facet count existence; instead use facet ount
            percentages which are always returned.
        value:
          $ref: '#/components/schemas/Value'
        filter:
          $ref: '#/components/schemas/Filter'
          description: >-
            Filter to be passed in the search request if the corresponding
            bucket is selected.
        percentage:
          format: int32
          description: >-
            Percent of results that match the bucket value. The returned value
            is between (0-100], and is rounded down to an integer if fractional.
            If the value is not explicitly returned, it represents a percentage
            value that rounds to 0. Percentages are returned for all searches,
            but are an estimate. Because percentages are always returned, you
            should render percentages instead of counts.
          type: integer
    EnterpriseTopazSidekickGetAndKeepAheadCardProtoDeclinedEvents:
      description: A list of events where all guests declined.
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickAgendaEntry'
      type: object
      id: EnterpriseTopazSidekickGetAndKeepAheadCardProtoDeclinedEvents
    RemoveActivityRequest:
      description: Remove Logged Activity Request.
      id: RemoveActivityRequest
      properties:
        requestOptions:
          description: Request options, such as the search application and clientId.
          $ref: '#/components/schemas/RequestOptions'
        userActivity:
          $ref: '#/components/schemas/UserActivity'
          description: User Activity containing the data to be deleted.
      type: object
    SearchQualityMetadata:
      id: SearchQualityMetadata
      description: Additional search quality metadata of the item.
      type: object
      properties:
        quality:
          type: number
          description: >-
            An indication of the quality of the item, used to influence search
            quality. Value should be between 0.0 (lowest quality) and 1.0
            (highest quality). The default value is 0.0.
          format: double
    GetCustomerUserStatsResponse:
      type: object
      properties:
        stats:
          type: array
          items:
            $ref: '#/components/schemas/CustomerUserStats'
      id: GetCustomerUserStatsResponse
    SearchItemsByViewUrlResponse:
      properties:
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
      id: SearchItemsByViewUrlResponse
      type: object
    ResultDebugInfo:
      description: Debugging information about the result.
      properties:
        formattedDebugInfo:
          type: string
          description: General debug info formatted for display.
      type: object
      id: ResultDebugInfo
    ErrorInfo:
      description: Error information about the response.
      id: ErrorInfo
      properties:
        errorMessages:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
      type: object
    UpdateSchemaRequest:
      id: UpdateSchemaRequest
      type: object
      properties:
        schema:
          description: The new schema for the source.
          $ref: '#/components/schemas/Schema'
        debugOptions:
          $ref: '#/components/schemas/DebugOptions'
          description: Common debug options.
        validateOnly:
          description: >-
            If true, the schema will be checked for validity, but will not be
            registered with the data source, even if valid.
          type: boolean
    EnterpriseTopazSidekickShareMeetingDocsCardProto:
      id: EnterpriseTopazSidekickShareMeetingDocsCardProto
      type: object
      description: Share meeting docs card proto.
      properties:
        document:
          description: Documents to share for the given meeting.
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickCommonDocument'
        event:
          $ref: '#/components/schemas/EnterpriseTopazSidekickAgendaEntry'
          description: Event.
    IntegerOperatorOptions:
      id: IntegerOperatorOptions
      properties:
        operatorName:
          description: >-
            Indicates the operator name required in the query in order to
            isolate the integer property. For example, if operatorName is
            *priority* and the property's name is *priorityVal*, then queries
            like *priority:<value>* show results only where the value of the
            property named *priorityVal* matches *<value>*. By contrast, a
            search that uses the same *<value>* without an operator returns all
            items where *<value>* matches the value of any String properties or
            text within the content field for the item. The operator name can
            only contain lowercase letters (a-z). The maximum length is 32
            characters.
          type: string
        greaterThanOperatorName:
          type: string
          description: >-
            Indicates the operator name required in the query in order to
            isolate the integer property using the greater-than operator. For
            example, if greaterThanOperatorName is *priorityabove* and the
            property's name is *priorityVal*, then queries like
            *priorityabove:<value>* show results only where the value of the
            property named *priorityVal* is greater than *<value>*. The operator
            name can only contain lowercase letters (a-z). The maximum length is
            32 characters.
        lessThanOperatorName:
          type: string
          description: >-
            Indicates the operator name required in the query in order to
            isolate the integer property using the less-than operator. For
            example, if lessThanOperatorName is *prioritybelow* and the
            property's name is *priorityVal*, then queries like
            *prioritybelow:<value>* show results only where the value of the
            property named *priorityVal* is less than *<value>*. The operator
            name can only contain lowercase letters (a-z). The maximum length is
            32 characters.
      type: object
      description: >-
        Used to provide a search operator for integer properties. This is
        optional. Search operators let users restrict the query to specific
        fields relevant to the type of item being searched.
    EnterpriseTopazSidekickGetAndKeepAheadCardProto:
      properties:
        mentionedDocuments:
          $ref: '#/components/schemas/EnterpriseTopazSidekickDocumentPerCategoryList'
        sharedDocuments:
          $ref: '#/components/schemas/EnterpriseTopazSidekickDocumentPerCategoryList'
        declinedEvents:
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickGetAndKeepAheadCardProtoDeclinedEvents
      description: Get and keep ahead card
      type: object
      id: EnterpriseTopazSidekickGetAndKeepAheadCardProto
    EnterpriseTopazFrontendTeamsLink:
      id: EnterpriseTopazFrontendTeamsLink
      properties:
        url:
          $ref: '#/components/schemas/SafeUrlProto'
        type:
          type: string
          description: The identifying link type
      type: object
    GetCustomerSearchApplicationStatsResponse:
      id: GetCustomerSearchApplicationStatsResponse
      description: Response format for search application stats for a customer.
      properties:
        averageSearchApplicationCount:
          format: int64
          description: Average search application count for the given date range.
          type: string
        stats:
          description: Search application stats by date.
          items:
            $ref: '#/components/schemas/CustomerSearchApplicationStats'
          type: array
      type: object
    ListDataSourceResponse:
      type: object
      id: ListDataSourceResponse
      properties:
        sources:
          type: array
          items:
            $ref: '#/components/schemas/DataSource'
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
    EnterpriseTopazSidekickRecentDocumentsCardProto:
      id: EnterpriseTopazSidekickRecentDocumentsCardProto
      type: object
      properties:
        document:
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickCommonDocument'
          type: array
    ResetSearchApplicationRequest:
      id: ResetSearchApplicationRequest
      properties:
        debugOptions:
          $ref: '#/components/schemas/DebugOptions'
          description: Common debug options.
      type: object
    FreshnessOptions:
      id: FreshnessOptions
      description: >-
        Indicates which freshness property to use when adjusting search ranking
        for an item. Fresher, more recent dates indicate higher quality. Use the
        freshness option property that best works with your data. For fileshare
        documents, last modified time is most relevant. For calendar event data,
        the time when the event occurs is a more relevant freshness indicator.
        In this way, calendar events that occur closer to the time of the search
        query are considered higher quality and ranked accordingly.
      type: object
      properties:
        freshnessDuration:
          format: google-duration
          description: >-
            The duration after which an object should be considered stale. The
            default value is 180 days (in seconds).
          type: string
        freshnessProperty:
          type: string
          description: >-
            This property indicates the freshness level of the object in the
            index. If set, this property must be a top-level property within the
            property definitions and it must be a timestamp type or date type.
            Otherwise, the Indexing API uses updateTime as the freshness
            indicator. The maximum length is 256 characters. When a property is
            used to calculate freshness, the value defaults to 2 years from the
            current time.
    Person:
      id: Person
      properties:
        photos:
          items:
            $ref: '#/components/schemas/Photo'
          type: array
          description: >-
            A person's read-only photo. A picture shown next to the person's
            name to help others recognize the person in search results.
        phoneNumbers:
          type: array
          description: The person's phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumber'
        obfuscatedId:
          type: string
          description: Obfuscated ID of a person.
        name:
          type: string
          description: >-
            The resource name of the person to provide information about. See
            [`People.get`](https://developers.google.com/people/api/rest/v1/people/get)
            from the Google People API.
        personNames:
          type: array
          description: The person's name
          items:
            $ref: '#/components/schemas/Name'
        emailAddresses:
          items:
            $ref: '#/components/schemas/EmailAddress'
          description: The person's email addresses
          type: array
      description: Object to represent a person.
      type: object
    ResultDisplayLine:
      description: The collection of fields that make up a displayed line
      id: ResultDisplayLine
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/ResultDisplayField'
      type: object
    Metaline:
      type: object
      description: >-
        A metaline is a list of properties that are displayed along with the
        search result to provide context.
      id: Metaline
      properties:
        properties:
          items:
            $ref: '#/components/schemas/DisplayedProperty'
          type: array
          description: >-
            The list of displayed properties for the metaline. The maximum
            number of properties is 5.
    IntegerFacetingOptions:
      description: Used to specify integer faceting options.
      type: object
      id: IntegerFacetingOptions
      properties:
        integerBuckets:
          items:
            format: int64
            type: string
          type: array
          description: >-
            Buckets for given integer values should be in strictly ascending
            order. For example, if values supplied are (1,5,10,100), the
            following facet buckets will be formed {<1, [1,5), [5-10), [10-100),
            >=100}.
    ItemAcl:
      id: ItemAcl
      type: object
      properties:
        owners:
          type: array
          description: >-
            Optional. List of owners for the item. This field has no bearing on
            document access permissions. It does, however, offer a slight
            ranking boosts items where the querying user is an owner. The
            maximum number of elements is 5.
          items:
            $ref: '#/components/schemas/Principal'
        inheritAclFrom:
          type: string
          description: >-
            The name of the item to inherit the Access Permission List (ACL)
            from. Note: ACL inheritance *only* provides access permissions to
            child items and does not define structural relationships, nor does
            it provide convenient ways to delete large groups of items. Deleting
            an ACL parent from the index only alters the access permissions of
            child items that reference the parent in the inheritAclFrom field.
            The item is still in the index, but may not visible in search
            results. By contrast, deletion of a container item also deletes all
            items that reference the container via the containerName field. The
            maximum length for this field is 1536 characters.
        deniedReaders:
          description: >-
            List of principals who are explicitly denied access to the item in
            search results. While principals are denied access by default, use
            denied readers to handle exceptions and override the list allowed
            readers. The maximum number of elements is 100.
          items:
            $ref: '#/components/schemas/Principal'
          type: array
        readers:
          items:
            $ref: '#/components/schemas/Principal'
          description: >-
            List of principals who are allowed to see the item in search
            results. Optional if inheriting permissions from another item or if
            the item is not intended to be visible, such as virtual containers.
            The maximum number of elements is 1000.
          type: array
        aclInheritanceType:
          enumDescriptions:
            - >-
              The default value when this item does not inherit an ACL. Use
              NOT_APPLICABLE when inheritAclFrom is empty. An item without ACL
              inheritance can still have ACLs supplied by its own readers and
              deniedReaders fields.
            - >-
              During an authorization conflict, the ACL of the child item
              determines its read access.
            - >-
              During an authorization conflict, the ACL of the parent item
              specified in the inheritAclFrom field determines read access.
            - >-
              Access is granted only if this item and the parent item specified
              in the inheritAclFrom field both permit read access.
          description: >-
            Sets the type of access rules to apply when an item inherits its ACL
            from a parent. This should always be set in tandem with the
            inheritAclFrom field. Also, when the inheritAclFrom field is set,
            this field should be set to a valid AclInheritanceType.
          type: string
          enum:
            - NOT_APPLICABLE
            - CHILD_OVERRIDE
            - PARENT_OVERRIDE
            - BOTH_PERMIT
      description: >-
        Access control list information for the item. For more information see
        [Map ACLs](https://developers.google.com/cloud-search/docs/guides/acls).
    EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata:
      id: EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata
      properties:
        lastEditTimeMs:
          type: string
          format: uint64
          description: >-
            Timestamp of the most recent edit from the current user in
            milliseconds since epoch.
        lastCommentTimeMs:
          type: string
          description: >-
            Timestamp of the most recent comment added to the document in
            milliseconds since epoch.
          format: uint64
        isPrivate:
          type: boolean
          description: >-
            Additional field to identify whether a document is private since
            scope set to LIMITED can mean both that the doc is private or that
            it's shared with others. is_private indicates whether the doc is not
            shared with anyone except for the owner.
        lastModificationTimeMillis:
          format: int64
          description: >-
            Last modification time of the document (independent of the user that
            modified it).
          type: string
        documentId:
          type: string
          description: >-
            The drive document cosmo id. Client could use the id to build a URL
            to open a document. Please use Document.document_id.
        lastUpdatedTimeMs:
          format: uint64
          description: >-
            Timestamp of the last updated time of the document in milliseconds
            since epoch.
          type: string
        lastViewTimeMs:
          description: >-
            Timestamp of the most recent view from the current user in
            milliseconds since epoch.
          type: string
          format: uint64
        owner:
          description: The owner of the document.
          $ref: '#/components/schemas/EnterpriseTopazSidekickCommonPerson'
        scope:
          description: >-
            ACL scope of the document which identifies the sharing status of the
            doc (e.g., limited, shared with link, team drive, ...).
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          enum:
            - UNKNOWN_DOCUMENT_SCOPE
            - LIMITED
            - DASHER_DOMAIN_WITH_LINK
            - DASHER_DOMAIN
            - PUBLIC_WITH_LINK
            - PUBLIC
            - TEAM_DRIVE
      type: object
      description: Meta data for drive documents.
    SearchResponse:
      properties:
        structuredResults:
          items:
            $ref: '#/components/schemas/StructuredResult'
          description: >-
            Structured results for the user query. These results are not counted
            against the page_size.
          type: array
        facetResults:
          items:
            $ref: '#/components/schemas/FacetResult'
          description: Repeated facet results.
          type: array
        results:
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
          description: Results from a search query.
        queryInterpretation:
          description: >-
            Query interpretation result for user query. Empty if query
            interpretation is disabled.
          $ref: '#/components/schemas/QueryInterpretation'
        resultCountEstimate:
          format: int64
          type: string
          description: The estimated result count for this query.
        spellResults:
          type: array
          description: Suggested spelling for the query.
          items:
            $ref: '#/components/schemas/SpellResult'
        debugInfo:
          $ref: '#/components/schemas/ResponseDebugInfo'
          description: Debugging information about the response.
        errorInfo:
          description: Error information about the response.
          $ref: '#/components/schemas/ErrorInfo'
        resultCounts:
          description: Expanded result count information.
          $ref: '#/components/schemas/ResultCounts'
        hasMoreResults:
          description: Whether there are more search results matching the query.
          type: boolean
        resultCountExact:
          type: string
          format: int64
          description: The exact result count for this query.
      id: SearchResponse
      description: The search API response.
      type: object
    DateValues:
      description: List of date values.
      id: DateValues
      properties:
        values:
          items:
            $ref: '#/components/schemas/Date'
          type: array
      type: object
    QuerySource:
      description: List of sources that the user can search using the query API.
      id: QuerySource
      type: object
      properties:
        shortName:
          type: string
          description: >-
            A short name or alias for the source. This value can be used with
            the 'source' operator.
        source:
          description: The name of the source
          $ref: '#/components/schemas/Source'
        operators:
          type: array
          description: List of all operators applicable for this source.
          items:
            $ref: '#/components/schemas/QueryOperator'
        displayName:
          description: Display name of the data source.
          type: string
    IndexItemOptions:
      type: object
      id: IndexItemOptions
      properties:
        allowUnknownGsuitePrincipals:
          description: >-
            Specifies if the index request should allow Google Workspace
            principals that do not exist or are deleted.
          type: boolean
    RemoveActivityResponse:
      properties: {}
      description: >-
        Remove Logged Activity Response. will return an empty response for now.
        Will be revisited in later phases.
      id: RemoveActivityResponse
      type: object
    BooleanOperatorOptions:
      properties:
        operatorName:
          description: >-
            Indicates the operator name required in the query in order to
            isolate the boolean property. For example, if operatorName is
            *closed* and the property's name is *isClosed*, then queries like
            *closed:<value>* show results only where the value of the property
            named *isClosed* matches *<value>*. By contrast, a search that uses
            the same *<value>* without an operator returns all items where
            *<value>* matches the value of any String properties or text within
            the content field for the item. The operator name can only contain
            lowercase letters (a-z). The maximum length is 32 characters.
          type: string
      type: object
      description: >-
        Used to provide a search operator for boolean properties. This is
        optional. Search operators let users restrict the query to specific
        fields relevant to the type of item being searched.
      id: BooleanOperatorOptions
    QueryInterpretationConfig:
      description: Default options to interpret user query.
      id: QueryInterpretationConfig
      properties:
        forceDisableSupplementalResults:
          description: >-
            Set this flag to disable supplemental results retrieval, setting a
            flag here will not retrieve supplemental results for queries
            associated with a given search application. If this flag is set to
            True, it will take precedence over the option set at Query level.
            For the default value of False, query level flag will set the
            correct interpretation for supplemental results.
          type: boolean
        forceVerbatimMode:
          type: boolean
          description: >-
            Enable this flag to turn off all internal optimizations like natural
            language (NL) interpretation of queries, supplemental results
            retrieval, and usage of synonyms including custom ones. If this flag
            is set to True, it will take precedence over the option set at Query
            level. For the default value of False, query level flag will set the
            correct interpretation for verbatim mode.
      type: object
    ListItemNamesForUnmappedIdentityResponse:
      type: object
      id: ListItemNamesForUnmappedIdentityResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
        itemNames:
          type: array
          items:
            type: string
    TimestampPropertyOptions:
      description: The options for timestamp properties.
      id: TimestampPropertyOptions
      properties:
        operatorOptions:
          description: >-
            If set, describes how the timestamp should be used as a search
            operator.
          $ref: '#/components/schemas/TimestampOperatorOptions'
      type: object
    GoogleDocsResultInfo:
      description: >-
        A message containing information about a specific result. This
        information is passed to the scorer and beyond; in particular, GWS
        relies on it to format the result in the UI. Split from
        GoogleDocsMetadata in case we later want to reuse the message.
      properties:
        attachmentSha1:
          type: string
          description: The SHA1 hash of the object in Drive, if any.
        cosmoNameSpace:
          description: >-
            For Cosmo objects, the Cosmo namespace the object was in. This
            allows downstream clients to identify whether a document was created
            in Writely or Kix, Presently or Punch, or whether it was uploaded
            from GDrive. See storage_cosmo.Id.NAME_SPACE for a list of all Cosmo
            name spaces.
          format: int32
          type: integer
        encryptedId:
          type: string
          description: >-
            The encrypted (user-visible) id of this object. Knowing the id is
            sufficient to create a canonical URL for this document.
        mimeType:
          description: The mimetype of the document.
          type: string
        shareScope:
          $ref: '#/components/schemas/ShareScope'
          description: The visibility indicator in the UI will be based upon this.
        cosmoId:
          description: >-
            The storage identifier for the object in Cosmo. This field is
            intended to used by Stratus/Moonshine integration only. It should
            not be exposed externally (please refer to encrypted_id for that
            purpose).
          $ref: '#/components/schemas/Id'
      type: object
      id: GoogleDocsResultInfo
    GSuitePrincipal:
      properties:
        gsuiteDomain:
          description: >-
            This principal represents all users of the Google Workspace domain
            of the customer.
          type: boolean
        gsuiteGroupEmail:
          description: This principal references a Google Workspace group name.
          type: string
        gsuiteUserEmail:
          type: string
          description: This principal references a Google Workspace user account.
      type: object
      id: GSuitePrincipal
    DisplayedProperty:
      properties:
        propertyName:
          description: >-
            The name of the top-level property as defined in a property
            definition for the object. If the name is not a defined property in
            the schema, an error is given when attempting to update the schema.
          type: string
      description: >-
        A reference to a top-level property within the object that should be
        displayed in search results. The values of the chosen properties is
        displayed in the search results along with the display label for that
        property if one is specified. If a display label is not specified, only
        the values is shown.
      type: object
      id: DisplayedProperty
    EnumValuePair:
      id: EnumValuePair
      properties:
        integerValue:
          format: int32
          description: >-
            The integer value of the EnumValuePair which must be non-negative.
            Optional.
          type: integer
        stringValue:
          type: string
          description: >-
            The string value of the EnumValuePair. The maximum length is 32
            characters.
      type: object
      description: >-
        The enumeration value pair defines two things: a required string value
        and an optional integer value. The string value defines the necessary
        query term required to retrieve that item, such as *p0* for a priority
        item. The integer value determines the ranking of that string value
        relative to other enumerated values for the same property. For example,
        you might associate *p0* with *0* and define another enum pair such as
        *p1* and *1*. You must use the integer value in combination with ordered
        ranking to set the ranking of a given value relative to other enumerated
        values for the same property name. Here, a ranking order of DESCENDING
        for *priority* properties results in a ranking boost for items indexed
        with a value of *p0* compared to items indexed with a value of *p1*.
        Without a specified ranking order, the integer value has no effect on
        item ranking.
    Schema:
      description: The schema definition for a data source.
      id: Schema
      type: object
      properties:
        operationIds:
          description: >-
            IDs of the Long Running Operations (LROs) currently running for this
            schema. After modifying the schema, wait for operations to complete
            before indexing additional content.
          type: array
          items:
            type: string
        objectDefinitions:
          items:
            $ref: '#/components/schemas/ObjectDefinition'
          type: array
          description: >-
            The list of top-level objects for the data source. The maximum
            number of elements is 10.
    SearchRequest:
      id: SearchRequest
      description: The search API request.
      type: object
      properties:
        start:
          format: int32
          type: integer
          description: Starting index of the results.
        contextAttributes:
          description: >-
            Context attributes for the request which will be used to adjust
            ranking of search results. The maximum number of elements is 10.
          type: array
          items:
            $ref: '#/components/schemas/ContextAttribute'
        sortOptions:
          $ref: '#/components/schemas/SortOptions'
          description: The options for sorting the search results
        requestOptions:
          description: Request options, such as the search application and user timezone.
          $ref: '#/components/schemas/RequestOptions'
        query:
          description: >-
            The raw query string. See supported search operators in the [Narrow
            your search with
            operators](https://support.google.com/cloudsearch/answer/6172299)
          type: string
        queryInterpretationOptions:
          description: Options to interpret the user query.
          $ref: '#/components/schemas/QueryInterpretationOptions'
        pageSize:
          type: integer
          description: >-
            Maximum number of search results to return in one page. Valid values
            are between 1 and 100, inclusive. Default value is 10. Minimum value
            is 50 when results beyond 2000 are requested.
          format: int32
        dataSourceRestrictions:
          description: >-
            The sources to use for querying. If not specified, all data sources
            from the current search application are used.
          type: array
          items:
            $ref: '#/components/schemas/DataSourceRestriction'
        facetOptions:
          type: array
          items:
            $ref: '#/components/schemas/FacetOptions'
    EnterpriseTopazSidekickAgendaItem:
      id: EnterpriseTopazSidekickAgendaItem
      type: object
      properties:
        gapBefore:
          $ref: '#/components/schemas/EnterpriseTopazSidekickGap'
        conflictedGroup:
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickConflictingEventsCardProto
        meeting:
          $ref: '#/components/schemas/EnterpriseTopazSidekickAgendaEntry'
    HtmlOperatorOptions:
      properties:
        operatorName:
          type: string
          description: >-
            Indicates the operator name required in the query in order to
            isolate the html property. For example, if operatorName is *subject*
            and the property's name is *subjectLine*, then queries like
            *subject:<value>* show results only where the value of the property
            named *subjectLine* matches *<value>*. By contrast, a search that
            uses the same *<value>* without an operator return all items where
            *<value>* matches the value of any html properties or text within
            the content field for the item. The operator name can only contain
            lowercase letters (a-z). The maximum length is 32 characters.
      id: HtmlOperatorOptions
      description: >-
        Used to provide a search operator for html properties. This is optional.
        Search operators let users restrict the query to specific fields
        relevant to the type of item being searched.
      type: object
    TypeInfo:
      id: TypeInfo
      type: object
      properties:
        videoInfo:
          $ref: '#/components/schemas/VideoInfo'
          description: >-
            Contains additional video information only if document_type is
            VIDEO.
      description: 'Next tag: 2'
    Operation:
      properties:
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          type: object
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        metadata:
          type: object
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      id: Operation
    EnterpriseTopazSidekickAssistCardProto:
      properties:
        relatedPeopleAnswerCard:
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickPeopleAnswerRelatedPeopleAnswerCard
          description: Answer card that represents a list of people related to a person.
        peopleDisambiguationCard:
          description: The people disambiguation card.
          $ref: '#/components/schemas/EnterpriseTopazSidekickPeopleDisambiguationCard'
        meetingNotesCardRequest:
          description: Request for meeting notes card.
          $ref: '#/components/schemas/EnterpriseTopazSidekickMeetingNotesCardRequest'
        shareMeetingDocsCard:
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickShareMeetingDocsCardProto
          description: Sahre meeting docs card.
        meeting:
          $ref: '#/components/schemas/EnterpriseTopazSidekickAgendaEntry'
          description: Meeting card.
        cardMetadata:
          description: Card metadata such as chronology and render mode of the card.
          $ref: '#/components/schemas/EnterpriseTopazSidekickCardMetadata'
        personAnswerCard:
          description: Answer card that represents a single person.
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickPeopleAnswerPersonAnswerCard
        sharedDocuments:
          $ref: '#/components/schemas/EnterpriseTopazSidekickDocumentPerCategoryList'
          description: Shared documents.
        peoplePromotionCard:
          description: People Search promotion card.
          $ref: '#/components/schemas/PeoplePromotionCard'
        agendaGroupCardProto:
          description: Agenda group card.
          $ref: '#/components/schemas/EnterpriseTopazSidekickAgendaGroupCardProto'
        meetingNotesCard:
          description: Meeting notes card.
          $ref: '#/components/schemas/EnterpriseTopazSidekickMeetingNotesCardProto'
        personalizedDocsCard:
          description: Card with recommended documents for the user.
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickPersonalizedDocsCardProto
        workInProgressCardProto:
          $ref: '#/components/schemas/EnterpriseTopazSidekickRecentDocumentsCardProto'
          description: Work In Progress card.
        documentListCard:
          description: Answer card for documents that are applicable to the current query.
          $ref: '#/components/schemas/EnterpriseTopazSidekickDocumentPerCategoryList'
        documentsWithMentions:
          $ref: '#/components/schemas/EnterpriseTopazSidekickDocumentPerCategoryList'
          description: Documents with mentions.
        genericAnswerCard:
          description: Generic answer card.
          $ref: '#/components/schemas/EnterpriseTopazSidekickGenericAnswerCard'
        findMeetingTimeCard:
          $ref: '#/components/schemas/EnterpriseTopazSidekickFindMeetingTimeCardProto'
          description: Find meeting time card.
        thirdPartyAnswerCard:
          description: Third party answer cards.
          $ref: '#/components/schemas/ThirdPartyGenericCard'
        cardType:
          enumDescriptions:
            - The default type, an unknown card type.
            - The user's agenda for the day.
            - Changelists.
            - Any group of meetings for the day that are overlapping.
            - Create notes for a meeting specified in the request.
            - Create notes for meeting query.
            - News about your SFDC customers.
            - Find a time for two people to meet.
            - The user's next non-declined meeting.
            - >-
              Important documents for you since you have viewed them in the last
              month and there's some action going on.
            - >-
              Documents that are trending in your company. A TRENDING_DOCS card
              can be of two types: TRENDING_IN_COLLABORATORS (i.e., Stay in the
              Loop) and TRENDING_IN_DOMAIN (i.e., Popular Content). Use
              DOMAIN_TRENDING_DOCS/TEAM_TRENDING_DOCS instead.
            - >-
              An upcoming trip with all trip information along with calendar
              events in the destination timezone.
            - The Morning/Evening Summary Card for the next working day.
            - >-
              A meeting. When requesting meetings, the service will return a
              MEETING card for each meeting the user has in his agenda.
            - >-
              All cards related to the homepage (agenda, conflicting-meetings,
              summary, etc...). This type should no longer be used. Use
              HOMEPAGE_V3 instead.
            - >-
              A card to with specifics to share meeting documents with all
              attendees.
            - >-
              Represents a set of users that the requesting user has low
              affinity with.
            - All cards related to the homepage-v3 (agenda-group, WIP, etc...)
            - A group of agenda-events (meeting, conflicts)
            - The documents that you were recently working on.
            - (v3) The "get and keep ahead" card for today and tomorrow
            - Generic answer card.
            - Third party answer card.
            - >-
              Documents that are trending in your company/domain (i.e., Popular
              Content).
            - Documents that are trending in your team (i.e., Stay in the Loop).
            - >-
              Documents that match the user's query (e.g. sheets shared with
              me).
            - A help card that provides examples of queries the user can ask.
            - Answer card for a single person (e.g. what is x's phone number).
            - >-
              Answer card for a list of people related to the person that is the
              subject of the query (e.g. who reports to x).
            - Knowledge card for a single person and their related people.
            - People Search promotion card.
          description: Card type.
          enum:
            - UNKNOWN_TYPE
            - AGENDA
            - CHANGELISTS
            - CONFLICTING_MEETINGS
            - CREATE_NOTES_FOR_MEETING
            - CREATE_NOTES_FOR_MEETING_REQUEST
            - CUSTOMER_NEWS
            - FIND_MEETING_TIME
            - NEXT_MEETING
            - PERSONALIZED_DOCS
            - TRENDING_DOCS
            - UPCOMING_TRIP
            - SUMMARY
            - MEETINGS
            - HOMEPAGE
            - SHARE_MEETING_DOCS
            - DISCOVER_PEOPLE
            - HOMEPAGE_V3
            - AGENDA_GROUP
            - WORK_IN_PROGRESS
            - GET_AND_KEEP_AHEAD
            - GENERIC_ANSWER_CARD
            - THIRD_PARTY_ANSWER_CARD
            - DOMAIN_TRENDING_DOCS
            - TEAM_TRENDING_DOCS
            - DOCUMENT_LIST_ANSWER_CARD
            - SUGGESTED_QUERY_ANSWER_CARD
            - PERSON_ANSWER_CARD
            - RELATED_PEOPLE_ANSWER_CARD
            - PERSON_KNOWLEDGE_CARD
            - PEOPLE_SEARCH_PROMOTION_CARD
          type: string
        suggestedQueryAnswerCard:
          description: Answer card for what natural language queries the user can ask.
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickAnswerSuggestedQueryAnswerCard
        personProfileCard:
          description: Full profile card.
          $ref: '#/components/schemas/EnterpriseTopazSidekickPersonProfileCard'
        conflictingMeetingsCard:
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickConflictingEventsCardProto
          description: Conflicting events card.
        getAndKeepAheadCard:
          $ref: '#/components/schemas/EnterpriseTopazSidekickGetAndKeepAheadCardProto'
          description: Get and keep ahead card.
      type: object
      description: Wrapper proto for the Assist cards.
      id: EnterpriseTopazSidekickAssistCardProto
    QueryOperator:
      description: >-
        The definition of a operator that can be used in a Search/Suggest
        request.
      id: QueryOperator
      type: object
      properties:
        objectType:
          description: >-
            The name of the object corresponding to the operator. This field is
            only filled for schema-specific operators, and is unset for common
            operators.
          type: string
        isSuggestable:
          description: Can get suggestions for this field.
          type: boolean
        isReturnable:
          description: >-
            Will the property associated with this facet be returned as part of
            search results.
          type: boolean
        displayName:
          type: string
          description: Display name of the operator
        isRepeatable:
          description: Indicates if multiple values can be set for this property.
          type: boolean
        greaterThanOperatorName:
          type: string
          description: >-
            Indicates the operator name that can be used to isolate the property
            using the greater-than operator.
        lessThanOperatorName:
          type: string
          description: >-
            Indicates the operator name that can be used to isolate the property
            using the less-than operator.
        isSortable:
          description: Can this operator be used to sort results.
          type: boolean
        enumValues:
          type: array
          items:
            type: string
          description: >-
            Potential list of values for the opeatror field. This field is only
            filled when we can safely enumerate all the possible values of this
            operator.
        isFacetable:
          description: Can this operator be used to get facets.
          type: boolean
        type:
          enum:
            - UNKNOWN
            - INTEGER
            - DOUBLE
            - TIMESTAMP
            - BOOLEAN
            - ENUM
            - DATE
            - TEXT
            - HTML
          type: string
          enumDescriptions:
            - Invalid value.
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: The type of the operator.
        operatorName:
          type: string
          description: The name of the operator.
    PropertyDisplayOptions:
      description: The display options for a property.
      properties:
        displayLabel:
          type: string
          description: >-
            The user friendly label for the property that is used if the
            property is specified to be displayed in ObjectDisplayOptions. If
            provided, the display label is shown in front of the property values
            when the property is part of the object display options. For
            example, if the property value is '1', the value by itself may not
            be useful context for the user. If the display name given was
            'priority', then the user sees 'priority : 1' in the search results
            which provides clear context to search users. This is OPTIONAL; if
            not given, only the property values are displayed. The maximum
            length is 64 characters.
      id: PropertyDisplayOptions
      type: object
    RestrictItem:
      properties:
        driveLocationRestrict:
          $ref: '#/components/schemas/DriveLocationRestrict'
        searchOperator:
          type: string
          description: The search restrict (e.g. "after:2017-09-11 before:2017-09-12").
        driveFollowUpRestrict:
          $ref: '#/components/schemas/DriveFollowUpRestrict'
        driveTimeSpanRestrict:
          $ref: '#/components/schemas/DriveTimeSpanRestrict'
        driveMimeTypeRestrict:
          $ref: '#/components/schemas/DriveMimeTypeRestrict'
          description: Drive Types.
      type: object
      description: 'Information relevant only to a restrict entry. NextId: 12'
      id: RestrictItem
    ItemMetadata:
      type: object
      properties:
        createTime:
          description: The time when the item was created in the source repository.
          format: google-datetime
          type: string
        containerName:
          description: >-
            The name of the container for this item. Deletion of the container
            item leads to automatic deletion of this item. Note: ACLs are not
            inherited from a container item. To provide ACL inheritance for an
            item, use the inheritAclFrom field. The maximum length is 1536
            characters.
          type: string
        contextAttributes:
          description: >-
            A set of named attributes associated with the item. This can be used
            for influencing the ranking of the item based on the context in the
            request. The maximum number of elements is 10.
          type: array
          items:
            $ref: '#/components/schemas/ContextAttribute'
        title:
          type: string
          description: >-
            The title of the item. If given, this will be the displayed title of
            the Search result. The maximum length is 2048 characters.
        contentLanguage:
          description: >-
            The BCP-47 language code for the item, such as "en-US" or "sr-Latn".
            For more information, see
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. The
            maximum length is 32 characters.
          type: string
        searchQualityMetadata:
          description: Additional search quality metadata of the item
          $ref: '#/components/schemas/SearchQualityMetadata'
        objectType:
          description: >-
            The type of the item. This should correspond to the name of an
            object definition in the schema registered for the data source. For
            example, if the schema for the data source contains an object
            definition with name 'document', then item indexing requests for
            objects of that type should set objectType to 'document'. The
            maximum length is 256 characters.
          type: string
        interactions:
          items:
            $ref: '#/components/schemas/Interaction'
          description: >-
            A list of interactions for the item. Interactions are used to
            improve Search quality, but are not exposed to end users. The
            maximum number of elements is 1000.
          type: array
        sourceRepositoryUrl:
          type: string
          description: >-
            Link to the source repository serving the data. Seach results apply
            this link to the title. Whitespace or special characters may cause
            Cloud Seach result links to trigger a redirect notice; to avoid
            this, encode the URL. The maximum length is 2048 characters.
        keywords:
          items:
            type: string
          type: array
          description: >-
            Additional keywords or phrases that should match the item. Used
            internally for user generated content. The maximum number of
            elements is 100. The maximum length is 8192 characters.
        mimeType:
          type: string
          description: >-
            The original mime-type of ItemContent.content in the source
            repository. The maximum length is 256 characters.
        hash:
          type: string
          description: >-
            Hashing value provided by the API caller. This can be used with the
            items.push method to calculate modified state. The maximum length is
            2048 characters.
        updateTime:
          description: The time when the item was last modified in the source repository.
          format: google-datetime
          type: string
      description: Available metadata fields for the item.
      id: ItemMetadata
    CustomerSessionStats:
      properties:
        searchSessionsCount:
          format: int64
          type: string
          description: The count of search sessions on the day
        date:
          $ref: '#/components/schemas/Date'
          description: >-
            The date for which session stats were calculated. Stats are
            calculated on the following day, close to midnight PST, and then
            returned.
      id: CustomerSessionStats
      type: object
    GetDataSourceIndexStatsResponse:
      type: object
      id: GetDataSourceIndexStatsResponse
      properties:
        stats:
          type: array
          description: >-
            Summary of indexed item counts, one for each day in the requested
            range.
          items:
            $ref: '#/components/schemas/DataSourceIndexStats'
        averageIndexedItemCount:
          format: int64
          description: >-
            Average item count for the given date range for which billing is
            done.
          type: string
    EnumOperatorOptions:
      type: object
      properties:
        operatorName:
          description: >-
            Indicates the operator name required in the query in order to
            isolate the enum property. For example, if operatorName is
            *priority* and the property's name is *priorityVal*, then queries
            like *priority:<value>* show results only where the value of the
            property named *priorityVal* matches *<value>*. By contrast, a
            search that uses the same *<value>* without an operator returns all
            items where *<value>* matches the value of any String properties or
            text within the content field for the item. The operator name can
            only contain lowercase letters (a-z). The maximum length is 32
            characters.
          type: string
      description: >-
        Used to provide a search operator for enum properties. This is optional.
        Search operators let users restrict the query to specific fields
        relevant to the type of item being searched. For example, if you provide
        no operator for a *priority* enum property with possible values *p0* and
        *p1*, a query that contains the term *p0* returns items that have *p0*
        as the value of the *priority* property, as well as any items that
        contain the string *p0* in other fields. If you provide an operator name
        for the enum, such as *priority*, then search users can use that
        operator to refine results to only items that have *p0* as this
        property's value, with the query *priority:p0*.
      id: EnumOperatorOptions
    EnterpriseTopazSidekickScheduledMeeting:
      properties:
        meetingTitle:
          description: The meeting title.
          type: string
        meetingTime:
          $ref: '#/components/schemas/EnterpriseTopazSidekickTimeSlot'
          description: The meeting time slot.
        meetingLocation:
          description: The meeting location.
          type: string
      description: Details about scheduled meetings.
      type: object
      id: EnterpriseTopazSidekickScheduledMeeting
    PhoneNumber:
      id: PhoneNumber
      type: object
      description: A person's Phone Number
      properties:
        type:
          enum:
            - OTHER
            - MOBILE
            - OFFICE
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
        phoneNumber:
          description: The phone number of the person.
          type: string
    FacetResult:
      type: object
      description: Source specific facet response
      id: FacetResult
      properties:
        buckets:
          description: >-
            FacetBuckets for values in response containing at least a single
            result with the corresponding filter.
          items:
            $ref: '#/components/schemas/FacetBucket'
          type: array
        operatorName:
          type: string
          description: >-
            The name of the operator chosen for faceting. @see
            cloudsearch.SchemaPropertyOptions
        sourceName:
          description: Source name for which facet results are returned. Will not be empty.
          type: string
        objectType:
          type: string
          description: Object type for which facet results are returned. Can be empty.
    SpellResult:
      type: object
      id: SpellResult
      properties:
        suggestedQuery:
          description: The suggested spelling of the query.
          type: string
        suggestionType:
          description: Suggestion triggered for the current query.
          enumDescriptions:
            - Default spell check type
            - >-
              Spell suggestion without any results changed. The results are
              still shown for the original query (which has non zero / results)
              with a suggestion for spelling that would have results.
            - >-
              Spell suggestion triggered when original query has no results.
              When the original query has no results, and spell suggestion has
              results we trigger results for the spell corrected query.
          type: string
          enum:
            - SUGGESTION_TYPE_UNSPECIFIED
            - NON_EMPTY_RESULTS_SPELL_SUGGESTION
            - ZERO_RESULTS_FULL_PAGE_REPLACEMENT
        suggestedQueryHtml:
          $ref: '#/components/schemas/SafeHtmlProto'
          description: >-
            The sanitized HTML representing the spell corrected query that can
            be used in the UI. This usually has language-specific tags to mark
            up parts of the query that are spell checked.
    IndexItemRequest:
      id: IndexItemRequest
      type: object
      properties:
        item:
          description: >-
            The name of the item. Format:
            datasources/{source_id}/items/{item_id}
          $ref: '#/components/schemas/Item'
        indexItemOptions:
          $ref: '#/components/schemas/IndexItemOptions'
        mode:
          enum:
            - UNSPECIFIED
            - SYNCHRONOUS
            - ASYNCHRONOUS
          description: Required. The RequestMode for this request.
          enumDescriptions:
            - >-
              The priority is not specified in the update request. Leaving
              priority unspecified results in an update failure.
            - For real-time updates.
            - >-
              For changes that are executed after the response is sent back to
              the caller.
          type: string
        debugOptions:
          description: Common debug options.
          $ref: '#/components/schemas/DebugOptions'
        connectorName:
          description: >-
            The name of connector making this call. Format:
            datasources/{source_id}/connectors/{ID}
          type: string
    InitializeCustomerRequest:
      type: object
      properties: {}
      description: Request message for `InitializeCustomer` method.
      id: InitializeCustomerRequest
    DoubleOperatorOptions:
      type: object
      id: DoubleOperatorOptions
      description: >-
        Used to provide a search operator for double properties. This is
        optional. Search operators let users restrict the query to specific
        fields relevant to the type of item being searched.
      properties:
        operatorName:
          type: string
          description: >-
            Indicates the operator name required in the query in order to use
            the double property in sorting or as a facet. The operator name can
            only contain lowercase letters (a-z). The maximum length is 32
            characters.
    IntegerValues:
      description: List of integer values.
      type: object
      properties:
        values:
          items:
            type: string
            format: int64
          type: array
      id: IntegerValues
    MapTile:
      id: MapTile
      description: >-
        Information used to render a map tile image in the proper location on a
        map.
      properties:
        imageUrl:
          description: >-
            URL to an image file containing an office layout of the user's
            location for their organization, if one is available. For
            google.com, this image is from Corp Campus Maps.
          $ref: '#/components/schemas/SafeUrlProto'
        tileX:
          description: Map tile x coordinate
          format: double
          type: number
        tileY:
          type: number
          format: double
          description: Map tile y coordinate
      type: object
    ThirdPartyGenericCard:
      properties:
        priority:
          format: int32
          type: integer
          description: Priority of the card, where 0 is the highest priority.
        context:
          $ref: '#/components/schemas/Context'
          description: '[Required] Context where the card should be triggered.'
        category:
          description: Category that the card belongs to.
          type: string
        content:
          $ref: '#/components/schemas/Content'
          description: '[Required] Card content.'
        cardId:
          description: Unique identifier for the card.
          type: string
        isDismissible:
          type: boolean
          description: Whether the card can be dismissed.
      id: ThirdPartyGenericCard
      type: object
    ItemStatus:
      type: object
      properties:
        code:
          type: string
          enumDescriptions:
            - >-
              Input-only value. Used with Items.list to list all items in the
              queue, regardless of status.
            - >-
              Error encountered by Cloud Search while processing this item.
              Details of the error are in repositoryError.
            - >-
              Item has been modified in the repository, and is out of date with
              the version previously accepted into Cloud Search.
            - >-
              Item is known to exist in the repository, but is not yet accepted
              by Cloud Search. An item can be in this state when Items.push has
              been called for an item of this name that did not exist
              previously.
            - API has accepted the up-to-date data of this item.
          enum:
            - CODE_UNSPECIFIED
            - ERROR
            - MODIFIED
            - NEW_ITEM
            - ACCEPTED
          description: Status code.
        processingErrors:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingError'
          description: Error details in case the item is in ERROR state.
        repositoryErrors:
          type: array
          description: Repository error reported by connector.
          items:
            $ref: '#/components/schemas/RepositoryError'
      description: This contains item's status and any errors.
      id: ItemStatus
    VideoInfo:
      properties:
        duration:
          format: int32
          description: >-
            Duration of the video in milliseconds. This field can be absent for
            recently uploaded video or inaccurate sometimes.
          type: integer
      id: VideoInfo
      description: 'Next tag: 2'
      type: object
    CustomerSearchApplicationStats:
      type: object
      properties:
        count:
          format: int64
          type: string
          description: The count of search applications for the date.
        date:
          description: The date for which search application stats were calculated.
          $ref: '#/components/schemas/Date'
      id: CustomerSearchApplicationStats
      description: Search application stats for a customer for the given date.
    IntegerPropertyOptions:
      type: object
      description: The options for integer properties.
      properties:
        integerFacetingOptions:
          $ref: '#/components/schemas/IntegerFacetingOptions'
          description: >-
            If set, describes integer faceting options for the given integer
            property. The corresponding integer property should be marked
            isFacetable.
        orderedRanking:
          description: >-
            Used to specify the ordered ranking for the integer. Can only be
            used if isRepeatable is false.
          enumDescriptions:
            - >-
              There is no ranking order for the property. Results are not
              adjusted by this property's value.
            - >-
              This property is ranked in ascending order. Lower values indicate
              lower ranking.
            - >-
              This property is ranked in descending order. Lower values indicate
              higher ranking.
          enum:
            - NO_ORDER
            - ASCENDING
            - DESCENDING
          type: string
        minimumValue:
          description: >-
            The minimum value of the property. The minimum and maximum values
            for the property are used to rank results according to the ordered
            ranking. Indexing requests with values less than the minimum are
            accepted and ranked with the same weight as items indexed with the
            minimum value.
          type: string
          format: int64
        maximumValue:
          type: string
          description: >-
            The maximum value of the property. The minimum and maximum values
            for the property are used to rank results according to the ordered
            ranking. Indexing requests with values greater than the maximum are
            accepted and ranked with the same weight as items indexed with the
            maximum value.
          format: int64
        operatorOptions:
          $ref: '#/components/schemas/IntegerOperatorOptions'
          description: >-
            If set, describes how the integer should be used as a search
            operator.
      id: IntegerPropertyOptions
    ResultDisplayMetadata:
      type: object
      properties:
        metalines:
          items:
            $ref: '#/components/schemas/ResultDisplayLine'
          type: array
          description: The metalines content to be displayed with the result.
        objectTypeLabel:
          description: The display label for the object.
          type: string
      id: ResultDisplayMetadata
    DriveLocationRestrict:
      description: Drive location search restricts (e.g. "is:starred").
      type: object
      properties:
        type:
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - UNSPECIFIED
            - TRASHED
            - STARRED
          type: string
      id: DriveLocationRestrict
    PropertyDefinition:
      type: object
      description: The definition of a property within an object.
      properties:
        htmlPropertyOptions:
          $ref: '#/components/schemas/HtmlPropertyOptions'
        isReturnable:
          description: >-
            Indicates that the property identifies data that should be returned
            in search results via the Query API. If set to *true*, indicates
            that Query API users can use matching property fields in results.
            However, storing fields requires more space allocation and uses more
            bandwidth for search queries, which impacts performance over large
            datasets. Set to *true* here only if the field is needed for search
            results. Cannot be true for properties whose type is an object.
          type: boolean
        isWildcardSearchable:
          description: >-
            Indicates that users can perform wildcard search for this property.
            Only supported for Text properties. IsReturnable must be true to set
            this option. In a given datasource maximum of 5 properties can be
            marked as is_wildcard_searchable. For more details, see [Define
            object
            properties](https://developers.google.com/cloud-search/docs/guides/schema-guide#properties)
          type: boolean
        isSuggestable:
          description: >-
            Indicates that the property can be used for generating query
            suggestions.
          type: boolean
        enumPropertyOptions:
          $ref: '#/components/schemas/EnumPropertyOptions'
        timestampPropertyOptions:
          $ref: '#/components/schemas/TimestampPropertyOptions'
        isSortable:
          type: boolean
          description: >-
            Indicates that the property can be used for sorting. Cannot be true
            for properties that are repeatable. Cannot be true for properties
            whose type is object. IsReturnable must be true to set this option.
            Only supported for boolean, date, double, integer, and timestamp
            properties.
        objectPropertyOptions:
          $ref: '#/components/schemas/ObjectPropertyOptions'
        name:
          type: string
          description: >-
            The name of the property. Item indexing requests sent to the
            Indexing API should set the property name equal to this value. For
            example, if name is *subject_line*, then indexing requests for
            document items with subject fields should set the name for that
            field equal to *subject_line*. Use the name as the identifier for
            the object property. Once registered as a property for an object,
            you cannot re-use this name for another property within that object.
            The name must start with a letter and can only contain letters (A-Z,
            a-z) or numbers (0-9). The maximum length is 256 characters.
        datePropertyOptions:
          $ref: '#/components/schemas/DatePropertyOptions'
        doublePropertyOptions:
          $ref: '#/components/schemas/DoublePropertyOptions'
        integerPropertyOptions:
          $ref: '#/components/schemas/IntegerPropertyOptions'
        displayOptions:
          description: >-
            The options that determine how the property is displayed in the
            Cloud Search results page if it's specified to be displayed in the
            object's display options.
          $ref: '#/components/schemas/PropertyDisplayOptions'
        booleanPropertyOptions:
          $ref: '#/components/schemas/BooleanPropertyOptions'
        textPropertyOptions:
          $ref: '#/components/schemas/TextPropertyOptions'
        isFacetable:
          type: boolean
          description: >-
            Indicates that the property can be used for generating facets.
            Cannot be true for properties whose type is object. IsReturnable
            must be true to set this option. Only supported for boolean, enum,
            integer, and text properties.
        isRepeatable:
          type: boolean
          description: >-
            Indicates that multiple values are allowed for the property. For
            example, a document only has one description but can have multiple
            comments. Cannot be true for properties whose type is a boolean. If
            set to false, properties that contain more than one value cause the
            indexing request for that item to be rejected.
      id: PropertyDefinition
    Id:
      id: Id
      properties:
        nameSpace:
          type: integer
          description: >-
            The name space in which this id is unique (typically the application
            that created it). Values should be drawn from the above enum, but
            for experimentation, use values greater than 1000.
          format: int32
        localId:
          type: string
          description: >-
            The local identifier for the DirEntry (local to the creator's
            account). local_id + app_name is guaranteed to be unique within the
            creator account, but not across all User accounts. The string is
            case sensitive. Ignore if name_space==GAIA. NB For
            name_space==COSMO, all local_id's should be defined in
            google3/java/com/google/storage/cosmo/server/api/SpecialObjectIds.java
            as they have a special predefined meaning. See
            cosmo.client.CosmoIdFactory.createObjectId(long,String) for
            IMPORTANT recommendations when generating IDs.
        creatorUserId:
          format: uint64
          description: >-
            The User account in which the DirEntry was originally created. If
            name_space==GAIA, then it's the gaia_id of the user this id is
            referring to. This field should really be called the "bucket ID",
            not the creator ID. In some circumstances, such as copying a Google
            Docs file, a user can create an item in a different user's bucket,
            so it should not be relied upon for anything other than bucket
            location. To look up the requesting user who initially created item,
            use the `creator_id` DirEntry field instead.
          type: string
      type: object
      description: >-
        Identifies a particular object, including both Users and DirEntries.
        This Id is unique across the entire server instance, such as the
        production or qa instance.
    EnterpriseTopazSidekickMeetingNotesCardError:
      id: EnterpriseTopazSidekickMeetingNotesCardError
      properties:
        event:
          $ref: '#/components/schemas/EnterpriseTopazSidekickAgendaEntry'
          description: The event to request meeting notes creation
        description:
          description: The description of the reason why create-meeting-notes failed.
          type: string
        reason:
          enumDescriptions:
            - No reason (default value).
            - The user is not an owner.
            - Unknown reason.
          description: The reason why create-meeting-notes failed.
          type: string
          enum:
            - NONE
            - NOT_OWNER
            - UNKNOWN
      type: object
      description: Errors in the creation of meeting notes.
    UploadItemRef:
      properties:
        name:
          type: string
          description: >-
            The name of the content reference. The maximum length is 2048
            characters.
      id: UploadItemRef
      description: >-
        Represents an upload session reference. This reference is created via
        upload method. This reference is valid for 30 days after its creation.
        Updating of item content may refer to this uploaded content via
        contentDataRef.
      type: object
    ObjectOptions:
      description: The options for an object.
      id: ObjectOptions
      type: object
      properties:
        freshnessOptions:
          $ref: '#/components/schemas/FreshnessOptions'
          description: The freshness options for an object.
        suggestionFilteringOperators:
          items:
            type: string
          description: >-
            Operators that can be used to filter suggestions. For Suggest API,
            only operators mentioned here will be honored in the FilterOptions.
            Only TEXT and ENUM operators are supported. NOTE: "objecttype",
            "type" and "mimetype" are already supported. This property is to
            configure schema specific operators. Even though this is an array,
            only one operator can be specified. This is an array for future
            extensibility. Operators mapping to multiple properties within the
            same object are not supported. If the operator spans across
            different object types, this option has to be set once for each
            object definition.
          type: array
        displayOptions:
          $ref: '#/components/schemas/ObjectDisplayOptions'
          description: >-
            The options that determine how the object is displayed in the Cloud
            Search results page.
    EnterpriseTopazSidekickDocumentGroup:
      type: object
      properties:
        personalizedDocument:
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickCommonDocument'
          description: The list of corresponding documents.
          type: array
        groupType:
          enum:
            - UNKNOWN_TYPE
            - ALL
          type: string
          enumDescriptions:
            - Unknown type.
            - A mix of all the document types.
          description: Document group type
      description: >-
        Represents a mapping between a document type and its corresponding
        documents. Use for Work in Progress card in v1 homepage.
      id: EnterpriseTopazSidekickDocumentGroup
    RetrievalImportance:
      id: RetrievalImportance
      properties:
        importance:
          enumDescriptions:
            - Treat the match like a body text match.
            - Treat the match like a match against title of the item.
            - Treat the match with higher importance than body text.
            - Treat the match with lower importance than body text.
            - >-
              Do not match against this field during retrieval. The property can
              still be used for operator matching, faceting, and suggest if
              desired.
          description: >-
            Indicates the ranking importance given to property when it is
            matched during retrieval. Once set, the token importance of a
            property cannot be changed.
          type: string
          enum:
            - DEFAULT
            - HIGHEST
            - HIGH
            - LOW
            - NONE
      type: object
    DriveFollowUpRestrict:
      type: object
      description: Drive follow-up search restricts (e.g. "followup:suggestions").
      id: DriveFollowUpRestrict
      properties:
        type:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - UNSPECIFIED
            - FOLLOWUP_SUGGESTIONS
            - FOLLOWUP_ACTION_ITEMS
    TextOperatorOptions:
      description: >-
        Used to provide a search operator for text properties. This is optional.
        Search operators let users restrict the query to specific fields
        relevant to the type of item being searched.
      properties:
        exactMatchWithOperator:
          description: >-
            If true, the text value is tokenized as one atomic value in operator
            searches and facet matches. For example, if the operator name is
            "genre" and the value is "science-fiction" the query restrictions
            "genre:science" and "genre:fiction" doesn't match the item;
            "genre:science-fiction" does. Text value matching is case-sensitive
            and does not remove special characters. If false, the text is
            tokenized. For example, if the value is "science-fiction" the
            queries "genre:science" and "genre:fiction" matches the item.
          type: boolean
        operatorName:
          type: string
          description: >-
            Indicates the operator name required in the query in order to
            isolate the text property. For example, if operatorName is *subject*
            and the property's name is *subjectLine*, then queries like
            *subject:<value>* show results only where the value of the property
            named *subjectLine* matches *<value>*. By contrast, a search that
            uses the same *<value>* without an operator returns all items where
            *<value>* matches the value of any text properties or text within
            the content field for the item. The operator name can only contain
            lowercase letters (a-z). The maximum length is 32 characters.
      type: object
      id: TextOperatorOptions
    GetSearchApplicationSessionStatsResponse:
      id: GetSearchApplicationSessionStatsResponse
      type: object
      properties:
        stats:
          type: array
          items:
            $ref: '#/components/schemas/SearchApplicationSessionStats'
    ResultDisplayField:
      description: Display Fields for Search Results
      type: object
      properties:
        label:
          description: The display label for the property.
          type: string
        property:
          description: The name value pair for the property.
          $ref: '#/components/schemas/NamedProperty'
        operatorName:
          description: The operator name of the property.
          type: string
      id: ResultDisplayField
    SearchApplicationQueryStats:
      description: Search application level query stats per date
      type: object
      id: SearchApplicationQueryStats
      properties:
        queryCountByStatus:
          type: array
          items:
            $ref: '#/components/schemas/QueryCountByStatus'
        date:
          $ref: '#/components/schemas/Date'
          description: >-
            The date for which query stats were calculated. Stats calculated on
            the next day close to midnight are returned.
    CustomerUserStats:
      type: object
      properties:
        oneDayActiveUsersCount:
          description: The count of unique active users in the past one day
          format: int64
          type: string
        thirtyDaysActiveUsersCount:
          description: The count of unique active users in the past thirty days
          type: string
          format: int64
        sevenDaysActiveUsersCount:
          description: The count of unique active users in the past seven days
          format: int64
          type: string
        date:
          description: >-
            The date for which session stats were calculated. Stats calculated
            on the next day close to midnight are returned.
          $ref: '#/components/schemas/Date'
      id: CustomerUserStats
    CustomerQueryStats:
      id: CustomerQueryStats
      properties:
        queryCountByStatus:
          type: array
          items:
            $ref: '#/components/schemas/QueryCountByStatus'
        date:
          description: >-
            The date for which query stats were calculated. Stats calculated on
            the next day close to midnight are returned.
          $ref: '#/components/schemas/Date'
      type: object
    PeoplePromotionCard:
      properties:
        people:
          items:
            $ref: '#/components/schemas/PersonCore'
          type: array
      id: PeoplePromotionCard
      type: object
    StructuredResult:
      id: StructuredResult
      properties:
        person:
          description: Representation of a person
          $ref: '#/components/schemas/Person'
      type: object
      description: Structured results that are returned as part of search request.
    EnterpriseTopazSidekickPersonalizedDocsCardProto:
      properties:
        documentGroup:
          type: array
          description: Document group.
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickDocumentGroup'
      description: Personalized docs card proto.
      id: EnterpriseTopazSidekickPersonalizedDocsCardProto
      type: object
    ListUnmappedIdentitiesResponse:
      properties:
        unmappedIdentities:
          type: array
          items:
            $ref: '#/components/schemas/UnmappedIdentity'
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
      id: ListUnmappedIdentitiesResponse
      type: object
    Action:
      id: Action
      properties:
        url:
          description: '[Optional] Url of the action.'
          type: string
        title:
          type: string
          description: '[Required] Title of the action.'
      type: object
    GetSearchApplicationQueryStatsResponse:
      properties:
        totalQueryCount:
          type: string
          format: int64
          description: >-
            Total successful query count (status code 200) for the given date
            range.
        stats:
          items:
            $ref: '#/components/schemas/SearchApplicationQueryStats'
          type: array
          description: Query stats per date for a search application.
      type: object
      id: GetSearchApplicationQueryStatsResponse
      description: >-
        Response format for getting query stats for a search application between
        given dates.
    ObjectPropertyOptions:
      properties:
        subobjectProperties:
          items:
            $ref: '#/components/schemas/PropertyDefinition'
          description: >-
            The properties of the sub-object. These properties represent a
            nested object. For example, if this property represents a postal
            address, the subobjectProperties might be named *street*, *city*,
            and *state*. The maximum number of elements is 1000.
          type: array
      id: ObjectPropertyOptions
      description: The options for object properties.
      type: object
    PushItem:
      description: Represents an item to be pushed to the indexing queue.
      type: object
      id: PushItem
      properties:
        structuredDataHash:
          description: >-
            Structured data hash of the item according to the repository. If
            specified, this is used to determine how to modify this item's
            status. Setting this field and the type field results in argument
            error. The maximum length is 2048 characters.
          type: string
        payload:
          description: >-
            Provides additional document state information for the connector,
            such as an alternate repository ID and other metadata. The maximum
            length is 8192 bytes.
          format: byte
          type: string
        type:
          enumDescriptions:
            - >-
              Default UNSPECIFIED. Specifies that the push operation should not
              modify ItemStatus
            - >-
              Indicates that the repository document has been modified or
              updated since the previous update call. This changes status to
              MODIFIED state for an existing item. If this is called on a non
              existing item, the status is changed to NEW_ITEM.
            - >-
              Item in the repository has not been modified since the last update
              call. This push operation will set status to ACCEPTED state.
            - >-
              Connector is facing a repository error regarding this item. Change
              status to REPOSITORY_ERROR state. Item is unreserved and
              rescheduled at a future time determined by exponential backoff.
            - >-
              Call push with REQUEUE only for items that have been reserved.
              This action unreserves the item and resets its available time to
              the wall clock time.
          type: string
          enum:
            - UNSPECIFIED
            - MODIFIED
            - NOT_MODIFIED
            - REPOSITORY_ERROR
            - REQUEUE
          description: The type of the push operation that defines the push behavior.
        repositoryError:
          description: >-
            Populate this field to store Connector or repository error details.
            This information is displayed in the Admin Console. This field may
            only be populated when the Type is REPOSITORY_ERROR.
          $ref: '#/components/schemas/RepositoryError'
        queue:
          type: string
          description: >-
            Queue to which this item belongs. The `default` queue is chosen if
            this field is not specified. The maximum length is 512 characters.
        metadataHash:
          description: >-
            The metadata hash of the item according to the repository. If
            specified, this is used to determine how to modify this item's
            status. Setting this field and the type field results in argument
            error. The maximum length is 2048 characters.
          type: string
        contentHash:
          description: >-
            Content hash of the item according to the repository. If specified,
            this is used to determine how to modify this item's status. Setting
            this field and the type field results in argument error. The maximum
            length is 2048 characters.
          type: string
    QueryCountByStatus:
      id: QueryCountByStatus
      properties:
        statusCode:
          description: This represents the http status code.
          type: integer
          format: int32
        count:
          type: string
          format: int64
      type: object
    DoublePropertyOptions:
      type: object
      properties:
        operatorOptions:
          description: >-
            If set, describes how the double should be used as a search
            operator.
          $ref: '#/components/schemas/DoubleOperatorOptions'
      id: DoublePropertyOptions
      description: The options for double properties.
    ResponseDebugInfo:
      properties:
        formattedDebugInfo:
          description: General debug info formatted for display.
          type: string
      type: object
      description: Debugging information about the response.
      id: ResponseDebugInfo
    ListQuerySourcesResponse:
      type: object
      id: ListQuerySourcesResponse
      properties:
        nextPageToken:
          type: string
        sources:
          type: array
          items:
            $ref: '#/components/schemas/QuerySource'
      description: List sources response.
    TextPropertyOptions:
      properties:
        operatorOptions:
          description: >-
            If set, describes how the property should be used as a search
            operator.
          $ref: '#/components/schemas/TextOperatorOptions'
        retrievalImportance:
          $ref: '#/components/schemas/RetrievalImportance'
          description: >-
            Indicates the search quality importance of the tokens within the
            field when used for retrieval.
      id: TextPropertyOptions
      type: object
      description: The options for text properties.
    ScoringConfig:
      properties:
        disablePersonalization:
          description: >-
            Whether to personalize the results. By default, personal signals
            will be used to boost results.
          type: boolean
        disableFreshness:
          type: boolean
          description: >-
            Whether to use freshness as a ranking signal. By default, freshness
            is used as a ranking signal. Note that this setting is not available
            in the Admin UI.
      description: >-
        Scoring configurations for a source while processing a Search or Suggest
        request.
      type: object
      id: ScoringConfig
    Context:
      id: Context
      type: object
      properties:
        location:
          type: array
          items:
            type: string
          description: >-
            [Optional] Text-free locations where the card should be shown. This
            is expected to match the user's location in focus. If no location is
            specified, the card will be shown for any location.
        endDayOffsetSec:
          format: int64
          type: string
          description: >-
            [Optional] End time in seconds, within a day, when the card should
            stop being shown if it's within [start_date_sec, end_date_sec]. If
            missing, this is set to 86400 (24 hours x 3600 sec/hour), i.e.,
            midnight next day.
        type:
          type: array
          items:
            enum:
              - UNKNOWN_CARD_TYPE
              - HOMEPAGE_CARD
              - ANSWER_CARD
              - RHS_CARD
            type: string
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
          description: '[Required] Type of the card (homepage, Answer or RHS).'
        query:
          description: >-
            [Required only for Answer and RHS cards - will be ignored for
            Homepage] cards. It's the exact case-insensitive queries that will
            trigger the Answer or RHS card.
          items:
            type: string
          type: array
        startDateSec:
          type: string
          format: int64
          description: >-
            [Optional] Date (in seconds since epoch) when the card should start
            being shown. If missing, start_date_sec will be Jan 1st, 1970 UTC.
        app:
          type: array
          description: >-
            [Optional] App where the card should be shown. If missing, the card
            will be shown in TOPAZ.
          items:
            type: string
            enum:
              - UNKNOWN_APP
              - TOPAZ
              - MOMA
            enumDescriptions:
              - ''
              - ''
              - ''
        surface:
          description: >-
            [Optional] Surface where the card should be shown in. If missing,
            the card will be shown in any surface.
          items:
            type: string
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - Any mobile device.
              - ''
            enum:
              - UNKNOWN_SURFACE
              - DESKTOP
              - ANDROID
              - IOS
              - MOBILE
              - ANY
          type: array
        dayOfWeek:
          items:
            format: int32
            type: integer
          type: array
          description: >-
            [Optional] Day of week when the card should be shown, where 0 is
            Monday.
        locale:
          type: array
          items:
            type: string
          description: >-
            [Optional] The locales for which the card should be triggered (e.g.,
            en_US and en_CA). If missing, the card is going to show to clients
            regardless of their locale.
        endDateSec:
          type: string
          format: int64
          description: >-
            [Optional] Date (in seconds since epoch) when the card should stop
            being shown. If missing, end_date_sec will be set to Jan 1st, 2100.
        startDayOffsetSec:
          type: string
          format: int64
          description: >-
            [Optional] Start time in seconds, within a day, when the card should
            be shown if it's within [start_date_sec, end_date_sec]. If 0, the
            card will be shown from 12:00am on.
    ListItemsResponse:
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
      type: object
      id: ListItemsResponse
    EnumValues:
      id: EnumValues
      description: List of enum values.
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: The maximum allowable length for string values is 32 characters.
    GetSearchApplicationUserStatsResponse:
      type: object
      id: GetSearchApplicationUserStatsResponse
      properties:
        stats:
          items:
            $ref: '#/components/schemas/SearchApplicationUserStats'
          type: array
    PollItemsResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Item'
          type: array
          description: >-
            Set of items from the queue available for connector to process.
            These items have the following subset of fields populated: version
            metadata.hash structured_data.hash content.hash payload status queue
      id: PollItemsResponse
      type: object
    PushItemRequest:
      type: object
      properties:
        debugOptions:
          description: Common debug options.
          $ref: '#/components/schemas/DebugOptions'
        item:
          $ref: '#/components/schemas/PushItem'
          description: Item to push onto the queue.
        connectorName:
          type: string
          description: >-
            The name of connector making this call. Format:
            datasources/{source_id}/connectors/{ID}
      id: PushItemRequest
    Photo:
      description: A person's photo.
      type: object
      id: Photo
      properties:
        url:
          type: string
          description: The URL of the photo.
    SafeHtmlProto:
      properties:
        privateDoNotAccessOrElseSafeHtmlWrappedValue:
          description: >-
            IMPORTANT: Never set or read this field, even from tests, it is
            private. See documentation at the top of .proto file for programming
            language packages with which to create or read this message.
          type: string
      type: object
      description: >-
        IMPORTANT: It is unsafe to accept this message from an untrusted source,
        since it's trivial for an attacker to forge serialized messages that
        don't fulfill the type's safety contract -- for example, it could
        contain attacker controlled script. A system which receives a
        SafeHtmlProto implicitly trusts the producer of the SafeHtmlProto. So,
        it's generally safe to return this message in RPC responses, but
        generally unsafe to accept it in RPC requests.
      id: SafeHtmlProto
    QueryItem:
      properties:
        isSynthetic:
          description: >-
            True if the text was generated by means other than a previous user
            search.
          type: boolean
      description: Information relevant only to a query entry.
      type: object
      id: QueryItem
    EnterpriseTopazSidekickTimeSlot:
      properties:
        startTimeInMillis:
          description: Start time in milliseconds.
          type: string
          format: int64
        startTimeHourAndMinute:
          type: string
          description: Hour and minute of the start time at the user's timezone.
        endTimeHourAndMinute:
          description: Hour and minute of the end time at the user's timezone.
          type: string
        endTimeDay:
          description: Day end time at the user's timezone.
          type: string
        endTimeInMillis:
          format: int64
          description: End time in milliseconds.
          type: string
        startTimeDay:
          description: Day start time at user's timezone.
          type: string
      id: EnterpriseTopazSidekickTimeSlot
      description: Slot of time.
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        code:
          type: integer
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
      id: Status
    Source:
      properties:
        predefinedSource:
          enum:
            - NONE
            - QUERY_HISTORY
            - PERSON
            - GOOGLE_DRIVE
            - GOOGLE_GMAIL
            - GOOGLE_SITES
            - GOOGLE_GROUPS
            - GOOGLE_CALENDAR
            - GOOGLE_KEEP
          type: string
          enumDescriptions:
            - ''
            - >-
              Suggests queries issued by the user in the past. Only valid when
              used with the suggest API. Ignored when used in the query API.
            - >-
              Suggests people in the organization. Only valid when used with the
              suggest API. Results in an error when used in the query API.
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: Predefined content source for Google Apps.
        name:
          type: string
          description: Source name for content indexed by the Indexing API.
      id: Source
      type: object
      description: Defines sources for the suggest/search APIs.
    VPCSettings:
      properties:
        project:
          type: string
          description: >-
            The resource name of the GCP Project to be used for VPC SC policy
            check. VPC security settings on this project will be honored for
            Cloud Search APIs after project_name has been updated through
            CustomerService. Format: projects/{project_id}
      type: object
      id: VPCSettings
    ItemCountByStatus:
      id: ItemCountByStatus
      properties:
        indexedItemsCount:
          description: >-
            Number of items matching the status code for which billing is done.
            This excludes virtual container items from the total count. This
            count would not be applicable for items with ERROR or NEW_ITEM
            status code.
          format: int64
          type: string
        count:
          format: int64
          type: string
          description: Number of items matching the status code.
        statusCode:
          description: Status of the items.
          enum:
            - CODE_UNSPECIFIED
            - ERROR
            - MODIFIED
            - NEW_ITEM
            - ACCEPTED
          type: string
          enumDescriptions:
            - >-
              Input-only value. Used with Items.list to list all items in the
              queue, regardless of status.
            - >-
              Error encountered by Cloud Search while processing this item.
              Details of the error are in repositoryError.
            - >-
              Item has been modified in the repository, and is out of date with
              the version previously accepted into Cloud Search.
            - >-
              Item is known to exist in the repository, but is not yet accepted
              by Cloud Search. An item can be in this state when Items.push has
              been called for an item of this name that did not exist
              previously.
            - API has accepted the up-to-date data of this item.
      type: object
    EnterpriseTopazSidekickPersonProfileCard:
      id: EnterpriseTopazSidekickPersonProfileCard
      type: object
      properties:
        relatedPeople:
          type: array
          items:
            $ref: >-
              #/components/schemas/EnterpriseTopazSidekickPersonProfileCardRelatedPeople
        subject:
          description: The subject of the card.
          $ref: '#/components/schemas/EnterpriseTopazSidekickCommonPerson'
    DateOperatorOptions:
      id: DateOperatorOptions
      type: object
      description: >-
        Optional. Provides a search operator for date properties. Search
        operators let users restrict the query to specific fields relevant to
        the type of item being searched.
      properties:
        greaterThanOperatorName:
          description: >-
            Indicates the operator name required in the query in order to
            isolate the date property using the greater-than operator. For
            example, if greaterThanOperatorName is *closedafter* and the
            property's name is *closeDate*, then queries like
            *closedafter:<value>* show results only where the value of the
            property named *closeDate* is later than *<value>*. The operator
            name can only contain lowercase letters (a-z). The maximum length is
            32 characters.
          type: string
        lessThanOperatorName:
          description: >-
            Indicates the operator name required in the query in order to
            isolate the date property using the less-than operator. For example,
            if lessThanOperatorName is *closedbefore* and the property's name is
            *closeDate*, then queries like *closedbefore:<value>* show results
            only where the value of the property named *closeDate* is earlier
            than *<value>*. The operator name can only contain lowercase letters
            (a-z). The maximum length is 32 characters.
          type: string
        operatorName:
          description: >-
            Indicates the actual string required in the query in order to
            isolate the date property. For example, suppose an issue tracking
            schema object has a property named *closeDate* that specifies an
            operator with an operatorName of *closedon*. For searches on that
            data, queries like *closedon:<value>* show results only where the
            value of the *closeDate* property matches *<value>*. By contrast, a
            search that uses the same *<value>* without an operator returns all
            items where *<value>* matches the value of any String properties or
            text within the content field for the indexed datasource. The
            operator name can only contain lowercase letters (a-z). The maximum
            length is 32 characters.
          type: string
    EnterpriseTopazSidekickAgendaGroupCardProto:
      properties:
        context:
          $ref: >-
            #/components/schemas/EnterpriseTopazSidekickAgendaGroupCardProtoContext
        currentAgendaItem:
          $ref: '#/components/schemas/EnterpriseTopazSidekickAgendaItem'
        agendaItem:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseTopazSidekickAgendaItem'
      id: EnterpriseTopazSidekickAgendaGroupCardProto
      type: object
    DriveTimeSpanRestrict:
      id: DriveTimeSpanRestrict
      description: >-
        The time span search restrict (e.g. "after:2017-09-11
        before:2017-09-12").
      properties:
        type:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - Not Enabled
            - Not Enabled
          type: string
          enum:
            - UNSPECIFIED
            - TODAY
            - YESTERDAY
            - LAST_7_DAYS
            - LAST_30_DAYS
            - LAST_90_DAYS
      type: object
    FilterOptions:
      type: object
      description: Filter options to be applied on query.
      properties:
        filter:
          $ref: '#/components/schemas/Filter'
          description: >-
            Generic filter to restrict the search, such as `lang:en`,
            `site:xyz`.
        objectType:
          type: string
          description: >-
            If object_type is set, only objects of that type are returned. This
            should correspond to the name of the object that was registered
            within the definition of schema. The maximum length is 256
            characters.
      id: FilterOptions
    SearchApplicationSessionStats:
      type: object
      id: SearchApplicationSessionStats
      properties:
        date:
          $ref: '#/components/schemas/Date'
          description: >-
            The date for which session stats were calculated. Stats are
            calculated on the following day, close to midnight PST, and then
            returned.
        searchSessionsCount:
          format: int64
          description: The count of search sessions on the day
          type: string
    EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo:
      description: Metadata for disambiguation.
      id: EnterpriseTopazSidekickPeopleAnswerDisambiguationInfo
      type: object
      properties:
        name:
          description: >-
            The name that was extracted from the query. This may be in the form
            of the given name, last name, full name, LDAP, or email address.
            This name can be considered suitable for displaying to the user and
            can largely be considered to be normalized (e.g. "Bob's" -> "Bob").
          type: string
        disambiguation:
          type: array
          description: >-
            A list of people that also matched the query. This list is not
            complete.
          items:
            $ref: >-
              #/components/schemas/EnterpriseTopazSidekickPeopleAnswerDisambiguationInfoDisambiguationPerson
    EnterpriseTopazSidekickDocumentPerCategoryList:
      id: EnterpriseTopazSidekickDocumentPerCategoryList
      type: object
      properties:
        documents:
          items:
            $ref: >-
              #/components/schemas/EnterpriseTopazSidekickDocumentPerCategoryListDocumentPerCategoryListEntry
          type: array
        listType:
          type: string
          enumDescriptions:
            - ''
            - >-
              All documents in the list correspond to one of the mention
              categories.
            - >-
              All documents in the list correspond to one of the share
              categories.
            - >-
              A mixture of document categories that correspond to documents that
              need the users attention (e.g. documents that have been explicitly
              shared with the user but have not been viewed and documents where
              the user was mentioned but has not replied).
            - >-
              All documents in the list correspond to one of the view
              categories.
            - >-
              All documents in the list correspond to one of the edit
              categories.
          enum:
            - UNKNOWN_LIST_TYPE
            - MENTIONS
            - SHARES
            - NEEDS_ATTENTION
            - VIEWS
            - EDITS
        helpMessage:
          description: >-
            Localized message explaining how the documents were derived (e.g.
            from the last 30 days activity). This field is optional.
          type: string
        responseMessage:
          type: string
          description: Response message in case no documents are present in the card.
        listTypeDescription:
          type: string
          description: Description of the types of documents present in the list.
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud_search.settings.indexing: Index and serve your organization's data with Cloud Search
            https://www.googleapis.com/auth/cloud_search: Index and serve your organization's data with Cloud Search
            https://www.googleapis.com/auth/cloud_search.stats.indexing: Index and serve your organization's data with Cloud Search
            https://www.googleapis.com/auth/cloud_search.settings.query: Index and serve your organization's data with Cloud Search
            https://www.googleapis.com/auth/cloud_search.stats: Index and serve your organization's data with Cloud Search
            https://www.googleapis.com/auth/cloud_search.debug: Index and serve your organization's data with Cloud Search
            https://www.googleapis.com/auth/cloud_search.indexing: Index and serve your organization's data with Cloud Search
            https://www.googleapis.com/auth/cloud_search.settings: Index and serve your organization's data with Cloud Search
            https://www.googleapis.com/auth/cloud_search.query: Search your organization's data in the Cloud Search index
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/query/search:
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
    post:
      description: >-
        The Cloud Search Query API provides the search method, which returns the
        most relevant results from a user query. The results can come from
        Google Workspace apps, such as Gmail or Google Drive, or they can come
        from data that you have indexed from a third party. **Note:** This API
        requires a standard end user account to execute. A service account can't
        perform Query API requests directly; to use a service account to perform
        queries, set up [Google Workspace domain-wide delegation of
        authority](https://developers.google.com/cloud-search/docs/guides/delegation/).
      operationId: cloudsearch.query.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.query
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
      parameters: []
      x-stackQL-resource: query
      x-stackQL-verb: exec
  /v1/query/suggest:
    parameters: *ref_1
    post:
      description: >-
        Provides suggestions for autocompleting the query. **Note:** This API
        requires a standard end user account to execute. A service account can't
        perform Query API requests directly; to use a service account to perform
        queries, set up [Google Workspace domain-wide delegation of
        authority](https://developers.google.com/cloud-search/docs/guides/delegation/).
      operationId: cloudsearch.query.suggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.query
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestResponse'
      parameters: []
      x-stackQL-resource: query
      x-stackQL-verb: exec
  /v1/query:removeActivity:
    parameters: *ref_1
    post:
      description: >-
        Provides functionality to remove logged activity for a user. Currently
        to be used only for dynamite 1p clients **Note:** This API requires a
        standard end user account to execute. A service account can't perform
        Remove Activity requests directly; to use a service account to perform
        queries, set up [Google Workspace domain-wide delegation of
        authority](https://developers.google.com/cloud-search/docs/guides/delegation/).
      operationId: cloudsearch.query.removeActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveActivityRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.query
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveActivityResponse'
      parameters: []
      x-stackQL-resource: query__activity
      x-stackQL-verb: delete
  /v1/query/sources:
    parameters: *ref_1
    get:
      description: >-
        Returns list of sources that user can use for Search and Suggest APIs.
        **Note:** This API requires a standard end user account to execute. A
        service account can't perform Query API requests directly; to use a
        service account to perform queries, set up [Google Workspace domain-wide
        delegation of
        authority](https://developers.google.com/cloud-search/docs/guides/delegation/).
      operationId: cloudsearch.query.sources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.query
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQuerySourcesResponse'
      parameters:
        - in: query
          name: requestOptions.searchApplicationId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: requestOptions.languageCode
          schema:
            type: string
        - in: query
          name: requestOptions.debugOptions.enableDebugging
          schema:
            type: boolean
        - in: query
          name: requestOptions.timeZone
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-verb: select
  /v1/operations/{operationsId}/lro:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: cloudsearch.operations.lro.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.debug
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.debug
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.indexing
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.query
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: lro
      x-stackQL-verb: select
  /v1/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: cloudsearch.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.debug
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.debug
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.indexing
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.query
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/stats/index:
    parameters: *ref_1
    get:
      description: >-
        Gets indexed item statistics aggreggated across all data sources. This
        API only returns statistics for previous dates; it doesn't return
        statistics for the current day. **Note:** This API requires a standard
        end user account to execute.
      operationId: cloudsearch.stats.getIndex
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerIndexStatsResponse'
      parameters:
        - in: query
          name: toDate.day
          schema:
            type: integer
        - in: query
          name: toDate.month
          schema:
            type: integer
        - in: query
          name: fromDate.day
          schema:
            type: integer
        - in: query
          name: toDate.year
          schema:
            type: integer
        - in: query
          name: fromDate.month
          schema:
            type: integer
        - in: query
          name: fromDate.year
          schema:
            type: integer
      x-stackQL-resource: stats__index
      x-stackQL-verb: select
  /v1/stats/session:
    parameters: *ref_1
    get:
      description: >-
        Get the # of search sessions, % of successful sessions with a click
        query statistics for customer. **Note:** This API requires a standard
        end user account to execute.
      operationId: cloudsearch.stats.getSession
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerSessionStatsResponse'
      parameters:
        - in: query
          name: fromDate.day
          schema:
            type: integer
        - in: query
          name: fromDate.year
          schema:
            type: integer
        - in: query
          name: fromDate.month
          schema:
            type: integer
        - in: query
          name: toDate.month
          schema:
            type: integer
        - in: query
          name: toDate.day
          schema:
            type: integer
        - in: query
          name: toDate.year
          schema:
            type: integer
      x-stackQL-resource: stats__session
      x-stackQL-verb: select
  /v1/stats/searchapplication:
    parameters: *ref_1
    get:
      description: >-
        Get search application stats for customer. **Note:** This API requires a
        standard end user account to execute.
      operationId: cloudsearch.stats.getSearchapplication
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerSearchApplicationStatsResponse'
      parameters:
        - in: query
          name: endDate.year
          schema:
            type: integer
        - in: query
          name: endDate.month
          schema:
            type: integer
        - in: query
          name: startDate.day
          schema:
            type: integer
        - in: query
          name: endDate.day
          schema:
            type: integer
        - in: query
          name: startDate.month
          schema:
            type: integer
        - in: query
          name: startDate.year
          schema:
            type: integer
      x-stackQL-resource: stats__searchapplication
      x-stackQL-verb: select
  /v1/stats/user:
    parameters: *ref_1
    get:
      description: >-
        Get the users statistics for customer. **Note:** This API requires a
        standard end user account to execute.
      operationId: cloudsearch.stats.getUser
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerUserStatsResponse'
      parameters:
        - in: query
          name: fromDate.month
          schema:
            type: integer
        - in: query
          name: fromDate.year
          schema:
            type: integer
        - in: query
          name: toDate.day
          schema:
            type: integer
        - in: query
          name: fromDate.day
          schema:
            type: integer
        - in: query
          name: toDate.year
          schema:
            type: integer
        - in: query
          name: toDate.month
          schema:
            type: integer
      x-stackQL-resource: stats__user
      x-stackQL-verb: select
  /v1/stats/query:
    parameters: *ref_1
    get:
      description: >-
        Get the query statistics for customer. **Note:** This API requires a
        standard end user account to execute.
      operationId: cloudsearch.stats.getQuery
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerQueryStatsResponse'
      parameters:
        - in: query
          name: fromDate.month
          schema:
            type: integer
        - in: query
          name: toDate.day
          schema:
            type: integer
        - in: query
          name: fromDate.year
          schema:
            type: integer
        - in: query
          name: toDate.year
          schema:
            type: integer
        - in: query
          name: toDate.month
          schema:
            type: integer
        - in: query
          name: fromDate.day
          schema:
            type: integer
      x-stackQL-resource: stats__query
      x-stackQL-verb: select
  /v1/stats/user/searchapplications/{searchapplicationsId}:
    parameters: *ref_1
    get:
      description: >-
        Get the users statistics for search application. **Note:** This API
        requires a standard end user account to execute.
      operationId: cloudsearch.stats.user.searchapplications.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchApplicationUserStatsResponse'
      parameters:
        - in: path
          name: searchapplicationsId
          required: true
          schema:
            type: string
        - in: query
          name: toDate.month
          schema:
            type: integer
        - in: query
          name: toDate.day
          schema:
            type: integer
        - in: query
          name: fromDate.day
          schema:
            type: integer
        - in: query
          name: toDate.year
          schema:
            type: integer
        - in: query
          name: fromDate.year
          schema:
            type: integer
        - in: query
          name: fromDate.month
          schema:
            type: integer
      x-stackQL-resource: searchapplications
      x-stackQL-verb: select
  /v1/stats/index/datasources/{datasourcesId}:
    parameters: *ref_1
    get:
      description: >-
        Gets indexed item statistics for a single data source. **Note:** This
        API requires a standard end user account to execute.
      operationId: cloudsearch.stats.index.datasources.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataSourceIndexStatsResponse'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: query
          name: fromDate.day
          schema:
            type: integer
        - in: query
          name: fromDate.year
          schema:
            type: integer
        - in: query
          name: toDate.year
          schema:
            type: integer
        - in: query
          name: toDate.month
          schema:
            type: integer
        - in: query
          name: toDate.day
          schema:
            type: integer
        - in: query
          name: fromDate.month
          schema:
            type: integer
      x-stackQL-resource: datasources
      x-stackQL-verb: select
  /v1/stats/query/searchapplications/{searchapplicationsId}:
    parameters: *ref_1
    get:
      description: >-
        Get the query statistics for search application. **Note:** This API
        requires a standard end user account to execute.
      operationId: cloudsearch.stats.query.searchapplications.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchApplicationQueryStatsResponse'
      parameters:
        - in: path
          name: searchapplicationsId
          required: true
          schema:
            type: string
        - in: query
          name: toDate.month
          schema:
            type: integer
        - in: query
          name: toDate.day
          schema:
            type: integer
        - in: query
          name: toDate.year
          schema:
            type: integer
        - in: query
          name: fromDate.year
          schema:
            type: integer
        - in: query
          name: fromDate.day
          schema:
            type: integer
        - in: query
          name: fromDate.month
          schema:
            type: integer
      x-stackQL-resource: searchapplications
      x-stackQL-verb: select
  /v1/stats/session/searchapplications/{searchapplicationsId}:
    parameters: *ref_1
    get:
      description: >-
        Get the # of search sessions, % of successful sessions with a click
        query statistics for search application. **Note:** This API requires a
        standard end user account to execute.
      operationId: cloudsearch.stats.session.searchapplications.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.stats.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchApplicationSessionStatsResponse'
      parameters:
        - in: path
          name: searchapplicationsId
          required: true
          schema:
            type: string
        - in: query
          name: fromDate.month
          schema:
            type: integer
        - in: query
          name: toDate.day
          schema:
            type: integer
        - in: query
          name: fromDate.day
          schema:
            type: integer
        - in: query
          name: toDate.year
          schema:
            type: integer
        - in: query
          name: toDate.month
          schema:
            type: integer
        - in: query
          name: fromDate.year
          schema:
            type: integer
      x-stackQL-resource: searchapplications
      x-stackQL-verb: select
  /v1/debug/datasources/{datasourcesId}/items:searchByViewUrl:
    parameters: *ref_1
    post:
      description: >-
        Fetches the item whose viewUrl exactly matches that of the URL provided
        in the request. **Note:** This API requires an admin account to execute.
      operationId: cloudsearch.debug.datasources.items.searchByViewUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchItemsByViewUrlRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.debug
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.debug
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchItemsByViewUrlResponse'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: items
      x-stackQL-verb: exec
  /v1/debug/datasources/{datasourcesId}/items/{itemsId}:checkAccess:
    parameters: *ref_1
    post:
      description: >-
        Checks whether an item is accessible by specified principal. Principal
        must be a user; groups and domain values aren't supported. **Note:**
        This API requires an admin account to execute.
      operationId: cloudsearch.debug.datasources.items.checkAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Principal'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.debug
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.debug
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAccessResponse'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: path
          name: itemsId
          required: true
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
      x-stackQL-resource: items
      x-stackQL-verb: exec
  /v1/debug/datasources/{datasourcesId}/items/{itemsId}/unmappedids:
    parameters: *ref_1
    get:
      description: >-
        List all unmapped identities for a specific item. **Note:** This API
        requires an admin account to execute.
      operationId: cloudsearch.debug.datasources.items.unmappedids.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.debug
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.debug
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUnmappedIdentitiesResponse'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: path
          name: itemsId
          required: true
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: unmappedids
      x-stackQL-verb: select
  /v1/debug/identitysources/{identitysourcesId}/unmappedids:
    parameters: *ref_1
    get:
      description: >-
        Lists unmapped user identities for an identity source. **Note:** This
        API requires an admin account to execute.
      operationId: cloudsearch.debug.identitysources.unmappedids.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.debug
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.debug
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUnmappedIdentitiesResponse'
      parameters:
        - in: path
          name: identitysourcesId
          required: true
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: resolutionStatusCode
          schema:
            type: string
      x-stackQL-resource: unmappedids
      x-stackQL-verb: select
  /v1/debug/identitysources/{identitysourcesId}/items:forunmappedidentity:
    parameters: *ref_1
    get:
      description: >-
        Lists names of items associated with an unmapped identity. **Note:**
        This API requires an admin account to execute.
      operationId: cloudsearch.debug.identitysources.items.listForunmappedidentity
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.debug
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.debug
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItemNamesForUnmappedIdentityResponse'
      parameters:
        - in: path
          name: identitysourcesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
        - in: query
          name: groupResourceName
          schema:
            type: string
        - in: query
          name: userResourceName
          schema:
            type: string
      x-stackQL-resource: items__forunmappedidentity
      x-stackQL-verb: select
  /v1:initializeCustomer:
    parameters: *ref_1
    post:
      description: >-
        Enables `third party` support in Google Cloud Search. **Note:** This API
        requires an admin account to execute.
      operationId: cloudsearch.initializeCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitializeCustomerRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: cloudsearch
      x-stackQL-verb: exec
  /v1/settings/searchapplications:
    parameters: *ref_1
    get:
      description: >-
        Lists all search applications. **Note:** This API requires an admin
        account to execute.
      operationId: cloudsearch.settings.searchapplications.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.query
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSearchApplicationsResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: searchapplications
      x-stackQL-verb: select
    post:
      description: >-
        Creates a search application. **Note:** This API requires an admin
        account to execute.
      operationId: cloudsearch.settings.searchapplications.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchApplication'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.query
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: searchapplications
      x-stackQL-verb: insert
  /v1/settings/searchapplications/{searchapplicationsId}:
    parameters: *ref_1
    patch:
      description: >-
        Updates a search application. **Note:** This API requires an admin
        account to execute.
      operationId: cloudsearch.settings.searchapplications.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchApplication'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.query
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: searchapplicationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: searchapplications
      x-stackQL-verb: exec
    put:
      description: >-
        Updates a search application. **Note:** This API requires an admin
        account to execute.
      operationId: cloudsearch.settings.searchapplications.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchApplication'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.query
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: searchapplicationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: searchapplications
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes a search application. **Note:** This API requires an admin
        account to execute.
      operationId: cloudsearch.settings.searchapplications.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.query
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: searchapplicationsId
          required: true
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
      x-stackQL-resource: searchapplications
      x-stackQL-verb: delete
    get:
      description: >-
        Gets the specified search application. **Note:** This API requires an
        admin account to execute.
      operationId: cloudsearch.settings.searchapplications.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.query
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchApplication'
      parameters:
        - in: path
          name: searchapplicationsId
          required: true
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
      x-stackQL-resource: searchapplications
      x-stackQL-verb: select
  /v1/settings/searchapplications/{searchapplicationsId}:reset:
    parameters: *ref_1
    post:
      description: >-
        Resets a search application to default settings. This will return an
        empty response. **Note:** This API requires an admin account to execute.
      operationId: cloudsearch.settings.searchapplications.reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetSearchApplicationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.query
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: searchapplicationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: searchapplications
      x-stackQL-verb: exec
  /v1/settings/datasources:
    parameters: *ref_1
    get:
      description: >-
        Lists datasources. **Note:** This API requires an admin account to
        execute.
      operationId: cloudsearch.settings.datasources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataSourceResponse'
      parameters:
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: datasources
      x-stackQL-verb: select
    post:
      description: >-
        Creates a datasource. **Note:** This API requires an admin account to
        execute.
      operationId: cloudsearch.settings.datasources.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: datasources
      x-stackQL-verb: insert
  /v1/settings/datasources/{datasourcesId}:
    parameters: *ref_1
    get:
      description: >-
        Gets a datasource. **Note:** This API requires an admin account to
        execute.
      operationId: cloudsearch.settings.datasources.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
      x-stackQL-resource: datasources
      x-stackQL-verb: select
    put:
      description: >-
        Updates a datasource. **Note:** This API requires an admin account to
        execute.
      operationId: cloudsearch.settings.datasources.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasources
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes a datasource. **Note:** This API requires an admin account to
        execute.
      operationId: cloudsearch.settings.datasources.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
      x-stackQL-resource: datasources
      x-stackQL-verb: delete
    patch:
      description: >-
        Updates a datasource. **Note:** This API requires an admin account to
        execute.
      operationId: cloudsearch.settings.datasources.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
      x-stackQL-resource: datasources
      x-stackQL-verb: exec
  /v1/settings/customer:
    parameters: *ref_1
    get:
      description: >-
        Get customer settings. **Note:** This API requires an admin account to
        execute.
      operationId: cloudsearch.settings.getCustomer
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSettings'
      parameters: []
      x-stackQL-resource: settings__customer
      x-stackQL-verb: select
    patch:
      description: >-
        Update customer settings. **Note:** This API requires an admin account
        to execute.
      operationId: cloudsearch.settings.updateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-verb: exec
  /v1/media/{mediaId}:
    parameters: *ref_1
    post:
      description: >-
        Uploads media for indexing. The upload endpoint supports direct and
        resumable upload protocols and is intended for large items that can not
        be [inlined during index
        requests](https://developers.google.com/cloud-search/docs/reference/rest/v1/indexing.datasources.items#itemcontent).
        To index large content: 1. Call indexing.datasources.items.upload with
        the item name to begin an upload session and retrieve the UploadItemRef.
        1. Call media.upload to upload the content, as a streaming request,
        using the same resource name from the UploadItemRef from step 1. 1. Call
        indexing.datasources.items.index to index the item. Populate the
        [ItemContent](/cloud-search/docs/reference/rest/v1/indexing.datasources.items#ItemContent)
        with the UploadItemRef from step 1. For additional information, see
        [Create a content connector using the REST
        API](https://developers.google.com/cloud-search/docs/guides/content-connector#rest).
        **Note:** This API requires a service account to execute.
      operationId: cloudsearch.media.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
      parameters:
        - in: path
          name: mediaId
          required: true
          schema:
            type: string
      x-stackQL-resource: media
      x-stackQL-verb: exec
  /v1/indexing/datasources/{datasourcesId}/items/{itemsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets Item resource by item name. This API requires an admin or service
        account to execute. The service account used is the one whitelisted in
        the corresponding data source.
      operationId: cloudsearch.indexing.datasources.items.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: path
          name: itemsId
          required: true
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
        - in: query
          name: connectorName
          schema:
            type: string
      x-stackQL-resource: items
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes Item resource for the specified resource name. This API requires
        an admin or service account to execute. The service account used is the
        one whitelisted in the corresponding data source.
      operationId: cloudsearch.indexing.datasources.items.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: path
          name: itemsId
          required: true
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
        - in: query
          name: version
          schema:
            type: string
        - in: query
          name: connectorName
          schema:
            type: string
        - in: query
          name: mode
          schema:
            type: string
      x-stackQL-resource: items
      x-stackQL-verb: delete
  /v1/indexing/datasources/{datasourcesId}/items/{itemsId}:push:
    parameters: *ref_1
    post:
      description: >-
        Pushes an item onto a queue for later polling and updating. This API
        requires an admin or service account to execute. The service account
        used is the one whitelisted in the corresponding data source.
      operationId: cloudsearch.indexing.datasources.items.push
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushItemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: path
          name: itemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: items
      x-stackQL-verb: exec
  /v1/indexing/datasources/{datasourcesId}/items:
    parameters: *ref_1
    get:
      description: >-
        Lists all or a subset of Item resources. This API requires an admin or
        service account to execute. The service account used is the one
        whitelisted in the corresponding data source.
      operationId: cloudsearch.indexing.datasources.items.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItemsResponse'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: brief
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: connectorName
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
      x-stackQL-resource: items
      x-stackQL-verb: select
  /v1/indexing/datasources/{datasourcesId}/items/{itemsId}:index:
    parameters: *ref_1
    post:
      description: >-
        Updates Item ACL, metadata, and content. It will insert the Item if it
        does not exist. This method does not support partial updates. Fields
        with no provided values are cleared out in the Cloud Search index. This
        API requires an admin or service account to execute. The service account
        used is the one whitelisted in the corresponding data source.
      operationId: cloudsearch.indexing.datasources.items.index
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexItemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: path
          name: itemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: items
      x-stackQL-verb: exec
  /v1/indexing/datasources/{datasourcesId}/items:poll:
    parameters: *ref_1
    post:
      description: >-
        Polls for unreserved items from the indexing queue and marks a set as
        reserved, starting with items that have the oldest timestamp from the
        highest priority ItemStatus. The priority order is as follows: ERROR
        MODIFIED NEW_ITEM ACCEPTED Reserving items ensures that polling from
        other threads cannot create overlapping sets. After handling the
        reserved items, the client should put items back into the unreserved
        state, either by calling index, or by calling push with the type
        REQUEUE. Items automatically become available (unreserved) after 4 hours
        even if no update or push method is called. This API requires an admin
        or service account to execute. The service account used is the one
        whitelisted in the corresponding data source.
      operationId: cloudsearch.indexing.datasources.items.poll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollItemsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollItemsResponse'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: items
      x-stackQL-verb: exec
  /v1/indexing/datasources/{datasourcesId}/items:deleteQueueItems:
    parameters: *ref_1
    post:
      description: >-
        Deletes all items in a queue. This method is useful for deleting stale
        items. This API requires an admin or service account to execute. The
        service account used is the one whitelisted in the corresponding data
        source.
      operationId: cloudsearch.indexing.datasources.items.deleteQueueItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteQueueItemsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: items__queue_items
      x-stackQL-verb: delete
  /v1/indexing/datasources/{datasourcesId}/items/{itemsId}:upload:
    parameters: *ref_1
    post:
      description: >-
        Creates an upload session for uploading item content. For items smaller
        than 100 KB, it's easier to embed the content inline within an index
        request. This API requires an admin or service account to execute. The
        service account used is the one whitelisted in the corresponding data
        source.
      operationId: cloudsearch.indexing.datasources.items.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartUploadItemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadItemRef'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: path
          name: itemsId
          required: true
          schema:
            type: string
      x-stackQL-resource: items
      x-stackQL-verb: exec
  /v1/indexing/datasources/{datasourcesId}/items:unreserve:
    parameters: *ref_1
    post:
      description: >-
        Unreserves all items from a queue, making them all eligible to be
        polled. This method is useful for resetting the indexing queue after a
        connector has been restarted. This API requires an admin or service
        account to execute. The service account used is the one whitelisted in
        the corresponding data source.
      operationId: cloudsearch.indexing.datasources.items.unreserve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnreserveItemsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: items
      x-stackQL-verb: exec
  /v1/indexing/datasources/{datasourcesId}/schema:
    parameters: *ref_1
    get:
      description: >-
        Gets the schema of a data source. **Note:** This API requires an admin
        or service account to execute.
      operationId: cloudsearch.indexing.datasources.getSchema
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
      x-stackQL-resource: datasources__schema
      x-stackQL-verb: select
    put:
      description: >-
        Updates the schema of a data source. This method does not perform
        incremental updates to the schema. Instead, this method updates the
        schema by overwriting the entire schema. **Note:** This API requires an
        admin or service account to execute.
      operationId: cloudsearch.indexing.datasources.updateSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSchemaRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: datasources
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes the schema of a data source. **Note:** This API requires an
        admin or service account to execute.
      operationId: cloudsearch.indexing.datasources.deleteSchema
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings
        - Oauth2:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
          Oauth2c:
            - https://www.googleapis.com/auth/cloud_search.settings.indexing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: datasourcesId
          required: true
          schema:
            type: string
        - in: query
          name: debugOptions.enableDebugging
          schema:
            type: boolean
      x-stackQL-resource: datasources__schema
      x-stackQL-verb: delete
