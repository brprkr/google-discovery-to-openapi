openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Identity API
  description: API for provisioning and managing identity resources.
  version: v1beta1
  x-discovery-doc-revision: '20230619'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/identity/
servers:
  - url: https://cloudidentity.googleapis.com
components:
  schemas:
    GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse:
      description: Response message for approving the device to access user data.
      id: GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse
      properties:
        deviceUser:
          description: Resultant DeviceUser object for the action.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
      type: object
    DeleteInboundSamlSsoProfileOperationMetadata:
      id: DeleteInboundSamlSsoProfileOperationMetadata
      type: object
      properties: {}
      description: >-
        LRO response metadata for
        InboundSamlSsoProfilesService.DeleteInboundSamlSsoProfile.
    WipeDeviceUserRequest:
      type: object
      properties:
        customer:
          description: >-
            Optional. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            customer. If you're using this API for your own organization, use
            `customers/my_customer` If you're using this API to manage another
            organization, use `customers/{customer_id}`, where customer_id is
            the customer to whom the device belongs.
          type: string
      id: WipeDeviceUserRequest
      description: Request message for starting an account wipe on device.
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse:
      type: object
      properties:
        deviceUser:
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
          description: Resultant DeviceUser object for the action.
      description: Response message for cancelling an unfinished user account wipe.
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse
    GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata:
      description: Metadata for WipeDevice LRO.
      properties: {}
      type: object
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata
    ListDeviceUsersResponse:
      type: object
      id: ListDeviceUsersResponse
      properties:
        nextPageToken:
          description: >-
            Token to retrieve the next page of results. Empty if there are no
            more results.
          type: string
        deviceUsers:
          type: array
          description: Devices meeting the list restrictions.
          items:
            $ref: '#/components/schemas/DeviceUser'
      description: Response message that is returned from the ListDeviceUsers method.
    GoogleAppsCloudidentityDevicesV1DeviceUser:
      properties:
        createTime:
          description: When the user first signed in to the device
          type: string
          format: google-datetime
        compromisedState:
          enumDescriptions:
            - >-
              Compromised state of Device User account is unknown or
              unspecified.
            - Device User Account is compromised.
            - Device User Account is not compromised.
          description: Compromised State of the DeviceUser object
          type: string
          enum:
            - COMPROMISED_STATE_UNSPECIFIED
            - COMPROMISED
            - NOT_COMPROMISED
        firstSyncTime:
          description: >-
            Output only. Most recent time when user registered with this
            service.
          type: string
          format: google-datetime
          readOnly: true
        managementState:
          type: string
          description: Output only. Management state of the user on the device.
          enum:
            - MANAGEMENT_STATE_UNSPECIFIED
            - WIPING
            - WIPED
            - APPROVED
            - BLOCKED
            - PENDING_APPROVAL
            - UNENROLLED
          readOnly: true
          enumDescriptions:
            - Default value. This value is unused.
            - This user's data and profile is being removed from the device.
            - This user's data and profile is removed from the device.
            - User is approved to access data on the device.
            - User is blocked from accessing data on the device.
            - User is awaiting approval.
            - >-
              User is unenrolled from Advanced Windows Management, but the
              Windows account is still intact.
        lastSyncTime:
          format: google-datetime
          description: Output only. Last time when user synced with policies.
          readOnly: true
          type: string
        passwordState:
          description: Password state of the DeviceUser object
          enumDescriptions:
            - Password state not set.
            - Password set in object.
            - Password not set in object.
          enum:
            - PASSWORD_STATE_UNSPECIFIED
            - PASSWORD_SET
            - PASSWORD_NOT_SET
          type: string
        userAgent:
          type: string
          readOnly: true
          description: Output only. User agent on the device for this specific user
        name:
          type: string
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            DeviceUser in format: `devices/{device}/deviceUsers/{device_user}`,
            where `device_user` uniquely identifies a user's use of a device.
          readOnly: true
        languageCode:
          description: Output only. Default locale used on device, in IETF BCP-47 format.
          type: string
          readOnly: true
        userEmail:
          description: Email address of the user registered on the device.
          type: string
      description: >-
        Represents a user's use of a Device in the Cloud Identity Devices API. A
        DeviceUser is a resource representing a user's use of a Device
      type: object
      id: GoogleAppsCloudidentityDevicesV1DeviceUser
    ListOrgMembershipsResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is empty, there are no subsequent pages.
        orgMemberships:
          type: array
          items:
            $ref: '#/components/schemas/OrgMembership'
          description: The non-vacuous membership in an orgUnit.
      id: ListOrgMembershipsResponse
      description: The response message for OrgMembershipsService.ListOrgMemberships.
    CreateInboundSamlSsoProfileOperationMetadata:
      type: object
      description: >-
        LRO response metadata for
        InboundSamlSsoProfilesService.CreateInboundSamlSsoProfile.
      id: CreateInboundSamlSsoProfileOperationMetadata
      properties: {}
    RestrictionEvaluation:
      properties:
        state:
          enumDescriptions:
            - Default. Should not be used.
            - The restriction state is currently being evaluated.
            - All transitive memberships are adhering to restriction.
            - >-
              Some transitive memberships violate the restriction. No new
              violating memberships can be added.
            - >-
              Some transitive memberships violate the restriction. New violating
              direct memberships will be denied while indirect memberships may
              be added.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - EVALUATING
            - COMPLIANT
            - FORWARD_COMPLIANT
            - NON_COMPLIANT
          type: string
          description: Output only. The current state of the restriction
      type: object
      id: RestrictionEvaluation
      description: The evaluated state of this restriction.
    MembershipRelation:
      id: MembershipRelation
      properties:
        labels:
          description: >-
            One or more label entries that apply to the Group. Currently
            supported labels contain a key with an empty value.
          additionalProperties:
            type: string
          type: object
        displayName:
          description: The display name of the `Group`.
          type: string
        groupKey:
          $ref: '#/components/schemas/EntityKey'
          description: The `EntityKey` of the `Group`.
        membership:
          description: >-
            The [resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            `Membership`. Shall be of the form
            `groups/{group_id}/memberships/{membership_id}`.
          type: string
        description:
          description: >-
            An extended description to help users determine the purpose of a
            `Group`.
          type: string
        roles:
          items:
            $ref: '#/components/schemas/MembershipRole'
          description: The `MembershipRole`s that apply to the `Membership`.
          type: array
        group:
          type: string
          description: >-
            The [resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            `Group`. Shall be of the form `groups/{group_id}`.
      type: object
      description: Message containing membership relation.
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata:
      description: Metadata for CancelWipeDevice LRO.
      properties: {}
      type: object
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata
    BlockDeviceUserResponse:
      type: object
      properties:
        deviceUser:
          description: Resultant DeviceUser object for the action.
          $ref: '#/components/schemas/DeviceUser'
      description: Response message for blocking the device from accessing user data.
      id: BlockDeviceUserResponse
    GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata:
      properties: {}
      description: Metadata for WipeDeviceUser LRO.
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata
      type: object
    DynamicGroupStatus:
      properties:
        statusTime:
          type: string
          format: google-datetime
          description: >-
            The latest time at which the dynamic group is guaranteed to be in
            the given status. If status is `UP_TO_DATE`, the latest time at
            which the dynamic group was confirmed to be up-to-date. If status is
            `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.
        status:
          description: Status of the dynamic group.
          enum:
            - STATUS_UNSPECIFIED
            - UP_TO_DATE
            - UPDATING_MEMBERSHIPS
            - INVALID_QUERY
          enumDescriptions:
            - Default.
            - The dynamic group is up-to-date.
            - >-
              The dynamic group has just been created and memberships are being
              updated.
            - >-
              Group is in an unrecoverable state and its memberships can't be
              updated.
          type: string
      id: DynamicGroupStatus
      type: object
      description: The current status of a dynamic group along with timestamp.
    SearchGroupsResponse:
      description: The response message for GroupsService.SearchGroups.
      id: SearchGroupsResponse
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          description: The `Group` resources that match the search query.
        nextPageToken:
          description: >-
            A continuation token to retrieve the next page of results, or empty
            if there are no more results available.
          type: string
    GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata:
      description: Metadata for CreateDevice LRO.
      id: GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata
      type: object
      properties: {}
    LookupMembershipNameResponse:
      description: The response message for MembershipsService.LookupMembershipName.
      properties:
        name:
          type: string
          description: >-
            The [resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            looked-up `Membership`. Must be of the form
            `groups/{group_id}/memberships/{membership_id}`.
      id: LookupMembershipNameResponse
      type: object
    AddIdpCredentialRequest:
      id: AddIdpCredentialRequest
      type: object
      properties:
        pemData:
          description: >-
            PEM encoded x509 certificate containing the public key for verifying
            IdP signatures.
          type: string
      description: >-
        The request for creating an IdpCredential with its associated payload.
        An InboundSamlSsoProfile can own up to 2 credentials.
    IsInvitableUserResponse:
      properties:
        isInvitableUser:
          type: boolean
          description: Returns true if the email address is invitable.
      id: IsInvitableUserResponse
      type: object
      description: Response for IsInvitableUser RPC.
    SearchDirectGroupsResponse:
      description: The response message for MembershipsService.SearchDirectGroups.
      type: object
      properties:
        memberships:
          items:
            $ref: '#/components/schemas/MembershipRelation'
          description: List of direct groups satisfying the query.
          type: array
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results available for listing.
      id: SearchDirectGroupsResponse
    GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata:
      type: object
      properties: {}
      id: GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata
      description: Metadata for ListEndpointApps LRO.
    Group:
      description: >-
        A group within the Cloud Identity Groups API. A `Group` is a collection
        of entities, where each entity is either a user, another group, or a
        service account.
      properties:
        labels:
          description: >-
            Required. One or more label entries that apply to the Group.
            Currently supported labels contain a key with an empty value. Google
            Groups are the default type of group and have a label with a key of
            `cloudidentity.googleapis.com/groups.discussion_forum` and an empty
            value. Existing Google Groups can have an additional label with a
            key of `cloudidentity.googleapis.com/groups.security` and an empty
            value added to them. **This is an immutable change and the security
            label cannot be removed once added.** Dynamic groups have a label
            with a key of `cloudidentity.googleapis.com/groups.dynamic`.
            Identity-mapped groups for Cloud Search have a label with a key of
            `system/groups/external` and an empty value.
          type: object
          additionalProperties:
            type: string
        groupKey:
          $ref: '#/components/schemas/EntityKey'
          description: Required. The `EntityKey` of the `Group`.
        posixGroups:
          items:
            $ref: '#/components/schemas/PosixGroup'
          description: Optional. The POSIX groups associated with the `Group`.
          type: array
        description:
          description: >-
            An extended description to help users determine the purpose of a
            `Group`. Must not be longer than 4,096 characters.
          type: string
        displayName:
          description: The display name of the `Group`.
          type: string
        name:
          description: >-
            Output only. The [resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            `Group`. Shall be of the form `groups/{group_id}`.
          readOnly: true
          type: string
        parent:
          type: string
          description: >-
            Required. Immutable. The resource name of the entity under which
            this `Group` resides in the Cloud Identity resource hierarchy. Must
            be of the form `identitysources/{identity_source}` for external
            [identity-mapped
            groups](https://support.google.com/a/answer/9039510) or
            `customers/{customer_id}` for Google Groups. The `customer_id` must
            begin with "C" (for example, 'C046psxkn'). [Find your customer ID.]
            (https://support.google.com/cloudidentity/answer/10070793)
        updateTime:
          format: google-datetime
          description: Output only. The time when the `Group` was last updated.
          type: string
          readOnly: true
        additionalGroupKeys:
          readOnly: true
          description: Output only. Additional group keys associated with the Group.
          items:
            $ref: '#/components/schemas/EntityKey'
          type: array
        createTime:
          readOnly: true
          type: string
          description: Output only. The time when the `Group` was created.
          format: google-datetime
        dynamicGroupMetadata:
          description: Optional. Dynamic group metadata like queries and status.
          $ref: '#/components/schemas/DynamicGroupMetadata'
      type: object
      id: Group
    RsaPublicKeyInfo:
      id: RsaPublicKeyInfo
      properties:
        keySize:
          description: Key size in bits (size of the modulus).
          format: int32
          type: integer
      type: object
      description: Information of a RSA public key.
    GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata:
      description: Metadata for SignoutDeviceUser LRO.
      type: object
      id: GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata
      properties: {}
    GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata:
      id: GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata
      properties: {}
      type: object
      description: Metadata for UpdateClientState LRO.
    DeviceUser:
      id: DeviceUser
      description: >-
        Represents a user's use of a Device in the Cloud Identity Devices API. A
        DeviceUser is a resource representing a user's use of a Device
      properties:
        passwordState:
          enumDescriptions:
            - Password state not set.
            - Password set in object.
            - Password not set in object.
          enum:
            - PASSWORD_STATE_UNSPECIFIED
            - PASSWORD_SET
            - PASSWORD_NOT_SET
          type: string
          description: Password state of the DeviceUser object
        name:
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            DeviceUser in format:
            `devices/{device_id}/deviceUsers/{device_user_id}`, where
            `device_user_id` uniquely identifies a user's use of a device.
          readOnly: true
          type: string
        firstSyncTime:
          type: string
          readOnly: true
          description: >-
            Output only. Most recent time when user registered with this
            service.
          format: google-datetime
        languageCode:
          type: string
          description: Output only. Default locale used on device, in IETF BCP-47 format.
          readOnly: true
        lastSyncTime:
          format: google-datetime
          type: string
          description: Output only. Last time when user synced with policies.
          readOnly: true
        userAgent:
          readOnly: true
          description: Output only. User agent on the device for this specific user
          type: string
        createTime:
          format: google-datetime
          description: When the user first signed in to the device
          type: string
        userEmail:
          description: Email address of the user registered on the device.
          type: string
        compromisedState:
          enum:
            - COMPROMISED_STATE_UNSPECIFIED
            - COMPROMISED
            - NOT_COMPROMISED
          description: Compromised State of the DeviceUser object
          type: string
          enumDescriptions:
            - >-
              Compromised state of Device User account is unknown or
              unspecified.
            - Device User Account is compromised.
            - Device User Account is not compromised.
        managementState:
          type: string
          enum:
            - MANAGEMENT_STATE_UNSPECIFIED
            - WIPING
            - WIPED
            - APPROVED
            - BLOCKED
            - PENDING_APPROVAL
            - UNENROLLED
          readOnly: true
          enumDescriptions:
            - Default value. This value is unused.
            - This user's data and profile is being removed from the device.
            - This user's data and profile is removed from the device.
            - User is approved to access data on the device.
            - User is blocked from accessing data on the device.
            - User is awaiting approval.
            - >-
              User is unenrolled from Advanced Windows Management, but the
              Windows account is still intact.
          description: Output only. Management state of the user on the device.
      type: object
    AddIdpCredentialOperationMetadata:
      description: >-
        LRO response metadata for
        InboundSamlSsoProfilesService.AddIdpCredential.
      type: object
      id: AddIdpCredentialOperationMetadata
      properties: {}
    ListMembershipsResponse:
      description: The response message for MembershipsService.ListMemberships.
      properties:
        memberships:
          items:
            $ref: '#/components/schemas/Membership'
          type: array
          description: The `Membership`s under the specified `parent`.
        nextPageToken:
          type: string
          description: >-
            A continuation token to retrieve the next page of results, or empty
            if there are no more results available.
      type: object
      id: ListMembershipsResponse
    ListIdpCredentialsResponse:
      id: ListIdpCredentialsResponse
      properties:
        idpCredentials:
          type: array
          description: The IdpCredentials from the specified InboundSamlSsoProfile.
          items:
            $ref: '#/components/schemas/IdpCredential'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
      description: Response of the InboundSamlSsoProfilesService.ListIdpCredentials method.
    UserInvitation:
      type: object
      id: UserInvitation
      description: >-
        The `UserInvitation` resource represents an email that can be sent to an
        unmanaged user account inviting them to join the customer's Google
        Workspace or Cloud Identity account. An unmanaged account shares an
        email address domain with the Google Workspace or Cloud Identity account
        but is not managed by it yet. If the user accepts the `UserInvitation`,
        the user account will become managed.
      properties:
        state:
          description: State of the `UserInvitation`.
          enum:
            - STATE_UNSPECIFIED
            - NOT_YET_SENT
            - INVITED
            - ACCEPTED
            - DECLINED
          type: string
          enumDescriptions:
            - The default value. This value is used if the state is omitted.
            - >-
              The `UserInvitation` has been created and is ready for sending as
              an email.
            - The user has been invited by email.
            - >-
              The user has accepted the invitation and is part of the
              organization.
            - The user declined the invitation.
        name:
          description: >-
            Shall be of the form
            `customers/{customer}/userinvitations/{user_email_address}`.
          type: string
        updateTime:
          description: Time when the `UserInvitation` was last updated.
          format: google-datetime
          type: string
        mailsSentCount:
          type: string
          description: Number of invitation emails sent to the user.
          format: int64
    OrgMembership:
      type: object
      id: OrgMembership
      properties:
        memberUri:
          description: >-
            Uri with which you can read the member. This follows
            https://aip.dev/122 Format for shared drive resource:
            https://drive.googleapis.com/drive/v3/drives/{$memberId} where
            `$memberId` is the `id` from [Drive API (V3) `Drive`
            resource](https://developers.google.com/drive/api/v3/reference/drives#resource).
          type: string
        member:
          description: >-
            Immutable. Org member id as full resource name. Format for shared
            drive resource: //drive.googleapis.com/drives/{$memberId} where
            `$memberId` is the `id` from [Drive API (V3) `Drive`
            resource](https://developers.google.com/drive/api/v3/reference/drives#resource).
          type: string
        type:
          enumDescriptions:
            - Equivalent to no resource type mentioned
            - Shared drive as resource type
          description: Immutable. Entity type for the org member.
          type: string
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - SHARED_DRIVE
        name:
          type: string
          description: >-
            Required. Immutable. The [resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            OrgMembership. Format:
            orgUnits/{$orgUnitId}/memberships/{$membership} The `$orgUnitId` is
            the `orgUnitId` from the [Admin SDK `OrgUnit`
            resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits).
            The `$membership` shall be of the form `{$entityType};{$memberId}`,
            where `$entityType` is the enum value of [OrgMembership.EntityType],
            and `memberId` is the `id` from [Drive API (V3) `Drive`
            resource](https://developers.google.com/drive/api/v3/reference/drives#resource)
            for OrgMembership.EntityType.SHARED_DRIVE.
      description: >-
        A membership in an OrgUnit. An `OrgMembership` defines a relationship
        between an `OrgUnit` and an entity belonging to that `OrgUnit`, referred
        to as a "member".
    CreateInboundSsoAssignmentOperationMetadata:
      id: CreateInboundSsoAssignmentOperationMetadata
      description: >-
        LRO response metadata for
        InboundSsoAssignmentsService.CreateInboundSsoAssignment.
      type: object
      properties: {}
    ListClientStatesResponse:
      id: ListClientStatesResponse
      description: >-
        Response message that is returned in LRO result of ListClientStates
        Operation.
      type: object
      properties:
        clientStates:
          type: array
          description: Client states meeting the list restrictions.
          items:
            $ref: '#/components/schemas/ClientState'
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results. Empty if there are no
            more results.
    ClientState:
      type: object
      id: ClientState
      properties:
        assetTags:
          type: array
          description: The caller can specify asset tags for this resource
          items:
            type: string
        managed:
          description: The management state of the resource as specified by the API client.
          type: string
          enumDescriptions:
            - The management state of the resource is unknown or unspecified.
            - The resource is managed.
            - The resource is not managed.
          enum:
            - MANAGED_STATE_UNSPECIFIED
            - MANAGED
            - UNMANAGED
        healthScore:
          enumDescriptions:
            - Default value
            - The object is in very poor health as defined by the caller.
            - The object is in poor health as defined by the caller.
            - >-
              The object health is neither good nor poor, as defined by the
              caller.
            - The object is in good health as defined by the caller.
            - The object is in very good health as defined by the caller.
          type: string
          description: The Health score of the resource
          enum:
            - HEALTH_SCORE_UNSPECIFIED
            - VERY_POOR
            - POOR
            - NEUTRAL
            - GOOD
            - VERY_GOOD
        customId:
          type: string
          description: >-
            This field may be used to store a unique identifier for the API
            resource within which these CustomAttributes are a field.
        keyValuePairs:
          description: >-
            The map of key-value attributes stored by callers specific to a
            device. The total serialized length of this map may not exceed 10KB.
            No limit is placed on the number of attributes in a map.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CustomAttributeValue'
        name:
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            ClientState in format:
            `devices/{device_id}/deviceUsers/{device_user_id}/clientState/{partner_id}`,
            where partner_id corresponds to the partner storing the data.
          readOnly: true
          type: string
        lastUpdateTime:
          type: string
          description: Output only. The time the client state data was last updated.
          format: google-datetime
          readOnly: true
        scoreReason:
          description: A descriptive cause of the health score.
          type: string
        complianceState:
          type: string
          description: The compliance state of the resource as specified by the API client.
          enumDescriptions:
            - The compliance state of the resource is unknown or unspecified.
            - Device is compliant with third party policies
            - Device is not compliant with third party policies
          enum:
            - COMPLIANCE_STATE_UNSPECIFIED
            - COMPLIANT
            - NON_COMPLIANT
        ownerType:
          readOnly: true
          enum:
            - OWNER_TYPE_UNSPECIFIED
            - OWNER_TYPE_CUSTOMER
            - OWNER_TYPE_PARTNER
          enumDescriptions:
            - Unknown owner type
            - Customer is the owner
            - Partner is the owner
          type: string
          description: Output only. The owner of the ClientState
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the client state data was created.
        etag:
          type: string
          description: >-
            The token that needs to be passed back for concurrency control in
            updates. Token needs to be passed back in UpdateRequest
      description: >-
        Represents the state associated with an API client calling the Devices
        API. Resource representing ClientState and supports updates from API
        users
    LookupGroupNameResponse:
      properties:
        name:
          description: >-
            Output only. The [resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            looked-up `Group`.
          type: string
          readOnly: true
      type: object
      id: LookupGroupNameResponse
      description: The response message for GroupsService.LookupGroupName.
    GroupRelation:
      id: GroupRelation
      type: object
      properties:
        relationType:
          description: The relation between the member and the transitive group.
          type: string
          enum:
            - RELATION_TYPE_UNSPECIFIED
            - DIRECT
            - INDIRECT
            - DIRECT_AND_INDIRECT
          enumDescriptions:
            - The relation type is undefined or undetermined.
            - The two entities have only a direct membership with each other.
            - The two entities have only an indirect membership with each other.
            - >-
              The two entities have both a direct and an indirect membership
              with each other.
        labels:
          description: Labels for Group resource.
          type: object
          additionalProperties:
            type: string
        displayName:
          description: Display name for this group.
          type: string
        group:
          type: string
          description: Resource name for this group.
        groupKey:
          description: >-
            Entity key has an id and a namespace. In case of discussion forums,
            the id will be an email address without a namespace.
          $ref: '#/components/schemas/EntityKey'
        roles:
          type: array
          description: Membership roles of the member for the group.
          items:
            $ref: '#/components/schemas/TransitiveMembershipRole'
      description: Message representing a transitive group of a user or a group.
    InboundSamlSsoProfile:
      type: object
      id: InboundSamlSsoProfile
      properties:
        spConfig:
          description: >-
            SAML service provider configuration for this SAML SSO profile. These
            are the service provider details provided by Google that should be
            configured on the corresponding identity provider.
          $ref: '#/components/schemas/SamlSpConfig'
        idpConfig:
          $ref: '#/components/schemas/SamlIdpConfig'
          description: SAML identity provider configuration.
        displayName:
          type: string
          description: Human-readable name of the SAML SSO profile.
        customer:
          type: string
          description: 'Immutable. The customer. For example: `customers/C0123abc`.'
        name:
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            SAML SSO profile.
          readOnly: true
          type: string
      description: >-
        A [SAML 2.0](https://www.oasis-open.org/standards#samlv2.0) federation
        between a Google enterprise customer and a SAML identity provider.
    SamlSsoInfo:
      type: object
      id: SamlSsoInfo
      properties:
        inboundSamlSsoProfile:
          description: >-
            Required. Name of the `InboundSamlSsoProfile` to use. Must be of the
            form `inboundSamlSsoProfiles/{inbound_saml_sso_profile}`. 
          type: string
      description: Details that are applicable when `sso_mode` == `SAML_SSO`.
    WipeDeviceResponse:
      description: Response message for wiping all data on the device.
      id: WipeDeviceResponse
      properties:
        device:
          $ref: '#/components/schemas/Device'
          description: >-
            Resultant Device object for the action. Note that asset tags will
            not be returned in the device object.
      type: object
    GetMembershipGraphResponse:
      type: object
      properties:
        adjacencyList:
          description: >-
            The membership graph's path information represented as an adjacency
            list.
          items:
            $ref: '#/components/schemas/MembershipAdjacencyList'
          type: array
        groups:
          description: >-
            The resources representing each group in the adjacency list. Each
            group in this list can be correlated to a 'group' of the
            MembershipAdjacencyList using the 'name' of the Group resource.
          items:
            $ref: '#/components/schemas/Group'
          type: array
      id: GetMembershipGraphResponse
      description: The response message for MembershipsService.GetMembershipGraph.
    GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata:
      description: Metadata for UpdateDevice LRO.
      properties: {}
      type: object
      id: GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata
    ListUserInvitationsResponse:
      type: object
      id: ListUserInvitationsResponse
      properties:
        userInvitations:
          description: The list of UserInvitation resources.
          items:
            $ref: '#/components/schemas/UserInvitation'
          type: array
        nextPageToken:
          description: >-
            The token for the next page. If not empty, indicates that there may
            be more `UserInvitation` resources that match the listing request;
            this value can be used in a subsequent ListUserInvitationsRequest to
            get continued results with the current list call.
          type: string
      description: Response message for UserInvitation listing request.
    TransitiveMembershipRole:
      description: Message representing the role of a TransitiveMembership.
      type: object
      properties:
        role:
          type: string
          description: >-
            TransitiveMembershipRole in string format. Currently supported
            TransitiveMembershipRoles: `"MEMBER"`, `"OWNER"`, and `"MANAGER"`.
      id: TransitiveMembershipRole
    BlockDeviceUserRequest:
      properties:
        customer:
          type: string
          description: >-
            Optional. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            customer. If you're using this API for your own organization, use
            `customers/my_customer` If you're using this API to manage another
            organization, use `customers/{customer_id}`, where customer_id is
            the customer to whom the device belongs.
      type: object
      id: BlockDeviceUserRequest
      description: Request message for blocking account on device.
    ExpiryDetail:
      id: ExpiryDetail
      description: The `MembershipRole` expiry details.
      properties:
        expireTime:
          type: string
          format: google-datetime
          description: The time at which the `MembershipRole` will expire.
      type: object
    DynamicGroupQuery:
      properties:
        query:
          description: >-
            Query that determines the memberships of the dynamic group.
            Examples: All users with at least one `organizations.department` of
            engineering. `user.organizations.exists(org,
            org.department=='engineering')` All users with at least one location
            that has `area` of `foo` and `building_id` of `bar`.
            `user.locations.exists(loc, loc.area=='foo' &&
            loc.building_id=='bar')` All users with any variation of the name
            John Doe (case-insensitive queries add `equalsIgnoreCase()` to the
            value being queried). `user.name.value.equalsIgnoreCase('jOhn DoE')`
          type: string
        resourceType:
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - USER
          type: string
          enumDescriptions:
            - Default value (not valid)
            - For queries on User
      id: DynamicGroupQuery
      type: object
      description: Defines a query on a resource.
    RestrictionEvaluations:
      description: Evaluations of restrictions applied to parent group on this membership.
      properties:
        memberRestrictionEvaluation:
          $ref: '#/components/schemas/MembershipRoleRestrictionEvaluation'
          description: >-
            Evaluation of the member restriction applied to this membership.
            Empty if the user lacks permission to view the restriction
            evaluation.
      type: object
      id: RestrictionEvaluations
    CancelWipeDeviceUserRequest:
      id: CancelWipeDeviceUserRequest
      type: object
      description: Request message for cancelling an unfinished user account wipe.
      properties:
        customer:
          type: string
          description: >-
            Optional. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            customer. If you're using this API for your own organization, use
            `customers/my_customer` If you're using this API to manage another
            organization, use `customers/{customer_id}`, where customer_id is
            the customer to whom the device belongs.
    Operation:
      properties:
        response:
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
        metadata:
          type: object
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      id: Operation
    GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata:
      properties: {}
      id: GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata
      description: Metadata for DeleteDeviceUser LRO.
      type: object
    GoogleAppsCloudidentityDevicesV1AndroidAttributes:
      type: object
      id: GoogleAppsCloudidentityDevicesV1AndroidAttributes
      description: Resource representing the Android specific attributes of a Device.
      properties:
        hasPotentiallyHarmfulApps:
          description: Whether any potentially harmful apps were detected on the device.
          type: boolean
        verifiedBoot:
          type: boolean
          description: Whether Android verified boot status is GREEN.
        ownerProfileAccount:
          type: boolean
          description: >-
            Whether this account is on an owner/primary profile. For phones,
            only true for owner profiles. Android 4+ devices can have secondary
            or restricted user profiles.
        supportsWorkProfile:
          type: boolean
          description: >-
            Whether device supports Android work profiles. If false, this
            service will not block access to corp data even if an administrator
            turns on the "Enforce Work Profile" policy.
        enabledUnknownSources:
          description: >-
            Whether applications from unknown sources can be installed on
            device.
          type: boolean
        ownershipPrivilege:
          enum:
            - OWNERSHIP_PRIVILEGE_UNSPECIFIED
            - DEVICE_ADMINISTRATOR
            - PROFILE_OWNER
            - DEVICE_OWNER
          enumDescriptions:
            - Ownership privilege is not set.
            - Active device administrator privileges on the device.
            - >-
              Profile Owner privileges. The account is in a managed corporate
              profile.
            - Device Owner privileges on the device.
          type: string
          description: Ownership privileges on device.
        ctsProfileMatch:
          type: boolean
          description: Whether the device passes Android CTS compliance.
        verifyAppsEnabled:
          description: Whether Google Play Protect Verify Apps is enabled.
          type: boolean
    UpdateInboundSamlSsoProfileOperationMetadata:
      properties: {}
      description: >-
        LRO response metadata for
        InboundSamlSsoProfilesService.UpdateInboundSamlSsoProfile.
      type: object
      id: UpdateInboundSamlSsoProfileOperationMetadata
    MembershipRole:
      description: >-
        A membership role within the Cloud Identity Groups API. A
        `MembershipRole` defines the privileges granted to a `Membership`.
      id: MembershipRole
      properties:
        name:
          description: >-
            The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`,
            `MEMBER`.
          type: string
        restrictionEvaluations:
          $ref: '#/components/schemas/RestrictionEvaluations'
          description: >-
            Evaluations of restrictions applied to parent group on this
            membership.
        expiryDetail:
          description: >-
            The expiry details of the `MembershipRole`. Expiry details are only
            supported for `MEMBER` `MembershipRoles`. May be set if `name` is
            `MEMBER`. Must not be set if `name` is any other value.
          $ref: '#/components/schemas/ExpiryDetail'
      type: object
    ModifyMembershipRolesResponse:
      description: The response message for MembershipsService.ModifyMembershipRoles.
      id: ModifyMembershipRolesResponse
      type: object
      properties:
        membership:
          $ref: '#/components/schemas/Membership'
          description: The `Membership` resource after modifying its `MembershipRole`s.
    GoogleAppsCloudidentityDevicesV1ClientState:
      type: object
      id: GoogleAppsCloudidentityDevicesV1ClientState
      properties:
        lastUpdateTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The time the client state data was last updated.
        customId:
          description: >-
            This field may be used to store a unique identifier for the API
            resource within which these CustomAttributes are a field.
          type: string
        scoreReason:
          description: A descriptive cause of the health score.
          type: string
        name:
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            ClientState in format:
            `devices/{device}/deviceUsers/{device_user}/clientState/{partner}`,
            where partner corresponds to the partner storing the data. For
            partners belonging to the "BeyondCorp Alliance", this is the partner
            ID specified to you by Google. For all other callers, this is a
            string of the form: `{customer}-suffix`, where `customer` is your
            customer ID. The *suffix* is any string the caller specifies. This
            string will be displayed verbatim in the administration console.
            This suffix is used in setting up Custom Access Levels in
            Context-Aware Access. Your organization's customer ID can be
            obtained from the URL: `GET
            https://www.googleapis.com/admin/directory/v1/customers/my_customer`
            The `id` field in the response contains the customer ID starting
            with the letter 'C'. The customer ID to be used in this API is the
            string after the letter 'C' (not including 'C')
          type: string
          readOnly: true
        healthScore:
          description: >-
            The Health score of the resource. The Health score is the callers
            specification of the condition of the device from a usability point
            of view. For example, a third-party device management provider may
            specify a health score based on its compliance with organizational
            policies.
          enum:
            - HEALTH_SCORE_UNSPECIFIED
            - VERY_POOR
            - POOR
            - NEUTRAL
            - GOOD
            - VERY_GOOD
          enumDescriptions:
            - Default value
            - The object is in very poor health as defined by the caller.
            - The object is in poor health as defined by the caller.
            - >-
              The object health is neither good nor poor, as defined by the
              caller.
            - The object is in good health as defined by the caller.
            - The object is in very good health as defined by the caller.
          type: string
        ownerType:
          enumDescriptions:
            - Unknown owner type
            - Customer is the owner
            - Partner is the owner
          type: string
          readOnly: true
          description: Output only. The owner of the ClientState
          enum:
            - OWNER_TYPE_UNSPECIFIED
            - OWNER_TYPE_CUSTOMER
            - OWNER_TYPE_PARTNER
        etag:
          description: >-
            The token that needs to be passed back for concurrency control in
            updates. Token needs to be passed back in UpdateRequest
          type: string
        managed:
          type: string
          description: The management state of the resource as specified by the API client.
          enumDescriptions:
            - The management state of the resource is unknown or unspecified.
            - The resource is managed.
            - The resource is not managed.
          enum:
            - MANAGED_STATE_UNSPECIFIED
            - MANAGED
            - UNMANAGED
        complianceState:
          enum:
            - COMPLIANCE_STATE_UNSPECIFIED
            - COMPLIANT
            - NON_COMPLIANT
          description: The compliance state of the resource as specified by the API client.
          enumDescriptions:
            - The compliance state of the resource is unknown or unspecified.
            - Device is compliant with third party policies
            - Device is not compliant with third party policies
          type: string
        keyValuePairs:
          type: object
          description: >-
            The map of key-value attributes stored by callers specific to a
            device. The total serialized length of this map may not exceed 10KB.
            No limit is placed on the number of attributes in a map.
          additionalProperties:
            $ref: >-
              #/components/schemas/GoogleAppsCloudidentityDevicesV1CustomAttributeValue
        createTime:
          readOnly: true
          description: Output only. The time the client state data was created.
          type: string
          format: google-datetime
        assetTags:
          items:
            type: string
          description: The caller can specify asset tags for this resource
          type: array
      description: >-
        Represents the state associated with an API client calling the Devices
        API. Resource representing ClientState and supports updates from API
        users
    CancelUserInvitationRequest:
      id: CancelUserInvitationRequest
      type: object
      properties: {}
      description: Request to cancel sent invitation for target email in UserInvitation.
    ListDevicesResponse:
      id: ListDevicesResponse
      properties:
        devices:
          items:
            $ref: '#/components/schemas/Device'
          type: array
          description: Devices meeting the list restrictions.
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results. Empty if there are no
            more results.
      type: object
      description: Response message that is returned from the ListDevices method.
    Status:
      type: object
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: Status
      properties:
        details:
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
    SecuritySettings:
      properties:
        name:
          type: string
          description: >-
            Output only. The resource name of the security settings. Shall be of
            the form `groups/{group_id}/securitySettings`.
          readOnly: true
        memberRestriction:
          description: The Member Restriction value
          $ref: '#/components/schemas/MemberRestriction'
      description: The definiion of security settings.
      id: SecuritySettings
      type: object
    DeleteInboundSsoAssignmentOperationMetadata:
      properties: {}
      description: >-
        LRO response metadata for
        InboundSsoAssignmentsService.DeleteInboundSsoAssignment.
      id: DeleteInboundSsoAssignmentOperationMetadata
      type: object
    InboundSsoAssignment:
      type: object
      description: Targets with "set" SSO assignments and their respective assignments.
      properties:
        ssoMode:
          enumDescriptions:
            - Not allowed.
            - Disable SSO for the targeted users.
            - >-
              Use an external SAML Identity Provider for SSO for the targeted
              users.
            - >-
              Use the domain-wide SAML Identity Provider for the targeted users
              if one is configured; otherwise, this is equivalent to `SSO_OFF`.
              Note that this will also be equivalent to `SSO_OFF` if/when
              support for domain-wide SAML is removed. Google may disallow this
              mode at that point and existing assignments with this mode may be
              automatically changed to `SSO_OFF`.
          description: Inbound SSO behavior.
          type: string
          enum:
            - SSO_MODE_UNSPECIFIED
            - SSO_OFF
            - SAML_SSO
            - DOMAIN_WIDE_SAML_IF_ENABLED
        name:
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            Inbound SSO Assignment.
          readOnly: true
          type: string
        customer:
          type: string
          description: 'Immutable. The customer. For example: `customers/C0123abc`.'
        targetOrgUnit:
          description: Immutable. Must be of the form `orgUnits/{org_unit}`.
          type: string
        targetGroup:
          description: Immutable. Must be of the form `groups/{group}`.
          type: string
        samlSsoInfo:
          $ref: '#/components/schemas/SamlSsoInfo'
          description: >-
            SAML SSO details. Must be set if and only if `sso_mode` is set to
            `SAML_SSO`.
        signInBehavior:
          $ref: '#/components/schemas/SignInBehavior'
          description: >-
            Assertions about users assigned to an IdP will always be accepted
            from that IdP. This controls whether/when Google should redirect a
            user to the IdP. Unset (defaults) is the recommended configuration.
        rank:
          format: int32
          description: >-
            Must be zero (which is the default value so it can be omitted) for
            assignments with `target_org_unit` set and must be
            greater-than-or-equal-to one for assignments with `target_group`
            set.
          type: integer
      id: InboundSsoAssignment
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse:
      properties:
        device:
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
          description: >-
            Resultant Device object for the action. Note that asset tags will
            not be returned in the device object.
      type: object
      description: Response message for cancelling an unfinished device wipe.
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse
    LookupSelfDeviceUsersResponse:
      type: object
      description: >-
        Response containing resource names of the DeviceUsers associated with
        the caller's credentials.
      id: LookupSelfDeviceUsersResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results. Empty if there are no
            more results.
        names:
          items:
            type: string
          description: >-
            [Resource
            names](https://cloud.google.com/apis/design/resource_names) of the
            DeviceUsers in the format:
            `devices/{device_id}/deviceUsers/{user_resource_id}`, where
            device_id is the unique ID assigned to a Device and user_resource_id
            is the unique user ID
          type: array
        customer:
          type: string
          description: >-
            The customer Id that may be passed back to other Devices API methods
            such as List, Get, etc.
    UpdateMembershipRolesParams:
      id: UpdateMembershipRolesParams
      properties:
        membershipRole:
          description: >-
            The `MembershipRole`s to be updated. Only `MEMBER` `MembershipRoles`
            can currently be updated. May only contain a `MembershipRole` with
            `name` `MEMBER`.
          $ref: '#/components/schemas/MembershipRole'
        fieldMask:
          format: google-fieldmask
          description: >-
            The fully-qualified names of fields to update. May only contain the
            field `expiry_detail.expire_time`.
          type: string
      type: object
      description: The details of an update to a `MembershipRole`.
    SearchTransitiveMembershipsResponse:
      properties:
        memberships:
          items:
            $ref: '#/components/schemas/MemberRelation'
          description: List of transitive memberships satisfying the query.
          type: array
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results.
      description: The response message for MembershipsService.SearchTransitiveMemberships.
      type: object
      id: SearchTransitiveMembershipsResponse
    CreateDeviceRequest:
      description: Request message for creating a Company Owned device.
      id: CreateDeviceRequest
      properties:
        device:
          $ref: '#/components/schemas/Device'
          description: >-
            Required. The device to be created. The name field within this
            device is ignored in the create method. A new name is created by the
            method, and returned within the response. Only the fields
            `device_type`, `serial_number` and `asset_tag` (if present) are used
            to create the device. All other fields are ignored. The
            `device_type` and `serial_number` fields are required.
        customer:
          type: string
          description: >-
            Optional. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            customer. If you're using this API for your own organization, use
            `customers/my_customer` If you're using this API to manage another
            organization, use `customers/{customer_id}`, where customer_id is
            the customer to whom the device belongs.
      type: object
    MoveOrgMembershipRequest:
      id: MoveOrgMembershipRequest
      type: object
      description: The request message for OrgMembershipsService.MoveOrgMembership.
      properties:
        customer:
          description: >-
            Required. Immutable. Customer on whose membership change is made.
            All authorization will happen on the role assignments of this
            customer. Format: customers/{$customerId} where `$customerId` is the
            `id` from the [Admin SDK `Customer`
            resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers).
            You may also use `customers/my_customer` to specify your own
            organization.
          type: string
        destinationOrgUnit:
          description: >-
            Required. Immutable. OrgUnit where the membership will be moved to.
            Format: orgUnits/{$orgUnitId} where `$orgUnitId` is the `orgUnitId`
            from the [Admin SDK `OrgUnit`
            resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits).
          type: string
    GoogleAppsCloudidentityDevicesV1Device:
      id: GoogleAppsCloudidentityDevicesV1Device
      properties:
        imei:
          readOnly: true
          description: Output only. IMEI number of device if GSM device; empty otherwise.
          type: string
        kernelVersion:
          description: Output only. Kernel version of the device.
          readOnly: true
          type: string
        lastSyncTime:
          description: Most recent time when device synced with this service.
          type: string
          format: google-datetime
        securityPatchTime:
          format: google-datetime
          readOnly: true
          description: Output only. OS security patch update time on device.
          type: string
        serialNumber:
          type: string
          description: 'Serial Number of device. Example: HT82V1A01076.'
        wifiMacAddresses:
          items:
            type: string
          description: WiFi MAC addresses of device.
          type: array
        compromisedState:
          enumDescriptions:
            - Default value.
            - >-
              The device is compromised (currently, this means Android device is
              rooted).
            - >-
              The device is safe (currently, this means Android device is
              unrooted).
          type: string
          enum:
            - COMPROMISED_STATE_UNSPECIFIED
            - COMPROMISED
            - UNCOMPROMISED
          description: Output only. Represents whether the Device is compromised.
          readOnly: true
        name:
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            Device in format: `devices/{device}`, where device is the unique id
            assigned to the Device.
          type: string
          readOnly: true
        assetTag:
          description: Asset tag of the device.
          type: string
        deviceType:
          enumDescriptions:
            - Unknown device type
            - Device is an Android device
            - Device is an iOS device
            - Device is a Google Sync device.
            - Device is a Windows device.
            - Device is a MacOS device.
            - Device is a Linux device.
            - Device is a ChromeOS device.
          description: Output only. Type of device.
          readOnly: true
          type: string
          enum:
            - DEVICE_TYPE_UNSPECIFIED
            - ANDROID
            - IOS
            - GOOGLE_SYNC
            - WINDOWS
            - MAC_OS
            - LINUX
            - CHROME_OS
        osVersion:
          type: string
          description: 'Output only. OS version of the device. Example: Android 8.1.0.'
          readOnly: true
        releaseVersion:
          type: string
          description: 'Output only. OS release version. Example: 6.0.'
          readOnly: true
        deviceId:
          description: Unique identifier for the device.
          type: string
        ownerType:
          readOnly: true
          description: >-
            Output only. Whether the device is owned by the company or an
            individual
          enumDescriptions:
            - Default value. The value is unused.
            - Company owns the device.
            - Bring Your Own Device (i.e. individual owns the device)
          enum:
            - DEVICE_OWNERSHIP_UNSPECIFIED
            - COMPANY
            - BYOD
          type: string
        bootloaderVersion:
          readOnly: true
          type: string
          description: 'Output only. Device bootloader version. Example: 0.6.7.'
        managementState:
          readOnly: true
          enumDescriptions:
            - Default value. This value is unused.
            - Device is approved.
            - Device is blocked.
            - Device is pending approval.
            - >-
              The device is not provisioned. Device will start from this state
              until some action is taken (i.e. a user starts using the device).
            - Data and settings on the device are being removed.
            - All data and settings on the device are removed.
          description: Output only. Management state of the device
          enum:
            - MANAGEMENT_STATE_UNSPECIFIED
            - APPROVED
            - BLOCKED
            - PENDING
            - UNPROVISIONED
            - WIPING
            - WIPED
          type: string
        networkOperator:
          description: Output only. Mobile or network operator of device, if available.
          type: string
          readOnly: true
        otherAccounts:
          items:
            type: string
          type: array
          description: >-
            Output only. Domain name for Google accounts on device. Type for
            other accounts on device. On Android, will only be populated if
            |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not
            include the account signed in to the device policy app if that
            account's domain has only one account. Examples: "com.example",
            "xyz.com".
          readOnly: true
        model:
          type: string
          readOnly: true
          description: 'Output only. Model name of device. Example: Pixel 3.'
        meid:
          description: Output only. MEID number of device if CDMA device; empty otherwise.
          type: string
          readOnly: true
        enabledUsbDebugging:
          readOnly: true
          type: boolean
          description: Output only. Whether USB debugging is enabled on device.
        createTime:
          type: string
          format: google-datetime
          description: >-
            Output only. When the Company-Owned device was imported. This field
            is empty for BYOD devices.
          readOnly: true
        brand:
          description: 'Output only. Device brand. Example: Samsung.'
          type: string
          readOnly: true
        encryptionState:
          enumDescriptions:
            - Encryption Status is not set.
            - Device doesn't support encryption.
            - Device is encrypted.
            - Device is not encrypted.
          enum:
            - ENCRYPTION_STATE_UNSPECIFIED
            - UNSUPPORTED_BY_DEVICE
            - ENCRYPTED
            - NOT_ENCRYPTED
          type: string
          readOnly: true
          description: Output only. Device encryption state.
        enabledDeveloperOptions:
          type: boolean
          readOnly: true
          description: Output only. Whether developer options is enabled on device.
        manufacturer:
          type: string
          description: 'Output only. Device manufacturer. Example: Motorola.'
          readOnly: true
        buildNumber:
          readOnly: true
          type: string
          description: Output only. Build number of the device.
        androidSpecificAttributes:
          description: Output only. Attributes specific to Android devices.
          $ref: >-
            #/components/schemas/GoogleAppsCloudidentityDevicesV1AndroidAttributes
          readOnly: true
        basebandVersion:
          readOnly: true
          type: string
          description: Output only. Baseband version of the device.
      type: object
      description: ' A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.'
    DsaPublicKeyInfo:
      type: object
      id: DsaPublicKeyInfo
      properties:
        keySize:
          format: int32
          type: integer
          description: Key size in bits (size of parameter P).
      description: Information of a DSA public key.
    SamlSpConfig:
      properties:
        entityId:
          type: string
          readOnly: true
          description: Output only. The SAML **Entity ID** for this service provider.
        assertionConsumerServiceUri:
          type: string
          description: >-
            Output only. The SAML **Assertion Consumer Service (ACS) URL** to be
            used for the IDP-initiated login. Assumed to accept response
            messages via the `HTTP-POST` binding.
          readOnly: true
      id: SamlSpConfig
      description: SAML SP (service provider) configuration.
      type: object
    GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata:
      type: object
      properties: {}
      id: GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata
      description: Metadata for DeleteDevice LRO.
    CheckTransitiveMembershipResponse:
      type: object
      description: The response message for MembershipsService.CheckTransitiveMembership.
      id: CheckTransitiveMembershipResponse
      properties:
        hasMembership:
          description: >-
            Response does not include the possible roles of a member since the
            behavior of this rpc is not all-or-nothing unlike the other rpcs.
            So, it may not be possible to list all the roles definitively, due
            to possible lack of authorization in some of the paths.
          type: boolean
    DeleteIdpCredentialOperationMetadata:
      description: >-
        LRO response metadata for
        InboundSamlSsoProfilesService.DeleteIdpCredential.
      id: DeleteIdpCredentialOperationMetadata
      type: object
      properties: {}
    MembershipRoleRestrictionEvaluation:
      type: object
      properties:
        state:
          description: Output only. The current state of the restriction
          enum:
            - STATE_UNSPECIFIED
            - COMPLIANT
            - FORWARD_COMPLIANT
            - NON_COMPLIANT
            - EVALUATING
          readOnly: true
          type: string
          enumDescriptions:
            - Default. Should not be used.
            - The member adheres to the parent group's restriction.
            - >-
              The group-group membership might be currently violating some
              parent group's restriction but in future, it will never allow any
              new member in the child group which can violate parent group's
              restriction.
            - The member violates the parent group's restriction.
            - The state of the membership is under evaluation.
      description: The evaluated state of this restriction.
      id: MembershipRoleRestrictionEvaluation
    ModifyMembershipRolesRequest:
      type: object
      properties:
        addRoles:
          type: array
          items:
            $ref: '#/components/schemas/MembershipRole'
          description: >-
            The `MembershipRole`s to be added. Adding or removing roles in the
            same request as updating roles is not supported. Must not be set if
            `update_roles_params` is set.
        removeRoles:
          type: array
          description: >-
            The `name`s of the `MembershipRole`s to be removed. Adding or
            removing roles in the same request as updating roles is not
            supported. It is not possible to remove the `MEMBER`
            `MembershipRole`. If you wish to delete a `Membership`, call
            MembershipsService.DeleteMembership instead. Must not contain
            `MEMBER`. Must not be set if `update_roles_params` is set.
          items:
            type: string
        updateRolesParams:
          items:
            $ref: '#/components/schemas/UpdateMembershipRolesParams'
          description: >-
            The `MembershipRole`s to be updated. Updating roles in the same
            request as adding or removing roles is not supported. Must not be
            set if either `add_roles` or `remove_roles` is set.
          type: array
      id: ModifyMembershipRolesRequest
      description: The request message for MembershipsService.ModifyMembershipRoles.
    SearchTransitiveGroupsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results available for listing.
        memberships:
          description: List of transitive groups satisfying the query.
          type: array
          items:
            $ref: '#/components/schemas/GroupRelation'
      type: object
      description: The response message for MembershipsService.SearchTransitiveGroups.
      id: SearchTransitiveGroupsResponse
    GoogleAppsCloudidentityDevicesV1WipeDeviceResponse:
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceResponse
      description: Response message for wiping all data on the device.
      properties:
        device:
          description: >-
            Resultant Device object for the action. Note that asset tags will
            not be returned in the device object.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
      type: object
    CancelWipeDeviceUserResponse:
      type: object
      properties:
        deviceUser:
          description: Resultant DeviceUser object for the action.
          $ref: '#/components/schemas/DeviceUser'
      description: Response message for cancelling an unfinished user account wipe.
      id: CancelWipeDeviceUserResponse
    ApproveDeviceUserResponse:
      description: Response message for approving the device to access user data.
      type: object
      id: ApproveDeviceUserResponse
      properties:
        deviceUser:
          $ref: '#/components/schemas/DeviceUser'
          description: Resultant DeviceUser object for the action.
    CancelWipeDeviceRequest:
      properties:
        customer:
          type: string
          description: >-
            Optional. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            customer. If you're using this API for your own organization, use
            `customers/my_customer` If you're using this API to manage another
            organization, use `customers/{customer_id}`, where customer_id is
            the customer to whom the device belongs.
      description: Request message for cancelling an unfinished device wipe.
      type: object
      id: CancelWipeDeviceRequest
    MemberRelation:
      description: Message representing a transitive membership of a group.
      id: MemberRelation
      type: object
      properties:
        preferredMemberKey:
          type: array
          items:
            $ref: '#/components/schemas/EntityKey'
          description: >-
            Entity key has an id and a namespace. In case of discussion forums,
            the id will be an email address without a namespace.
        roles:
          items:
            $ref: '#/components/schemas/TransitiveMembershipRole'
          type: array
          description: The membership role details (i.e name of role and expiry time).
        relationType:
          enumDescriptions:
            - The relation type is undefined or undetermined.
            - The two entities have only a direct membership with each other.
            - The two entities have only an indirect membership with each other.
            - >-
              The two entities have both a direct and an indirect membership
              with each other.
          description: The relation between the group and the transitive membership.
          enum:
            - RELATION_TYPE_UNSPECIFIED
            - DIRECT
            - INDIRECT
            - DIRECT_AND_INDIRECT
          type: string
        member:
          description: Resource name for this member.
          type: string
    WipeDeviceRequest:
      type: object
      id: WipeDeviceRequest
      description: Request message for wiping all data on the device.
      properties:
        removeResetLock:
          type: boolean
          description: >-
            Optional. Specifies if a user is able to factory reset a device
            after a Device Wipe. On iOS, this is called "Activation Lock", while
            on Android, this is known as "Factory Reset Protection". If true,
            this protection will be removed from the device, so that a user can
            successfully factory reset. If false, the setting is untouched on
            the device.
        customer:
          description: >-
            Optional. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            customer. If you're using this API for your own organization, use
            `customers/my_customer` If you're using this API to manage another
            organization, use `customers/{customer_id}`, where customer_id is
            the customer to whom the device belongs.
          type: string
    CustomAttributeValue:
      description: Additional custom attribute values may be one of these types
      type: object
      id: CustomAttributeValue
      properties:
        stringValue:
          description: Represents a string value.
          type: string
        boolValue:
          type: boolean
          description: Represents a boolean value.
        numberValue:
          description: Represents a double value.
          type: number
          format: double
    GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata:
      description: Metadata for ApproveDeviceUser LRO.
      type: object
      id: GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata
      properties: {}
    SignInBehavior:
      description: Controls sign-in behavior.
      type: object
      properties:
        redirectCondition:
          enumDescriptions:
            - Default and means "always"
            - >-
              Sign-in flows where the user is prompted for their identity will
              not redirect to the IdP (so the user will most likely be prompted
              by Google for a password), but special flows like IdP-initiated
              SAML and sign-in following automatic redirection to the IdP by
              domain-specific service URLs will accept the IdP's assertion of
              the user's identity.
          enum:
            - REDIRECT_CONDITION_UNSPECIFIED
            - NEVER
          type: string
          description: When to redirect sign-ins to the IdP.
      id: SignInBehavior
    GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata:
      properties: {}
      type: object
      description: Metadata for BlockDeviceUser LRO.
      id: GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata
    CertificateTemplate:
      type: object
      id: CertificateTemplate
      properties:
        majorVersion:
          format: int32
          type: integer
          description: 'The Major version of the template. Example: 100.'
        minorVersion:
          format: int32
          type: integer
          description: 'The minor version of the template. Example: 12.'
        id:
          type: string
          description: >-
            The template id of the template. Example:
            "1.3.6.1.4.1.311.21.8.15608621.11768144.5720724.16068415.6889630.81.2472537.7784047".
      description: CertificateTemplate (v3 Extension in X.509).
    ListInboundSsoAssignmentsResponse:
      type: object
      properties:
        inboundSsoAssignments:
          type: array
          items:
            $ref: '#/components/schemas/InboundSsoAssignment'
          description: The assignments.
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
      description: >-
        Response of the InboundSsoAssignmentsService.ListInboundSsoAssignments
        method.
      id: ListInboundSsoAssignmentsResponse
    SendUserInvitationRequest:
      id: SendUserInvitationRequest
      properties: {}
      type: object
      description: >-
        A request to send email for inviting target user corresponding to the
        UserInvitation.
    GoogleAppsCloudidentityDevicesV1CustomAttributeValue:
      id: GoogleAppsCloudidentityDevicesV1CustomAttributeValue
      description: Additional custom attribute values may be one of these types
      properties:
        boolValue:
          description: Represents a boolean value.
          type: boolean
        numberValue:
          type: number
          description: Represents a double value.
          format: double
        stringValue:
          description: Represents a string value.
          type: string
      type: object
    MemberRestriction:
      id: MemberRestriction
      description: The definition of MemberRestriction
      properties:
        query:
          description: >-
            Member Restriction as defined by CEL expression. Supported
            restrictions are: `member.customer_id` and `member.type`. Valid
            values for `member.type` are `1`, `2` and `3`. They correspond to
            USER, SERVICE_ACCOUNT, and GROUP respectively. The value for
            `member.customer_id` only supports `groupCustomerId()` currently
            which means the customer id of the group will be used for
            restriction. Supported operators are `&&`, `||` and `==`,
            corresponding to AND, OR, and EQUAL. Examples: Allow only service
            accounts of given customer to be members. `member.type == 2 &&
            member.customer_id == groupCustomerId()` Allow only users or groups
            to be members. `member.type == 1 || member.type == 3`
          type: string
        evaluation:
          description: The evaluated state of this restriction on a group.
          $ref: '#/components/schemas/RestrictionEvaluation'
      type: object
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata:
      description: Metadata for CancelWipeDeviceUser LRO.
      type: object
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata
      properties: {}
    ListInboundSamlSsoProfilesResponse:
      type: object
      description: >-
        Response of the InboundSamlSsoProfilesService.ListInboundSamlSsoProfiles
        method.
      id: ListInboundSamlSsoProfilesResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        inboundSamlSsoProfiles:
          type: array
          description: List of InboundSamlSsoProfiles.
          items:
            $ref: '#/components/schemas/InboundSamlSsoProfile'
    WipeDeviceUserResponse:
      description: Response message for wiping the user's account from the device.
      type: object
      properties:
        deviceUser:
          $ref: '#/components/schemas/DeviceUser'
          description: Resultant DeviceUser object for the action.
      id: WipeDeviceUserResponse
    GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse:
      description: Response message for wiping the user's account from the device.
      properties:
        deviceUser:
          description: Resultant DeviceUser object for the action.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
      type: object
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse
    PosixGroup:
      type: object
      id: PosixGroup
      properties:
        name:
          type: string
          description: Name of the POSIX group.
        systemId:
          description: >-
            System identifier for which group name and gid apply to. If not
            specified it will default to empty value.
          type: string
        gid:
          type: string
          description: GID of the POSIX group.
          format: uint64
      description: POSIX Group definition to represent a group in a POSIX compliant system.
    Device:
      properties:
        buildNumber:
          description: Output only. Build number of the device.
          readOnly: true
          type: string
        networkOperator:
          description: Output only. Mobile or network operator of device, if available.
          readOnly: true
          type: string
        deviceType:
          description: Output only. Type of device.
          enumDescriptions:
            - Unknown device type
            - Device is an Android device
            - Device is an iOS device
            - Device is a Google Sync device.
            - Device is a Windows device.
            - Device is a MacOS device.
            - Device is a Linux device.
            - Device is a ChromeOS device.
          enum:
            - DEVICE_TYPE_UNSPECIFIED
            - ANDROID
            - IOS
            - GOOGLE_SYNC
            - WINDOWS
            - MAC_OS
            - LINUX
            - CHROME_OS
          type: string
          readOnly: true
        enabledUsbDebugging:
          description: Output only. Whether USB debugging is enabled on device.
          readOnly: true
          type: boolean
        otherAccounts:
          items:
            type: string
          type: array
          description: >-
            Output only. Domain name for Google accounts on device. Type for
            other accounts on device. On Android, will only be populated if
            |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not
            include the account signed in to the device policy app if that
            account's domain has only one account. Examples: "com.example",
            "xyz.com".
          readOnly: true
        ownerType:
          readOnly: true
          enum:
            - DEVICE_OWNERSHIP_UNSPECIFIED
            - COMPANY
            - BYOD
          enumDescriptions:
            - Default value. The value is unused.
            - Company owns the device.
            - Bring Your Own Device (i.e. individual owns the device)
          description: >-
            Output only. Whether the device is owned by the company or an
            individual
          type: string
        androidSpecificAttributes:
          description: Output only. Attributes specific to Android devices.
          readOnly: true
          $ref: '#/components/schemas/AndroidAttributes'
        deviceId:
          type: string
          description: Unique identifier for the device.
        endpointVerificationSpecificAttributes:
          $ref: '#/components/schemas/EndpointVerificationSpecificAttributes'
          description: Output only. Attributes specific to Endpoint Verification devices.
          readOnly: true
        meid:
          readOnly: true
          description: Output only. MEID number of device if CDMA device; empty otherwise.
          type: string
        wifiMacAddresses:
          items:
            type: string
          description: WiFi MAC addresses of device.
          type: array
        assetTag:
          type: string
          description: Asset tag of the device.
        osVersion:
          readOnly: true
          description: 'Output only. OS version of the device. Example: Android 8.1.0.'
          type: string
        name:
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            Device in format: `devices/{device_id}`, where device_id is the
            unique id assigned to the Device.
          type: string
          readOnly: true
        model:
          description: 'Output only. Model name of device. Example: Pixel 3.'
          type: string
          readOnly: true
        encryptionState:
          type: string
          readOnly: true
          description: Output only. Device encryption state.
          enumDescriptions:
            - Encryption Status is not set.
            - Device doesn't support encryption.
            - Device is encrypted.
            - Device is not encrypted.
          enum:
            - ENCRYPTION_STATE_UNSPECIFIED
            - UNSUPPORTED_BY_DEVICE
            - ENCRYPTED
            - NOT_ENCRYPTED
        createTime:
          readOnly: true
          description: >-
            Output only. When the Company-Owned device was imported. This field
            is empty for BYOD devices.
          type: string
          format: google-datetime
        releaseVersion:
          type: string
          readOnly: true
          description: 'Output only. OS release version. Example: 6.0.'
        manufacturer:
          readOnly: true
          description: 'Output only. Device manufacturer. Example: Motorola.'
          type: string
        compromisedState:
          description: Output only. Represents whether the Device is compromised.
          enumDescriptions:
            - Default value.
            - >-
              The device is compromised (currently, this means Android device is
              rooted).
            - >-
              The device is safe (currently, this means Android device is
              unrooted).
          enum:
            - COMPROMISED_STATE_UNSPECIFIED
            - COMPROMISED
            - UNCOMPROMISED
          type: string
          readOnly: true
        enabledDeveloperOptions:
          readOnly: true
          type: boolean
          description: Output only. Whether developer options is enabled on device.
        serialNumber:
          type: string
          description: 'Serial Number of device. Example: HT82V1A01076.'
        brand:
          type: string
          description: 'Output only. Device brand. Example: Samsung.'
          readOnly: true
        kernelVersion:
          readOnly: true
          description: Output only. Kernel version of the device.
          type: string
        managementState:
          description: Output only. Management state of the device
          readOnly: true
          enum:
            - MANAGEMENT_STATE_UNSPECIFIED
            - APPROVED
            - BLOCKED
            - PENDING
            - UNPROVISIONED
            - WIPING
            - WIPED
          enumDescriptions:
            - Default value. This value is unused.
            - Device is approved.
            - Device is blocked.
            - Device is pending approval.
            - >-
              The device is not provisioned. Device will start from this state
              until some action is taken (i.e. a user starts using the device).
            - Data and settings on the device are being removed.
            - All data and settings on the device are removed.
          type: string
        securityPatchTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. OS security patch update time on device.
        lastSyncTime:
          format: google-datetime
          description: Most recent time when device synced with this service.
          type: string
        basebandVersion:
          description: Output only. Baseband version of the device.
          readOnly: true
          type: string
        imei:
          description: Output only. IMEI number of device if GSM device; empty otherwise.
          type: string
          readOnly: true
        bootloaderVersion:
          type: string
          description: 'Output only. Device bootloader version. Example: 0.6.7.'
          readOnly: true
        clientTypes:
          items:
            enum:
              - CLIENT_TYPE_UNSPECIFIED
              - DRIVE_FS
              - FUNDAMENTAL
              - ENDPOINT_VERIFICATION
              - WINDOWS_ADVANCED
              - GOOGLE_CREDENTIALS_PROVIDER_FOR_WINDOWS
            enumDescriptions:
              - Default value
              - Managed by DriveFS
              - Management type for every secure device
              - Managed by Endpoint Verification
              - Managed by Windows
              - Managed by Google credential provider for windows
            type: string
          description: List of the clients the device is reporting to.
          type: array
        hostname:
          description: Host name of the device.
          type: string
      type: object
      description: >-
        A Device within the Cloud Identity Devices API. Represents a Device
        known to Google Cloud, independent of the device ownership, type, and
        whether it is assigned or in use by a user.
      id: Device
    CancelWipeDeviceResponse:
      id: CancelWipeDeviceResponse
      properties:
        device:
          description: >-
            Resultant Device object for the action. Note that asset tags will
            not be returned in the device object.
          $ref: '#/components/schemas/Device'
      description: Response message for cancelling an unfinished device wipe.
      type: object
    AndroidAttributes:
      type: object
      id: AndroidAttributes
      properties:
        ownershipPrivilege:
          enum:
            - OWNERSHIP_PRIVILEGE_UNSPECIFIED
            - DEVICE_ADMINISTRATOR
            - PROFILE_OWNER
            - DEVICE_OWNER
          description: Ownership privileges on device.
          enumDescriptions:
            - Ownership privilege is not set.
            - Active device administrator privileges on the device.
            - >-
              Profile Owner privileges. The account is in a managed corporate
              profile.
            - Device Owner privileges on the device.
          type: string
        verifiedBoot:
          type: boolean
          description: Whether Android verified boot status is GREEN.
        supportsWorkProfile:
          type: boolean
          description: >-
            Whether device supports Android work profiles. If false, this
            service will not block access to corp data even if an administrator
            turns on the "Enforce Work Profile" policy.
        hasPotentiallyHarmfulApps:
          description: Whether any potentially harmful apps were detected on the device.
          type: boolean
        verifyAppsEnabled:
          type: boolean
          description: Whether Google Play Protect Verify Apps is enabled.
        ownerProfileAccount:
          description: >-
            Whether this account is on an owner/primary profile. For phones,
            only true for owner profiles. Android 4+ devices can have secondary
            or restricted user profiles.
          type: boolean
        ctsProfileMatch:
          type: boolean
          description: Whether the device passes Android CTS compliance.
        enabledUnknownSources:
          description: >-
            Whether applications from unknown sources can be installed on
            device.
          type: boolean
      description: Resource representing the Android specific attributes of a Device.
    ApproveDeviceUserRequest:
      id: ApproveDeviceUserRequest
      type: object
      properties:
        customer:
          description: >-
            Optional. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            customer. If you're using this API for your own organization, use
            `customers/my_customer` If you're using this API to manage another
            organization, use `customers/{customer_id}`, where customer_id is
            the customer to whom the device belongs.
          type: string
      description: Request message for approving the device to access user data.
    ListGroupsResponse:
      type: object
      id: ListGroupsResponse
      description: The response message for GroupsService.ListGroups.
      properties:
        nextPageToken:
          type: string
          description: >-
            A continuation token to retrieve the next page of results, or empty
            if there are no more results available.
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          description: The `Group` resources under the specified `parent`.
    CertificateAttributes:
      properties:
        certificateTemplate:
          description: The X.509 extension for CertificateTemplate.
          $ref: '#/components/schemas/CertificateTemplate'
        subject:
          description: The subject name of this certificate.
          type: string
        validityExpirationTime:
          type: string
          format: google-datetime
          description: Certificate not valid at or after this timestamp.
        serialNumber:
          description: 'Serial number of the certificate, Example: "123456789".'
          type: string
        fingerprint:
          type: string
          description: The encoded certificate fingerprint.
        validityStartTime:
          type: string
          description: Certificate not valid before this timestamp.
          format: google-datetime
        validationState:
          enum:
            - CERTIFICATE_VALIDATION_STATE_UNSPECIFIED
            - VALIDATION_SUCCESSFUL
            - VALIDATION_FAILED
          enumDescriptions:
            - Default value.
            - Certificate validation was successful.
            - Certificate validation failed.
          description: Validation state of this certificate.
          type: string
        issuer:
          type: string
          description: The name of the issuer of this certificate.
        thumbprint:
          type: string
          description: The certificate thumbprint.
      type: object
      description: Stores information about a certificate.
      id: CertificateAttributes
    SamlIdpConfig:
      id: SamlIdpConfig
      description: SAML IDP (identity provider) configuration.
      properties:
        logoutRedirectUri:
          type: string
          description: >-
            The **Logout Redirect URL** (sign-out page URL) of the identity
            provider. When a user clicks the sign-out link on a Google page,
            they will be redirected to this URL. This is a pure redirect with no
            attached SAML `LogoutRequest` i.e. SAML single logout is not
            supported. Must use `HTTPS`.
        entityId:
          description: Required. The SAML **Entity ID** of the identity provider.
          type: string
        singleSignOnServiceUri:
          description: >-
            Required. The `SingleSignOnService` endpoint location (sign-in page
            URL) of the identity provider. This is the URL where the
            `AuthnRequest` will be sent. Must use `HTTPS`. Assumed to accept the
            `HTTP-Redirect` binding.
          type: string
        changePasswordUri:
          type: string
          description: >-
            The **Change Password URL** of the identity provider. Users will be
            sent to this URL when changing their passwords at
            `myaccount.google.com`. This takes precedence over the change
            password URL configured at customer-level. Must use `HTTPS`.
      type: object
    UpdateInboundSsoAssignmentOperationMetadata:
      description: >-
        LRO response metadata for
        InboundSsoAssignmentsService.UpdateInboundSsoAssignment.
      properties: {}
      id: UpdateInboundSsoAssignmentOperationMetadata
      type: object
    GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse:
      id: GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse
      properties:
        deviceUser:
          description: Resultant DeviceUser object for the action.
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
      type: object
      description: Response message for blocking the device from accessing user data.
    EndpointVerificationSpecificAttributes:
      properties:
        certificateAttributes:
          description: Details of certificates.
          items:
            $ref: '#/components/schemas/CertificateAttributes'
          type: array
      description: >-
        Resource representing the Endpoint Verification-specific attributes of a
        Device. https://cloud.google.com/endpoint-verification/docs/overview
      id: EndpointVerificationSpecificAttributes
      type: object
    EntityKey:
      properties:
        id:
          description: >-
            The ID of the entity. For Google-managed entities, the `id` must be
            the email address of an existing group or user. For
            external-identity-mapped entities, the `id` must be a string
            conforming to the Identity Source's requirements. Must be unique
            within a `namespace`.
          type: string
        namespace:
          description: >-
            The namespace in which the entity exists. If not specified, the
            `EntityKey` represents a Google-managed entity such as a Google user
            or a Google Group. If specified, the `EntityKey` represents an
            external-identity-mapped group. The namespace must correspond to an
            identity source created in Admin Console and must be in the form of
            `identitysources/{identity_source_id}`.
          type: string
      description: >-
        A unique identifier for an entity in the Cloud Identity Groups API. An
        entity can represent either a group with an optional `namespace` or a
        user without a `namespace`. The combination of `id` and `namespace` must
        be unique; however, the same `id` can be used with different
        `namespace`s.
      id: EntityKey
      type: object
    MembershipAdjacencyList:
      type: object
      id: MembershipAdjacencyList
      properties:
        group:
          description: Resource name of the group that the members belong to.
          type: string
        edges:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
          description: >-
            Each edge contains information about the member that belongs to this
            group. Note: Fields returned here will help identify the specific
            Membership resource (e.g name, preferred_member_key and role), but
            may not be a comprehensive list of all fields.
      description: Membership graph's path information as an adjacency list.
    IdpCredential:
      description: Credential for verifying signatures produced by the Identity Provider.
      id: IdpCredential
      type: object
      properties:
        rsaKeyInfo:
          $ref: '#/components/schemas/RsaPublicKeyInfo'
          description: Output only. Information of a RSA public key.
          readOnly: true
        updateTime:
          type: string
          description: Output only. Time when the `IdpCredential` was last updated.
          format: google-datetime
          readOnly: true
        name:
          readOnly: true
          description: >-
            Output only. [Resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            credential.
          type: string
        dsaKeyInfo:
          description: Output only. Information of a DSA public key.
          $ref: '#/components/schemas/DsaPublicKeyInfo'
          readOnly: true
    DynamicGroupMetadata:
      type: object
      properties:
        status:
          readOnly: true
          description: Output only. Status of the dynamic group.
          $ref: '#/components/schemas/DynamicGroupStatus'
        queries:
          description: >-
            Memberships will be the union of all queries. Only one entry with
            USER resource is currently supported. Customers can create up to 100
            dynamic groups.
          type: array
          items:
            $ref: '#/components/schemas/DynamicGroupQuery'
      description: Dynamic group metadata like queries and status.
      id: DynamicGroupMetadata
    Membership:
      id: Membership
      description: >-
        A membership within the Cloud Identity Groups API. A `Membership`
        defines a relationship between a `Group` and an entity belonging to that
        `Group`, referred to as a "member".
      type: object
      properties:
        name:
          description: >-
            Output only. The [resource
            name](https://cloud.google.com/apis/design/resource_names) of the
            `Membership`. Shall be of the form
            `groups/{group_id}/memberships/{membership_id}`.
          type: string
          readOnly: true
        memberKey:
          description: >-
            Immutable. The `EntityKey` of the member. Either `member_key` or
            `preferred_member_key` must be set when calling
            MembershipsService.CreateMembership but not both; both shall be set
            when returned.
          $ref: '#/components/schemas/EntityKey'
        preferredMemberKey:
          description: >-
            Required. Immutable. The `EntityKey` of the member. Either
            `member_key` or `preferred_member_key` must be set when calling
            MembershipsService.CreateMembership but not both; both shall be set
            when returned.
          $ref: '#/components/schemas/EntityKey'
        deliverySetting:
          enumDescriptions:
            - Default. Should not be used.
            - Represents each mail should be delivered
            - Represents 1 email for every 25 messages.
            - Represents daily summary of messages.
            - Represents no delivery.
            - Represents disabled state.
          enum:
            - DELIVERY_SETTING_UNSPECIFIED
            - ALL_MAIL
            - DIGEST
            - DAILY
            - NONE
            - DISABLED
          description: Output only. Delivery setting associated with the membership.
          type: string
          readOnly: true
        type:
          enumDescriptions:
            - Default. Should not be used.
            - Represents user type.
            - Represents service account type.
            - Represents group type.
            - Represents Shared drive.
            - Represents other type.
          enum:
            - TYPE_UNSPECIFIED
            - USER
            - SERVICE_ACCOUNT
            - GROUP
            - SHARED_DRIVE
            - OTHER
          type: string
          description: Output only. The type of the membership.
          readOnly: true
        createTime:
          format: google-datetime
          description: Output only. The time when the `Membership` was created.
          type: string
          readOnly: true
        updateTime:
          description: Output only. The time when the `Membership` was last updated.
          type: string
          format: google-datetime
          readOnly: true
        roles:
          items:
            $ref: '#/components/schemas/MembershipRole'
          type: array
          description: >-
            The `MembershipRole`s that apply to the `Membership`. If
            unspecified, defaults to a single `MembershipRole` with `name`
            `MEMBER`. Must not contain duplicate `MembershipRole`s with the same
            `name`.
  parameters:
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-identity.devices.lookup: See your device details
            https://www.googleapis.com/auth/cloud-identity.devices.readonly: >-
              Private Service:
              https://www.googleapis.com/auth/cloud-identity.devices.readonly
            https://www.googleapis.com/auth/cloud-identity.groups.readonly: >-
              See any Cloud Identity Groups that you can access, including group
              members and their emails
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-identity.groups: >-
              See, change, create, and delete any of the Cloud Identity Groups
              that you can access, including the members of each group
            https://www.googleapis.com/auth/cloud-identity.devices: >-
              Private Service:
              https://www.googleapis.com/auth/cloud-identity.devices
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta1/customers/{customersId}/userinvitations:
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: >-
        Retrieves a list of UserInvitation resources. **Note:** New consumer
        accounts with the customer's verified domain created within the previous
        48 hours will not appear in the result. This delay also applies to
        newly-verified domains.
      operationId: cloudidentity.customers.userinvitations.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserInvitationsResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: userinvitations
      x-stackQL-verb: select
  /v1beta1/customers/{customersId}/userinvitations/{userinvitationsId}:send:
    parameters: *ref_1
    post:
      description: >-
        Sends a UserInvitation to email. If the `UserInvitation` does not exist
        for this request and it is a valid request, the request creates a
        `UserInvitation`. **Note:** The `get` and `list` methods have a 48-hour
        delay where newly-created consumer accounts will not appear in the
        results. You can still send a `UserInvitation` to those accounts if you
        know the unmanaged email address and IsInvitableUser==True.
      operationId: cloudidentity.customers.userinvitations.send
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendUserInvitationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: userinvitationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: userinvitations
      x-stackQL-verb: exec
  /v1beta1/customers/{customersId}/userinvitations/{userinvitationsId}:isInvitableUser:
    parameters: *ref_1
    get:
      description: >-
        Verifies whether a user account is eligible to receive a UserInvitation
        (is an unmanaged account). Eligibility is based on the following
        criteria: * the email address is a consumer account and it's the primary
        email address of the account, and * the domain of the email address
        matches an existing verified Google Workspace or Cloud Identity domain
        If both conditions are met, the user is eligible. **Note:** This method
        is not supported for Workspace Essentials customers.
      operationId: cloudidentity.customers.userinvitations.isInvitableUser
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsInvitableUserResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: userinvitationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: userinvitations
      x-stackQL-verb: exec
  /v1beta1/customers/{customersId}/userinvitations/{userinvitationsId}:cancel:
    parameters: *ref_1
    post:
      description: Cancels a UserInvitation that was already sent.
      operationId: cloudidentity.customers.userinvitations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelUserInvitationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: userinvitationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: userinvitations
      x-stackQL-verb: exec
  /v1beta1/customers/{customersId}/userinvitations/{userinvitationsId}:
    parameters: *ref_1
    get:
      description: >-
        Retrieves a UserInvitation resource. **Note:** New consumer accounts
        with the customer's verified domain created within the previous 48 hours
        will not appear in the result. This delay also applies to newly-verified
        domains.
      operationId: cloudidentity.customers.userinvitations.get
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitation'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: userinvitationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: userinvitations
      x-stackQL-verb: select
  /v1beta1/orgUnits/{orgUnitsId}/memberships/{membershipsId}:move:
    parameters: *ref_1
    post:
      description: >-
        Move an OrgMembership to a new OrgUnit. NOTE: This is an atomic
        copy-and-delete. The resource will have a new copy under the destination
        OrgUnit and be deleted from the source OrgUnit. The resource can only be
        searched under the destination OrgUnit afterwards.
      operationId: cloudidentity.orgUnits.memberships.move
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveOrgMembershipRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: orgUnitsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1beta1/orgUnits/{orgUnitsId}/memberships:
    parameters: *ref_1
    get:
      description: >-
        List OrgMembership resources in an OrgUnit treated as 'parent'. Parent
        format: orgUnits/{$orgUnitId} where `$orgUnitId` is the `orgUnitId` from
        the [Admin SDK `OrgUnit`
        resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits)
      operationId: cloudidentity.orgUnits.memberships.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrgMembershipsResponse'
      parameters:
        - in: path
          name: orgUnitsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: select
  /v1beta1/inboundSsoAssignments/{inboundSsoAssignmentsId}:
    parameters: *ref_1
    patch:
      description: >-
        Updates an InboundSsoAssignment. The body of this request is the
        `inbound_sso_assignment` field and the `update_mask` is relative to
        that. For example: a PATCH to
        `/v1beta1/inboundSsoAssignments/0abcdefg1234567&update_mask=rank` with a
        body of `{ "rank": 1 }` moves that (presumably group-targeted) SSO
        assignment to the highest priority and shifts any other group-targeted
        assignments down in priority.
      operationId: cloudidentity.inboundSsoAssignments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundSsoAssignment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: inboundSsoAssignmentsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: inbound_sso_assignments
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes an InboundSsoAssignment. To disable SSO, Create (or Update) an
        assignment that has `sso_mode` == `SSO_OFF`.
      operationId: cloudidentity.inboundSsoAssignments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: inboundSsoAssignmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: inbound_sso_assignments
      x-stackQL-verb: delete
    get:
      description: Gets an InboundSsoAssignment.
      operationId: cloudidentity.inboundSsoAssignments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundSsoAssignment'
      parameters:
        - in: path
          name: inboundSsoAssignmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: inbound_sso_assignments
      x-stackQL-verb: select
  /v1beta1/inboundSsoAssignments:
    parameters: *ref_1
    post:
      description: >-
        Creates an InboundSsoAssignment for users and devices in a `Customer`
        under a given `Group` or `OrgUnit`.
      operationId: cloudidentity.inboundSsoAssignments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundSsoAssignment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: inbound_sso_assignments
      x-stackQL-verb: insert
    get:
      description: Lists the InboundSsoAssignments for a `Customer`.
      operationId: cloudidentity.inboundSsoAssignments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInboundSsoAssignmentsResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: inbound_sso_assignments
      x-stackQL-verb: select
  /v1beta1/devices:
    parameters: *ref_1
    get:
      description: Lists/Searches devices.
      operationId: cloudidentity.devices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: select
    post:
      description: >-
        Creates a device. Only company-owned device may be created. **Note**:
        This method is available only to customers who have one of the following
        SKUs: Enterprise Standard, Enterprise Plus, Enterprise for Education,
        and Cloud Identity Premium
      operationId: cloudidentity.devices.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: devices
      x-stackQL-verb: insert
  /v1beta1/devices/{devicesId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified device.
      operationId: cloudidentity.devices.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: select
    delete:
      description: Deletes the specified device.
      operationId: cloudidentity.devices.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: delete
  /v1beta1/devices/{devicesId}:wipe:
    parameters: *ref_1
    post:
      description: Wipes all data on the specified device.
      operationId: cloudidentity.devices.wipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WipeDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1beta1/devices/{devicesId}:cancelWipe:
    parameters: *ref_1
    post:
      description: >-
        Cancels an unfinished device wipe. This operation can be used to cancel
        device wipe in the gap between the wipe operation returning success and
        the device being wiped.
      operationId: cloudidentity.devices.cancelWipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelWipeDeviceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /v1beta1/devices/{devicesId}/deviceUsers/{deviceUsersId}/clientStates/{clientStatesId}:
    parameters: *ref_1
    get:
      description: Gets the client state for the device user
      operationId: cloudidentity.devices.deviceUsers.clientStates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientState'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: path
          name: clientStatesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: client_states
      x-stackQL-verb: select
    patch:
      description: >-
        Updates the client state for the device user **Note**: This method is
        available only to customers who have one of the following SKUs:
        Enterprise Standard, Enterprise Plus, Enterprise for Education, and
        Cloud Identity Premium
      operationId: cloudidentity.devices.deviceUsers.clientStates.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientState'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: path
          name: clientStatesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: client_states
      x-stackQL-verb: exec
  /v1beta1/devices/{devicesId}/deviceUsers/{deviceUsersId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified DeviceUser
      operationId: cloudidentity.devices.deviceUsers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceUser'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes the specified DeviceUser. This also revokes the user's access to
        device data.
      operationId: cloudidentity.devices.deviceUsers.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: delete
  /v1beta1/devices/{devicesId}/deviceUsers:
    parameters: *ref_1
    get:
      description: Lists/Searches DeviceUsers.
      operationId: cloudidentity.devices.deviceUsers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceUsersResponse'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: select
  /v1beta1/devices/{devicesId}/deviceUsers/{deviceUsersId}:approve:
    parameters: *ref_1
    post:
      description: Approves device to access user data.
      operationId: cloudidentity.devices.deviceUsers.approve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveDeviceUserRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: exec
  /v1beta1/devices/{devicesId}/deviceUsers/{deviceUsersId}:wipe:
    parameters: *ref_1
    post:
      description: Wipes the user's account on a device.
      operationId: cloudidentity.devices.deviceUsers.wipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WipeDeviceUserRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: exec
  /v1beta1/devices/{devicesId}/deviceUsers/{deviceUsersId}:cancelWipe:
    parameters: *ref_1
    post:
      description: >-
        Cancels an unfinished user account wipe. This operation can be used to
        cancel device wipe in the gap between the wipe operation returning
        success and the device being wiped.
      operationId: cloudidentity.devices.deviceUsers.cancelWipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelWipeDeviceUserRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: exec
  /v1beta1/devices/{devicesId}/deviceUsers/{deviceUsersId}:block:
    parameters: *ref_1
    post:
      description: Blocks device from accessing user data
      operationId: cloudidentity.devices.deviceUsers.block
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockDeviceUserRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: exec
  /v1beta1/devices/{devicesId}/deviceUsers:lookup:
    parameters: *ref_1
    get:
      description: >-
        Looks up resource names of the DeviceUsers associated with the caller's
        credentials, as well as the properties provided in the request. This
        method must be called with end-user credentials with the scope:
        https://www.googleapis.com/auth/cloud-identity.devices.lookup If
        multiple properties are provided, only DeviceUsers having all of these
        properties are considered as matches - i.e. the query behaves like an
        AND. Different platforms require different amounts of information from
        the caller to ensure that the DeviceUser is uniquely identified. - iOS:
        No properties need to be passed, the caller's credentials are sufficient
        to identify the corresponding DeviceUser. - Android: Specifying the
        'android_id' field is required. - Desktop: Specifying the
        'raw_resource_id' field is required.
      operationId: cloudidentity.devices.deviceUsers.lookup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.lookup
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.lookup
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupSelfDeviceUsersResponse'
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: androidId
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: userId
          schema:
            type: string
        - in: query
          name: rawResourceId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: device_users
      x-stackQL-verb: exec
  /v1beta1/inboundSamlSsoProfiles/{inboundSamlSsoProfilesId}:
    parameters: *ref_1
    delete:
      description: Deletes an InboundSamlSsoProfile.
      operationId: cloudidentity.inboundSamlSsoProfiles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: inbound_saml_sso_profiles
      x-stackQL-verb: delete
    patch:
      description: Updates an InboundSamlSsoProfile.
      operationId: cloudidentity.inboundSamlSsoProfiles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundSamlSsoProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: inbound_saml_sso_profiles
      x-stackQL-verb: exec
    get:
      description: Gets an InboundSamlSsoProfile.
      operationId: cloudidentity.inboundSamlSsoProfiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundSamlSsoProfile'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: inbound_saml_sso_profiles
      x-stackQL-verb: select
  /v1beta1/inboundSamlSsoProfiles:
    parameters: *ref_1
    get:
      description: Lists InboundSamlSsoProfiles for a customer.
      operationId: cloudidentity.inboundSamlSsoProfiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInboundSamlSsoProfilesResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: inbound_saml_sso_profiles
      x-stackQL-verb: select
    post:
      description: Creates an InboundSamlSsoProfile for a customer.
      operationId: cloudidentity.inboundSamlSsoProfiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundSamlSsoProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: inbound_saml_sso_profiles
      x-stackQL-verb: insert
  /v1beta1/inboundSamlSsoProfiles/{inboundSamlSsoProfilesId}/idpCredentials:
    parameters: *ref_1
    get:
      description: Returns a list of IdpCredentials in an InboundSamlSsoProfile.
      operationId: cloudidentity.inboundSamlSsoProfiles.idpCredentials.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIdpCredentialsResponse'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: idp_credentials
      x-stackQL-verb: select
  /v1beta1/inboundSamlSsoProfiles/{inboundSamlSsoProfilesId}/idpCredentials:add:
    parameters: *ref_1
    post:
      description: Adds an IdpCredential. Up to 2 credentials are allowed.
      operationId: cloudidentity.inboundSamlSsoProfiles.idpCredentials.add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddIdpCredentialRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: idp_credentials
      x-stackQL-verb: insert
  /v1beta1/inboundSamlSsoProfiles/{inboundSamlSsoProfilesId}/idpCredentials/{idpCredentialsId}:
    parameters: *ref_1
    get:
      description: Gets an IdpCredential.
      operationId: cloudidentity.inboundSamlSsoProfiles.idpCredentials.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpCredential'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
        - in: path
          name: idpCredentialsId
          required: true
          schema:
            type: string
      x-stackQL-resource: idp_credentials
      x-stackQL-verb: select
    delete:
      description: Deletes an IdpCredential.
      operationId: cloudidentity.inboundSamlSsoProfiles.idpCredentials.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: inboundSamlSsoProfilesId
          required: true
          schema:
            type: string
        - in: path
          name: idpCredentialsId
          required: true
          schema:
            type: string
      x-stackQL-resource: idp_credentials
      x-stackQL-verb: delete
  /v1beta1/groups:
    parameters: *ref_1
    get:
      description: Lists the `Group` resources under a customer or namespace.
      operationId: cloudidentity.groups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: parent
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: select
    post:
      description: Creates a `Group`.
      operationId: cloudidentity.groups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: query
          name: initialGroupConfig
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: insert
  /v1beta1/groups/{groupsId}/securitySettings:
    parameters: *ref_1
    get:
      description: Get Security Settings
      operationId: cloudidentity.groups.getSecuritySettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritySettings'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: groups__security_settings
      x-stackQL-verb: select
    patch:
      description: Update Security Settings
      operationId: cloudidentity.groups.updateSecuritySettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuritySettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: exec
  /v1beta1/groups:search:
    parameters: *ref_1
    get:
      description: Searches for `Group` resources matching a specified query.
      operationId: cloudidentity.groups.search
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchGroupsResponse'
      parameters:
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: groups
      x-stackQL-verb: exec
  /v1beta1/groups:lookup:
    parameters: *ref_1
    get:
      description: >-
        Looks up the [resource
        name](https://cloud.google.com/apis/design/resource_names) of a `Group`
        by its `EntityKey`.
      operationId: cloudidentity.groups.lookup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupGroupNameResponse'
      parameters:
        - in: query
          name: groupKey.namespace
          schema:
            type: string
        - in: query
          name: groupKey.id
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: exec
  /v1beta1/groups/{groupsId}:
    parameters: *ref_1
    get:
      description: Retrieves a `Group`.
      operationId: cloudidentity.groups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: select
    delete:
      description: Deletes a `Group`.
      operationId: cloudidentity.groups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: delete
    patch:
      description: Updates a `Group`.
      operationId: cloudidentity.groups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: exec
  /v1beta1/groups/{groupsId}/memberships:getMembershipGraph:
    parameters: *ref_1
    get:
      description: >-
        Get a membership graph of just a member or both a member and a group.
        **Note:** This feature is only available to Google Workspace Enterprise
        Standard, Enterprise Plus, and Enterprise for Education; and Cloud
        Identity Premium accounts. Given a member, the response will contain all
        membership paths from the member. Given both a group and a member, the
        response will contain all membership paths between the group and the
        member.
      operationId: cloudidentity.groups.memberships.getMembershipGraph
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
      x-stackQL-resource: memberships__membership_graph
      x-stackQL-verb: select
  /v1beta1/groups/{groupsId}/memberships:
    parameters: *ref_1
    get:
      description: Lists the `Membership`s within a `Group`.
      operationId: cloudidentity.groups.memberships.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipsResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: select
    post:
      description: Creates a `Membership`.
      operationId: cloudidentity.groups.memberships.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: insert
  /v1beta1/groups/{groupsId}/memberships:searchDirectGroups:
    parameters: *ref_1
    get:
      description: Searches direct groups of a member.
      operationId: cloudidentity.groups.memberships.searchDirectGroups
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDirectGroupsResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1beta1/groups/{groupsId}/memberships:checkTransitiveMembership:
    parameters: *ref_1
    get:
      description: >-
        Check a potential member for membership in a group. **Note:** This
        feature is only available to Google Workspace Enterprise Standard,
        Enterprise Plus, and Enterprise for Education; and Cloud Identity
        Premium accounts. A member has membership to a group as long as there is
        a single viewable transitive membership between the group and the
        member. The actor must have view permissions to at least one transitive
        membership between the member and group.
      operationId: cloudidentity.groups.memberships.checkTransitiveMembership
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckTransitiveMembershipResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1beta1/groups/{groupsId}/memberships:lookup:
    parameters: *ref_1
    get:
      description: >-
        Looks up the [resource
        name](https://cloud.google.com/apis/design/resource_names) of a
        `Membership` by its `EntityKey`.
      operationId: cloudidentity.groups.memberships.lookup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupMembershipNameResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: memberKey.id
          schema:
            type: string
        - in: query
          name: memberKey.namespace
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1beta1/groups/{groupsId}/memberships:searchTransitiveGroups:
    parameters: *ref_1
    get:
      description: >-
        Search transitive groups of a member. **Note:** This feature is only
        available to Google Workspace Enterprise Standard, Enterprise Plus, and
        Enterprise for Education; and Cloud Identity Premium accounts. A
        transitive group is any group that has a direct or indirect membership
        to the member. Actor must have view permissions all transitive groups.
      operationId: cloudidentity.groups.memberships.searchTransitiveGroups
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransitiveGroupsResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: query
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1beta1/groups/{groupsId}/memberships/{membershipsId}:
    parameters: *ref_1
    get:
      description: Retrieves a `Membership`.
      operationId: cloudidentity.groups.memberships.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: select
    delete:
      description: Deletes a `Membership`.
      operationId: cloudidentity.groups.memberships.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: delete
  /v1beta1/groups/{groupsId}/memberships:searchTransitiveMemberships:
    parameters: *ref_1
    get:
      description: >-
        Search transitive memberships of a group. **Note:** This feature is only
        available to Google Workspace Enterprise Standard, Enterprise Plus, and
        Enterprise for Education; and Cloud Identity Premium accounts. A
        transitive membership is any direct or indirect membership of a group.
        Actor must have view permissions to all transitive memberships.
      operationId: cloudidentity.groups.memberships.searchTransitiveMemberships
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransitiveMembershipsResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
  /v1beta1/groups/{groupsId}/memberships/{membershipsId}:modifyMembershipRoles:
    parameters: *ref_1
    post:
      description: Modifies the `MembershipRole`s of a `Membership`.
      operationId: cloudidentity.groups.memberships.modifyMembershipRoles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyMembershipRolesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyMembershipRolesResponse'
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      x-stackQL-resource: memberships
      x-stackQL-verb: exec
