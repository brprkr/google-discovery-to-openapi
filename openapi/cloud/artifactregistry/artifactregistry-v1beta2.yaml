openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Artifact Registry API
  description: >-
    Store and manage build artifacts in a scalable and integrated service built
    on Google infrastructure.
  version: v1beta2
  x-discovery-doc-revision: '20230622'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/artifacts/docs/
servers:
  - url: https://artifactregistry.googleapis.com
components:
  schemas:
    Version:
      description: >-
        The body of a version resource. A version resource represents a
        collection of components, such as files and other data. This may
        correspond to a version in many package management schemes.
      type: object
      properties:
        createTime:
          format: google-datetime
          type: string
          description: The time when the version was created.
        metadata:
          type: object
          readOnly: true
          additionalProperties:
            description: Properties of the object.
            type: any
          description: >-
            Output only. Repository-specific Metadata stored against this
            version. The fields returned are defined by the underlying
            repository-specific resource. Currently, the resources could be:
            DockerImage MavenArtifact
        description:
          type: string
          description: Optional. Description of the version, as specified in its metadata.
        name:
          type: string
          description: >-
            The name of the version, for example:
            "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/art1".
            If the package or version ID parts contain slashes, the slashes are
            escaped.
        relatedTags:
          type: array
          description: >-
            Output only. A list of related tags. Will contain up to 100 tags
            that reference this version.
          items:
            $ref: '#/components/schemas/Tag'
        updateTime:
          description: The time when the version was last updated.
          type: string
          format: google-datetime
      id: Version
    Expr:
      type: object
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      id: Expr
      properties:
        title:
          type: string
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
        description:
          type: string
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
    ListLocationsResponse:
      type: object
      id: ListLocationsResponse
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      description: The response message for Locations.ListLocations.
    ListTagsResponse:
      type: object
      description: The response from listing tags.
      properties:
        nextPageToken:
          description: >-
            The token to retrieve the next page of tags, or empty if there are
            no more tags to return.
          type: string
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          description: The tags returned.
          type: array
      id: ListTagsResponse
    UploadAptArtifactRequest:
      properties: {}
      description: The request to upload an artifact.
      id: UploadAptArtifactRequest
      type: object
    ImportYumArtifactsRequest:
      id: ImportYumArtifactsRequest
      description: The request to import new yum artifacts.
      type: object
      properties:
        gcsSource:
          description: Google Cloud Storage location where input content is located.
          $ref: '#/components/schemas/ImportYumArtifactsGcsSource'
    AptArtifact:
      properties:
        controlFile:
          format: byte
          description: Output only. Contents of the artifact's control metadata file.
          type: string
          readOnly: true
        packageName:
          readOnly: true
          description: Output only. The Apt package name of the artifact.
          type: string
        component:
          readOnly: true
          description: Output only. Repository component of the artifact.
          type: string
        name:
          readOnly: true
          description: Output only. The Artifact Registry resource name of the artifact.
          type: string
        packageType:
          enum:
            - PACKAGE_TYPE_UNSPECIFIED
            - BINARY
            - SOURCE
          type: string
          readOnly: true
          description: Output only. An artifact is a binary or source package.
          enumDescriptions:
            - Package type is not specified.
            - Binary package.
            - Source package.
        architecture:
          type: string
          description: Output only. Operating system architecture of the artifact.
          readOnly: true
      description: >-
        A detailed representation of an Apt artifact. Information in the record
        is derived from the archive's control file. See
        https://www.debian.org/doc/debian-policy/ch-controlfields.html
      type: object
      id: AptArtifact
    ImportYumArtifactsGcsSource:
      id: ImportYumArtifactsGcsSource
      properties:
        uris:
          description: Cloud Storage paths URI (e.g., gs://my_bucket//my_object).
          items:
            type: string
          type: array
        useWildcards:
          type: boolean
          description: >-
            Supports URI wildcards for matching multiple objects from a single
            URI.
      description: Google Cloud Storage location where the artifacts currently reside.
      type: object
    SetIamPolicyRequest:
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
      description: Request message for `SetIamPolicy` method.
      type: object
      id: SetIamPolicyRequest
    UploadAptArtifactResponse:
      type: object
      properties:
        aptArtifacts:
          description: The Apt artifacts updated.
          items:
            $ref: '#/components/schemas/AptArtifact'
          type: array
      id: UploadAptArtifactResponse
      description: >-
        The response of the completed artifact upload operation. This response
        is contained in the Operation and available to users.
    Package:
      type: object
      properties:
        displayName:
          type: string
          description: The display name of the package.
        name:
          description: >-
            The name of the package, for example:
            `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1`.
            If the package ID part contains slashes, the slashes are escaped.
          type: string
        createTime:
          type: string
          format: google-datetime
          description: The time when the package was created.
        updateTime:
          description: >-
            The time when the package was last updated. This includes publishing
            a new version of the package.
          type: string
          format: google-datetime
      description: Packages are named collections of versions.
      id: Package
    Hash:
      description: A hash of file content.
      properties:
        value:
          format: byte
          description: The hash value.
          type: string
        type:
          enumDescriptions:
            - Unspecified.
            - SHA256 hash.
            - MD5 hash.
          type: string
          enum:
            - HASH_TYPE_UNSPECIFIED
            - SHA256
            - MD5
          description: The algorithm used to compute the hash value.
      type: object
      id: Hash
    MavenRepositoryConfig:
      description: >-
        MavenRepositoryConfig is maven related repository details. Provides
        additional configuration details for repositories of the maven format
        type.
      properties:
        versionPolicy:
          enumDescriptions:
            - >-
              VERSION_POLICY_UNSPECIFIED - the version policy is not defined.
              When the version policy is not defined, no validation is performed
              for the versions.
            - RELEASE - repository will accept only Release versions.
            - SNAPSHOT - repository will accept only Snapshot versions.
          type: string
          description: Version policy defines the versions that the registry will accept.
          enum:
            - VERSION_POLICY_UNSPECIFIED
            - RELEASE
            - SNAPSHOT
        allowSnapshotOverwrites:
          description: >-
            The repository with this flag will allow publishing the same
            snapshot versions.
          type: boolean
      id: MavenRepositoryConfig
      type: object
    Binding:
      type: object
      id: Binding
      properties:
        members:
          items:
            type: string
          type: array
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding.
        condition:
          $ref: '#/components/schemas/Expr'
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      description: Associates `members`, or principals, with a `role`.
    UploadYumArtifactRequest:
      id: UploadYumArtifactRequest
      properties: {}
      type: object
      description: The request to upload an artifact.
    UploadAptArtifactMediaResponse:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/Operation'
          description: Operation to be returned to the user.
      description: The response to upload an artifact.
      id: UploadAptArtifactMediaResponse
    UploadYumArtifactMediaResponse:
      description: The response to upload an artifact.
      properties:
        operation:
          description: Operation to be returned to the user.
          $ref: '#/components/schemas/Operation'
      type: object
      id: UploadYumArtifactMediaResponse
    Location:
      properties:
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          type: string
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        labels:
          additionalProperties:
            type: string
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
      description: A resource that represents a Google Cloud location.
      id: Location
      type: object
    ImportYumArtifactsMetadata:
      description: The operation metadata for importing artifacts.
      id: ImportYumArtifactsMetadata
      properties: {}
      type: object
    ImportAptArtifactsErrorInfo:
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: The detailed error status.
        gcsSource:
          description: Google Cloud Storage location requested.
          $ref: '#/components/schemas/ImportAptArtifactsGcsSource'
      id: ImportAptArtifactsErrorInfo
      description: Error information explaining why a package was not imported.
      type: object
    ProjectSettings:
      id: ProjectSettings
      description: The Artifact Registry settings that apply to a Project.
      properties:
        legacyRedirectionState:
          enum:
            - REDIRECTION_STATE_UNSPECIFIED
            - REDIRECTION_FROM_GCR_IO_DISABLED
            - REDIRECTION_FROM_GCR_IO_ENABLED
            - REDIRECTION_FROM_GCR_IO_FINALIZED
          type: string
          description: The redirection state of the legacy repositories in this project.
          enumDescriptions:
            - No redirection status has been set.
            - Redirection is disabled.
            - Redirection is enabled.
            - >-
              Redirection is enabled, and has been finalized so cannot be
              reverted.
        name:
          description: >-
            The name of the project's settings. Always of the form:
            projects/{project-id}/projectSettings In update request: never set
            In response: always set
          type: string
      type: object
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      properties:
        permissions:
          type: array
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
      description: Request message for `TestIamPermissions` method.
      type: object
    ImportYumArtifactsResponse:
      type: object
      id: ImportYumArtifactsResponse
      description: The response message from importing YUM artifacts.
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ImportYumArtifactsErrorInfo'
          type: array
          description: Detailed error info for packages that were not imported.
        yumArtifacts:
          description: The yum artifacts imported.
          type: array
          items:
            $ref: '#/components/schemas/YumArtifact'
    ListVersionsResponse:
      properties:
        versions:
          items:
            $ref: '#/components/schemas/Version'
          type: array
          description: The versions returned.
        nextPageToken:
          description: >-
            The token to retrieve the next page of versions, or empty if there
            are no more versions to return.
          type: string
      type: object
      description: The response from listing versions.
      id: ListVersionsResponse
    Operation:
      type: object
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      properties:
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        response:
          type: object
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        metadata:
          type: object
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
    Policy:
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
        user:mike@example.com - group:admins@example.com - domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For
        a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      properties:
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          format: byte
          type: string
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          format: int32
          type: integer
      type: object
      id: Policy
    ListRepositoriesResponse:
      type: object
      properties:
        nextPageToken:
          description: >-
            The token to retrieve the next page of repositories, or empty if
            there are no more repositories to return.
          type: string
        repositories:
          items:
            $ref: '#/components/schemas/Repository'
          type: array
          description: The repositories returned.
      id: ListRepositoriesResponse
      description: The response from listing repositories.
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          type: array
          items:
            type: string
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
      id: TestIamPermissionsResponse
      type: object
    ImportAptArtifactsGcsSource:
      properties:
        useWildcards:
          description: >-
            Supports URI wildcards for matching multiple objects from a single
            URI.
          type: boolean
        uris:
          type: array
          items:
            type: string
          description: Cloud Storage paths URI (e.g., gs://my_bucket//my_object).
      id: ImportAptArtifactsGcsSource
      type: object
      description: Google Cloud Storage location where the artifacts currently reside.
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: Status
      properties:
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        code:
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
        details:
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
      type: object
    UploadYumArtifactResponse:
      id: UploadYumArtifactResponse
      properties:
        yumArtifacts:
          items:
            $ref: '#/components/schemas/YumArtifact'
          type: array
          description: The Apt artifacts updated.
      description: >-
        The response of the completed artifact upload operation. This response
        is contained in the Operation and available to users.
      type: object
    ImportYumArtifactsErrorInfo:
      type: object
      id: ImportYumArtifactsErrorInfo
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: The detailed error status.
        gcsSource:
          description: Google Cloud Storage location requested.
          $ref: '#/components/schemas/ImportYumArtifactsGcsSource'
      description: Error information explaining why a package was not imported.
    YumArtifact:
      description: A detailed representation of a Yum artifact.
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: Output only. The Artifact Registry resource name of the artifact.
        architecture:
          description: Output only. Operating system architecture of the artifact.
          readOnly: true
          type: string
        packageType:
          description: Output only. An artifact is a binary or source package.
          enumDescriptions:
            - Package type is not specified.
            - Binary package (.rpm).
            - Source package (.srpm).
          readOnly: true
          enum:
            - PACKAGE_TYPE_UNSPECIFIED
            - BINARY
            - SOURCE
          type: string
        packageName:
          type: string
          readOnly: true
          description: Output only. The yum package name of the artifact.
      id: YumArtifact
    ImportAptArtifactsResponse:
      properties:
        aptArtifacts:
          description: The Apt artifacts imported.
          items:
            $ref: '#/components/schemas/AptArtifact'
          type: array
        errors:
          description: Detailed error info for packages that were not imported.
          type: array
          items:
            $ref: '#/components/schemas/ImportAptArtifactsErrorInfo'
      type: object
      description: The response message from importing APT artifacts.
      id: ImportAptArtifactsResponse
    OperationMetadata:
      type: object
      id: OperationMetadata
      properties: {}
      description: Metadata type for longrunning-operations, currently empty.
    ImportAptArtifactsMetadata:
      type: object
      description: The operation metadata for importing artifacts.
      id: ImportAptArtifactsMetadata
      properties: {}
    Tag:
      description: >-
        Tags point to a version and represent an alternative name that can be
        used to access the version.
      type: object
      properties:
        name:
          type: string
          description: >-
            The name of the tag, for example:
            "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1".
            If the package part contains slashes, the slashes are escaped. The
            tag part can only have characters in [a-zA-Z0-9\-._~:@], anything
            else must be URL encoded.
        version:
          type: string
          description: >-
            The name of the version the tag refers to, for example:
            "projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/sha256:5243811"
            If the package or version ID parts contain slashes, the slashes are
            escaped.
      id: Tag
    ListPackagesResponse:
      type: object
      properties:
        packages:
          items:
            $ref: '#/components/schemas/Package'
          description: The packages returned.
          type: array
        nextPageToken:
          type: string
          description: >-
            The token to retrieve the next page of packages, or empty if there
            are no more packages to return.
      description: The response from listing packages.
      id: ListPackagesResponse
    GoogleDevtoolsArtifactregistryV1beta2File:
      properties:
        owner:
          description: The name of the Package or Version that owns this file, if any.
          type: string
        name:
          description: >-
            The name of the file, for example:
            "projects/p1/locations/us-central1/repositories/repo1/files/a%2Fb%2Fc.txt".
            If the file ID part contains slashes, they are escaped.
          type: string
        sizeBytes:
          format: int64
          type: string
          description: The size of the File in bytes.
        updateTime:
          type: string
          description: Output only. The time when the File was last updated.
          readOnly: true
          format: google-datetime
        hashes:
          items:
            $ref: '#/components/schemas/Hash'
          description: The hashes of the file content.
          type: array
        createTime:
          format: google-datetime
          description: Output only. The time when the File was created.
          type: string
          readOnly: true
      id: GoogleDevtoolsArtifactregistryV1beta2File
      description: >-
        Files store content that is potentially associated with Packages or
        Versions.
      type: object
    ListFilesResponse:
      description: The response from listing files.
      properties:
        nextPageToken:
          type: string
          description: >-
            The token to retrieve the next page of files, or empty if there are
            no more files to return.
        files:
          items:
            $ref: '#/components/schemas/GoogleDevtoolsArtifactregistryV1beta2File'
          description: The files returned.
          type: array
      id: ListFilesResponse
      type: object
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
      type: object
    UploadAptArtifactMetadata:
      type: object
      properties: {}
      description: The operation metadata for uploading artifacts.
      id: UploadAptArtifactMetadata
    Repository:
      id: Repository
      type: object
      description: A Repository for storing artifacts with a specific format.
      properties:
        createTime:
          description: Output only. The time when the repository was created.
          type: string
          readOnly: true
          format: google-datetime
        name:
          description: >-
            The name of the repository, for example:
            "projects/p1/locations/us-central1/repositories/repo1".
          type: string
        satisfiesPzs:
          readOnly: true
          type: boolean
          description: >-
            Output only. If set, the repository satisfies physical zone
            separation.
        mavenConfig:
          description: >-
            Maven repository config contains repository level configuration for
            the repositories of maven type.
          $ref: '#/components/schemas/MavenRepositoryConfig'
        sizeBytes:
          readOnly: true
          format: int64
          type: string
          description: >-
            Output only. The size, in bytes, of all artifact storage in this
            repository. Repositories that are generally available or in public
            preview use this to calculate storage costs.
        updateTime:
          readOnly: true
          description: Output only. The time when the repository was last updated.
          format: google-datetime
          type: string
        kmsKeyName:
          type: string
          description: >-
            The Cloud KMS resource name of the customer managed encryption key
            that's used to encrypt the contents of the Repository. Has the form:
            `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`.
            This value may not be changed after the Repository has been created.
        description:
          type: string
          description: The user-provided description of the repository.
        format:
          description: The format of packages that are stored in the repository.
          enum:
            - FORMAT_UNSPECIFIED
            - DOCKER
            - MAVEN
            - NPM
            - APT
            - YUM
            - GOOGET
            - PYTHON
          type: string
          enumDescriptions:
            - Unspecified package format.
            - Docker package format.
            - Maven package format.
            - NPM package format.
            - APT package format.
            - YUM package format.
            - GooGet package format.
            - Python package format.
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            Labels with user-defined metadata. This field may contain up to 64
            entries. Label keys and values may be no longer than 63 characters.
            Label keys must begin with a lowercase letter and may only contain
            lowercase letters, numeric characters, underscores, and dashes.
    UploadYumArtifactMetadata:
      type: object
      description: The operation metadata for uploading artifacts.
      id: UploadYumArtifactMetadata
      properties: {}
    ImportAptArtifactsRequest:
      id: ImportAptArtifactsRequest
      type: object
      description: The request to import new apt artifacts.
      properties:
        gcsSource:
          $ref: '#/components/schemas/ImportAptArtifactsGcsSource'
          description: Google Cloud Storage location where input content is located.
  parameters:
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-platform.read-only: >-
              View your data across Google Cloud services and see the email
              address of your Google Account
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: artifactregistry.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/files/{filesId}:
    parameters: *ref_1
    get:
      description: Gets a file.
      operationId: artifactregistry.projects.locations.repositories.files.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleDevtoolsArtifactregistryV1beta2File'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: filesId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: select
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/files:
    parameters: *ref_1
    get:
      description: Lists files.
      operationId: artifactregistry.projects.locations.repositories.files.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: select
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/aptArtifacts:create:
    parameters: *ref_1
    post:
      description: >-
        Directly uploads an Apt artifact. The returned Operation will complete
        once the resources are uploaded. Package, Version, and File resources
        are created based on the imported artifact. Imported artifacts that
        conflict with existing resources are ignored.
      operationId: artifactregistry.projects.locations.repositories.aptArtifacts.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadAptArtifactRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAptArtifactMediaResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: apt_artifacts
      x-stackQL-verb: exec
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/aptArtifacts:import:
    parameters: *ref_1
    post:
      description: >-
        Imports Apt artifacts. The returned Operation will complete once the
        resources are imported. Package, Version, and File resources are created
        based on the imported artifacts. Imported artifacts that conflict with
        existing resources are ignored.
      operationId: artifactregistry.projects.locations.repositories.aptArtifacts.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportAptArtifactsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: apt_artifacts
      x-stackQL-verb: exec
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags/{tagsId}:
    parameters: *ref_1
    delete:
      description: Deletes a tag.
      operationId: artifactregistry.projects.locations.repositories.packages.tags.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: packagesId
          required: true
          schema:
            type: string
        - in: path
          name: tagsId
          required: true
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: delete
    get:
      description: Gets a tag.
      operationId: artifactregistry.projects.locations.repositories.packages.tags.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: packagesId
          required: true
          schema:
            type: string
        - in: path
          name: tagsId
          required: true
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: select
    patch:
      description: Updates a tag.
      operationId: artifactregistry.projects.locations.repositories.packages.tags.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: packagesId
          required: true
          schema:
            type: string
        - in: path
          name: tagsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: exec
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags:
    parameters: *ref_1
    post:
      description: Creates a tag.
      operationId: artifactregistry.projects.locations.repositories.packages.tags.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: packagesId
          required: true
          schema:
            type: string
        - in: query
          name: tagId
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: insert
    get:
      description: Lists tags.
      operationId: artifactregistry.projects.locations.repositories.packages.tags.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: packagesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: select
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions/{versionsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a version and all of its content. The returned operation will
        complete once the version has been deleted.
      operationId: >-
        artifactregistry.projects.locations.repositories.packages.versions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: packagesId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: versions
      x-stackQL-verb: delete
    get:
      description: Gets a version
      operationId: artifactregistry.projects.locations.repositories.packages.versions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: packagesId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: select
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions:
    parameters: *ref_1
    get:
      description: Lists versions.
      operationId: artifactregistry.projects.locations.repositories.packages.versions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: packagesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: select
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a package and all of its versions and tags. The returned
        operation will complete once the package has been deleted.
      operationId: artifactregistry.projects.locations.repositories.packages.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: packagesId
          required: true
          schema:
            type: string
      x-stackQL-resource: packages
      x-stackQL-verb: delete
    get:
      description: Gets a package.
      operationId: artifactregistry.projects.locations.repositories.packages.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: path
          name: packagesId
          required: true
          schema:
            type: string
      x-stackQL-resource: packages
      x-stackQL-verb: select
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages:
    parameters: *ref_1
    get:
      description: Lists packages.
      operationId: artifactregistry.projects.locations.repositories.packages.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: packages
      x-stackQL-verb: select
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/yumArtifacts:import:
    parameters: *ref_1
    post:
      description: >-
        Imports Yum (RPM) artifacts. The returned Operation will complete once
        the resources are imported. Package, Version, and File resources are
        created based on the imported artifacts. Imported artifacts that
        conflict with existing resources are ignored.
      operationId: artifactregistry.projects.locations.repositories.yumArtifacts.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportYumArtifactsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: yum_artifacts
      x-stackQL-verb: exec
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/yumArtifacts:create:
    parameters: *ref_1
    post:
      description: >-
        Directly uploads a Yum artifact. The returned Operation will complete
        once the resources are uploaded. Package, Version, and File resources
        are created based on the imported artifact. Imported artifacts that
        conflict with existing resources are ignored.
      operationId: artifactregistry.projects.locations.repositories.yumArtifacts.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadYumArtifactRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadYumArtifactMediaResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: yum_artifacts
      x-stackQL-verb: exec
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a repository and all of its contents. The returned Operation
        will finish once the repository has been deleted. It will not have any
        Operation metadata and will return a google.protobuf.Empty response.
      operationId: artifactregistry.projects.locations.repositories.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: repositories
      x-stackQL-verb: delete
    get:
      description: Gets a repository.
      operationId: artifactregistry.projects.locations.repositories.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: repositories
      x-stackQL-verb: select
    patch:
      description: Updates a repository.
      operationId: artifactregistry.projects.locations.repositories.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: repositories
      x-stackQL-verb: exec
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories:
    parameters: *ref_1
    post:
      description: >-
        Creates a repository. The returned Operation will finish once the
        repository has been created. Its response will be the created
        Repository.
      operationId: artifactregistry.projects.locations.repositories.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: repositoryId
          schema:
            type: string
      x-stackQL-resource: repositories
      x-stackQL-verb: insert
    get:
      description: Lists repositories.
      operationId: artifactregistry.projects.locations.repositories.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: repositories
      x-stackQL-verb: select
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Updates the IAM policy for a given resource.
      operationId: artifactregistry.projects.locations.repositories.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: repositories_iam_policies
      x-stackQL-verb: exec
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: Tests if the caller has a list of permissions on a resource.
      operationId: artifactregistry.projects.locations.repositories.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: repositories_iam_policies
      x-stackQL-verb: exec
  /v1beta2/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the IAM policy for a given resource.
      operationId: artifactregistry.projects.locations.repositories.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: repositoriesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: repositories_iam_policies
      x-stackQL-verb: select
  /v1beta2/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: artifactregistry.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1beta2/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: artifactregistry.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1beta2/projects/{projectsId}/projectSettings:
    parameters: *ref_1
    patch:
      description: Updates the Settings for the Project.
      operationId: artifactregistry.projects.updateProjectSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSettings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-verb: exec
    get:
      description: Retrieves the Settings for the Project.
      operationId: artifactregistry.projects.getProjectSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSettings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects__project_settings
      x-stackQL-verb: select
