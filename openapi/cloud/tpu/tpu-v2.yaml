openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud TPU API
  description: TPU API provides customers with access to Google TPU technology.
  version: v2
  x-discovery-doc-revision: '20230621'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/tpu/
servers:
  - url: https://tpu.googleapis.com
components:
  schemas:
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      properties:
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
        response:
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
      id: Operation
      type: object
    GuestAttributesEntry:
      properties:
        value:
          description: Value for the guest attribute entry.
          type: string
        namespace:
          type: string
          description: Namespace for the guest attribute entry.
        key:
          description: Key for the guest attribute entry.
          type: string
      type: object
      id: GuestAttributesEntry
      description: A guest attributes namespace/key/value entry.
    AccessConfig:
      description: An access config attached to the TPU worker.
      properties:
        externalIp:
          type: string
          description: Output only. An external IP address associated with the TPU worker.
          readOnly: true
      id: AccessConfig
      type: object
    Empty:
      properties: {}
      type: object
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    GuestAttributes:
      id: GuestAttributes
      description: A guest attributes.
      type: object
      properties:
        queryValue:
          description: The value of the requested queried path.
          $ref: '#/components/schemas/GuestAttributesValue'
        queryPath:
          type: string
          description: >-
            The path to be queried. This can be the default namespace ('/') or a
            nested namespace ('/\/') or a specified key ('/\/\')
    GetGuestAttributesRequest:
      id: GetGuestAttributesRequest
      properties:
        workerIds:
          type: array
          description: >-
            The 0-based worker ID. If it is empty, all workers' GuestAttributes
            will be returned.
          items:
            type: string
        queryPath:
          type: string
          description: The guest attributes path to be queried.
      type: object
      description: Request for GetGuestAttributes.
    ShieldedInstanceConfig:
      properties:
        enableSecureBoot:
          description: Defines whether the instance has Secure Boot enabled.
          type: boolean
      type: object
      description: A set of Shielded Instance options.
      id: ShieldedInstanceConfig
    ServiceIdentity:
      properties:
        email:
          description: The email address of the service identity.
          type: string
      id: ServiceIdentity
      type: object
      description: The per-product per-project service identity for Cloud TPU service.
    GuestAttributesValue:
      id: GuestAttributesValue
      description: Array of guest attribute namespace/key/value tuples.
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/GuestAttributesEntry'
          description: The list of guest attributes entries.
      type: object
    Symptom:
      id: Symptom
      description: A Symptom instance.
      type: object
      properties:
        workerId:
          type: string
          description: A string used to uniquely distinguish a worker within a TPU node.
        createTime:
          description: Timestamp when the Symptom is created.
          format: google-datetime
          type: string
        details:
          description: Detailed information of the current Symptom.
          type: string
        symptomType:
          enumDescriptions:
            - Unspecified symptom.
            - TPU VM memory is low.
            - TPU runtime is out of memory.
            - TPU runtime execution has timed out.
            - >-
              TPU runtime fails to construct a mesh that recognizes each TPU
              device's neighbors.
            - TPU HBM is out of memory.
            - Abusive behaviors have been identified on the current project.
          description: Type of the Symptom.
          type: string
          enum:
            - SYMPTOM_TYPE_UNSPECIFIED
            - LOW_MEMORY
            - OUT_OF_MEMORY
            - EXECUTE_TIMED_OUT
            - MESH_BUILD_FAIL
            - HBM_OUT_OF_MEMORY
            - PROJECT_ABUSE
    StartNodeRequest:
      properties: {}
      type: object
      id: StartNodeRequest
      description: Request for StartNode.
    GenerateServiceIdentityRequest:
      type: object
      description: Request for GenerateServiceIdentity.
      properties: {}
      id: GenerateServiceIdentityRequest
    GenerateServiceIdentityResponse:
      id: GenerateServiceIdentityResponse
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/ServiceIdentity'
          description: ServiceIdentity that was created or retrieved.
      description: Response for GenerateServiceIdentity.
    ListAcceleratorTypesResponse:
      properties:
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          description: The next page token or empty if none.
          type: string
        acceleratorTypes:
          description: The listed nodes.
          items:
            $ref: '#/components/schemas/AcceleratorType'
          type: array
      type: object
      description: Response for ListAcceleratorTypes.
      id: ListAcceleratorTypesResponse
    RuntimeVersion:
      id: RuntimeVersion
      description: A runtime version that a Node can be configured with.
      type: object
      properties:
        version:
          description: The runtime version.
          type: string
        name:
          description: The resource name.
          type: string
    Node:
      type: object
      id: Node
      properties:
        networkEndpoints:
          readOnly: true
          type: array
          description: >-
            Output only. The network endpoints where TPU workers can be accessed
            and sent work. It is recommended that runtime clients of the node
            reach out to the 0th entry in this map first.
          items:
            $ref: '#/components/schemas/NetworkEndpoint'
        symptoms:
          description: Output only. The Symptoms that have occurred to the TPU Node.
          items:
            $ref: '#/components/schemas/Symptom'
          type: array
          readOnly: true
        shieldedInstanceConfig:
          $ref: '#/components/schemas/ShieldedInstanceConfig'
          description: Shielded Instance options.
        createTime:
          description: Output only. The time when the node was created.
          format: google-datetime
          type: string
          readOnly: true
        name:
          readOnly: true
          description: Output only. Immutable. The name of the TPU.
          type: string
        health:
          description: The health status of the TPU node.
          type: string
          enumDescriptions:
            - 'Health status is unknown: not initialized or failed to retrieve.'
            - The resource is healthy.
            - The resource is unresponsive.
            - The in-guest ML stack is unhealthy.
            - >-
              The node is under maintenance/priority boost caused rescheduling
              and will resume running once rescheduled.
          enum:
            - HEALTH_UNSPECIFIED
            - HEALTHY
            - TIMEOUT
            - UNHEALTHY_TENSORFLOW
            - UNHEALTHY_MAINTENANCE
        state:
          readOnly: true
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - RESTARTING
            - REIMAGING
            - DELETING
            - REPAIRING
            - STOPPED
            - STOPPING
            - STARTING
            - PREEMPTED
            - TERMINATED
            - HIDING
            - HIDDEN
            - UNHIDING
          enumDescriptions:
            - TPU node state is not known/set.
            - TPU node is being created.
            - TPU node has been created.
            - TPU node is restarting.
            - TPU node is undergoing reimaging.
            - TPU node is being deleted.
            - >-
              TPU node is being repaired and may be unusable. Details can be
              found in the 'help_description' field.
            - TPU node is stopped.
            - TPU node is currently stopping.
            - TPU node is currently starting.
            - >-
              TPU node has been preempted. Only applies to Preemptible TPU
              Nodes.
            - >-
              TPU node has been terminated due to maintenance or has reached the
              end of its life cycle (for preemptible nodes).
            - TPU node is currently hiding.
            - TPU node has been hidden.
            - TPU node is currently unhiding.
          description: Output only. The current state for the TPU Node.
        schedulingConfig:
          $ref: '#/components/schemas/SchedulingConfig'
          description: The scheduling options for this node.
        labels:
          type: object
          description: Resource labels to represent user-provided metadata.
          additionalProperties:
            type: string
        tags:
          description: >-
            Tags to apply to the TPU Node. Tags are used to identify valid
            sources or targets for network firewalls.
          items:
            type: string
          type: array
        dataDisks:
          type: array
          items:
            $ref: '#/components/schemas/AttachedDisk'
          description: The additional data disks for the Node.
        acceleratorType:
          type: string
          description: >-
            Required. The type of hardware accelerators associated with this
            node.
        runtimeVersion:
          description: Required. The runtime version running in the Node.
          type: string
        apiVersion:
          enumDescriptions:
            - API version is unknown.
            - TPU API V1Alpha1 version.
            - TPU API V1 version.
            - TPU API V2Alpha1 version.
            - TPU API V2 version.
          type: string
          enum:
            - API_VERSION_UNSPECIFIED
            - V1_ALPHA1
            - V1
            - V2_ALPHA1
            - V2
          description: Output only. The API version that created this Node.
          readOnly: true
        id:
          type: string
          description: Output only. The unique identifier for the TPU Node.
          readOnly: true
          format: int64
        serviceAccount:
          description: >-
            The Google Cloud Platform Service Account to be used by the TPU node
            VMs. If None is specified, the default compute service account will
            be used.
          $ref: '#/components/schemas/ServiceAccount'
        networkConfig:
          $ref: '#/components/schemas/NetworkConfig'
          description: Network configurations for the TPU node.
        acceleratorConfig:
          $ref: '#/components/schemas/AcceleratorConfig'
          description: The AccleratorConfig for the TPU Node.
        cidrBlock:
          description: >-
            The CIDR block that the TPU node will use when selecting an IP
            address. This CIDR block must be a /29 block; the Compute Engine
            networks API forbids a smaller block, and using a larger block would
            be wasteful (a node can only consume one IP address). Errors will
            occur if the CIDR block has already been used for a currently
            existing TPU node, the CIDR block conflicts with any subnetworks in
            the user's provided network, or the provided network is peered with
            another network that is using that CIDR block.
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
          description: >-
            Custom metadata to apply to the TPU Node. Can set startup-script and
            shutdown-script
        healthDescription:
          type: string
          description: >-
            Output only. If this field is populated, it contains a description
            of why the TPU Node is unhealthy.
          readOnly: true
        description:
          type: string
          description: The user-supplied description of the TPU. Maximum of 512 characters.
      description: A TPU instance.
    AttachedDisk:
      description: 'A node-attached disk resource. Next ID: 8;'
      properties:
        mode:
          type: string
          enum:
            - DISK_MODE_UNSPECIFIED
            - READ_WRITE
            - READ_ONLY
          enumDescriptions:
            - The disk mode is not known/set.
            - >-
              Attaches the disk in read-write mode. Only one TPU node can attach
              a disk in read-write mode at a time.
            - >-
              Attaches the disk in read-only mode. Multiple TPU nodes can attach
              a disk in read-only mode at a time.
          description: >-
            The mode in which to attach this disk. If not specified, the default
            is READ_WRITE mode. Only applicable to data_disks.
        sourceDisk:
          type: string
          description: >-
            Specifies the full path to an existing disk. For example:
            "projects/my-project/zones/us-central1-c/disks/my-disk".
      id: AttachedDisk
      type: object
    ListNodesResponse:
      properties:
        nextPageToken:
          description: The next page token or empty if none.
          type: string
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        nodes:
          items:
            $ref: '#/components/schemas/Node'
          type: array
          description: The listed nodes.
      id: ListNodesResponse
      description: Response for ListNodes.
      type: object
    ListRuntimeVersionsResponse:
      properties:
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        nextPageToken:
          type: string
          description: The next page token or empty if none.
        runtimeVersions:
          items:
            $ref: '#/components/schemas/RuntimeVersion'
          description: The listed nodes.
          type: array
      id: ListRuntimeVersionsResponse
      description: Response for ListRuntimeVersions.
      type: object
    GetGuestAttributesResponse:
      type: object
      properties:
        guestAttributes:
          description: The guest attributes for the TPU workers.
          type: array
          items:
            $ref: '#/components/schemas/GuestAttributes'
      id: GetGuestAttributesResponse
      description: Response for GetGuestAttributes.
    SchedulingConfig:
      properties:
        preemptible:
          type: boolean
          description: Defines whether the node is preemptible.
        reserved:
          type: boolean
          description: Whether the node is created under a reservation.
      id: SchedulingConfig
      description: Sets the scheduling options for this node.
      type: object
    NetworkEndpoint:
      id: NetworkEndpoint
      properties:
        accessConfig:
          description: The access config for the TPU worker.
          $ref: '#/components/schemas/AccessConfig'
        ipAddress:
          type: string
          description: The internal IP address of this network endpoint.
        port:
          description: The port of this network endpoint.
          type: integer
          format: int32
      description: A network endpoint over which a TPU worker can be reached.
      type: object
    AcceleratorConfig:
      properties:
        topology:
          description: Required. Topology of TPU in chips.
          type: string
        type:
          type: string
          description: Required. Type of TPU.
          enumDescriptions:
            - Unspecified version.
            - TPU v2.
            - TPU v3.
            - TPU v4.
          enum:
            - TYPE_UNSPECIFIED
            - V2
            - V3
            - V4
      type: object
      id: AcceleratorConfig
      description: A TPU accelerator configuration.
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
        nextPageToken:
          type: string
          description: The standard List next-page token.
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        name:
          type: string
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
      id: Location
      type: object
    StopNodeRequest:
      id: StopNodeRequest
      type: object
      description: Request for StopNode.
      properties: {}
    NetworkConfig:
      properties:
        canIpForward:
          description: >-
            Allows the TPU node to send and receive packets with non-matching
            destination or source IPs. This is required if you plan to use the
            TPU workers to forward routes.
          type: boolean
        enableExternalIps:
          type: boolean
          description: >-
            Indicates that external IP addresses would be associated with the
            TPU workers. If set to false, the specified subnetwork or network
            should have Private Google Access enabled.
        network:
          description: >-
            The name of the network for the TPU node. It must be a preexisting
            Google Compute Engine network. If none is provided, "default" will
            be used.
          type: string
        subnetwork:
          type: string
          description: >-
            The name of the subnetwork for the TPU node. It must be a
            preexisting Google Compute Engine subnetwork. If none is provided,
            "default" will be used.
      type: object
      id: NetworkConfig
      description: Network related configurations.
    ServiceAccount:
      type: object
      id: ServiceAccount
      properties:
        email:
          type: string
          description: >-
            Email address of the service account. If empty, default Compute
            service account will be used.
        scope:
          description: >-
            The list of scopes to be made available for this service account. If
            empty, access to all Cloud APIs will be allowed.
          items:
            type: string
          type: array
      description: A service account.
    ListOperationsResponse:
      id: ListOperationsResponse
      type: object
      description: The response message for Operations.ListOperations.
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Status:
      type: object
      id: Status
      properties:
        details:
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        code:
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
    AcceleratorType:
      description: A accelerator type that a Node can be configured with.
      type: object
      properties:
        type:
          type: string
          description: the accelerator type.
        name:
          description: The resource name.
          type: string
        acceleratorConfigs:
          description: The accelerator config.
          items:
            $ref: '#/components/schemas/AcceleratorConfig'
          type: array
      id: AcceleratorType
    OperationMetadata:
      properties:
        verb:
          type: string
          description: Name of the verb executed by the operation.
        endTime:
          description: The time the operation finished running.
          format: google-datetime
          type: string
        createTime:
          format: google-datetime
          type: string
          description: The time the operation was created.
        apiVersion:
          description: API version.
          type: string
        cancelRequested:
          type: boolean
          description: Specifies if cancellation was requested for the operation.
        target:
          type: string
          description: >-
            Target of the operation - for example
            projects/project-1/connectivityTests/test-1
        statusDetail:
          type: string
          description: Human-readable status of the operation, if any.
      type: object
      id: OperationMetadata
      description: Metadata describing an Operation
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v2/projects/{projectsId}/locations/{locationsId}:generateServiceIdentity:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: Generates the Cloud TPU service identity for the project.
      operationId: tpu.projects.locations.generateServiceIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateServiceIdentityRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateServiceIdentityResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: tpu.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: tpu.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: tpu.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: tpu.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
  /v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: tpu.projects.locations.operations.cancel
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: tpu.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/runtimeVersions/{runtimeVersionsId}:
    parameters: *ref_1
    get:
      description: Gets a runtime version.
      operationId: tpu.projects.locations.runtimeVersions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeVersion'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimeVersionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtime_versions
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/runtimeVersions:
    parameters: *ref_1
    get:
      description: Lists runtime versions supported by this API.
      operationId: tpu.projects.locations.runtimeVersions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuntimeVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: runtime_versions
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:stop:
    parameters: *ref_1
    post:
      description: Stops a node. This operation is only available with single TPU nodes.
      operationId: tpu.projects.locations.nodes.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopNodeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:
    parameters: *ref_1
    get:
      description: Gets the details of a node.
      operationId: tpu.projects.locations.nodes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-verb: select
    delete:
      description: Deletes a node.
      operationId: tpu.projects.locations.nodes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-verb: delete
    patch:
      description: Updates the configurations of a node.
      operationId: tpu.projects.locations.nodes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:getGuestAttributes:
    parameters: *ref_1
    post:
      description: Retrieves the guest attributes for the node.
      operationId: tpu.projects.locations.nodes.getGuestAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGuestAttributesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGuestAttributesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes__guest_attributes
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:start:
    parameters: *ref_1
    post:
      description: Starts a node.
      operationId: tpu.projects.locations.nodes.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartNodeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: nodesId
          required: true
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-verb: exec
  /v2/projects/{projectsId}/locations/{locationsId}/nodes:
    parameters: *ref_1
    get:
      description: Lists nodes.
      operationId: tpu.projects.locations.nodes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: nodes
      x-stackQL-verb: select
    post:
      description: Creates a node.
      operationId: tpu.projects.locations.nodes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: nodeId
          schema:
            type: string
      x-stackQL-resource: nodes
      x-stackQL-verb: insert
  /v2/projects/{projectsId}/locations/{locationsId}/acceleratorTypes:
    parameters: *ref_1
    get:
      description: Lists accelerator types supported by this API.
      operationId: tpu.projects.locations.acceleratorTypes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAcceleratorTypesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: accelerator_types
      x-stackQL-verb: select
  /v2/projects/{projectsId}/locations/{locationsId}/acceleratorTypes/{acceleratorTypesId}:
    parameters: *ref_1
    get:
      description: Gets AcceleratorType.
      operationId: tpu.projects.locations.acceleratorTypes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceleratorType'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: acceleratorTypesId
          required: true
          schema:
            type: string
      x-stackQL-resource: accelerator_types
      x-stackQL-verb: select
