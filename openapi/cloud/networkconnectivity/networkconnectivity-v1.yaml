openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Network Connectivity API
  description: This API enables connectivity with and between Google Cloud resources.
  version: v1
  x-discovery-doc-revision: '20230531'
  x-generated-date: '2023-06-25'
externalDocs:
  url: >-
    https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest
servers:
  - url: https://networkconnectivity.googleapis.com
components:
  schemas:
    ProducerPscConfig:
      type: object
      id: ProducerPscConfig
      properties:
        serviceAttachmentUri:
          description: >-
            The resource path of a service attachment. Example:
            projects/{projectNumOrId}/regions/{region}/serviceAttachments/{resourceId}.
          type: string
      description: The PSC configurations on producer side.
    GoogleLongrunningCancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      id: GoogleLongrunningCancelOperationRequest
      type: object
      properties: {}
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      type: object
      id: OperationMetadata
      properties:
        endTime:
          format: google-datetime
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
        requestedCancellation:
          type: boolean
          readOnly: true
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
        target:
          readOnly: true
          type: string
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
        apiVersion:
          readOnly: true
          description: Output only. API version used to start the operation.
          type: string
        statusMessage:
          readOnly: true
          type: string
          description: Output only. Human-readable status of the operation, if any.
        verb:
          readOnly: true
          type: string
          description: Output only. Name of the verb executed by the operation.
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
          readOnly: true
    LinkedRouterApplianceInstances:
      type: object
      properties:
        siteToSiteDataTransfer:
          type: boolean
          description: >-
            A value that controls whether site-to-site data transfer is enabled
            for these resources. Data transfer is available only in [supported
            locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
        instances:
          description: The list of router appliance instances.
          type: array
          items:
            $ref: '#/components/schemas/RouterApplianceInstance'
        vpcNetwork:
          description: >-
            Output only. The VPC network where these router appliance instances
            are located.
          type: string
          readOnly: true
      description: >-
        A collection of router appliance instances. If you configure multiple
        router appliance instances to receive data from the same set of sites
        outside of Google Cloud, we recommend that you associate those instances
        with the same spoke.
      id: LinkedRouterApplianceInstances
    Expr:
      type: object
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      id: Expr
      properties:
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
        description:
          type: string
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
    Location:
      id: Location
      properties:
        labels:
          additionalProperties:
            type: string
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
        name:
          type: string
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
      type: object
      description: A resource that represents a Google Cloud location.
    Hub:
      description: >-
        A Network Connectivity Center hub is a global management resource to
        which you attach spokes. A single hub can contain spokes from multiple
        regions. However, if any of a hub's spokes use the site-to-site data
        transfer feature, the resources associated with those spokes must all be
        in the same VPC network. Spokes that do not use site-to-site data
        transfer can be associated with any VPC network in your project.
      properties:
        description:
          description: An optional description of the hub.
          type: string
        createTime:
          format: google-datetime
          description: Output only. The time the hub was created.
          readOnly: true
          type: string
        state:
          description: Output only. The current lifecycle state of this hub.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - UPDATING
          type: string
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's update operation is in progress.
          readOnly: true
        updateTime:
          description: Output only. The time the hub was last updated.
          type: string
          format: google-datetime
          readOnly: true
        uniqueId:
          type: string
          readOnly: true
          description: >-
            Output only. The Google-generated UUID for the hub. This value is
            unique across all hub resources. If a hub is deleted and another
            with the same name is created, the new hub is assigned a different
            unique_id.
        routingVpcs:
          type: array
          description: >-
            The VPC networks associated with this hub's spokes. This field is
            read-only. Network Connectivity Center automatically populates it
            based on the set of spokes attached to the hub.
          items:
            $ref: '#/components/schemas/RoutingVPC'
        name:
          description: >-
            Immutable. The name of the hub. Hub names must be unique. They use
            the following form:
            `projects/{project_number}/locations/global/hubs/{hub_id}`
          type: string
        labels:
          description: >-
            Optional labels in key:value format. For more information about
            labels, see [Requirements for
            labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
          additionalProperties:
            type: string
          type: object
      type: object
      id: Hub
    Binding:
      type: object
      properties:
        role:
          type: string
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`.
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
        members:
          type: array
          items:
            type: string
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding.
      description: Associates `members`, or principals, with a `role`.
      id: Binding
    LinkedInterconnectAttachments:
      properties:
        siteToSiteDataTransfer:
          type: boolean
          description: >-
            A value that controls whether site-to-site data transfer is enabled
            for these resources. Data transfer is available only in [supported
            locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
        vpcNetwork:
          type: string
          readOnly: true
          description: >-
            Output only. The VPC network where these VLAN attachments are
            located.
        uris:
          type: array
          items:
            type: string
          description: The URIs of linked interconnect attachment resources
      description: >-
        A collection of VLAN attachment resources. These resources should be
        redundant attachments that all advertise the same prefixes to Google
        Cloud. Alternatively, in active/passive configurations, all attachments
        should be capable of advertising the same prefixes.
      type: object
      id: LinkedInterconnectAttachments
    ListInternalRangesResponse:
      id: ListInternalRangesResponse
      type: object
      properties:
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        internalRanges:
          description: Internal ranges to be returned.
          items:
            $ref: '#/components/schemas/InternalRange'
          type: array
        nextPageToken:
          description: >-
            The next pagination token in the List response. It should be used as
            page_token for the following request. An empty value means no more
            result.
          type: string
      description: Response for InternalRange.ListInternalRanges
    ConsumerPscConfig:
      properties:
        state:
          readOnly: true
          enumDescriptions:
            - Default state, when Connection Map is created initially.
            - >-
              Set when policy and map configuration is valid, and their matching
              can lead to allowing creation of PSC Connections subject to other
              constraints like connections limit.
            - >-
              No Service Connection Policy found for this network and Service
              Class
          enum:
            - STATE_UNSPECIFIED
            - VALID
            - CONNECTION_POLICY_MISSING
          description: >-
            Output only. Overall state of PSC Connections management for this
            consumer psc config.
          type: string
        project:
          description: >-
            The consumer project where PSC connections are allowed to be created
            in.
          type: string
        network:
          type: string
          description: >-
            The resource path of the consumer network where PSC connections are
            allowed to be created in. Note, this network does not need be in the
            ConsumerPscConfig.project in the case of SharedVPC. Example:
            projects/{projectNumOrId}/global/networks/{networkId}.
        disableGlobalAccess:
          type: boolean
          description: >-
            This is used in PSC consumer ForwardingRule to control whether the
            PSC endpoint can be accessed from another region.
      id: ConsumerPscConfig
      description: Allow the producer to specify which consumers can connect to it.
      type: object
    GoogleLongrunningOperation:
      type: object
      id: GoogleLongrunningOperation
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
    ListServiceClassesResponse:
      id: ListServiceClassesResponse
      description: Response for ListServiceClasses.
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            The next pagination token in the List response. It should be used as
            page_token for the following request. An empty value means no more
            result.
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        serviceClasses:
          items:
            $ref: '#/components/schemas/ServiceClass'
          type: array
          description: ServiceClasses to be returned.
    LocationMetadata:
      properties:
        locationFeatures:
          items:
            enum:
              - LOCATION_FEATURE_UNSPECIFIED
              - SITE_TO_CLOUD_SPOKES
              - SITE_TO_SITE_SPOKES
            type: string
            enumDescriptions:
              - No publicly supported feature in this location
              - Site-to-cloud spokes are supported in this location
              - Site-to-site spokes are supported in this location
          type: array
          description: List of supported features
      description: Metadata about locations
      type: object
      id: LocationMetadata
    InternalRange:
      description: >-
        The internal range resource for IPAM operations within a VPC network.
        Used to represent a private address range along with behavioral
        characterstics of that range (its usage and peering behavior).
        Networking resources can link to this range if they are created as
        belonging to it.
      type: object
      id: InternalRange
      properties:
        createTime:
          type: string
          format: google-datetime
          description: Time when the internal range was created.
        updateTime:
          format: google-datetime
          type: string
          description: Time when the internal range was updated.
        name:
          description: >-
            Immutable. The name of an internal range. Format:
            projects/{project}/locations/{location}/internalRanges/{internal_range}
            See: https://google.aip.dev/122#fields-representing-resource-names
          type: string
        labels:
          description: User-defined labels.
          additionalProperties:
            type: string
          type: object
        description:
          type: string
          description: A description of this resource.
        prefixLength:
          type: integer
          format: int32
          description: >-
            An alternate to ip_cidr_range. Can be set when trying to create a
            reservation that automatically finds a free range of the given size.
            If both ip_cidr_range and prefix_length are set, there is an error
            if the range sizes do not match. Can also be used during updates to
            change the range size.
        overlaps:
          type: array
          items:
            enum:
              - OVERLAP_UNSPECIFIED
              - OVERLAP_ROUTE_RANGE
            type: string
            enumDescriptions:
              - No overlap overrides.
              - >-
                Allow creation of static routes more specific that the current
                internal range.
          description: >-
            Optional. Types of resources that are allowed to overlap with the
            current internal range.
        users:
          readOnly: true
          description: >-
            Output only. The list of resources that refer to this internal
            range. Resources that use the internal range for their range
            allocation are referred to as users of the range. Other resources
            mark themselves as users while doing so by creating a reference to
            this internal range. Having a user, based on this reference,
            prevents deletion of the internal range referred to. Can be empty.
          items:
            type: string
          type: array
        network:
          type: string
          description: >-
            The URL or resource ID of the network in which to reserve the
            internal range. The network cannot be deleted if there are any
            reserved internal ranges referring to it. Legacy networks are not
            supported. This can only be specified for a global internal address.
            Example: - URL:
            /compute/v1/projects/{project}/global/networks/{resourceId} - ID:
            network123
        ipCidrRange:
          description: The IP range that this internal range defines.
          type: string
        targetCidrRange:
          description: >-
            Optional. Can be set to narrow down or pick a different address
            space while searching for a free range. If not set, defaults to the
            "10.0.0.0/8" address space. This can be used to search in other
            rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or
            non-rfc-1918 address spaces used in the VPC.
          type: array
          items:
            type: string
        usage:
          enumDescriptions:
            - >-
              Unspecified usage is allowed in calls which identify the resource
              by other fields and do not need Usage set to complete. These are,
              i.e.: GetInternalRange and DeleteInternalRange. Usage needs to be
              specified explicitly in CreateInternalRange or UpdateInternalRange
              calls.
            - >-
              A VPC resource can use the reserved CIDR block by associating it
              with the internal range resource if usage is set to FOR_VPC.
            - >-
              Ranges created with EXTERNAL_TO_VPC cannot be associated with VPC
              resources and are meant to block out address ranges for various
              use cases, like for example, usage on-prem, with dynamic route
              announcements via interconnect.
          type: string
          enum:
            - USAGE_UNSPECIFIED
            - FOR_VPC
            - EXTERNAL_TO_VPC
          description: The type of usage set for this InternalRange.
        peering:
          description: The type of peering set for this internal range.
          enumDescriptions:
            - >-
              If Peering is left unspecified in CreateInternalRange or
              UpdateInternalRange, it will be defaulted to FOR_SELF.
            - >-
              This is the default behavior and represents the case that this
              internal range is intended to be used in the VPC in which it is
              created and is accessible from its peers. This implies that peers
              or peers-of-peers cannot use this range.
            - >-
              This behavior can be set when the internal range is being reserved
              for usage by peers. This means that no resource within the VPC in
              which it is being created can use this to associate with a VPC
              resource, but one of the peers can. This represents donating a
              range for peers to use.
            - >-
              This behavior can be set when the internal range is being reserved
              for usage by the VPC in which it is created, but not shared with
              peers. In a sense, it is local to the VPC. This can be used to
              create internal ranges for various purposes like
              HTTP_INTERNAL_LOAD_BALANCER or for Interconnect routes that are
              not shared with peers. This also implies that peers cannot use
              this range in a way that is visible to this VPC, but can re-use
              this range as long as it is NOT_SHARED from the peer VPC, too.
          type: string
          enum:
            - PEERING_UNSPECIFIED
            - FOR_SELF
            - FOR_PEER
            - NOT_SHARED
    ListServiceConnectionPoliciesResponse:
      properties:
        serviceConnectionPolicies:
          type: array
          description: ServiceConnectionPolicies to be returned.
          items:
            $ref: '#/components/schemas/ServiceConnectionPolicy'
        nextPageToken:
          type: string
          description: >-
            The next pagination token in the List response. It should be used as
            page_token for the following request. An empty value means no more
            result.
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
      description: Response for ListServiceConnectionPolicies.
      id: ListServiceConnectionPoliciesResponse
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          type: array
          description: >-
            A list of locations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Location'
      id: ListLocationsResponse
      type: object
    ListHubsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            The token for the next page of the response. To see more results,
            use this value as the page_token for your next request. If this
            value is empty, there are no more results.
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        hubs:
          description: The requested hubs.
          type: array
          items:
            $ref: '#/components/schemas/Hub'
      description: Response for HubService.ListHubs method.
      type: object
      id: ListHubsResponse
    TestIamPermissionsResponse:
      type: object
      properties:
        permissions:
          type: array
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
    ServiceClass:
      id: ServiceClass
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. Time when the ServiceClass was created.
          type: string
        serviceConnectionMaps:
          type: array
          description: >-
            Output only. URIs of all Service Connection Maps using this service
            class.
          readOnly: true
          items:
            type: string
        serviceClass:
          type: string
          readOnly: true
          description: >-
            Output only. The generated service class name. Use this name to
            refer to the Service class in Service Connection Maps and Service
            Connection Policies.
        description:
          description: A description of this resource.
          type: string
        name:
          description: >-
            Immutable. The name of a ServiceClass resource. Format:
            projects/{project}/locations/{location}/serviceClasses/{service_class}
            See: https://google.aip.dev/122#fields-representing-resource-names
          type: string
        labels:
          description: User-defined labels.
          type: object
          additionalProperties:
            type: string
        updateTime:
          readOnly: true
          description: Output only. Time when the ServiceClass was updated.
          type: string
          format: google-datetime
      type: object
      description: 'The ServiceClass resource. Next id: 8'
    ServiceConnectionPolicy:
      id: ServiceConnectionPolicy
      type: object
      properties:
        network:
          type: string
          description: >-
            The resource path of the consumer network. Example: -
            projects/{projectNumOrId}/global/networks/{resourceId}.
        updateTime:
          format: google-datetime
          description: Output only. Time when the ServiceConnectionMap was updated.
          type: string
          readOnly: true
        pscConfig:
          $ref: '#/components/schemas/PscConfig'
          description: >-
            Configuration used for Private Service Connect connections. Used
            when Infrastructure is PSC.
        name:
          description: >-
            Immutable. The name of a ServiceConnectionPolicy. Format:
            projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy}
            See: https://google.aip.dev/122#fields-representing-resource-names
          type: string
        infrastructure:
          enum:
            - INFRASTRUCTURE_UNSPECIFIED
            - PSC
          readOnly: true
          type: string
          description: >-
            Output only. The type of underlying resources used to create the
            connection.
          enumDescriptions:
            - An invalid infrastructure as the default case.
            - Private Service Connect is used for connections.
        pscConnections:
          description: >-
            Output only. [Output only] Information about each Private Service
            Connect connection.
          readOnly: true
          items:
            $ref: '#/components/schemas/PscConnection'
          type: array
        createTime:
          type: string
          format: google-datetime
          description: Output only. Time when the ServiceConnectionMap was created.
          readOnly: true
        description:
          description: A description of this resource.
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: User-defined labels.
        serviceClass:
          type: string
          description: >-
            The service class identifier for which this ServiceConnectionPolicy
            is for. The service class identifier is a unique, symbolic
            representation of a ServiceClass. It is provided by the Service
            Producer. Google services have a prefix of gcp. For example,
            gcp-cloud-sql. 3rd party services do not. For example,
            test-service-a3dfcx.
      description: 'The ServiceConnectionPolicy resource. Next id: 11'
    SetIamPolicyRequest:
      properties:
        updateMask:
          format: google-fieldmask
          type: string
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
      id: SetIamPolicyRequest
      type: object
      description: Request message for `SetIamPolicy` method.
    ListServiceConnectionTokensResponse:
      description: Response for ListServiceConnectionTokens.
      properties:
        nextPageToken:
          type: string
          description: >-
            The next pagination token in the List response. It should be used as
            page_token for the following request. An empty value means no more
            result.
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        serviceConnectionTokens:
          description: ServiceConnectionTokens to be returned.
          type: array
          items:
            $ref: '#/components/schemas/ServiceConnectionToken'
      id: ListServiceConnectionTokensResponse
      type: object
    ListServiceConnectionMapsResponse:
      description: Response for ListServiceConnectionMaps.
      type: object
      properties:
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        serviceConnectionMaps:
          items:
            $ref: '#/components/schemas/ServiceConnectionMap'
          type: array
          description: ServiceConnectionMaps to be returned.
        nextPageToken:
          type: string
          description: >-
            The next pagination token in the List response. It should be used as
            page_token for the following request. An empty value means no more
            result.
      id: ListServiceConnectionMapsResponse
    GoogleLongrunningListOperationsResponse:
      id: GoogleLongrunningListOperationsResponse
      type: object
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
    ServiceConnectionToken:
      properties:
        createTime:
          format: google-datetime
          description: Output only. Time when the ServiceConnectionToken was created.
          readOnly: true
          type: string
        token:
          readOnly: true
          description: Output only. The token generated by Automation.
          type: string
        description:
          description: A description of this resource.
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
          description: User-defined labels.
        network:
          description: >-
            The resource path of the network associated with this token.
            Example: projects/{projectNumOrId}/global/networks/{resourceId}.
          type: string
        expireTime:
          description: Output only. The time to which this token is valid.
          readOnly: true
          format: google-datetime
          type: string
        updateTime:
          format: google-datetime
          description: Output only. Time when the ServiceConnectionToken was updated.
          readOnly: true
          type: string
        name:
          type: string
          description: >-
            Immutable. The name of a ServiceConnectionToken. Format:
            projects/{project}/locations/{location}/ServiceConnectionTokens/{service_connection_token}
            See: https://google.aip.dev/122#fields-representing-resource-names
      type: object
      description: 'The ServiceConnectionToken resource. Next id: 9'
      id: ServiceConnectionToken
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
        service:
          type: string
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
      id: AuditConfig
      type: object
    Empty:
      properties: {}
      type: object
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      id: Empty
    ListSpokesResponse:
      description: The response for HubService.ListSpokes.
      id: ListSpokesResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: >-
            The token for the next page of the response. To see more results,
            use this value as the page_token for your next request. If this
            value is empty, there are no more results.
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        spokes:
          description: The requested spokes.
          items:
            $ref: '#/components/schemas/Spoke'
          type: array
    AuditLogConfig:
      id: AuditLogConfig
      type: object
      properties:
        exemptedMembers:
          type: array
          items:
            type: string
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
        logType:
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
    RouterApplianceInstance:
      description: >-
        A router appliance instance is a Compute Engine virtual machine (VM)
        instance that acts as a BGP speaker. A router appliance instance is
        specified by the URI of the VM and the internal IP address of one of the
        VM's network interfaces.
      properties:
        ipAddress:
          type: string
          description: The IP address on the VM to use for peering.
        virtualMachine:
          description: The URI of the VM.
          type: string
      id: RouterApplianceInstance
      type: object
    Spoke:
      id: Spoke
      properties:
        uniqueId:
          readOnly: true
          description: >-
            Output only. The Google-generated UUID for the spoke. This value is
            unique across all spoke resources. If a spoke is deleted and another
            with the same name is created, the new spoke is assigned a different
            unique_id.
          type: string
        state:
          enumDescriptions:
            - No state information available
            - The resource's create operation is in progress.
            - The resource is active
            - The resource's delete operation is in progress.
            - The resource's update operation is in progress.
          description: Output only. The current lifecycle state of this spoke.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
            - UPDATING
          readOnly: true
        linkedRouterApplianceInstances:
          description: Router appliance instances that are associated with the spoke.
          $ref: '#/components/schemas/LinkedRouterApplianceInstances'
        createTime:
          format: google-datetime
          description: Output only. The time the spoke was created.
          readOnly: true
          type: string
        updateTime:
          format: google-datetime
          description: Output only. The time the spoke was last updated.
          readOnly: true
          type: string
        description:
          type: string
          description: An optional description of the spoke.
        hub:
          type: string
          description: Immutable. The name of the hub that this spoke is attached to.
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            Optional labels in key:value format. For more information about
            labels, see [Requirements for
            labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
        linkedInterconnectAttachments:
          description: VLAN attachments that are associated with the spoke.
          $ref: '#/components/schemas/LinkedInterconnectAttachments'
        name:
          description: >-
            Immutable. The name of the spoke. Spoke names must be unique. They
            use the following form:
            `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
          type: string
        linkedVpnTunnels:
          description: VPN tunnels that are associated with the spoke.
          $ref: '#/components/schemas/LinkedVpnTunnels'
      type: object
      description: >-
        A Network Connectivity Center spoke represents one or more network
        connectivity resources. When you create a spoke, you associate it with a
        hub. You must also identify a value for exactly one of the following
        fields: * linked_vpn_tunnels * linked_interconnect_attachments *
        linked_router_appliance_instances
    RoutingVPC:
      properties:
        requiredForNewSiteToSiteDataTransferSpokes:
          type: boolean
          description: >-
            Output only. If true, indicates that this VPC network is currently
            associated with spokes that use the data transfer feature (spokes
            where the site_to_site_data_transfer field is set to true). If you
            create new spokes that use data transfer, they must be associated
            with this VPC network. At most, one VPC network will have this field
            set to true.
          readOnly: true
        uri:
          type: string
          description: The URI of the VPC network.
      type: object
      id: RoutingVPC
      description: >-
        RoutingVPC contains information about the VPC networks associated with
        the spokes of a Network Connectivity Center hub.
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      description: Request message for `TestIamPermissions` method.
    PscConnection:
      description: Information about a specific Private Service Connect connection.
      id: PscConnection
      properties:
        pscConnectionId:
          description: The PSC connection id of the PSC forwarding rule.
          type: string
        consumerForwardingRule:
          type: string
          description: >-
            The resource reference of the PSC Forwarding Rule within the
            consumer VPC.
        errorType:
          enum:
            - CONNECTION_ERROR_TYPE_UNSPECIFIED
            - ERROR_INTERNAL
            - ERROR_CONSUMER_SIDE
            - ERROR_PRODUCER_SIDE
          type: string
          description: >-
            The error type indicates whether the error is consumer facing,
            producer facing or system internal.
          enumDescriptions:
            - An invalid error type as the default case.
            - The error is due to Service Automation system internal.
            - The error is due to the setup on consumer side.
            - The error is due to the setup on producer side.
        error:
          description: The most recent error during operating this connection.
          $ref: '#/components/schemas/GoogleRpcStatus'
        consumerAddress:
          type: string
          description: The resource reference of the consumer address.
        gceOperation:
          description: The last Compute Engine operation to setup PSC connection.
          type: string
        consumerTargetProject:
          type: string
          description: The project where the PSC connection is created.
        state:
          description: State of the PSC Connection
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - FAILED
            - CREATING
            - DELETING
          enumDescriptions:
            - An invalid state as the default case.
            - The connection is fully established and ready to use.
            - >-
              The connection is not functional since some resources on the
              connection fail to be created.
            - The connection is being created.
            - The connection is being deleted.
          type: string
      type: object
    ConsumerPscConnection:
      description: PSC connection details on consumer side.
      id: ConsumerPscConnection
      properties:
        errorType:
          enumDescriptions:
            - An invalid error type as the default case.
            - The error is due to Service Automation system internal.
            - The error is due to the setup on consumer side.
            - The error is due to the setup on producer side.
          enum:
            - CONNECTION_ERROR_TYPE_UNSPECIFIED
            - ERROR_INTERNAL
            - ERROR_CONSUMER_SIDE
            - ERROR_PRODUCER_SIDE
          type: string
          description: >-
            The error type indicates whether the error is consumer facing,
            producer facing or system internal.
        state:
          type: string
          description: The state of the PSC connection.
          enumDescriptions:
            - An invalid state as the default case.
            - The connection is fully established and ready to use.
            - >-
              The connection is not functional since some resources on the
              connection fail to be created.
            - The connection is being created.
            - The connection is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - FAILED
            - CREATING
            - DELETING
        gceOperation:
          type: string
          description: The last Compute Engine operation to setup PSC connection.
        network:
          type: string
          description: >-
            The consumer network whose PSC forwarding rule is connected to the
            service attachments in this service connection map. Note that the
            network could be on a different project (shared VPC).
        error:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The most recent error during operating this connection.
        ip:
          type: string
          description: >-
            The IP literal allocated on the consumer network for the PSC
            forwarding rule that is created to connect to the producer service
            attachment in this service connection map.
        forwardingRule:
          description: >-
            The URI of the consumer forwarding rule created. Example:
            projects/{projectNumOrId}/regions/us-east1/networks/{resourceId}.
          type: string
        project:
          type: string
          description: >-
            The consumer project whose PSC forwarding rule is connected to the
            service attachments in this service connection map.
        serviceAttachmentUri:
          description: >-
            The URI of a service attachment which is the target of the PSC
            connection.
          type: string
        pscConnectionId:
          type: string
          description: >-
            The PSC connection id of the PSC forwarding rule connected to the
            service attachments in this service connection map.
      type: object
    LinkedVpnTunnels:
      id: LinkedVpnTunnels
      properties:
        siteToSiteDataTransfer:
          description: >-
            A value that controls whether site-to-site data transfer is enabled
            for these resources. Data transfer is available only in [supported
            locations](https://cloud.google.com/network-connectivity/docs/network-connectivity-center/concepts/locations).
          type: boolean
        vpcNetwork:
          description: Output only. The VPC network where these VPN tunnels are located.
          readOnly: true
          type: string
        uris:
          type: array
          items:
            type: string
          description: The URIs of linked VPN tunnel resources.
      type: object
      description: >-
        A collection of Cloud VPN tunnel resources. These resources should be
        redundant HA VPN tunnels that all advertise the same prefixes to Google
        Cloud. Alternatively, in a passive/active configuration, all tunnels
        should be capable of advertising the same prefixes.
    GoogleRpcStatus:
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
      id: GoogleRpcStatus
      type: object
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
    Policy:
      properties:
        auditConfigs:
          items:
            $ref: '#/components/schemas/AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          format: int32
          type: integer
        bindings:
          type: array
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: '#/components/schemas/Binding'
      type: object
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
        user:mike@example.com - group:admins@example.com - domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For
        a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      id: Policy
    PscConfig:
      properties:
        subnetworks:
          description: >-
            The resource paths of subnetworks to use for IP address management.
            Example:
            projects/{projectNumOrId}/regions/{region}/subnetworks/{resourceId}.
          items:
            type: string
          type: array
        limit:
          type: string
          description: Max number of PSC connections for this policy.
          format: int64
      description: >-
        Configuration used for Private Service Connect connections. Used when
        Infrastructure is PSC.
      id: PscConfig
      type: object
    ServiceConnectionMap:
      id: ServiceConnectionMap
      description: 'The ServiceConnectionMap resource. Next id: 14'
      type: object
      properties:
        serviceClassUri:
          type: string
          description: Output only. The service class uri this ServiceConnectionMap is for.
          readOnly: true
        token:
          description: >-
            The token provided by the consumer. This token authenticates that
            the consumer can create a connecton within the specified project and
            network.
          type: string
        description:
          type: string
          description: A description of this resource.
        producerPscConfigs:
          description: The PSC configurations on producer side.
          type: array
          items:
            $ref: '#/components/schemas/ProducerPscConfig'
        name:
          type: string
          description: >-
            Immutable. The name of a ServiceConnectionMap. Format:
            projects/{project}/locations/{location}/serviceConnectionMaps/{service_connection_map}
            See: https://google.aip.dev/122#fields-representing-resource-names
        infrastructure:
          type: string
          enum:
            - INFRASTRUCTURE_UNSPECIFIED
            - PSC
          readOnly: true
          description: >-
            Output only. The infrastructure used for connections between
            consumers/producers.
          enumDescriptions:
            - An invalid infrastructure as the default case.
            - Private Service Connect is used for connections.
        labels:
          additionalProperties:
            type: string
          type: object
          description: User-defined labels.
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. Time when the ServiceConnectionMap was updated.
        consumerPscConnections:
          type: array
          description: Output only. PSC connection details on consumer side.
          readOnly: true
          items:
            $ref: '#/components/schemas/ConsumerPscConnection'
        consumerPscConfigs:
          type: array
          description: The PSC configurations on consumer side.
          items:
            $ref: '#/components/schemas/ConsumerPscConfig'
        serviceClass:
          description: >-
            The service class identifier this ServiceConnectionMap is for. The
            user of ServiceConnectionMap create API needs to have
            networkconnecitivty.serviceclasses.use iam permission for the
            service class.
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Time when the ServiceConnectionMap was created.
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
    get:
      description: Gets information about a location.
      operationId: networkconnectivity.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: networkconnectivity.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/internalRanges/{internalRangesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single internal range.
      operationId: networkconnectivity.projects.locations.internalRanges.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalRange'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: internalRangesId
          required: true
          schema:
            type: string
      x-stackQL-resource: internal_ranges
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single internal range.
      operationId: networkconnectivity.projects.locations.internalRanges.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalRange'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: internalRangesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: internal_ranges
      x-stackQL-verb: exec
    delete:
      description: Deletes a single internal range.
      operationId: networkconnectivity.projects.locations.internalRanges.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: internalRangesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: internal_ranges
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/internalRanges:
    parameters: *ref_1
    post:
      description: Creates a new internal range in a given project and location.
      operationId: networkconnectivity.projects.locations.internalRanges.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalRange'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: internalRangeId
          schema:
            type: string
      x-stackQL-resource: internal_ranges
      x-stackQL-verb: insert
    get:
      description: Lists internal ranges in a given project and location.
      operationId: networkconnectivity.projects.locations.internalRanges.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInternalRangesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: internal_ranges
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        networkconnectivity.projects.locations.serviceConnectionMaps.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: service_connection_maps_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps:
    parameters: *ref_1
    post:
      description: Creates a new ServiceConnectionMap in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionMap'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceConnectionMapId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: service_connection_maps
      x-stackQL-verb: insert
    get:
      description: Lists ServiceConnectionMaps in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceConnectionMapsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: service_connection_maps
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ServiceConnectionMap.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConnectionMap'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_maps
      x-stackQL-verb: select
    delete:
      description: Deletes a single ServiceConnectionMap.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: service_connection_maps
      x-stackQL-verb: delete
    patch:
      description: Updates the parameters of a single ServiceConnectionMap.
      operationId: networkconnectivity.projects.locations.serviceConnectionMaps.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionMap'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: service_connection_maps
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        networkconnectivity.projects.locations.serviceConnectionMaps.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_maps_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionMaps/{serviceConnectionMapsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        networkconnectivity.projects.locations.serviceConnectionMaps.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionMapsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_maps_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens/{serviceConnectionTokensId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ServiceConnectionToken.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConnectionToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionTokensId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_tokens
      x-stackQL-verb: select
    delete:
      description: Deletes a single ServiceConnectionToken.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionTokensId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: service_connection_tokens
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionTokens:
    parameters: *ref_1
    post:
      description: Creates a new ServiceConnectionToken in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionToken'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceConnectionTokenId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: service_connection_tokens
      x-stackQL-verb: insert
    get:
      description: Lists ServiceConnectionTokens in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionTokens.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceConnectionTokensResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: service_connection_tokens
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ServiceClass.
      operationId: networkconnectivity.projects.locations.serviceClasses.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceClass'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_classes
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single ServiceClass.
      operationId: networkconnectivity.projects.locations.serviceClasses.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceClass'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: service_classes
      x-stackQL-verb: exec
    delete:
      description: Deletes a single ServiceClass.
      operationId: networkconnectivity.projects.locations.serviceClasses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: service_classes
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/serviceClasses:
    parameters: *ref_1
    get:
      description: Lists ServiceClasses in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceClasses.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceClassesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: service_classes
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: networkconnectivity.projects.locations.serviceClasses.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_classes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.serviceClasses.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: service_classes_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/serviceClasses/{serviceClassesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: networkconnectivity.projects.locations.serviceClasses.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceClassesId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_classes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:
    parameters: *ref_1
    get:
      description: Gets details about a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spoke'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
      x-stackQL-resource: spokes
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spoke'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: spokes
      x-stackQL-verb: exec
    delete:
      description: Deletes a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: spokes
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: networkconnectivity.projects.locations.spokes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
      x-stackQL-resource: spokes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/spokes:
    parameters: *ref_1
    get:
      description: >-
        Lists the Network Connectivity Center spokes in a specified project and
        location.
      operationId: networkconnectivity.projects.locations.spokes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSpokesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: spokes
      x-stackQL-verb: select
    post:
      description: Creates a Network Connectivity Center spoke.
      operationId: networkconnectivity.projects.locations.spokes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spoke'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: spokeId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: spokes
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.spokes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: spokes_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/spokes/{spokesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: networkconnectivity.projects.locations.spokes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: spokesId
          required: true
          schema:
            type: string
      x-stackQL-resource: spokes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single ServiceConnectionPolicy.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceConnectionPolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_policies
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a single ServiceConnectionPolicy.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: service_connection_policies
      x-stackQL-verb: exec
    delete:
      description: Deletes a single ServiceConnectionPolicy.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: service_connection_policies
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        networkconnectivity.projects.locations.serviceConnectionPolicies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_policies_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies:
    parameters: *ref_1
    post:
      description: Creates a new ServiceConnectionPolicy in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceConnectionPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serviceConnectionPolicyId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: service_connection_policies
      x-stackQL-verb: insert
    get:
      description: Lists ServiceConnectionPolicies in a given project and location.
      operationId: networkconnectivity.projects.locations.serviceConnectionPolicies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceConnectionPoliciesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: service_connection_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        networkconnectivity.projects.locations.serviceConnectionPolicies.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: service_connection_policies_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/serviceConnectionPolicies/{serviceConnectionPoliciesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        networkconnectivity.projects.locations.serviceConnectionPolicies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: serviceConnectionPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_connection_policies_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/hubs:
    parameters: *ref_1
    post:
      description: Creates a new Network Connectivity Center hub in the specified project.
      operationId: networkconnectivity.projects.locations.global.hubs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hub'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: hubId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: hubs
      x-stackQL-verb: insert
    get:
      description: >-
        Lists the Network Connectivity Center hubs associated with a given
        project.
      operationId: networkconnectivity.projects.locations.global.hubs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHubsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: hubs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.global.hubs.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: hubs_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:
    parameters: *ref_1
    delete:
      description: Deletes a Network Connectivity Center hub.
      operationId: networkconnectivity.projects.locations.global.hubs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: hubs
      x-stackQL-verb: delete
    patch:
      description: >-
        Updates the description and/or labels of a Network Connectivity Center
        hub.
      operationId: networkconnectivity.projects.locations.global.hubs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hub'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: hubs
      x-stackQL-verb: exec
    get:
      description: Gets details about a Network Connectivity Center hub.
      operationId: networkconnectivity.projects.locations.global.hubs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hub'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
      x-stackQL-resource: hubs
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: networkconnectivity.projects.locations.global.hubs.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
      x-stackQL-resource: hubs_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: networkconnectivity.projects.locations.global.hubs.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
      x-stackQL-resource: hubs_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: networkconnectivity.projects.locations.global.hubs.groups.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: groups_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: networkconnectivity.projects.locations.global.hubs.groups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/hubs/{hubsId}/groups/{groupsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        networkconnectivity.projects.locations.global.hubs.groups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: hubsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: >-
        networkconnectivity.projects.locations.global.policyBasedRoutes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: policyBasedRoutesId
          required: true
          schema:
            type: string
      x-stackQL-resource: policy_based_routes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: >-
        networkconnectivity.projects.locations.global.policyBasedRoutes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: policyBasedRoutesId
          required: true
          schema:
            type: string
      x-stackQL-resource: policy_based_routes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/global/policyBasedRoutes/{policyBasedRoutesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: >-
        networkconnectivity.projects.locations.global.policyBasedRoutes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: policyBasedRoutesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: policy_based_routes_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: networkconnectivity.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLongrunningCancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: networkconnectivity.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: networkconnectivity.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: networkconnectivity.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
