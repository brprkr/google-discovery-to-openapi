openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Run Admin API
  description: >-
    Deploy and manage user provided container images that scale automatically
    based on incoming requests. The Cloud Run Admin API v1 follows the Knative
    Serving API specification, while v2 is aligned with Google Cloud AIP-based
    API standards, as described in https://google.aip.dev/.
  version: v1
  x-discovery-doc-revision: '20230618'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/run/
servers:
  - url: https://run.googleapis.com
components:
  schemas:
    LocalObjectReference:
      type: object
      description: >-
        Not supported by Cloud Run. LocalObjectReference contains enough
        information to let you locate the referenced object inside the same
        namespace.
      properties:
        name:
          description: Name of the referent.
          type: string
      id: LocalObjectReference
    RunJobRequest:
      description: Request message for creating a new execution of a job.
      properties:
        overrides:
          $ref: '#/components/schemas/Overrides'
          description: >-
            Optional. Private preview feature. Currently only available by
            invitation. Overrides specification for a given execution of a job.
            If provided, overrides will be applied to update the execution or
            task spec.
      type: object
      id: RunJobRequest
    Binding:
      properties:
        role:
          type: string
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`.
        condition:
          $ref: '#/components/schemas/Expr'
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          items:
            type: string
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding.
          type: array
      description: Associates `members`, or principals, with a `role`.
      type: object
      id: Binding
    RevisionStatus:
      id: RevisionStatus
      type: object
      properties:
        imageDigest:
          description: >-
            ImageDigest holds the resolved digest for the image specified within
            .Spec.Container.Image. The digest is resolved during the creation of
            Revision. This field holds the digest value regardless of whether a
            tag or digest was originally specified in the Container object.
          type: string
        observedGeneration:
          type: integer
          description: >-
            ObservedGeneration is the 'Generation' of the Revision that was last
            processed by the controller. Clients polling for completed
            reconciliation should poll until observedGeneration =
            metadata.generation, and the Ready condition's status is True or
            False.
          format: int32
        logUrl:
          type: string
          description: >-
            Optional. Specifies the generated logging url for this particular
            revision based on the revision url template specified in the
            controller's config.
        conditions:
          type: array
          description: >-
            Conditions communicate information about ongoing/complete
            reconciliation processes that bring the "spec" inline with the
            observed state of the world. As a Revision is being prepared, it
            will incrementally update conditions. Revision-specific conditions
            include: * `ResourcesAvailable`: `True` when underlying resources
            have been provisioned. * `ContainerHealthy`: `True` when the
            Revision readiness check completes. * `Active`: `True` when the
            Revision may receive traffic.
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
        serviceName:
          type: string
          description: Not currently used by Cloud Run.
      description: >-
        RevisionStatus communicates the observed state of the Revision (from the
        controller).
    EnvVarSource:
      properties:
        secretKeyRef:
          description: Selects a key (version) of a secret in Secret Manager.
          $ref: '#/components/schemas/SecretKeySelector'
        configMapKeyRef:
          $ref: '#/components/schemas/ConfigMapKeySelector'
          description: Not supported by Cloud Run. Not supported in Cloud Run.
      description: EnvVarSource represents a source for the value of an EnvVar.
      type: object
      id: EnvVarSource
    RevisionSpec:
      description: RevisionSpec holds the desired state of the Revision (from the client).
      properties:
        volumes:
          items:
            $ref: '#/components/schemas/Volume'
          type: array
        imagePullSecrets:
          description: Not supported by Cloud Run.
          items:
            $ref: '#/components/schemas/LocalObjectReference'
          type: array
        containers:
          description: >-
            Containers holds the single container that defines the unit of
            execution for this Revision. In the context of a Revision, we
            disallow a number of fields on this Container, including: name and
            lifecycle. In Cloud Run, only a single container may be provided.
          type: array
          items:
            $ref: '#/components/schemas/Container'
        serviceAccountName:
          description: >-
            Email address of the IAM service account associated with the
            revision of the service. The service account represents the identity
            of the running revision, and determines what permissions the
            revision has. If not provided, the revision will use the project's
            default service account.
          type: string
        enableServiceLinks:
          description: Not supported by Cloud Run.
          type: boolean
        containerConcurrency:
          format: int32
          type: integer
          description: >-
            ContainerConcurrency specifies the maximum allowed in-flight
            (concurrent) requests per container instance of the Revision. If not
            specified, defaults to 80.
        timeoutSeconds:
          type: integer
          format: int32
          description: >-
            TimeoutSeconds holds the max duration the instance is allowed for
            responding to a request. Cloud Run: defaults to 300 seconds (5
            minutes). Maximum allowed value is 3600 seconds (1 hour).
      type: object
      id: RevisionSpec
    TCPSocketAction:
      properties:
        host:
          type: string
          description: Not supported by Cloud Run.
        port:
          type: integer
          description: >-
            Port number to access on the container. Number must be in the range
            1 to 65535.
          format: int32
      type: object
      id: TCPSocketAction
      description: TCPSocketAction describes an action based on opening a socket
    OwnerReference:
      type: object
      id: OwnerReference
      properties:
        kind:
          type: string
          description: This is not supported or used by Cloud Run.
        controller:
          description: This is not supported or used by Cloud Run.
          type: boolean
        apiVersion:
          type: string
          description: This is not supported or used by Cloud Run.
        blockOwnerDeletion:
          description: This is not supported or used by Cloud Run.
          type: boolean
        uid:
          type: string
          description: This is not supported or used by Cloud Run.
        name:
          type: string
          description: This is not supported or used by Cloud Run.
      description: This is not supported or used by Cloud Run.
    Configuration:
      properties:
        apiVersion:
          type: string
          description: The API version for this call such as "serving.knative.dev/v1".
        kind:
          type: string
          description: The kind of resource, in this case always "Configuration".
        status:
          $ref: '#/components/schemas/ConfigurationStatus'
          description: >-
            Status communicates the observed state of the Configuration (from
            the controller).
        spec:
          $ref: '#/components/schemas/ConfigurationSpec'
          description: Spec holds the desired state of the Configuration (from the client).
        metadata:
          description: >-
            Metadata associated with this Configuration, including name,
            namespace, labels, and annotations.
          $ref: '#/components/schemas/ObjectMeta'
      description: >-
        Configuration represents the "floating HEAD" of a linear history of
        Revisions, and optionally how the containers those revisions reference
        are built. Users create new Revisions by updating the Configuration's
        spec. The "latest created" revision's name is available under status, as
        is the "latest ready" revision's name.
      type: object
      id: Configuration
    ConfigMapEnvSource:
      properties:
        optional:
          type: boolean
          description: Specify whether the ConfigMap must be defined.
        localObjectReference:
          description: >-
            This field should not be used directly as it is meant to be inlined
            directly into the message. Use the "name" field instead.
          $ref: '#/components/schemas/LocalObjectReference'
        name:
          type: string
          description: The ConfigMap to select from.
      id: ConfigMapEnvSource
      description: >-
        Not supported by Cloud Run. ConfigMapEnvSource selects a ConfigMap to
        populate the environment variables with. The contents of the target
        ConfigMap's Data field will represent the key-value pairs as environment
        variables.
      type: object
    ConfigurationStatus:
      description: >-
        ConfigurationStatus communicates the observed state of the Configuration
        (from the controller).
      id: ConfigurationStatus
      properties:
        latestCreatedRevisionName:
          description: >-
            LatestCreatedRevisionName is the last revision that was created from
            this Configuration. It might not be ready yet, so for the latest
            ready revision, use LatestReadyRevisionName.
          type: string
        latestReadyRevisionName:
          description: >-
            LatestReadyRevisionName holds the name of the latest Revision
            stamped out from this Configuration that has had its "Ready"
            condition become "True".
          type: string
        conditions:
          description: >-
            Conditions communicate information about ongoing/complete
            reconciliation processes that bring the "spec" inline with the
            observed state of the world.
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          type: array
        observedGeneration:
          format: int32
          type: integer
          description: >-
            ObservedGeneration is the 'Generation' of the Configuration that was
            last processed by the controller. The observed generation is updated
            even if the controller failed to process the spec and create the
            Revision. Clients polling for completed reconciliation should poll
            until observedGeneration = metadata.generation, and the Ready
            condition's status is True or False.
      type: object
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      properties:
        auditLogConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogConfig'
          description: The configuration for logging of each type of permission.
        service:
          type: string
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
      type: object
      id: AuditConfig
    TestIamPermissionsRequest:
      type: object
      id: TestIamPermissionsRequest
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
      description: Request message for `TestIamPermissions` method.
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      id: TestIamPermissionsResponse
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
    TrafficTarget:
      id: TrafficTarget
      properties:
        latestRevision:
          type: boolean
          description: >-
            Uses the "status.latestReadyRevisionName" of the Service to
            determine the traffic target. When it changes, traffic will
            automatically migrate from the prior "latest ready" revision to the
            new one. This field must be false if RevisionName is set. This field
            defaults to true otherwise. If the field is set to true on Status,
            this means that the Revision was resolved from the Service's latest
            ready revision.
        percent:
          type: integer
          description: >-
            Percent specifies percent of the traffic to this Revision or
            Configuration. This defaults to zero if unspecified.
          format: int32
        revisionName:
          type: string
          description: >-
            Points this traffic target to a specific Revision. This field is
            mutually exclusive with latest_revision.
        configurationName:
          description: '[Deprecated] Not supported in Cloud Run. It must be empty.'
          type: string
        url:
          type: string
          readOnly: true
          description: >-
            Output only. URL displays the URL for accessing tagged traffic
            targets. URL is displayed in status, and is disallowed on spec. URL
            must contain a scheme (e.g. https://) and a hostname, but may not
            contain anything else (e.g. basic auth, url path, etc.)
        tag:
          description: >-
            Tag is used to expose a dedicated url for referencing this target
            exclusively.
          type: string
      type: object
      description: TrafficTarget holds a single entry of the routing table for a Route.
    GoogleRpcStatus:
      type: object
      properties:
        details:
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
        code:
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: GoogleRpcStatus
    ExecAction:
      id: ExecAction
      description: >-
        Not supported by Cloud Run. ExecAction describes a "run in container"
        action.
      properties:
        command:
          type: array
          description: >-
            Command is the command line to execute inside the container, the
            working directory for the command is root ('/') in the container's
            filesystem. The command is simply exec'd, it is not run inside a
            shell, so traditional shell instructions ('|', etc) won't work. To
            use a shell, you need to explicitly call out to that shell. Exit
            status of 0 is treated as live/healthy and non-zero is unhealthy.
          items:
            type: string
      type: object
    EmptyDirVolumeSource:
      id: EmptyDirVolumeSource
      type: object
      description: >-
        Ephemeral storage which can be backed by real disks (HD, SSD), network
        storage or memory (i.e. tmpfs). For now only in memory (tmpfs) is
        supported. It is ephemeral in the sense that when the sandbox is taken
        down, the data is destroyed with it (it does not persist across sandbox
        runs).
      properties:
        medium:
          description: >-
            The medium on which the data is stored. The default is "" which
            means to use the node's default medium. Must be an empty string
            (default) or Memory. More info:
            https://kubernetes.io/docs/concepts/storage/volumes#emptydir
            +optional
          type: string
        sizeLimit:
          description: >-
            Limit on the storage usable by this EmptyDir volume. The size limit
            is also applicable for memory medium. The maximum usage on memory
            medium EmptyDir would be the minimum value between the SizeLimit
            specified here and the sum of memory limits of all containers in a
            pod. This field's values are of the 'Quantity' k8s type:
            https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/.
            The default is nil which means that the limit is undefined. More
            info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
          type: string
    TaskAttemptResult:
      type: object
      properties:
        exitCode:
          description: >-
            Optional. The exit code of this attempt. This may be unset if the
            container was unable to exit cleanly with a code due to some other
            failure. See status field for possible failure details.
          format: int32
          type: integer
        status:
          description: >-
            Optional. The status of this attempt. If the status code is OK, then
            the attempt succeeded.
          $ref: '#/components/schemas/GoogleRpcStatus'
      description: Result of a task attempt.
      id: TaskAttemptResult
    ListConfigurationsResponse:
      id: ListConfigurationsResponse
      type: object
      description: ListConfigurationsResponse is a list of Configuration resources.
      properties:
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        kind:
          type: string
          description: The kind of this resource, in this case "ConfigurationList".
        items:
          type: array
          items:
            $ref: '#/components/schemas/Configuration'
          description: List of Configurations.
        metadata:
          $ref: '#/components/schemas/ListMeta'
          description: Metadata associated with this Configuration list.
        apiVersion:
          type: string
          description: The API version for this call such as "serving.knative.dev/v1".
    ExecutionSpec:
      properties:
        parallelism:
          format: int32
          description: >-
            Optional. Specifies the maximum desired number of tasks the
            execution should run at given time. Must be <= task_count. When the
            job is run, if this field is 0 or unset, the maximum possible value
            will be used for that execution. The actual number of tasks running
            in steady state will be less than this number when there are fewer
            tasks waiting to be completed, i.e. when the work left to do is less
            than max parallelism.
          type: integer
        taskCount:
          format: int32
          description: >-
            Optional. Specifies the desired number of tasks the execution should
            run. Setting to 1 means that parallelism is limited to 1 and the
            success of that task signals the success of the execution. Defaults
            to 1.
          type: integer
        template:
          $ref: '#/components/schemas/TaskTemplateSpec'
          description: Optional. The template used to create tasks for this execution.
      type: object
      id: ExecutionSpec
      description: ExecutionSpec describes how the execution will look.
    Route:
      properties:
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
          description: >-
            Metadata associated with this Route, including name, namespace,
            labels, and annotations.
        status:
          description: >-
            Status communicates the observed state of the Route (from the
            controller).
          $ref: '#/components/schemas/RouteStatus'
        spec:
          $ref: '#/components/schemas/RouteSpec'
          description: Spec holds the desired state of the Route (from the client).
        apiVersion:
          type: string
          description: The API version for this call such as "serving.knative.dev/v1".
        kind:
          description: The kind of this resource, in this case always "Route".
          type: string
      type: object
      description: >-
        Route is responsible for configuring ingress over a collection of
        Revisions. Some of the Revisions a Route distributes traffic over may be
        specified by referencing the Configuration responsible for creating
        them; in these cases the Route is additionally responsible for
        monitoring the Configuration for "latest ready" revision changes, and
        smoothly rolling out latest revisions. Cloud Run currently supports
        referencing a single Configuration to automatically deploy the "latest
        ready" Revision from that Configuration.
      id: Route
    Policy:
      type: object
      properties:
        auditConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
        etag:
          format: byte
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
        version:
          format: int32
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          type: array
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
        user:mike@example.com - group:admins@example.com - domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For
        a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
    Volume:
      type: object
      id: Volume
      description: Volume represents a named volume in a container.
      properties:
        secret:
          description: >-
            The secret's value will be presented as the content of a file whose
            name is defined in the item path. If no items are defined, the name
            of the file is the secretName.
          $ref: '#/components/schemas/SecretVolumeSource'
        configMap:
          description: Not supported in Cloud Run.
          $ref: '#/components/schemas/ConfigMapVolumeSource'
        name:
          description: >-
            Volume's name. In Cloud Run Fully Managed, the name 'cloudsql' is
            reserved.
          type: string
        emptyDir:
          description: Ephemeral storage used as a shared volume.
          $ref: '#/components/schemas/EmptyDirVolumeSource'
    Addressable:
      description: Information for connecting over HTTP(s).
      properties:
        url:
          type: string
      id: Addressable
      type: object
    KeyToPath:
      id: KeyToPath
      description: Maps a string key to a path within a volume.
      type: object
      properties:
        key:
          description: >-
            The Cloud Secret Manager secret version. Can be 'latest' for the
            latest value, or an integer or a secret alias for a specific
            version. The key to project.
          type: string
        path:
          type: string
          description: >-
            The relative path of the file to map the key to. May not be an
            absolute path. May not contain the path element '..'. May not start
            with the string '..'.
        mode:
          format: int32
          description: >-
            (Optional) Mode bits to use on this file, must be a value between 01
            and 0777 (octal). If 0 or not set, the Volume's default mode will be
            used. Notes * Internally, a umask of 0222 will be applied to any
            non-zero value. * This is an integer representation of the mode
            bits. So, the octal integer value should look exactly as the chmod
            numeric notation with a leading zero. Some examples: for chmod 777
            (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640
            (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755
            (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This
            might be in conflict with other options that affect the file mode,
            like fsGroup, and the result can be other mode bits set.
          type: integer
    ListRevisionsResponse:
      type: object
      description: ListRevisionsResponse is a list of Revision resources.
      id: ListRevisionsResponse
      properties:
        kind:
          description: The kind of this resource, in this case "RevisionList".
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Revision'
          description: List of Revisions.
        apiVersion:
          description: The API version for this call such as "serving.knative.dev/v1".
          type: string
        metadata:
          description: Metadata associated with this revision list.
          $ref: '#/components/schemas/ListMeta'
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
    DomainMapping:
      description: >-
        Resource to hold the state and status of a user's domain mapping. NOTE:
        This resource is currently in Beta.
      type: object
      id: DomainMapping
      properties:
        apiVersion:
          type: string
          description: The API version for this call such as "domains.cloudrun.com/v1".
        kind:
          description: The kind of resource, in this case "DomainMapping".
          type: string
        status:
          description: The current status of the DomainMapping.
          $ref: '#/components/schemas/DomainMappingStatus'
        spec:
          $ref: '#/components/schemas/DomainMappingSpec'
          description: The spec for this DomainMapping.
        metadata:
          description: Metadata associated with this BuildTemplate.
          $ref: '#/components/schemas/ObjectMeta'
    SecurityContext:
      properties:
        runAsUser:
          description: >-
            The UID to run the entrypoint of the container process. Defaults to
            user specified in image metadata if unspecified. May also be set in
            PodSecurityContext. If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes
            precedence.
          type: integer
          format: int32
      type: object
      id: SecurityContext
      description: >-
        Not supported by Cloud Run. SecurityContext holds security configuration
        that will be applied to a container. Some fields are present in both
        SecurityContext and PodSecurityContext. When both are set, the values in
        SecurityContext take precedence.
    TaskTemplateSpec:
      properties:
        spec:
          description: Optional. Specification of the desired behavior of the task.
          $ref: '#/components/schemas/TaskSpec'
      id: TaskTemplateSpec
      description: >-
        TaskTemplateSpec describes the data a task should have when created from
        a template.
      type: object
    ListRoutesResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Route'
          description: List of Routes.
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        metadata:
          $ref: '#/components/schemas/ListMeta'
          description: Metadata associated with this Route list.
        kind:
          type: string
          description: The kind of this resource, in this case always "RouteList".
        apiVersion:
          description: The API version for this call such as "serving.knative.dev/v1".
          type: string
      type: object
      id: ListRoutesResponse
      description: ListRoutesResponse is a list of Route resources.
    ResourceRecord:
      id: ResourceRecord
      properties:
        rrdata:
          description: >-
            Data for this record. Values vary by record type, as defined in RFC
            1035 (section 5) and RFC 1034 (section 3.6.1).
          type: string
        type:
          description: 'Resource record type. Example: `AAAA`.'
          enum:
            - RECORD_TYPE_UNSPECIFIED
            - A
            - AAAA
            - CNAME
          type: string
          enumDescriptions:
            - An unknown resource record.
            - An A resource record. Data is an IPv4 address.
            - An AAAA resource record. Data is an IPv6 address.
            - A CNAME resource record. Data is a domain name to be aliased.
        name:
          type: string
          description: >-
            Relative name of the object affected by this record. Only applicable
            for `CNAME` records. Example: 'www'.
      description: A DNS resource record.
      type: object
    JobStatus:
      id: JobStatus
      type: object
      description: JobStatus represents the current state of a Job.
      properties:
        executionCount:
          format: int32
          type: integer
          description: Number of executions created for this job.
        observedGeneration:
          format: int32
          type: integer
          description: >-
            The 'generation' of the job that was last processed by the
            controller.
        latestCreatedExecution:
          description: >-
            A pointer to the most recently created execution for this job. This
            is set regardless of the eventual state of the execution.
          $ref: '#/components/schemas/ExecutionReference'
        conditions:
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          description: >-
            Conditions communicate information about ongoing/complete
            reconciliation processes that bring the "spec" inline with the
            observed state of the world. Job-specific conditions include: *
            `Ready`: `True` when the job is ready to be executed.
          type: array
    RevisionTemplate:
      id: RevisionTemplate
      type: object
      properties:
        spec:
          description: >-
            RevisionSpec holds the desired state of the Revision (from the
            client).
          $ref: '#/components/schemas/RevisionSpec'
        metadata:
          description: >-
            Optional metadata for this Revision, including labels and
            annotations. Name will be generated by the Configuration. The
            following annotation keys set properties of the created revision: *
            `autoscaling.knative.dev/minScale` sets the minimum number of
            instances. * `autoscaling.knative.dev/maxScale` sets the maximum
            number of instances. * `run.googleapis.com/cloudsql-instances` sets
            Cloud SQL connections. Multiple values should be comma separated. *
            `run.googleapis.com/vpc-access-connector` sets a Serverless VPC
            Access connector. * `run.googleapis.com/vpc-access-egress` sets VPC
            egress. Supported values are `all-traffic`, `all` (deprecated), and
            `private-ranges-only`. `all-traffic` and `all` provide the same
            functionality. `all` is deprecated but will continue to be
            supported. Prefer `all-traffic`.
          $ref: '#/components/schemas/ObjectMeta'
      description: >-
        RevisionTemplateSpec describes the data a revision should have when
        created from a template.
    DomainMappingStatus:
      type: object
      properties:
        resourceRecords:
          items:
            $ref: '#/components/schemas/ResourceRecord'
          type: array
          description: >-
            The resource records required to configure this domain mapping.
            These records must be added to the domain's DNS configuration in
            order to serve the application via this domain mapping.
        observedGeneration:
          description: >-
            ObservedGeneration is the 'Generation' of the DomainMapping that was
            last processed by the controller. Clients polling for completed
            reconciliation should poll until observedGeneration =
            metadata.generation and the Ready condition's status is True or
            False.
          format: int32
          type: integer
        conditions:
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          type: array
          description: >-
            Array of observed DomainMappingConditions, indicating the current
            state of the DomainMapping.
        url:
          description: Optional. Not supported by Cloud Run.
          type: string
        mappedRouteName:
          description: The name of the route that the mapping currently points to.
          type: string
      id: DomainMappingStatus
      description: The current state of the Domain Mapping.
    HTTPHeader:
      id: HTTPHeader
      type: object
      properties:
        value:
          type: string
          description: The header field value
        name:
          type: string
          description: Required. The header field name
      description: HTTPHeader describes a custom header to be used in HTTP probes
    ListTasksResponse:
      type: object
      id: ListTasksResponse
      description: ListTasksResponse is a list of Tasks resources.
      properties:
        items:
          description: List of Tasks.
          items:
            $ref: '#/components/schemas/Task'
          type: array
        metadata:
          $ref: '#/components/schemas/ListMeta'
          description: Metadata associated with this tasks list.
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        apiVersion:
          type: string
          description: The API version for this call such as "run.googleapis.com/v1".
        kind:
          description: The kind of this resource, in this case "TasksList".
          type: string
    ExecutionStatus:
      id: ExecutionStatus
      properties:
        retriedCount:
          type: integer
          format: int32
          description: Optional. The number of tasks which have retried at least once.
        completionTime:
          description: >-
            Optional. Represents the time that the execution was completed. It
            is not guaranteed to be set in happens-before order across separate
            operations. It is represented in RFC3339 form and is in UTC.
            +optional
          type: string
          format: google-datetime
        startTime:
          format: google-datetime
          description: >-
            Optional. Represents the time that the execution started to run. It
            is not guaranteed to be set in happens-before order across separate
            operations. It is represented in RFC3339 form and is in UTC.
          type: string
        runningCount:
          type: integer
          format: int32
          description: Optional. The number of actively running tasks.
        succeededCount:
          type: integer
          format: int32
          description: Optional. The number of tasks which reached phase Succeeded.
        conditions:
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          type: array
          description: >-
            Optional. Conditions communicate information about ongoing/complete
            reconciliation processes that bring the "spec" inline with the
            observed state of the world. Execution-specific conditions include:
            * `ResourcesAvailable`: `True` when underlying resources have been
            provisioned. * `Started`: `True` when the execution has started to
            execute. * `Completed`: `True` when the execution has succeeded.
            `False` when the execution has failed.
        logUri:
          description: >-
            Optional. URI where logs for this execution can be found in Cloud
            Console.
          type: string
        observedGeneration:
          description: >-
            Optional. The 'generation' of the execution that was last processed
            by the controller.
          type: integer
          format: int32
        cancelledCount:
          description: Optional. The number of tasks which reached phase Cancelled.
          type: integer
          format: int32
        failedCount:
          format: int32
          description: Optional. The number of tasks which reached phase Failed.
          type: integer
      type: object
      description: ExecutionStatus represents the current state of an Execution.
    ServiceStatus:
      description: The current state of the Service. Output only.
      type: object
      properties:
        url:
          description: >-
            URL that will distribute traffic over the provided traffic targets.
            It generally has the form
            https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
          type: string
        latestReadyRevisionName:
          type: string
          description: >-
            Name of the latest Revision from this Service's Configuration that
            has had its `Ready` condition become `True`.
        conditions:
          description: >-
            Conditions communicate information about ongoing/complete
            reconciliation processes that bring the `spec` inline with the
            observed state of the world. Service-specific conditions include: *
            `ConfigurationsReady`: `True` when the underlying Configuration is
            ready. * `RoutesReady`: `True` when the underlying Route is ready. *
            `Ready`: `True` when all underlying resources are ready.
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          type: array
        traffic:
          description: >-
            Holds the configured traffic distribution. These entries will always
            contain RevisionName references. When ConfigurationName appears in
            the spec, this will hold the LatestReadyRevisionName that we last
            observed.
          items:
            $ref: '#/components/schemas/TrafficTarget'
          type: array
        latestCreatedRevisionName:
          description: >-
            Name of the last revision that was created from this Service's
            Configuration. It might not be ready yet, for that use
            LatestReadyRevisionName.
          type: string
        observedGeneration:
          description: >-
            Returns the generation last fully processed by the system. This will
            only match metadata.generation when reconciliation is complete.
            Clients polling for completed reconciliation should poll until
            observedGeneration = metadata.generation and the Ready condition's
            status is True or False.
          format: int32
          type: integer
        address:
          description: >-
            Similar to url, information on where the service is available on
            HTTP.
          $ref: '#/components/schemas/Addressable'
      id: ServiceStatus
    DomainMappingSpec:
      properties:
        forceOverride:
          description: >-
            If set, the mapping will override any mapping set before this spec
            was set. It is recommended that the user leaves this empty to
            receive an error warning about a potential conflict and only set it
            once the respective UI has given such a warning.
          type: boolean
        certificateMode:
          enum:
            - CERTIFICATE_MODE_UNSPECIFIED
            - NONE
            - AUTOMATIC
          enumDescriptions:
            - ''
            - Do not provision an HTTPS certificate.
            - Automatically provisions an HTTPS certificate via GoogleCA.
          type: string
          description: The mode of the certificate.
        routeName:
          description: >-
            The name of the Knative Route that this DomainMapping applies to.
            The route must exist.
          type: string
      type: object
      description: The desired state of the Domain Mapping.
      id: DomainMappingSpec
    ConfigurationSpec:
      description: >-
        ConfigurationSpec holds the desired state of the Configuration (from the
        client).
      id: ConfigurationSpec
      type: object
      properties:
        template:
          description: >-
            Template holds the latest specification for the Revision to be
            stamped out.
          $ref: '#/components/schemas/RevisionTemplate'
    VolumeMount:
      description: VolumeMount describes a mounting of a Volume within a container.
      type: object
      properties:
        mountPath:
          description: >-
            Required. Path within the container at which the volume should be
            mounted. Must not contain ':'.
          type: string
        readOnly:
          description: >-
            Only true is accepted for Secret Volumes. Defaults to true for
            Secrets Volumes.
          type: boolean
        name:
          type: string
          description: >-
            Required. The name of the volume. There must be a corresponding
            Volume with the same name.
        subPath:
          description: >-
            Path within the volume from which the container's volume should be
            mounted. Defaults to "" (volume's root).
          type: string
      id: VolumeMount
    ListServicesResponse:
      id: ListServicesResponse
      type: object
      description: A list of Service resources.
      properties:
        metadata:
          description: Metadata associated with this Service list.
          $ref: '#/components/schemas/ListMeta'
        unreachable:
          type: array
          description: >-
            For calls against the global endpoint, returns the list of Cloud
            locations that could not be reached. For regional calls, this field
            is not used.
          items:
            type: string
        kind:
          description: The kind of this resource; returns "ServiceList".
          type: string
        apiVersion:
          description: The API version for this call; returns "serving.knative.dev/v1".
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Service'
          description: List of Services.
    TaskSpec:
      type: object
      description: TaskSpec is a description of a task.
      properties:
        serviceAccountName:
          description: >-
            Optional. Email address of the IAM service account associated with
            the task of a job execution. The service account represents the
            identity of the running task, and determines what permissions the
            task has. If not provided, the task will use the project's default
            service account.
          type: string
        maxRetries:
          type: integer
          description: >-
            Optional. Number of retries allowed per task, before marking this
            job failed. Defaults to 3.
          format: int32
        containers:
          type: array
          items:
            $ref: '#/components/schemas/Container'
          description: >-
            Optional. List of containers belonging to the task. We disallow a
            number of fields on this Container. Only a single container may be
            provided.
        volumes:
          items:
            $ref: '#/components/schemas/Volume'
          description: >-
            Optional. List of volumes that can be mounted by containers
            belonging to the task.
          type: array
        timeoutSeconds:
          description: >-
            Optional. Duration in seconds the task may be active before the
            system will actively try to mark it failed and kill associated
            containers. This applies per attempt of a task, meaning each retry
            can run for the full timeout. Defaults to 600 seconds.
          type: string
          format: int64
      id: TaskSpec
    ServiceSpec:
      type: object
      description: >-
        ServiceSpec holds the desired state of the Route (from the client),
        which is used to manipulate the underlying Route and Configuration(s).
      properties:
        traffic:
          description: >-
            Specifies how to distribute traffic over a collection of Knative
            Revisions and Configurations to the Service's main URL.
          items:
            $ref: '#/components/schemas/TrafficTarget'
          type: array
        template:
          $ref: '#/components/schemas/RevisionTemplate'
          description: Holds the latest specification for the Revision to be stamped out.
      id: ServiceSpec
    ExecutionReference:
      description: >-
        Reference to an Execution. Use /Executions.GetExecution with the given
        name to get full execution including the latest status.
      type: object
      id: ExecutionReference
      properties:
        name:
          type: string
          description: Optional. Name of the execution.
        creationTimestamp:
          type: string
          description: Optional. Creation timestamp of the execution.
          format: google-datetime
        completionTimestamp:
          type: string
          description: Optional. Completion timestamp of the execution.
          format: google-datetime
    ResourceRequirements:
      description: ResourceRequirements describes the compute resource requirements.
      id: ResourceRequirements
      properties:
        requests:
          description: >-
            Requests describes the minimum amount of compute resources required.
            Only `cpu` and `memory` are supported. If Requests is omitted for a
            container, it defaults to Limits if that is explicitly specified,
            otherwise to an implementation-defined value. * For supported 'cpu'
            values, go to https://cloud.google.com/run/docs/configuring/cpu. *
            For supported 'memory' values and syntax, go to
            https://cloud.google.com/run/docs/configuring/memory-limits
          type: object
          additionalProperties:
            type: string
        limits:
          type: object
          description: >-
            Limits describes the maximum amount of compute resources allowed.
            Only 'cpu' and 'memory' keys are supported. * For supported 'cpu'
            values, go to https://cloud.google.com/run/docs/configuring/cpu. *
            For supported 'memory' values and syntax, go to
            https://cloud.google.com/run/docs/configuring/memory-limits
          additionalProperties:
            type: string
      type: object
    ExecutionTemplateSpec:
      id: ExecutionTemplateSpec
      type: object
      description: >-
        ExecutionTemplateSpec describes the metadata and spec an Execution
        should have when created from a job.
      properties:
        spec:
          description: >-
            Required. ExecutionSpec holds the desired configuration for
            executions of this job.
          $ref: '#/components/schemas/ExecutionSpec'
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
          description: >-
            Optional. Optional metadata for this Execution, including labels and
            annotations. The following annotation keys set properties of the
            created execution: * `run.googleapis.com/cloudsql-instances` sets
            Cloud SQL connections. Multiple values should be comma separated. *
            `run.googleapis.com/vpc-access-connector` sets a Serverless VPC
            Access connector. * `run.googleapis.com/vpc-access-egress` sets VPC
            egress. Supported values are `all-traffic`, `all` (deprecated), and
            `private-ranges-only`. `all-traffic` and `all` provide the same
            functionality. `all` is deprecated but will continue to be
            supported. Prefer `all-traffic`.
    Container:
      id: Container
      properties:
        name:
          description: Name of the container specified as a DNS_LABEL (RFC 1123).
          type: string
        livenessProbe:
          description: >-
            Periodic probe of container liveness. Container will be restarted if
            the probe fails.
          $ref: '#/components/schemas/Probe'
        ports:
          items:
            $ref: '#/components/schemas/ContainerPort'
          type: array
          description: >-
            List of ports to expose from the container. Only a single port can
            be specified. The specified ports must be listening on all
            interfaces (0.0.0.0) within the container to be accessible. If
            omitted, a port number will be chosen and passed to the container
            through the PORT environment variable for the container to listen
            on.
        workingDir:
          description: >-
            Container's working directory. If not specified, the container
            runtime's default will be used, which might be configured in the
            container image.
          type: string
        args:
          type: array
          description: >-
            Arguments to the entrypoint. The docker image's CMD is used if this
            is not provided. Variable references are not supported in Cloud Run.
          items:
            type: string
        volumeMounts:
          description: >-
            Volume to mount into the container's filesystem. Only supports
            SecretVolumeSources. Pod volumes to mount into the container's
            filesystem.
          type: array
          items:
            $ref: '#/components/schemas/VolumeMount'
        image:
          type: string
          description: >-
            Required. Name of the container image in Dockerhub, Google Artifact
            Registry, or Google Container Registry. If the host is not provided,
            Dockerhub is assumed.
        startupProbe:
          description: >-
            Startup probe of application within the container. All other probes
            are disabled if a startup probe is provided, until it succeeds.
            Container will not receive traffic if the probe fails. If not
            provided, a default startup probe with TCP socket action is used.
          $ref: '#/components/schemas/Probe'
        terminationMessagePath:
          description: >-
            Path at which the file to which the container's termination message
            will be written is mounted into the container's filesystem. Message
            written is intended to be brief final status, such as an assertion
            failure message. Will be truncated by the node if greater than 4096
            bytes. The total message length across all containers will be
            limited to 12kb. Defaults to /dev/termination-log.
          type: string
        readinessProbe:
          $ref: '#/components/schemas/Probe'
          description: Not supported by Cloud Run.
        resources:
          $ref: '#/components/schemas/ResourceRequirements'
          description: Compute Resources required by this container.
        env:
          items:
            $ref: '#/components/schemas/EnvVar'
          type: array
          description: >-
            List of environment variables to set in the container. EnvVar with
            duplicate names are generally allowed; if referencing a secret, the
            name must be unique for the container. For non-secret EnvVar names,
            the Container will only get the last-declared one.
        imagePullPolicy:
          type: string
          description: >-
            Image pull policy. One of Always, Never, IfNotPresent. Defaults to
            Always if :latest tag is specified, or IfNotPresent otherwise.
        terminationMessagePolicy:
          type: string
          description: >-
            Indicate how the termination message should be populated. File will
            use the contents of terminationMessagePath to populate the container
            status message on both success and failure. FallbackToLogsOnError
            will use the last chunk of container log output if the termination
            message file is empty and the container exited with an error. The
            log output is limited to 2048 bytes or 80 lines, whichever is
            smaller. Defaults to File. Cannot be updated.
        securityContext:
          description: Not supported by Cloud Run.
          $ref: '#/components/schemas/SecurityContext'
        command:
          items:
            type: string
          type: array
          description: >-
            Entrypoint array. Not executed within a shell. The docker image's
            ENTRYPOINT is used if this is not provided. Variable references are
            not supported in Cloud Run.
        envFrom:
          type: array
          items:
            $ref: '#/components/schemas/EnvFromSource'
          description: Not supported by Cloud Run.
      description: >-
        A single application container. This specifies both the container to
        run, the command to run in the container and the arguments to supply to
        it. Note that additional arguments may be supplied by the system to the
        container at runtime.
      type: object
    SecretEnvSource:
      type: object
      properties:
        localObjectReference:
          description: >-
            This field should not be used directly as it is meant to be inlined
            directly into the message. Use the "name" field instead.
          $ref: '#/components/schemas/LocalObjectReference'
        name:
          type: string
          description: The Secret to select from.
        optional:
          type: boolean
          description: Specify whether the Secret must be defined
      description: >-
        Not supported by Cloud Run. SecretEnvSource selects a Secret to populate
        the environment variables with. The contents of the target Secret's Data
        field will represent the key-value pairs as environment variables.
      id: SecretEnvSource
    SecretVolumeSource:
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/KeyToPath'
          description: >-
            A list of secret versions to mount in the volume. If no items are
            specified, the volume will expose a file with the same name as the
            secret name. The contents of the file will be the data in the latest
            version of the secret. If items are specified, the key will be used
            as the version to fetch from Cloud Secret Manager and the path will
            be the name of the file exposed in the volume. When items are
            defined, they must specify both a key and a path.
        secretName:
          description: >-
            The name of the secret in Cloud Secret Manager. By default, the
            secret is assumed to be in the same project. If the secret is in
            another project, you must define an alias. An alias definition has
            the form: :projects//secrets/. If multiple alias definitions are
            needed, they must be separated by commas. The alias definitions must
            be set on the run.googleapis.com/secrets annotation. Name of the
            secret in the container's namespace to use.
          type: string
        defaultMode:
          description: >-
            Integer representation of mode bits to use on created files by
            default. Must be a value between 01 and 0777 (octal). If 0 or not
            set, it will default to 0444. Directories within the path are not
            affected by this setting. Notes * Internally, a umask of 0222 will
            be applied to any non-zero value. * This is an integer
            representation of the mode bits. So, the octal integer value should
            look exactly as the chmod numeric notation with a leading zero. Some
            examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511
            (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416
            (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or
            493 (base-10). * This might be in conflict with other options that
            affect the file mode, like fsGroup, and the result can be other mode
            bits set.
          format: int32
          type: integer
        optional:
          type: boolean
          description: Not supported by Cloud Run.
      id: SecretVolumeSource
      description: >-
        A volume representing a secret stored in Google Secret Manager. The
        secret's value will be presented as the content of a file whose name is
        defined in the item path. If no items are defined, the name of the file
        is the secret_name. The contents of the target Secret's Data field will
        be presented in a volume as files using the keys in the Data field as
        the file names.
      type: object
    JobSpec:
      type: object
      properties:
        template:
          description: >-
            Optional. Describes the execution that will be created when running
            a job.
          $ref: '#/components/schemas/ExecutionTemplateSpec'
      description: JobSpec describes how the job will look.
      id: JobSpec
    TaskStatus:
      description: TaskStatus represents the status of a task.
      properties:
        startTime:
          format: google-datetime
          type: string
          description: >-
            Optional. Represents time when the task started to run. It is not
            guaranteed to be set in happens-before order across separate
            operations. It is represented in RFC3339 form and is in UTC.
        logUri:
          description: >-
            Optional. URI where logs for this task can be found in Cloud
            Console.
          type: string
        conditions:
          type: array
          description: >-
            Optional. Conditions communicate information about ongoing/complete
            reconciliation processes that bring the "spec" inline with the
            observed state of the world. Task-specific conditions include: *
            `Started`: `True` when the task has started to execute. *
            `Completed`: `True` when the task has succeeded. `False` when the
            task has failed.
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
        observedGeneration:
          description: >-
            Optional. The 'generation' of the task that was last processed by
            the controller.
          format: int32
          type: integer
        retried:
          format: int32
          description: >-
            Optional. The number of times this task was retried. Instances are
            retried when they fail up to the maxRetries limit.
          type: integer
        index:
          format: int32
          type: integer
          description: >-
            Required. Index of the task, unique per execution, and beginning at
            0.
        lastAttemptResult:
          $ref: '#/components/schemas/TaskAttemptResult'
          description: Optional. Result of the last attempt of this task.
        completionTime:
          description: >-
            Optional. Represents time when the task was completed. It is not
            guaranteed to be set in happens-before order across separate
            operations. It is represented in RFC3339 form and is in UTC.
          type: string
          format: google-datetime
      type: object
      id: TaskStatus
    EnvVar:
      description: EnvVar represents an environment variable present in a Container.
      type: object
      id: EnvVar
      properties:
        valueFrom:
          description: >-
            Source for the environment variable's value. Only supports
            secret_key_ref. Cannot be used if value is not empty.
          $ref: '#/components/schemas/EnvVarSource'
        name:
          type: string
          description: Required. Name of the environment variable. Must be a C_IDENTIFIER.
        value:
          description: >-
            Value of the environment variable. Defaults to "". Variable
            references are not supported in Cloud Run.
          type: string
    ListLocationsResponse:
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
    Status:
      id: Status
      type: object
      properties:
        status:
          type: string
          description: 'Status of the operation. One of: "Success" or "Failure".'
        code:
          format: int32
          type: integer
          description: Suggested HTTP return code for this status, 0 if not set.
        metadata:
          description: Standard list metadata.
          $ref: '#/components/schemas/ListMeta'
        details:
          $ref: '#/components/schemas/StatusDetails'
          description: >-
            Extended data associated with the reason. Each reason may define its
            own extended details. This field is optional and the data returned
            is not guaranteed to conform to any schema except that defined by
            the reason type.
        message:
          description: A human-readable description of the status of this operation.
          type: string
        reason:
          description: >-
            A machine-readable description of why this operation is in the
            "Failure" status. If this value is empty there is no information
            available. A Reason clarifies an HTTP status code but does not
            override it.
          type: string
      description: Status is a return value for calls that don't return other objects.
    RouteSpec:
      properties:
        traffic:
          items:
            $ref: '#/components/schemas/TrafficTarget'
          description: >-
            Traffic specifies how to distribute traffic over a collection of
            Knative Revisions and Configurations. Cloud Run currently supports a
            single configurationName.
          type: array
      id: RouteSpec
      type: object
      description: RouteSpec holds the desired state of the Route (from the client).
    Probe:
      properties:
        httpGet:
          $ref: '#/components/schemas/HTTPGetAction'
          description: HTTPGet specifies the http request to perform.
        exec:
          $ref: '#/components/schemas/ExecAction'
          description: Not supported by Cloud Run.
        successThreshold:
          format: int32
          type: integer
          description: >-
            Minimum consecutive successes for the probe to be considered
            successful after having failed. Must be 1 if set.
        grpc:
          description: GRPCAction specifies an action involving a GRPC port.
          $ref: '#/components/schemas/GRPCAction'
        periodSeconds:
          description: >-
            How often (in seconds) to perform the probe. Default to 10 seconds.
            Minimum value is 1. Maximum value for liveness probe is 3600.
            Maximum value for startup probe is 240. Must be greater or equal
            than timeout_seconds.
          type: integer
          format: int32
        timeoutSeconds:
          type: integer
          format: int32
          description: >-
            Number of seconds after which the probe times out. Defaults to 1
            second. Minimum value is 1. Maximum value is 3600. Must be smaller
            than period_seconds; if period_seconds is not set, must be less or
            equal than 10.
        initialDelaySeconds:
          format: int32
          description: >-
            Number of seconds after the container has started before the probe
            is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum
            value for liveness probe is 3600. Maximum value for startup probe is
            240.
          type: integer
        failureThreshold:
          type: integer
          description: >-
            Minimum consecutive failures for the probe to be considered failed
            after having succeeded. Defaults to 3. Minimum value is 1.
          format: int32
        tcpSocket:
          $ref: '#/components/schemas/TCPSocketAction'
          description: TCPSocket specifies an action involving a TCP port.
      description: >-
        Probe describes a health check to be performed against a container to
        determine whether it is alive or ready to receive traffic.
      type: object
      id: Probe
    SecretKeySelector:
      description: SecretKeySelector selects a key of a Secret.
      type: object
      properties:
        name:
          description: >-
            The name of the secret in Cloud Secret Manager. By default, the
            secret is assumed to be in the same project. If the secret is in
            another project, you must define an alias. An alias definition has
            the form: :projects//secrets/. If multiple alias definitions are
            needed, they must be separated by commas. The alias definitions must
            be set on the run.googleapis.com/secrets annotation. The name of the
            secret in the pod's namespace to select from.
          type: string
        localObjectReference:
          $ref: '#/components/schemas/LocalObjectReference'
          description: >-
            This field should not be used directly as it is meant to be inlined
            directly into the message. Use the "name" field instead.
        optional:
          type: boolean
          description: Specify whether the Secret or its key must be defined.
        key:
          description: >-
            Required. A Cloud Secret Manager secret version. Must be 'latest'
            for the latest version, an integer for a specific version, or a
            version alias. The key of the secret to select from. Must be a valid
            secret key.
          type: string
      id: SecretKeySelector
    SetIamPolicyRequest:
      properties:
        updateMask:
          type: string
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only the fields in the mask will be modified. If no mask is
            provided, the following default mask is used: `paths: "bindings,
            etag"`
          format: google-fieldmask
        policy:
          $ref: '#/components/schemas/Policy'
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
      type: object
      description: Request message for `SetIamPolicy` method.
      id: SetIamPolicyRequest
    Overrides:
      type: object
      id: Overrides
      properties:
        containerOverrides:
          description: Per container override specification.
          type: array
          items:
            $ref: '#/components/schemas/ContainerOverride'
        timeoutSeconds:
          format: int32
          description: >-
            Duration in seconds the task may be active before the system will
            actively try to mark it failed and kill associated containers. Will
            replace existing timeout_seconds value.
          type: integer
        taskCount:
          format: int32
          type: integer
          description: >-
            The desired number of tasks the execution should run. Will replace
            existing task_count value.
      description: >-
        RunJob Overrides that contains Execution fields to be overridden on the
        go.
    ListJobsResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/ListMeta'
          description: Metadata associated with this jobs list.
        items:
          description: List of Jobs.
          type: array
          items:
            $ref: '#/components/schemas/Job'
        kind:
          type: string
          description: The kind of this resource, in this case "JobsList".
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        apiVersion:
          type: string
          description: The API version for this call such as "run.googleapis.com/v1".
      description: ListJobsResponse is a list of Jobs resources.
      id: ListJobsResponse
    AuthorizedDomain:
      properties:
        name:
          type: string
          description: >-
            Deprecated Read only. Full path to the `AuthorizedDomain` resource
            in the API. Example:
            `projects/myproject/authorizedDomains/example.com`.
        id:
          description: >-
            Relative name of the domain authorized for use. Example:
            `example.com`.
          type: string
      id: AuthorizedDomain
      description: >-
        A domain that a user has been authorized to administer. To authorize use
        of a domain, verify ownership via [Search
        Console](https://search.google.com/search-console/welcome).
      type: object
    GoogleCloudRunV1Condition:
      id: GoogleCloudRunV1Condition
      description: >-
        Conditions show the status of reconciliation progress on a given
        resource. Most resource use a top-level condition type "Ready" or
        "Completed" to show overall status with other conditions to checkpoint
        each stage of reconciliation. Note that if metadata.Generation does not
        equal status.ObservedGeneration, the conditions shown may not be
        relevant for the current spec.
      type: object
      properties:
        message:
          description: >-
            Optional. Human readable message indicating details about the
            current status.
          type: string
        status:
          type: string
          description: Status of the condition, one of True, False, Unknown.
        lastTransitionTime:
          description: >-
            Optional. Last time the condition transitioned from one status to
            another.
          format: google-datetime
          type: string
        severity:
          type: string
          description: >-
            Optional. How to interpret this condition. One of Error, Warning, or
            Info. Conditions of severity Info do not contribute to resource
            readiness.
        type:
          description: >-
            type is used to communicate the status of the reconciliation
            process. Types common to all resources include: * "Ready" or
            "Completed": True when the Resource is ready.
          type: string
        reason:
          type: string
          description: >-
            Optional. One-word CamelCase reason for the condition's last
            transition. These are intended to be stable, unique values which the
            client may use to trigger error handling logic, whereas messages
            which may be changed later by the server.
    ContainerOverride:
      properties:
        clearArgs:
          description: Optional. True if the intention is to clear out existing args list.
          type: boolean
        env:
          description: >-
            List of environment variables to set in the container. Will be
            merged with existing env for override.
          items:
            $ref: '#/components/schemas/EnvVar'
          type: array
        name:
          type: string
          description: The name of the container specified as a DNS_LABEL.
        args:
          description: >-
            Arguments to the entrypoint. Will replace existing args for override
            if present. Must be empty if `clear_args` is set to true.
          type: array
          items:
            type: string
      description: Per container override specification.
      id: ContainerOverride
      type: object
    ListMeta:
      type: object
      description: >-
        Metadata for synthetic resources like List. In Cloud Run, all List
        Resources Responses will have a ListMeta instead of ObjectMeta.
      id: ListMeta
      properties:
        selfLink:
          description: URL representing this object.
          type: string
        continue:
          description: >-
            Continuation token is a value emitted when the count of items is
            larger than the user/system limit. To retrieve the next page of
            items, pass the value of `continue` as the next request's
            `page_token`.
          type: string
        resourceVersion:
          type: string
          description: >-
            Opaque string that identifies the server's internal version of this
            object. It can be used by clients to determine when objects have
            changed. If the message is passed back to the server, it must be
            left unmodified.
    Revision:
      properties:
        kind:
          type: string
          description: The kind of this resource, in this case "Revision".
        metadata:
          description: >-
            Metadata associated with this Revision, including name, namespace,
            labels, and annotations.
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/RevisionSpec'
          description: Spec holds the desired state of the Revision (from the client).
        apiVersion:
          description: The API version for this call such as "serving.knative.dev/v1".
          type: string
        status:
          $ref: '#/components/schemas/RevisionStatus'
          description: >-
            Status communicates the observed state of the Revision (from the
            controller).
      id: Revision
      type: object
      description: >-
        Revision is an immutable snapshot of code and configuration. A revision
        references a container image. Revisions are created by updates to a
        Configuration. See also:
        https://github.com/knative/specs/blob/main/specs/serving/overview.md#revision
    ListDomainMappingsResponse:
      properties:
        apiVersion:
          description: The API version for this call such as "domains.cloudrun.com/v1".
          type: string
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        items:
          type: array
          description: List of DomainMappings.
          items:
            $ref: '#/components/schemas/DomainMapping'
        kind:
          description: The kind of this resource, in this case "DomainMappingList".
          type: string
        metadata:
          $ref: '#/components/schemas/ListMeta'
          description: Metadata associated with this DomainMapping list.
      type: object
      id: ListDomainMappingsResponse
      description: ListDomainMappingsResponse is a list of DomainMapping resources.
    Service:
      properties:
        kind:
          type: string
          description: The kind of resource. It must be "Service".
        apiVersion:
          description: The API version for this call. It must be "serving.knative.dev/v1".
          type: string
        status:
          $ref: '#/components/schemas/ServiceStatus'
          description: Communicates the system-controlled state of the Service.
        metadata:
          description: >-
            Metadata associated with this Service, including name, namespace,
            labels, and annotations. In Cloud Run, annotations with
            'run.googleapis.com/' and 'autoscaling.knative.dev' are restricted,
            and the accepted annotations will be different depending on the
            resource type. The following Cloud Run-specific annotations are
            accepted in Service.metadata.annotations. *
            `run.googleapis.com/binary-authorization-breakglass` *
            `run.googleapis.com/binary-authorization` *
            `run.googleapis.com/client-name` *
            `run.googleapis.com/custom-audiences` *
            `run.googleapis.com/description` *
            `run.googleapis.com/gc-traffic-tags` * `run.googleapis.com/ingress`
            * `run.googleapis.com/ingress` sets the ingress settings for the
            Service. See [the ingress settings
            documentation](/run/docs/securing/ingress) for details on
            configuring ingress settings. * `run.googleapis.com/ingress-status`
            is output-only and contains the currently active ingress settings
            for the Service. `run.googleapis.com/ingress-status` may differ from
            `run.googleapis.com/ingress` while the system is processing a change
            to `run.googleapis.com/ingress` or if the system failed to process a
            change to `run.googleapis.com/ingress`. When the system has
            processed all changes successfully
            `run.googleapis.com/ingress-status` and `run.googleapis.com/ingress`
            are equal.
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          description: Holds the desired state of the Service (from the client).
          $ref: '#/components/schemas/ServiceSpec'
      type: object
      description: >-
        Service acts as a top-level container that manages a set of Routes and
        Configurations which implement a network service. Service exists to
        provide a singular abstraction which can be access controlled, reasoned
        about, and which encapsulates software lifecycle decisions such as
        rollout policy and team resource ownership. Service acts only as an
        orchestrator of the underlying Routes and Configurations (much as a
        kubernetes Deployment orchestrates ReplicaSets). The Service's
        controller will track the statuses of its owned Configuration and Route,
        reflecting their statuses and conditions as its own.
      id: Service
    HTTPGetAction:
      description: HTTPGetAction describes an action based on HTTP Get requests.
      type: object
      id: HTTPGetAction
      properties:
        scheme:
          type: string
          description: Not supported by Cloud Run.
        port:
          format: int32
          type: integer
          description: >-
            Port number to access on the container. Number must be in the range
            1 to 65535.
        host:
          type: string
          description: Not supported by Cloud Run.
        path:
          type: string
          description: Path to access on the HTTP server.
        httpHeaders:
          items:
            $ref: '#/components/schemas/HTTPHeader'
          description: Custom headers to set in the request. HTTP allows repeated headers.
          type: array
    ListAuthorizedDomainsResponse:
      type: object
      description: A list of Authorized Domains.
      properties:
        nextPageToken:
          description: Continuation token for fetching the next page of results.
          type: string
        domains:
          description: The authorized domains belonging to the user.
          type: array
          items:
            $ref: '#/components/schemas/AuthorizedDomain'
      id: ListAuthorizedDomainsResponse
    ConfigMapVolumeSource:
      properties:
        name:
          type: string
          description: Name of the config.
        optional:
          type: boolean
          description: (Optional) Specify whether the Secret or its keys must be defined.
        items:
          items:
            $ref: '#/components/schemas/KeyToPath'
          description: >-
            (Optional) If unspecified, each key-value pair in the Data field of
            the referenced Secret will be projected into the volume as a file
            whose name is the key and content is the value. If specified, the
            listed keys will be projected into the specified paths, and unlisted
            keys will not be present. If a key is specified that is not present
            in the Secret, the volume setup will error unless it is marked
            optional.
          type: array
        defaultMode:
          description: >-
            (Optional) Integer representation of mode bits to use on created
            files by default. Must be a value between 01 and 0777 (octal). If 0
            or not set, it will default to 0644. Directories within the path are
            not affected by this setting. Notes * Internally, a umask of 0222
            will be applied to any non-zero value. * This is an integer
            representation of the mode bits. So, the octal integer value should
            look exactly as the chmod numeric notation with a leading zero. Some
            examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511
            (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416
            (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or
            493 (base-10). * This might be in conflict with other options that
            affect the file mode, like fsGroup, and the result can be other mode
            bits set.
          format: int32
          type: integer
      id: ConfigMapVolumeSource
      type: object
      description: >-
        Not supported by Cloud Run. Adapts a ConfigMap into a volume. The
        contents of the target ConfigMap's Data field will be presented in a
        volume as files using the keys in the Data field as the file names,
        unless the items element is populated with specific mappings of keys to
        paths.
    StatusCause:
      id: StatusCause
      properties:
        reason:
          type: string
          description: >-
            A machine-readable description of the cause of the error. If this
            value is empty there is no information available.
        message:
          description: >-
            A human-readable description of the cause of the error. This field
            may be presented as-is to a reader.
          type: string
        field:
          description: >-
            The field of the resource that has caused this error, as named by
            its JSON serialization. May include dot and postfix notation for
            nested attributes. Arrays are zero-indexed. Fields may appear more
            than once in an array of causes due to fields having multiple
            errors. Examples: "name" - the field "name" on the current resource
            "items[0].name" - the field "name" on the first array entry in
            "items"
          type: string
      type: object
      description: >-
        StatusCause provides more information about an api.Status failure,
        including cases when multiple errors are encountered.
    RouteStatus:
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/GoogleCloudRunV1Condition'
          type: array
          description: >-
            Conditions communicates information about ongoing/complete
            reconciliation processes that bring the "spec" inline with the
            observed state of the world.
        url:
          type: string
          description: >-
            URL holds the url that will distribute traffic over the provided
            traffic targets. It generally has the form:
            https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
        traffic:
          items:
            $ref: '#/components/schemas/TrafficTarget'
          type: array
          description: >-
            Traffic holds the configured traffic distribution. These entries
            will always contain RevisionName references. When ConfigurationName
            appears in the spec, this will hold the LatestReadyRevisionName that
            was last observed.
        address:
          description: >-
            Similar to url, information on where the service is available on
            HTTP.
          $ref: '#/components/schemas/Addressable'
        observedGeneration:
          type: integer
          format: int32
          description: >-
            ObservedGeneration is the 'Generation' of the Route that was last
            processed by the controller. Clients polling for completed
            reconciliation should poll until observedGeneration =
            metadata.generation and the Ready condition's status is True or
            False. Note that providing a TrafficTarget that has
            latest_revision=True will result in a Route that does not increment
            either its metadata.generation or its observedGeneration, as new
            "latest ready" revisions from the Configuration are processed
            without an update to the Route's spec.
      id: RouteStatus
      type: object
      description: >-
        RouteStatus communicates the observed state of the Route (from the
        controller).
    Expr:
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      id: Expr
      properties:
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          type: string
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
      type: object
    Job:
      description: >-
        Job represents the configuration of a single job, which references a
        container image which is run to completion.
      type: object
      properties:
        spec:
          description: Optional. Specification of the desired behavior of a job.
          $ref: '#/components/schemas/JobSpec'
        apiVersion:
          description: >-
            Optional. APIVersion defines the versioned schema of this
            representation of an object. Servers should convert recognized
            schemas to the latest internal value, and may reject unrecognized
            values.
          type: string
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
          description: Optional. Standard object's metadata.
        status:
          description: Output only. Current status of a job.
          readOnly: true
          $ref: '#/components/schemas/JobStatus'
        kind:
          type: string
          description: >-
            Optional. Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the
            client submits requests to. Cannot be updated. In CamelCase.
      id: Job
    CancelExecutionRequest:
      description: Request message for cancelling an execution.
      id: CancelExecutionRequest
      properties: {}
      type: object
    Task:
      id: Task
      description: Task represents a single run of a container to completion.
      properties:
        apiVersion:
          description: >-
            Optional. APIVersion defines the versioned schema of this
            representation of an object. Servers should convert recognized
            schemas to the latest internal value, and may reject unrecognized
            values.
          type: string
        spec:
          $ref: '#/components/schemas/TaskSpec'
          description: Optional. Specification of the desired behavior of a task.
        status:
          $ref: '#/components/schemas/TaskStatus'
          description: Output only. Current status of a task.
          readOnly: true
        kind:
          type: string
          description: >-
            Optional. Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the
            client submits requests to. Cannot be updated. In CamelCase.
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
          description: Optional. Standard object's metadata.
      type: object
    ContainerPort:
      id: ContainerPort
      type: object
      properties:
        containerPort:
          type: integer
          format: int32
          description: >-
            Port number the container listens on. If present, this must be a
            valid port number, 0 < x < 65536. If not present, it will default to
            port 8080. For more information, see
            https://cloud.google.com/run/docs/container-contract#port
        protocol:
          description: Protocol for port. Must be "TCP". Defaults to "TCP".
          type: string
        name:
          description: >-
            If specified, used to specify which protocol to use. Allowed values
            are "http1" and "h2c".
          type: string
      description: ContainerPort represents a network port in a single container.
    Execution:
      type: object
      id: Execution
      properties:
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
          description: Optional. Standard object's metadata.
        spec:
          description: Optional. Specification of the desired behavior of an execution.
          $ref: '#/components/schemas/ExecutionSpec'
        kind:
          description: >-
            Optional. Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the
            client submits requests to. Cannot be updated. In CamelCase.
          type: string
        apiVersion:
          description: >-
            Optional. APIVersion defines the versioned schema of this
            representation of an object. Servers should convert recognized
            schemas to the latest internal value, and may reject unrecognized
            values.
          type: string
        status:
          description: Output only. Current status of an execution.
          readOnly: true
          $ref: '#/components/schemas/ExecutionStatus'
      description: >-
        Execution represents the configuration of a single execution. An
        execution is an immutable resource that references a container image
        which is run to completion.
    EnvFromSource:
      description: >-
        Not supported by Cloud Run. EnvFromSource represents the source of a set
        of ConfigMaps
      type: object
      id: EnvFromSource
      properties:
        configMapRef:
          description: The ConfigMap to select from
          $ref: '#/components/schemas/ConfigMapEnvSource'
        prefix:
          description: >-
            An optional identifier to prepend to each key in the ConfigMap. Must
            be a C_IDENTIFIER.
          type: string
        secretRef:
          description: The Secret to select from
          $ref: '#/components/schemas/SecretEnvSource'
    GRPCAction:
      id: GRPCAction
      type: object
      description: GRPCAction describes an action involving a GRPC port.
      properties:
        service:
          type: string
          description: >-
            Service is the name of the service to place in the gRPC
            HealthCheckRequest. If this is not specified, the default behavior
            is defined by gRPC.
        port:
          format: int32
          description: >-
            Port number of the gRPC service. Number must be in the range 1 to
            65535.
          type: integer
    AuditLogConfig:
      id: AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      type: object
      properties:
        logType:
          type: string
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
        exemptedMembers:
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
          items:
            type: string
    StatusDetails:
      properties:
        name:
          description: >-
            The name attribute of the resource associated with the status
            StatusReason (when there is a single name which can be described).
          type: string
        kind:
          description: >-
            The kind attribute of the resource associated with the status
            StatusReason. On some operations may differ from the requested
            resource Kind.
          type: string
        group:
          type: string
          description: >-
            The group attribute of the resource associated with the status
            StatusReason.
        retryAfterSeconds:
          description: >-
            If specified, the time in seconds before the operation should be
            retried. Some errors may indicate the client must take an alternate
            action - for those errors this field may indicate how long to wait
            before taking the alternate action.
          format: int32
          type: integer
        causes:
          description: >-
            The Causes array includes more details associated with the
            StatusReason failure. Not all StatusReasons may provide detailed
            causes.
          type: array
          items:
            $ref: '#/components/schemas/StatusCause'
        uid:
          type: string
          description: >-
            UID of the resource. (when there is a single resource which can be
            described).
      id: StatusDetails
      description: >-
        StatusDetails is a set of additional properties that MAY be set by the
        server to provide additional information about a response. The Reason
        field of a Status object defines what attributes will be set. Clients
        must ignore fields that do not match the defined type of each attribute,
        and should assume that any attribute may be empty, invalid, or under
        defined.
      type: object
    Location:
      properties:
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          type: string
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
      type: object
      id: Location
      description: A resource that represents a Google Cloud location.
    ListExecutionsResponse:
      id: ListExecutionsResponse
      description: ListExecutionsResponse is a list of Executions resources.
      properties:
        kind:
          description: The kind of this resource, in this case "ExecutionsList".
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        items:
          type: array
          items:
            $ref: '#/components/schemas/Execution'
          description: List of Executions.
        apiVersion:
          type: string
          description: The API version for this call such as "run.googleapis.com/v1".
        metadata:
          $ref: '#/components/schemas/ListMeta'
          description: Metadata associated with this executions list.
      type: object
    ObjectMeta:
      id: ObjectMeta
      type: object
      properties:
        finalizers:
          type: array
          description: Not supported by Cloud Run
          items:
            type: string
        deletionTimestamp:
          description: >-
            The read-only soft deletion timestamp for this resource. In Cloud
            Run, users are not able to set this field. Instead, they must call
            the corresponding Delete API.
          type: string
          format: google-datetime
        name:
          description: >-
            Required. The name of the resource. Name is required when creating
            top-level resources (Service, Job), must be unique within a Cloud
            Run project/region, and cannot be changed once created.
          type: string
        creationTimestamp:
          format: google-datetime
          type: string
          description: >-
            UTC timestamp representing the server time when this object was
            created.
        resourceVersion:
          type: string
          description: >-
            Opaque, system-generated value that represents the internal version
            of this object that can be used by clients to determine when objects
            have changed. May be used for optimistic concurrency, change
            detection, and the watch operation on a resource or set of
            resources. Clients must treat these values as opaque and passed
            unmodified back to the server or omit the value to disable
            conflict-detection.
        generation:
          format: int32
          description: >-
            A system-provided sequence number representing a specific generation
            of the desired state.
          type: integer
        uid:
          description: Unique, system-generated identifier for this resource.
          type: string
        ownerReferences:
          description: Not supported by Cloud Run
          items:
            $ref: '#/components/schemas/OwnerReference'
          type: array
        clusterName:
          description: Not supported by Cloud Run
          type: string
        annotations:
          description: >-
            Unstructured key value map stored with a resource that may be set by
            external tools to store and retrieve arbitrary metadata. They are
            not queryable and should be preserved when modifying objects. In
            Cloud Run, annotations with 'run.googleapis.com/' and
            'autoscaling.knative.dev' are restricted, and the accepted
            annotations will be different depending on the resource type. *
            `autoscaling.knative.dev/maxScale`: Revision. *
            `autoscaling.knative.dev/minScale`: Revision. *
            `run.googleapis.com/binary-authorization-breakglass`: Service, Job,
            * `run.googleapis.com/binary-authorization`: Service, Job,
            Execution. * `run.googleapis.com/client-name`: All resources. *
            `run.googleapis.com/cloudsql-instances`: Revision, Execution. *
            `run.googleapis.com/container-dependencies`: Revision. *
            `run.googleapis.com/cpu-throttling`: Revision. *
            `run.googleapis.com/custom-audiences`: Service. *
            `run.googleapis.com/description`: Service. *
            `run.googleapis.com/encryption-key-shutdown-hours`: Revision *
            `run.googleapis.com/encryption-key`: Revision, Execution. *
            `run.googleapis.com/execution-environment`: Revision, Execution. *
            `run.googleapis.com/gc-traffic-tags`: Service. *
            `run.googleapis.com/ingress`: Service. *
            `run.googleapis.com/launch-stage`: Service, Job. *
            `run.googleapis.com/network-interfaces`: Revision, Execution. *
            `run.googleapis.com/post-key-revocation-action-type`: Revision. *
            `run.googleapis.com/secrets`: Revision, Execution. *
            `run.googleapis.com/secure-session-agent`: Revision. *
            `run.googleapis.com/sessionAffinity`: Revision. *
            `run.googleapis.com/startup-cpu-boost`: Revision. *
            `run.googleapis.com/vpc-access-connector`: Revision, Execution. *
            `run.googleapis.com/vpc-access-egress`: Revision, Execution.
          additionalProperties:
            type: string
          type: object
        namespace:
          description: >-
            Required. Defines the space within each name must be unique within a
            Cloud Run region. In Cloud Run, it must be project ID or number.
          type: string
        labels:
          description: >-
            Map of string keys and values that can be used to organize and
            categorize (scope and select) objects. May match selectors of
            replication controllers and routes.
          type: object
          additionalProperties:
            type: string
        selfLink:
          type: string
          description: URL representing this object.
        deletionGracePeriodSeconds:
          description: Not supported by Cloud Run
          format: int32
          type: integer
        generateName:
          type: string
          description: Not supported by Cloud Run
      description: >-
        k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all
        persisted resources must have, which includes all objects users must
        create.
    ConfigMapKeySelector:
      id: ConfigMapKeySelector
      description: Not supported by Cloud Run.
      properties:
        localObjectReference:
          $ref: '#/components/schemas/LocalObjectReference'
          description: Not supported by Cloud Run.
        key:
          description: Required. Not supported by Cloud Run.
          type: string
        name:
          type: string
          description: Required. Not supported by Cloud Run.
        optional:
          description: Not supported by Cloud Run.
          type: boolean
      type: object
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/projects/{projectsId}/authorizeddomains:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: List authorized domains.
      operationId: run.projects.authorizeddomains.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuthorizedDomainsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: authorizeddomains
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/revisions:
    parameters: *ref_1
    get:
      description: List revisions.
      operationId: run.projects.locations.revisions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRevisionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: fieldSelector
          schema:
            type: string
        - in: query
          name: resourceVersion
          schema:
            type: string
        - in: query
          name: includeUninitialized
          schema:
            type: boolean
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: watch
          schema:
            type: boolean
        - in: query
          name: continue
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/revisions/{revisionsId}:
    parameters: *ref_1
    get:
      description: Get information about a revision.
      operationId: run.projects.locations.revisions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-verb: select
    delete:
      description: Delete a revision.
      operationId: run.projects.locations.revisions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: query
          name: kind
          schema:
            type: string
        - in: query
          name: dryRun
          schema:
            type: string
        - in: query
          name: propagationPolicy
          schema:
            type: string
        - in: query
          name: apiVersion
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/routes/{routesId}:
    parameters: *ref_1
    get:
      description: Get information about a route.
      operationId: run.projects.locations.routes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: routesId
          required: true
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/routes:
    parameters: *ref_1
    get:
      description: List routes.
      operationId: run.projects.locations.routes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: includeUninitialized
          schema:
            type: boolean
        - in: query
          name: fieldSelector
          schema:
            type: string
        - in: query
          name: watch
          schema:
            type: boolean
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: continue
          schema:
            type: string
        - in: query
          name: resourceVersion
          schema:
            type: string
        - in: query
          name: labelSelector
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the IAM Access control policy for the specified Service. Overwrites
        any existing policy.
      operationId: run.projects.locations.services.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: services_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/services:
    parameters: *ref_1
    post:
      description: >-
        Creates a new Service. Service creation will trigger a new deployment.
        Use GetService, and check service.status to determine if the Service is
        ready.
      operationId: run.projects.locations.services.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dryRun
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: insert
    get:
      description: Lists services for the given project and region.
      operationId: run.projects.locations.services.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: watch
          schema:
            type: boolean
        - in: query
          name: fieldSelector
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: continue
          schema:
            type: string
        - in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: resourceVersion
          schema:
            type: string
        - in: query
          name: includeUninitialized
          schema:
            type: boolean
      x-stackQL-resource: services
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the IAM Access Control policy currently in effect for the given
        Cloud Run service. This result does not include any inherited policies.
      operationId: run.projects.locations.services.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: services_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:
    parameters: *ref_1
    put:
      description: >-
        Replaces a service. Only the spec and metadata labels and annotations
        are modifiable. After the Update request, Cloud Run will work to make
        the 'status' match the requested 'spec'. May provide
        metadata.resourceVersion to enforce update from last read for optimistic
        concurrency control.
      operationId: run.projects.locations.services.replaceService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: dryRun
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes the provided service. This will cause the Service to stop
        serving traffic and will delete all associated Revisions.
      operationId: run.projects.locations.services.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: dryRun
          schema:
            type: string
        - in: query
          name: kind
          schema:
            type: string
        - in: query
          name: apiVersion
          schema:
            type: string
        - in: query
          name: propagationPolicy
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: delete
    get:
      description: Gets information about a service.
      operationId: run.projects.locations.services.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified Project. There
        are no permissions required for making this API call.
      operationId: run.projects.locations.services.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: services_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/domainmappings:
    parameters: *ref_1
    post:
      description: Create a new domain mapping.
      operationId: run.projects.locations.domainmappings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainMapping'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainMapping'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: dryRun
          schema:
            type: string
      x-stackQL-resource: domainmappings
      x-stackQL-verb: insert
    get:
      description: List all domain mappings.
      operationId: run.projects.locations.domainmappings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainMappingsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: continue
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: includeUninitialized
          schema:
            type: boolean
        - in: query
          name: resourceVersion
          schema:
            type: string
        - in: query
          name: fieldSelector
          schema:
            type: string
        - in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: watch
          schema:
            type: boolean
      x-stackQL-resource: domainmappings
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/domainmappings/{domainmappingsId}:
    parameters: *ref_1
    get:
      description: Get information about a domain mapping.
      operationId: run.projects.locations.domainmappings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainMapping'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: domainmappingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domainmappings
      x-stackQL-verb: select
    delete:
      description: Delete a domain mapping.
      operationId: run.projects.locations.domainmappings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: domainmappingsId
          required: true
          schema:
            type: string
        - in: query
          name: propagationPolicy
          schema:
            type: string
        - in: query
          name: apiVersion
          schema:
            type: string
        - in: query
          name: dryRun
          schema:
            type: string
        - in: query
          name: kind
          schema:
            type: string
      x-stackQL-resource: domainmappings
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/configurations:
    parameters: *ref_1
    get:
      description: List configurations.
      operationId: run.projects.locations.configurations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfigurationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: includeUninitialized
          schema:
            type: boolean
        - in: query
          name: continue
          schema:
            type: string
        - in: query
          name: resourceVersion
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: fieldSelector
          schema:
            type: string
        - in: query
          name: watch
          schema:
            type: boolean
      x-stackQL-resource: configurations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/configurations/{configurationsId}:
    parameters: *ref_1
    get:
      description: Get information about a configuration.
      operationId: run.projects.locations.configurations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: configurationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: configurations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the IAM Access control policy for the specified job. Overwrites any
        existing policy.
      operationId: run.projects.locations.jobs.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Get the IAM Access Control policy currently in effect for the given job.
        This result does not include any inherited policies.
      operationId: run.projects.locations.jobs.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: jobs_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified job. There are no
        permissions required for making this API call.
      operationId: run.projects.locations.jobs.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/authorizeddomains:
    parameters: *ref_1
    get:
      description: List authorized domains.
      operationId: run.projects.locations.authorizeddomains.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuthorizedDomainsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: authorizeddomains
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: run.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /apis/domains.cloudrun.com/v1/namespaces/{namespacesId}/authorizeddomains:
    parameters: *ref_1
    get:
      description: List authorized domains.
      operationId: run.namespaces.authorizeddomains.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAuthorizedDomainsResponse'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: authorizeddomains
      x-stackQL-verb: select
  /apis/domains.cloudrun.com/v1/namespaces/{namespacesId}/domainmappings/{domainmappingsId}:
    parameters: *ref_1
    delete:
      description: Delete a domain mapping.
      operationId: run.namespaces.domainmappings.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: domainmappingsId
          required: true
          schema:
            type: string
        - in: query
          name: dryRun
          schema:
            type: string
        - in: query
          name: propagationPolicy
          schema:
            type: string
        - in: query
          name: apiVersion
          schema:
            type: string
        - in: query
          name: kind
          schema:
            type: string
      x-stackQL-resource: domainmappings
      x-stackQL-verb: delete
    get:
      description: Get information about a domain mapping.
      operationId: run.namespaces.domainmappings.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainMapping'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: domainmappingsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domainmappings
      x-stackQL-verb: select
  /apis/domains.cloudrun.com/v1/namespaces/{namespacesId}/domainmappings:
    parameters: *ref_1
    post:
      description: Create a new domain mapping.
      operationId: run.namespaces.domainmappings.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainMapping'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainMapping'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: dryRun
          schema:
            type: string
      x-stackQL-resource: domainmappings
      x-stackQL-verb: insert
    get:
      description: List all domain mappings.
      operationId: run.namespaces.domainmappings.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainMappingsResponse'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: continue
          schema:
            type: string
        - in: query
          name: watch
          schema:
            type: boolean
        - in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: fieldSelector
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: includeUninitialized
          schema:
            type: boolean
        - in: query
          name: resourceVersion
          schema:
            type: string
      x-stackQL-resource: domainmappings
      x-stackQL-verb: select
  /apis/serving.knative.dev/v1/namespaces/{namespacesId}/revisions/{revisionsId}:
    parameters: *ref_1
    get:
      description: Get information about a revision.
      operationId: run.namespaces.revisions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-verb: select
    delete:
      description: Delete a revision.
      operationId: run.namespaces.revisions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: revisionsId
          required: true
          schema:
            type: string
        - in: query
          name: propagationPolicy
          schema:
            type: string
        - in: query
          name: apiVersion
          schema:
            type: string
        - in: query
          name: dryRun
          schema:
            type: string
        - in: query
          name: kind
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-verb: delete
  /apis/serving.knative.dev/v1/namespaces/{namespacesId}/revisions:
    parameters: *ref_1
    get:
      description: List revisions.
      operationId: run.namespaces.revisions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRevisionsResponse'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: fieldSelector
          schema:
            type: string
        - in: query
          name: watch
          schema:
            type: boolean
        - in: query
          name: continue
          schema:
            type: string
        - in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: resourceVersion
          schema:
            type: string
        - in: query
          name: includeUninitialized
          schema:
            type: boolean
        - in: query
          name: limit
          schema:
            type: integer
      x-stackQL-resource: revisions
      x-stackQL-verb: select
  /apis/run.googleapis.com/v1/namespaces/{namespacesId}/tasks/{tasksId}:
    parameters: *ref_1
    get:
      description: Get information about a task.
      operationId: run.namespaces.tasks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: tasksId
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: select
  /apis/run.googleapis.com/v1/namespaces/{namespacesId}/tasks:
    parameters: *ref_1
    get:
      description: List tasks.
      operationId: run.namespaces.tasks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTasksResponse'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: fieldSelector
          schema:
            type: string
        - in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: resourceVersion
          schema:
            type: string
        - in: query
          name: watch
          schema:
            type: boolean
        - in: query
          name: includeUninitialized
          schema:
            type: boolean
        - in: query
          name: continue
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: select
  /apis/serving.knative.dev/v1/namespaces/{namespacesId}/configurations/{configurationsId}:
    parameters: *ref_1
    get:
      description: Get information about a configuration.
      operationId: run.namespaces.configurations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: configurationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: configurations
      x-stackQL-verb: select
  /apis/serving.knative.dev/v1/namespaces/{namespacesId}/configurations:
    parameters: *ref_1
    get:
      description: List configurations.
      operationId: run.namespaces.configurations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfigurationsResponse'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: fieldSelector
          schema:
            type: string
        - in: query
          name: continue
          schema:
            type: string
        - in: query
          name: resourceVersion
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: watch
          schema:
            type: boolean
        - in: query
          name: includeUninitialized
          schema:
            type: boolean
      x-stackQL-resource: configurations
      x-stackQL-verb: select
  /apis/serving.knative.dev/v1/namespaces/{namespacesId}/services:
    parameters: *ref_1
    get:
      description: Lists services for the given project and region.
      operationId: run.namespaces.services.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesResponse'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: fieldSelector
          schema:
            type: string
        - in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: resourceVersion
          schema:
            type: string
        - in: query
          name: continue
          schema:
            type: string
        - in: query
          name: includeUninitialized
          schema:
            type: boolean
        - in: query
          name: watch
          schema:
            type: boolean
        - in: query
          name: limit
          schema:
            type: integer
      x-stackQL-resource: services
      x-stackQL-verb: select
    post:
      description: >-
        Creates a new Service. Service creation will trigger a new deployment.
        Use GetService, and check service.status to determine if the Service is
        ready.
      operationId: run.namespaces.services.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: dryRun
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: insert
  /apis/serving.knative.dev/v1/namespaces/{namespacesId}/services/{servicesId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes the provided service. This will cause the Service to stop
        serving traffic and will delete all associated Revisions.
      operationId: run.namespaces.services.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: kind
          schema:
            type: string
        - in: query
          name: dryRun
          schema:
            type: string
        - in: query
          name: propagationPolicy
          schema:
            type: string
        - in: query
          name: apiVersion
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: delete
    get:
      description: Gets information about a service.
      operationId: run.namespaces.services.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: select
    put:
      description: >-
        Replaces a service. Only the spec and metadata labels and annotations
        are modifiable. After the Update request, Cloud Run will work to make
        the 'status' match the requested 'spec'. May provide
        metadata.resourceVersion to enforce update from last read for optimistic
        concurrency control.
      operationId: run.namespaces.services.replaceService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: dryRun
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: exec
  /apis/run.googleapis.com/v1/namespaces/{namespacesId}/jobs:
    parameters: *ref_1
    get:
      description: List jobs.
      operationId: run.namespaces.jobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: watch
          schema:
            type: boolean
        - in: query
          name: includeUninitialized
          schema:
            type: boolean
        - in: query
          name: resourceVersion
          schema:
            type: string
        - in: query
          name: fieldSelector
          schema:
            type: string
        - in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: continue
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
      x-stackQL-resource: jobs
      x-stackQL-verb: select
    post:
      description: Create a job.
      operationId: run.namespaces.jobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: insert
  /apis/run.googleapis.com/v1/namespaces/{namespacesId}/jobs/{jobsId}:
    parameters: *ref_1
    put:
      description: >-
        Replace a job. Only the spec and metadata labels and annotations are
        modifiable. After the Replace request, Cloud Run will work to make the
        'status' match the requested 'spec'. May provide
        metadata.resourceVersion to enforce update from last read for optimistic
        concurrency control.
      operationId: run.namespaces.jobs.replaceJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: exec
    get:
      description: Get information about a job.
      operationId: run.namespaces.jobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: select
    delete:
      description: Delete a job.
      operationId: run.namespaces.jobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
        - in: query
          name: kind
          schema:
            type: string
        - in: query
          name: apiVersion
          schema:
            type: string
        - in: query
          name: propagationPolicy
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: delete
  /apis/run.googleapis.com/v1/namespaces/{namespacesId}/jobs/{jobsId}:run:
    parameters: *ref_1
    post:
      description: Trigger creation of a new execution of this job.
      operationId: run.namespaces.jobs.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: jobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: jobs
      x-stackQL-verb: exec
  /apis/serving.knative.dev/v1/namespaces/{namespacesId}/routes:
    parameters: *ref_1
    get:
      description: List routes.
      operationId: run.namespaces.routes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutesResponse'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: resourceVersion
          schema:
            type: string
        - in: query
          name: fieldSelector
          schema:
            type: string
        - in: query
          name: includeUninitialized
          schema:
            type: boolean
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: watch
          schema:
            type: boolean
        - in: query
          name: continue
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-verb: select
  /apis/serving.knative.dev/v1/namespaces/{namespacesId}/routes/{routesId}:
    parameters: *ref_1
    get:
      description: Get information about a route.
      operationId: run.namespaces.routes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: routesId
          required: true
          schema:
            type: string
      x-stackQL-resource: routes
      x-stackQL-verb: select
  /apis/run.googleapis.com/v1/namespaces/{namespacesId}/executions/{executionsId}:
    parameters: *ref_1
    delete:
      description: Delete an execution.
      operationId: run.namespaces.executions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: kind
          schema:
            type: string
        - in: query
          name: apiVersion
          schema:
            type: string
        - in: query
          name: propagationPolicy
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: delete
    get:
      description: Get information about an execution.
      operationId: run.namespaces.executions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: select
  /apis/run.googleapis.com/v1/namespaces/{namespacesId}/executions:
    parameters: *ref_1
    get:
      description: List executions.
      operationId: run.namespaces.executions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionsResponse'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: query
          name: continue
          schema:
            type: string
        - in: query
          name: resourceVersion
          schema:
            type: string
        - in: query
          name: includeUninitialized
          schema:
            type: boolean
        - in: query
          name: labelSelector
          schema:
            type: string
        - in: query
          name: fieldSelector
          schema:
            type: string
        - in: query
          name: watch
          schema:
            type: boolean
        - in: query
          name: limit
          schema:
            type: integer
      x-stackQL-resource: executions
      x-stackQL-verb: select
  /apis/run.googleapis.com/v1/namespaces/{namespacesId}/executions/{executionsId}:cancel:
    parameters: *ref_1
    post:
      description: Cancel an execution.
      operationId: run.namespaces.executions.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelExecutionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: namespacesId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: exec
