openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Access Context Manager API
  description: >-
    An API for setting attribute based access control to requests to Google
    Cloud services.
  version: v1beta
  x-discovery-doc-revision: '20230618'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/access-context-manager/docs/reference/rest/
servers:
  - url: https://accesscontextmanager.googleapis.com
components:
  schemas:
    CustomLevel:
      description: >-
        `CustomLevel` is an `AccessLevel` using the Cloud Common Expression
        Language to represent the necessary conditions for the level to apply to
        a request. See CEL spec at: https://github.com/google/cel-spec
      properties:
        expr:
          $ref: '#/components/schemas/Expr'
          description: Required. A Cloud CEL expression evaluating to a boolean.
      id: CustomLevel
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: Status
      type: object
      properties:
        code:
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          type: array
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
    ServicePerimeter:
      description: >-
        `ServicePerimeter` describes a set of Google Cloud resources which can
        freely import and export data amongst themselves, but not export outside
        of the `ServicePerimeter`. If a request with a source within this
        `ServicePerimeter` has a target outside of the `ServicePerimeter`, the
        request will be blocked. Otherwise the request is allowed. There are two
        types of Service Perimeter - Regular and Bridge. Regular Service
        Perimeters cannot overlap, a single Google Cloud project can only belong
        to a single regular Service Perimeter. Service Perimeter Bridges can
        contain only Google Cloud projects as members, a single Google Cloud
        project may belong to multiple Service Perimeter Bridges.
      id: ServicePerimeter
      properties:
        status:
          description: >-
            Current ServicePerimeter configuration. Specifies sets of resources,
            restricted/unrestricted services and access levels that determine
            perimeter content and boundaries.
          $ref: '#/components/schemas/ServicePerimeterConfig'
        title:
          type: string
          description: Human readable title. Must be unique within the Policy.
        name:
          description: >-
            Resource name for the `ServicePerimeter`. Format:
            `accessPolicies/{access_policy}/servicePerimeters/{service_perimeter}`.
            The `service_perimeter` component must begin with a letter, followed
            by alphanumeric characters or `_`. After you create a
            `ServicePerimeter`, you cannot change its `name`.
          type: string
        description:
          type: string
          description: >-
            Description of the `ServicePerimeter` and its use. Does not affect
            behavior.
        perimeterType:
          enum:
            - PERIMETER_TYPE_REGULAR
            - PERIMETER_TYPE_BRIDGE
          enumDescriptions:
            - >-
              Regular Perimeter. When no value is specified, the perimeter uses
              this type.
            - Perimeter Bridge.
          description: >-
            Perimeter type indicator. A single project is allowed to be a member
            of single regular perimeter, but multiple service perimeter bridges.
            A project cannot be a included in a perimeter bridge without being
            included in regular perimeter. For perimeter bridges,
            restricted/unrestricted service lists as well as access lists must
            be empty.
          type: string
      type: object
    AccessPolicy:
      properties:
        parent:
          type: string
          description: >-
            Required. The parent of this `AccessPolicy` in the Cloud Resource
            Hierarchy. Currently immutable once created. Format:
            `organizations/{organization_id}`
        name:
          type: string
          description: >-
            Output only. Resource name of the `AccessPolicy`. Format:
            `accessPolicies/{policy_id}`
        title:
          type: string
          description: Required. Human readable title. Does not affect behavior.
      id: AccessPolicy
      type: object
      description: >-
        `AccessPolicy` is a container for `AccessLevels` (which define the
        necessary attributes to use Google Cloud services) and
        `ServicePerimeters` (which define regions of services able to freely
        pass data within a perimeter). An access policy is globally visible
        within an organization, and the restrictions it specifies apply to all
        projects within an organization.
    BasicLevel:
      properties:
        combiningFunction:
          type: string
          description: >-
            How the `conditions` list should be combined to determine if a
            request is granted this `AccessLevel`. If AND is used, each
            `Condition` in `conditions` must be satisfied for the `AccessLevel`
            to be applied. If OR is used, at least one `Condition` in
            `conditions` must be satisfied for the `AccessLevel` to be applied.
            Default behavior is AND.
          enum:
            - AND
            - OR
          enumDescriptions:
            - All `Conditions` must be true for the `BasicLevel` to be true.
            - >-
              If at least one `Condition` is true, then the `BasicLevel` is
              true.
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
          description: >-
            Required. A list of requirements for the `AccessLevel` to be
            granted.
      type: object
      description: '`BasicLevel` is an `AccessLevel` using a set of recommended features.'
      id: BasicLevel
    DevicePolicy:
      properties:
        allowedEncryptionStatuses:
          description: Allowed encryptions statuses, an empty list allows all statuses.
          type: array
          items:
            type: string
            enumDescriptions:
              - >-
                The encryption status of the device is not specified or not
                known.
              - The device does not support encryption.
              - The device supports encryption, but is currently unencrypted.
              - The device is encrypted.
            enum:
              - ENCRYPTION_UNSPECIFIED
              - ENCRYPTION_UNSUPPORTED
              - UNENCRYPTED
              - ENCRYPTED
        requireAdminApproval:
          description: Whether the device needs to be approved by the customer admin.
          type: boolean
        requireCorpOwned:
          description: Whether the device needs to be corp owned.
          type: boolean
        allowedDeviceManagementLevels:
          items:
            enumDescriptions:
              - The device's management level is not specified or not known.
              - The device is not managed.
              - >-
                Basic management is enabled, which is generally limited to
                monitoring and wiping the corporate account.
              - >-
                Complete device management. This includes more thorough
                monitoring and the ability to directly manage the device (such
                as remote wiping). This can be enabled through the Android
                Enterprise Platform.
            enum:
              - MANAGEMENT_UNSPECIFIED
              - NONE
              - BASIC
              - COMPLETE
            type: string
          description: >-
            Allowed device management levels, an empty list allows all
            management levels.
          type: array
        requireScreenlock:
          type: boolean
          description: >-
            Whether or not screenlock is required for the DevicePolicy to be
            true. Defaults to `false`.
        osConstraints:
          type: array
          description: >-
            Allowed OS versions, an empty list allows all types and all
            versions.
          items:
            $ref: '#/components/schemas/OsConstraint'
      description: >-
        `DevicePolicy` specifies device specific restrictions necessary to
        acquire a given access level. A `DevicePolicy` specifies requirements
        for requests from devices to be granted access levels, it does not do
        any enforcement on the device. `DevicePolicy` acts as an AND over all
        specified fields, and each repeated field is an OR over its elements.
        Any unset fields are ignored. For example, if the proto is { os_type :
        DESKTOP_WINDOWS, os_type : DESKTOP_LINUX, encryption_status: ENCRYPTED},
        then the DevicePolicy will be true for requests originating from
        encrypted Linux desktops and encrypted Windows desktops.
      type: object
      id: DevicePolicy
    ServicePerimeterConfig:
      properties:
        unrestrictedServices:
          type: array
          description: >-
            Google Cloud services that are not subject to the Service Perimeter
            restrictions. Deprecated. Must be set to a single wildcard "*". The
            wildcard means that unless explicitly specified by
            "restricted_services" list, any service is treated as unrestricted.
          items:
            type: string
        restrictedServices:
          items:
            type: string
          description: >-
            Google Cloud services that are subject to the Service Perimeter
            restrictions. Must contain a list of services. For example, if
            `storage.googleapis.com` is specified, access to the storage buckets
            inside the perimeter must meet the perimeter's access restrictions.
          type: array
        accessLevels:
          items:
            type: string
          description: >-
            A list of `AccessLevel` resource names that allow resources within
            the `ServicePerimeter` to be accessed from the internet.
            `AccessLevels` listed must be in the same policy as this
            `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a
            syntax error. If no `AccessLevel` names are listed, resources within
            the perimeter can only be accessed via Google Cloud calls with
            request origins within the perimeter. Example:
            `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`. For Service
            Perimeter Bridge, must be empty.
          type: array
        resources:
          description: >-
            A list of Google Cloud resources that are inside of the service
            perimeter. Currently only projects are allowed. Format:
            `projects/{project_number}`
          items:
            type: string
          type: array
        vpcAccessibleServices:
          description: Beta. Configuration for APIs allowed within Perimeter.
          $ref: '#/components/schemas/VpcAccessibleServices'
      type: object
      id: ServicePerimeterConfig
      description: >-
        `ServicePerimeterConfig` specifies a set of Google Cloud resources that
        describe specific Service Perimeter configuration.
    Operation:
      properties:
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
      type: object
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      id: Operation
    VpcAccessibleServices:
      id: VpcAccessibleServices
      description: >-
        Specifies how APIs are allowed to communicate within the Service
        Perimeter.
      properties:
        enableRestriction:
          type: boolean
          description: >-
            Whether to restrict API calls within the Service Perimeter to the
            list of APIs specified in 'allowed_services'.
        allowedServices:
          items:
            type: string
          type: array
          description: >-
            The list of APIs usable within the Service Perimeter. Must be empty
            unless 'enable_restriction' is True. You can specify a list of
            individual services, as well as include the 'RESTRICTED-SERVICES'
            value, which automatically includes all of the services protected by
            the perimeter.
      type: object
    ListServicePerimetersResponse:
      description: A response to `ListServicePerimetersRequest`.
      properties:
        servicePerimeters:
          description: List of the Service Perimeter instances.
          items:
            $ref: '#/components/schemas/ServicePerimeter'
          type: array
        nextPageToken:
          type: string
          description: >-
            The pagination token to retrieve the next page of results. If the
            value is empty, no further results remain.
      type: object
      id: ListServicePerimetersResponse
    AccessLevel:
      description: >-
        An `AccessLevel` is a label that can be applied to requests to Google
        Cloud services, along with a list of requirements necessary for the
        label to be applied.
      properties:
        basic:
          description: A `BasicLevel` composed of `Conditions`.
          $ref: '#/components/schemas/BasicLevel'
        custom:
          description: A `CustomLevel` written in the Common Expression Language.
          $ref: '#/components/schemas/CustomLevel'
        description:
          description: >-
            Description of the `AccessLevel` and its use. Does not affect
            behavior.
          type: string
        name:
          description: >-
            Resource name for the `AccessLevel`. Format:
            `accessPolicies/{access_policy}/accessLevels/{access_level}`. The
            `access_level` component must begin with a letter, followed by
            alphanumeric characters or `_`. Its maximum length is 50 characters.
            After you create an `AccessLevel`, you cannot change its `name`.
          type: string
        title:
          type: string
          description: Human readable title. Must be unique within the Policy.
      type: object
      id: AccessLevel
    ListAccessPoliciesResponse:
      type: object
      properties:
        accessPolicies:
          description: List of the AccessPolicy instances.
          items:
            $ref: '#/components/schemas/AccessPolicy'
          type: array
        nextPageToken:
          description: >-
            The pagination token to retrieve the next page of results. If the
            value is empty, no further results remain.
          type: string
      id: ListAccessPoliciesResponse
      description: A response to `ListAccessPoliciesRequest`.
    ListAccessLevelsResponse:
      properties:
        nextPageToken:
          description: >-
            The pagination token to retrieve the next page of results. If the
            value is empty, no further results remain.
          type: string
        accessLevels:
          items:
            $ref: '#/components/schemas/AccessLevel'
          description: List of the Access Level instances.
          type: array
      type: object
      id: ListAccessLevelsResponse
      description: A response to `ListAccessLevelsRequest`.
    OsConstraint:
      description: A restriction on the OS type and version of devices making requests.
      type: object
      id: OsConstraint
      properties:
        osType:
          enum:
            - OS_UNSPECIFIED
            - DESKTOP_MAC
            - DESKTOP_WINDOWS
            - DESKTOP_LINUX
            - DESKTOP_CHROME_OS
            - ANDROID
            - IOS
          description: Required. The allowed OS type.
          type: string
          enumDescriptions:
            - The operating system of the device is not specified or not known.
            - A desktop Mac operating system.
            - A desktop Windows operating system.
            - A desktop Linux operating system.
            - A desktop ChromeOS operating system.
            - An Android operating system.
            - An iOS operating system.
        requireVerifiedChromeOs:
          type: boolean
          description: >-
            Only allows requests from devices with a verified Chrome OS.
            Verifications includes requirements that the device is
            enterprise-managed, conformant to domain policies, and the caller
            has permission to call the API targeted by the request.
        minimumVersion:
          type: string
          description: >-
            The minimum allowed OS version. If not set, any version of this OS
            satisfies the constraint. Format: `"major.minor.patch"`. Examples:
            `"10.5.301"`, `"9.2.1"`.
    Condition:
      id: Condition
      description: >-
        A condition necessary for an `AccessLevel` to be granted. The Condition
        is an AND over its fields. So a Condition is true if: 1) the request IP
        is from one of the listed subnetworks AND 2) the originating device
        complies with the listed device policy AND 3) all listed access levels
        are granted AND 4) the request was sent at a time allowed by the
        DateTimeRestriction.
      properties:
        members:
          description: >-
            The request must be made by one of the provided user or service
            accounts. Groups are not supported. Syntax: `user:{emailid}`
            `serviceAccount:{emailid}` If not specified, a request may come from
            any user.
          type: array
          items:
            type: string
        ipSubnetworks:
          type: array
          description: >-
            CIDR block IP subnetwork specification. May be IPv4 or IPv6. Note
            that for a CIDR IP address block, the specified IP address portion
            must be properly truncated (i.e. all the host bits must be zero) or
            the input is considered malformed. For example, "192.0.2.0/24" is
            accepted but "192.0.2.1/24" is not. Similarly, for IPv6,
            "2001:db8::/32" is accepted whereas "2001:db8::1/32" is not. The
            originating IP of a request must be in one of the listed subnets in
            order for this Condition to be true. If empty, all IP addresses are
            allowed.
          items:
            type: string
        devicePolicy:
          $ref: '#/components/schemas/DevicePolicy'
          description: >-
            Device specific restrictions, all restrictions must hold for the
            Condition to be true. If not specified, all devices are allowed.
        requiredAccessLevels:
          type: array
          items:
            type: string
          description: >-
            A list of other access levels defined in the same `Policy`,
            referenced by resource name. Referencing an `AccessLevel` which does
            not exist is an error. All access levels listed must be granted for
            the Condition to be true. Example:
            "`accessPolicies/MY_POLICY/accessLevels/LEVEL_NAME"`
        regions:
          items:
            type: string
          description: >-
            The request must originate from one of the provided
            countries/regions. Must be valid ISO 3166-1 alpha-2 codes.
          type: array
        negate:
          type: boolean
          description: >-
            Whether to negate the Condition. If true, the Condition becomes a
            NAND over its non-empty fields, each field must be false for the
            Condition overall to be satisfied. Defaults to false.
      type: object
    AccessContextManagerOperationMetadata:
      id: AccessContextManagerOperationMetadata
      type: object
      description: Metadata of Access Context Manager's Long Running Operations.
      properties: {}
    Expr:
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      properties:
        description:
          type: string
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          type: string
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
        location:
          type: string
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
      type: object
      id: Expr
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta/accessPolicies/{accessPoliciesId}/servicePerimeters/{servicePerimetersId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/access_token'
    get:
      description: Get a Service Perimeter by resource name.
      operationId: accesscontextmanager.accessPolicies.servicePerimeters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePerimeter'
      parameters:
        - in: path
          name: accessPoliciesId
          required: true
          schema:
            type: string
        - in: path
          name: servicePerimetersId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_perimeters
      x-stackQL-verb: select
    delete:
      description: >-
        Delete a Service Perimeter by resource name. The longrunning operation
        from this RPC will have a successful status once the Service Perimeter
        has been removed from long-lasting storage.
      operationId: accesscontextmanager.accessPolicies.servicePerimeters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: accessPoliciesId
          required: true
          schema:
            type: string
        - in: path
          name: servicePerimetersId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_perimeters
      x-stackQL-verb: delete
    patch:
      description: >-
        Update a Service Perimeter. The longrunning operation from this RPC will
        have a successful status once the changes to the Service Perimeter have
        propagated to long-lasting storage. Service Perimeter containing errors
        will result in an error response for the first error encountered.
      operationId: accesscontextmanager.accessPolicies.servicePerimeters.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicePerimeter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: accessPoliciesId
          required: true
          schema:
            type: string
        - in: path
          name: servicePerimetersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: service_perimeters
      x-stackQL-verb: exec
  /v1beta/accessPolicies/{accessPoliciesId}/servicePerimeters:
    parameters: *ref_1
    get:
      description: List all Service Perimeters for an access policy.
      operationId: accesscontextmanager.accessPolicies.servicePerimeters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicePerimetersResponse'
      parameters:
        - in: path
          name: accessPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: service_perimeters
      x-stackQL-verb: select
    post:
      description: >-
        Create a Service Perimeter. The longrunning operation from this RPC will
        have a successful status once the Service Perimeter has propagated to
        long-lasting storage. Service Perimeters containing errors will result
        in an error response for the first error encountered.
      operationId: accesscontextmanager.accessPolicies.servicePerimeters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicePerimeter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: accessPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_perimeters
      x-stackQL-verb: insert
  /v1beta/accessPolicies/{accessPoliciesId}/accessLevels/{accessLevelsId}:
    parameters: *ref_1
    patch:
      description: >-
        Update an Access Level. The longrunning operation from this RPC will
        have a successful status once the changes to the Access Level have
        propagated to long-lasting storage. Access Levels containing errors will
        result in an error response for the first error encountered.
      operationId: accesscontextmanager.accessPolicies.accessLevels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessLevel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: accessPoliciesId
          required: true
          schema:
            type: string
        - in: path
          name: accessLevelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: access_levels
      x-stackQL-verb: exec
    delete:
      description: >-
        Delete an Access Level by resource name. The longrunning operation from
        this RPC will have a successful status once the Access Level has been
        removed from long-lasting storage.
      operationId: accesscontextmanager.accessPolicies.accessLevels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: accessPoliciesId
          required: true
          schema:
            type: string
        - in: path
          name: accessLevelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: access_levels
      x-stackQL-verb: delete
    get:
      description: Get an Access Level by resource name.
      operationId: accesscontextmanager.accessPolicies.accessLevels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessLevel'
      parameters:
        - in: path
          name: accessPoliciesId
          required: true
          schema:
            type: string
        - in: path
          name: accessLevelsId
          required: true
          schema:
            type: string
        - in: query
          name: accessLevelFormat
          schema:
            type: string
      x-stackQL-resource: access_levels
      x-stackQL-verb: select
  /v1beta/accessPolicies/{accessPoliciesId}/accessLevels:
    parameters: *ref_1
    post:
      description: >-
        Create an Access Level. The longrunning operation from this RPC will
        have a successful status once the Access Level has propagated to
        long-lasting storage. Access Levels containing errors will result in an
        error response for the first error encountered.
      operationId: accesscontextmanager.accessPolicies.accessLevels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessLevel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: accessPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: access_levels
      x-stackQL-verb: insert
    get:
      description: List all Access Levels for an access policy.
      operationId: accesscontextmanager.accessPolicies.accessLevels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessLevelsResponse'
      parameters:
        - in: path
          name: accessPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: accessLevelFormat
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: access_levels
      x-stackQL-verb: select
  /v1beta/accessPolicies/{accessPoliciesId}:
    parameters: *ref_1
    delete:
      description: >-
        Delete an AccessPolicy by resource name. The longrunning Operation will
        have a successful status once the AccessPolicy has been removed from
        long-lasting storage.
      operationId: accesscontextmanager.accessPolicies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: accessPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: access_policies
      x-stackQL-verb: delete
    get:
      description: Get an AccessPolicy by name.
      operationId: accesscontextmanager.accessPolicies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicy'
      parameters:
        - in: path
          name: accessPoliciesId
          required: true
          schema:
            type: string
      x-stackQL-resource: access_policies
      x-stackQL-verb: select
    patch:
      description: >-
        Update an AccessPolicy. The longrunning Operation from this RPC will
        have a successful status once the changes to the AccessPolicy have
        propagated to long-lasting storage. Syntactic and basic semantic errors
        will be returned in `metadata` as a BadRequest proto.
      operationId: accesscontextmanager.accessPolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: accessPoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: access_policies
      x-stackQL-verb: exec
  /v1beta/accessPolicies:
    parameters: *ref_1
    get:
      description: List all AccessPolicies under a container.
      operationId: accesscontextmanager.accessPolicies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessPoliciesResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: parent
          schema:
            type: string
      x-stackQL-resource: access_policies
      x-stackQL-verb: select
    post:
      description: >-
        Create an `AccessPolicy`. Fails if this organization already has a
        `AccessPolicy`. The longrunning Operation will have a successful status
        once the `AccessPolicy` has propagated to long-lasting storage.
        Syntactic and basic semantic errors will be returned in `metadata` as a
        BadRequest proto.
      operationId: accesscontextmanager.accessPolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters: []
      x-stackQL-resource: access_policies
      x-stackQL-verb: insert
  /v1beta/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: accesscontextmanager.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
