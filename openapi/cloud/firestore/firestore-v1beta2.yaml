openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Firestore API
  description: >-
    Accesses the NoSQL document database built for automatic scaling, high
    performance, and ease of application development. 
  version: v1beta2
  x-discovery-doc-revision: '20230611'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/firestore
servers:
  - url: https://firestore.googleapis.com
components:
  schemas:
    GoogleFirestoreAdminV1beta2Index:
      properties:
        name:
          description: >-
            Output only. A server defined name for this index. The form of this
            name for composite indexes will be:
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}`
            For single field indexes, this field will be empty.
          type: string
        state:
          type: string
          enumDescriptions:
            - The state is unspecified.
            - >-
              The index is being created. There is an active long-running
              operation for the index. The index is updated when writing a
              document. Some index data may exist.
            - >-
              The index is ready to be used. The index is updated when writing a
              document. The index is fully populated from all stored documents
              it applies to.
            - >-
              The index was being created, but something went wrong. There is no
              active long-running operation for the index, and the most recently
              finished long-running operation failed. The index is not updated
              when writing a document. Some index data may exist. Use the
              google.longrunning.Operations API to determine why the operation
              that last attempted to create this index failed, then re-create
              the index.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - NEEDS_REPAIR
          description: Output only. The serving state of the index.
        fields:
          type: array
          description: >-
            The fields supported by this index. For composite indexes, this is
            always 2 or more fields. The last field entry is always for the
            field path `__name__`. If, on creation, `__name__` was not specified
            as the last field, it will be added automatically with the same
            direction as that of the last field defined. If the final field in a
            composite index is not directional, the `__name__` will be ordered
            ASCENDING (unless explicitly specified). For single field indexes,
            this will always be exactly one entry with a field path equal to the
            field path of the associated field.
          items:
            $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2IndexField'
        queryScope:
          enumDescriptions:
            - The query scope is unspecified. Not a valid option.
            - >-
              Indexes with a collection query scope specified allow queries
              against a collection that is the child of a specific document,
              specified at query time, and that has the collection id specified
              by the index.
            - >-
              Indexes with a collection group query scope specified allow
              queries against all collections that has the collection id
              specified by the index.
          type: string
          enum:
            - QUERY_SCOPE_UNSPECIFIED
            - COLLECTION
            - COLLECTION_GROUP
          description: >-
            Indexes with a collection query scope specified allow queries
            against a collection that is the child of a specific document,
            specified at query time, and that has the same collection id.
            Indexes with a collection group query scope specified allow queries
            against all collections descended from a specific document,
            specified at query time, and that have the same collection id as
            this index.
      type: object
      id: GoogleFirestoreAdminV1beta2Index
      description: >-
        Cloud Firestore indexes enable simple and complex queries against
        documents in a database.
    GoogleFirestoreAdminV1beta2Progress:
      description: >-
        Describes the progress of the operation. Unit of work is generic and
        must be interpreted based on where Progress is used.
      properties:
        estimatedWork:
          description: The amount of work estimated.
          type: string
          format: int64
        completedWork:
          format: int64
          description: The amount of work completed.
          type: string
      id: GoogleFirestoreAdminV1beta2Progress
      type: object
    GoogleFirestoreAdminV1beta2ListFieldsResponse:
      id: GoogleFirestoreAdminV1beta2ListFieldsResponse
      type: object
      description: The response for FirestoreAdmin.ListFields.
      properties:
        fields:
          items:
            $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Field'
          type: array
          description: The requested fields.
        nextPageToken:
          type: string
          description: >-
            A page token that may be used to request another page of results. If
            blank, this is the last page.
    GoogleFirestoreAdminV1beta2ImportDocumentsRequest:
      id: GoogleFirestoreAdminV1beta2ImportDocumentsRequest
      description: The request for FirestoreAdmin.ImportDocuments.
      properties:
        inputUriPrefix:
          description: >-
            Location of the exported files. This must match the
            output_uri_prefix of an ExportDocumentsResponse from an export that
            has completed successfully. See:
            google.firestore.admin.v1beta2.ExportDocumentsResponse.output_uri_prefix.
          type: string
        collectionIds:
          items:
            type: string
          description: >-
            Which collection ids to import. Unspecified means all collections
            included in the import.
          type: array
      type: object
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      properties:
        response:
          type: object
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
      type: object
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
    GoogleFirestoreAdminV1beta2IndexConfig:
      properties:
        ancestorField:
          description: >-
            Output only. Specifies the resource name of the `Field` from which
            this field's index configuration is set (when `uses_ancestor_config`
            is true), or from which it *would* be set if this field had no index
            configuration (when `uses_ancestor_config` is false).
          type: string
        reverting:
          description: >-
            Output only When true, the `Field`'s index configuration is in the
            process of being reverted. Once complete, the index config will
            transition to the same state as the field specified by
            `ancestor_field`, at which point `uses_ancestor_config` will be
            `true` and `reverting` will be `false`.
          type: boolean
        indexes:
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Index'
          description: The indexes supported for this field.
        usesAncestorConfig:
          description: >-
            Output only. When true, the `Field`'s index configuration is set
            from the configuration specified by the `ancestor_field`. When
            false, the `Field`'s index configuration is defined explicitly.
          type: boolean
      description: The index configuration for this field.
      id: GoogleFirestoreAdminV1beta2IndexConfig
      type: object
    GoogleFirestoreAdminV1beta2Field:
      type: object
      id: GoogleFirestoreAdminV1beta2Field
      description: >-
        Represents a single field in the database. Fields are grouped by their
        "Collection Group", which represent all collections in the database with
        the same id.
      properties:
        name:
          type: string
          description: >-
            A field name of the form
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`
            A field path may be a simple field name, e.g. `address` or a path to
            fields within map_value , e.g. `address.city`, or a special field
            path. The only valid special field is `*`, which represents any
            field. Field paths may be quoted using ` (backtick). The only
            character that needs to be escaped within a quoted field path is the
            backtick character itself, escaped using a backslash. Special
            characters in field paths that must be quoted include: `*`, `.`, ```
            (backtick), `[`, `]`, as well as any ascii symbolic characters.
            Examples: (Note: Comments here are written in markdown syntax, so
            there is an additional layer of backticks to represent a code block)
            `\`address.city\`` represents a field named `address.city`, not the
            map key `city` in the field `address`. `\`*\`` represents a field
            named `*`, not any field. A special `Field` contains the default
            indexing settings for all fields. This field's resource name is:
            `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`
            Indexes defined on this `Field` will be applied to all fields which
            do not have their own `Field` index configuration.
        indexConfig:
          description: >-
            The index configuration for this field. If unset, field indexing
            will revert to the configuration defined by the `ancestor_field`. To
            explicitly remove all indexes for this field, specify an index
            config with an empty list of indexes.
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2IndexConfig'
    GoogleFirestoreAdminV1beta2IndexConfigDelta:
      id: GoogleFirestoreAdminV1beta2IndexConfigDelta
      description: Information about an index configuration change.
      properties:
        changeType:
          enumDescriptions:
            - The type of change is not specified or known.
            - The single field index is being added.
            - The single field index is being removed.
          type: string
          enum:
            - CHANGE_TYPE_UNSPECIFIED
            - ADD
            - REMOVE
          description: Specifies how the index is changing.
        index:
          description: The index being changed.
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Index'
      type: object
    GoogleFirestoreAdminV1beta2ImportDocumentsMetadata:
      type: object
      description: >-
        Metadata for google.longrunning.Operation results from
        FirestoreAdmin.ImportDocuments.
      properties:
        inputUriPrefix:
          type: string
          description: The location of the documents being imported.
        startTime:
          format: google-datetime
          description: The time this operation started.
          type: string
        endTime:
          type: string
          description: >-
            The time this operation completed. Will be unset if operation still
            in progress.
          format: google-datetime
        collectionIds:
          type: array
          items:
            type: string
          description: Which collection ids are being imported.
        operationState:
          type: string
          enumDescriptions:
            - Unspecified.
            - Request is being prepared for processing.
            - Request is actively being processed.
            - >-
              Request is in the process of being cancelled after user called
              google.longrunning.Operations.CancelOperation on the operation.
            - Request has been processed and is in its finalization stage.
            - Request has completed successfully.
            - Request has finished being processed, but encountered an error.
            - >-
              Request has finished being cancelled after user called
              google.longrunning.Operations.CancelOperation.
          enum:
            - OPERATION_STATE_UNSPECIFIED
            - INITIALIZING
            - PROCESSING
            - CANCELLING
            - FINALIZING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
          description: The state of the import operation.
        progressBytes:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
          description: The progress, in bytes, of this operation.
        progressDocuments:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
          description: The progress, in documents, of this operation.
      id: GoogleFirestoreAdminV1beta2ImportDocumentsMetadata
    GoogleFirestoreAdminV1beta2ExportDocumentsRequest:
      id: GoogleFirestoreAdminV1beta2ExportDocumentsRequest
      properties:
        outputUriPrefix:
          description: >-
            The output URI. Currently only supports Google Cloud Storage URIs of
            the form: `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME`
            is the name of the Google Cloud Storage bucket and `NAMESPACE_PATH`
            is an optional Google Cloud Storage namespace path. When choosing a
            name, be sure to consider Google Cloud Storage naming guidelines:
            https://cloud.google.com/storage/docs/naming. If the URI is a bucket
            (without a namespace path), a prefix will be generated based on the
            start time.
          type: string
        collectionIds:
          items:
            type: string
          type: array
          description: Which collection ids to export. Unspecified means all collections.
      description: The request for FirestoreAdmin.ExportDocuments.
      type: object
    GoogleFirestoreAdminV1beta2ExportDocumentsResponse:
      id: GoogleFirestoreAdminV1beta2ExportDocumentsResponse
      description: Returned in the google.longrunning.Operation response field.
      type: object
      properties:
        outputUriPrefix:
          description: >-
            Location of the output files. This can be used to begin an import
            into Cloud Firestore (this project or another project) after the
            operation completes successfully.
          type: string
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    GoogleFirestoreAdminV1beta2FieldOperationMetadata:
      description: >-
        Metadata for google.longrunning.Operation results from
        FirestoreAdmin.UpdateField.
      id: GoogleFirestoreAdminV1beta2FieldOperationMetadata
      type: object
      properties:
        documentProgress:
          description: The progress, in documents, of this operation.
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
        bytesProgress:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
          description: The progress, in bytes, of this operation.
        field:
          description: >-
            The field resource that this operation is acting on. For example:
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`
          type: string
        endTime:
          format: google-datetime
          type: string
          description: >-
            The time this operation completed. Will be unset if operation still
            in progress.
        state:
          type: string
          enumDescriptions:
            - Unspecified.
            - Request is being prepared for processing.
            - Request is actively being processed.
            - >-
              Request is in the process of being cancelled after user called
              google.longrunning.Operations.CancelOperation on the operation.
            - Request has been processed and is in its finalization stage.
            - Request has completed successfully.
            - Request has finished being processed, but encountered an error.
            - >-
              Request has finished being cancelled after user called
              google.longrunning.Operations.CancelOperation.
          description: The state of the operation.
          enum:
            - OPERATION_STATE_UNSPECIFIED
            - INITIALIZING
            - PROCESSING
            - CANCELLING
            - FINALIZING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
        indexConfigDeltas:
          type: array
          description: >-
            A list of IndexConfigDelta, which describe the intent of this
            operation.
          items:
            $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2IndexConfigDelta'
        startTime:
          description: The time this operation started.
          type: string
          format: google-datetime
    GoogleFirestoreAdminV1beta2IndexOperationMetadata:
      type: object
      description: >-
        Metadata for google.longrunning.Operation results from
        FirestoreAdmin.CreateIndex.
      properties:
        state:
          enum:
            - OPERATION_STATE_UNSPECIFIED
            - INITIALIZING
            - PROCESSING
            - CANCELLING
            - FINALIZING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
          type: string
          enumDescriptions:
            - Unspecified.
            - Request is being prepared for processing.
            - Request is actively being processed.
            - >-
              Request is in the process of being cancelled after user called
              google.longrunning.Operations.CancelOperation on the operation.
            - Request has been processed and is in its finalization stage.
            - Request has completed successfully.
            - Request has finished being processed, but encountered an error.
            - >-
              Request has finished being cancelled after user called
              google.longrunning.Operations.CancelOperation.
          description: The state of the operation.
        startTime:
          type: string
          format: google-datetime
          description: The time this operation started.
        endTime:
          type: string
          description: >-
            The time this operation completed. Will be unset if operation still
            in progress.
          format: google-datetime
        progressDocuments:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
          description: The progress, in documents, of this operation.
        progressBytes:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
          description: The progress, in bytes, of this operation.
        index:
          description: >-
            The index resource that this operation is acting on. For example:
            `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{index_id}`
          type: string
      id: GoogleFirestoreAdminV1beta2IndexOperationMetadata
    GoogleFirestoreAdminV1beta2ListIndexesResponse:
      properties:
        indexes:
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Index'
          description: The requested indexes.
        nextPageToken:
          type: string
          description: >-
            A page token that may be used to request another page of results. If
            blank, this is the last page.
      type: object
      description: The response for FirestoreAdmin.ListIndexes.
      id: GoogleFirestoreAdminV1beta2ListIndexesResponse
    GoogleFirestoreAdminV1beta2ExportDocumentsMetadata:
      description: >-
        Metadata for google.longrunning.Operation results from
        FirestoreAdmin.ExportDocuments.
      id: GoogleFirestoreAdminV1beta2ExportDocumentsMetadata
      properties:
        endTime:
          format: google-datetime
          type: string
          description: >-
            The time this operation completed. Will be unset if operation still
            in progress.
        collectionIds:
          description: Which collection ids are being exported.
          items:
            type: string
          type: array
        progressDocuments:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
          description: The progress, in documents, of this operation.
        startTime:
          type: string
          format: google-datetime
          description: The time this operation started.
        progressBytes:
          $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Progress'
          description: The progress, in bytes, of this operation.
        outputUriPrefix:
          type: string
          description: Where the entities are being exported to.
        operationState:
          enumDescriptions:
            - Unspecified.
            - Request is being prepared for processing.
            - Request is actively being processed.
            - >-
              Request is in the process of being cancelled after user called
              google.longrunning.Operations.CancelOperation on the operation.
            - Request has been processed and is in its finalization stage.
            - Request has completed successfully.
            - Request has finished being processed, but encountered an error.
            - >-
              Request has finished being cancelled after user called
              google.longrunning.Operations.CancelOperation.
          type: string
          enum:
            - OPERATION_STATE_UNSPECIFIED
            - INITIALIZING
            - PROCESSING
            - CANCELLING
            - FINALIZING
            - SUCCESSFUL
            - FAILED
            - CANCELLED
          description: The state of the export operation.
      type: object
    GoogleFirestoreAdminV1UpdateDatabaseMetadata:
      type: object
      properties: {}
      description: Metadata related to the update database operation.
      id: GoogleFirestoreAdminV1UpdateDatabaseMetadata
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: Status
      properties:
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
        code:
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
      type: object
    GoogleFirestoreAdminV1beta2IndexField:
      id: GoogleFirestoreAdminV1beta2IndexField
      description: >-
        A field in an index. The field_path describes which field is indexed,
        the value_mode describes how the field value is indexed.
      type: object
      properties:
        order:
          description: >-
            Indicates that this field supports ordering by the specified order
            or comparing using =, <, <=, >, >=.
          enumDescriptions:
            - The ordering is unspecified. Not a valid option.
            - The field is ordered by ascending field value.
            - The field is ordered by descending field value.
          enum:
            - ORDER_UNSPECIFIED
            - ASCENDING
            - DESCENDING
          type: string
        arrayConfig:
          description: Indicates that this field supports operations on `array_value`s.
          enumDescriptions:
            - The index does not support additional array queries.
            - The index supports array containment queries.
          type: string
          enum:
            - ARRAY_CONFIG_UNSPECIFIED
            - CONTAINS
        fieldPath:
          type: string
          description: >-
            Can be __name__. For single field indexes, this must match the name
            of the field or may be omitted.
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/datastore: View and manage your Google Cloud Datastore data
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta2/projects/{projectsId}/databases/{databasesId}:exportDocuments:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
    post:
      description: >-
        Exports a copy of all or a subset of documents from Google Cloud
        Firestore to another storage system, such as Google Cloud Storage.
        Recent updates to documents may not be reflected in the export. The
        export occurs in the background and its progress can be monitored and
        managed via the Operation resource that is created. The output of an
        export may only be used once the associated operation is done. If an
        export operation is cancelled before completion it may leave partial
        data behind in Google Cloud Storage.
      operationId: firestore.projects.databases.exportDocuments
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirestoreAdminV1beta2ExportDocumentsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/datastore
          Oauth2c:
            - https://www.googleapis.com/auth/datastore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: databasesId
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-verb: exec
  /v1beta2/projects/{projectsId}/databases/{databasesId}:importDocuments:
    parameters: *ref_1
    post:
      description: >-
        Imports documents into Google Cloud Firestore. Existing documents with
        the same name are overwritten. The import occurs in the background and
        its progress can be monitored and managed via the Operation resource
        that is created. If an ImportDocuments operation is cancelled, it is
        possible that a subset of the data has already been imported to Cloud
        Firestore.
      operationId: firestore.projects.databases.importDocuments
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirestoreAdminV1beta2ImportDocumentsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/datastore
          Oauth2c:
            - https://www.googleapis.com/auth/datastore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: databasesId
          required: true
          schema:
            type: string
      x-stackQL-resource: databases
      x-stackQL-verb: exec
  /v1beta2/projects/{projectsId}/databases/{databasesId}/collectionGroups/{collectionGroupsId}/fields/{fieldsId}:
    parameters: *ref_1
    get:
      description: Gets the metadata and configuration for a Field.
      operationId: firestore.projects.databases.collectionGroups.fields.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/datastore
          Oauth2c:
            - https://www.googleapis.com/auth/datastore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Field'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: databasesId
          required: true
          schema:
            type: string
        - in: path
          name: collectionGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: fieldsId
          required: true
          schema:
            type: string
      x-stackQL-resource: fields
      x-stackQL-verb: select
    patch:
      description: >-
        Updates a field configuration. Currently, field updates apply only to
        single field index configuration. However, calls to
        FirestoreAdmin.UpdateField should provide a field mask to avoid changing
        any configuration that the caller isn't aware of. The field mask should
        be specified as: `{ paths: "index_config" }`. This call returns a
        google.longrunning.Operation which may be used to track the status of
        the field update. The metadata for the operation will be the type
        FieldOperationMetadata. To configure the default field settings for the
        database, use the special `Field` with resource name:
        `projects/{project_id}/databases/{database_id}/collectionGroups/__default__/fields/*`.
      operationId: firestore.projects.databases.collectionGroups.fields.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Field'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/datastore
          Oauth2c:
            - https://www.googleapis.com/auth/datastore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: databasesId
          required: true
          schema:
            type: string
        - in: path
          name: collectionGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: fieldsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: fields
      x-stackQL-verb: exec
  /v1beta2/projects/{projectsId}/databases/{databasesId}/collectionGroups/{collectionGroupsId}/fields:
    parameters: *ref_1
    get:
      description: >-
        Lists the field configuration and metadata for this database. Currently,
        FirestoreAdmin.ListFields only supports listing fields that have been
        explicitly overridden. To issue this query, call
        FirestoreAdmin.ListFields with the filter set to
        `indexConfig.usesAncestorConfig:false`.
      operationId: firestore.projects.databases.collectionGroups.fields.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/datastore
          Oauth2c:
            - https://www.googleapis.com/auth/datastore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirestoreAdminV1beta2ListFieldsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: databasesId
          required: true
          schema:
            type: string
        - in: path
          name: collectionGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: fields
      x-stackQL-verb: select
  /v1beta2/projects/{projectsId}/databases/{databasesId}/collectionGroups/{collectionGroupsId}/indexes/{indexesId}:
    parameters: *ref_1
    get:
      description: Gets a composite index.
      operationId: firestore.projects.databases.collectionGroups.indexes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/datastore
          Oauth2c:
            - https://www.googleapis.com/auth/datastore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Index'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: databasesId
          required: true
          schema:
            type: string
        - in: path
          name: collectionGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
      x-stackQL-resource: indexes
      x-stackQL-verb: select
    delete:
      description: Deletes a composite index.
      operationId: firestore.projects.databases.collectionGroups.indexes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/datastore
          Oauth2c:
            - https://www.googleapis.com/auth/datastore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: databasesId
          required: true
          schema:
            type: string
        - in: path
          name: collectionGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: indexesId
          required: true
          schema:
            type: string
      x-stackQL-resource: indexes
      x-stackQL-verb: delete
  /v1beta2/projects/{projectsId}/databases/{databasesId}/collectionGroups/{collectionGroupsId}/indexes:
    parameters: *ref_1
    get:
      description: Lists composite indexes.
      operationId: firestore.projects.databases.collectionGroups.indexes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/datastore
          Oauth2c:
            - https://www.googleapis.com/auth/datastore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirestoreAdminV1beta2ListIndexesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: databasesId
          required: true
          schema:
            type: string
        - in: path
          name: collectionGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: indexes
      x-stackQL-verb: select
    post:
      description: >-
        Creates a composite index. This returns a google.longrunning.Operation
        which may be used to track the status of the creation. The metadata for
        the operation will be the type IndexOperationMetadata.
      operationId: firestore.projects.databases.collectionGroups.indexes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirestoreAdminV1beta2Index'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/datastore
          Oauth2c:
            - https://www.googleapis.com/auth/datastore
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: databasesId
          required: true
          schema:
            type: string
        - in: path
          name: collectionGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: indexes
      x-stackQL-verb: insert
