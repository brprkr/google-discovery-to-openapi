openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Identity Toolkit API
  description: Help the third party sites to implement federated login.
  version: v3
  x-discovery-doc-revision: '20180723'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/identity-toolkit/v3/
servers:
  - url: https://www.googleapis.com/identitytoolkit/v3/relyingparty
components:
  schemas:
    GetOobConfirmationCodeResponse:
      description: >-
        Response of getting a code for user confirmation (reset password, change
        email etc.).
      id: GetOobConfirmationCodeResponse
      properties:
        kind:
          type: string
          description: The fixed string "identitytoolkit#GetOobConfirmationCodeResponse".
          default: identitytoolkit#GetOobConfirmationCodeResponse
        email:
          description: The email address that the email is sent to.
          type: string
        oobCode:
          description: The code to be send to the user.
          type: string
      type: object
    IdentitytoolkitRelyingpartyUploadAccountRequest:
      properties:
        targetProjectId:
          description: >-
            Specify which project (field value is actually project id) to
            operate. Only used when provided credential.
          type: string
        dkLen:
          format: int32
          type: integer
        allowOverwrite:
          type: boolean
          description: Whether allow overwrite existing account when user local_id exists.
        saltSeparator:
          type: string
          format: byte
          description: The salt separator.
        blockSize:
          type: integer
          format: int32
        cpuMemCost:
          format: int32
          type: integer
          description: The following 4 fields are for standard scrypt algorithm.
        parallelization:
          type: integer
          format: int32
        signerKey:
          description: The key for to hash the password.
          format: byte
          type: string
        memoryCost:
          format: int32
          type: integer
          description: Memory cost for hash calculation. Used by scrypt similar algorithms.
        sanityCheck:
          description: >-
            If true, backend will do sanity check(including duplicate email and
            federated id) when uploading account.
          type: boolean
        hashAlgorithm:
          type: string
          description: The password hash algorithm.
        rounds:
          type: integer
          description: Rounds for hash calculation. Used by scrypt and similar algorithms.
          format: int32
        users:
          description: The account info to be stored.
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
        delegatedProjectNumber:
          type: string
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          format: int64
      id: IdentitytoolkitRelyingpartyUploadAccountRequest
      description: Request to upload user account in batch.
      type: object
    IdentitytoolkitRelyingpartySetProjectConfigRequest:
      type: object
      description: Request to set the project configuration.
      properties:
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        delegatedProjectNumber:
          type: string
          format: int64
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
        idpConfig:
          items:
            $ref: '#/components/schemas/IdpConfig'
          type: array
          description: Oauth2 provider configuration.
        changeEmailTemplate:
          description: Change email template.
          $ref: '#/components/schemas/EmailTemplate'
        authorizedDomains:
          type: array
          items:
            type: string
          description: Authorized domains for widget redirect.
        apiKey:
          type: string
          description: Browser API key, needed when making http request to Apiary.
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        verifyEmailTemplate:
          description: Verify email template.
          $ref: '#/components/schemas/EmailTemplate'
        enableAnonymousUser:
          type: boolean
          description: Whether to enable anonymous user.
        useEmailSending:
          type: boolean
          description: Whether to use email sending provided by Firebear.
        legacyResetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Legacy reset password email template.
      id: IdentitytoolkitRelyingpartySetProjectConfigRequest
    IdentitytoolkitRelyingpartyResetPasswordRequest:
      type: object
      properties:
        newPassword:
          type: string
          description: The new password inputted by the user.
        oldPassword:
          type: string
          description: The old password inputted by the user.
        oobCode:
          description: The confirmation code.
          type: string
        email:
          type: string
          description: The email address of the user.
      id: IdentitytoolkitRelyingpartyResetPasswordRequest
      description: Request to reset the password.
    SetAccountInfoResponse:
      type: object
      description: Respone of setting the account information.
      properties:
        newEmail:
          type: string
          description: The new email the user attempts to change to.
        kind:
          type: string
          description: The fixed string "identitytoolkit#SetAccountInfoResponse".
          default: identitytoolkit#SetAccountInfoResponse
        providerUserInfo:
          description: The user's profiles at the associated IdPs.
          items:
            type: object
            properties:
              federatedId:
                type: string
                description: User's identifier at IDP.
              photoUrl:
                type: string
                description: The user's photo url at the IDP.
              providerId:
                type: string
                description: >-
                  The IdP ID. For whitelisted IdPs it's a short domain name,
                  e.g., google.com, aol.com, live.net and yahoo.com. For other
                  OpenID IdPs it's the OP identifier.
              displayName:
                type: string
                description: The user's display name at the IDP.
          type: array
        photoUrl:
          description: The photo url of the user.
          type: string
        emailVerified:
          description: If email has been verified.
          type: boolean
        passwordHash:
          type: string
          format: byte
          description: The user's hashed password.
        displayName:
          description: The name of the user.
          type: string
        localId:
          type: string
          description: The local ID of the user.
        email:
          type: string
          description: The email of the user.
        idToken:
          description: The Gitkit id token to login the newly sign up user.
          type: string
        refreshToken:
          type: string
          description: If idToken is STS id token, then this field will be refresh token.
        expiresIn:
          format: int64
          description: >-
            If idToken is STS id token, then this field will be expiration time
            of STS id token in seconds.
          type: string
      id: SetAccountInfoResponse
    VerifyPasswordResponse:
      type: object
      description: Request of verifying the password.
      properties:
        displayName:
          description: The name of the user.
          type: string
        registered:
          type: boolean
          description: Whether the email is registered.
        expiresIn:
          description: >-
            If idToken is STS id token, then this field will be expiration time
            of STS id token in seconds.
          type: string
          format: int64
        kind:
          default: identitytoolkit#VerifyPasswordResponse
          description: The fixed string "identitytoolkit#VerifyPasswordResponse".
          type: string
        idToken:
          type: string
          description: The GITKit token for authenticated user.
        photoUrl:
          description: The URI of the user's photo at IdP
          type: string
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        oauthExpireIn:
          description: The lifetime in seconds of the OAuth2 access token.
          type: integer
          format: int32
        localId:
          type: string
          description: >-
            The RP local ID if it's already been mapped to the IdP account
            identified by the federated ID.
        email:
          description: >-
            The email returned by the IdP. NOTE: The federated login user may
            not own the email.
          type: string
        refreshToken:
          description: If idToken is STS id token, then this field will be refresh token.
          type: string
        oauthAccessToken:
          type: string
          description: The OAuth2 access token.
      id: VerifyPasswordResponse
    DeleteAccountResponse:
      type: object
      id: DeleteAccountResponse
      properties:
        kind:
          default: identitytoolkit#DeleteAccountResponse
          type: string
          description: The fixed string "identitytoolkit#DeleteAccountResponse".
      description: Respone of deleting account.
    GetRecaptchaParamResponse:
      properties:
        kind:
          default: identitytoolkit#GetRecaptchaParamResponse
          description: The fixed string "identitytoolkit#GetRecaptchaParamResponse".
          type: string
        recaptchaStoken:
          description: >-
            The stoken field for the recaptcha widget, used to request captcha
            challenge.
          type: string
        recaptchaSiteKey:
          description: Site key registered at recaptcha.
          type: string
      description: Response of getting recaptcha param.
      id: GetRecaptchaParamResponse
      type: object
    IdentitytoolkitRelyingpartySignupNewUserRequest:
      description: >-
        Request to signup new user, create anonymous user or anonymous user
        reauth.
      properties:
        emailVerified:
          description: >-
            Mark the email as verified or not. Only can be used by service
            account.
          type: boolean
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        instanceId:
          description: Instance id token of the app.
          type: string
        email:
          description: The email of the user.
          type: string
        tenantProjectNumber:
          format: uint64
          description: Tenant project number to be used for idp discovery.
          type: string
        captchaResponse:
          description: Response to the captcha.
          type: string
        disabled:
          description: Whether to disable the user. Only can be used by service account.
          type: boolean
        tenantId:
          type: string
          description: >-
            For multi-tenant use cases, in order to construct sign-in URL with
            the correct IDP parameters, Firebear needs to know which Tenant to
            retrieve IDP configs from.
        captchaChallenge:
          type: string
          description: The captcha challenge.
        photoUrl:
          description: The photo url of the user.
          type: string
        password:
          description: The new password of the user.
          type: string
        localId:
          type: string
          description: Privileged caller can create user with specified user id.
        displayName:
          type: string
          description: The name of the user.
        phoneNumber:
          type: string
          description: Privileged caller can create user with specified phone number.
      id: IdentitytoolkitRelyingpartySignupNewUserRequest
      type: object
    IdentitytoolkitRelyingpartySendVerificationCodeRequest:
      properties:
        iosReceipt:
          description: Receipt of successful app token validation with APNS.
          type: string
        phoneNumber:
          description: The phone number to send the verification code to in E.164 format.
          type: string
        recaptchaToken:
          description: Recaptcha solution.
          type: string
        iosSecret:
          description: Secret delivered to iOS app via APNS.
          type: string
      id: IdentitytoolkitRelyingpartySendVerificationCodeRequest
      type: object
      description: Request for Identitytoolkit-SendVerificationCode
    IdentitytoolkitRelyingpartyGetAccountInfoRequest:
      description: Request to get the account information.
      type: object
      id: IdentitytoolkitRelyingpartyGetAccountInfoRequest
      properties:
        localId:
          items:
            type: string
          description: The list of local ID's of the users to inquiry.
          type: array
        email:
          type: array
          description: The list of emails of the users to inquiry.
          items:
            type: string
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        delegatedProjectNumber:
          format: int64
          type: string
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
        phoneNumber:
          description: Privileged caller can query users by specified phone number.
          items:
            type: string
          type: array
    IdentitytoolkitRelyingpartySetProjectConfigResponse:
      id: IdentitytoolkitRelyingpartySetProjectConfigResponse
      properties:
        projectId:
          type: string
          description: Project ID of the relying party.
      type: object
      description: Response of setting the project configuration.
    EmailLinkSigninResponse:
      description: Response of email signIn.
      type: object
      properties:
        refreshToken:
          type: string
          description: The refresh token for the signed in user.
        kind:
          default: identitytoolkit#EmailLinkSigninResponse
          description: The fixed string "identitytoolkit#EmailLinkSigninResponse".
          type: string
        idToken:
          type: string
          description: The STS id token to login the newly signed in user.
        expiresIn:
          type: string
          format: int64
          description: Expiration time of STS id token in seconds.
        localId:
          description: The RP local ID of the user.
          type: string
        email:
          type: string
          description: The user's email.
        isNewUser:
          type: boolean
          description: Whether the user is new.
      id: EmailLinkSigninResponse
    IdentitytoolkitRelyingpartySignOutUserRequest:
      properties:
        instanceId:
          type: string
          description: Instance id token of the app.
        localId:
          description: The local ID of the user.
          type: string
      description: Request to sign out user.
      id: IdentitytoolkitRelyingpartySignOutUserRequest
      type: object
    IdentitytoolkitRelyingpartyDownloadAccountRequest:
      properties:
        delegatedProjectNumber:
          format: int64
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          type: string
        nextPageToken:
          description: >-
            The token for the next page. This should be taken from the previous
            response.
          type: string
        targetProjectId:
          description: >-
            Specify which project (field value is actually project id) to
            operate. Only used when provided credential.
          type: string
        maxResults:
          type: integer
          description: The max number of results to return in the response.
          format: uint32
      description: Request to download user account in batch.
      id: IdentitytoolkitRelyingpartyDownloadAccountRequest
      type: object
    IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse:
      description: Response for Identitytoolkit-VerifyPhoneNumber
      type: object
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
      properties:
        idToken:
          type: string
        temporaryProofExpiresIn:
          type: string
          format: int64
        verificationProofExpiresIn:
          type: string
          format: int64
        refreshToken:
          type: string
        temporaryProof:
          type: string
        phoneNumber:
          type: string
        localId:
          type: string
        verificationProof:
          type: string
        isNewUser:
          type: boolean
        expiresIn:
          type: string
          format: int64
    DownloadAccountResponse:
      description: Response of downloading accounts in batch.
      id: DownloadAccountResponse
      properties:
        kind:
          type: string
          description: The fixed string "identitytoolkit#DownloadAccountResponse".
          default: identitytoolkit#DownloadAccountResponse
        nextPageToken:
          type: string
          description: >-
            The next page token. To be used in a subsequent request to return
            the next page of results.
        users:
          description: The user accounts data.
          items:
            $ref: '#/components/schemas/UserInfo'
          type: array
      type: object
    IdentitytoolkitRelyingpartyVerifyCustomTokenRequest:
      description: Request to verify a custom token
      properties:
        token:
          type: string
          description: The custom token to verify
        delegatedProjectNumber:
          format: int64
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          type: string
        instanceId:
          type: string
          description: Instance id token of the app.
        returnSecureToken:
          description: >-
            Whether return sts id token and refresh token instead of gitkit
            token.
          type: boolean
      id: IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
      type: object
    GetAccountInfoResponse:
      type: object
      properties:
        kind:
          default: identitytoolkit#GetAccountInfoResponse
          description: The fixed string "identitytoolkit#GetAccountInfoResponse".
          type: string
        users:
          description: The info of the users.
          items:
            $ref: '#/components/schemas/UserInfo'
          type: array
      description: Response of getting account information.
      id: GetAccountInfoResponse
    SignupNewUserResponse:
      description: >-
        Response of signing up new user, creating anonymous user or anonymous
        user reauth.
      type: object
      id: SignupNewUserResponse
      properties:
        displayName:
          description: The name of the user.
          type: string
        localId:
          description: The RP local ID of the user.
          type: string
        kind:
          type: string
          default: identitytoolkit#SignupNewUserResponse
          description: The fixed string "identitytoolkit#SignupNewUserResponse".
        expiresIn:
          format: int64
          description: >-
            If idToken is STS id token, then this field will be expiration time
            of STS id token in seconds.
          type: string
        email:
          description: The email of the user.
          type: string
        refreshToken:
          description: If idToken is STS id token, then this field will be refresh token.
          type: string
        idToken:
          type: string
          description: The Gitkit id token to login the newly sign up user.
    IdentitytoolkitRelyingpartyEmailLinkSigninRequest:
      properties:
        oobCode:
          type: string
          description: The confirmation code.
        idToken:
          description: Token for linking flow.
          type: string
        email:
          description: The email address of the user.
          type: string
      id: IdentitytoolkitRelyingpartyEmailLinkSigninRequest
      description: Request to sign in with email.
      type: object
    Relyingparty:
      type: object
      description: >-
        Request of getting a code for user confirmation (reset password, change
        email etc.)
      id: Relyingparty
      properties:
        userIp:
          description: The IP address of the user.
          type: string
        androidMinimumVersion:
          type: string
          description: >-
            minimum version of the app. if the version on the device is lower
            than this version then the user is taken to the play store to
            upgrade the app
        idToken:
          type: string
          description: The user's Gitkit login token for email change.
        email:
          description: The email of the user.
          type: string
        challenge:
          description: The recaptcha challenge presented to the user.
          type: string
        androidPackageName:
          type: string
          description: android package name of the android app to handle the action code
        captchaResp:
          type: string
          description: The recaptcha response from the user.
        requestType:
          description: The request type.
          type: string
        androidInstallApp:
          type: boolean
          description: >-
            whether or not to install the android app on the device where the
            link is opened
        iOSAppStoreId:
          description: iOS app store id to download the app if it's not already installed
          type: string
        canHandleCodeInApp:
          type: boolean
          description: >-
            whether or not the app can handle the oob code without first going
            to web
        continueUrl:
          description: The url to continue to the Gitkit app
          type: string
        iOSBundleId:
          type: string
          description: the iOS bundle id of iOS app to handle the action code
        newEmail:
          type: string
          description: The new email if the code is for email change.
        kind:
          type: string
          default: identitytoolkit#relyingparty
          description: The fixed string "identitytoolkit#relyingparty".
    IdentitytoolkitRelyingpartyVerifyAssertionRequest:
      type: object
      properties:
        sessionId:
          description: >-
            Session ID, which should match the one in previous createAuthUri
            request.
          type: string
        tenantProjectNumber:
          description: Tenant project number to be used for idp discovery.
          format: uint64
          type: string
        returnIdpCredential:
          type: boolean
          description: >-
            Whether return 200 and IDP credential rather than throw exception
            when federated id is already linked.
        returnRefreshToken:
          type: boolean
          description: Whether to return refresh tokens.
        autoCreate:
          type: boolean
          description: >-
            When it's true, automatically creates a new account if the user
            doesn't exist. When it's false, allows existing user to sign in
            normally and throws exception if the user doesn't exist.
        tenantId:
          description: >-
            For multi-tenant use cases, in order to construct sign-in URL with
            the correct IDP parameters, Firebear needs to know which Tenant to
            retrieve IDP configs from.
          type: string
        delegatedProjectNumber:
          format: int64
          type: string
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
        postBody:
          description: The post body if the request is a HTTP POST.
          type: string
        instanceId:
          description: Instance id token of the app.
          type: string
        pendingIdToken:
          description: >-
            The GITKit token for the non-trusted IDP pending to be confirmed by
            the user.
          type: string
        idToken:
          description: The GITKit token of the authenticated user.
          type: string
        returnSecureToken:
          description: >-
            Whether return sts id token and refresh token instead of gitkit
            token.
          type: boolean
        requestUri:
          description: >-
            The URI to which the IDP redirects the user back. It may contain
            federated login result params added by the IDP.
          type: string
      description: Request to verify the IDP assertion.
      id: IdentitytoolkitRelyingpartyVerifyAssertionRequest
    ResetPasswordResponse:
      properties:
        requestType:
          type: string
          description: The request type.
        email:
          description: >-
            The user's email. If the out-of-band code is for email recovery, the
            user's original email.
          type: string
        kind:
          description: The fixed string "identitytoolkit#ResetPasswordResponse".
          type: string
          default: identitytoolkit#ResetPasswordResponse
        newEmail:
          description: If the out-of-band code is for email recovery, the user's new email.
          type: string
      description: Response of resetting the password.
      type: object
      id: ResetPasswordResponse
    IdentitytoolkitRelyingpartyGetPublicKeysResponse:
      description: Respone of getting public keys.
      additionalProperties:
        type: string
      type: object
      id: IdentitytoolkitRelyingpartyGetPublicKeysResponse
    IdentitytoolkitRelyingpartySendVerificationCodeResponse:
      id: IdentitytoolkitRelyingpartySendVerificationCodeResponse
      description: Response for Identitytoolkit-SendVerificationCode
      type: object
      properties:
        sessionInfo:
          description: Encrypted session information
          type: string
    VerifyCustomTokenResponse:
      id: VerifyCustomTokenResponse
      description: Response from verifying a custom token
      properties:
        idToken:
          description: The GITKit token for authenticated user.
          type: string
        refreshToken:
          description: If idToken is STS id token, then this field will be refresh token.
          type: string
        isNewUser:
          description: True if it's a new user sign-in, false if it's a returning user.
          type: boolean
        expiresIn:
          type: string
          format: int64
          description: >-
            If idToken is STS id token, then this field will be expiration time
            of STS id token in seconds.
        kind:
          default: identitytoolkit#VerifyCustomTokenResponse
          description: The fixed string "identitytoolkit#VerifyCustomTokenResponse".
          type: string
      type: object
    UploadAccountResponse:
      type: object
      properties:
        kind:
          default: identitytoolkit#UploadAccountResponse
          description: The fixed string "identitytoolkit#UploadAccountResponse".
          type: string
        error:
          description: The error encountered while processing the account info.
          items:
            type: object
            properties:
              index:
                type: integer
                format: int32
                description: The index of the malformed account, starting from 0.
              message:
                description: Detailed error message for the account info.
                type: string
          type: array
      id: UploadAccountResponse
      description: Respone of uploading accounts in batch.
    UserInfo:
      properties:
        email:
          type: string
          description: The email of the user.
        phoneNumber:
          type: string
          description: User's phone number.
        localId:
          description: The local ID of the user.
          type: string
        photoUrl:
          type: string
          description: The URL of the user profile photo.
        emailVerified:
          description: Whether the email has been verified.
          type: boolean
        customAuth:
          description: Whether the user is authenticated by the developer.
          type: boolean
        displayName:
          type: string
          description: The name of the user.
        passwordHash:
          description: The user's hashed password.
          format: byte
          type: string
        rawPassword:
          type: string
          description: The user's plain text password.
        lastLoginAt:
          type: string
          description: last login timestamp.
          format: int64
        disabled:
          type: boolean
          description: Whether the user is disabled.
        passwordUpdatedAt:
          format: double
          type: number
          description: The timestamp when the password was last updated.
        version:
          description: Version of the user's password.
          type: integer
          format: int32
        providerUserInfo:
          items:
            properties:
              photoUrl:
                type: string
                description: The user's photo url at the IDP.
              federatedId:
                description: User's identifier at IDP.
                type: string
              displayName:
                description: The user's display name at the IDP.
                type: string
              email:
                description: User's email at IDP.
                type: string
              providerId:
                type: string
                description: >-
                  The IdP ID. For white listed IdPs it's a short domain name,
                  e.g., google.com, aol.com, live.net and yahoo.com. For other
                  OpenID IdPs it's the OP identifier.
              screenName:
                type: string
                description: User's screen name at Twitter or login name at Github.
              rawId:
                type: string
                description: User's raw identifier directly returned from IDP.
              phoneNumber:
                type: string
                description: User's phone number.
            type: object
          description: The IDP of the user.
          type: array
        validSince:
          format: int64
          description: Timestamp in seconds for valid login token.
          type: string
        createdAt:
          format: int64
          description: User creation timestamp.
          type: string
        customAttributes:
          type: string
          description: The custom attributes to be set in the user's id token.
        salt:
          format: byte
          type: string
          description: The user's password salt.
        screenName:
          description: User's screen name at Twitter or login name at Github.
          type: string
      description: Template for an individual account info.
      id: UserInfo
      type: object
    EmailTemplate:
      id: EmailTemplate
      type: object
      properties:
        format:
          description: Email body format.
          type: string
        from:
          type: string
          description: From address of the email.
        fromDisplayName:
          type: string
          description: From display name.
        replyTo:
          description: Reply-to address.
          type: string
        body:
          type: string
          description: Email body.
        subject:
          type: string
          description: Subject of the email.
      description: Template for an email template.
    IdentitytoolkitRelyingpartySetAccountInfoRequest:
      id: IdentitytoolkitRelyingpartySetAccountInfoRequest
      description: Request to set the account information.
      properties:
        delegatedProjectNumber:
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          type: string
          format: int64
        oobCode:
          description: The out-of-band code of the change email request.
          type: string
        disableUser:
          description: Whether to disable the user.
          type: boolean
        displayName:
          type: string
          description: The name of the user.
        deleteAttribute:
          description: The attributes users request to delete.
          type: array
          items:
            type: string
        localId:
          description: The local ID of the user.
          type: string
        phoneNumber:
          description: Privileged caller can update user with specified phone number.
          type: string
        customAttributes:
          description: The custom attributes to be set in the user's id token.
          type: string
        captchaResponse:
          description: Response to the captcha.
          type: string
        createdAt:
          format: int64
          description: The timestamp when the account is created.
          type: string
        captchaChallenge:
          description: The captcha challenge.
          type: string
        photoUrl:
          description: The photo url of the user.
          type: string
        upgradeToFederatedLogin:
          type: boolean
          description: Mark the user to upgrade to federated login.
        emailVerified:
          type: boolean
          description: Mark the email as verified or not.
        instanceId:
          type: string
          description: Instance id token of the app.
        email:
          type: string
          description: The email of the user.
        deleteProvider:
          items:
            type: string
          type: array
          description: The IDPs the user request to delete.
        validSince:
          type: string
          format: int64
          description: Timestamp in seconds for valid login token.
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        password:
          type: string
          description: The new password of the user.
        lastLoginAt:
          format: int64
          description: Last login timestamp.
          type: string
        returnSecureToken:
          type: boolean
          description: >-
            Whether return sts id token and refresh token instead of gitkit
            token.
        provider:
          description: The associated IDPs of the user.
          type: array
          items:
            type: string
      type: object
    IdentitytoolkitRelyingpartySignOutUserResponse:
      properties:
        localId:
          description: The local ID of the user.
          type: string
      id: IdentitytoolkitRelyingpartySignOutUserResponse
      description: Response of signing out user.
      type: object
    IdentitytoolkitRelyingpartyCreateAuthUriRequest:
      id: IdentitytoolkitRelyingpartyCreateAuthUriRequest
      properties:
        continueUri:
          description: >-
            The URI to which the IDP redirects the user after the federated
            login flow.
          type: string
        tenantId:
          type: string
          description: >-
            For multi-tenant use cases, in order to construct sign-in URL with
            the correct IDP parameters, Firebear needs to know which Tenant to
            retrieve IDP configs from.
        appId:
          type: string
          description: >-
            The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for
            Android, BUNDLE_ID for iOS.
        identifier:
          type: string
          description: The email or federated ID of the user.
        providerId:
          description: >-
            The IdP ID. For white listed IdPs it's a short domain name e.g.
            google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs
            it's the OP identifier.
          type: string
        authFlowType:
          description: >-
            Explicitly specify the auth flow type. Currently only support
            "CODE_FLOW" type. The field is only used for Google provider.
          type: string
        clientId:
          type: string
          description: The relying party OAuth client ID.
        sessionId:
          description: The session_id passed by client.
          type: string
        context:
          type: string
          description: >-
            The opaque value used by the client to maintain context info between
            the authentication request and the IDP callback.
        oauthScope:
          description: >-
            Additional oauth scopes, beyond the basid user profile, that the
            user would be prompted to grant
          type: string
        openidRealm:
          description: >-
            Optional realm for OpenID protocol. The sub string
            "scheme://domain:port" of the param "continueUri" is used if this is
            not set.
          type: string
        tenantProjectNumber:
          format: uint64
          description: Tenant project number to be used for idp discovery.
          type: string
        oauthConsumerKey:
          description: The developer's consumer key for OpenId OAuth Extension
          type: string
        otaApp:
          description: The native app package for OTA installation.
          type: string
        customParameter:
          type: object
          additionalProperties:
            type: string
            description: The customized query parameter.
          description: >-
            The query parameter that client can customize by themselves in auth
            url. The following parameters are reserved for server so that they
            cannot be customized by clients: client_id, response_type, scope,
            redirect_uri, state, oauth_token.
        hostedDomain:
          description: >-
            The hosted domain to restrict sign-in to accounts at that domain for
            Google Apps hosted accounts.
          type: string
      description: Request to get the IDP authentication URL.
      type: object
    IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest:
      type: object
      id: IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
      properties:
        sessionInfo:
          description: >-
            The session info previously returned by
            IdentityToolkit-SendVerificationCode.
          type: string
        phoneNumber:
          type: string
        temporaryProof:
          type: string
        code:
          type: string
        idToken:
          type: string
        verificationProof:
          type: string
        operation:
          type: string
      description: Request for Identitytoolkit-VerifyPhoneNumber
    CreateAuthUriResponse:
      description: Response of creating the IDP authentication URL.
      type: object
      properties:
        forExistingProvider:
          description: True if the authUri is for user's existing provider.
          type: boolean
        allProviders:
          type: array
          items:
            type: string
          description: all providers the user has once used to do federated login
        captchaRequired:
          type: boolean
          description: True if captcha is required.
        authUri:
          type: string
          description: The URI used by the IDP to authenticate the user.
        registered:
          type: boolean
          description: Whether the user is registered if the identifier is an email.
        signinMethods:
          items:
            type: string
          type: array
          description: All sign-in methods this user has used.
        kind:
          default: identitytoolkit#CreateAuthUriResponse
          description: The fixed string identitytoolkit#CreateAuthUriResponse".
          type: string
        providerId:
          type: string
          description: The provider ID of the auth URI.
        sessionId:
          description: >-
            Session ID which should be passed in the following verifyAssertion
            request.
          type: string
      id: CreateAuthUriResponse
    VerifyAssertionResponse:
      properties:
        timeZone:
          description: The timezone of the user.
          type: string
        verifiedProvider:
          items:
            type: string
          description: >-
            When action is 'map', contains the idps which can be used for
            confirmation.
          type: array
        email:
          type: string
          description: >-
            The email returned by the IdP. NOTE: The federated login user may
            not own the email.
        federatedId:
          description: The unique ID identifies the IdP account.
          type: string
        localId:
          description: >-
            The RP local ID if it's already been mapped to the IdP account
            identified by the federated ID.
          type: string
        errorMessage:
          type: string
          description: Client error code.
        expiresIn:
          type: string
          format: int64
          description: >-
            If idToken is STS id token, then this field will be expiration time
            of STS id token in seconds.
        needEmail:
          description: >-
            Whether need client to supply email to complete the federated login
            flow.
          type: boolean
        fullName:
          description: The full name of the user.
          type: string
        oauthIdToken:
          type: string
          description: The OIDC id token.
        firstName:
          type: string
          description: The first name of the user.
        providerId:
          type: string
          description: >-
            The IdP ID. For white listed IdPs it's a short domain name e.g.
            google.com, aol.com, live.net and yahoo.com. If the "providerId"
            param is set to OpenID OP identifer other than the whilte listed
            IdPs the OP identifier is returned. If the "identifier" param is
            federated ID in the createAuthUri request. The domain part of the
            federated ID is returned.
        oauthAuthorizationCode:
          type: string
          description: The OAuth2 authorization code.
        nickName:
          type: string
          description: The nick name of the user.
        kind:
          description: The fixed string "identitytoolkit#VerifyAssertionResponse".
          type: string
          default: identitytoolkit#VerifyAssertionResponse
        oauthScope:
          description: The scope for the OpenID OAuth extension.
          type: string
        displayName:
          type: string
          description: The display name of the user.
        oauthRequestToken:
          description: The user approved request token for the OpenID OAuth extension.
          type: string
        appScheme:
          description: The custom scheme used by mobile app.
          type: string
        emailVerified:
          type: boolean
          description: >-
            The value is true if the IDP is also the email provider. It means
            the user owns the email.
        originalEmail:
          description: >-
            The original email stored in the mapping storage. It's returned when
            the federated ID is associated to a different email.
          type: string
        oauthTokenSecret:
          type: string
          description: The OAuth1 access token secret.
        isNewUser:
          description: True if it's a new user sign-in, false if it's a returning user.
          type: boolean
        action:
          description: The action code.
          type: string
        oauthExpireIn:
          description: The lifetime in seconds of the OAuth2 access token.
          type: integer
          format: int32
        context:
          description: >-
            The opaque value used by the client to maintain context info between
            the authentication request and the IDP callback.
          type: string
        dateOfBirth:
          type: string
          description: The birth date of the IdP account.
        language:
          description: The language preference of the user.
          type: string
        lastName:
          description: The last name of the user.
          type: string
        screenName:
          type: string
          description: The screen_name of a Twitter user or the login name at Github.
        needConfirmation:
          description: >-
            Whether the assertion is from a non-trusted IDP and need account
            linking confirmation.
          type: boolean
        emailRecycled:
          description: It's true if the email is recycled.
          type: boolean
        idToken:
          description: The ID token.
          type: string
        refreshToken:
          description: If idToken is STS id token, then this field will be refresh token.
          type: string
        inputEmail:
          description: >-
            It's the identifier param in the createAuthUri request if the
            identifier is an email. It can be used to check whether the user
            input email is different from the asserted email.
          type: string
        oauthAccessToken:
          description: The OAuth2 access token.
          type: string
        rawUserInfo:
          description: Raw IDP-returned user info.
          type: string
        photoUrl:
          type: string
          description: The URI of the public accessible profiel picture.
        appInstallationUrl:
          description: URL for OTA app installation.
          type: string
      type: object
      id: VerifyAssertionResponse
      description: Response of verifying the IDP assertion.
    IdentitytoolkitRelyingpartyDeleteAccountRequest:
      id: IdentitytoolkitRelyingpartyDeleteAccountRequest
      type: object
      description: Request to delete account.
      properties:
        localId:
          type: string
          description: The local ID of the user.
        idToken:
          description: The GITKit token or STS id token of the authenticated user.
          type: string
        delegatedProjectNumber:
          type: string
          format: int64
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
    IdentitytoolkitRelyingpartyGetProjectConfigResponse:
      id: IdentitytoolkitRelyingpartyGetProjectConfigResponse
      type: object
      properties:
        enableAnonymousUser:
          description: Whether anonymous user is enabled.
          type: boolean
        allowPasswordUser:
          description: Whether to allow password user sign in or sign up.
          type: boolean
        projectId:
          description: Project ID of the relying party.
          type: string
        apiKey:
          description: Browser API key, needed when making http request to Apiary.
          type: string
        authorizedDomains:
          type: array
          items:
            type: string
          description: Authorized domains.
        changeEmailTemplate:
          description: Change email template.
          $ref: '#/components/schemas/EmailTemplate'
        dynamicLinksDomain:
          type: string
        verifyEmailTemplate:
          description: Verify email template.
          $ref: '#/components/schemas/EmailTemplate'
        useEmailSending:
          description: Whether to use email sending provided by Firebear.
          type: boolean
        legacyResetPasswordTemplate:
          description: Legacy reset password email template.
          $ref: '#/components/schemas/EmailTemplate'
        resetPasswordTemplate:
          $ref: '#/components/schemas/EmailTemplate'
          description: Reset password email template.
        idpConfig:
          type: array
          description: OAuth2 provider configuration.
          items:
            $ref: '#/components/schemas/IdpConfig'
      description: Response of getting the project configuration.
    IdentitytoolkitRelyingpartyVerifyPasswordRequest:
      properties:
        idToken:
          type: string
          description: The GITKit token of the authenticated user.
        returnSecureToken:
          description: >-
            Whether return sts id token and refresh token instead of gitkit
            token.
          type: boolean
        pendingIdToken:
          type: string
          description: >-
            The GITKit token for the non-trusted IDP, which is to be confirmed
            by the user.
        tenantProjectNumber:
          type: string
          description: Tenant project number to be used for idp discovery.
          format: uint64
        tenantId:
          description: >-
            For multi-tenant use cases, in order to construct sign-in URL with
            the correct IDP parameters, Firebear needs to know which Tenant to
            retrieve IDP configs from.
          type: string
        instanceId:
          description: Instance id token of the app.
          type: string
        captchaResponse:
          description: Response to the captcha.
          type: string
        password:
          type: string
          description: The password inputed by the user.
        email:
          type: string
          description: The email of the user.
        delegatedProjectNumber:
          format: int64
          description: >-
            GCP project number of the requesting delegated app. Currently only
            intended for Firebase V1 migration.
          type: string
        captchaChallenge:
          description: The captcha challenge.
          type: string
      type: object
      description: Request to verify the password.
      id: IdentitytoolkitRelyingpartyVerifyPasswordRequest
    IdpConfig:
      properties:
        whitelistedAudiences:
          description: Whitelisted client IDs for audience check.
          type: array
          items:
            type: string
        secret:
          description: OAuth2 client secret.
          type: string
        clientId:
          description: OAuth2 client ID.
          type: string
        experimentPercent:
          format: int32
          type: integer
          description: >-
            Percent of users who will be prompted/redirected federated login for
            this IDP.
        provider:
          description: OAuth2 provider.
          type: string
        enabled:
          type: boolean
          description: Whether this IDP is enabled.
      id: IdpConfig
      type: object
      description: Template for a single idp configuration.
  parameters:
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: >-
        An opaque string that represents a user for quota purposes. Must not
        exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /signOutUser:
    parameters: &ref_1
      - $ref: '#/components/parameters/userIp'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
    post:
      description: Sign out user.
      operationId: identitytoolkit.relyingparty.signOutUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartySignOutUserRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentitytoolkitRelyingpartySignOutUserResponse
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /publicKeys:
    parameters: *ref_1
    get:
      description: Get token signing public key.
      operationId: identitytoolkit.relyingparty.getPublicKeys
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentitytoolkitRelyingpartyGetPublicKeysResponse
      x-stackQL-resource: relyingparty__public_keys
      x-stackQL-verb: select
  /setProjectConfig:
    parameters: *ref_1
    post:
      description: Set project configuration.
      operationId: identitytoolkit.relyingparty.setProjectConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentitytoolkitRelyingpartySetProjectConfigResponse
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /resetPassword:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyResetPasswordRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /getProjectConfig:
    parameters: *ref_1
    get:
      description: Get project configuration.
      operationId: identitytoolkit.relyingparty.getProjectConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentitytoolkitRelyingpartyGetProjectConfigResponse
      parameters:
        - in: query
          name: projectNumber
          schema:
            type: string
        - in: query
          name: delegatedProjectNumber
          schema:
            type: string
      x-stackQL-resource: relyingparty__project_config
      x-stackQL-verb: select
  /emailLinkSignin:
    parameters: *ref_1
    post:
      description: Reset password for a user.
      operationId: identitytoolkit.relyingparty.emailLinkSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyEmailLinkSigninRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailLinkSigninResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /downloadAccount:
    parameters: *ref_1
    post:
      description: Batch download user accounts.
      operationId: identitytoolkit.relyingparty.downloadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyDownloadAccountRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /getAccountInfo:
    parameters: *ref_1
    post:
      description: Returns the account info.
      operationId: identitytoolkit.relyingparty.getAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyGetAccountInfoRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountInfoResponse'
      x-stackQL-resource: relyingparty__account_info
      x-stackQL-verb: select
  /sendVerificationCode:
    parameters: *ref_1
    post:
      description: Send SMS verification code.
      operationId: identitytoolkit.relyingparty.sendVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentitytoolkitRelyingpartySendVerificationCodeResponse
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /verifyPhoneNumber:
    parameters: *ref_1
    post:
      description: >-
        Verifies ownership of a phone number and creates/updates the user
        account accordingly.
      operationId: identitytoolkit.relyingparty.verifyPhoneNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IdentitytoolkitRelyingpartyVerifyPhoneNumberResponse
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /createAuthUri:
    parameters: *ref_1
    post:
      description: Creates the URI used by the IdP to authenticate the user.
      operationId: identitytoolkit.relyingparty.createAuthUri
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyCreateAuthUriRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthUriResponse'
      x-stackQL-resource: relyingparty__auth_uri
      x-stackQL-verb: insert
  /deleteAccount:
    parameters: *ref_1
    post:
      description: Delete user account.
      operationId: identitytoolkit.relyingparty.deleteAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyDeleteAccountRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountResponse'
      x-stackQL-resource: relyingparty__account
      x-stackQL-verb: delete
  /signupNewUser:
    parameters: *ref_1
    post:
      description: Signup new user.
      operationId: identitytoolkit.relyingparty.signupNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartySignupNewUserRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupNewUserResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /uploadAccount:
    parameters: *ref_1
    post:
      description: Batch upload existing user accounts.
      operationId: identitytoolkit.relyingparty.uploadAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyUploadAccountRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAccountResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /setAccountInfo:
    parameters: *ref_1
    post:
      description: Set account info for a user.
      operationId: identitytoolkit.relyingparty.setAccountInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartySetAccountInfoRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccountInfoResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /verifyPassword:
    parameters: *ref_1
    post:
      description: Verifies the user entered password.
      operationId: identitytoolkit.relyingparty.verifyPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyVerifyPasswordRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPasswordResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /verifyCustomToken:
    parameters: *ref_1
    post:
      description: Verifies the developer asserted ID token.
      operationId: identitytoolkit.relyingparty.verifyCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyVerifyCustomTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCustomTokenResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /verifyAssertion:
    parameters: *ref_1
    post:
      description: Verifies the assertion returned by the IdP.
      operationId: identitytoolkit.relyingparty.verifyAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/IdentitytoolkitRelyingpartyVerifyAssertionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyAssertionResponse'
      x-stackQL-resource: relyingparty
      x-stackQL-verb: exec
  /getOobConfirmationCode:
    parameters: *ref_1
    post:
      description: Get a code for user action confirmation.
      operationId: identitytoolkit.relyingparty.getOobConfirmationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relyingparty'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOobConfirmationCodeResponse'
      x-stackQL-resource: relyingparty__oob_confirmation_code
      x-stackQL-verb: select
  /getRecaptchaParam:
    parameters: *ref_1
    get:
      description: Get recaptcha secure param.
      operationId: identitytoolkit.relyingparty.getRecaptchaParam
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecaptchaParamResponse'
      x-stackQL-resource: relyingparty__recaptcha_param
      x-stackQL-verb: select
