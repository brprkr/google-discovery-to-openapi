openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Cloud Data Catalog API
  description: >-
    A fully managed and highly scalable data discovery and metadata management
    service. 
  version: v1beta1
  x-discovery-doc-revision: '20230619'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://cloud.google.com/data-catalog/docs/
servers:
  - url: https://datacatalog.googleapis.com
components:
  schemas:
    GoogleCloudDatacatalogV1BigQueryDateShardedSpec:
      id: GoogleCloudDatacatalogV1BigQueryDateShardedSpec
      type: object
      description: >-
        Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD`
        name pattern. For more information, see [Introduction to partitioned
        tables]
        (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
      properties:
        shardCount:
          type: string
          format: int64
          readOnly: true
          description: Output only. Total number of shards.
        tablePrefix:
          description: >-
            Output only. The table name prefix of the shards. The name of any
            given shard is `[table_prefix]YYYYMMDD`. For example, for the
            `MyTable20180101` shard, the `table_prefix` is `MyTable`.
          type: string
          readOnly: true
        latestShardResource:
          type: string
          readOnly: true
          description: Output only. BigQuery resource name of the latest shard.
        dataset:
          readOnly: true
          description: >-
            Output only. The Data Catalog resource name of the dataset entry the
            current table belongs to. For example:
            `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.
          type: string
    GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope:
      properties:
        includeGcpPublicDatasets:
          type: boolean
          description: >-
            If `true`, include Google Cloud public datasets in the search
            results. Info on Google Cloud public datasets is available at
            https://cloud.google.com/public-datasets/. By default, Google Cloud
            public datasets are excluded.
        includeOrgIds:
          description: >-
            The list of organization IDs to search within. To find your
            organization ID, follow instructions in
            https://cloud.google.com/resource-manager/docs/creating-managing-organization.
          type: array
          items:
            type: string
        includeProjectIds:
          description: >-
            The list of project IDs to search within. To learn more about the
            distinction between project names/IDs/numbers, go to
            https://cloud.google.com/docs/overview/#projects.
          items:
            type: string
          type: array
        restrictedLocations:
          description: >-
            Optional. The list of locations to search within. 1. If empty,
            search will be performed in all locations; 2. If any of the
            locations are NOT in the valid locations list, error will be
            returned; 3. Otherwise, search only the given locations for matching
            results. Typical usage is to leave this field empty. When a location
            is unreachable as returned in the
            `SearchCatalogResponse.unreachable` field, users can repeat the
            search request with this parameter set to get additional information
            on the error. Valid locations: * asia-east1 * asia-east2 *
            asia-northeast1 * asia-northeast2 * asia-northeast3 * asia-south1 *
            asia-southeast1 * australia-southeast1 * eu * europe-north1 *
            europe-west1 * europe-west2 * europe-west3 * europe-west4 *
            europe-west6 * global * northamerica-northeast1 * southamerica-east1
            * us * us-central1 * us-east1 * us-east4 * us-west1 * us-west2
          type: array
          items:
            type: string
      description: The criteria that select the subspace used for query matching.
      type: object
      id: GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope
    GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue:
      type: object
      id: GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue
      properties:
        displayName:
          description: >-
            Required. The display name of the enum value. Must not be an empty
            string.
          type: string
    GoogleCloudDatacatalogV1beta1TagTemplate:
      id: GoogleCloudDatacatalogV1beta1TagTemplate
      description: >-
        A tag template defines a tag, which can have one or more typed fields.
        The template is used to create and attach the tag to Google Cloud
        resources. [Tag template
        roles](https://cloud.google.com/iam/docs/understanding-roles#data-catalog-roles)
        provide permissions to create, edit, and use the template. See, for
        example, the [TagTemplate
        User](https://cloud.google.com/data-catalog/docs/how-to/template-user)
        role, which includes permission to use the tag template to tag
        resources.
      properties:
        displayName:
          description: The display name for this template. Defaults to an empty string.
          type: string
        name:
          type: string
          description: >-
            The resource name of the tag template in URL format. Example: *
            projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
            Note that this TagTemplate and its child resources may not actually
            be stored in the location in this name.
        fields:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplateField'
          description: >-
            Required. Map of tag template field IDs to the settings for the
            field. This map is an exhaustive list of the allowed fields. This
            map must contain at least one field and at most 500 fields. The keys
            to this map are tag template field IDs. Field IDs can contain
            letters (both uppercase and lowercase), numbers (0-9) and
            underscores (_). Field IDs must be at least 1 character long and at
            most 64 characters long. Field IDs must start with a letter or
            underscore.
          type: object
      type: object
    GoogleCloudDatacatalogV1beta1UsageStats:
      id: GoogleCloudDatacatalogV1beta1UsageStats
      description: >-
        Detailed counts on the entry's usage. Caveats: - Only BigQuery tables
        have usage stats - The usage stats only include BigQuery query jobs -
        The usage stats might be underestimated, e.g. wildcard table references
        are not yet counted in usage computation
        https://cloud.google.com/bigquery/docs/querying-wildcard-tables
      type: object
      properties:
        totalExecutionTimeForCompletionsMillis:
          format: float
          type: number
          description: >-
            Total time spent (in milliseconds) during uses the resulted in
            completions.
        totalCancellations:
          description: >-
            The number of times that the underlying entry was attempted to be
            used but was cancelled by the user.
          type: number
          format: float
        totalCompletions:
          description: The number of times that the underlying entry was successfully used.
          type: number
          format: float
        totalFailures:
          description: >-
            The number of times that the underlying entry was attempted to be
            used but failed.
          format: float
          type: number
    GoogleCloudDatacatalogV1beta1SearchCatalogRequest:
      properties:
        scope:
          description: >-
            Required. The scope of this search request. A `scope` that has empty
            `include_org_ids`, `include_project_ids` AND false
            `include_gcp_public_datasets` is considered invalid. Data Catalog
            will return an error in such a case.
          $ref: >-
            #/components/schemas/GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope
        pageToken:
          description: >-
            Optional. Pagination token returned in an earlier
            SearchCatalogResponse.next_page_token, which indicates that this is
            a continuation of a prior SearchCatalogRequest call, and that the
            system should return the next page of data. If empty, the first page
            is returned.
          type: string
        orderBy:
          description: >-
            Specifies the ordering of results, currently supported
            case-sensitive choices are: * `relevance`, only supports descending
            * `last_modified_timestamp [asc|desc]`, defaults to descending if
            not specified * `default` that can only be descending If not
            specified, defaults to `relevance` descending.
          type: string
        pageSize:
          type: integer
          format: int32
          description: >-
            Number of results in the search page. If <=0 then defaults to 10.
            Max limit for page_size is 1000. Throws an invalid argument for
            page_size > 1000.
        query:
          description: >-
            Optional. The query string in search query syntax. An empty query
            string will result in all data assets (in the specified scope) that
            the user has access to. Query strings can be simple as "x" or more
            qualified as: * name:x * column:x * description:y Note: Query tokens
            need to have a minimum of 3 characters for substring matching to
            work correctly. See [Data Catalog Search
            Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)
            for more information.
          type: string
      type: object
      id: GoogleCloudDatacatalogV1beta1SearchCatalogRequest
      description: Request message for SearchCatalog.
    GoogleCloudDatacatalogV1DataplexExternalTable:
      id: GoogleCloudDatacatalogV1DataplexExternalTable
      description: >-
        External table registered by Dataplex. Dataplex publishes data
        discovered from an asset into multiple other systems (BigQuery, DPMS) in
        form of tables. We call them "external tables". External tables are also
        synced into the Data Catalog. This message contains pointers to those
        external tables (fully qualified name, resource name et cetera) within
        the Data Catalog.
      type: object
      properties:
        fullyQualifiedName:
          description: Fully qualified name (FQN) of the external table.
          type: string
        system:
          enumDescriptions:
            - Default unknown system.
            - BigQuery.
            - Cloud Pub/Sub.
            - Dataproc Metastore.
            - Dataplex.
            - Cloud Spanner
            - Cloud Bigtable
            - Cloud Sql
            - Looker
          description: Service in which the external table is registered.
          enum:
            - INTEGRATED_SYSTEM_UNSPECIFIED
            - BIGQUERY
            - CLOUD_PUBSUB
            - DATAPROC_METASTORE
            - DATAPLEX
            - CLOUD_SPANNER
            - CLOUD_BIGTABLE
            - CLOUD_SQL
            - LOOKER
          type: string
        dataCatalogEntry:
          type: string
          description: Name of the Data Catalog entry representing the external table.
        googleCloudResource:
          description: Google Cloud resource name of the external table.
          type: string
    GoogleCloudDatacatalogV1beta1GcsFileSpec:
      type: object
      id: GoogleCloudDatacatalogV1beta1GcsFileSpec
      description: Specifications of a single file in Cloud Storage.
      properties:
        gcsTimestamps:
          readOnly: true
          description: Output only. Timestamps about the Cloud Storage file.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1SystemTimestamps'
        filePath:
          type: string
          description: 'Required. The full file path. Example: `gs://bucket_name/a/b.txt`.'
        sizeBytes:
          format: int64
          description: Output only. The size of the file, in bytes.
          readOnly: true
          type: string
    GoogleCloudDatacatalogV1DataplexFilesetSpec:
      id: GoogleCloudDatacatalogV1DataplexFilesetSpec
      description: Entry specyfication for a Dataplex fileset.
      properties:
        dataplexSpec:
          description: Common Dataplex fields.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1DataplexSpec'
      type: object
    GoogleCloudDatacatalogV1TagField:
      id: GoogleCloudDatacatalogV1TagField
      type: object
      description: Contains the value and additional information on a field within a Tag.
      properties:
        order:
          type: integer
          readOnly: true
          description: >-
            Output only. The order of this field with respect to other fields in
            this tag. Can be set by Tag. For example, a higher value can
            indicate a more important field. The value can be negative. Multiple
            fields can have the same order, and field orders within a tag don't
            have to be sequential.
          format: int32
        stringValue:
          description: >-
            The value of a tag field with a string type. The maximum length is
            2000 UTF-8 characters.
          type: string
        timestampValue:
          type: string
          format: google-datetime
          description: The value of a tag field with a timestamp type.
        enumValue:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1TagFieldEnumValue'
          description: >-
            The value of a tag field with an enum type. This value must be one
            of the allowed values listed in this enum.
        richtextValue:
          type: string
          description: >-
            The value of a tag field with a rich text type. The maximum length
            is 10 MiB as this value holds HTML descriptions including encoded
            images. The maximum length of the text without images is 100 KiB.
        displayName:
          type: string
          description: Output only. The display name of this field.
          readOnly: true
        boolValue:
          type: boolean
          description: The value of a tag field with a boolean type.
        doubleValue:
          type: number
          format: double
          description: The value of a tag field with a double type.
    GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec:
      description: Specification for the BigQuery connection to a Cloud SQL instance.
      id: GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec
      properties:
        type:
          description: Type of the Cloud SQL database.
          type: string
          enum:
            - DATABASE_TYPE_UNSPECIFIED
            - POSTGRES
            - MYSQL
          enumDescriptions:
            - Unspecified database type.
            - Cloud SQL for PostgreSQL.
            - Cloud SQL for MySQL.
        database:
          type: string
          description: Database name.
        instanceId:
          description: Cloud SQL instance ID in the format of `project:location:instance`.
          type: string
      type: object
    GoogleCloudDatacatalogV1BigQueryTableSpec:
      id: GoogleCloudDatacatalogV1BigQueryTableSpec
      properties:
        tableSpec:
          description: >-
            Specification of a BigQuery table. Populated only if the
            `table_source_type` is `BIGQUERY_TABLE`.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1TableSpec'
        tableSourceType:
          enum:
            - TABLE_SOURCE_TYPE_UNSPECIFIED
            - BIGQUERY_VIEW
            - BIGQUERY_TABLE
            - BIGQUERY_MATERIALIZED_VIEW
          type: string
          readOnly: true
          enumDescriptions:
            - Default unknown type.
            - Table view.
            - BigQuery native table.
            - BigQuery materialized view.
          description: Output only. The table source type.
        viewSpec:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1ViewSpec'
          description: >-
            Table view specification. Populated only if the `table_source_type`
            is `BIGQUERY_VIEW`.
      type: object
      description: Describes a BigQuery table.
    GoogleCloudDatacatalogV1beta1EntryGroup:
      description: >-
        EntryGroup Metadata. An EntryGroup resource represents a logical
        grouping of zero or more Data Catalog Entry resources.
      properties:
        dataCatalogTimestamps:
          description: >-
            Output only. Timestamps about this EntryGroup. Default value is
            empty timestamps.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1SystemTimestamps'
          readOnly: true
        displayName:
          description: >-
            A short name to identify the entry group, for example, "analytics
            data - jan 2011". Default value is an empty string.
          type: string
        description:
          description: >-
            Entry group description, which can consist of several sentences or
            paragraphs that describe entry group contents. Default value is an
            empty string.
          type: string
        name:
          description: >-
            The resource name of the entry group in URL format. Example: *
            projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
            Note that this EntryGroup and its child resources may not actually
            be stored in the location in this name.
          type: string
      type: object
      id: GoogleCloudDatacatalogV1beta1EntryGroup
    GoogleCloudDatacatalogV1DatabaseTableSpec:
      description: >-
        Specification that applies to a table resource. Valid only for entries
        with the `TABLE` type.
      id: GoogleCloudDatacatalogV1DatabaseTableSpec
      type: object
      properties:
        dataplexTable:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1DataplexTableSpec'
          description: >-
            Output only. Fields specific to a Dataplex table and present only in
            the Dataplex table entries.
          readOnly: true
        databaseViewSpec:
          description: >-
            Spec what aplies to tables that are actually views. Not set for
            "real" tables.
          $ref: >-
            #/components/schemas/GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpec
        type:
          type: string
          description: Type of this table.
          enumDescriptions:
            - Default unknown table type.
            - Native table.
            - External table.
          enum:
            - TABLE_TYPE_UNSPECIFIED
            - NATIVE
            - EXTERNAL
    GoogleCloudDatacatalogV1beta1FieldTypeEnumType:
      id: GoogleCloudDatacatalogV1beta1FieldTypeEnumType
      properties:
        allowedValues:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1Schema:
      id: GoogleCloudDatacatalogV1beta1Schema
      type: object
      description: Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1ColumnSchema'
          description: >-
            Required. Schema of columns. A maximum of 10,000 columns and
            sub-columns can be specified.
    Status:
      id: Status
      properties:
        code:
          type: integer
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
        details:
          type: array
          items:
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
            type: object
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
    GoogleCloudDatacatalogV1BigQueryConnectionSpec:
      description: Specification for the BigQuery connection.
      properties:
        cloudSql:
          description: Specification for the BigQuery connection to a Cloud SQL instance.
          $ref: >-
            #/components/schemas/GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec
        hasCredential:
          description: >-
            True if there are credentials attached to the BigQuery connection;
            false otherwise.
          type: boolean
        connectionType:
          enumDescriptions:
            - Unspecified type.
            - Cloud SQL connection.
          enum:
            - CONNECTION_TYPE_UNSPECIFIED
            - CLOUD_SQL
          type: string
          description: The type of the BigQuery connection.
      id: GoogleCloudDatacatalogV1BigQueryConnectionSpec
      type: object
    GoogleCloudDatacatalogV1beta1Entry:
      properties:
        bigqueryDateShardedSpec:
          description: >-
            Specification for a group of BigQuery tables with name pattern
            `[prefix]YYYYMMDD`. Context:
            https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.
          $ref: >-
            #/components/schemas/GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec
        integratedSystem:
          enumDescriptions:
            - Default unknown system.
            - BigQuery.
            - Cloud Pub/Sub.
          description: >-
            Output only. This field indicates the entry's source system that
            Data Catalog integrates with, such as BigQuery or Pub/Sub.
          type: string
          enum:
            - INTEGRATED_SYSTEM_UNSPECIFIED
            - BIGQUERY
            - CLOUD_PUBSUB
          readOnly: true
        linkedResource:
          description: >-
            The resource this metadata entry refers to. For Google Cloud
            Platform resources, `linked_resource` is the [full name of the
            resource](https://cloud.google.com/apis/design/resource_names#full_resource_name).
            For example, the `linked_resource` for a table resource from
            BigQuery is: *
            //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
            Output only when Entry is of type in the EntryType enum. For entries
            with user_specified_type, this field is optional and defaults to an
            empty string.
          type: string
        bigqueryTableSpec:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1BigQueryTableSpec'
          description: >-
            Specification that applies to a BigQuery table. This is only valid
            on entries of type `TABLE`.
        userSpecifiedType:
          type: string
          description: >-
            Entry type if it does not fit any of the input-allowed values listed
            in `EntryType` enum above. When creating an entry, users should
            check the enum values first, if nothing matches the entry to be
            created, then provide a custom value, for example "my_special_type".
            `user_specified_type` strings must begin with a letter or underscore
            and can only contain letters, numbers, and underscores; are case
            insensitive; must be at least 1 character and at most 64 characters
            long. Currently, only FILESET enum value is allowed. All other
            entries created through Data Catalog must use `user_specified_type`.
        userSpecifiedSystem:
          type: string
          description: >-
            This field indicates the entry's source system that Data Catalog
            does not integrate with. `user_specified_system` strings must begin
            with a letter or underscore and can only contain letters, numbers,
            and underscores; are case insensitive; must be at least 1 character
            and at most 64 characters long.
        type:
          type: string
          enumDescriptions:
            - Default unknown type.
            - >-
              Output only. The type of entry that has a GoogleSQL schema,
              including logical views.
            - >-
              Output only. The type of models.
              https://cloud.google.com/bigquery-ml/docs/bigqueryml-intro
            - >-
              Output only. An entry type which is used for streaming entries.
              Example: Pub/Sub topic.
            - >-
              An entry type which is a set of files or objects. Example: Cloud
              Storage fileset.
          enum:
            - ENTRY_TYPE_UNSPECIFIED
            - TABLE
            - MODEL
            - DATA_STREAM
            - FILESET
          description: >-
            The type of the entry. Only used for Entries with types in the
            EntryType enum.
        sourceSystemTimestamps:
          readOnly: true
          description: >-
            Output only. Timestamps about the underlying resource, not about
            this Data Catalog entry. Output only when Entry is of type in the
            EntryType enum. For entries with user_specified_type, this field is
            optional and defaults to an empty timestamp.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1SystemTimestamps'
        description:
          description: >-
            Entry description, which can consist of several sentences or
            paragraphs that describe entry contents. Default value is an empty
            string.
          type: string
        schema:
          description: >-
            Schema of the entry. An entry might not have any schema attached to
            it.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Schema'
        gcsFilesetSpec:
          description: >-
            Specification that applies to a Cloud Storage fileset. This is only
            valid on entries of type FILESET.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1GcsFilesetSpec'
        usageSignal:
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1UsageSignal'
          description: Output only. Statistics on the usage level of the resource.
        displayName:
          description: >-
            Display information such as title and description. A short name to
            identify the entry, for example, "Analytics Data - Jan 2011".
            Default value is an empty string.
          type: string
        name:
          description: >-
            Output only. The Data Catalog resource name of the entry in URL
            format. Example: *
            projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
            Note that this Entry and its child resources may not actually be
            stored in the location in this name.
          readOnly: true
          type: string
      type: object
      description: >-
        Entry Metadata. A Data Catalog Entry resource represents another
        resource in Google Cloud Platform (such as a BigQuery dataset or a
        Pub/Sub topic), or outside of Google Cloud Platform. Clients can use the
        `linked_resource` field in the Entry resource to refer to the original
        resource ID of the source system. An Entry resource contains resource
        details, such as its schema. An Entry can also be used to attach
        flexible metadata, such as a Tag.
      id: GoogleCloudDatacatalogV1beta1Entry
    GoogleCloudDatacatalogV1beta1BigQueryTableSpec:
      id: GoogleCloudDatacatalogV1beta1BigQueryTableSpec
      properties:
        viewSpec:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1ViewSpec'
          description: >-
            Table view specification. This field should only be populated if
            `table_source_type` is `BIGQUERY_VIEW`.
        tableSourceType:
          enum:
            - TABLE_SOURCE_TYPE_UNSPECIFIED
            - BIGQUERY_VIEW
            - BIGQUERY_TABLE
            - BIGQUERY_MATERIALIZED_VIEW
          readOnly: true
          description: Output only. The table source type.
          type: string
          enumDescriptions:
            - Default unknown type.
            - Table view.
            - BigQuery native table.
            - BigQuery materialized view.
        tableSpec:
          description: >-
            Spec of a BigQuery table. This field should only be populated if
            `table_source_type` is `BIGQUERY_TABLE`.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1TableSpec'
      type: object
      description: Describes a BigQuery table.
    GoogleCloudDatacatalogV1GcsFileSpec:
      type: object
      description: Specification of a single file in Cloud Storage.
      properties:
        sizeBytes:
          readOnly: true
          format: int64
          type: string
          description: Output only. File size in bytes.
        filePath:
          type: string
          description: 'Required. Full file path. Example: `gs://bucket_name/a/b.txt`.'
        gcsTimestamps:
          description: >-
            Output only. Creation, modification, and expiration timestamps of a
            Cloud Storage file.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1SystemTimestamps'
      id: GoogleCloudDatacatalogV1GcsFileSpec
    GoogleCloudDatacatalogV1CloudBigtableInstanceSpec:
      properties:
        cloudBigtableClusterSpecs:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec
          description: The list of clusters for the Instance.
          type: array
      type: object
      description: >-
        Specification that applies to Instance entries that are part of
        `CLOUD_BIGTABLE` system. (user_specified_type)
      id: GoogleCloudDatacatalogV1CloudBigtableInstanceSpec
    GoogleCloudDatacatalogV1Tag:
      properties:
        templateDisplayName:
          description: Output only. The display name of the tag template.
          readOnly: true
          type: string
        name:
          description: >-
            The resource name of the tag in URL format where tag ID is a
            system-generated identifier. Note: The tag itself might not be
            stored in the location specified in its name.
          type: string
        column:
          type: string
          description: >-
            Resources like entry can have schemas associated with them. This
            scope allows you to attach tags to an individual column based on
            that schema. To attach a tag to a nested column, separate column
            names with a dot (`.`). Example: `column.nested_column`.
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1TagField'
          description: >-
            Required. Maps the ID of a tag field to its value and additional
            information about that field. Tag template defines valid field IDs.
            A tag must have at least 1 field and at most 500 fields.
        template:
          description: >-
            Required. The resource name of the tag template this tag uses.
            Example:
            `projects/{PROJECT_ID}/locations/{LOCATION}/tagTemplates/{TAG_TEMPLATE_ID}`
            This field cannot be modified after creation.
          type: string
      description: >-
        Tags contain custom metadata and are attached to Data Catalog resources.
        Tags conform with the specification of their tag template. See [Data
        Catalog IAM](https://cloud.google.com/data-catalog/docs/concepts/iam)
        for information on the permissions needed to create or view tags.
      id: GoogleCloudDatacatalogV1Tag
      type: object
    GoogleCloudDatacatalogV1BigQueryRoutineSpec:
      properties:
        importedLibraries:
          description: Paths of the imported libraries.
          type: array
          items:
            type: string
      id: GoogleCloudDatacatalogV1BigQueryRoutineSpec
      description: Fields specific for BigQuery routines.
      type: object
    GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse:
      description: Response message for ExportTaxonomies.
      properties:
        taxonomies:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDatacatalogV1beta1SerializedTaxonomy
          type: array
          description: List of taxonomies and policy tags in a tree structure.
      type: object
      id: GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse
    GoogleCloudDatacatalogV1PhysicalSchemaParquetSchema:
      type: object
      id: GoogleCloudDatacatalogV1PhysicalSchemaParquetSchema
      properties: {}
      description: Marks a Parquet-encoded data source.
    GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpec:
      id: GoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpec
      properties:
        sqlQuery:
          description: SQL query used to generate this view.
          type: string
        baseTable:
          description: Name of a singular table this view reflects one to one.
          type: string
        viewType:
          enum:
            - VIEW_TYPE_UNSPECIFIED
            - STANDARD_VIEW
            - MATERIALIZED_VIEW
          type: string
          enumDescriptions:
            - Default unknown view type.
            - Standard view.
            - Materialized view.
          description: Type of this view.
      description: Specification that applies to database view.
      type: object
    GoogleCloudDatacatalogV1beta1ListTagsResponse:
      properties:
        nextPageToken:
          description: >-
            Token to retrieve the next page of results. It is set to empty if no
            items remain in results.
          type: string
        tags:
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Tag'
          description: Tag details.
          type: array
      id: GoogleCloudDatacatalogV1beta1ListTagsResponse
      description: Response message for ListTags.
      type: object
    GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec:
      type: object
      description: Spec that applies to clusters of an Instance of Cloud Bigtable.
      id: >-
        GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec
      properties:
        location:
          type: string
          description: Location of the cluster, typically a Cloud zone.
        type:
          type: string
          description: Type of the resource. For a cluster this would be "CLUSTER".
        linkedResource:
          type: string
          description: A link back to the parent resource, in this case Instance.
        displayName:
          type: string
          description: Name of the cluster.
    GoogleCloudDatacatalogV1ReconcileTagsResponse:
      type: object
      properties:
        deletedTagsCount:
          description: Number of tags deleted in the request.
          format: int64
          type: string
        createdTagsCount:
          format: int64
          type: string
          description: Number of tags created in the request.
        updatedTagsCount:
          description: Number of tags updated in the request.
          format: int64
          type: string
      id: GoogleCloudDatacatalogV1ReconcileTagsResponse
      description: Long-running operation response message returned by ReconcileTags.
    GoogleCloudDatacatalogV1TaggedEntry:
      id: GoogleCloudDatacatalogV1TaggedEntry
      type: object
      properties:
        presentTags:
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1Tag'
          type: array
          description: >-
            Optional. Tags that should be ingested into the Data Catalog. Caller
            should populate template name, column and fields.
        absentTags:
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1Tag'
          description: >-
            Optional. Tags that should be deleted from the Data Catalog. Caller
            should populate template name and column only.
          type: array
        v1Entry:
          description: Non-encrypted Data Catalog v1 Entry.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1Entry'
      description: >-
        Wrapper containing Entry and information about Tags that should and
        should not be attached to it.
    GoogleCloudDatacatalogV1UsageSignal:
      type: object
      properties:
        updateTime:
          type: string
          description: The end timestamp of the duration of usage statistics.
          format: google-datetime
        usageWithinTimeRange:
          type: object
          readOnly: true
          description: >-
            Output only. BigQuery usage statistics over each of the predefined
            time ranges. Supported time ranges are `{"24H", "7D", "30D"}`.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1UsageStats'
        favoriteCount:
          type: string
          description: Favorite count in the source system.
          format: int64
        commonUsageWithinTimeRange:
          description: >-
            Common usage statistics over each of the predefined time ranges.
            Supported time ranges are `{"24H", "7D", "30D", "Lifetime"}`.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1CommonUsageStats'
      description: >-
        The set of all usage signals that Data Catalog stores. Note: Usually,
        these signals are updated daily. In rare cases, an update may fail but
        will be performed again on the next day.
      id: GoogleCloudDatacatalogV1UsageSignal
    GoogleCloudDatacatalogV1beta1Tag:
      properties:
        fields:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1TagField'
          type: object
          description: >-
            Required. This maps the ID of a tag field to the value of and
            additional information about that field. Valid field IDs are defined
            by the tag's template. A tag must have at least 1 field and at most
            500 fields.
        template:
          description: >-
            Required. The resource name of the tag template that this tag uses.
            Example: *
            projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
            This field cannot be modified after creation.
          type: string
        name:
          description: >-
            The resource name of the tag in URL format. Example: *
            projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
            where `tag_id` is a system-generated identifier. Note that this Tag
            may not actually be stored in the location in this name.
          type: string
        column:
          type: string
          description: >-
            Resources like Entry can have schemas associated with them. This
            scope allows users to attach tags to an individual column based on
            that schema. For attaching a tag to a nested column, use `.` to
            separate the column names. Example: * `outer_column.inner_column`
        templateDisplayName:
          type: string
          readOnly: true
          description: Output only. The display name of the tag template.
      description: >-
        Tags are used to attach custom metadata to Data Catalog resources. Tags
        conform to the specifications within their tag template. See [Data
        Catalog IAM](https://cloud.google.com/data-catalog/docs/concepts/iam)
        for information on the permissions needed to create or view tags.
      type: object
      id: GoogleCloudDatacatalogV1beta1Tag
    GoogleCloudDatacatalogV1SystemTimestamps:
      description: Timestamps associated with this resource in a particular system.
      type: object
      properties:
        updateTime:
          description: >-
            Timestamp of the last modification of the resource or its metadata
            within a given system. Note: Depending on the source system, not
            every modification updates this timestamp. For example, BigQuery
            timestamps every metadata modification but not data or permission
            changes.
          format: google-datetime
          type: string
        createTime:
          type: string
          format: google-datetime
          description: Creation timestamp of the resource within the given system.
        expireTime:
          type: string
          format: google-datetime
          readOnly: true
          description: >-
            Output only. Expiration timestamp of the resource within the given
            system. Currently only applicable to BigQuery resources.
      id: GoogleCloudDatacatalogV1SystemTimestamps
    GoogleCloudDatacatalogV1TableSpec:
      description: Normal BigQuery table specification.
      id: GoogleCloudDatacatalogV1TableSpec
      type: object
      properties:
        groupedEntry:
          description: >-
            Output only. If the table is date-sharded, that is, it matches the
            `[prefix]YYYYMMDD` name pattern, this field is the Data Catalog
            resource name of the date-sharded grouped entry. For example:
            `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.
            Otherwise, `grouped_entry` is empty.
          readOnly: true
          type: string
    GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema:
      type: object
      description: Schema in protocol buffer format.
      properties:
        text:
          type: string
          description: Protocol buffer source of the schema.
      id: GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema
    GoogleCloudDatacatalogV1CommonUsageStats:
      properties:
        viewCount:
          format: int64
          description: View count in source system.
          type: string
      id: GoogleCloudDatacatalogV1CommonUsageStats
      type: object
      description: Common statistics on the entry's usage. They can be set on any system.
    GoogleCloudDatacatalogV1beta1FieldType:
      id: GoogleCloudDatacatalogV1beta1FieldType
      type: object
      properties:
        primitiveType:
          description: Represents primitive types - string, bool etc.
          enumDescriptions:
            - This is the default invalid value for a type.
            - A double precision number.
            - An UTF-8 string.
            - A boolean value.
            - A timestamp.
          type: string
          enum:
            - PRIMITIVE_TYPE_UNSPECIFIED
            - DOUBLE
            - STRING
            - BOOL
            - TIMESTAMP
        enumType:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1FieldTypeEnumType'
          description: Represents an enum type.
    GoogleCloudDatacatalogV1Entry:
      type: object
      id: GoogleCloudDatacatalogV1Entry
      description: >-
        Entry metadata. A Data Catalog entry represents another resource in
        Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic) or
        outside of it. You can use the `linked_resource` field in the entry
        resource to refer to the original resource ID of the source system. An
        entry resource contains resource details, for example, its schema.
        Additionally, you can attach flexible metadata to an entry in the form
        of a Tag.
      properties:
        userSpecifiedSystem:
          type: string
          description: >-
            Indicates the entry's source system that Data Catalog doesn't
            automatically integrate with. The `user_specified_system` string has
            the following limitations: * Is case insensitive. * Must begin with
            a letter or underscore. * Can only contain letters, numbers, and
            underscores. * Must be at least 1 character and at most 64
            characters long.
        userSpecifiedType:
          type: string
          description: >-
            Custom entry type that doesn't match any of the values allowed for
            input and listed in the `EntryType` enum. When creating an entry,
            first check the type values in the enum. If there are no appropriate
            types for the new entry, provide a custom value, for example,
            `my_special_type`. The `user_specified_type` string has the
            following limitations: * Is case insensitive. * Must begin with a
            letter or underscore. * Can only contain letters, numbers, and
            underscores. * Must be at least 1 character and at most 64
            characters long.
        dataSource:
          description: Output only. Physical location of the entry.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1DataSource'
          readOnly: true
        name:
          readOnly: true
          type: string
          description: >-
            Output only. The resource name of an entry in URL format. Note: The
            entry itself and its child resources might not be stored in the
            location specified in its name.
        bigqueryDateShardedSpec:
          description: >-
            Output only. Specification for a group of BigQuery tables with the
            `[prefix]YYYYMMDD` name pattern. For more information, see
            [Introduction to partitioned tables]
            (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1BigQueryDateShardedSpec'
          readOnly: true
        serviceSpec:
          description: Specification that applies to a Service resource.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1ServiceSpec'
        lookerSystemSpec:
          description: >-
            Specification that applies to Looker sysstem. Only settable when
            `user_specified_system` is equal to `LOOKER`
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1LookerSystemSpec'
        displayName:
          type: string
          description: >-
            Display name of an entry. The maximum size is 500 bytes when encoded
            in UTF-8. Default value is an empty string.
        gcsFilesetSpec:
          description: >-
            Specification that applies to a Cloud Storage fileset. Valid only
            for entries with the `FILESET` type.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1GcsFilesetSpec'
        type:
          description: The type of the entry. For details, see [`EntryType`](#entrytype).
          enumDescriptions:
            - Default unknown type.
            - >-
              The entry type that has a GoogleSQL schema, including logical
              views.
            - >-
              The type of models. For more information, see [Supported models in
              BigQuery ML](/bigquery/docs/bqml-introduction#supported_models).
            - An entry type for streaming entries. For example, a Pub/Sub topic.
            - >-
              An entry type for a set of files or objects. For example, a Cloud
              Storage fileset.
            - >-
              A group of servers that work together. For example, a Kafka
              cluster.
            - A database.
            - Connection to a data source. For example, a BigQuery connection.
            - Routine, for example, a BigQuery routine.
            - A Dataplex lake.
            - A Dataplex zone.
            - A service, for example, a Dataproc Metastore service.
            - Schema within a relational database.
            - A Dashboard, for example from Looker.
            - >-
              A Looker Explore. For more information, see [Looker Explore API]
              (https://developers.looker.com/api/explorer/4.0/methods/LookmlModel/lookml_model_explore).
            - >-
              A Looker Look. For more information, see [Looker Look API]
              (https://developers.looker.com/api/explorer/4.0/methods/Look).
          enum:
            - ENTRY_TYPE_UNSPECIFIED
            - TABLE
            - MODEL
            - DATA_STREAM
            - FILESET
            - CLUSTER
            - DATABASE
            - DATA_SOURCE_CONNECTION
            - ROUTINE
            - LAKE
            - ZONE
            - SERVICE
            - DATABASE_SCHEMA
            - DASHBOARD
            - EXPLORE
            - LOOK
          type: string
        filesetSpec:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1FilesetSpec'
          description: >-
            Specification that applies to a fileset resource. Valid only for
            entries with the `FILESET` type.
        businessContext:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1BusinessContext'
          description: Business Context of the entry. Not supported for BigQuery datasets
        routineSpec:
          description: >-
            Specification that applies to a user-defined function or procedure.
            Valid only for entries with the `ROUTINE` type.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1RoutineSpec'
        usageSignal:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1UsageSignal'
          description: Resource usage statistics.
        fullyQualifiedName:
          description: >-
            [Fully Qualified Name
            (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names)
            of the resource. Set automatically for entries representing
            resources from synced systems. Settable only during creation, and
            read-only later. Can be used for search and lookup of the entries. 
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: >-
            Cloud labels attached to the entry. In Data Catalog, you can create
            and modify labels attached only to custom entries. Synced entries
            have unmodifiable labels that come from the source system.
        databaseTableSpec:
          description: >-
            Specification that applies to a table resource. Valid only for
            entries with the `TABLE` or `EXPLORE` type.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1DatabaseTableSpec'
        schema:
          description: >-
            Schema of the entry. An entry might not have any schema attached to
            it.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1Schema'
        integratedSystem:
          description: >-
            Output only. Indicates the entry's source system that Data Catalog
            integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.
          enumDescriptions:
            - Default unknown system.
            - BigQuery.
            - Cloud Pub/Sub.
            - Dataproc Metastore.
            - Dataplex.
            - Cloud Spanner
            - Cloud Bigtable
            - Cloud Sql
            - Looker
          type: string
          readOnly: true
          enum:
            - INTEGRATED_SYSTEM_UNSPECIFIED
            - BIGQUERY
            - CLOUD_PUBSUB
            - DATAPROC_METASTORE
            - DATAPLEX
            - CLOUD_SPANNER
            - CLOUD_BIGTABLE
            - CLOUD_SQL
            - LOOKER
        cloudBigtableSystemSpec:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1CloudBigtableSystemSpec'
          description: >-
            Specification that applies to Cloud Bigtable system. Only settable
            when `integrated_system` is equal to `CLOUD_BIGTABLE`
        sourceSystemTimestamps:
          description: >-
            Timestamps from the underlying resource, not from the Data Catalog
            entry. Output only when the entry has a system listed in the
            `IntegratedSystem` enum. For entries with `user_specified_system`,
            this field is optional and defaults to an empty timestamp.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1SystemTimestamps'
        sqlDatabaseSystemSpec:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1SqlDatabaseSystemSpec'
          description: >-
            Specification that applies to a relational database system. Only
            settable when `user_specified_system` is equal to `SQL_DATABASE`
        bigqueryTableSpec:
          description: >-
            Output only. Specification that applies to a BigQuery table. Valid
            only for entries with the `TABLE` type.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1BigQueryTableSpec'
          readOnly: true
        personalDetails:
          description: >-
            Output only. Additional information related to the entry. Private to
            the current user.
          readOnly: true
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1PersonalDetails'
        dataSourceConnectionSpec:
          description: >-
            Specification that applies to a data source connection. Valid only
            for entries with the `DATA_SOURCE_CONNECTION` type.
          $ref: >-
            #/components/schemas/GoogleCloudDatacatalogV1DataSourceConnectionSpec
        description:
          type: string
          description: >-
            Entry description that can consist of several sentences or
            paragraphs that describe entry contents. The description must not
            contain Unicode non-characters as well as C0 and C1 control codes
            except tabs (HT), new lines (LF), carriage returns (CR), and page
            breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8.
            Default value is an empty string.
        linkedResource:
          type: string
          description: >-
            The resource this metadata entry refers to. For Google Cloud
            Platform resources, `linked_resource` is the [Full Resource Name]
            (https://cloud.google.com/apis/design/resource_names#full_resource_name).
            For example, the `linked_resource` for a table resource from
            BigQuery is:
            `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}`
            Output only when the entry is one of the types in the `EntryType`
            enum. For entries with a `user_specified_type`, this field is
            optional and defaults to an empty string. The resource string must
            contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
            periods (.), colons (:), slashes (/), dashes (-), and hashes (#).
            The maximum size is 200 bytes when encoded in UTF-8.
    GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest:
      id: GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest
      description: Request message for RenameTagTemplateField.
      type: object
      properties:
        newTagTemplateFieldId:
          description: >-
            Required. The new ID of this tag template field. For example,
            `my_new_field`.
          type: string
    GoogleCloudDatacatalogV1beta1ColumnSchema:
      properties:
        subcolumns:
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1ColumnSchema'
          description: >-
            Optional. Schema of sub-columns. A column can have zero or more
            sub-columns.
          type: array
        type:
          description: Required. Type of the column.
          type: string
        mode:
          type: string
          description: >-
            Optional. A column's mode indicates whether the values in this
            column are required, nullable, etc. Only `NULLABLE`, `REQUIRED` and
            `REPEATED` are supported. Default mode is `NULLABLE`.
        description:
          description: >-
            Optional. Description of the column. Default value is an empty
            string.
          type: string
        column:
          description: Required. Name of the column.
          type: string
      description: >-
        Representation of a column within a schema. Columns could be nested
        inside other columns.
      type: object
      id: GoogleCloudDatacatalogV1beta1ColumnSchema
    GoogleCloudDatacatalogV1beta1SystemTimestamps:
      id: GoogleCloudDatacatalogV1beta1SystemTimestamps
      description: Timestamps about this resource according to a particular system.
      type: object
      properties:
        updateTime:
          type: string
          format: google-datetime
          description: The last-modified time of the resource within the given system.
        createTime:
          format: google-datetime
          description: The creation time of the resource within the given system.
          type: string
        expireTime:
          description: >-
            Output only. The expiration time of the resource within the given
            system. Currently only apllicable to BigQuery resources.
          readOnly: true
          format: google-datetime
          type: string
    GoogleCloudDatacatalogV1PersonalDetails:
      properties:
        starred:
          description: True if the entry is starred by the user; false otherwise.
          type: boolean
        starTime:
          format: google-datetime
          description: Set if the entry is starred; unset otherwise.
          type: string
      type: object
      description: Entry metadata relevant only to the user and private to them.
      id: GoogleCloudDatacatalogV1PersonalDetails
    GoogleCloudDatacatalogV1beta1TagField:
      properties:
        timestampValue:
          type: string
          description: Holds the value for a tag field with timestamp type.
          format: google-datetime
        enumValue:
          description: >-
            Holds the value for a tag field with enum type. This value must be
            one of the allowed values in the definition of this enum.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1TagFieldEnumValue'
        boolValue:
          description: Holds the value for a tag field with boolean type.
          type: boolean
        order:
          description: >-
            Output only. The order of this field with respect to other fields in
            this tag. It can be set in Tag. For example, a higher value can
            indicate a more important field. The value can be negative. Multiple
            fields can have the same order, and field orders within a tag do not
            have to be sequential.
          format: int32
          readOnly: true
          type: integer
        doubleValue:
          description: Holds the value for a tag field with double type.
          type: number
          format: double
        displayName:
          description: Output only. The display name of this field.
          type: string
          readOnly: true
        stringValue:
          type: string
          description: Holds the value for a tag field with string type.
      id: GoogleCloudDatacatalogV1beta1TagField
      description: Contains the value and supporting information for a field within a Tag.
      type: object
    GoogleCloudDatacatalogV1DataSourceConnectionSpec:
      description: >-
        Specification that applies to a data source connection. Valid only for
        entries with the `DATA_SOURCE_CONNECTION` type. Only one of internal
        specs can be set at the time, and cannot be changed later.
      properties:
        bigqueryConnectionSpec:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1BigQueryConnectionSpec'
          description: Output only. Fields specific to BigQuery connections.
      type: object
      id: GoogleCloudDatacatalogV1DataSourceConnectionSpec
    GetIamPolicyRequest:
      id: GetIamPolicyRequest
      type: object
      description: Request message for `GetIamPolicy` method.
      properties:
        options:
          description: >-
            OPTIONAL: A `GetPolicyOptions` object for specifying options to
            `GetIamPolicy`.
          $ref: '#/components/schemas/GetPolicyOptions'
    GoogleCloudDatacatalogV1GcsFilesetSpec:
      type: object
      properties:
        sampleGcsFileSpecs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1GcsFileSpec'
          description: >-
            Output only. Sample files contained in this fileset, not all files
            contained in this fileset are represented here.
          readOnly: true
        filePatterns:
          items:
            type: string
          description: >-
            Required. Patterns to identify a set of files in Google Cloud
            Storage. For more information, see [Wildcard Names]
            (https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
            Note: Currently, bucket wildcards are not supported. Examples of
            valid `file_patterns`: * `gs://bucket_name/dir/*`: matches all files
            in `bucket_name/dir` directory * `gs://bucket_name/dir/**`: matches
            all files in `bucket_name/dir` and all subdirectories *
            `gs://bucket_name/file*`: matches files prefixed by `file` in
            `bucket_name` * `gs://bucket_name/??.txt`: matches files with two
            characters followed by `.txt` in `bucket_name` *
            `gs://bucket_name/[aeiou].txt`: matches files that contain a single
            vowel character followed by `.txt` in `bucket_name` *
            `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`,
            ... or `m` followed by `.txt` in `bucket_name` *
            `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that
            match the `a/*/b` pattern, such as `a/c/b`, `a/d/b` *
            `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt` You
            can combine wildcards to match complex sets of files, for example:
            `gs://bucket_name/[a-m]??.j*g`
          type: array
      id: GoogleCloudDatacatalogV1GcsFilesetSpec
      description: Describes a Cloud Storage fileset entry.
    GoogleCloudDatacatalogV1beta1Taxonomy:
      properties:
        policyTagCount:
          format: int32
          description: Output only. Number of policy tags contained in this taxonomy.
          type: integer
          readOnly: true
        displayName:
          type: string
          description: >-
            Required. User defined name of this taxonomy. It must: contain only
            unicode letters, numbers, underscores, dashes and spaces; not start
            or end with spaces; and be at most 200 bytes long when encoded in
            UTF-8. The taxonomy display name must be unique within an
            organization.
        description:
          description: >-
            Optional. Description of this taxonomy. It must: contain only
            unicode characters, tabs, newlines, carriage returns and page
            breaks; and be at most 2000 bytes long when encoded in UTF-8. If not
            set, defaults to an empty description.
          type: string
        activatedPolicyTypes:
          items:
            enumDescriptions:
              - Unspecified policy type.
              - >-
                Fine grained access control policy, which enables access control
                on tagged resources.
            enum:
              - POLICY_TYPE_UNSPECIFIED
              - FINE_GRAINED_ACCESS_CONTROL
            type: string
          type: array
          description: >-
            Optional. A list of policy types that are activated for this
            taxonomy. If not set, defaults to an empty list.
        taxonomyTimestamps:
          readOnly: true
          description: >-
            Output only. Timestamps about this taxonomy. Only create_time and
            update_time are used.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1SystemTimestamps'
        name:
          description: >-
            Output only. Resource name of this taxonomy, whose format is:
            "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
          type: string
          readOnly: true
        service:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1TaxonomyService'
          description: >-
            Output only. Identity of the service which owns the Taxonomy. This
            field is only populated when the taxonomy is created by a Google
            Cloud service. Currently only 'DATAPLEX' is supported.
          readOnly: true
      id: GoogleCloudDatacatalogV1beta1Taxonomy
      type: object
      description: >-
        A taxonomy is a collection of policy tags that classify data along a
        common axis. For instance a data *sensitivity* taxonomy could contain
        policy tags denoting PII such as age, zipcode, and SSN. A data *origin*
        taxonomy could contain policy tags to distinguish user data, employee
        data, partner data, public data.
    GoogleCloudDatacatalogV1UsageStats:
      properties:
        totalCancellations:
          type: number
          format: float
          description: The number of cancelled attempts to use the underlying entry.
        totalFailures:
          format: float
          type: number
          description: The number of failed attempts to use the underlying entry.
        totalExecutionTimeForCompletionsMillis:
          description: Total time spent only on successful uses, in milliseconds.
          type: number
          format: float
        totalCompletions:
          description: The number of successful uses of the underlying entry.
          format: float
          type: number
      description: >-
        Detailed statistics on the entry's usage. Usage statistics have the
        following limitations: - Only BigQuery tables have them. - They only
        include BigQuery query jobs. - They might be underestimated because
        wildcard table references are not yet counted. For more information, see
        [Querying multiple tables using a wildcard table]
        (https://cloud.google.com/bigquery/docs/querying-wildcard-tables)
      type: object
      id: GoogleCloudDatacatalogV1UsageStats
    GoogleCloudDatacatalogV1EntryOverview:
      type: object
      description: Entry overview fields for rich text descriptions of entries.
      properties:
        overview:
          type: string
          description: >-
            Entry overview with support for rich text. The overview must only
            contain Unicode characters, and should be formatted using HTML. The
            maximum length is 10 MiB as this value holds HTML descriptions
            including encoded images. The maximum length of the text without
            images is 100 KiB.
      id: GoogleCloudDatacatalogV1EntryOverview
    GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse:
      id: GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse
      type: object
      properties:
        entryGroups:
          type: array
          description: EntryGroup details.
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1EntryGroup'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results. It is set to empty if no
            items remain in results.
          type: string
      description: Response message for ListEntryGroups.
    GoogleCloudDatacatalogV1ReconcileTagsMetadata:
      type: object
      properties:
        errors:
          additionalProperties:
            $ref: '#/components/schemas/Status'
          description: >-
            Maps the name of each tagged column (or empty string for a sole
            entry) to tagging operation status.
          type: object
        state:
          enumDescriptions:
            - Default value. This value is unused.
            - The reconciliation has been queued and awaits for execution.
            - The reconciliation is in progress.
            - The reconciliation has been finished.
          description: State of the reconciliation operation.
          type: string
          enum:
            - RECONCILIATION_STATE_UNSPECIFIED
            - RECONCILIATION_QUEUED
            - RECONCILIATION_IN_PROGRESS
            - RECONCILIATION_DONE
      id: GoogleCloudDatacatalogV1ReconcileTagsMetadata
      description: Long-running operation metadata message returned by the ReconcileTags.
    GoogleCloudDatacatalogV1StorageProperties:
      type: object
      id: GoogleCloudDatacatalogV1StorageProperties
      description: Details the properties of the underlying storage.
      properties:
        fileType:
          type: string
          description: File type in MIME format, for example, `text/plain`.
        filePattern:
          type: array
          items:
            type: string
          description: >-
            Patterns to identify a set of files for this fileset. Examples of a
            valid `file_pattern`: * `gs://bucket_name/dir/*`: matches all files
            in the `bucket_name/dir` directory * `gs://bucket_name/dir/**`:
            matches all files in the `bucket_name/dir` and all subdirectories
            recursively * `gs://bucket_name/file*`: matches files prefixed by
            `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files
            with two characters followed by `.txt` in `bucket_name` *
            `gs://bucket_name/[aeiou].txt`: matches files that contain a single
            vowel character followed by `.txt` in `bucket_name` *
            `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`,
            ... or `m` followed by `.txt` in `bucket_name` *
            `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that
            match the `a/*/b` pattern, such as `a/c/b`, `a/d/b` *
            `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
    GoogleCloudDatacatalogV1ImportEntriesMetadata:
      type: object
      description: >-
        Metadata message for long-running operation returned by the
        ImportEntries.
      properties:
        errors:
          type: array
          description: >-
            Partial errors that are encountered during the ImportEntries
            operation. There is no guarantee that all the encountered errors are
            reported. However, if no errors are reported, it means that no
            errors were encountered.
          items:
            $ref: '#/components/schemas/Status'
        state:
          enum:
            - IMPORT_STATE_UNSPECIFIED
            - IMPORT_QUEUED
            - IMPORT_IN_PROGRESS
            - IMPORT_DONE
            - IMPORT_OBSOLETE
          enumDescriptions:
            - Default value. This value is unused.
            - The dump with entries has been queued for import.
            - The import of entries is in progress.
            - The import of entries has been finished.
            - >-
              The import of entries has been abandoned in favor of a newer
              request.
          type: string
          description: State of the import operation.
      id: GoogleCloudDatacatalogV1ImportEntriesMetadata
    GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema:
      properties:
        text:
          description: Thrift IDL source of the schema.
          type: string
      id: GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema
      type: object
      description: Schema in Thrift format.
    GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec:
      type: object
      description: Column info specific to Looker System.
      properties:
        type:
          enum:
            - LOOKER_COLUMN_TYPE_UNSPECIFIED
            - DIMENSION
            - DIMENSION_GROUP
            - FILTER
            - MEASURE
            - PARAMETER
          type: string
          description: Looker specific column type of this column.
          enumDescriptions:
            - Unspecified.
            - Dimension.
            - Dimension group - parent for Dimension.
            - Filter.
            - Measure.
            - Parameter.
      id: GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec
    GoogleCloudDatacatalogV1ViewSpec:
      id: GoogleCloudDatacatalogV1ViewSpec
      type: object
      properties:
        viewQuery:
          type: string
          readOnly: true
          description: Output only. The query that defines the table view.
      description: Table view specification.
    Policy:
      properties:
        version:
          format: int32
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          type: array
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
        etag:
          format: byte
          type: string
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
        user:mike@example.com - group:admins@example.com - domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For
        a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      id: Policy
    GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest:
      properties:
        newEnumValueDisplayName:
          type: string
          description: >-
            Required. The new display name of the enum value. For example,
            `my_new_enum_value`.
      description: Request message for RenameTagTemplateFieldEnumValue.
      type: object
      id: GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest
    GoogleCloudDatacatalogV1SqlDatabaseSystemSpec:
      description: >-
        Specification that applies to entries that are part `SQL_DATABASE`
        system (user_specified_type)
      properties:
        databaseVersion:
          type: string
          description: Version of the database engine.
        instanceHost:
          type: string
          description: >-
            Host of the SQL database enum InstanceHost { UNDEFINED = 0;
            SELF_HOSTED = 1; CLOUD_SQL = 2; AMAZON_RDS = 3; AZURE_SQL = 4; }
            Host of the enclousing database instance.
        sqlEngine:
          type: string
          description: >-
            SQL Database Engine. enum SqlEngine { UNDEFINED = 0; MY_SQL = 1;
            POSTGRE_SQL = 2; SQL_SERVER = 3; } Engine of the enclosing database
            instance.
      type: object
      id: GoogleCloudDatacatalogV1SqlDatabaseSystemSpec
    GoogleCloudDatacatalogV1DataplexSpec:
      type: object
      description: Common Dataplex fields.
      properties:
        projectId:
          description: >-
            Project ID of the underlying Cloud Storage or BigQuery data. Note
            that this may not be the same project as the correspondingly
            Dataplex lake / zone / asset.
          type: string
        compressionFormat:
          description: Compression format of the data, e.g., zip, gzip etc.
          type: string
        dataFormat:
          description: Format of the data.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1PhysicalSchema'
        asset:
          description: >-
            Fully qualified resource name of an asset in Dataplex, to which the
            underlying data source (Cloud Storage bucket or BigQuery dataset) of
            the entity is attached.
          type: string
      id: GoogleCloudDatacatalogV1DataplexSpec
    GoogleCloudDatacatalogV1PhysicalSchemaCsvSchema:
      type: object
      properties: {}
      id: GoogleCloudDatacatalogV1PhysicalSchemaCsvSchema
      description: Marks a CSV-encoded data source.
    GoogleCloudDatacatalogV1beta1TagTemplateField:
      properties:
        description:
          type: string
          description: The description for this field. Defaults to an empty string.
        order:
          type: integer
          format: int32
          description: >-
            The order of this field with respect to other fields in this tag
            template. A higher value indicates a more important field. The value
            can be negative. Multiple fields can have the same order, and field
            orders within a tag do not have to be sequential.
        type:
          description: Required. The type of value this tag field can contain.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1FieldType'
        displayName:
          type: string
          description: The display name for this field. Defaults to an empty string.
        isRequired:
          description: Whether this is a required field. Defaults to false.
          type: boolean
        name:
          type: string
          description: >-
            Output only. The resource name of the tag template field in URL
            format. Example: *
            projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field}
            Note that this TagTemplateField may not actually be stored in the
            location in this name.
          readOnly: true
      description: The template for an individual field within a tag template.
      type: object
      id: GoogleCloudDatacatalogV1beta1TagTemplateField
    GoogleCloudDatacatalogV1CloudBigtableSystemSpec:
      id: GoogleCloudDatacatalogV1CloudBigtableSystemSpec
      properties:
        instanceDisplayName:
          description: >-
            Display name of the Instance. This is user specified and different
            from the resource name.
          type: string
      description: >-
        Specification that applies to all entries that are part of
        `CLOUD_BIGTABLE` system (user_specified_type)
      type: object
    GoogleCloudDatacatalogV1beta1TagFieldEnumValue:
      properties:
        displayName:
          description: The display name of the enum value.
          type: string
      description: Holds an enum value.
      type: object
      id: GoogleCloudDatacatalogV1beta1TagFieldEnumValue
    GoogleCloudDatacatalogV1beta1TableSpec:
      description: Normal BigQuery table spec.
      type: object
      id: GoogleCloudDatacatalogV1beta1TableSpec
      properties:
        groupedEntry:
          description: >-
            Output only. If the table is a dated shard, i.e., with name pattern
            `[prefix]YYYYMMDD`, `grouped_entry` is the Data Catalog resource
            name of the date sharded grouped entry, for example,
            `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.
            Otherwise, `grouped_entry` is empty.
          type: string
          readOnly: true
    GoogleCloudDatacatalogV1RoutineSpec:
      properties:
        definitionBody:
          description: The body of the routine.
          type: string
        routineType:
          enum:
            - ROUTINE_TYPE_UNSPECIFIED
            - SCALAR_FUNCTION
            - PROCEDURE
          type: string
          description: The type of the routine.
          enumDescriptions:
            - Unspecified type.
            - Non-builtin permanent scalar function.
            - Stored procedure.
        language:
          type: string
          description: >-
            The language the routine is written in. The exact value depends on
            the source system. For BigQuery routines, possible values are: *
            `SQL` * `JAVASCRIPT`
        bigqueryRoutineSpec:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1BigQueryRoutineSpec'
          description: Fields specific for BigQuery routines.
        routineArguments:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1RoutineSpecArgument'
          description: Arguments of the routine.
        returnType:
          type: string
          description: >-
            Return type of the argument. The exact value depends on the source
            system and the language.
      description: >-
        Specification that applies to a routine. Valid only for entries with the
        `ROUTINE` type.
      type: object
      id: GoogleCloudDatacatalogV1RoutineSpec
    GoogleCloudDatacatalogV1ImportEntriesResponse:
      properties:
        deletedEntriesCount:
          format: int64
          type: string
          description: Number of entries deleted as a result of import operation.
        upsertedEntriesCount:
          format: int64
          type: string
          description: >-
            Cumulative number of entries created and entries updated as a result
            of import operation.
      description: >-
        Response message for long-running operation returned by the
        ImportEntries.
      id: GoogleCloudDatacatalogV1ImportEntriesResponse
      type: object
    GoogleCloudDatacatalogV1Contacts:
      type: object
      description: Contact people for the entry.
      properties:
        people:
          description: The list of contact people for the entry.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1ContactsPerson'
      id: GoogleCloudDatacatalogV1Contacts
    GoogleCloudDatacatalogV1ColumnSchema:
      properties:
        gcRule:
          type: string
          description: >-
            Optional. Garbage collection policy for the column or column family.
            Applies to systems like Cloud Bigtable.
        description:
          type: string
          description: >-
            Optional. Description of the column. Default value is an empty
            string. The description must be a UTF-8 string with the maximum size
            of 2000 bytes.
        subcolumns:
          type: array
          description: >-
            Optional. Schema of sub-columns. A column can have zero or more
            sub-columns.
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1ColumnSchema'
        highestIndexingType:
          enum:
            - INDEXING_TYPE_UNSPECIFIED
            - INDEXING_TYPE_NONE
            - INDEXING_TYPE_NON_UNIQUE
            - INDEXING_TYPE_UNIQUE
            - INDEXING_TYPE_PRIMARY_KEY
          type: string
          description: Optional. Most important inclusion of this column.
          enumDescriptions:
            - Unspecified.
            - Column not a part of an index.
            - Column Part of non unique index.
            - Column part of unique index.
            - Column part of the primary key.
        defaultValue:
          type: string
          description: Optional. Default value for the column.
        ordinalPosition:
          description: Optional. Ordinal position
          format: int32
          type: integer
        lookerColumnSpec:
          $ref: >-
            #/components/schemas/GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec
          description: Looker specific column info of this column.
        mode:
          description: >-
            Optional. A column's mode indicates whether values in this column
            are required, nullable, or repeated. Only `NULLABLE`, `REQUIRED`,
            and `REPEATED` values are supported. Default mode is `NULLABLE`.
          type: string
        column:
          description: >-
            Required. Name of the column. Must be a UTF-8 string without dots
            (.). The maximum size is 64 bytes.
          type: string
        type:
          description: >-
            Required. Type of the column. Must be a UTF-8 string with the
            maximum size of 128 bytes.
          type: string
      description: A column within a schema. Columns can be nested inside other columns.
      type: object
      id: GoogleCloudDatacatalogV1ColumnSchema
    GoogleCloudDatacatalogV1beta1GcsFilesetSpec:
      properties:
        sampleGcsFileSpecs:
          description: >-
            Output only. Sample files contained in this fileset, not all files
            contained in this fileset are represented here.
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1GcsFileSpec'
          type: array
        filePatterns:
          type: array
          description: >-
            Required. Patterns to identify a set of files in Google Cloud
            Storage. See [Cloud Storage
            documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames)
            for more information. Note that bucket wildcards are currently not
            supported. Examples of valid file_patterns: *
            `gs://bucket_name/dir/*`: matches all files within `bucket_name/dir`
            directory. * `gs://bucket_name/dir/**`: matches all files in
            `bucket_name/dir` spanning all subdirectories. *
            `gs://bucket_name/file*`: matches files prefixed by `file` in
            `bucket_name` * `gs://bucket_name/??.txt`: matches files with two
            characters followed by `.txt` in `bucket_name` *
            `gs://bucket_name/[aeiou].txt`: matches files that contain a single
            vowel character followed by `.txt` in `bucket_name` *
            `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`,
            ... or `m` followed by `.txt` in `bucket_name` *
            `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that
            match `a/*/b` pattern, such as `a/c/b`, `a/d/b` *
            `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt` You
            can combine wildcards to provide more powerful matches, for example:
            * `gs://bucket_name/[a-m]??.j*g`
          items:
            type: string
      type: object
      id: GoogleCloudDatacatalogV1beta1GcsFilesetSpec
      description: Describes a Cloud Storage fileset entry.
    GetPolicyOptions:
      properties:
        requestedPolicyVersion:
          format: int32
          description: >-
            Optional. The maximum policy version that will be used to format the
            policy. Valid values are 0, 1, and 3. Requests specifying an invalid
            value will be rejected. Requests for policies with any conditional
            role bindings must specify version 3. Policies with no conditional
            role bindings may specify any valid value or leave the field unset.
            The policy in the response might use the policy version that you
            specified, or it might use a lower policy version. For example, if
            you specify version 3, but the policy has no conditional role
            bindings, the response uses version 1. To learn which resources
            support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
      id: GetPolicyOptions
      type: object
      description: Encapsulates settings provided to GetIamPolicy.
    GoogleCloudDatacatalogV1DataplexTableSpec:
      id: GoogleCloudDatacatalogV1DataplexTableSpec
      description: Entry specification for a Dataplex table.
      type: object
      properties:
        externalTables:
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1DataplexExternalTable'
          description: >-
            List of external tables registered by Dataplex in other systems
            based on the same underlying data. External tables allow to query
            this data in those systems.
          type: array
        userManaged:
          description: Indicates if the table schema is managed by the user or not.
          type: boolean
        dataplexSpec:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1DataplexSpec'
          description: Common Dataplex fields.
    Expr:
      type: object
      properties:
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
    GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema:
      id: GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema
      properties:
        text:
          description: JSON source of the Avro schema.
          type: string
      type: object
      description: Schema in Avro JSON format.
    GoogleCloudDatacatalogV1beta1SerializedPolicyTag:
      description: Message representing one policy tag when exported as a nested proto.
      properties:
        policyTag:
          type: string
          description: >-
            Resource name of the policy tag. This field will be ignored when
            calling ImportTaxonomies.
        description:
          description: >-
            Description of the serialized policy tag. The length of the
            description is limited to 2000 bytes when encoded in UTF-8. If not
            set, defaults to an empty description.
          type: string
        displayName:
          description: >-
            Required. Display name of the policy tag. Max 200 bytes when encoded
            in UTF-8.
          type: string
        childPolicyTags:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDatacatalogV1beta1SerializedPolicyTag
          description: Children of the policy tag if any.
      id: GoogleCloudDatacatalogV1beta1SerializedPolicyTag
      type: object
    GoogleCloudDatacatalogV1BusinessContext:
      description: Business Context of the entry.
      properties:
        entryOverview:
          description: Entry overview fields for rich text descriptions of entries.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1EntryOverview'
        contacts:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1Contacts'
          description: Contact people for the entry.
      id: GoogleCloudDatacatalogV1BusinessContext
      type: object
    GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse:
      type: object
      properties:
        nextPageToken:
          description: >-
            Token used to retrieve the next page of results, or empty if there
            are no more results in the list.
          type: string
        policyTags:
          description: The policy tags that are in the requested taxonomy.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1PolicyTag'
      id: GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse
      description: Response message for ListPolicyTags.
    GoogleCloudDatacatalogV1beta1InlineSource:
      description: Inline source used for taxonomies import.
      id: GoogleCloudDatacatalogV1beta1InlineSource
      type: object
      properties:
        taxonomies:
          description: Required. Taxonomies to be imported.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDatacatalogV1beta1SerializedTaxonomy
          type: array
    Empty:
      type: object
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
    GoogleCloudDatacatalogV1Schema:
      id: GoogleCloudDatacatalogV1Schema
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1ColumnSchema'
          description: >-
            The unified GoogleSQL-like schema of columns. The overall maximum
            number of columns and nested columns is 10,000. The maximum nested
            depth is 15 levels.
      type: object
      description: Represents a schema, for example, a BigQuery, GoogleSQL, or Avro schema.
    GoogleCloudDatacatalogV1beta1ListEntriesResponse:
      type: object
      id: GoogleCloudDatacatalogV1beta1ListEntriesResponse
      description: Response message for ListEntries.
      properties:
        nextPageToken:
          type: string
          description: >-
            Token to retrieve the next page of results. It is set to empty if no
            items remain in results.
        entries:
          type: array
          description: Entry details.
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Entry'
    GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec:
      id: GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec
      type: object
      properties:
        dataset:
          description: >-
            Output only. The Data Catalog resource name of the dataset entry the
            current table belongs to, for example,
            `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.
          readOnly: true
          type: string
        tablePrefix:
          description: >-
            Output only. The table name prefix of the shards. The name of any
            given shard is `[table_prefix]YYYYMMDD`, for example, for shard
            `MyTable20180101`, the `table_prefix` is `MyTable`.
          readOnly: true
          type: string
        shardCount:
          format: int64
          description: Output only. Total number of shards.
          readOnly: true
          type: string
      description: >-
        Spec for a group of BigQuery tables with name pattern
        `[prefix]YYYYMMDD`. Context:
        https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding
    GoogleCloudDatacatalogV1beta1PolicyTag:
      id: GoogleCloudDatacatalogV1beta1PolicyTag
      description: >-
        Denotes one policy tag in a taxonomy (e.g. ssn). Policy Tags can be
        defined in a hierarchy. For example, consider the following hierarchy:
        Geolocation -> (LatLong, City, ZipCode). PolicyTag "Geolocation"
        contains three child policy tags: "LatLong", "City", and "ZipCode".
      properties:
        description:
          description: >-
            Description of this policy tag. It must: contain only unicode
            characters, tabs, newlines, carriage returns and page breaks; and be
            at most 2000 bytes long when encoded in UTF-8. If not set, defaults
            to an empty description. If not set, defaults to an empty
            description.
          type: string
        name:
          readOnly: true
          description: >-
            Output only. Resource name of this policy tag, whose format is:
            "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
          type: string
        displayName:
          type: string
          description: >-
            Required. User defined name of this policy tag. It must: be unique
            within the parent taxonomy; contain only unicode letters, numbers,
            underscores, dashes and spaces; not start or end with spaces; and be
            at most 200 bytes long when encoded in UTF-8.
        childPolicyTags:
          readOnly: true
          description: Output only. Resource names of child policy tags of this policy tag.
          type: array
          items:
            type: string
        parentPolicyTag:
          type: string
          description: >-
            Resource name of this policy tag's parent policy tag (e.g. for the
            "LatLong" policy tag in the example above, this field contains the
            resource name of the "Geolocation" policy tag). If empty, it means
            this policy tag is a top level policy tag (e.g. this field is empty
            for the "Geolocation" policy tag in the example above). If not set,
            defaults to an empty string.
      type: object
    GoogleCloudDatacatalogV1beta1SearchCatalogResponse:
      properties:
        nextPageToken:
          description: The token that can be used to retrieve the next page of results.
          type: string
        results:
          description: Search results.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDatacatalogV1beta1SearchCatalogResult
          type: array
        unreachable:
          items:
            type: string
          type: array
          description: >-
            Unreachable locations. Search result does not include data from
            those locations. Users can get additional information on the error
            by repeating the search request with a more restrictive parameter --
            setting the value for
            `SearchDataCatalogRequest.scope.restricted_locations`.
        totalSize:
          description: The approximate total number of entries matched by the query.
          format: int32
          type: integer
      id: GoogleCloudDatacatalogV1beta1SearchCatalogResponse
      type: object
      description: Response message for SearchCatalog.
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
      id: TestIamPermissionsRequest
    GoogleCloudDatacatalogV1RoutineSpecArgument:
      id: GoogleCloudDatacatalogV1RoutineSpecArgument
      properties:
        name:
          description: >-
            The name of the argument. A return argument of a function might not
            have a name.
          type: string
        type:
          description: >-
            Type of the argument. The exact value depends on the source system
            and the language.
          type: string
        mode:
          enum:
            - MODE_UNSPECIFIED
            - IN
            - OUT
            - INOUT
          description: Specifies whether the argument is input or output.
          enumDescriptions:
            - Unspecified mode.
            - The argument is input-only.
            - The argument is output-only.
            - The argument is both an input and an output.
          type: string
      description: Input or output argument of a function or stored procedure.
      type: object
    GoogleCloudDatacatalogV1ContactsPerson:
      id: GoogleCloudDatacatalogV1ContactsPerson
      type: object
      properties:
        email:
          type: string
          description: >-
            Email of the person in the format of `john.doe@xyz`, ``, or `John
            Doe`.
        designation:
          type: string
          description: Designation of the person, for example, Data Steward.
      description: A contact person for the entry.
    GoogleCloudDatacatalogV1ServiceSpec:
      type: object
      properties:
        cloudBigtableInstanceSpec:
          $ref: >-
            #/components/schemas/GoogleCloudDatacatalogV1CloudBigtableInstanceSpec
          description: >-
            Specification that applies to Instance entries of `CLOUD_BIGTABLE`
            system.
      description: >-
        Specification that applies to a Service resource. Valid only for entries
        with the `SERVICE` type.
      id: GoogleCloudDatacatalogV1ServiceSpec
    GoogleCloudDatacatalogV1beta1UsageSignal:
      id: GoogleCloudDatacatalogV1beta1UsageSignal
      description: The set of all usage signals that we store in Data Catalog.
      properties:
        updateTime:
          format: google-datetime
          type: string
          description: The timestamp of the end of the usage statistics duration.
        usageWithinTimeRange:
          description: >-
            Usage statistics over each of the pre-defined time ranges, supported
            strings for time ranges are {"24H", "7D", "30D"}.
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1UsageStats'
          type: object
      type: object
    GoogleCloudDatacatalogV1beta1SearchCatalogResult:
      properties:
        linkedResource:
          type: string
          description: >-
            The full name of the cloud resource the entry belongs to. See:
            https://cloud.google.com/apis/design/resource_names#full_resource_name.
            Example: *
            `//bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId`
        searchResultType:
          enum:
            - SEARCH_RESULT_TYPE_UNSPECIFIED
            - ENTRY
            - TAG_TEMPLATE
            - ENTRY_GROUP
          description: >-
            Type of the search result. This field can be used to determine which
            Get method to call to fetch the full resource.
          type: string
          enumDescriptions:
            - Default unknown type.
            - An Entry.
            - A TagTemplate.
            - An EntryGroup.
        relativeResourceName:
          type: string
          description: >-
            The relative resource name of the resource in URL format. Examples:
            *
            `projects/{project_id}/locations/{location_id}/entryGroups/{entry_group_id}/entries/{entry_id}`
            * `projects/{project_id}/tagTemplates/{tag_template_id}`
        searchResultSubtype:
          type: string
          description: >-
            Sub-type of the search result. This is a dot-delimited description
            of the resource's full type, and is the same as the value callers
            would provide in the "type" search facet. Examples: `entry.table`,
            `entry.dataStream`, `tagTemplate`.
        modifyTime:
          description: Last-modified timestamp of the entry from the managing system.
          type: string
          format: google-datetime
      id: GoogleCloudDatacatalogV1beta1SearchCatalogResult
      description: >-
        A result that appears in the response of a search request. Each result
        captures details of one entry that matches the search.
      type: object
    GoogleCloudDatacatalogV1PhysicalSchema:
      id: GoogleCloudDatacatalogV1PhysicalSchema
      type: object
      description: >-
        Native schema used by a resource represented as an entry. Used by query
        engines for deserializing and parsing source data.
      properties:
        protobuf:
          description: Schema in protocol buffer format.
          $ref: >-
            #/components/schemas/GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema
        thrift:
          description: Schema in Thrift format.
          $ref: >-
            #/components/schemas/GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema
        orc:
          description: Marks an ORC-encoded data source.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1PhysicalSchemaOrcSchema'
        avro:
          description: Schema in Avro JSON format.
          $ref: >-
            #/components/schemas/GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema
        parquet:
          description: Marks a Parquet-encoded data source.
          $ref: >-
            #/components/schemas/GoogleCloudDatacatalogV1PhysicalSchemaParquetSchema
        csv:
          description: Marks a CSV-encoded data source.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1PhysicalSchemaCsvSchema'
    GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse:
      type: object
      properties:
        nextPageToken:
          description: >-
            Token used to retrieve the next page of results, or empty if there
            are no more results in the list.
          type: string
        taxonomies:
          type: array
          description: Taxonomies that the project contains.
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Taxonomy'
      id: GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse
      description: Response message for ListTaxonomies.
    GoogleCloudDatacatalogV1FilesetSpec:
      properties:
        dataplexFileset:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1DataplexFilesetSpec'
          description: >-
            Fields specific to a Dataplex fileset and present only in the
            Dataplex fileset entries.
      description: >-
        Specification that applies to a fileset. Valid only for entries with the
        'FILESET' type.
      type: object
      id: GoogleCloudDatacatalogV1FilesetSpec
    GoogleCloudDatacatalogV1PhysicalSchemaOrcSchema:
      type: object
      properties: {}
      id: GoogleCloudDatacatalogV1PhysicalSchemaOrcSchema
      description: Marks an ORC-encoded data source.
    GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest:
      type: object
      id: GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest
      properties:
        inlineSource:
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1InlineSource'
          description: Inline source used for taxonomies to be imported.
      description: Request message for ImportTaxonomies.
    GoogleCloudDatacatalogV1DataSource:
      type: object
      properties:
        sourceEntry:
          description: Output only. Data Catalog entry name, if applicable.
          type: string
          readOnly: true
        resource:
          description: >-
            Full name of a resource as defined by the service. For example:
            `//bigquery.googleapis.com/projects/{PROJECT_ID}/locations/{LOCATION}/datasets/{DATASET_ID}/tables/{TABLE_ID}`
          type: string
        storageProperties:
          description: Detailed properties of the underlying storage.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1StorageProperties'
        service:
          type: string
          enum:
            - SERVICE_UNSPECIFIED
            - CLOUD_STORAGE
            - BIGQUERY
          description: Service that physically stores the data.
          enumDescriptions:
            - Default unknown service.
            - Google Cloud Storage service.
            - BigQuery service.
      description: Physical location of an entry.
      id: GoogleCloudDatacatalogV1DataSource
    GoogleCloudDatacatalogV1LookerSystemSpec:
      description: >-
        Specification that applies to entries that are part `LOOKER` system
        (user_specified_type)
      properties:
        parentModelId:
          type: string
          description: ID of the parent Model. Empty if it does not exist.
        parentInstanceDisplayName:
          type: string
          description: Name of the parent Looker Instance. Empty if it does not exist.
        parentViewDisplayName:
          description: Name of the parent View. Empty if it does not exist.
          type: string
        parentInstanceId:
          description: >-
            ID of the parent Looker Instance. Empty if it does not exist.
            Example value: `someinstance.looker.com`
          type: string
        parentViewId:
          type: string
          description: ID of the parent View. Empty if it does not exist.
        parentModelDisplayName:
          type: string
          description: Name of the parent Model. Empty if it does not exist.
      id: GoogleCloudDatacatalogV1LookerSystemSpec
      type: object
    GoogleCloudDatacatalogV1TagFieldEnumValue:
      description: An enum value.
      id: GoogleCloudDatacatalogV1TagFieldEnumValue
      type: object
      properties:
        displayName:
          type: string
          description: The display name of the enum value.
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: '#/components/schemas/Expr'
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
        members:
          items:
            type: string
          type: array
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding.
      type: object
    GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse:
      properties:
        taxonomies:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Taxonomy'
          description: Taxonomies that were imported.
      id: GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse
      description: Response message for ImportTaxonomies.
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      id: TestIamPermissionsResponse
      properties:
        permissions:
          items:
            type: string
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1TaxonomyService:
      id: GoogleCloudDatacatalogV1beta1TaxonomyService
      properties:
        identity:
          description: The service agent for the service.
          type: string
        name:
          description: The Google Cloud service name.
          type: string
          enum:
            - MANAGING_SYSTEM_UNSPECIFIED
            - MANAGING_SYSTEM_DATAPLEX
            - MANAGING_SYSTEM_OTHER
          enumDescriptions:
            - Default value
            - Dataplex.
            - Other
      description: The source system of the Taxonomy.
      type: object
    GoogleCloudDatacatalogV1beta1ViewSpec:
      type: object
      id: GoogleCloudDatacatalogV1beta1ViewSpec
      description: Table view specification.
      properties:
        viewQuery:
          readOnly: true
          type: string
          description: Output only. The query that defines the table view.
    GoogleCloudDatacatalogV1DumpItem:
      description: Wrapper for any item that can be contained in the dump.
      type: object
      properties:
        taggedEntry:
          description: Entry and its tags.
          $ref: '#/components/schemas/GoogleCloudDatacatalogV1TaggedEntry'
      id: GoogleCloudDatacatalogV1DumpItem
    GoogleCloudDatacatalogV1beta1SerializedTaxonomy:
      properties:
        displayName:
          type: string
          description: >-
            Required. Display name of the taxonomy. Max 200 bytes when encoded
            in UTF-8.
        activatedPolicyTypes:
          description: A list of policy types that are activated for a taxonomy.
          type: array
          items:
            enum:
              - POLICY_TYPE_UNSPECIFIED
              - FINE_GRAINED_ACCESS_CONTROL
            enumDescriptions:
              - Unspecified policy type.
              - >-
                Fine grained access control policy, which enables access control
                on tagged resources.
            type: string
        description:
          type: string
          description: >-
            Description of the serialized taxonomy. The length of the
            description is limited to 2000 bytes when encoded in UTF-8. If not
            set, defaults to an empty description.
        policyTags:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDatacatalogV1beta1SerializedPolicyTag
          description: Top level policy tags associated with the taxonomy if any.
          type: array
      id: GoogleCloudDatacatalogV1beta1SerializedTaxonomy
      description: >-
        Message capturing a taxonomy and its policy tag hierarchy as a nested
        proto. Used for taxonomy import/export and mutation.
      type: object
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
      type: object
      description: Request message for `SetIamPolicy` method.
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta1/catalog:search:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
    post:
      description: >-
        Searches Data Catalog for multiple resources like entries, tags that
        match a query. This is a custom method
        (https://cloud.google.com/apis/design/custom_methods) and does not
        return the complete resource, only the resource identifier and high
        level fields. Clients can subsequently call `Get` methods. Note that
        Data Catalog search queries do not guarantee full recall. Query results
        that match your query may not be returned, even in subsequent result
        pages. Also note that results returned (and not returned) can vary
        across repeated search queries. See [Data Catalog Search
        Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)
        for more information.
      operationId: datacatalog.catalog.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDatacatalogV1beta1SearchCatalogRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogV1beta1SearchCatalogResponse
      parameters: []
      x-stackQL-resource: catalog
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}:
    parameters: *ref_1
    get:
      description: Gets a tag template.
      operationId: datacatalog.projects.locations.tagTemplates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tagTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tag_templates
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes a tag template and all tags using the template. Users should
        enable the Data Catalog API in the project identified by the `name`
        parameter (see [Data Catalog Resource Project]
        (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
        for more information).
      operationId: datacatalog.projects.locations.tagTemplates.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tagTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: tag_templates
      x-stackQL-verb: delete
    patch:
      description: >-
        Updates a tag template. This method cannot be used to update the fields
        of a template. The tag template fields are represented as separate
        resources and should be updated using their own create/update/delete
        methods. Users should enable the Data Catalog API in the project
        identified by the `tag_template.name` parameter (see [Data Catalog
        Resource Project]
        (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
        for more information).
      operationId: datacatalog.projects.locations.tagTemplates.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tagTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: tag_templates
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates:
    parameters: *ref_1
    post:
      description: >-
        Creates a tag template. The user should enable the Data Catalog API in
        the project identified by the `parent` parameter (see [Data Catalog
        Resource
        Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
        for more information).
      operationId: datacatalog.projects.locations.tagTemplates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: tagTemplateId
          schema:
            type: string
      x-stackQL-resource: tag_templates
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a resource. A `NOT_FOUND` error is
        returned if the resource does not exist. An empty policy is returned if
        the resource exists but does not have a policy set on it. Supported
        resources are: - Tag templates. - Entries. - Entry groups. Note, this
        method cannot be used to manage policies for BigQuery, Pub/Sub and any
        external Google Cloud Platform resources synced to Data Catalog. Callers
        must have following Google IAM permission -
        `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
        templates. - `datacatalog.entries.getIamPolicy` to get policies on
        entries. - `datacatalog.entryGroups.getIamPolicy` to get policies on
        entry groups.
      operationId: datacatalog.projects.locations.tagTemplates.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tagTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tag_templates_iam_policies
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy for a resource. Replaces any existing
        policy. Supported resources are: - Tag templates. - Entries. - Entry
        groups. Note, this method cannot be used to manage policies for
        BigQuery, Pub/Sub and any external Google Cloud Platform resources
        synced to Data Catalog. Callers must have following Google IAM
        permission - `datacatalog.tagTemplates.setIamPolicy` to set policies on
        tag templates. - `datacatalog.entries.setIamPolicy` to set policies on
        entries. - `datacatalog.entryGroups.setIamPolicy` to set policies on
        entry groups.
      operationId: datacatalog.projects.locations.tagTemplates.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tagTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tag_templates_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns the caller's permissions on a resource. If the resource does not
        exist, an empty set of permissions is returned (We don't return a
        `NOT_FOUND` error). Supported resources are: - Tag templates. - Entries.
        - Entry groups. Note, this method cannot be used to manage policies for
        BigQuery, Pub/Sub and any external Google Cloud Platform resources
        synced to Data Catalog. A caller is not required to have Google IAM
        permission to make this request.
      operationId: datacatalog.projects.locations.tagTemplates.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tagTemplatesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tag_templates_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields/{fieldsId}/enumValues/{enumValuesId}:rename:
    parameters: *ref_1
    post:
      description: >-
        Renames an enum value in a tag template. The enum values have to be
        unique within one enum field. Thus, an enum value cannot be renamed with
        a name used in any other enum value within the same enum field.
      operationId: datacatalog.projects.locations.tagTemplates.fields.enumValues.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplateField
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tagTemplatesId
          required: true
          schema:
            type: string
        - in: path
          name: fieldsId
          required: true
          schema:
            type: string
        - in: path
          name: enumValuesId
          required: true
          schema:
            type: string
      x-stackQL-resource: enum_values
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields:
    parameters: *ref_1
    post:
      description: >-
        Creates a field in a tag template. The user should enable the Data
        Catalog API in the project identified by the `parent` parameter (see
        [Data Catalog Resource
        Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
        for more information).
      operationId: datacatalog.projects.locations.tagTemplates.fields.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplateField
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplateField
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tagTemplatesId
          required: true
          schema:
            type: string
        - in: query
          name: tagTemplateFieldId
          schema:
            type: string
      x-stackQL-resource: fields
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields/{fieldsId}:rename:
    parameters: *ref_1
    post:
      description: >-
        Renames a field in a tag template. The user should enable the Data
        Catalog API in the project identified by the `name` parameter (see [Data
        Catalog Resource
        Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
        for more information).
      operationId: datacatalog.projects.locations.tagTemplates.fields.rename
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplateField
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tagTemplatesId
          required: true
          schema:
            type: string
        - in: path
          name: fieldsId
          required: true
          schema:
            type: string
      x-stackQL-resource: fields
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/tagTemplates/{tagTemplatesId}/fields/{fieldsId}:
    parameters: *ref_1
    patch:
      description: >-
        Updates a field in a tag template. This method cannot be used to update
        the field type. Users should enable the Data Catalog API in the project
        identified by the `name` parameter (see [Data Catalog Resource Project]
        (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
        for more information).
      operationId: datacatalog.projects.locations.tagTemplates.fields.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplateField
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplateField
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tagTemplatesId
          required: true
          schema:
            type: string
        - in: path
          name: fieldsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: fields
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes a field in a tag template and all uses of that field. Users
        should enable the Data Catalog API in the project identified by the
        `name` parameter (see [Data Catalog Resource Project]
        (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
        for more information).
      operationId: datacatalog.projects.locations.tagTemplates.fields.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: tagTemplatesId
          required: true
          schema:
            type: string
        - in: path
          name: fieldsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: fields
      x-stackQL-verb: delete
  /v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}:
    parameters: *ref_1
    delete:
      description: Deletes a policy tag. Also deletes all of its descendant policy tags.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: policyTagsId
          required: true
          schema:
            type: string
      x-stackQL-resource: policy_tags
      x-stackQL-verb: delete
    get:
      description: Gets a policy tag.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1PolicyTag'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: policyTagsId
          required: true
          schema:
            type: string
      x-stackQL-resource: policy_tags
      x-stackQL-verb: select
    patch:
      description: Updates a policy tag.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1PolicyTag'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1PolicyTag'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: policyTagsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: policy_tags
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: Gets the IAM policy for a taxonomy or a policy tag.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: policyTagsId
          required: true
          schema:
            type: string
      x-stackQL-resource: policy_tags_iam_policies
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the IAM policy for a taxonomy or a policy tag.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: policyTagsId
          required: true
          schema:
            type: string
      x-stackQL-resource: policy_tags_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags:
    parameters: *ref_1
    get:
      description: Lists all policy tags in a taxonomy.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: policy_tags
      x-stackQL-verb: select
    post:
      description: Creates a policy tag in the specified taxonomy.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1PolicyTag'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1PolicyTag'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: policy_tags
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}/policyTags/{policyTagsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns the permissions that a caller has on the specified taxonomy or
        policy tag.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
        - in: path
          name: policyTagsId
          required: true
          schema:
            type: string
      x-stackQL-resource: policy_tags_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies:export:
    parameters: *ref_1
    get:
      description: >-
        Exports all taxonomies and their policy tags in a project. This method
        generates SerializedTaxonomy protos with nested policy tags that can be
        used as an input for future ImportTaxonomies calls.
      operationId: datacatalog.projects.locations.taxonomies.export
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: serializedTaxonomies
          schema:
            type: boolean
        - in: query
          name: taxonomies
          schema:
            type: string
      x-stackQL-resource: taxonomies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}:
    parameters: *ref_1
    get:
      description: Gets a taxonomy.
      operationId: datacatalog.projects.locations.taxonomies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Taxonomy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: taxonomies
      x-stackQL-verb: select
    patch:
      description: Updates a taxonomy.
      operationId: datacatalog.projects.locations.taxonomies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Taxonomy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Taxonomy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: taxonomies
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes a taxonomy. This operation will also delete all policy tags in
        this taxonomy along with their associated policies.
      operationId: datacatalog.projects.locations.taxonomies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: taxonomies
      x-stackQL-verb: delete
  /v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies:
    parameters: *ref_1
    post:
      description: Creates a taxonomy in the specified project.
      operationId: datacatalog.projects.locations.taxonomies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Taxonomy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Taxonomy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: taxonomies
      x-stackQL-verb: insert
    get:
      description: >-
        Lists all taxonomies in a project in a particular location that the
        caller has permission to view.
      operationId: datacatalog.projects.locations.taxonomies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: taxonomies
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies:import:
    parameters: *ref_1
    post:
      description: >-
        Imports all taxonomies and their policy tags to a project as new
        taxonomies. This method provides a bulk taxonomy / policy tag creation
        using nested proto structure.
      operationId: datacatalog.projects.locations.taxonomies.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: taxonomies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the IAM policy for a taxonomy or a policy tag.
      operationId: datacatalog.projects.locations.taxonomies.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: taxonomies_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns the permissions that a caller has on the specified taxonomy or
        policy tag.
      operationId: datacatalog.projects.locations.taxonomies.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: taxonomies_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/taxonomies/{taxonomiesId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: Gets the IAM policy for a taxonomy or a policy tag.
      operationId: datacatalog.projects.locations.taxonomies.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: taxonomiesId
          required: true
          schema:
            type: string
      x-stackQL-resource: taxonomies_iam_policies
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy for a resource. Replaces any existing
        policy. Supported resources are: - Tag templates. - Entries. - Entry
        groups. Note, this method cannot be used to manage policies for
        BigQuery, Pub/Sub and any external Google Cloud Platform resources
        synced to Data Catalog. Callers must have following Google IAM
        permission - `datacatalog.tagTemplates.setIamPolicy` to set policies on
        tag templates. - `datacatalog.entries.setIamPolicy` to set policies on
        entries. - `datacatalog.entryGroups.setIamPolicy` to set policies on
        entry groups.
      operationId: datacatalog.projects.locations.entryGroups.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: entry_groups_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a resource. A `NOT_FOUND` error is
        returned if the resource does not exist. An empty policy is returned if
        the resource exists but does not have a policy set on it. Supported
        resources are: - Tag templates. - Entries. - Entry groups. Note, this
        method cannot be used to manage policies for BigQuery, Pub/Sub and any
        external Google Cloud Platform resources synced to Data Catalog. Callers
        must have following Google IAM permission -
        `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
        templates. - `datacatalog.entries.getIamPolicy` to get policies on
        entries. - `datacatalog.entryGroups.getIamPolicy` to get policies on
        entry groups.
      operationId: datacatalog.projects.locations.entryGroups.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: entry_groups_iam_policies
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes an EntryGroup. Only entry groups that do not contain entries can
        be deleted. Users should enable the Data Catalog API in the project
        identified by the `name` parameter (see [Data Catalog Resource Project]
        (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
        for more information).
      operationId: datacatalog.projects.locations.entryGroups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: entry_groups
      x-stackQL-verb: delete
    get:
      description: Gets an EntryGroup.
      operationId: datacatalog.projects.locations.entryGroups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1EntryGroup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: entry_groups
      x-stackQL-verb: select
    patch:
      description: >-
        Updates an EntryGroup. The user should enable the Data Catalog API in
        the project identified by the `entry_group.name` parameter (see [Data
        Catalog Resource Project]
        (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
        for more information).
      operationId: datacatalog.projects.locations.entryGroups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1EntryGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1EntryGroup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: entry_groups
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups:
    parameters: *ref_1
    get:
      description: Lists entry groups.
      operationId: datacatalog.projects.locations.entryGroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: entry_groups
      x-stackQL-verb: select
    post:
      description: >-
        A maximum of 10,000 entry groups may be created per organization across
        all locations. Users should enable the Data Catalog API in the project
        identified by the `parent` parameter (see [Data Catalog Resource
        Project]
        (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
        for more information).
      operationId: datacatalog.projects.locations.entryGroups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1EntryGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1EntryGroup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: entryGroupId
          schema:
            type: string
      x-stackQL-resource: entry_groups
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns the caller's permissions on a resource. If the resource does not
        exist, an empty set of permissions is returned (We don't return a
        `NOT_FOUND` error). Supported resources are: - Tag templates. - Entries.
        - Entry groups. Note, this method cannot be used to manage policies for
        BigQuery, Pub/Sub and any external Google Cloud Platform resources
        synced to Data Catalog. A caller is not required to have Google IAM
        permission to make this request.
      operationId: datacatalog.projects.locations.entryGroups.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: entry_groups_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/tags:
    parameters: *ref_1
    get:
      description: >-
        Lists tags assigned to an Entry. The columns in the response are
        lowercased.
      operationId: datacatalog.projects.locations.entryGroups.tags.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogV1beta1ListTagsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: select
    post:
      description: >-
        Creates a tag on an Entry. Note: The project identified by the `parent`
        parameter for the
        [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters)
        and the [tag
        template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters)
        used to create the tag must be from the same organization.
      operationId: datacatalog.projects.locations.entryGroups.tags.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Tag'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Tag'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/tags/{tagsId}:
    parameters: *ref_1
    patch:
      description: Updates an existing tag.
      operationId: datacatalog.projects.locations.entryGroups.tags.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Tag'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Tag'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: tagsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: exec
    delete:
      description: Deletes a tag.
      operationId: datacatalog.projects.locations.entryGroups.tags.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: tagsId
          required: true
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: delete
  /v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}/tags:
    parameters: *ref_1
    get:
      description: >-
        Lists tags assigned to an Entry. The columns in the response are
        lowercased.
      operationId: datacatalog.projects.locations.entryGroups.entries.tags.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogV1beta1ListTagsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: entriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: tags
      x-stackQL-verb: select
    post:
      description: >-
        Creates a tag on an Entry. Note: The project identified by the `parent`
        parameter for the
        [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters)
        and the [tag
        template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters)
        used to create the tag must be from the same organization.
      operationId: datacatalog.projects.locations.entryGroups.entries.tags.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Tag'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Tag'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: entriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}/tags/{tagsId}:
    parameters: *ref_1
    delete:
      description: Deletes a tag.
      operationId: datacatalog.projects.locations.entryGroups.entries.tags.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: entriesId
          required: true
          schema:
            type: string
        - in: path
          name: tagsId
          required: true
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: delete
    patch:
      description: Updates an existing tag.
      operationId: datacatalog.projects.locations.entryGroups.entries.tags.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Tag'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Tag'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: entriesId
          required: true
          schema:
            type: string
        - in: path
          name: tagsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: tags
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries:
    parameters: *ref_1
    post:
      description: >-
        Creates an entry. Only entries of 'FILESET' type or user-specified type
        can be created. Users should enable the Data Catalog API in the project
        identified by the `parent` parameter (see [Data Catalog Resource
        Project]
        (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
        for more information). A maximum of 100,000 entries may be created per
        entry group.
      operationId: datacatalog.projects.locations.entryGroups.entries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Entry'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Entry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: entryId
          schema:
            type: string
      x-stackQL-resource: entries
      x-stackQL-verb: insert
    get:
      description: Lists entries.
      operationId: datacatalog.projects.locations.entryGroups.entries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudDatacatalogV1beta1ListEntriesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: entries
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns the caller's permissions on a resource. If the resource does not
        exist, an empty set of permissions is returned (We don't return a
        `NOT_FOUND` error). Supported resources are: - Tag templates. - Entries.
        - Entry groups. Note, this method cannot be used to manage policies for
        BigQuery, Pub/Sub and any external Google Cloud Platform resources
        synced to Data Catalog. A caller is not required to have Google IAM
        permission to make this request.
      operationId: datacatalog.projects.locations.entryGroups.entries.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: entriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entries_iam_policies
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes an existing entry. Only entries created through CreateEntry
        method can be deleted. Users should enable the Data Catalog API in the
        project identified by the `name` parameter (see [Data Catalog Resource
        Project]
        (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
        for more information).
      operationId: datacatalog.projects.locations.entryGroups.entries.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: entriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entries
      x-stackQL-verb: delete
    get:
      description: Gets an entry.
      operationId: datacatalog.projects.locations.entryGroups.entries.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Entry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: entriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entries
      x-stackQL-verb: select
    patch:
      description: >-
        Updates an existing entry. Users should enable the Data Catalog API in
        the project identified by the `entry.name` parameter (see [Data Catalog
        Resource Project]
        (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
        for more information).
      operationId: datacatalog.projects.locations.entryGroups.entries.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Entry'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Entry'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: entriesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: entries
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/locations/{locationsId}/entryGroups/{entryGroupsId}/entries/{entriesId}:getIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Gets the access control policy for a resource. A `NOT_FOUND` error is
        returned if the resource does not exist. An empty policy is returned if
        the resource exists but does not have a policy set on it. Supported
        resources are: - Tag templates. - Entries. - Entry groups. Note, this
        method cannot be used to manage policies for BigQuery, Pub/Sub and any
        external Google Cloud Platform resources synced to Data Catalog. Callers
        must have following Google IAM permission -
        `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
        templates. - `datacatalog.entries.getIamPolicy` to get policies on
        entries. - `datacatalog.entryGroups.getIamPolicy` to get policies on
        entry groups.
      operationId: datacatalog.projects.locations.entryGroups.entries.getIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: entryGroupsId
          required: true
          schema:
            type: string
        - in: path
          name: entriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: entries_iam_policies
      x-stackQL-verb: select
  /v1beta1/entries:lookup:
    parameters: *ref_1
    get:
      description: >-
        Get an entry by target resource name. This method allows clients to use
        the resource name from the source Google Cloud Platform service to get
        the Data Catalog Entry.
      operationId: datacatalog.entries.lookup
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudDatacatalogV1beta1Entry'
      parameters:
        - in: query
          name: linkedResource
          schema:
            type: string
        - in: query
          name: sqlResource
          schema:
            type: string
      x-stackQL-resource: entries
      x-stackQL-verb: exec
