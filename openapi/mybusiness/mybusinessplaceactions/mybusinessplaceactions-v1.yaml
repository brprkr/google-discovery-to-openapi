openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: My Business Place Actions API
  description: >-
    The My Business Place Actions API provides an interface for managing place
    action links of a location on Google. Note - If you have a quota of 0 after
    enabling the API, please request for GBP API access.
  version: v1
  x-discovery-doc-revision: '20230621'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://developers.google.com/my-business/
servers:
  - url: https://mybusinessplaceactions.googleapis.com
components:
  schemas:
    PlaceActionTypeMetadata:
      type: object
      description: Metadata for supported place action types.
      id: PlaceActionTypeMetadata
      properties:
        placeActionType:
          enumDescriptions:
            - Not specified.
            - The action type is booking an appointment.
            - The action type is booking an online appointment.
            - The action type is making a dining reservation.
            - The action type is ordering food for delivery and/or takeout.
            - The action type is ordering food for delivery.
            - The action type is ordering food for takeout.
            - The action type is shopping, that can be delivery and/or pickup.
          enum:
            - PLACE_ACTION_TYPE_UNSPECIFIED
            - APPOINTMENT
            - ONLINE_APPOINTMENT
            - DINING_RESERVATION
            - FOOD_ORDERING
            - FOOD_DELIVERY
            - FOOD_TAKEOUT
            - SHOP_ONLINE
          type: string
          description: The place action type.
        displayName:
          type: string
          description: >-
            The localized display name for the attribute, if available;
            otherwise, the English display name.
    ListPlaceActionTypeMetadataResponse:
      description: Response message for PlaceActions.ListPlaceActionTypeMetadata.
      properties:
        placeActionTypeMetadata:
          type: array
          description: A collection of metadata for the available place action types.
          items:
            $ref: '#/components/schemas/PlaceActionTypeMetadata'
        nextPageToken:
          type: string
          description: >-
            If the number of action types exceeded the requested page size, this
            field will be populated with a token to fetch the next page on a
            subsequent call to `placeActionTypeMetadata.list`. If there are no
            more results, this field will not be present in the response.
      id: ListPlaceActionTypeMetadataResponse
      type: object
    PlaceActionLink:
      id: PlaceActionLink
      properties:
        isEditable:
          description: >-
            Output only. Indicates whether this link can be edited by the
            client.
          readOnly: true
          type: boolean
        updateTime:
          description: Output only. The time when the place action link was last modified.
          readOnly: true
          format: google-datetime
          type: string
        providerType:
          readOnly: true
          description: Output only. Specifies the provider type.
          enum:
            - PROVIDER_TYPE_UNSPECIFIED
            - MERCHANT
            - AGGREGATOR_3P
          enumDescriptions:
            - Not specified.
            - >-
              A 1P provider such as a merchant, or an agency on behalf of a
              merchant.
            - A 3P aggregator, such as a `Reserve with Google` partner.
          type: string
        name:
          type: string
          description: >-
            Optional. The resource name, in the format
            `locations/{location_id}/placeActionLinks/{place_action_link_id}`.
            The name field will only be considered in UpdatePlaceActionLink and
            DeletePlaceActionLink requests for updating and deleting links
            respectively. However, it will be ignored in CreatePlaceActionLink
            request, where `place_action_link_id` will be assigned by the server
            on successful creation of a new link and returned as part of the
            response.
        isPreferred:
          type: boolean
          description: >-
            Optional. Whether this link is preferred by the merchant. Only one
            link can be marked as preferred per place action type at a location.
            If a future request marks a different link as preferred for the same
            place action type, then the current preferred link (if any exists)
            will lose its preference.
        placeActionType:
          type: string
          enumDescriptions:
            - Not specified.
            - The action type is booking an appointment.
            - The action type is booking an online appointment.
            - The action type is making a dining reservation.
            - The action type is ordering food for delivery and/or takeout.
            - The action type is ordering food for delivery.
            - The action type is ordering food for takeout.
            - The action type is shopping, that can be delivery and/or pickup.
          enum:
            - PLACE_ACTION_TYPE_UNSPECIFIED
            - APPOINTMENT
            - ONLINE_APPOINTMENT
            - DINING_RESERVATION
            - FOOD_ORDERING
            - FOOD_DELIVERY
            - FOOD_TAKEOUT
            - SHOP_ONLINE
          description: >-
            Required. The type of place action that can be performed using this
            link.
        uri:
          type: string
          description: >-
            Required. The link uri. The same uri can be reused for different
            action types across different locations. However, only one place
            action link is allowed for each unique combination of (uri, place
            action type, location).
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time when the place action link was created.
      description: Represents a place action link and its attributes.
      type: object
    ListPlaceActionLinksResponse:
      type: object
      id: ListPlaceActionLinksResponse
      properties:
        placeActionLinks:
          items:
            $ref: '#/components/schemas/PlaceActionLink'
          description: The returned list of place action links.
          type: array
        nextPageToken:
          description: >-
            If there are more place action links than the requested page size,
            then this field is populated with a token to fetch the next page of
            results.
          type: string
      description: Response message for PlaceActions.ListPlaceActionLinks.
    Empty:
      type: object
      properties: {}
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/monitoring: >-
              View and write monitoring data for all of your Google and
              third-party Cloud and API projects
            https://www.googleapis.com/auth/monitoring.read: >-
              View monitoring data for all of your Google Cloud and third-party
              projects
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/monitoring.write: Publish metric data to your Google Cloud projects
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1/placeActionTypeMetadata:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
    get:
      description: >-
        Returns the list of available place action types for a location or
        country.
      operationId: mybusinessplaceactions.placeActionTypeMetadata.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPlaceActionTypeMetadataResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: place_action_type_metadata
      x-stackQL-verb: select
  /v1/locations/{locationsId}/placeActionLinks/{placeActionLinksId}:
    parameters: *ref_1
    patch:
      description: Updates the specified place action link and returns it.
      operationId: mybusinessplaceactions.locations.placeActionLinks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceActionLink'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceActionLink'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: placeActionLinksId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: place_action_links
      x-stackQL-verb: exec
    get:
      description: Gets the specified place action link.
      operationId: mybusinessplaceactions.locations.placeActionLinks.get
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceActionLink'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: placeActionLinksId
          required: true
          schema:
            type: string
      x-stackQL-resource: place_action_links
      x-stackQL-verb: select
    delete:
      description: Deletes a place action link from the specified location.
      operationId: mybusinessplaceactions.locations.placeActionLinks.delete
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: placeActionLinksId
          required: true
          schema:
            type: string
      x-stackQL-resource: place_action_links
      x-stackQL-verb: delete
  /v1/locations/{locationsId}/placeActionLinks:
    parameters: *ref_1
    post:
      description: >-
        Creates a place action link associated with the specified location, and
        returns it. The request is considered duplicate if the `parent`,
        `place_action_link.uri` and `place_action_link.place_action_type` are
        the same as a previous request.
      operationId: mybusinessplaceactions.locations.placeActionLinks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceActionLink'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceActionLink'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: place_action_links
      x-stackQL-verb: insert
    get:
      description: Lists the place action links for the specified location.
      operationId: mybusinessplaceactions.locations.placeActionLinks.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPlaceActionLinksResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: place_action_links
      x-stackQL-verb: select
