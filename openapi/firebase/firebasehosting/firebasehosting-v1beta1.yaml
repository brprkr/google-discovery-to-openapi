openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Firebase Hosting API
  description: >-
    The Firebase Hosting REST API enables programmatic and customizable
    management and deployments to your Firebase-hosted sites. Use this REST API
    to create and manage channels and sites as well as to deploy new or updated
    hosting configurations and content files.
  version: v1beta1
  x-discovery-doc-revision: '20230621'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://firebase.google.com/docs/hosting/
servers:
  - url: https://firebasehosting.googleapis.com
components:
  schemas:
    Status:
      properties:
        details:
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
      type: object
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: Status
    PopulateVersionFilesResponse:
      type: object
      properties:
        uploadRequiredHashes:
          type: array
          description: >-
            The content hashes of the specified files that need to be uploaded
            to the specified URL.
          items:
            type: string
        uploadUrl:
          description: >-
            The URL to which the files should be uploaded, in the format:
            "https://upload-firebasehosting.googleapis.com/upload/sites/SITE_ID
            /versions/VERSION_ID/files" Perform a multipart `POST` of the
            Gzipped file contents to the URL using a forward slash and the hash
            of the file appended to the end.
          type: string
      id: PopulateVersionFilesResponse
    ListReleasesResponse:
      type: object
      id: ListReleasesResponse
      properties:
        nextPageToken:
          description: >-
            The pagination token, if more results exist beyond the ones in this
            response. Include this token in your next call to `ListReleases`.
            Page tokens are short-lived and should not be stored.
          type: string
        releases:
          type: array
          description: >-
            The list of hashes of files that still need to be uploaded, if any
            exist.
          items:
            $ref: '#/components/schemas/Release'
    ListVersionsResponse:
      type: object
      properties:
        nextPageToken:
          description: >-
            The pagination token, if more results exist beyond the ones in this
            response. Include this token in your next call to `ListVersions`.
            Page tokens are short-lived and should not be stored.
          type: string
        versions:
          type: array
          description: The list of versions, if any exist.
          items:
            $ref: '#/components/schemas/Version'
      id: ListVersionsResponse
    ActingUser:
      properties:
        email:
          description: The email address of the user when the user performed the action.
          type: string
        imageUrl:
          type: string
          description: >-
            A profile image URL for the user. May not be present if the user has
            changed their email address or deleted their account.
      type: object
      id: ActingUser
      description: >-
        Contains metadata about the user who performed an action, such as
        creating a release or finalizing a version.
    Header:
      description: >-
        A
        [`Header`](https://firebase.google.com/docs/hosting/full-config#headers)
        specifies a URL pattern that, if matched to the request URL path,
        triggers Hosting to apply the specified custom response headers.
      properties:
        glob:
          type: string
          description: >-
            The user-supplied
            [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching)
            to match against the request URL path.
        regex:
          description: >-
            The user-supplied RE2 regular expression to match against the
            request URL path.
          type: string
        headers:
          type: object
          description: Required. The additional headers to add to the response.
          additionalProperties:
            type: string
      id: Header
      type: object
    Domain:
      type: object
      properties:
        domainRedirect:
          description: If set, the domain should redirect with the provided parameters.
          $ref: '#/components/schemas/DomainRedirect'
        site:
          type: string
          description: Required. The site name of the association.
        domainName:
          type: string
          description: Required. The domain name of the association.
        status:
          enum:
            - DOMAIN_STATUS_UNSPECIFIED
            - DOMAIN_CHANGE_PENDING
            - DOMAIN_ACTIVE
            - DOMAIN_VERIFICATION_REQUIRED
            - DOMAIN_VERIFICATION_LOST
          description: Output only. Additional status of the domain association.
          type: string
          enumDescriptions:
            - Unspecified domain association status.
            - >-
              An external operation is in progress on the domain association and
              no further operations can be performed until it is complete.
              Formerly used for metabase updates. Not currently used
            - >-
              The domain association is active and no additional action is
              required.
            - >-
              The domain was previously verified in the legacy system. User must
              reverify the domain through the ownership service.
            - >-
              The domain verification has been lost and the domain is in the
              grace period before being removed from the Firebase Hosting site.
        updateTime:
          format: google-datetime
          description: Output only. The time at which the domain was last updated.
          type: string
        provisioning:
          description: >-
            Output only. Information about the provisioning of certificates and
            the health of the DNS resolution for the domain.
          $ref: '#/components/schemas/DomainProvisioning'
      description: The intended behavior and status information of a domain.
      id: Domain
    ServingConfig:
      id: ServingConfig
      description: >-
        The configuration for how incoming requests to a site should be routed
        and processed before serving content. The URL request paths are matched
        against the specified URL patterns in the configuration, then Hosting
        applies the applicable configuration according to a specific [priority
        order](https://firebase.google.com/docs/hosting/full-config#hosting_priority_order).
      type: object
      properties:
        appAssociation:
          type: string
          description: How to handle well known App Association files.
          enumDescriptions:
            - >-
              The app association files will be automatically created from the
              apps that exist in the Firebase project.
            - >-
              No special handling of the app association files will occur, these
              paths will result in a 404 unless caught with a Rewrite.
          enum:
            - AUTO
            - NONE
        i18n:
          $ref: '#/components/schemas/I18nConfig'
          description: Optional. Defines i18n rewrite behavior.
        redirects:
          type: array
          description: >-
            An array of objects (called redirect rules), where each rule
            specifies a URL pattern that, if matched to the request URL path,
            triggers Hosting to respond with a redirect to the specified
            destination path.
          items:
            $ref: '#/components/schemas/Redirect'
        headers:
          items:
            $ref: '#/components/schemas/Header'
          description: >-
            An array of objects, where each object specifies a URL pattern that,
            if matched to the request URL path, triggers Hosting to apply the
            specified custom response headers.
          type: array
        trailingSlashBehavior:
          enum:
            - TRAILING_SLASH_BEHAVIOR_UNSPECIFIED
            - ADD
            - REMOVE
          description: Defines how to handle a trailing slash in the URL path.
          enumDescriptions:
            - >-
              No behavior is specified. Files are served at their exact location
              only, and trailing slashes are only added to directory indexes.
            - >-
              Trailing slashes are _added_ to directory indexes as well as to
              any URL path not ending in a file extension.
            - >-
              Trailing slashes are _removed_ from directory indexes as well as
              from any URL path not ending in a file extension.
          type: string
        cleanUrls:
          description: Defines whether to drop the file extension from uploaded files.
          type: boolean
        rewrites:
          type: array
          items:
            $ref: '#/components/schemas/Rewrite'
          description: >-
            An array of objects (called rewrite rules), where each rule
            specifies a URL pattern that, if matched to the request URL path,
            triggers Hosting to respond as if the service were given the
            specified destination URL.
    PopulateVersionFilesRequest:
      type: object
      properties:
        files:
          additionalProperties:
            type: string
          type: object
          description: >-
            A set of file paths to the hashes corresponding to assets that
            should be added to the version. A file path to an empty hash will
            remove the path from the version. Calculate a hash by Gzipping the
            file then taking the SHA256 hash of the newly compressed file.
      id: PopulateVersionFilesRequest
    VersionFile:
      properties:
        hash:
          description: The SHA256 content hash of the file.
          type: string
        status:
          enum:
            - STATUS_UNSPECIFIED
            - EXPECTED
            - ACTIVE
          type: string
          description: >-
            Output only. The current status of a particular file in the
            specified version. The value will be either `pending upload` or
            `uploaded`.
          enumDescriptions:
            - The default status; should not be intentionally used.
            - >-
              The file has been included in the version and is expected to be
              uploaded in the near future.
            - The file has already been uploaded to Firebase Hosting.
        path:
          type: string
          description: The URI at which the file's content should display.
      type: object
      id: VersionFile
      description: A static content file that is part of a version.
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        response:
          description: >-
            The normal response of the operation in case of success. If the
            original method returns no data on success, such as `Delete`, the
            response is `google.protobuf.Empty`. If the original method is
            standard `Get`/`Create`/`Update`, the response should be the
            resource. For other methods, the response should have the type
            `XxxResponse`, where `Xxx` is the original method name. For example,
            if the original method name is `TakeSnapshot()`, the inferred
            response type is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        error:
          $ref: '#/components/schemas/Status'
          description: >-
            The error result of the operation in case of failure or
            cancellation.
      id: Operation
    Release:
      properties:
        releaseUser:
          description: Output only. Identifies the user who created the release.
          $ref: '#/components/schemas/ActingUser'
        type:
          enumDescriptions:
            - >-
              An unspecified type. Indicates that a version was released. This
              is the default value when no other `type` is explicitly specified.
            - A version was uploaded to Firebase Hosting and released.
            - The release points back to a previously deployed version.
            - >-
              The release prevents the site from serving content. Firebase
              Hosting acts as if the site never existed.
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - DEPLOY
            - ROLLBACK
            - SITE_DISABLE
          description: >-
            Explains the reason for the release. Specify a value for this field
            only when creating a `SITE_DISABLE` type release.
        releaseTime:
          description: Output only. The time at which the version is set to be public.
          type: string
          format: google-datetime
        version:
          $ref: '#/components/schemas/Version'
          description: Output only. The configuration and content that was released.
        message:
          type: string
          description: >-
            The deploy description when the release was created. The value can
            be up to 512 characters.
        name:
          description: >-
            Output only. The unique identifier for the release, in either of the
            following formats: - sites/SITE_ID/releases/RELEASE_ID -
            sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID This name is
            provided in the response body when you call
            [`releases.create`](sites.releases/create) or
            [`channels.releases.create`](sites.channels.releases/create).
          type: string
      id: Release
      description: ' A `Release` is a particular [collection of configurations and files](sites.versions) that is set to be public at a particular time.'
      type: object
    Redirect:
      id: Redirect
      properties:
        regex:
          description: >-
            The user-supplied RE2 regular expression to match against the
            request URL path.
          type: string
        glob:
          type: string
          description: >-
            The user-supplied
            [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching)
            to match against the request URL path.
        statusCode:
          type: integer
          format: int32
          description: >-
            Required. The status HTTP code to return in the response. It must be
            a valid 3xx status code.
        location:
          description: >-
            Required. The value to put in the HTTP location header of the
            response. The location can contain capture group values from the
            pattern using a `:` prefix to identify the segment and an optional
            `*` to capture the rest of the URL. For example: "glob":
            "/:capture*", "statusCode": 301, "location":
            "https://example.com/foo/:capture"
          type: string
      type: object
      description: >-
        A
        [`Redirect`](https://firebase.google.com/docs/hosting/full-config#redirects)
        specifies a URL pattern that, if matched to the request URL path,
        triggers Hosting to respond with a redirect to the specified destination
        path.
    Channel:
      type: object
      id: Channel
      description: >-
        A `Channel` represents a stream of releases for a site. All sites have a
        default `live` channel that serves content to the Firebase-provided
        subdomains and any connected custom domains.
      properties:
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time at which the channel was last updated.
        url:
          type: string
          readOnly: true
          description: >-
            Output only. The URL at which the content of this channel's current
            release can be viewed. This URL is a Firebase-provided subdomain of
            `web.app`. The content of this channel's current release can also be
            viewed at the Firebase-provided subdomain of `firebaseapp.com`. If
            this channel is the `live` channel for the Hosting site, then the
            content of this channel's current release can also be viewed at any
            connected custom domains.
        name:
          type: string
          description: >-
            The fully-qualified resource name for the channel, in the format:
            sites/ SITE_ID/channels/CHANNEL_ID
        retainedReleaseCount:
          format: int32
          description: >-
            The number of previous releases to retain on the channel for
            rollback or other purposes. Must be a number between 1-100. Defaults
            to 10 for new channels.
          type: integer
        labels:
          type: object
          description: Text labels used for extra metadata and/or filtering.
          additionalProperties:
            type: string
        createTime:
          description: Output only. The time at which the channel was created.
          readOnly: true
          type: string
          format: google-datetime
        release:
          $ref: '#/components/schemas/Release'
          description: Output only. The current release for the channel, if any.
          readOnly: true
        ttl:
          format: google-duration
          type: string
          description: >-
            Input only. A time-to-live for this channel. Sets `expire_time` to
            the provided duration past the time of the request.
        expireTime:
          format: google-datetime
          type: string
          description: >-
            The time at which the channel will be automatically deleted. If
            null, the channel will not be automatically deleted. This field is
            present in the output whether it's set directly or via the `ttl`
            field.
    Site:
      description: A `Site` represents a Firebase Hosting site.
      properties:
        defaultUrl:
          readOnly: true
          description: Output only. The default URL for the Hosting site.
          type: string
        type:
          enumDescriptions:
            - Unknown state, likely the result of an error on the backend.
            - >-
              The default Hosting site that is provisioned when a Firebase
              project is created.
            - A Hosting site that the user created.
          readOnly: true
          type: string
          enum:
            - TYPE_UNSPECIFIED
            - DEFAULT_SITE
            - USER_SITE
          description: >-
            Output only. The type of Hosting site. Every Firebase project has a
            `DEFAULT_SITE`, which is created when Hosting is provisioned for the
            project. All additional sites are `USER_SITE`.
        appId:
          description: >-
            Optional. The [ID of a Web
            App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id)
            associated with the Hosting site.
          type: string
        name:
          description: >-
            Output only. The fully-qualified resource name of the Hosting site,
            in the format: projects/PROJECT_IDENTIFIER/sites/SITE_ID
            PROJECT_IDENTIFIER: the Firebase project's
            [`ProjectNumber`](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects#FirebaseProject.FIELDS.project_number)
            ***(recommended)*** or its
            [`ProjectId`](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects#FirebaseProject.FIELDS.project_id).
            Learn more about using project identifiers in Google's [AIP 2510
            standard](https://google.aip.dev/cloud/2510).
          readOnly: true
          type: string
        labels:
          description: Optional. User-specified labels for the Hosting site.
          additionalProperties:
            type: string
          type: object
      id: Site
      type: object
    CloudRunRewrite:
      type: object
      properties:
        serviceId:
          description: Required. User-defined ID of the Cloud Run service.
          type: string
        region:
          type: string
          description: >-
            Optional. User-provided region where the Cloud Run service is
            hosted. Defaults to `us-central1` if not supplied.
        tag:
          type: string
          description: >-
            Optional. User-provided TrafficConfig tag to send traffic to. When
            omitted, traffic is sent to the service-wide URI
      description: >-
        A configured rewrite that directs requests to a Cloud Run service. If
        the Cloud Run service does not exist when setting or updating your
        Firebase Hosting configuration, then the request fails. Any errors from
        the Cloud Run service are passed to the end user (for example, if you
        delete a service, any requests directed to that service receive a `404`
        error).
      id: CloudRunRewrite
    ListVersionFilesResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            The pagination token, if more results exist beyond the ones in this
            response. Include this token in your next call to
            `ListVersionFiles`. Page tokens are short-lived and should not be
            stored.
        files:
          type: array
          items:
            $ref: '#/components/schemas/VersionFile'
          description: ' The list of paths to the hashes of the files in the specified version.'
      type: object
      id: ListVersionFilesResponse
    CertDnsChallenge:
      type: object
      description: Represents a DNS certificate challenge.
      properties:
        token:
          type: string
          description: >-
            The value that must be present as a TXT record on the domain name to
            satisfy the challenge.
        domainName:
          description: The domain name upon which the DNS challenge must be satisfied.
          type: string
      id: CertDnsChallenge
    ListDomainsResponse:
      properties:
        nextPageToken:
          description: The pagination token, if more results exist.
          type: string
        domains:
          type: array
          items:
            $ref: '#/components/schemas/Domain'
          description: The list of domains, if any exist.
      description: The response to listing Domains.
      id: ListDomainsResponse
      type: object
    PathFilter:
      description: A representation of filter path.
      id: PathFilter
      properties:
        regexes:
          description: An array of RegEx values by which to filter.
          type: array
          items:
            type: string
      type: object
    DomainProvisioning:
      type: object
      id: DomainProvisioning
      description: The current certificate provisioning status information for a domain.
      properties:
        certChallengeDiscoveredTxt:
          items:
            type: string
          description: >-
            The TXT records (for the certificate challenge) that were found at
            the last DNS fetch.
          type: array
        dnsStatus:
          enumDescriptions:
            - Unspecified DNS status.
            - No DNS records have been specified for this domain yet.
            - None of the required DNS records have been detected on the domain.
            - >-
              Some of the required DNS records were detected, but not all of
              them. No extra (non-required) DNS records were detected.
            - >-
              All required DNS records were detected. No extra (non-required)
              DNS records were detected.
            - >-
              The domain has at least one of the required DNS records, and it
              has at least one extra (non-required) DNS record.
          type: string
          description: The DNS record match status as of the last DNS fetch.
          enum:
            - DNS_STATUS_UNSPECIFIED
            - DNS_PENDING
            - DNS_MISSING
            - DNS_PARTIAL_MATCH
            - DNS_MATCH
            - DNS_EXTRANEOUS_MATCH
        certStatus:
          description: >-
            The certificate provisioning status; updated when Firebase Hosting
            provisions an SSL certificate for the domain.
          enum:
            - CERT_STATUS_UNSPECIFIED
            - CERT_PENDING
            - CERT_MISSING
            - CERT_PROCESSING
            - CERT_PROPAGATING
            - CERT_ACTIVE
            - CERT_ERROR
          type: string
          enumDescriptions:
            - Unspecified certificate provisioning status.
            - Waiting for certificate challenge to be created.
            - Waiting for certificate challenge to be met.
            - >-
              Certificate challenge met; attempting to acquire/propagate
              certificate.
            - Certificate obtained; propagating to the CDN.
            - Certificate provisioned and deployed across the CDN.
            - Certificate provisioning failed in a non-recoverable manner.
        dnsFetchTime:
          type: string
          description: The time at which the last DNS fetch occurred.
          format: google-datetime
        certChallengeHttp:
          $ref: '#/components/schemas/CertHttpChallenge'
          description: The HTTP challenge for generating a certificate.
        expectedIps:
          description: The list of IPs to which the domain is expected to resolve.
          items:
            type: string
          type: array
        certChallengeDns:
          $ref: '#/components/schemas/CertDnsChallenge'
          description: The DNS challenge for generating a certificate.
        discoveredIps:
          items:
            type: string
          type: array
          description: The IPs found at the last DNS fetch.
    CertHttpChallenge:
      description: Represents an HTTP certificate challenge.
      properties:
        token:
          description: >-
            The token to serve at the specified URL path to satisfy the
            certificate challenge.
          type: string
        path:
          type: string
          description: >-
            The URL path on which to serve the specified token to satisfy the
            certificate challenge.
      type: object
      id: CertHttpChallenge
    I18nConfig:
      properties:
        root:
          type: string
          description: >-
            Required. The user-supplied path where country and language specific
            content will be looked for within the public directory.
      type: object
      description: If provided, i18n rewrites are enabled.
      id: I18nConfig
    ListSitesResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            The pagination token, if more results exist beyond the ones in this
            response. Include this token in your next call to `ListSites`. Page
            tokens are short-lived and should not be stored.
        sites:
          type: array
          items:
            $ref: '#/components/schemas/Site'
          description: >-
            A list of Site objects associated with the specified Firebase
            project.
      type: object
      id: ListSitesResponse
    DomainRedirect:
      type: object
      properties:
        domainName:
          type: string
          description: Required. The domain name to redirect to.
        type:
          description: Required. The redirect status code.
          enum:
            - REDIRECT_TYPE_UNSPECIFIED
            - MOVED_PERMANENTLY
          type: string
          enumDescriptions:
            - The default redirect type; should not be intentionlly used.
            - >-
              The redirect will respond with an HTTP status code of `301 Moved
              Permanently`.
      description: >-
        Defines the behavior of a domain-level redirect. Domain redirects
        preserve the path of the redirect but replace the requested domain with
        the one specified in the redirect configuration.
      id: DomainRedirect
    Version:
      type: object
      description: >-
        A `Version` is a configuration and a collection of static files which
        determine how a site is displayed.
      properties:
        finalizeTime:
          type: string
          description: Output only. The time at which the version was `FINALIZED`.
          format: google-datetime
        versionBytes:
          description: >-
            Output only. The total stored bytesize of the version. This value is
            calculated after a version is `FINALIZED`.
          type: string
          format: int64
        createUser:
          description: Output only. Identifies the user who created the version.
          $ref: '#/components/schemas/ActingUser'
        finalizeUser:
          description: Output only. Identifies the user who `FINALIZED` the version.
          $ref: '#/components/schemas/ActingUser'
        name:
          type: string
          description: >-
            The fully-qualified resource name for the version, in the format:
            sites/ SITE_ID/versions/VERSION_ID This name is provided in the
            response body when you call
            [`CreateVersion`](sites.versions/create).
        status:
          description: >-
            The deploy status of the version. For a successful deploy, call
            [`CreateVersion`](sites.versions/create) to make a new version
            (`CREATED` status), [upload all desired
            files](sites.versions/populateFiles) to the version, then
            [update](sites.versions/patch) the version to the `FINALIZED`
            status. Note that if you leave the version in the `CREATED` state
            for more than 12 hours, the system will automatically mark the
            version as `ABANDONED`. You can also change the status of a version
            to `DELETED` by calling [`DeleteVersion`](sites.versions/delete).
          enum:
            - VERSION_STATUS_UNSPECIFIED
            - CREATED
            - FINALIZED
            - DELETED
            - ABANDONED
            - EXPIRED
            - CLONING
          type: string
          enumDescriptions:
            - The default status; should not be intentionally used.
            - >-
              The version has been created, and content is currently being added
              to the version.
            - >-
              All content has been added to the version, and the version can no
              longer be changed.
            - The version has been deleted.
            - >-
              The version was not updated to `FINALIZED` within 12 hours and was
              automatically deleted.
            - >-
              The version is outside the site-configured limit for the number of
              retained versions, so the version's content is scheduled for
              deletion.
            - >-
              The version is being cloned from another version. All content is
              still being copied over.
        deleteTime:
          type: string
          format: google-datetime
          description: Output only. The time at which the version was `DELETED`.
        deleteUser:
          description: Output only. Identifies the user who `DELETED` the version.
          $ref: '#/components/schemas/ActingUser'
        labels:
          type: object
          description: The labels used for extra metadata and/or filtering.
          additionalProperties:
            type: string
        fileCount:
          format: int64
          type: string
          description: >-
            Output only. The total number of files associated with the version.
            This value is calculated after a version is `FINALIZED`.
        config:
          description: >-
            The configuration for the behavior of the site. This configuration
            exists in the
            [`firebase.json`](https://firebase.google.com/docs/cli/#the_firebasejson_file)
            file.
          $ref: '#/components/schemas/ServingConfig'
        createTime:
          format: google-datetime
          description: Output only. The time at which the version was created.
          type: string
      id: Version
    CloneVersionRequest:
      id: CloneVersionRequest
      type: object
      properties:
        include:
          description: >-
            If provided, only paths that match one or more RegEx values in this
            list will be included in the new version.
          $ref: '#/components/schemas/PathFilter'
        sourceVersion:
          description: >-
            Required. The unique identifier for the version to be cloned, in the
            format: sites/SITE_ID/versions/VERSION_ID
          type: string
        finalize:
          type: boolean
          description: >-
            If true, the call to `CloneVersion` immediately finalizes the
            version after cloning is complete. If false, the cloned version will
            have a status of `CREATED`. Use [`UpdateVersion`](patch) to set the
            status of the version to `FINALIZED`.
        exclude:
          description: >-
            If provided, only paths that do not match any of the RegEx values in
            this list will be included in the new version.
          $ref: '#/components/schemas/PathFilter'
    ListChannelsResponse:
      id: ListChannelsResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            The pagination token, if more results exist beyond the ones in this
            response. Include this token in your next call to `ListChannels`.
            Page tokens are short-lived and should not be stored.
        channels:
          items:
            $ref: '#/components/schemas/Channel'
          type: array
          description: The list of channels.
      type: object
    Empty:
      type: object
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
      id: Empty
    Rewrite:
      properties:
        functionRegion:
          description: >-
            Optional. Specify a Cloud region for rewritten Functions
            invocations. If not provided, defaults to us-central1.
          type: string
        path:
          description: The URL path to rewrite the request to.
          type: string
        function:
          description: >-
            The function to proxy requests to. Must match the exported function
            name exactly.
          type: string
        regex:
          type: string
          description: >-
            The user-supplied RE2 regular expression to match against the
            request URL path.
        dynamicLinks:
          description: The request will be forwarded to Firebase Dynamic Links.
          type: boolean
        glob:
          type: string
          description: >-
            The user-supplied
            [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching)
            to match against the request URL path.
        run:
          $ref: '#/components/schemas/CloudRunRewrite'
          description: The request will be forwarded to Cloud Run.
      description: >-
        A
        [`Rewrite`](https://firebase.google.com/docs/hosting/full-config#rewrites)
        specifies a URL pattern that, if matched to the request URL path,
        triggers Hosting to respond as if the service were given the specified
        destination URL.
      id: Rewrite
      type: object
    SiteConfig:
      id: SiteConfig
      type: object
      properties:
        maxVersions:
          format: int64
          type: string
          description: >-
            The number of FINALIZED versions that will be held for a site before
            automatic deletion. When a new version is deployed, content for
            versions in storage in excess of this number will be deleted, and
            will no longer be billed for storage usage. Oldest versions will be
            deleted first; sites are created with an unlimited number of
            max_versions by default.
        cloudLoggingEnabled:
          description: >-
            Whether or not web requests made by site visitors are logged via
            Cloud Logging.
          type: boolean
      description: >-
        A `SiteConfig` contains metadata associated with a specific site that
        controls Firebase Hosting serving behavior
  parameters:
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase data and settings
            https://www.googleapis.com/auth/cloud-platform.read-only: >-
              View your data across Google Cloud services and see the email
              address of your Google Account
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta1/sites/{sitesId}/config:
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: Gets the Hosting metadata for a specific site.
      operationId: firebasehosting.sites.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfig'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sites__config
      x-stackQL-verb: select
    patch:
      description: Sets the Hosting metadata for a specific site.
      operationId: firebasehosting.sites.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfig'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: sites
      x-stackQL-verb: exec
  /v1beta1/sites/{sitesId}/releases:
    parameters: *ref_1
    get:
      description: >-
        Lists the releases that have been created for the specified site or
        channel. When used to list releases for a site, this list includes
        releases for both the default `live` channel and any active preview
        channels for the specified site.
      operationId: firebasehosting.sites.releases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleasesResponse'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: releases
      x-stackQL-verb: select
    post:
      description: >-
        Creates a new release, which makes the content of the specified version
        actively display on the appropriate URL(s).
      operationId: firebasehosting.sites.releases.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: versionName
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: insert
  /v1beta1/sites/{sitesId}/releases/{releasesId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the specified release for a site or channel. When used to get a
        release for a site, this can get releases for both the default `live`
        channel and any active preview channels for the specified site.
      operationId: firebasehosting.sites.releases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: select
  /v1beta1/sites/{sitesId}/domains:
    parameters: *ref_1
    post:
      description: Creates a domain mapping on the specified site.
      operationId: firebasehosting.sites.domains.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: insert
    get:
      description: Lists the domains for the specified site.
      operationId: firebasehosting.sites.domains.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResponse'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: domains
      x-stackQL-verb: select
  /v1beta1/sites/{sitesId}/domains/{domainsId}:
    parameters: *ref_1
    put:
      description: >-
        Updates the specified domain mapping, creating the mapping as if it does
        not exist.
      operationId: firebasehosting.sites.domains.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: exec
    get:
      description: Gets a domain mapping on the specified site.
      operationId: firebasehosting.sites.domains.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: select
    delete:
      description: Deletes the existing domain mapping on the specified site.
      operationId: firebasehosting.sites.domains.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: delete
  /v1beta1/sites/{sitesId}/channels/{channelsId}/releases:
    parameters: *ref_1
    post:
      description: >-
        Creates a new release, which makes the content of the specified version
        actively display on the appropriate URL(s).
      operationId: firebasehosting.sites.channels.releases.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: channelsId
          required: true
          schema:
            type: string
        - in: query
          name: versionName
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: insert
    get:
      description: >-
        Lists the releases that have been created for the specified site or
        channel. When used to list releases for a site, this list includes
        releases for both the default `live` channel and any active preview
        channels for the specified site.
      operationId: firebasehosting.sites.channels.releases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleasesResponse'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: channelsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: releases
      x-stackQL-verb: select
  /v1beta1/sites/{sitesId}/channels/{channelsId}/releases/{releasesId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the specified release for a site or channel. When used to get a
        release for a site, this can get releases for both the default `live`
        channel and any active preview channels for the specified site.
      operationId: firebasehosting.sites.channels.releases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: channelsId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: select
  /v1beta1/sites/{sitesId}/channels:
    parameters: *ref_1
    post:
      description: Creates a new channel in the specified site.
      operationId: firebasehosting.sites.channels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
      x-stackQL-resource: channels
      x-stackQL-verb: insert
    get:
      description: >-
        Lists the channels for the specified site. All sites have a default
        `live` channel.
      operationId: firebasehosting.sites.channels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: channels
      x-stackQL-verb: select
  /v1beta1/sites/{sitesId}/channels/{channelsId}:
    parameters: *ref_1
    get:
      description: Retrieves information for the specified channel of the specified site.
      operationId: firebasehosting.sites.channels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: channelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: channels
      x-stackQL-verb: select
    delete:
      description: >-
        Deletes the specified channel of the specified site. The `live` channel
        cannot be deleted.
      operationId: firebasehosting.sites.channels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: channelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: channels
      x-stackQL-verb: delete
    patch:
      description: >-
        Updates information for the specified channel of the specified site.
        Implicitly creates the channel if it doesn't already exist.
      operationId: firebasehosting.sites.channels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: channelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: channels
      x-stackQL-verb: exec
  /v1beta1/sites/{sitesId}/versions/{versionsId}/files:
    parameters: *ref_1
    get:
      description: Lists the remaining files to be uploaded for the specified version.
      operationId: firebasehosting.sites.versions.files.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVersionFilesResponse'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: status
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: select
  /v1beta1/sites/{sitesId}/versions/{versionsId}:
    parameters: *ref_1
    patch:
      description: ' Updates the specified metadata for the specified version. This method will fail with `FAILED_PRECONDITION` in the event of an invalid state transition. The supported [state](../sites.versions#versionstatus) transitions for a version are from `CREATED` to `FINALIZED`. Use [`DeleteVersion`](delete) to set the status of a version to `DELETED`.'
      operationId: firebasehosting.sites.versions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Version'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: exec
    get:
      description: >-
        Get the specified version that has been created for the specified site.
        This can include versions that were created for the default `live`
        channel or for any active preview channels for the specified site.
      operationId: firebasehosting.sites.versions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: select
    delete:
      description: Deletes the specified version.
      operationId: firebasehosting.sites.versions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: delete
  /v1beta1/sites/{sitesId}/versions:
    parameters: *ref_1
    get:
      description: >-
        Lists the versions that have been created for the specified site. This
        list includes versions for both the default `live` channel and any
        active preview channels for the specified site.
      operationId: firebasehosting.sites.versions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVersionsResponse'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: versions
      x-stackQL-verb: select
    post:
      description: Creates a new version for the specified site.
      operationId: firebasehosting.sites.versions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Version'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: sizeBytes
          schema:
            type: string
        - in: query
          name: versionId
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: insert
  /v1beta1/sites/{sitesId}/versions/{versionsId}:populateFiles:
    parameters: *ref_1
    post:
      description: ' Adds content files to the specified version. Each file must be under 2 GB.'
      operationId: firebasehosting.sites.versions.populateFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PopulateVersionFilesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulateVersionFilesResponse'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: exec
  /v1beta1/sites/{sitesId}/versions:clone:
    parameters: *ref_1
    post:
      description: >-
        Creates a new version on the specified target site using the content of
        the specified version.
      operationId: firebasehosting.sites.versions.clone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneVersionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: firebasehosting.projects.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/sites/{sitesId}/domains/{domainsId}:
    parameters: *ref_1
    delete:
      description: Deletes the existing domain mapping on the specified site.
      operationId: firebasehosting.projects.sites.domains.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: delete
    get:
      description: Gets a domain mapping on the specified site.
      operationId: firebasehosting.projects.sites.domains.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: select
    put:
      description: >-
        Updates the specified domain mapping, creating the mapping as if it does
        not exist.
      operationId: firebasehosting.projects.sites.domains.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/sites/{sitesId}/domains:
    parameters: *ref_1
    post:
      description: Creates a domain mapping on the specified site.
      operationId: firebasehosting.projects.sites.domains.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: insert
    get:
      description: Lists the domains for the specified site.
      operationId: firebasehosting.projects.sites.domains.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: domains
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/sites/{sitesId}/channels/{channelsId}:
    parameters: *ref_1
    patch:
      description: >-
        Updates information for the specified channel of the specified site.
        Implicitly creates the channel if it doesn't already exist.
      operationId: firebasehosting.projects.sites.channels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: channelsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: channels
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes the specified channel of the specified site. The `live` channel
        cannot be deleted.
      operationId: firebasehosting.projects.sites.channels.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: channelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: channels
      x-stackQL-verb: delete
    get:
      description: Retrieves information for the specified channel of the specified site.
      operationId: firebasehosting.projects.sites.channels.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: channelsId
          required: true
          schema:
            type: string
      x-stackQL-resource: channels
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/sites/{sitesId}/channels:
    parameters: *ref_1
    post:
      description: Creates a new channel in the specified site.
      operationId: firebasehosting.projects.sites.channels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: channelId
          schema:
            type: string
      x-stackQL-resource: channels
      x-stackQL-verb: insert
    get:
      description: >-
        Lists the channels for the specified site. All sites have a default
        `live` channel.
      operationId: firebasehosting.projects.sites.channels.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: channels
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/sites/{sitesId}/channels/{channelsId}/releases:
    parameters: *ref_1
    post:
      description: >-
        Creates a new release, which makes the content of the specified version
        actively display on the appropriate URL(s).
      operationId: firebasehosting.projects.sites.channels.releases.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: channelsId
          required: true
          schema:
            type: string
        - in: query
          name: versionName
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: insert
    get:
      description: >-
        Lists the releases that have been created for the specified site or
        channel. When used to list releases for a site, this list includes
        releases for both the default `live` channel and any active preview
        channels for the specified site.
      operationId: firebasehosting.projects.sites.channels.releases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleasesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: channelsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: releases
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/sites/{sitesId}/channels/{channelsId}/releases/{releasesId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the specified release for a site or channel. When used to get a
        release for a site, this can get releases for both the default `live`
        channel and any active preview channels for the specified site.
      operationId: firebasehosting.projects.sites.channels.releases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: channelsId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/sites/{sitesId}/releases/{releasesId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the specified release for a site or channel. When used to get a
        release for a site, this can get releases for both the default `live`
        channel and any active preview channels for the specified site.
      operationId: firebasehosting.projects.sites.releases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: releasesId
          required: true
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/sites/{sitesId}/releases:
    parameters: *ref_1
    post:
      description: >-
        Creates a new release, which makes the content of the specified version
        actively display on the appropriate URL(s).
      operationId: firebasehosting.projects.sites.releases.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Release'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Release'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: versionName
          schema:
            type: string
      x-stackQL-resource: releases
      x-stackQL-verb: insert
    get:
      description: >-
        Lists the releases that have been created for the specified site or
        channel. When used to list releases for a site, this list includes
        releases for both the default `live` channel and any active preview
        channels for the specified site.
      operationId: firebasehosting.projects.sites.releases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReleasesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: releases
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/sites/{sitesId}/versions/{versionsId}/files:
    parameters: *ref_1
    get:
      description: Lists the remaining files to be uploaded for the specified version.
      operationId: firebasehosting.projects.sites.versions.files.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVersionFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: files
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/sites/{sitesId}/versions/{versionsId}:
    parameters: *ref_1
    patch:
      description: ' Updates the specified metadata for the specified version. This method will fail with `FAILED_PRECONDITION` in the event of an invalid state transition. The supported [state](../sites.versions#versionstatus) transitions for a version are from `CREATED` to `FINALIZED`. Use [`DeleteVersion`](delete) to set the status of a version to `DELETED`.'
      operationId: firebasehosting.projects.sites.versions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Version'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: exec
    delete:
      description: Deletes the specified version.
      operationId: firebasehosting.projects.sites.versions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: delete
    get:
      description: >-
        Get the specified version that has been created for the specified site.
        This can include versions that were created for the default `live`
        channel or for any active preview channels for the specified site.
      operationId: firebasehosting.projects.sites.versions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/sites/{sitesId}/versions:
    parameters: *ref_1
    get:
      description: >-
        Lists the versions that have been created for the specified site. This
        list includes versions for both the default `live` channel and any
        active preview channels for the specified site.
      operationId: firebasehosting.projects.sites.versions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVersionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: select
    post:
      description: Creates a new version for the specified site.
      operationId: firebasehosting.projects.sites.versions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Version'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: sizeBytes
          schema:
            type: string
        - in: query
          name: versionId
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/sites/{sitesId}/versions:clone:
    parameters: *ref_1
    post:
      description: >-
        Creates a new version on the specified target site using the content of
        the specified version.
      operationId: firebasehosting.projects.sites.versions.clone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneVersionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/sites/{sitesId}/versions/{versionsId}:populateFiles:
    parameters: *ref_1
    post:
      description: ' Adds content files to the specified version. Each file must be under 2 GB.'
      operationId: firebasehosting.projects.sites.versions.populateFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PopulateVersionFilesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulateVersionFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: path
          name: versionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: versions
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/sites/{sitesId}:
    parameters: *ref_1
    patch:
      description: Updates attributes of the specified Hosting Site.
      operationId: firebasehosting.projects.sites.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: sites
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes the specified Hosting Site from the specified parent Firebase
        project.
      operationId: firebasehosting.projects.sites.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sites
      x-stackQL-verb: delete
    get:
      description: Gets the specified Hosting Site.
      operationId: firebasehosting.projects.sites.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sites
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/sites/{sitesId}/config:
    parameters: *ref_1
    get:
      description: Gets the Hosting metadata for a specific site.
      operationId: firebasehosting.projects.sites.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sites__config
      x-stackQL-verb: select
    patch:
      description: Sets the Hosting metadata for a specific site.
      operationId: firebasehosting.projects.sites.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: sitesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: sites
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/sites:
    parameters: *ref_1
    post:
      description: >-
        Creates a new Hosting Site in the specified parent Firebase project.
        Note that Hosting sites can take several minutes to propagate through
        Firebase systems.
      operationId: firebasehosting.projects.sites.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: siteId
          schema:
            type: string
      x-stackQL-resource: sites
      x-stackQL-verb: insert
    get:
      description: >-
        Lists each Hosting Site associated with the specified parent Firebase
        project.
      operationId: firebasehosting.projects.sites.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSitesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: sites
      x-stackQL-verb: select
