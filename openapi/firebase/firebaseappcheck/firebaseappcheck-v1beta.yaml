openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Firebase App Check API
  description: >-
    Firebase App Check works alongside other Firebase services to help protect
    your backend resources from abuse, such as billing fraud or phishing.
  version: v1beta
  x-discovery-doc-revision: '20230619'
  x-generated-date: '2023-06-25'
externalDocs:
  url: https://firebase.google.com/docs/app-check
servers:
  - url: https://firebaseappcheck.googleapis.com
components:
  schemas:
    GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest:
      description: Request message for the ExchangeRecaptchaEnterpriseToken method.
      id: GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest
      properties:
        limitedUse:
          description: >-
            Forces a short-lived token with a 5 minute TTL. Useful when the
            client wishes to impose stricter TTL requirements for this exchange.
            Default: false.
          type: boolean
        recaptchaEnterpriseToken:
          type: string
          description: >-
            Required. The reCAPTCHA token as returned by the [reCAPTCHA
            Enterprise JavaScript
            API](https://cloud.google.com/recaptcha-enterprise/docs/instrument-web-pages).
      type: object
    GoogleFirebaseAppcheckV1betaBatchGetAppAttestConfigsResponse:
      description: Response message for the BatchGetAppAttestConfigs method.
      id: GoogleFirebaseAppcheckV1betaBatchGetAppAttestConfigsResponse
      type: object
      properties:
        configs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaAppAttestConfig'
          description: AppAttestConfigs retrieved.
    GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest:
      id: GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest
      type: object
      description: Request message for the ExchangeSafetyNetToken method.
      properties:
        safetyNetToken:
          type: string
          description: >-
            Required. The [SafetyNet attestation
            response](https://developer.android.com/training/safetynet/attestation#request-attestation-step)
            issued to your app.
    GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest:
      id: GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest
      properties:
        artifact:
          format: byte
          type: string
          description: >-
            Required. The artifact returned by a previous call to
            ExchangeAppAttestAttestation.
        challenge:
          description: >-
            Required. A one-time challenge returned by an immediately prior call
            to GenerateAppAttestChallenge.
          type: string
          format: byte
        assertion:
          format: byte
          description: >-
            Required. The CBOR-encoded assertion returned by the client-side App
            Attest API.
          type: string
        limitedUse:
          type: boolean
          description: >-
            Forces a short-lived token with a 5 minute TTL. Useful when the
            client wishes to impose stricter TTL requirements for this exchange.
            Default: false.
      type: object
      description: Request message for the ExchangeAppAttestAssertion method.
    GoogleFirebaseAppcheckV1betaDebugToken:
      properties:
        displayName:
          type: string
          description: >-
            Required. A human readable display name used to identify this debug
            token.
        name:
          type: string
          description: >-
            Required. The relative resource name of the debug token, in the
            format: ```
            projects/{project_number}/apps/{app_id}/debugTokens/{debug_token_id}
            ```
        token:
          description: >-
            Required. Input only. Immutable. The secret token itself. Must be
            provided during creation, and must be a UUID4, case insensitive.
            This field is immutable once set, and cannot be provided during an
            UpdateDebugToken request. You can, however, delete this debug token
            using DeleteDebugToken to revoke it. For security reasons, this
            field will never be populated in any response.
          type: string
      description: >-
        A *debug token* is a secret used during the development or integration
        testing of an app. It essentially allows the development or integration
        testing to bypass app attestation while still allowing App Check to
        enforce protection on supported production Firebase services.
      id: GoogleFirebaseAppcheckV1betaDebugToken
      type: object
    GoogleFirebaseAppcheckV1betaBatchGetPlayIntegrityConfigsResponse:
      id: GoogleFirebaseAppcheckV1betaBatchGetPlayIntegrityConfigsResponse
      description: Response message for the BatchGetPlayIntegrityConfigs method.
      properties:
        configs:
          description: PlayIntegrityConfigs retrieved.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleFirebaseAppcheckV1betaPlayIntegrityConfig
      type: object
    GoogleFirebaseAppcheckV1betaAppCheckToken:
      id: GoogleFirebaseAppcheckV1betaAppCheckToken
      description: >-
        Encapsulates an *App Check token*, which are used to access Firebase
        services protected by App Check.
      properties:
        token:
          type: string
          description: >-
            An App Check token. App Check tokens are signed
            [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that
            identify the attested app and Firebase project. This token is used
            to access Firebase services protected by App Check.
        ttl:
          type: string
          format: google-duration
          description: >-
            The duration from the time this token is minted until its
            expiration. This field is intended to ease client-side token
            management, since the client may have clock skew, but is still able
            to accurately measure a duration.
        attestationToken:
          description: >-
            An App Check token. App Check tokens are signed
            [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that
            identify the attested app and Firebase project. This token is used
            to access Firebase services protected by App Check.
          type: string
      type: object
    GoogleFirebaseAppcheckV1betaAppAttestConfig:
      id: GoogleFirebaseAppcheckV1betaAppAttestConfig
      properties:
        tokenTtl:
          description: >-
            Specifies the duration for which App Check tokens exchanged from App
            Attest artifacts will be valid. If unset, a default value of 1 hour
            is assumed. Must be between 30 minutes and 7 days, inclusive.
          type: string
          format: google-duration
        name:
          description: >-
            Required. The relative resource name of the App Attest configuration
            object, in the format: ```
            projects/{project_number}/apps/{app_id}/appAttestConfig ```
          type: string
      type: object
      description: >-
        An app's App Attest configuration object. This configuration controls
        certain properties of the `AppCheckToken` returned by
        ExchangeAppAttestAttestation and ExchangeAppAttestAssertion, such as its
        ttl. Note that the Team ID registered with your app is used as part of
        the validation process. Please register it via the Firebase Console or
        programmatically via the [Firebase Management
        Service](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.iosApps/patch).
    GoogleFirebaseAppcheckV1betaExchangeDeviceCheckTokenRequest:
      type: object
      properties:
        limitedUse:
          type: boolean
          description: >-
            Forces a short-lived token with a 5 minute TTL. Useful when the
            client wishes to impose stricter TTL requirements for this exchange.
            Default: false.
        deviceToken:
          description: >-
            Required. The `device_token` as returned by Apple's client-side
            [DeviceCheck
            API](https://developer.apple.com/documentation/devicecheck/dcdevice).
            This is the base64 encoded `Data` (Swift) or `NSData` (ObjC) object.
          type: string
      description: Request message for the ExchangeDeviceCheckToken method.
      id: GoogleFirebaseAppcheckV1betaExchangeDeviceCheckTokenRequest
    GoogleFirebaseAppcheckV1betaBatchUpdateServicesResponse:
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaService'
          description: Service objects after the updates have been applied.
      type: object
      description: Response message for the BatchUpdateServices method.
      id: GoogleFirebaseAppcheckV1betaBatchUpdateServicesResponse
    GoogleFirebaseAppcheckV1betaService:
      description: >-
        The enforcement configuration for a Firebase service supported by App
        Check.
      type: object
      id: GoogleFirebaseAppcheckV1betaService
      properties:
        name:
          description: >-
            Required. The relative resource name of the service configuration
            object, in the format: ```
            projects/{project_number}/services/{service_id} ``` Note that the
            `service_id` element must be a supported service ID. Currently, the
            following service IDs are supported: *
            `firebasestorage.googleapis.com` (Cloud Storage for Firebase) *
            `firebasedatabase.googleapis.com` (Firebase Realtime Database) *
            `firestore.googleapis.com` (Cloud Firestore) *
            `identitytoolkit.googleapis.com` (Firebase Authentication with
            Identity Platform)
          type: string
        enforcementMode:
          description: Required. The App Check enforcement mode for this service.
          enumDescriptions:
            - >-
              Firebase App Check is not enforced for the service, nor are App
              Check metrics collected. Though the service is not protected by
              App Check in this mode, other applicable protections, such as user
              authorization, are still enforced. An unconfigured service is in
              this mode by default. Note that resource policies behave slightly
              differently as an unconfigured resource policy means that the
              resource will inherit the EnforcementMode configured for the
              service it belongs to and will not be considered as being in OFF
              mode by default.
            - >-
              Firebase App Check is not enforced for the service. App Check
              metrics are collected to help you decide when to turn on
              enforcement for the service. Though the service is not protected
              by App Check in this mode, other applicable protections, such as
              user authorization, are still enforced. Some services require
              certain conditions to be met before they will work with App Check,
              such as requiring you to upgrade to a specific service tier. Until
              those requirements are met for a service, this `UNENFORCED`
              setting will have no effect and App Check will not work with that
              service.
            - >-
              Firebase App Check is enforced for the service. The service will
              reject any request that attempts to access your project's
              resources if it does not have valid App Check token attached, with
              some exceptions depending on the service; for example, some
              services will still allow requests bearing the developer's
              privileged service account credentials without an App Check token.
              App Check metrics continue to be collected to help you detect
              issues with your App Check integration and monitor the composition
              of your callers. While the service is protected by App Check,
              other applicable protections, such as user authorization, continue
              to be enforced at the same time. Use caution when choosing to
              enforce App Check on a Firebase service. If your users have not
              updated to an App Check capable version of your app, their apps
              will no longer be able to use your Firebase services that are
              enforcing App Check. App Check metrics can help you decide whether
              to enforce App Check on your Firebase services. If your app has
              not launched yet, you should enable enforcement immediately, since
              there are no outdated clients in use. Some services require
              certain conditions to be met before they will work with App Check,
              such as requiring you to upgrade to a specific service tier. Until
              those requirements are met for a service, this `ENFORCED` setting
              will have no effect and App Check will not work with that service.
          enum:
            - 'OFF'
            - UNENFORCED
            - ENFORCED
          type: string
    GoogleFirebaseAppcheckV1betaVerifyAppCheckTokenResponse:
      properties:
        alreadyConsumed:
          description: >-
            Whether this token was already consumed. If this is the first time
            this method has seen the given App Check token, this field will be
            omitted from the response. The given token will then be marked as
            `already_consumed` (set to `true`) for all future invocations of
            this method for that token. Note that if the given App Check token
            is invalid, an HTTP 403 error is returned instead of a response
            containing this field, regardless whether the token was already
            consumed.
          type: boolean
      description: Response message for the VerifyAppCheckToken method.
      type: object
      id: GoogleFirebaseAppcheckV1betaVerifyAppCheckTokenResponse
    GoogleFirebaseAppcheckV1betaRecaptchaV3Config:
      description: >-
        An app's reCAPTCHA v3 configuration object. This configuration is used
        by ExchangeRecaptchaV3Token to validate reCAPTCHA tokens issued to apps
        by reCAPTCHA v3. It also controls certain properties of the returned
        `AppCheckToken`, such as its ttl.
      properties:
        siteSecret:
          description: >-
            Required. Input only. The site secret used to identify your service
            for reCAPTCHA v3 verification. For security reasons, this field will
            never be populated in any response.
          type: string
        name:
          type: string
          description: >-
            Required. The relative resource name of the reCAPTCHA v3
            configuration object, in the format: ```
            projects/{project_number}/apps/{app_id}/recaptchaV3Config ```
        siteSecretSet:
          readOnly: true
          type: boolean
          description: >-
            Output only. Whether the `site_secret` field was previously set.
            Since we will never return the `site_secret` field, this field is
            the only way to find out whether it was previously set.
        tokenTtl:
          format: google-duration
          description: >-
            Specifies the duration for which App Check tokens exchanged from
            reCAPTCHA tokens will be valid. If unset, a default value of 1 day
            is assumed. Must be between 30 minutes and 7 days, inclusive.
          type: string
      type: object
      id: GoogleFirebaseAppcheckV1betaRecaptchaV3Config
    GoogleFirebaseAppcheckV1betaGeneratePlayIntegrityChallengeRequest:
      properties: {}
      type: object
      id: GoogleFirebaseAppcheckV1betaGeneratePlayIntegrityChallengeRequest
      description: Request message for the GeneratePlayIntegrityChallenge method.
    GoogleFirebaseAppcheckV1betaListServicesResponse:
      type: object
      properties:
        nextPageToken:
          description: >-
            If the result list is too large to fit in a single response, then a
            token is returned. If the string is empty or omitted, then this
            response is the last page of results. This token can be used in a
            subsequent call to ListServices to find the next group of Services.
            Page tokens are short-lived and should not be persisted.
          type: string
        services:
          type: array
          description: The Services retrieved.
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaService'
      description: Response message for the ListServices method.
      id: GoogleFirebaseAppcheckV1betaListServicesResponse
    GoogleFirebaseAppcheckV1betaExchangeRecaptchaTokenRequest:
      properties:
        recaptchaToken:
          description: >-
            Required. The reCAPTCHA token as returned by the [reCAPTCHA v3
            JavaScript API](https://developers.google.com/recaptcha/docs/v3).
          type: string
      type: object
      description: Request message for the ExchangeRecaptchaToken method.
      id: GoogleFirebaseAppcheckV1betaExchangeRecaptchaTokenRequest
    GoogleFirebaseAppcheckV1betaExchangeDebugTokenRequest:
      description: Request message for the ExchangeDebugToken method.
      type: object
      id: GoogleFirebaseAppcheckV1betaExchangeDebugTokenRequest
      properties:
        debugToken:
          description: >-
            Required. A debug token secret. This string must match a debug token
            secret previously created using CreateDebugToken.
          type: string
        limitedUse:
          type: boolean
          description: >-
            Forces a short-lived token with a 5 minute TTL. Useful when the
            client wishes to impose stricter TTL requirements for this exchange.
            Default: false.
    GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationResponse:
      type: object
      id: GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationResponse
      properties:
        attestationToken:
          description: Encapsulates an App Check token.
          $ref: >-
            #/components/schemas/GoogleFirebaseAppcheckV1betaAttestationTokenResponse
        artifact:
          format: byte
          type: string
          description: >-
            An artifact that can be used in future calls to
            ExchangeAppAttestAssertion.
        appCheckToken:
          description: Encapsulates an App Check token.
          $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaAppCheckToken'
      description: Response message for the ExchangeAppAttestAttestation method.
    GoogleFirebaseAppcheckV1betaSafetyNetConfig:
      properties:
        tokenTtl:
          format: google-duration
          description: >-
            Specifies the duration for which App Check tokens exchanged from
            SafetyNet tokens will be valid. If unset, a default value of 1 hour
            is assumed. Must be between 30 minutes and 7 days, inclusive.
          type: string
        name:
          description: >-
            Required. The relative resource name of the SafetyNet configuration
            object, in the format: ```
            projects/{project_number}/apps/{app_id}/safetyNetConfig ```
          type: string
      id: GoogleFirebaseAppcheckV1betaSafetyNetConfig
      type: object
      description: >-
        An app's SafetyNet configuration object. This configuration controls
        certain properties of the `AppCheckToken` returned by
        ExchangeSafetyNetToken, such as its ttl. Note that your registered
        SHA-256 certificate fingerprints are used to validate tokens issued by
        SafetyNet; please register them via the Firebase Console or
        programmatically via the [Firebase Management
        Service](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.androidApps.sha/create).
    GoogleFirebaseAppcheckV1betaDeviceCheckConfig:
      properties:
        name:
          description: >-
            Required. The relative resource name of the DeviceCheck
            configuration object, in the format: ```
            projects/{project_number}/apps/{app_id}/deviceCheckConfig ```
          type: string
        privateKeySet:
          type: boolean
          description: >-
            Output only. Whether the `private_key` field was previously set.
            Since we will never return the `private_key` field, this field is
            the only way to find out whether it was previously set.
          readOnly: true
        tokenTtl:
          description: >-
            Specifies the duration for which App Check tokens exchanged from
            DeviceCheck tokens will be valid. If unset, a default value of 1
            hour is assumed. Must be between 30 minutes and 7 days, inclusive.
          type: string
          format: google-duration
        privateKey:
          type: string
          description: >-
            Required. Input only. The contents of the private key (`.p8`) file
            associated with the key specified by `key_id`. For security reasons,
            this field will never be populated in any response.
        keyId:
          type: string
          description: >-
            Required. The key identifier of a private key enabled with
            DeviceCheck, created in your Apple Developer account.
      description: >-
        An app's DeviceCheck configuration object. This configuration is used by
        ExchangeDeviceCheckToken to validate device tokens issued to apps by
        DeviceCheck. It also controls certain properties of the returned
        `AppCheckToken`, such as its ttl. Note that the Team ID registered with
        your app is used as part of the validation process. Please register it
        via the Firebase Console or programmatically via the [Firebase
        Management
        Service](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.iosApps/patch).
      id: GoogleFirebaseAppcheckV1betaDeviceCheckConfig
      type: object
    GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeRequest:
      description: Request message for the GenerateAppAttestChallenge method.
      type: object
      id: GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeRequest
      properties: {}
    GoogleFirebaseAppcheckV1betaPlayIntegrityConfig:
      id: GoogleFirebaseAppcheckV1betaPlayIntegrityConfig
      type: object
      properties:
        name:
          description: >-
            Required. The relative resource name of the Play Integrity
            configuration object, in the format: ```
            projects/{project_number}/apps/{app_id}/playIntegrityConfig ```
          type: string
        tokenTtl:
          description: >-
            Specifies the duration for which App Check tokens exchanged from
            Play Integrity tokens will be valid. If unset, a default value of 1
            hour is assumed. Must be between 30 minutes and 7 days, inclusive.
          format: google-duration
          type: string
      description: >-
        An app's Play Integrity configuration object. This configuration
        controls certain properties of the `AppCheckToken` returned by
        ExchangePlayIntegrityToken, such as its ttl. Note that your registered
        SHA-256 certificate fingerprints are used to validate tokens issued by
        the Play Integrity API; please register them via the Firebase Console or
        programmatically via the [Firebase Management
        Service](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.androidApps.sha/create).
    GoogleFirebaseAppcheckV1betaVerifyAppCheckTokenRequest:
      description: Request message for the VerifyAppCheckToken method.
      type: object
      id: GoogleFirebaseAppcheckV1betaVerifyAppCheckTokenRequest
      properties:
        appCheckToken:
          type: string
          description: >-
            Required. The App Check token to verify. App Check tokens exchanged
            from the SafetyNet provider are not supported; an HTTP 400 error
            will be returned.
    GoogleFirebaseAppcheckV1betaBatchGetDeviceCheckConfigsResponse:
      id: GoogleFirebaseAppcheckV1betaBatchGetDeviceCheckConfigsResponse
      description: Response message for the BatchGetDeviceCheckConfigs method.
      properties:
        configs:
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaDeviceCheckConfig'
          description: DeviceCheckConfigs retrieved.
          type: array
      type: object
    GoogleProtobufEmpty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      id: GoogleProtobufEmpty
      type: object
      properties: {}
    GoogleFirebaseAppcheckV1betaExchangeRecaptchaV3TokenRequest:
      id: GoogleFirebaseAppcheckV1betaExchangeRecaptchaV3TokenRequest
      properties:
        limitedUse:
          type: boolean
          description: >-
            Forces a short-lived token with a 5 minute TTL. Useful when the
            client wishes to impose stricter TTL requirements for this exchange.
            Default: false.
        recaptchaV3Token:
          type: string
          description: >-
            Required. The reCAPTCHA token as returned by the [reCAPTCHA v3
            JavaScript API](https://developers.google.com/recaptcha/docs/v3).
      type: object
      description: Request message for the ExchangeRecaptchaV3Token method.
    GoogleFirebaseAppcheckV1betaBatchGetRecaptchaV3ConfigsResponse:
      description: Response message for the BatchGetRecaptchaV3Configs method.
      properties:
        configs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaRecaptchaV3Config'
          description: RecaptchaV3Configs retrieved.
      id: GoogleFirebaseAppcheckV1betaBatchGetRecaptchaV3ConfigsResponse
      type: object
    GoogleFirebaseAppcheckV1betaPublicJwk:
      id: GoogleFirebaseAppcheckV1betaPublicJwk
      description: >-
        A JWK as specified by [section 4 of RFC
        7517](https://tools.ietf.org/html/rfc7517#section-4) and [section 6.3.1
        of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1).
      properties:
        use:
          type: string
          description: >-
            See [section 4.2 of RFC
            7517](https://tools.ietf.org/html/rfc7517#section-4.2).
        kid:
          description: >-
            See [section 4.5 of RFC
            7517](https://tools.ietf.org/html/rfc7517#section-4.5).
          type: string
        'n':
          description: >-
            See [section 6.3.1.1 of RFC
            7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.1).
          type: string
        alg:
          description: >-
            See [section 4.4 of RFC
            7517](https://tools.ietf.org/html/rfc7517#section-4.4).
          type: string
        kty:
          description: >-
            See [section 4.1 of RFC
            7517](https://tools.ietf.org/html/rfc7517#section-4.1).
          type: string
        e:
          description: >-
            See [section 6.3.1.2 of RFC
            7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.2).
          type: string
      type: object
    GoogleFirebaseAppcheckV1betaExchangePlayIntegrityTokenRequest:
      id: GoogleFirebaseAppcheckV1betaExchangePlayIntegrityTokenRequest
      description: Request message for the ExchangePlayIntegrityToken method.
      type: object
      properties:
        playIntegrityToken:
          description: >-
            Required. The [integrity verdict response token from Play
            Integrity](https://developer.android.com/google/play/integrity/verdict#decrypt-verify)
            issued to your app.
          type: string
        limitedUse:
          type: boolean
          description: >-
            Forces a short-lived token with a 5 minute TTL. Useful when the
            client wishes to impose stricter TTL requirements for this exchange.
            Default: false.
    GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationRequest:
      type: object
      properties:
        attestationStatement:
          type: string
          format: byte
          description: >-
            Required. The App Attest statement returned by the client-side App
            Attest API. This is a base64url encoded CBOR object in the JSON
            response.
        keyId:
          type: string
          description: Required. The key ID generated by App Attest for the client app.
          format: byte
        limitedUse:
          description: >-
            Forces a short-lived token with a 5 minute TTL. Useful when the
            client wishes to impose stricter TTL requirements for this exchange.
            Default: false.
          type: boolean
        challenge:
          type: string
          description: >-
            Required. A one-time challenge returned by an immediately prior call
            to GenerateAppAttestChallenge.
          format: byte
      id: GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationRequest
      description: Request message for the ExchangeAppAttestAttestation method.
    GoogleFirebaseAppcheckV1betaUpdateServiceRequest:
      description: >-
        Request message for the UpdateService method as well as an individual
        update message for the BatchUpdateServices method.
      id: GoogleFirebaseAppcheckV1betaUpdateServiceRequest
      type: object
      properties:
        service:
          $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaService'
          description: >-
            Required. The Service to update. The Service's `name` field is used
            to identify the Service to be updated, in the format: ```
            projects/{project_number}/services/{service_id} ``` Note that the
            `service_id` element must be a supported service ID. Currently, the
            following service IDs are supported: *
            `firebasestorage.googleapis.com` (Cloud Storage for Firebase) *
            `firebasedatabase.googleapis.com` (Firebase Realtime Database) *
            `firestore.googleapis.com` (Cloud Firestore) *
            `identitytoolkit.googleapis.com` (Firebase Authentication with
            Identity Platform) For Firebase Authentication to work with App
            Check, you must first upgrade to [Firebase Authentication with
            Identity
            Platform](https://firebase.google.com/docs/auth#identity-platform).
        updateMask:
          type: string
          format: google-fieldmask
          description: >-
            Required. A comma-separated list of names of fields in the Service
            to update. Example: `enforcement_mode`.
    GoogleFirebaseAppcheckV1betaBatchGetSafetyNetConfigsResponse:
      description: Response message for the BatchGetSafetyNetConfigs method.
      properties:
        configs:
          description: SafetyNetConfigs retrieved.
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaSafetyNetConfig'
          type: array
      id: GoogleFirebaseAppcheckV1betaBatchGetSafetyNetConfigsResponse
      type: object
    GoogleFirebaseAppcheckV1betaPublicJwkSet:
      id: GoogleFirebaseAppcheckV1betaPublicJwkSet
      description: >-
        The currently active set of public keys that can be used to verify App
        Check tokens. This object is a JWK set as specified by [section 5 of RFC
        7517](https://tools.ietf.org/html/rfc7517#section-5). For security, the
        response **must not** be cached for longer than six hours.
      properties:
        keys:
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaPublicJwk'
          description: >-
            The set of public keys. See [section 5.1 of RFC
            7517](https://tools.ietf.org/html/rfc7517#section-5).
          type: array
      type: object
    GoogleFirebaseAppcheckV1betaBatchGetRecaptchaEnterpriseConfigsResponse:
      properties:
        configs:
          type: array
          description: RecaptchaEnterpriseConfigs retrieved.
          items:
            $ref: >-
              #/components/schemas/GoogleFirebaseAppcheckV1betaRecaptchaEnterpriseConfig
      type: object
      description: Response message for the BatchGetRecaptchaEnterpriseConfigs method.
      id: GoogleFirebaseAppcheckV1betaBatchGetRecaptchaEnterpriseConfigsResponse
    GoogleFirebaseAppcheckV1betaRecaptchaConfig:
      properties:
        siteSecretSet:
          description: >-
            Output only. Whether the `site_secret` field was previously set.
            Since we will never return the `site_secret` field, this field is
            the only way to find out whether it was previously set.
          type: boolean
          readOnly: true
        name:
          description: >-
            Required. The relative resource name of the reCAPTCHA v3
            configuration object, in the format: ```
            projects/{project_number}/apps/{app_id}/recaptchaConfig ```
          type: string
        siteSecret:
          description: >-
            Required. Input only. The site secret used to identify your service
            for reCAPTCHA v3 verification. For security reasons, this field will
            never be populated in any response.
          type: string
        tokenTtl:
          format: google-duration
          description: >-
            Specifies the duration for which App Check tokens exchanged from
            reCAPTCHA tokens will be valid. If unset, a default value of 1 day
            is assumed. Must be between 30 minutes and 7 days, inclusive.
          type: string
      id: GoogleFirebaseAppcheckV1betaRecaptchaConfig
      type: object
      description: >-
        An app's reCAPTCHA v3 configuration object. This configuration is used
        by ExchangeRecaptchaToken to validate reCAPTCHA tokens issued to apps by
        reCAPTCHA v3. It also controls certain properties of the returned
        `AppCheckToken`, such as its ttl.
    GoogleFirebaseAppcheckV1betaRecaptchaEnterpriseConfig:
      id: GoogleFirebaseAppcheckV1betaRecaptchaEnterpriseConfig
      description: >-
        An app's reCAPTCHA Enterprise configuration object. This configuration
        is used by ExchangeRecaptchaEnterpriseToken to validate reCAPTCHA tokens
        issued to apps by reCAPTCHA Enterprise. It also controls certain
        properties of the returned `AppCheckToken`, such as its ttl.
      properties:
        tokenTtl:
          description: >-
            Specifies the duration for which App Check tokens exchanged from
            reCAPTCHA Enterprise tokens will be valid. If unset, a default value
            of 1 hour is assumed. Must be between 30 minutes and 7 days,
            inclusive.
          type: string
          format: google-duration
        name:
          description: >-
            Required. The relative resource name of the reCAPTCHA Enterprise
            configuration object, in the format: ```
            projects/{project_number}/apps/{app_id}/recaptchaEnterpriseConfig
            ```
          type: string
        siteKey:
          description: >-
            The score-based site key [created in reCAPTCHA
            Enterprise](https://cloud.google.com/recaptcha-enterprise/docs/create-key#creating_a_site_key)
            used to [invoke reCAPTCHA and generate the reCAPTCHA
            tokens](https://cloud.google.com/recaptcha-enterprise/docs/instrument-web-pages)
            for your application. Important: This is *not* the `site_secret` (as
            it is in reCAPTCHA v3), but rather your score-based reCAPTCHA
            Enterprise site key.
          type: string
      type: object
    GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeResponse:
      description: Response message for the GenerateAppAttestChallenge method.
      properties:
        ttl:
          type: string
          format: google-duration
          description: >-
            The duration from the time this challenge is minted until its
            expiration. This field is intended to ease client-side token
            management, since the client may have clock skew, but is still able
            to accurately measure a duration.
        challenge:
          description: >-
            A one-time use challenge for the client to pass to the App Attest
            API.
          type: string
          format: byte
      type: object
      id: GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeResponse
    GoogleFirebaseAppcheckV1betaBatchGetRecaptchaConfigsResponse:
      description: Response message for the BatchGetRecaptchaConfigs method.
      properties:
        configs:
          description: RecaptchaConfigs retrieved.
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaRecaptchaConfig'
          type: array
      type: object
      id: GoogleFirebaseAppcheckV1betaBatchGetRecaptchaConfigsResponse
    GoogleFirebaseAppcheckV1betaGeneratePlayIntegrityChallengeResponse:
      id: GoogleFirebaseAppcheckV1betaGeneratePlayIntegrityChallengeResponse
      description: Response message for the GeneratePlayIntegrityChallenge method.
      properties:
        ttl:
          type: string
          format: google-duration
          description: >-
            The duration from the time this challenge is minted until its
            expiration. This field is intended to ease client-side token
            management, since the client may have clock skew, but is still able
            to accurately measure a duration.
        challenge:
          description: >-
            A one-time use
            [challenge](https://developer.android.com/google/play/integrity/verdict#protect-against-replay-attacks)
            for the client to pass to the Play Integrity API.
          type: string
      type: object
    GoogleFirebaseAppcheckV1betaListDebugTokensResponse:
      type: object
      description: Response message for the ListDebugTokens method.
      properties:
        nextPageToken:
          description: >-
            If the result list is too large to fit in a single response, then a
            token is returned. If the string is empty or omitted, then this
            response is the last page of results. This token can be used in a
            subsequent call to ListDebugTokens to find the next group of
            DebugTokens. Page tokens are short-lived and should not be
            persisted.
          type: string
        debugTokens:
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaDebugToken'
          type: array
          description: The DebugTokens retrieved.
      id: GoogleFirebaseAppcheckV1betaListDebugTokensResponse
    GoogleFirebaseAppcheckV1betaExchangeCustomTokenRequest:
      id: GoogleFirebaseAppcheckV1betaExchangeCustomTokenRequest
      type: object
      description: Request message for the ExchangeCustomToken method.
      properties:
        customToken:
          type: string
          description: >-
            Required. A custom token signed using your project's Admin SDK
            service account credentials.
        limitedUse:
          type: boolean
          description: >-
            Forces a short-lived token with a 5 minute TTL. Useful when the
            client wishes to impose stricter TTL requirements for this exchange.
            Default: false.
    GoogleFirebaseAppcheckV1betaBatchUpdateServicesRequest:
      type: object
      description: Request message for the BatchUpdateServices method.
      properties:
        updateMask:
          format: google-fieldmask
          description: >-
            Optional. A comma-separated list of names of fields in the Services
            to update. Example: `display_name`. If this field is present, the
            `update_mask` field in the UpdateServiceRequest messages must all
            match this field, or the entire batch fails and no updates will be
            committed.
          type: string
        requests:
          type: array
          description: >-
            Required. The request messages specifying the Services to update. A
            maximum of 100 objects can be updated in a batch.
          items:
            $ref: >-
              #/components/schemas/GoogleFirebaseAppcheckV1betaUpdateServiceRequest
      id: GoogleFirebaseAppcheckV1betaBatchUpdateServicesRequest
    GoogleFirebaseAppcheckV1betaAttestationTokenResponse:
      properties:
        attestationToken:
          description: >-
            An App Check token. App Check tokens are signed
            [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that
            identify the attested app and Firebase project. This token is used
            to access Firebase services protected by App Check.
          type: string
        ttl:
          description: >-
            The duration from the time this token is minted until its
            expiration. This field is intended to ease client-side token
            management, since the client may have clock skew, but is still able
            to accurately measure a duration.
          type: string
          format: google-duration
      description: >-
        Encapsulates an *App Check token*, which are used to access Firebase
        services protected by App Check.
      id: GoogleFirebaseAppcheckV1betaAttestationTokenResponse
      type: object
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
paths:
  /v1beta/jwks:
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
    get:
      description: >-
        Returns a public JWK set as specified by [RFC
        7517](https://tools.ietf.org/html/rfc7517) that can be used to verify
        App Check tokens. Exactly one of the public keys in the returned set
        will successfully validate any App Check token that is currently valid.
      operationId: firebaseappcheck.jwks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaPublicJwkSet'
      parameters: []
      x-stackQL-resource: jwks
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}:verifyAppCheckToken:
    parameters: *ref_1
    post:
      description: >-
        Verifies the given App Check token and returns token usage signals that
        callers may act upon. This method currently only supports App Check
        tokens exchanged from the following attestation providers: * Play
        Integrity API * App Attest * DeviceCheck (`DCDevice` tokens) * reCAPTCHA
        Enterprise * reCAPTCHA v3 * Custom providers App Check tokens exchanged
        from debug secrets are also supported. Calling this method on an
        otherwise valid App Check token with an unsupported provider will cause
        an HTTP 400 error to be returned. Returns whether this token was already
        consumed before this call. If this is the first time this method has
        seen the given App Check token, the field `already_consumed` in the
        response will be absent. The given token will then be marked as
        `already_consumed` (set to `true`) for all future invocations of this
        method for that token. Note that if the given App Check token is
        invalid, an HTTP 403 error is returned instead of a response object,
        regardless whether the token was already consumed. Currently, when
        evaluating whether an App Check token was already consumed, only calls
        to this exact method are counted. Use of the App Check token elsewhere
        will not mark the token as being already consumed. The caller must have
        the
        [`firebaseappcheck.appCheckTokens.verify`](https://firebase.google.com/docs/projects/iam/permissions#app-check)
        permission to call this method. This permission is part of the [Firebase
        App Check Token Verifier
        role](https://firebase.google.com/docs/projects/iam/roles-predefined-product#app-check).
      operationId: firebaseappcheck.projects.verifyAppCheckToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaVerifyAppCheckTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaVerifyAppCheckTokenResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/services/{servicesId}:
    parameters: *ref_1
    patch:
      description: Updates the specified Service configuration.
      operationId: firebaseappcheck.projects.services.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaService'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaService'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: exec
    get:
      description: Gets the Service configuration for the specified service name.
      operationId: firebaseappcheck.projects.services.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaService'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/services:
    parameters: *ref_1
    get:
      description: >-
        Lists all Service configurations for the specified project. Only
        Services which were explicitly configured using UpdateService or
        BatchUpdateServices will be returned.
      operationId: firebaseappcheck.projects.services.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaListServicesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: services
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/services:batchUpdate:
    parameters: *ref_1
    post:
      description: Atomically updates the specified Service configurations.
      operationId: firebaseappcheck.projects.services.batchUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaBatchUpdateServicesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaBatchUpdateServicesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}:exchangeRecaptchaV3Token:
    parameters: *ref_1
    post:
      description: >-
        Validates a [reCAPTCHA v3 response
        token](https://developers.google.com/recaptcha/docs/v3). If valid,
        returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeRecaptchaV3Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaExchangeRecaptchaV3TokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaAppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}:exchangeRecaptchaToken:
    parameters: *ref_1
    post:
      description: >-
        Validates a [reCAPTCHA v3 response
        token](https://developers.google.com/recaptcha/docs/v3). If valid,
        returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeRecaptchaToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaExchangeRecaptchaTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaAppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}:exchangeAppAttestAttestation:
    parameters: *ref_1
    post:
      description: >-
        Accepts an App Attest CBOR attestation and verifies it with Apple using
        your preconfigured team and bundle IDs. If valid, returns an attestation
        artifact that can later be exchanged for an AppCheckToken using
        ExchangeAppAttestAssertion. For convenience and performance, this
        method's response object will also contain an AppCheckToken (if the
        verification is successful).
      operationId: firebaseappcheck.projects.apps.exchangeAppAttestAttestation
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}:exchangeCustomToken:
    parameters: *ref_1
    post:
      description: >-
        Validates a custom token signed using your project's Admin SDK service
        account credentials. If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaExchangeCustomTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaAppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}:exchangeRecaptchaEnterpriseToken:
    parameters: *ref_1
    post:
      description: >-
        Validates a [reCAPTCHA Enterprise response
        token](https://cloud.google.com/recaptcha-enterprise/docs/create-assessment#retrieve_token).
        If valid, returns an App Check token AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeRecaptchaEnterpriseToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaAppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}:exchangeSafetyNetToken:
    parameters: *ref_1
    post:
      description: >-
        Validates a [SafetyNet
        token](https://developer.android.com/training/safetynet/attestation#request-attestation-step).
        If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeSafetyNetToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaAppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}:exchangeDebugToken:
    parameters: *ref_1
    post:
      description: >-
        Validates a debug token secret that you have previously created using
        CreateDebugToken. If valid, returns an AppCheckToken. Note that a
        restrictive quota is enforced on this method to prevent accidental
        exposure of the app to abuse.
      operationId: firebaseappcheck.projects.apps.exchangeDebugToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaExchangeDebugTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaAppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}:exchangePlayIntegrityToken:
    parameters: *ref_1
    post:
      description: >-
        Validates an [integrity verdict response token from Play
        Integrity](https://developer.android.com/google/play/integrity/verdict#decrypt-verify).
        If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangePlayIntegrityToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaExchangePlayIntegrityTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaAppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}:generatePlayIntegrityChallenge:
    parameters: *ref_1
    post:
      description: >-
        Generates a challenge that protects the integrity of an immediately
        following integrity verdict request to the Play Integrity API. The next
        call to ExchangePlayIntegrityToken using the resulting integrity token
        will verify the presence and validity of the challenge. A challenge
        should not be reused for multiple calls.
      operationId: firebaseappcheck.projects.apps.generatePlayIntegrityChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaGeneratePlayIntegrityChallengeRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaGeneratePlayIntegrityChallengeResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}:exchangeAppAttestAssertion:
    parameters: *ref_1
    post:
      description: >-
        Accepts an App Attest assertion and an artifact previously obtained from
        ExchangeAppAttestAttestation and verifies those with Apple. If valid,
        returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeAppAttestAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaAppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}:generateAppAttestChallenge:
    parameters: *ref_1
    post:
      description: >-
        Generates a challenge that protects the integrity of an immediately
        following call to ExchangeAppAttestAttestation or
        ExchangeAppAttestAssertion. A challenge should not be reused for
        multiple calls.
      operationId: firebaseappcheck.projects.apps.generateAppAttestChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}:exchangeDeviceCheckToken:
    parameters: *ref_1
    post:
      description: >-
        Accepts a
        [`device_token`](https://developer.apple.com/documentation/devicecheck/dcdevice)
        issued by DeviceCheck, and attempts to validate it with Apple. If valid,
        returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeDeviceCheckToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaExchangeDeviceCheckTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaAppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}/recaptchaV3Config:
    parameters: *ref_1
    get:
      description: >-
        Gets the RecaptchaV3Config for the specified app. For security reasons,
        the `site_secret` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.recaptchaV3Config.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaRecaptchaV3Config
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recaptcha_v3_config
      x-stackQL-verb: select
    patch:
      description: >-
        Updates the RecaptchaV3Config for the specified app. While this
        configuration is incomplete or invalid, the app will be unable to
        exchange reCAPTCHA V3 tokens for App Check tokens. For security reasons,
        the `site_secret` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.recaptchaV3Config.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaRecaptchaV3Config
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaRecaptchaV3Config
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: recaptcha_v3_config
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/-/recaptchaV3Config:batchGet:
    parameters: *ref_1
    get:
      description: >-
        Atomically gets the RecaptchaV3Configs for the specified list of apps.
        For security reasons, the `site_secret` field is never populated in the
        response.
      operationId: firebaseappcheck.projects.apps.recaptchaV3Config.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaBatchGetRecaptchaV3ConfigsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: recaptcha_v3_config
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/apps/{appsId}/appAttestConfig:
    parameters: *ref_1
    get:
      description: Gets the AppAttestConfig for the specified app.
      operationId: firebaseappcheck.projects.apps.appAttestConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaAppAttestConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_attest_config
      x-stackQL-verb: select
    patch:
      description: >-
        Updates the AppAttestConfig for the specified app. While this
        configuration is incomplete or invalid, the app will be unable to
        exchange AppAttest tokens for App Check tokens.
      operationId: firebaseappcheck.projects.apps.appAttestConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaAppAttestConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaAppAttestConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: app_attest_config
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/-/appAttestConfig:batchGet:
    parameters: *ref_1
    get:
      description: Atomically gets the AppAttestConfigs for the specified list of apps.
      operationId: firebaseappcheck.projects.apps.appAttestConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaBatchGetAppAttestConfigsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: app_attest_config
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/apps/{appsId}/debugTokens/{debugTokensId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the specified DebugToken. For security reasons, the `token` field
        is never populated in the response.
      operationId: firebaseappcheck.projects.apps.debugTokens.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaDebugToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: debugTokensId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug_tokens
      x-stackQL-verb: select
    patch:
      description: >-
        Updates the specified DebugToken. For security reasons, the `token`
        field cannot be updated, nor will it be populated in the response, but
        you can revoke the debug token using DeleteDebugToken.
      operationId: firebaseappcheck.projects.apps.debugTokens.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaDebugToken'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaDebugToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: debugTokensId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: debug_tokens
      x-stackQL-verb: exec
    delete:
      description: >-
        Deletes the specified DebugToken. A deleted debug token cannot be used
        to exchange for an App Check token. Use this method when you suspect the
        secret `token` has been compromised or when you no longer need the debug
        token.
      operationId: firebaseappcheck.projects.apps.debugTokens.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: debugTokensId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug_tokens
      x-stackQL-verb: delete
  /v1beta/projects/{projectsId}/apps/{appsId}/debugTokens:
    parameters: *ref_1
    get:
      description: >-
        Lists all DebugTokens for the specified app. For security reasons, the
        `token` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.debugTokens.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaListDebugTokensResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: debug_tokens
      x-stackQL-verb: select
    post:
      description: >-
        Creates a new DebugToken for the specified app. For security reasons,
        after the creation operation completes, the `token` field cannot be
        updated or retrieved, but you can revoke the debug token using
        DeleteDebugToken. Each app can have a maximum of 20 debug tokens.
      operationId: firebaseappcheck.projects.apps.debugTokens.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaDebugToken'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaDebugToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug_tokens
      x-stackQL-verb: insert
  /v1beta/projects/{projectsId}/apps/{appsId}/recaptchaEnterpriseConfig:
    parameters: *ref_1
    get:
      description: Gets the RecaptchaEnterpriseConfig for the specified app.
      operationId: firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaRecaptchaEnterpriseConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recaptcha_enterprise_config
      x-stackQL-verb: select
    patch:
      description: >-
        Updates the RecaptchaEnterpriseConfig for the specified app. While this
        configuration is incomplete or invalid, the app will be unable to
        exchange reCAPTCHA Enterprise tokens for App Check tokens.
      operationId: firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaRecaptchaEnterpriseConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaRecaptchaEnterpriseConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: recaptcha_enterprise_config
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/-/recaptchaEnterpriseConfig:batchGet:
    parameters: *ref_1
    get:
      description: >-
        Atomically gets the RecaptchaEnterpriseConfigs for the specified list of
        apps.
      operationId: firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaBatchGetRecaptchaEnterpriseConfigsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: recaptcha_enterprise_config
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/apps/{appsId}/safetyNetConfig:
    parameters: *ref_1
    get:
      description: Gets the SafetyNetConfig for the specified app.
      operationId: firebaseappcheck.projects.apps.safetyNetConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaSafetyNetConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: safety_net_config
      x-stackQL-verb: select
    patch:
      description: >-
        Updates the SafetyNetConfig for the specified app. While this
        configuration is incomplete or invalid, the app will be unable to
        exchange SafetyNet tokens for App Check tokens.
      operationId: firebaseappcheck.projects.apps.safetyNetConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaSafetyNetConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaSafetyNetConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: safety_net_config
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/-/safetyNetConfig:batchGet:
    parameters: *ref_1
    get:
      description: Atomically gets the SafetyNetConfigs for the specified list of apps.
      operationId: firebaseappcheck.projects.apps.safetyNetConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaBatchGetSafetyNetConfigsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: safety_net_config
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/apps/-/deviceCheckConfig:batchGet:
    parameters: *ref_1
    get:
      description: >-
        Atomically gets the DeviceCheckConfigs for the specified list of apps.
        For security reasons, the `private_key` field is never populated in the
        response.
      operationId: firebaseappcheck.projects.apps.deviceCheckConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaBatchGetDeviceCheckConfigsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: device_check_config
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/apps/{appsId}/deviceCheckConfig:
    parameters: *ref_1
    get:
      description: >-
        Gets the DeviceCheckConfig for the specified app. For security reasons,
        the `private_key` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.deviceCheckConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaDeviceCheckConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: device_check_config
      x-stackQL-verb: select
    patch:
      description: >-
        Updates the DeviceCheckConfig for the specified app. While this
        configuration is incomplete or invalid, the app will be unable to
        exchange DeviceCheck tokens for App Check tokens. For security reasons,
        the `private_key` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.deviceCheckConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaDeviceCheckConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaDeviceCheckConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: device_check_config
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/-/playIntegrityConfig:batchGet:
    parameters: *ref_1
    get:
      description: Atomically gets the PlayIntegrityConfigs for the specified list of apps.
      operationId: firebaseappcheck.projects.apps.playIntegrityConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaBatchGetPlayIntegrityConfigsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: play_integrity_config
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/apps/{appsId}/playIntegrityConfig:
    parameters: *ref_1
    get:
      description: Gets the PlayIntegrityConfig for the specified app.
      operationId: firebaseappcheck.projects.apps.playIntegrityConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaPlayIntegrityConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: play_integrity_config
      x-stackQL-verb: select
    patch:
      description: >-
        Updates the PlayIntegrityConfig for the specified app. While this
        configuration is incomplete or invalid, the app will be unable to
        exchange Play Integrity tokens for App Check tokens.
      operationId: firebaseappcheck.projects.apps.playIntegrityConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaPlayIntegrityConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaPlayIntegrityConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: play_integrity_config
      x-stackQL-verb: exec
  /v1beta/projects/{projectsId}/apps/{appsId}/recaptchaConfig:
    parameters: *ref_1
    patch:
      description: >-
        Updates the RecaptchaConfig for the specified app. While this
        configuration is incomplete or invalid, the app will be unable to
        exchange reCAPTCHA tokens for App Check tokens. For security reasons,
        the `site_secret` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.recaptchaConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaRecaptchaConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaRecaptchaConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: recaptcha_config
      x-stackQL-verb: exec
    get:
      description: >-
        Gets the RecaptchaConfig for the specified app. For security reasons,
        the `site_secret` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.recaptchaConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaRecaptchaConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recaptcha_config
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/apps/-/recaptchaConfig:batchGet:
    parameters: *ref_1
    get:
      description: >-
        Atomically gets the RecaptchaConfigs for the specified list of apps. For
        security reasons, the `site_secret` field is never populated in the
        response.
      operationId: firebaseappcheck.projects.apps.recaptchaConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaBatchGetRecaptchaConfigsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: recaptcha_config
      x-stackQL-verb: select
  /v1beta/oauthClients/{oauthClientsId}:exchangeAppAttestAssertion:
    parameters: *ref_1
    post:
      description: >-
        Accepts an App Attest assertion and an artifact previously obtained from
        ExchangeAppAttestAttestation and verifies those with Apple. If valid,
        returns an AppCheckToken.
      operationId: firebaseappcheck.oauthClients.exchangeAppAttestAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1betaAppCheckToken'
      parameters:
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
      x-stackQL-resource: oauth_clients
      x-stackQL-verb: exec
  /v1beta/oauthClients/{oauthClientsId}:exchangeAppAttestAttestation:
    parameters: *ref_1
    post:
      description: >-
        Accepts an App Attest CBOR attestation and verifies it with Apple using
        your preconfigured team and bundle IDs. If valid, returns an attestation
        artifact that can later be exchanged for an AppCheckToken using
        ExchangeAppAttestAssertion. For convenience and performance, this
        method's response object will also contain an AppCheckToken (if the
        verification is successful).
      operationId: firebaseappcheck.oauthClients.exchangeAppAttestAttestation
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationResponse
      parameters:
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
      x-stackQL-resource: oauth_clients
      x-stackQL-verb: exec
  /v1beta/oauthClients/{oauthClientsId}:generateAppAttestChallenge:
    parameters: *ref_1
    post:
      description: >-
        Generates a challenge that protects the integrity of an immediately
        following call to ExchangeAppAttestAttestation or
        ExchangeAppAttestAssertion. A challenge should not be reused for
        multiple calls.
      operationId: firebaseappcheck.oauthClients.generateAppAttestChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1betaGenerateAppAttestChallengeResponse
      parameters:
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
      x-stackQL-resource: oauth_clients
      x-stackQL-verb: exec
